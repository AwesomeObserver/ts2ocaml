[@@@js.dummy "!! This code has been generated by gen_js_api !!"]
[@@@ocaml.warning "-7-32-39"]
[@@@ocaml.warning "-7-11-32-33-39"]
open Ts2ocaml_min
module IteratorYieldResult =
  struct
    type 'TYield t = [ `IteratorYieldResult of 'TYield ] intf
    let rec t_of_js : 'TYield . (Ojs.t -> 'TYield) -> Ojs.t -> 'TYield t =
      fun _TYield -> Obj.magic
    and t_to_js : 'TYield . ('TYield -> Ojs.t) -> 'TYield t -> Ojs.t =
      fun _TYield -> Obj.magic
    type 'TYield t_1 = 'TYield t
    let rec t_1_of_js : 'TYield . (Ojs.t -> 'TYield) -> Ojs.t -> 'TYield t_1
      = fun (type __TYield) ->
      fun (__TYield_of_js : Ojs.t -> __TYield) ->
        fun (x3 : Ojs.t) -> t_of_js __TYield_of_js x3
    and t_1_to_js : 'TYield . ('TYield -> Ojs.t) -> 'TYield t_1 -> Ojs.t =
      fun (type __TYield) ->
      fun (__TYield_to_js : __TYield -> Ojs.t) ->
        fun (x1 : __TYield t) -> t_to_js __TYield_to_js x1
    type 'TYield tags = [ `IteratorYieldResult of 'TYield ]
    type 'TYield tags_1 = 'TYield tags
    type ('tags, 'TYield) this =
      'tags intf constraint 'tags = [> `IteratorYieldResult of 'TYield ]
    let rec this_of_js :
      'tags 'TYield .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'TYield) -> Ojs.t -> ('tags, 'TYield) this
      = fun (type __tags) -> fun (type __TYield) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__TYield_of_js : Ojs.t -> __TYield) ->
          fun (x7 : Ojs.t) -> intf_of_js __tags_of_js x7
    and this_to_js :
      'tags 'TYield .
        ('tags -> Ojs.t) ->
          ('TYield -> Ojs.t) -> ('tags, 'TYield) this -> Ojs.t
      = fun (type __tags) -> fun (type __TYield) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__TYield_to_js : __TYield -> Ojs.t) ->
          fun (x5 : __tags intf) -> intf_to_js __tags_to_js x5
    let (get_done : ('tags, 'TYield) this -> [ `L_b_false ]) =
      fun (x9 : ('tags, 'TYield) this) ->
        let x12 =
          Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x9) "done" in
        match Ojs.bool_of_js x12 with
        | false -> `L_b_false
        | _ -> assert false
    let (set_done : ('tags, 'TYield) this -> [ `L_b_false ] -> unit) =
      fun (x13 : ('tags, 'TYield) this) ->
        fun (x14 : [ `L_b_false ]) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x13) "done"
            (match x14 with | `L_b_false -> Ojs.bool_to_js false)
    let (get_value : ('tags, 'TYield) this -> 'TYield) =
      fun (x17 : ('tags, 'TYield) this) ->
        Obj.magic
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x17) "value")
    let (set_value : ('tags, 'TYield) this -> 'TYield -> unit) =
      fun (x20 : ('tags, 'TYield) this) ->
        fun (x21 : 'TYield) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x20) "value"
            (Obj.magic x21)
    let (create : done_:[ `L_b_false ] -> value:'TYield -> unit -> 'TYield t)
      =
      fun ~done_:(x24 : [ `L_b_false ]) ->
        fun ~value:(x25 : 'TYield) ->
          fun () ->
            let x26 = Ojs.empty_obj () in
            Ojs.set_prop_ascii x26 "done"
              (match x24 with | `L_b_false -> Ojs.bool_to_js false);
            Ojs.set_prop_ascii x26 "value" (Obj.magic x25);
            t_of_js Obj.magic x26
    let cast_from = Obj.magic
  end
module IteratorReturnResult =
  struct
    type 'TReturn t = [ `IteratorReturnResult of 'TReturn ] intf
    let rec t_of_js : 'TReturn . (Ojs.t -> 'TReturn) -> Ojs.t -> 'TReturn t =
      fun _TReturn -> Obj.magic
    and t_to_js : 'TReturn . ('TReturn -> Ojs.t) -> 'TReturn t -> Ojs.t =
      fun _TReturn -> Obj.magic
    type 'TReturn t_1 = 'TReturn t
    let rec t_1_of_js :
      'TReturn . (Ojs.t -> 'TReturn) -> Ojs.t -> 'TReturn t_1 = fun (type
      __TReturn) ->
      fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
        fun (x30 : Ojs.t) -> t_of_js __TReturn_of_js x30
    and t_1_to_js : 'TReturn . ('TReturn -> Ojs.t) -> 'TReturn t_1 -> Ojs.t =
      fun (type __TReturn) ->
      fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
        fun (x28 : __TReturn t) -> t_to_js __TReturn_to_js x28
    type 'TReturn tags = [ `IteratorReturnResult of 'TReturn ]
    type 'TReturn tags_1 = 'TReturn tags
    type ('tags, 'TReturn) this =
      'tags intf constraint 'tags = [> `IteratorReturnResult of 'TReturn ]
    let rec this_of_js :
      'tags 'TReturn .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'TReturn) -> Ojs.t -> ('tags, 'TReturn) this
      = fun (type __tags) -> fun (type __TReturn) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (x34 : Ojs.t) -> intf_of_js __tags_of_js x34
    and this_to_js :
      'tags 'TReturn .
        ('tags -> Ojs.t) ->
          ('TReturn -> Ojs.t) -> ('tags, 'TReturn) this -> Ojs.t
      = fun (type __tags) -> fun (type __TReturn) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (x32 : __tags intf) -> intf_to_js __tags_to_js x32
    let (get_done : ('tags, 'TReturn) this -> [ `L_b_true ]) =
      fun (x36 : ('tags, 'TReturn) this) ->
        let x39 =
          Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x36) "done" in
        match Ojs.bool_of_js x39 with | true -> `L_b_true | _ -> assert false
    let (set_done : ('tags, 'TReturn) this -> [ `L_b_true ] -> unit) =
      fun (x40 : ('tags, 'TReturn) this) ->
        fun (x41 : [ `L_b_true ]) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x40) "done"
            (match x41 with | `L_b_true -> Ojs.bool_to_js true)
    let (get_value : ('tags, 'TReturn) this -> 'TReturn) =
      fun (x44 : ('tags, 'TReturn) this) ->
        Obj.magic
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x44) "value")
    let (set_value : ('tags, 'TReturn) this -> 'TReturn -> unit) =
      fun (x47 : ('tags, 'TReturn) this) ->
        fun (x48 : 'TReturn) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x47) "value"
            (Obj.magic x48)
    let (create :
      done_:[ `L_b_true ] -> value:'TReturn -> unit -> 'TReturn t) =
      fun ~done_:(x51 : [ `L_b_true ]) ->
        fun ~value:(x52 : 'TReturn) ->
          fun () ->
            let x53 = Ojs.empty_obj () in
            Ojs.set_prop_ascii x53 "done"
              (match x51 with | `L_b_true -> Ojs.bool_to_js true);
            Ojs.set_prop_ascii x53 "value" (Obj.magic x52);
            t_of_js Obj.magic x53
    let cast_from = Obj.magic
  end
module IteratorResult =
  struct
    type ('T, 'TReturn) t =
      [ `U_b_false of 'T IteratorYieldResult.t 
      | `U_b_true of 'TReturn IteratorReturnResult.t ]
    let rec t_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (x60 : Ojs.t) ->
            let x61 = x60 in
            match Ojs.bool_of_js (Ojs.get_prop_ascii x61 "done") with
            | false -> `U_b_false (IteratorYieldResult.t_of_js __T_of_js x61)
            | true ->
                `U_b_true (IteratorReturnResult.t_of_js __TReturn_of_js x61)
    and t_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun
            (x55 :
              [ `U_b_false of __T IteratorYieldResult.t 
              | `U_b_true of __TReturn IteratorReturnResult.t ])
            ->
            match x55 with
            | `U_b_false x56 -> IteratorYieldResult.t_to_js __T_to_js x56
            | `U_b_true x58 ->
                IteratorReturnResult.t_to_js __TReturn_to_js x58
    type ('T, 'TReturn) t_2 = ('T, 'TReturn) t
    let rec t_2_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t_2
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (x67 : Ojs.t) -> t_of_js __T_of_js __TReturn_of_js x67
    and t_2_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t_2 -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (x64 : (__T, __TReturn) t) ->
            t_to_js __T_to_js __TReturn_to_js x64
    type 'T t_1 = ('T, any) t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x73 : Ojs.t) -> t_of_js __T_of_js any_of_js x73
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x70 : (__T, any) t) -> t_to_js __T_to_js any_to_js x70
  end
module Iterator =
  struct
    type ('T, 'TReturn, 'TNext) t =
      [ `Iterator of ('T * 'TReturn * 'TNext) ] intf
    let rec t_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    and t_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t -> Ojs.t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    type ('T, 'TReturn, 'TNext) t_3 = ('T, 'TReturn, 'TNext) t
    let rec t_3_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t_3
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (__TNext_of_js : Ojs.t -> __TNext) ->
            fun (x80 : Ojs.t) ->
              t_of_js __T_of_js __TReturn_of_js __TNext_of_js x80
    and t_3_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t_3 -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (__TNext_to_js : __TNext -> Ojs.t) ->
            fun (x76 : (__T, __TReturn, __TNext) t) ->
              t_to_js __T_to_js __TReturn_to_js __TNext_to_js x76
    type ('T, 'TReturn) t_2 = ('T, 'TReturn, never or_undefined) t
    let rec t_2_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t_2
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (x89 : Ojs.t) ->
            t_of_js __T_of_js __TReturn_of_js
              (fun (x92 : Ojs.t) -> or_undefined_of_js never_of_js x92) x89
    and t_2_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t_2 -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (x84 : (__T, __TReturn, never or_undefined) t) ->
            t_to_js __T_to_js __TReturn_to_js
              (fun (x87 : never or_undefined) ->
                 or_undefined_to_js never_to_js x87) x84
    type 'T t_1 = ('T, any, never or_undefined) t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x99 : Ojs.t) ->
          t_of_js __T_of_js any_of_js
            (fun (x102 : Ojs.t) -> or_undefined_of_js never_of_js x102) x99
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x94 : (__T, any, never or_undefined) t) ->
          t_to_js __T_to_js any_to_js
            (fun (x97 : never or_undefined) ->
               or_undefined_to_js never_to_js x97) x94
    type ('T, 'TReturn, 'TNext) tags =
      [ `Iterator of ('T * 'TReturn * 'TNext) ]
    type ('T, 'TReturn, 'TNext) tags_3 = ('T, 'TReturn, 'TNext) tags
    type ('T, 'TReturn) tags_2 = ('T, 'TReturn, never or_undefined) tags
    type 'T tags_1 = ('T, any, never or_undefined) tags
    type ('tags, 'T, 'TReturn, 'TNext) this =
      'tags intf constraint 'tags =
                  [> `Iterator of ('T * 'TReturn * 'TNext) ]
    let rec this_of_js :
      'tags 'T 'TReturn 'TNext .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'T) ->
            (Ojs.t -> 'TReturn) ->
              (Ojs.t -> 'TNext) ->
                Ojs.t -> ('tags, 'T, 'TReturn, 'TNext) this
      = fun (type __tags) -> fun (type __T) -> fun (type __TReturn) -> fun
      (type __TNext) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
            fun (__TNext_of_js : Ojs.t -> __TNext) ->
              fun (x106 : Ojs.t) -> intf_of_js __tags_of_js x106
    and this_to_js :
      'tags 'T 'TReturn 'TNext .
        ('tags -> Ojs.t) ->
          ('T -> Ojs.t) ->
            ('TReturn -> Ojs.t) ->
              ('TNext -> Ojs.t) ->
                ('tags, 'T, 'TReturn, 'TNext) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) -> fun (type __TReturn) -> fun
      (type __TNext) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
            fun (__TNext_to_js : __TNext -> Ojs.t) ->
              fun (x104 : __tags intf) -> intf_to_js __tags_to_js x104
    let (next :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        args:any list -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x111 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~args:(x108 : any list) ->
          IteratorResult.t_of_js Obj.magic Obj.magic
            (let x116 =
               this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x111 in
             Ojs.call (Ojs.get_prop_ascii x116 "next") "apply"
               [|x116;((let x109 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x110 : any) ->
                             ignore
                               (Ojs.call x109 "push" [|(any_to_js x110)|]))
                          x108;
                        x109))|])
    let (return :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        ?value:'TReturn -> unit -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x122 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ?value:(x119 : 'TReturn option) ->
          fun () ->
            IteratorResult.t_of_js Obj.magic Obj.magic
              (let x127 =
                 this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x122 in
               Ojs.call (Ojs.get_prop_ascii x127 "return") "apply"
                 [|x127;((let x120 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x119 with
                           | Some x121 ->
                               ignore
                                 (Ojs.call x120 "push" [|(Obj.magic x121)|])
                           | None -> ());
                          x120))|])
    let (throw :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        ?e:any -> unit -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x133 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ?e:(x130 : any option) ->
          fun () ->
            IteratorResult.t_of_js Obj.magic Obj.magic
              (let x138 =
                 this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x133 in
               Ojs.call (Ojs.get_prop_ascii x138 "throw") "apply"
                 [|x138;((let x131 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x130 with
                           | Some x132 ->
                               ignore
                                 (Ojs.call x131 "push" [|(any_to_js x132)|])
                           | None -> ());
                          x131))|])
    let cast_from = Obj.magic
  end
module Iterable =
  struct
    type 'T t = [ `Iterable of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x143 : Ojs.t) -> t_of_js __T_of_js x143
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x141 : __T t) -> t_to_js __T_to_js x141
    type 'T tags = [ `Iterable of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `Iterable of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x147 : Ojs.t) -> intf_of_js __tags_of_js x147
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x145 : __tags intf) -> intf_to_js __tags_to_js x145
    let cast_from = Obj.magic
  end
module WeakSet =
  struct
    type 'T t = [ `WeakSet of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x151 : Ojs.t) -> t_of_js __T_of_js x151
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x149 : __T t) -> t_to_js __T_to_js x149
    type 'T tags = [ `WeakSet of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this = 'tags intf constraint 'tags = [> `WeakSet of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x155 : Ojs.t) -> intf_of_js __tags_of_js x155
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x153 : __tags intf) -> intf_to_js __tags_to_js x153
    let (add : ('tags, 'T) this -> value:'T -> ('tags, 'T) this) =
      fun (x158 : ('tags, 'T) this) ->
        fun ~value:(x157 : 'T) ->
          this_of_js Obj.magic Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x158) "add"
               [|(Obj.magic x157)|])
    let (delete : ('tags, 'T) this -> value:'T -> bool) =
      fun (x164 : ('tags, 'T) this) ->
        fun ~value:(x163 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x164) "delete"
               [|(Obj.magic x163)|])
    let (has : ('tags, 'T) this -> value:'T -> bool) =
      fun (x168 : ('tags, 'T) this) ->
        fun ~value:(x167 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x168) "has"
               [|(Obj.magic x167)|])
    let (create : 'T Iterable.t -> 'T t) =
      fun (x171 : 'T Iterable.t) ->
        t_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WeakSet")
             [|(Iterable.t_to_js Obj.magic x171)|])
    let (create' : ?values:'T list or_null -> unit -> 'T t) =
      fun ?values:(x174 : 'T list or_null option) ->
        fun () ->
          t_of_js Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "WeakSet")
               (let x175 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x174 with
                 | Some x176 ->
                     ignore
                       (Ojs.call x175 "push"
                          [|(or_null_to_js
                               (fun (x177 : 'T list) ->
                                  Ojs.list_to_js Obj.magic x177) x176)|])
                 | None -> ());
                x175))
    let (prototype : unit -> untyped_object t) =
      fun () ->
        t_of_js untyped_object_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakSet")
             "prototype")
    let cast_from = Obj.magic
  end
module WeakRef =
  struct
    type 'T t = [ `WeakRef of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x183 : Ojs.t) -> t_of_js __T_of_js x183
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x181 : __T t) -> t_to_js __T_to_js x181
    type 'T tags = [ `WeakRef of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this = 'tags intf constraint 'tags = [> `WeakRef of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x187 : Ojs.t) -> intf_of_js __tags_of_js x187
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x185 : __tags intf) -> intf_to_js __tags_to_js x185
    let (deref : ('tags, 'T) this -> 'T or_undefined) =
      fun (x189 : ('tags, 'T) this) ->
        or_undefined_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x189) "deref" [||])
    let (deref' : ('tags, 'T) this -> 'T or_undefined) =
      fun (x193 : ('tags, 'T) this) ->
        or_undefined_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x193) "deref" [||])
    let (prototype : unit -> any t) =
      fun () ->
        t_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakRef")
             "prototype")
    let (create : ?target:'T -> unit -> 'T t) =
      fun ?target:(x198 : 'T option) ->
        fun () ->
          t_of_js Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "WeakRef")
               (let x199 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x198 with
                 | Some x200 ->
                     ignore (Ojs.call x199 "push" [|(Obj.magic x200)|])
                 | None -> ());
                x199))
    let (prototype' : unit -> any t) =
      fun () ->
        t_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakRef")
             "prototype")
    let (create' : 'T -> 'T t) =
      fun (x203 : 'T) ->
        t_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WeakRef")
             [|(Obj.magic x203)|])
    let cast_from = Obj.magic
  end
module WeakMap =
  struct
    type ('K, 'V) t = [ `WeakMap of ('K * 'V) ] intf
    let rec t_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) t =
      fun _K -> fun _V -> Obj.magic
    and t_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) t -> Ojs.t =
      fun _K -> fun _V -> Obj.magic
    type ('K, 'V) t_2 = ('K, 'V) t
    let rec t_2_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) t_2 = fun
      (type __K) -> fun (type __V) ->
      fun (__K_of_js : Ojs.t -> __K) ->
        fun (__V_of_js : Ojs.t -> __V) ->
          fun (x208 : Ojs.t) -> t_of_js __K_of_js __V_of_js x208
    and t_2_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) t_2 -> Ojs.t = fun
      (type __K) -> fun (type __V) ->
      fun (__K_to_js : __K -> Ojs.t) ->
        fun (__V_to_js : __V -> Ojs.t) ->
          fun (x205 : (__K, __V) t) -> t_to_js __K_to_js __V_to_js x205
    type ('K, 'V) tags = [ `WeakMap of ('K * 'V) ]
    type ('K, 'V) tags_2 = ('K, 'V) tags
    type ('tags, 'K, 'V) this =
      'tags intf constraint 'tags = [> `WeakMap of ('K * 'V) ]
    let rec this_of_js :
      'tags 'K 'V .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('tags, 'K, 'V) this
      = fun (type __tags) -> fun (type __K) -> fun (type __V) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__K_of_js : Ojs.t -> __K) ->
          fun (__V_of_js : Ojs.t -> __V) ->
            fun (x213 : Ojs.t) -> intf_of_js __tags_of_js x213
    and this_to_js :
      'tags 'K 'V .
        ('tags -> Ojs.t) ->
          ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('tags, 'K, 'V) this -> Ojs.t
      = fun (type __tags) -> fun (type __K) -> fun (type __V) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__K_to_js : __K -> Ojs.t) ->
          fun (__V_to_js : __V -> Ojs.t) ->
            fun (x211 : __tags intf) -> intf_to_js __tags_to_js x211
    let (delete : ('tags, 'K, 'V) this -> key:'K -> bool) =
      fun (x216 : ('tags, 'K, 'V) this) ->
        fun ~key:(x215 : 'K) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x216)
               "delete" [|(Obj.magic x215)|])
    let (get_ : ('tags, 'K, 'V) this -> key:'K -> 'V or_undefined) =
      fun (x221 : ('tags, 'K, 'V) this) ->
        fun ~key:(x220 : 'K) ->
          or_undefined_of_js Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x221) "get"
               [|(Obj.magic x220)|])
    let (has : ('tags, 'K, 'V) this -> key:'K -> bool) =
      fun (x227 : ('tags, 'K, 'V) this) ->
        fun ~key:(x226 : 'K) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x227) "has"
               [|(Obj.magic x226)|])
    let (set_ :
      ('tags, 'K, 'V) this -> key:'K -> value:'V -> ('tags, 'K, 'V) this) =
      fun (x233 : ('tags, 'K, 'V) this) ->
        fun ~key:(x231 : 'K) ->
          fun ~value:(x232 : 'V) ->
            this_of_js Obj.magic Obj.magic Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x233) "set"
                 [|(Obj.magic x231);(Obj.magic x232)|])
    let (create : ('K * 'V) Iterable.t -> ('K, 'V) t) =
      fun (x240 : ('K * 'V) Iterable.t) ->
        t_of_js Obj.magic Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WeakMap")
             [|(Iterable.t_to_js
                  (fun (x241 : ('K * 'V)) ->
                     let (x242, x243) = x241 in
                     let x244 = Ojs.array_make 2 in
                     Ojs.array_set x244 0 (Obj.magic x242);
                     Ojs.array_set x244 1 (Obj.magic x243);
                     x244) x240)|])
    let (create' : ?entries:('K * 'V) list or_null -> unit -> ('K, 'V) t) =
      fun ?entries:(x247 : ('K * 'V) list or_null option) ->
        fun () ->
          t_of_js Obj.magic Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "WeakMap")
               (let x248 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x247 with
                 | Some x249 ->
                     ignore
                       (Ojs.call x248 "push"
                          [|(or_null_to_js
                               (fun (x250 : ('K * 'V) list) ->
                                  Ojs.list_to_js
                                    (fun (x251 : ('K * 'V)) ->
                                       let (x252, x253) = x251 in
                                       let x254 = Ojs.array_make 2 in
                                       Ojs.array_set x254 0 (Obj.magic x252);
                                       Ojs.array_set x254 1 (Obj.magic x253);
                                       x254) x250) x249)|])
                 | None -> ());
                x248))
    let (prototype : unit -> (untyped_object, any) t) =
      fun () ->
        t_of_js untyped_object_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakMap")
             "prototype")
    let cast_from = Obj.magic
  end
module Uppercase =
  struct
    type 'S t = Ojs.t
    let rec t_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t = fun (type __S) ->
      fun (__S_of_js : Ojs.t -> __S) -> fun (x260 : Ojs.t) -> x260
    and t_to_js : 'S . ('S -> Ojs.t) -> 'S t -> Ojs.t = fun (type __S) ->
      fun (__S_to_js : __S -> Ojs.t) -> fun (x259 : Ojs.t) -> x259
    type 'S t_1 = 'S t
    let rec t_1_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t_1 = fun (type
      __S) ->
      fun (__S_of_js : Ojs.t -> __S) ->
        fun (x263 : Ojs.t) -> t_of_js __S_of_js x263
    and t_1_to_js : 'S . ('S -> Ojs.t) -> 'S t_1 -> Ojs.t = fun (type __S) ->
      fun (__S_to_js : __S -> Ojs.t) ->
        fun (x261 : __S t) -> t_to_js __S_to_js x261
  end
module Uncapitalize =
  struct
    type 'S t = Ojs.t
    let rec t_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t = fun (type __S) ->
      fun (__S_of_js : Ojs.t -> __S) -> fun (x266 : Ojs.t) -> x266
    and t_to_js : 'S . ('S -> Ojs.t) -> 'S t -> Ojs.t = fun (type __S) ->
      fun (__S_to_js : __S -> Ojs.t) -> fun (x265 : Ojs.t) -> x265
    type 'S t_1 = 'S t
    let rec t_1_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t_1 = fun (type
      __S) ->
      fun (__S_of_js : Ojs.t -> __S) ->
        fun (x269 : Ojs.t) -> t_of_js __S_of_js x269
    and t_1_to_js : 'S . ('S -> Ojs.t) -> 'S t_1 -> Ojs.t = fun (type __S) ->
      fun (__S_to_js : __S -> Ojs.t) ->
        fun (x267 : __S t) -> t_to_js __S_to_js x267
  end
module SharedArrayBuffer =
  struct
    type t = [ `SharedArrayBuffer ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x272 : Ojs.t) -> t_of_js x272
    and t_0_to_js : t_0 -> Ojs.t = fun (x271 : t) -> t_to_js x271
    type tags = [ `SharedArrayBuffer ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `SharedArrayBuffer ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x275 : Ojs.t) -> intf_of_js __tags_of_js x275
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x273 : __tags intf) -> intf_to_js __tags_to_js x273
    let (get_byteLength : 'tags this -> float) =
      fun (x277 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x277) "byteLength")
    let (slice : 'tags this -> begin_:float -> ?end_:float -> unit -> t) =
      fun (x283 : 'tags this) ->
        fun ~begin_:(x279 : float) ->
          fun ?end_:(x280 : float option) ->
            fun () ->
              t_of_js
                (let x285 = this_to_js Obj.magic x283 in
                 Ojs.call (Ojs.get_prop_ascii x285 "slice") "apply"
                   [|x285;((let x281 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x281 "push"
                                 [|(Ojs.float_to_js x279)|]);
                            (match x280 with
                             | Some x282 ->
                                 ignore
                                   (Ojs.call x281 "push"
                                      [|(Ojs.float_to_js x282)|])
                             | None -> ());
                            x281))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "SharedArrayBuffer") "prototype")
    let (create : float -> t) =
      fun (x286 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "SharedArrayBuffer")
             [|(Ojs.float_to_js x286)|])
    let cast_from = Obj.magic
  end
module ArrayBuffer =
  struct
    type t = [ `ArrayBuffer ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x288 : Ojs.t) -> t_of_js x288
    and t_0_to_js : t_0 -> Ojs.t = fun (x287 : t) -> t_to_js x287
    type tags = [ `ArrayBuffer ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ArrayBuffer ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x291 : Ojs.t) -> intf_of_js __tags_of_js x291
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x289 : __tags intf) -> intf_to_js __tags_to_js x289
    let (get_byteLength : 'tags this -> float) =
      fun (x293 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x293) "byteLength")
    let (slice : 'tags this -> begin_:float -> ?end_:float -> unit -> t) =
      fun (x299 : 'tags this) ->
        fun ~begin_:(x295 : float) ->
          fun ?end_:(x296 : float option) ->
            fun () ->
              t_of_js
                (let x301 = this_to_js Obj.magic x299 in
                 Ojs.call (Ojs.get_prop_ascii x301 "slice") "apply"
                   [|x301;((let x297 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x297 "push"
                                 [|(Ojs.float_to_js x295)|]);
                            (match x296 with
                             | Some x298 ->
                                 ignore
                                   (Ojs.call x297 "push"
                                      [|(Ojs.float_to_js x298)|])
                             | None -> ());
                            x297))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "ArrayBuffer")
             "prototype")
    let (create : float -> t) =
      fun (x302 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "ArrayBuffer")
             [|(Ojs.float_to_js x302)|])
    let (isView : any -> bool) =
      fun (x303 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "ArrayBuffer") "isView"
             [|(any_to_js x303)|])
    let cast_from = Obj.magic
  end
module ArrayBufferLike =
  struct
    type t = (ArrayBuffer.t, SharedArrayBuffer.t) union2
    let rec t_of_js : Ojs.t -> t =
      fun (x307 : Ojs.t) ->
        union2_of_js ArrayBuffer.t_of_js SharedArrayBuffer.t_of_js x307
    and t_to_js : t -> Ojs.t =
      fun (x304 : (ArrayBuffer.t, SharedArrayBuffer.t) union2) ->
        union2_to_js ArrayBuffer.t_to_js SharedArrayBuffer.t_to_js x304
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x311 : Ojs.t) -> t_of_js x311
    and t_0_to_js : t_0 -> Ojs.t = fun (x310 : t) -> t_to_js x310
  end
module IterableIterator =
  struct
    type 'T t =
      [ `IterableIterator of 'T 
      | `Iterator of ('T * any * never or_undefined) ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x314 : Ojs.t) -> t_of_js __T_of_js x314
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x312 : __T t) -> t_to_js __T_to_js x312
    type 'T tags =
      [ `IterableIterator of 'T 
      | `Iterator of ('T * any * never or_undefined) ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `IterableIterator of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x318 : Ojs.t) -> intf_of_js __tags_of_js x318
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x316 : __tags intf) -> intf_to_js __tags_to_js x316
    let cast_from = Obj.magic
  end
module ArrayLike =
  struct
    type 'T t = [ `ArrayLike of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x322 : Ojs.t) -> t_of_js __T_of_js x322
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x320 : __T t) -> t_to_js __T_to_js x320
    type 'T tags = [ `ArrayLike of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ArrayLike of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x326 : Ojs.t) -> intf_of_js __tags_of_js x326
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x324 : __tags intf) -> intf_to_js __tags_to_js x324
    let (get_length : ('tags, 'T) this -> float) =
      fun (x328 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x328) "length")
    let (get : ('tags, 'T) this -> float -> 'T) =
      fun (x331 : ('tags, 'T) this) ->
        fun (x334 : float) ->
          Obj.magic
            (Ojs.get_prop (this_to_js Obj.magic Obj.magic x331)
               (Ojs.float_to_js x334))
    let cast_from = Obj.magic
  end
module Uint8ClampedArray =
  struct
    type t =
      [ `Uint8ClampedArray  | float ArrayLike.tags_1
      | float IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x336 : Ojs.t) -> t_of_js x336
    and t_0_to_js : t_0 -> Ojs.t = fun (x335 : t) -> t_to_js x335
    type tags =
      [ `Uint8ClampedArray  | float ArrayLike.tags_1
      | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Uint8ClampedArray ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x339 : Ojs.t) -> intf_of_js __tags_of_js x339
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x337 : __tags intf) -> intf_to_js __tags_to_js x337
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x345 : 'tags this) ->
        fun ~searchElement:(x341 : float) ->
          fun ?fromIndex:(x342 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x347 = this_to_js Obj.magic x345 in
                 Ojs.call (Ojs.get_prop_ascii x347 "includes") "apply"
                   [|x347;((let x343 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x343 "push"
                                 [|(Ojs.float_to_js x341)|]);
                            (match x342 with
                             | Some x344 ->
                                 ignore
                                   (Ojs.call x343 "push"
                                      [|(Ojs.float_to_js x344)|])
                             | None -> ());
                            x343))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x348 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x350 : Ojs.t) ->
             let x351 = x350 in
             ((Ojs.float_of_js (Ojs.array_get x351 0)),
               (Ojs.float_of_js (Ojs.array_get x351 1))))
          (Ojs.call (this_to_js Obj.magic x348) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x352 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x352) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x355 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x355) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x358 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x358) "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x360 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x360) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x362 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x362) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x364 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x364) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x371 : 'tags this) ->
        fun ~target:(x366 : float) ->
          fun ~start:(x367 : float) ->
            fun ?end_:(x368 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x373 = this_to_js Obj.magic x371 in
                   Ojs.call (Ojs.get_prop_ascii x373 "copyWithin") "apply"
                     [|x373;((let x369 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x369 "push"
                                   [|(Ojs.float_to_js x366)|]);
                              ignore
                                (Ojs.call x369 "push"
                                   [|(Ojs.float_to_js x367)|]);
                              (match x368 with
                               | Some x370 ->
                                   ignore
                                     (Ojs.call x369 "push"
                                        [|(Ojs.float_to_js x370)|])
                               | None -> ());
                              x369))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x382 : 'tags this) ->
        fun
          ~predicate:(x375 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x376 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x384 = this_to_js Obj.magic x382 in
                 Ojs.call (Ojs.get_prop_ascii x384 "every") "apply"
                   [|x384;((let x377 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x377 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x379 : Ojs.t) ->
                                         fun (x380 : Ojs.t) ->
                                           fun (x381 : Ojs.t) ->
                                             unknown_to_js
                                               (x375
                                                  ~value:(Ojs.float_of_js
                                                            x379)
                                                  ~index:(Ojs.float_of_js
                                                            x380)
                                                  ~array:(t_of_js x381))))|]);
                            (match x376 with
                             | Some x378 ->
                                 ignore
                                   (Ojs.call x377 "push" [|(any_to_js x378)|])
                             | None -> ());
                            x377))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x391 : 'tags this) ->
        fun ~value:(x385 : float) ->
          fun ?start:(x386 : float option) ->
            fun ?end_:(x387 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x393 = this_to_js Obj.magic x391 in
                   Ojs.call (Ojs.get_prop_ascii x393 "fill") "apply"
                     [|x393;((let x388 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x388 "push"
                                   [|(Ojs.float_to_js x385)|]);
                              (match x386 with
                               | Some x390 ->
                                   ignore
                                     (Ojs.call x388 "push"
                                        [|(Ojs.float_to_js x390)|])
                               | None -> ());
                              (match x387 with
                               | Some x389 ->
                                   ignore
                                     (Ojs.call x388 "push"
                                        [|(Ojs.float_to_js x389)|])
                               | None -> ());
                              x388))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x402 : 'tags this) ->
        fun ~predicate:(x395 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x396 : any option) ->
            fun () ->
              t_of_js
                (let x404 = this_to_js Obj.magic x402 in
                 Ojs.call (Ojs.get_prop_ascii x404 "filter") "apply"
                   [|x404;((let x397 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x397 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x399 : Ojs.t) ->
                                         fun (x400 : Ojs.t) ->
                                           fun (x401 : Ojs.t) ->
                                             any_to_js
                                               (x395
                                                  ~value:(Ojs.float_of_js
                                                            x399)
                                                  ~index:(Ojs.float_of_js
                                                            x400)
                                                  ~array:(t_of_js x401))))|]);
                            (match x396 with
                             | Some x398 ->
                                 ignore
                                   (Ojs.call x397 "push" [|(any_to_js x398)|])
                             | None -> ());
                            x397))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x412 : 'tags this) ->
        fun ~predicate:(x405 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x406 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x414 = this_to_js Obj.magic x412 in
                 Ojs.call (Ojs.get_prop_ascii x414 "find") "apply"
                   [|x414;((let x407 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x407 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x409 : Ojs.t) ->
                                         fun (x410 : Ojs.t) ->
                                           fun (x411 : Ojs.t) ->
                                             Ojs.bool_to_js
                                               (x405
                                                  ~value:(Ojs.float_of_js
                                                            x409)
                                                  ~index:(Ojs.float_of_js
                                                            x410)
                                                  ~obj:(t_of_js x411))))|]);
                            (match x406 with
                             | Some x408 ->
                                 ignore
                                   (Ojs.call x407 "push" [|(any_to_js x408)|])
                             | None -> ());
                            x407))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x423 : 'tags this) ->
        fun ~predicate:(x416 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x417 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x425 = this_to_js Obj.magic x423 in
                 Ojs.call (Ojs.get_prop_ascii x425 "findIndex") "apply"
                   [|x425;((let x418 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x418 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x420 : Ojs.t) ->
                                         fun (x421 : Ojs.t) ->
                                           fun (x422 : Ojs.t) ->
                                             Ojs.bool_to_js
                                               (x416
                                                  ~value:(Ojs.float_of_js
                                                            x420)
                                                  ~index:(Ojs.float_of_js
                                                            x421)
                                                  ~obj:(t_of_js x422))))|]);
                            (match x417 with
                             | Some x419 ->
                                 ignore
                                   (Ojs.call x418 "push" [|(any_to_js x419)|])
                             | None -> ());
                            x418))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x433 : 'tags this) ->
        fun
          ~callbackfn:(x426 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x427 : any option) ->
            fun () ->
              ignore
                (let x435 = this_to_js Obj.magic x433 in
                 Ojs.call (Ojs.get_prop_ascii x435 "forEach") "apply"
                   [|x435;((let x428 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x428 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x430 : Ojs.t) ->
                                         fun (x431 : Ojs.t) ->
                                           fun (x432 : Ojs.t) ->
                                             x426
                                               ~value:(Ojs.float_of_js x430)
                                               ~index:(Ojs.float_of_js x431)
                                               ~array:(t_of_js x432)))|]);
                            (match x427 with
                             | Some x429 ->
                                 ignore
                                   (Ojs.call x428 "push" [|(any_to_js x429)|])
                             | None -> ());
                            x428))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x440 : 'tags this) ->
        fun ~searchElement:(x436 : float) ->
          fun ?fromIndex:(x437 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x442 = this_to_js Obj.magic x440 in
                 Ojs.call (Ojs.get_prop_ascii x442 "indexOf") "apply"
                   [|x442;((let x438 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x438 "push"
                                 [|(Ojs.float_to_js x436)|]);
                            (match x437 with
                             | Some x439 ->
                                 ignore
                                   (Ojs.call x438 "push"
                                      [|(Ojs.float_to_js x439)|])
                             | None -> ());
                            x438))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x446 : 'tags this) ->
        fun ?separator:(x443 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x448 = this_to_js Obj.magic x446 in
               Ojs.call (Ojs.get_prop_ascii x448 "join") "apply"
                 [|x448;((let x444 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x443 with
                           | Some x445 ->
                               ignore
                                 (Ojs.call x444 "push"
                                    [|(Ojs.string_to_js x445)|])
                           | None -> ());
                          x444))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x453 : 'tags this) ->
        fun ~searchElement:(x449 : float) ->
          fun ?fromIndex:(x450 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x455 = this_to_js Obj.magic x453 in
                 Ojs.call (Ojs.get_prop_ascii x455 "lastIndexOf") "apply"
                   [|x455;((let x451 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x451 "push"
                                 [|(Ojs.float_to_js x449)|]);
                            (match x450 with
                             | Some x452 ->
                                 ignore
                                   (Ojs.call x451 "push"
                                      [|(Ojs.float_to_js x452)|])
                             | None -> ());
                            x451))|])
    let (get_length : 'tags this -> float) =
      fun (x456 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x456) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x465 : 'tags this) ->
        fun
          ~callbackfn:(x458 : value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x459 : any option) ->
            fun () ->
              t_of_js
                (let x467 = this_to_js Obj.magic x465 in
                 Ojs.call (Ojs.get_prop_ascii x467 "map") "apply"
                   [|x467;((let x460 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x460 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x462 : Ojs.t) ->
                                         fun (x463 : Ojs.t) ->
                                           fun (x464 : Ojs.t) ->
                                             Ojs.float_to_js
                                               (x458
                                                  ~value:(Ojs.float_of_js
                                                            x462)
                                                  ~index:(Ojs.float_of_js
                                                            x463)
                                                  ~array:(t_of_js x464))))|]);
                            (match x459 with
                             | Some x461 ->
                                 ignore
                                   (Ojs.call x460 "push" [|(any_to_js x461)|])
                             | None -> ());
                            x460))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x473 : 'tags this) ->
        fun
          ~callbackfn:(x468 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x473) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x469 : Ojs.t) ->
                       fun (x470 : Ojs.t) ->
                         fun (x471 : Ojs.t) ->
                           fun (x472 : Ojs.t) ->
                             Ojs.float_to_js
                               (x468 ~previousValue:(Ojs.float_of_js x469)
                                  ~currentValue:(Ojs.float_of_js x470)
                                  ~currentIndex:(Ojs.float_of_js x471)
                                  ~array:(t_of_js x472))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x481 : 'tags this) ->
        fun
          ~callbackfn:(x475 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x480 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x481) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x476 : Ojs.t) ->
                         fun (x477 : Ojs.t) ->
                           fun (x478 : Ojs.t) ->
                             fun (x479 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x475 ~previousValue:(Ojs.float_of_js x476)
                                    ~currentValue:(Ojs.float_of_js x477)
                                    ~currentIndex:(Ojs.float_of_js x478)
                                    ~array:(t_of_js x479))));(Ojs.float_to_js
                                                                x480)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x489 : 'tags this) ->
        fun
          ~callbackfn:(x483 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x488 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x489) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x484 : Ojs.t) ->
                         fun (x485 : Ojs.t) ->
                           fun (x486 : Ojs.t) ->
                             fun (x487 : Ojs.t) ->
                               Obj.magic
                                 (x483 ~previousValue:(Obj.magic x484)
                                    ~currentValue:(Ojs.float_of_js x485)
                                    ~currentIndex:(Ojs.float_of_js x486)
                                    ~array:(t_of_js x487))));(Obj.magic x488)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x496 : 'tags this) ->
        fun
          ~callbackfn:(x491 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x496) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x492 : Ojs.t) ->
                       fun (x493 : Ojs.t) ->
                         fun (x494 : Ojs.t) ->
                           fun (x495 : Ojs.t) ->
                             Ojs.float_to_js
                               (x491 ~previousValue:(Ojs.float_of_js x492)
                                  ~currentValue:(Ojs.float_of_js x493)
                                  ~currentIndex:(Ojs.float_of_js x494)
                                  ~array:(t_of_js x495))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x504 : 'tags this) ->
        fun
          ~callbackfn:(x498 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x503 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x504) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x499 : Ojs.t) ->
                         fun (x500 : Ojs.t) ->
                           fun (x501 : Ojs.t) ->
                             fun (x502 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x498 ~previousValue:(Ojs.float_of_js x499)
                                    ~currentValue:(Ojs.float_of_js x500)
                                    ~currentIndex:(Ojs.float_of_js x501)
                                    ~array:(t_of_js x502))));(Ojs.float_to_js
                                                                x503)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x512 : 'tags this) ->
        fun
          ~callbackfn:(x506 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x511 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x512) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x507 : Ojs.t) ->
                         fun (x508 : Ojs.t) ->
                           fun (x509 : Ojs.t) ->
                             fun (x510 : Ojs.t) ->
                               Obj.magic
                                 (x506 ~previousValue:(Obj.magic x507)
                                    ~currentValue:(Ojs.float_of_js x508)
                                    ~currentIndex:(Ojs.float_of_js x509)
                                    ~array:(t_of_js x510))));(Obj.magic x511)|])
    let (reverse : 'tags this -> t) =
      fun (x514 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x514) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x521 : 'tags this) ->
        fun ~array:(x516 : float ArrayLike.t) ->
          fun ?offset:(x517 : float option) ->
            fun () ->
              ignore
                (let x523 = this_to_js Obj.magic x521 in
                 Ojs.call (Ojs.get_prop_ascii x523 "set") "apply"
                   [|x523;((let x518 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x518 "push"
                                 [|(ArrayLike.t_to_js Ojs.float_to_js x516)|]);
                            (match x517 with
                             | Some x519 ->
                                 ignore
                                   (Ojs.call x518 "push"
                                      [|(Ojs.float_to_js x519)|])
                             | None -> ());
                            x518))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x529 : 'tags this) ->
        fun ?start:(x524 : float option) ->
          fun ?end_:(x525 : float option) ->
            fun () ->
              t_of_js
                (let x531 = this_to_js Obj.magic x529 in
                 Ojs.call (Ojs.get_prop_ascii x531 "slice") "apply"
                   [|x531;((let x526 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x524 with
                             | Some x528 ->
                                 ignore
                                   (Ojs.call x526 "push"
                                      [|(Ojs.float_to_js x528)|])
                             | None -> ());
                            (match x525 with
                             | Some x527 ->
                                 ignore
                                   (Ojs.call x526 "push"
                                      [|(Ojs.float_to_js x527)|])
                             | None -> ());
                            x526))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x539 : 'tags this) ->
        fun
          ~predicate:(x532 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x533 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x541 = this_to_js Obj.magic x539 in
                 Ojs.call (Ojs.get_prop_ascii x541 "some") "apply"
                   [|x541;((let x534 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x534 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x536 : Ojs.t) ->
                                         fun (x537 : Ojs.t) ->
                                           fun (x538 : Ojs.t) ->
                                             unknown_to_js
                                               (x532
                                                  ~value:(Ojs.float_of_js
                                                            x536)
                                                  ~index:(Ojs.float_of_js
                                                            x537)
                                                  ~array:(t_of_js x538))))|]);
                            (match x533 with
                             | Some x535 ->
                                 ignore
                                   (Ojs.call x534 "push" [|(any_to_js x535)|])
                             | None -> ());
                            x534))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x547 : 'tags this) ->
        fun ?compareFn:(x542 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x549 = this_to_js Obj.magic x547 in
               Ojs.call (Ojs.get_prop_ascii x549 "sort") "apply"
                 [|x549;((let x543 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x542 with
                           | Some x544 ->
                               ignore
                                 (Ojs.call x543 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x545 : Ojs.t) ->
                                            fun (x546 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x544
                                                   ~a:(Ojs.float_of_js x545)
                                                   ~b:(Ojs.float_of_js x546))))|])
                           | None -> ());
                          x543))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x556 : 'tags this) ->
        fun ?begin_:(x551 : float option) ->
          fun ?end_:(x552 : float option) ->
            fun () ->
              t_of_js
                (let x558 = this_to_js Obj.magic x556 in
                 Ojs.call (Ojs.get_prop_ascii x558 "subarray") "apply"
                   [|x558;((let x553 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x551 with
                             | Some x555 ->
                                 ignore
                                   (Ojs.call x553 "push"
                                      [|(Ojs.float_to_js x555)|])
                             | None -> ());
                            (match x552 with
                             | Some x554 ->
                                 ignore
                                   (Ojs.call x553 "push"
                                      [|(Ojs.float_to_js x554)|])
                             | None -> ());
                            x553))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x559 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x559) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x561 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x561) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x563 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x563) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x565 : 'tags this) ->
        fun (x567 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x565) (Ojs.float_to_js x567))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x568 : 'tags this) ->
        fun (x570 : float) ->
          fun (x571 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x568) (Ojs.float_to_js x570)
              (Ojs.float_to_js x571)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             [||])
    let (create' : float Iterable.t -> t) =
      fun (x572 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             [|(Iterable.t_to_js Ojs.float_to_js x572)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x574 : float Iterable.t) ->
        fun ?mapfn:(x575 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x576 : any option) ->
            fun () ->
              t_of_js
                (let x583 = Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray" in
                 Ojs.call (Ojs.get_prop_ascii x583 "from") "apply"
                   [|x583;((let x577 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x577 "push"
                                 [|(Iterable.t_to_js Ojs.float_to_js x574)|]);
                            (match x575 with
                             | Some x579 ->
                                 ignore
                                   (Ojs.call x577 "push"
                                      [|(Ojs.fun_to_js 2
                                           (fun (x580 : Ojs.t) ->
                                              fun (x581 : Ojs.t) ->
                                                Ojs.float_to_js
                                                  (x579
                                                     ~v:(Ojs.float_of_js x580)
                                                     ~k:(Ojs.float_of_js x581))))|])
                             | None -> ());
                            (match x576 with
                             | Some x578 ->
                                 ignore
                                   (Ojs.call x577 "push" [|(any_to_js x578)|])
                             | None -> ());
                            x577))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray") "prototype")
    let (create'' : float -> t) =
      fun (x584 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             [|(Ojs.float_to_js x584)|])
    let (create''' : (ArrayBufferLike.t, float ArrayLike.t) union2 -> t) =
      fun (x585 : (ArrayBufferLike.t, float ArrayLike.t) union2) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             [|(union2_to_js ArrayBufferLike.t_to_js
                  (fun (x587 : float ArrayLike.t) ->
                     ArrayLike.t_to_js Ojs.float_to_js x587) x585)|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x589 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x590 : float option) ->
          fun ?length:(x591 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
                   (let x592 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x592 "push"
                         [|(ArrayBufferLike.t_to_js x589)|]);
                    (match x590 with
                     | Some x594 ->
                         ignore
                           (Ojs.call x592 "push" [|(Ojs.float_to_js x594)|])
                     | None -> ());
                    (match x591 with
                     | Some x593 ->
                         ignore
                           (Ojs.call x592 "push" [|(Ojs.float_to_js x593)|])
                     | None -> ());
                    x592))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x595 : float list) ->
        t_of_js
          (let x598 = Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray" in
           Ojs.call (Ojs.get_prop_ascii x598 "of") "apply"
             [|x598;((let x596 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      List.iter
                        (fun (x597 : float) ->
                           ignore
                             (Ojs.call x596 "push" [|(Ojs.float_to_js x597)|]))
                        x595;
                      x596))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x599 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             "from" [|(ArrayLike.t_to_js Ojs.float_to_js x599)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x601 : 'T ArrayLike.t) ->
        fun ~mapfn:(x602 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x603 : any option) ->
            fun () ->
              t_of_js
                (let x609 = Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray" in
                 Ojs.call (Ojs.get_prop_ascii x609 "from") "apply"
                   [|x609;((let x604 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x604 "push"
                                 [|(ArrayLike.t_to_js Obj.magic x601)|]);
                            ignore
                              (Ojs.call x604 "push"
                                 [|(Ojs.fun_to_js 2
                                      (fun (x606 : Ojs.t) ->
                                         fun (x607 : Ojs.t) ->
                                           Ojs.float_to_js
                                             (x602 ~v:(Obj.magic x606)
                                                ~k:(Ojs.float_of_js x607))))|]);
                            (match x603 with
                             | Some x605 ->
                                 ignore
                                   (Ojs.call x604 "push" [|(any_to_js x605)|])
                             | None -> ());
                            x604))|])
    let cast_from = Obj.magic
  end
module Error =
  struct
    type t = [ `Error ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x611 : Ojs.t) -> t_of_js x611
    and t_0_to_js : t_0 -> Ojs.t = fun (x610 : t) -> t_to_js x610
    type tags = [ `Error ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Error ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x614 : Ojs.t) -> intf_of_js __tags_of_js x614
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x612 : __tags intf) -> intf_to_js __tags_to_js x612
    let (get_name : 'tags this -> string) =
      fun (x616 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x616) "name")
    let (set_name : 'tags this -> string -> unit) =
      fun (x618 : 'tags this) ->
        fun (x619 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x618) "name"
            (Ojs.string_to_js x619)
    let (get_message : 'tags this -> string) =
      fun (x621 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x621) "message")
    let (set_message : 'tags this -> string -> unit) =
      fun (x623 : 'tags this) ->
        fun (x624 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x623) "message"
            (Ojs.string_to_js x624)
    let (get_stack : 'tags this -> string) =
      fun (x626 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x626) "stack")
    let (set_stack : 'tags this -> string -> unit) =
      fun (x628 : 'tags this) ->
        fun (x629 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x628) "stack"
            (Ojs.string_to_js x629)
    let (create : ?message:string -> unit -> t) =
      fun ?message:(x631 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Error")
               (let x632 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x631 with
                 | Some x633 ->
                     ignore
                       (Ojs.call x632 "push" [|(Ojs.string_to_js x633)|])
                 | None -> ());
                x632))
    let (invoke : ?message:string -> unit -> t) =
      fun ?message:(x634 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Error") "apply"
               [|Ojs.null;((let x635 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x634 with
                             | Some x636 ->
                                 ignore
                                   (Ojs.call x635 "push"
                                      [|(Ojs.string_to_js x636)|])
                             | None -> ());
                            x635))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Error")
             "prototype")
    let (create' :
      name:string -> message:string -> stack:string -> unit -> t) =
      fun ~name:(x637 : string) ->
        fun ~message:(x638 : string) ->
          fun ~stack:(x639 : string) ->
            fun () ->
              let x640 = Ojs.empty_obj () in
              Ojs.set_prop_ascii x640 "name" (Ojs.string_to_js x637);
              Ojs.set_prop_ascii x640 "message" (Ojs.string_to_js x638);
              Ojs.set_prop_ascii x640 "stack" (Ojs.string_to_js x639);
              t_of_js x640
    let cast_from = Obj.magic
  end
module URIError =
  struct
    type t = [ `Error  | `URIError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x642 : Ojs.t) -> t_of_js x642
    and t_0_to_js : t_0 -> Ojs.t = fun (x641 : t) -> t_to_js x641
    type tags = [ `Error  | `URIError ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `URIError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x645 : Ojs.t) -> intf_of_js __tags_of_js x645
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x643 : __tags intf) -> intf_to_js __tags_to_js x643
    let (create : ?message:string -> unit -> t) =
      fun ?message:(x647 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "URIError")
               (let x648 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x647 with
                 | Some x649 ->
                     ignore
                       (Ojs.call x648 "push" [|(Ojs.string_to_js x649)|])
                 | None -> ());
                x648))
    let (invoke : ?message:string -> unit -> t) =
      fun ?message:(x650 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "URIError") "apply"
               [|Ojs.null;((let x651 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x650 with
                             | Some x652 ->
                                 ignore
                                   (Ojs.call x651 "push"
                                      [|(Ojs.string_to_js x652)|])
                             | None -> ());
                            x651))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "URIError")
             "prototype")
    let cast_from = Obj.magic
  end
module TypeError =
  struct
    type t = [ `Error  | `TypeError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x654 : Ojs.t) -> t_of_js x654
    and t_0_to_js : t_0 -> Ojs.t = fun (x653 : t) -> t_to_js x653
    type tags = [ `Error  | `TypeError ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `TypeError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x657 : Ojs.t) -> intf_of_js __tags_of_js x657
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x655 : __tags intf) -> intf_to_js __tags_to_js x655
    let (create : ?message:string -> unit -> t) =
      fun ?message:(x659 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "TypeError")
               (let x660 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x659 with
                 | Some x661 ->
                     ignore
                       (Ojs.call x660 "push" [|(Ojs.string_to_js x661)|])
                 | None -> ());
                x660))
    let (invoke : ?message:string -> unit -> t) =
      fun ?message:(x662 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "TypeError") "apply"
               [|Ojs.null;((let x663 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x662 with
                             | Some x664 ->
                                 ignore
                                   (Ojs.call x663 "push"
                                      [|(Ojs.string_to_js x664)|])
                             | None -> ());
                            x663))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "TypeError")
             "prototype")
    let cast_from = Obj.magic
  end
module FlatArray =
  struct
    type ('Arr, 'Depth) t = any
    let rec t_of_js :
      'Arr 'Depth .
        (Ojs.t -> 'Arr) -> (Ojs.t -> 'Depth) -> Ojs.t -> ('Arr, 'Depth) t
      = fun (type __Arr) -> fun (type __Depth) ->
      fun (__Arr_of_js : Ojs.t -> __Arr) ->
        fun (__Depth_of_js : Ojs.t -> __Depth) ->
          fun (x666 : Ojs.t) -> any_of_js x666
    and t_to_js :
      'Arr 'Depth .
        ('Arr -> Ojs.t) -> ('Depth -> Ojs.t) -> ('Arr, 'Depth) t -> Ojs.t
      = fun (type __Arr) -> fun (type __Depth) ->
      fun (__Arr_to_js : __Arr -> Ojs.t) ->
        fun (__Depth_to_js : __Depth -> Ojs.t) ->
          fun (x665 : any) -> any_to_js x665
    type ('Arr, 'Depth) t_2 = ('Arr, 'Depth) t
    let rec t_2_of_js :
      'Arr 'Depth .
        (Ojs.t -> 'Arr) -> (Ojs.t -> 'Depth) -> Ojs.t -> ('Arr, 'Depth) t_2
      = fun (type __Arr) -> fun (type __Depth) ->
      fun (__Arr_of_js : Ojs.t -> __Arr) ->
        fun (__Depth_of_js : Ojs.t -> __Depth) ->
          fun (x670 : Ojs.t) -> t_of_js __Arr_of_js __Depth_of_js x670
    and t_2_to_js :
      'Arr 'Depth .
        ('Arr -> Ojs.t) -> ('Depth -> Ojs.t) -> ('Arr, 'Depth) t_2 -> Ojs.t
      = fun (type __Arr) -> fun (type __Depth) ->
      fun (__Arr_to_js : __Arr -> Ojs.t) ->
        fun (__Depth_to_js : __Depth -> Ojs.t) ->
          fun (x667 : (__Arr, __Depth) t) ->
            t_to_js __Arr_to_js __Depth_to_js x667
  end
module ConcatArray =
  struct
    type 'T t = [ `ConcatArray of 'T  | 'T ArrayLike.tags_1] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x675 : Ojs.t) -> t_of_js __T_of_js x675
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x673 : __T t) -> t_to_js __T_to_js x673
    type 'T tags = [ `ConcatArray of 'T  | 'T ArrayLike.tags_1]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ConcatArray of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x679 : Ojs.t) -> intf_of_js __tags_of_js x679
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x677 : __tags intf) -> intf_to_js __tags_to_js x677
    let (get_length : ('tags, 'T) this -> float) =
      fun (x681 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x681) "length")
    let (get : ('tags, 'T) this -> float -> 'T) =
      fun (x684 : ('tags, 'T) this) ->
        fun (x687 : float) ->
          Obj.magic
            (Ojs.get_prop (this_to_js Obj.magic Obj.magic x684)
               (Ojs.float_to_js x687))
    let (join : ('tags, 'T) this -> ?separator:string -> unit -> string) =
      fun (x691 : ('tags, 'T) this) ->
        fun ?separator:(x688 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x694 = this_to_js Obj.magic Obj.magic x691 in
               Ojs.call (Ojs.get_prop_ascii x694 "join") "apply"
                 [|x694;((let x689 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x688 with
                           | Some x690 ->
                               ignore
                                 (Ojs.call x689 "push"
                                    [|(Ojs.string_to_js x690)|])
                           | None -> ());
                          x689))|])
    let (slice :
      ('tags, 'T) this -> ?start:float -> ?end_:float -> unit -> 'T list) =
      fun (x700 : ('tags, 'T) this) ->
        fun ?start:(x695 : float option) ->
          fun ?end_:(x696 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x703 = this_to_js Obj.magic Obj.magic x700 in
                 Ojs.call (Ojs.get_prop_ascii x703 "slice") "apply"
                   [|x703;((let x697 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x695 with
                             | Some x699 ->
                                 ignore
                                   (Ojs.call x697 "push"
                                      [|(Ojs.float_to_js x699)|])
                             | None -> ());
                            (match x696 with
                             | Some x698 ->
                                 ignore
                                   (Ojs.call x697 "push"
                                      [|(Ojs.float_to_js x698)|])
                             | None -> ());
                            x697))|])
    let cast_from = Obj.magic
  end
module ReadonlyArray =
  struct
    type 'T t =
      [ `ReadonlyArray of 'T  | 'T ArrayLike.tags_1
      | 'T IterableIterator.tags_1] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x707 : Ojs.t) -> t_of_js __T_of_js x707
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x705 : __T t) -> t_to_js __T_to_js x705
    type 'T tags =
      [ `ReadonlyArray of 'T  | 'T ArrayLike.tags_1
      | 'T IterableIterator.tags_1]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ReadonlyArray of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x711 : Ojs.t) -> intf_of_js __tags_of_js x711
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x709 : __tags intf) -> intf_to_js __tags_to_js x709
    let (flatMap :
      ('tags, 'T) this ->
        callback:(this:'This ->
                    value:'T ->
                      index:float -> array:'T list -> ('U, 'U t) union2)
          -> ?thisArg:'This -> unit -> 'U list)
      =
      fun (x725 : ('tags, 'T) this) ->
        fun
          ~callback:(x713 :
                      this:'This ->
                        value:'T ->
                          index:float -> array:'T list -> ('U, 'U t) union2)
          ->
          fun ?thisArg:(x714 : 'This option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x728 = this_to_js Obj.magic Obj.magic x725 in
                 Ojs.call (Ojs.get_prop_ascii x728 "flatMap") "apply"
                   [|x728;((let x715 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x715 "push"
                                 [|(Ojs.fun_to_js 4
                                      (fun (x717 : Ojs.t) ->
                                         fun (x718 : Ojs.t) ->
                                           fun (x719 : Ojs.t) ->
                                             fun (x720 : Ojs.t) ->
                                               union2_to_js Obj.magic
                                                 (fun (x723 : 'U t) ->
                                                    t_to_js Obj.magic x723)
                                                 (x713 ~this:(Obj.magic x717)
                                                    ~value:(Obj.magic x718)
                                                    ~index:(Ojs.float_of_js
                                                              x719)
                                                    ~array:(Ojs.list_of_js
                                                              Obj.magic x720))))|]);
                            (match x714 with
                             | Some x716 ->
                                 ignore
                                   (Ojs.call x715 "push" [|(Obj.magic x716)|])
                             | None -> ());
                            x715))|])
    let (flat :
      ('tags, 'T) this ->
        this:'A -> ?depth:'D -> unit -> ('A, 'D) FlatArray.t list)
      =
      fun (x734 : ('tags, 'T) this) ->
        fun ~this:(x730 : 'A) ->
          fun ?depth:(x731 : 'D option) ->
            fun () ->
              Ojs.list_of_js
                (fun (x738 : Ojs.t) ->
                   FlatArray.t_of_js Obj.magic Obj.magic x738)
                (let x737 = this_to_js Obj.magic Obj.magic x734 in
                 Ojs.call (Ojs.get_prop_ascii x737 "flat") "apply"
                   [|x737;((let x732 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x732 "push" [|(Obj.magic x730)|]);
                            (match x731 with
                             | Some x733 ->
                                 ignore
                                   (Ojs.call x732 "push" [|(Obj.magic x733)|])
                             | None -> ());
                            x732))|])
    let (includes :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> bool)
      =
      fun (x745 : ('tags, 'T) this) ->
        fun ~searchElement:(x741 : 'T) ->
          fun ?fromIndex:(x742 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x748 = this_to_js Obj.magic Obj.magic x745 in
                 Ojs.call (Ojs.get_prop_ascii x748 "includes") "apply"
                   [|x748;((let x743 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x743 "push" [|(Obj.magic x741)|]);
                            (match x742 with
                             | Some x744 ->
                                 ignore
                                   (Ojs.call x743 "push"
                                      [|(Ojs.float_to_js x744)|])
                             | None -> ());
                            x743))|])
    let (entries : ('tags, 'T) this -> (float * 'T) IterableIterator.t) =
      fun (x749 : ('tags, 'T) this) ->
        IterableIterator.t_of_js
          (fun (x752 : Ojs.t) ->
             let x753 = x752 in
             ((Ojs.float_of_js (Ojs.array_get x753 0)),
               (Obj.magic (Ojs.array_get x753 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic x749) "entries" [||])
    let (keys : ('tags, 'T) this -> float IterableIterator.t) =
      fun (x754 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x754) "keys" [||])
    let (values : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x758 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x758) "values" [||])
    let (find :
      ('tags, 'T) this ->
        predicate:(this:unit ->
                     value:'T -> index:float -> obj:'T list -> bool)
          -> ?thisArg:any -> unit -> 'S or_undefined)
      =
      fun (x771 : ('tags, 'T) this) ->
        fun
          ~predicate:(x762 :
                       this:unit ->
                         value:'T -> index:float -> obj:'T list -> bool)
          ->
          fun ?thisArg:(x763 : any option) ->
            fun () ->
              or_undefined_of_js Obj.magic
                (let x774 = this_to_js Obj.magic Obj.magic x771 in
                 Ojs.call (Ojs.get_prop_ascii x774 "find") "apply"
                   [|x774;((let x764 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x764 "push"
                                 [|(Ojs.fun_to_js 4
                                      (fun (x766 : Ojs.t) ->
                                         fun (x767 : Ojs.t) ->
                                           fun (x768 : Ojs.t) ->
                                             fun (x769 : Ojs.t) ->
                                               Ojs.bool_to_js
                                                 (x762
                                                    ~this:(Ojs.unit_of_js
                                                             x766)
                                                    ~value:(Obj.magic x767)
                                                    ~index:(Ojs.float_of_js
                                                              x768)
                                                    ~obj:(Ojs.list_of_js
                                                            Obj.magic x769))))|]);
                            (match x763 with
                             | Some x765 ->
                                 ignore
                                   (Ojs.call x764 "push" [|(any_to_js x765)|])
                             | None -> ());
                            x764))|])
    let (find' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> obj:'T list -> unknown) ->
          ?thisArg:any -> unit -> 'T or_undefined)
      =
      fun (x784 : ('tags, 'T) this) ->
        fun
          ~predicate:(x776 :
                       value:'T -> index:float -> obj:'T list -> unknown)
          ->
          fun ?thisArg:(x777 : any option) ->
            fun () ->
              or_undefined_of_js Obj.magic
                (let x787 = this_to_js Obj.magic Obj.magic x784 in
                 Ojs.call (Ojs.get_prop_ascii x787 "find") "apply"
                   [|x787;((let x778 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x778 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x780 : Ojs.t) ->
                                         fun (x781 : Ojs.t) ->
                                           fun (x782 : Ojs.t) ->
                                             unknown_to_js
                                               (x776 ~value:(Obj.magic x780)
                                                  ~index:(Ojs.float_of_js
                                                            x781)
                                                  ~obj:(Ojs.list_of_js
                                                          Obj.magic x782))))|]);
                            (match x777 with
                             | Some x779 ->
                                 ignore
                                   (Ojs.call x778 "push" [|(any_to_js x779)|])
                             | None -> ());
                            x778))|])
    let (findIndex :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> obj:'T list -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x797 : ('tags, 'T) this) ->
        fun
          ~predicate:(x789 :
                       value:'T -> index:float -> obj:'T list -> unknown)
          ->
          fun ?thisArg:(x790 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x800 = this_to_js Obj.magic Obj.magic x797 in
                 Ojs.call (Ojs.get_prop_ascii x800 "findIndex") "apply"
                   [|x800;((let x791 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x791 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x793 : Ojs.t) ->
                                         fun (x794 : Ojs.t) ->
                                           fun (x795 : Ojs.t) ->
                                             unknown_to_js
                                               (x789 ~value:(Obj.magic x793)
                                                  ~index:(Ojs.float_of_js
                                                            x794)
                                                  ~obj:(Ojs.list_of_js
                                                          Obj.magic x795))))|]);
                            (match x790 with
                             | Some x792 ->
                                 ignore
                                   (Ojs.call x791 "push" [|(any_to_js x792)|])
                             | None -> ());
                            x791))|])
    let (get_length : ('tags, 'T) this -> float) =
      fun (x801 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x801) "length")
    let (toString : ('tags, 'T) this -> string) =
      fun (x804 : ('tags, 'T) this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x804) "toString" [||])
    let (toLocaleString : ('tags, 'T) this -> string) =
      fun (x807 : ('tags, 'T) this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x807) "toLocaleString"
             [||])
    let (concat : ('tags, 'T) this -> items:'T ConcatArray.t list -> 'T list)
      =
      fun (x814 : ('tags, 'T) this) ->
        fun ~items:(x810 : 'T ConcatArray.t list) ->
          Ojs.list_of_js Obj.magic
            (let x817 = this_to_js Obj.magic Obj.magic x814 in
             Ojs.call (Ojs.get_prop_ascii x817 "concat") "apply"
               [|x817;((let x811 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x812 : 'T ConcatArray.t) ->
                             ignore
                               (Ojs.call x811 "push"
                                  [|(ConcatArray.t_to_js Obj.magic x812)|]))
                          x810;
                        x811))|])
    let (concat' :
      ('tags, 'T) this -> items:('T, 'T ConcatArray.t) union2 list -> 'T list)
      =
      fun (x825 : ('tags, 'T) this) ->
        fun ~items:(x819 : ('T, 'T ConcatArray.t) union2 list) ->
          Ojs.list_of_js Obj.magic
            (let x828 = this_to_js Obj.magic Obj.magic x825 in
             Ojs.call (Ojs.get_prop_ascii x828 "concat") "apply"
               [|x828;((let x820 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x821 : ('T, 'T ConcatArray.t) union2) ->
                             ignore
                               (Ojs.call x820 "push"
                                  [|(union2_to_js Obj.magic
                                       (fun (x823 : 'T ConcatArray.t) ->
                                          ConcatArray.t_to_js Obj.magic x823)
                                       x821)|])) x819;
                        x820))|])
    let (join : ('tags, 'T) this -> ?separator:string -> unit -> string) =
      fun (x833 : ('tags, 'T) this) ->
        fun ?separator:(x830 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x836 = this_to_js Obj.magic Obj.magic x833 in
               Ojs.call (Ojs.get_prop_ascii x836 "join") "apply"
                 [|x836;((let x831 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x830 with
                           | Some x832 ->
                               ignore
                                 (Ojs.call x831 "push"
                                    [|(Ojs.string_to_js x832)|])
                           | None -> ());
                          x831))|])
    let (slice :
      ('tags, 'T) this -> ?start:float -> ?end_:float -> unit -> 'T list) =
      fun (x842 : ('tags, 'T) this) ->
        fun ?start:(x837 : float option) ->
          fun ?end_:(x838 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x845 = this_to_js Obj.magic Obj.magic x842 in
                 Ojs.call (Ojs.get_prop_ascii x845 "slice") "apply"
                   [|x845;((let x839 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x837 with
                             | Some x841 ->
                                 ignore
                                   (Ojs.call x839 "push"
                                      [|(Ojs.float_to_js x841)|])
                             | None -> ());
                            (match x838 with
                             | Some x840 ->
                                 ignore
                                   (Ojs.call x839 "push"
                                      [|(Ojs.float_to_js x840)|])
                             | None -> ());
                            x839))|])
    let (indexOf :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> float)
      =
      fun (x851 : ('tags, 'T) this) ->
        fun ~searchElement:(x847 : 'T) ->
          fun ?fromIndex:(x848 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x854 = this_to_js Obj.magic Obj.magic x851 in
                 Ojs.call (Ojs.get_prop_ascii x854 "indexOf") "apply"
                   [|x854;((let x849 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x849 "push" [|(Obj.magic x847)|]);
                            (match x848 with
                             | Some x850 ->
                                 ignore
                                   (Ojs.call x849 "push"
                                      [|(Ojs.float_to_js x850)|])
                             | None -> ());
                            x849))|])
    let (lastIndexOf :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> float)
      =
      fun (x859 : ('tags, 'T) this) ->
        fun ~searchElement:(x855 : 'T) ->
          fun ?fromIndex:(x856 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x862 = this_to_js Obj.magic Obj.magic x859 in
                 Ojs.call (Ojs.get_prop_ascii x862 "lastIndexOf") "apply"
                   [|x862;((let x857 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x857 "push" [|(Obj.magic x855)|]);
                            (match x856 with
                             | Some x858 ->
                                 ignore
                                   (Ojs.call x857 "push"
                                      [|(Ojs.float_to_js x858)|])
                             | None -> ());
                            x857))|])
    let (every :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x871 : ('tags, 'T) this) ->
        fun
          ~predicate:(x863 :
                       value:'T -> index:float -> array:'T list -> bool)
          ->
          fun ?thisArg:(x864 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x874 = this_to_js Obj.magic Obj.magic x871 in
                 Ojs.call (Ojs.get_prop_ascii x874 "every") "apply"
                   [|x874;((let x865 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x865 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x867 : Ojs.t) ->
                                         fun (x868 : Ojs.t) ->
                                           fun (x869 : Ojs.t) ->
                                             Ojs.bool_to_js
                                               (x863 ~value:(Obj.magic x867)
                                                  ~index:(Ojs.float_of_js
                                                            x868)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x869))))|]);
                            (match x864 with
                             | Some x866 ->
                                 ignore
                                   (Ojs.call x865 "push" [|(any_to_js x866)|])
                             | None -> ());
                            x865))|])
    let (every' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x883 : ('tags, 'T) this) ->
        fun
          ~predicate:(x875 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x876 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x886 = this_to_js Obj.magic Obj.magic x883 in
                 Ojs.call (Ojs.get_prop_ascii x886 "every") "apply"
                   [|x886;((let x877 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x877 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x879 : Ojs.t) ->
                                         fun (x880 : Ojs.t) ->
                                           fun (x881 : Ojs.t) ->
                                             unknown_to_js
                                               (x875 ~value:(Obj.magic x879)
                                                  ~index:(Ojs.float_of_js
                                                            x880)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x881))))|]);
                            (match x876 with
                             | Some x878 ->
                                 ignore
                                   (Ojs.call x877 "push" [|(any_to_js x878)|])
                             | None -> ());
                            x877))|])
    let (some :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x895 : ('tags, 'T) this) ->
        fun
          ~predicate:(x887 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x888 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x898 = this_to_js Obj.magic Obj.magic x895 in
                 Ojs.call (Ojs.get_prop_ascii x898 "some") "apply"
                   [|x898;((let x889 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x889 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x891 : Ojs.t) ->
                                         fun (x892 : Ojs.t) ->
                                           fun (x893 : Ojs.t) ->
                                             unknown_to_js
                                               (x887 ~value:(Obj.magic x891)
                                                  ~index:(Ojs.float_of_js
                                                            x892)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x893))))|]);
                            (match x888 with
                             | Some x890 ->
                                 ignore
                                   (Ojs.call x889 "push" [|(any_to_js x890)|])
                             | None -> ());
                            x889))|])
    let (forEach :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> index:float -> array:'T list -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x907 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x899 :
                        value:'T -> index:float -> array:'T list -> unit)
          ->
          fun ?thisArg:(x900 : any option) ->
            fun () ->
              ignore
                (let x910 = this_to_js Obj.magic Obj.magic x907 in
                 Ojs.call (Ojs.get_prop_ascii x910 "forEach") "apply"
                   [|x910;((let x901 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x901 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x903 : Ojs.t) ->
                                         fun (x904 : Ojs.t) ->
                                           fun (x905 : Ojs.t) ->
                                             x899 ~value:(Obj.magic x903)
                                               ~index:(Ojs.float_of_js x904)
                                               ~array:(Ojs.list_of_js
                                                         Obj.magic x905)))|]);
                            (match x900 with
                             | Some x902 ->
                                 ignore
                                   (Ojs.call x901 "push" [|(any_to_js x902)|])
                             | None -> ());
                            x901))|])
    let (map :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> index:float -> array:'T list -> 'U) ->
          ?thisArg:any -> unit -> 'U list)
      =
      fun (x919 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x911 : value:'T -> index:float -> array:'T list -> 'U)
          ->
          fun ?thisArg:(x912 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x922 = this_to_js Obj.magic Obj.magic x919 in
                 Ojs.call (Ojs.get_prop_ascii x922 "map") "apply"
                   [|x922;((let x913 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x913 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x915 : Ojs.t) ->
                                         fun (x916 : Ojs.t) ->
                                           fun (x917 : Ojs.t) ->
                                             Obj.magic
                                               (x911 ~value:(Obj.magic x915)
                                                  ~index:(Ojs.float_of_js
                                                            x916)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x917))))|]);
                            (match x912 with
                             | Some x914 ->
                                 ignore
                                   (Ojs.call x913 "push" [|(any_to_js x914)|])
                             | None -> ());
                            x913))|])
    let (filter :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> 'S list)
      =
      fun (x932 : ('tags, 'T) this) ->
        fun
          ~predicate:(x924 :
                       value:'T -> index:float -> array:'T list -> bool)
          ->
          fun ?thisArg:(x925 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x935 = this_to_js Obj.magic Obj.magic x932 in
                 Ojs.call (Ojs.get_prop_ascii x935 "filter") "apply"
                   [|x935;((let x926 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x926 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x928 : Ojs.t) ->
                                         fun (x929 : Ojs.t) ->
                                           fun (x930 : Ojs.t) ->
                                             Ojs.bool_to_js
                                               (x924 ~value:(Obj.magic x928)
                                                  ~index:(Ojs.float_of_js
                                                            x929)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x930))))|]);
                            (match x925 with
                             | Some x927 ->
                                 ignore
                                   (Ojs.call x926 "push" [|(any_to_js x927)|])
                             | None -> ());
                            x926))|])
    let (filter' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> 'T list)
      =
      fun (x945 : ('tags, 'T) this) ->
        fun
          ~predicate:(x937 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x938 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x948 = this_to_js Obj.magic Obj.magic x945 in
                 Ojs.call (Ojs.get_prop_ascii x948 "filter") "apply"
                   [|x948;((let x939 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x939 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x941 : Ojs.t) ->
                                         fun (x942 : Ojs.t) ->
                                           fun (x943 : Ojs.t) ->
                                             unknown_to_js
                                               (x937 ~value:(Obj.magic x941)
                                                  ~index:(Ojs.float_of_js
                                                            x942)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x943))))|]);
                            (match x938 with
                             | Some x940 ->
                                 ignore
                                   (Ojs.call x939 "push" [|(any_to_js x940)|])
                             | None -> ());
                            x939))|])
    let (reduce :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> 'T)
      =
      fun (x956 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x950 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x956) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x951 : Ojs.t) ->
                       fun (x952 : Ojs.t) ->
                         fun (x953 : Ojs.t) ->
                           fun (x954 : Ojs.t) ->
                             Obj.magic
                               (x950 ~previousValue:(Obj.magic x951)
                                  ~currentValue:(Obj.magic x952)
                                  ~currentIndex:(Ojs.float_of_js x953)
                                  ~array:(Ojs.list_of_js Obj.magic x954))))|])
    let (reduce' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> initialValue:'T -> 'T)
      =
      fun (x966 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x959 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          fun ~initialValue:(x965 : 'T) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x966) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x960 : Ojs.t) ->
                         fun (x961 : Ojs.t) ->
                           fun (x962 : Ojs.t) ->
                             fun (x963 : Ojs.t) ->
                               Obj.magic
                                 (x959 ~previousValue:(Obj.magic x960)
                                    ~currentValue:(Obj.magic x961)
                                    ~currentIndex:(Ojs.float_of_js x962)
                                    ~array:(Ojs.list_of_js Obj.magic x963))));(
                   Obj.magic x965)|])
    let (reduce'' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'U ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x976 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x969 :
                        previousValue:'U ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'U)
          ->
          fun ~initialValue:(x975 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x976) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x970 : Ojs.t) ->
                         fun (x971 : Ojs.t) ->
                           fun (x972 : Ojs.t) ->
                             fun (x973 : Ojs.t) ->
                               Obj.magic
                                 (x969 ~previousValue:(Obj.magic x970)
                                    ~currentValue:(Obj.magic x971)
                                    ~currentIndex:(Ojs.float_of_js x972)
                                    ~array:(Ojs.list_of_js Obj.magic x973))));(
                   Obj.magic x975)|])
    let (reduceRight :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> 'T)
      =
      fun (x985 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x979 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x985) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x980 : Ojs.t) ->
                       fun (x981 : Ojs.t) ->
                         fun (x982 : Ojs.t) ->
                           fun (x983 : Ojs.t) ->
                             Obj.magic
                               (x979 ~previousValue:(Obj.magic x980)
                                  ~currentValue:(Obj.magic x981)
                                  ~currentIndex:(Ojs.float_of_js x982)
                                  ~array:(Ojs.list_of_js Obj.magic x983))))|])
    let (reduceRight' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> initialValue:'T -> 'T)
      =
      fun (x995 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x988 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          fun ~initialValue:(x994 : 'T) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x995) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x989 : Ojs.t) ->
                         fun (x990 : Ojs.t) ->
                           fun (x991 : Ojs.t) ->
                             fun (x992 : Ojs.t) ->
                               Obj.magic
                                 (x988 ~previousValue:(Obj.magic x989)
                                    ~currentValue:(Obj.magic x990)
                                    ~currentIndex:(Ojs.float_of_js x991)
                                    ~array:(Ojs.list_of_js Obj.magic x992))));(
                   Obj.magic x994)|])
    let (reduceRight'' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'U ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x1005 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x998 :
                        previousValue:'U ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'U)
          ->
          fun ~initialValue:(x1004 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1005) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x999 : Ojs.t) ->
                         fun (x1000 : Ojs.t) ->
                           fun (x1001 : Ojs.t) ->
                             fun (x1002 : Ojs.t) ->
                               Obj.magic
                                 (x998 ~previousValue:(Obj.magic x999)
                                    ~currentValue:(Obj.magic x1000)
                                    ~currentIndex:(Ojs.float_of_js x1001)
                                    ~array:(Ojs.list_of_js Obj.magic x1002))));(
                   Obj.magic x1004)|])
    let (get : ('tags, 'T) this -> float -> 'T) =
      fun (x1008 : ('tags, 'T) this) ->
        fun (x1011 : float) ->
          Obj.magic
            (Ojs.get_prop (this_to_js Obj.magic Obj.magic x1008)
               (Ojs.float_to_js x1011))
    let cast_from = Obj.magic
    let (to_ml : 'T t -> 'T list) =
      fun (x1012 : 'T t) ->
        Ojs.list_of_js Obj.magic (t_to_js Obj.magic x1012)
    let (of_ml : 'T list -> 'T t) =
      fun (x1015 : 'T list) ->
        t_of_js Obj.magic (Ojs.list_to_js Obj.magic x1015)
  end
module TemplateStringsArray =
  struct
    type t =
      [ `ReadonlyArray of string  | `ReadonlyArray of string 
      | `TemplateStringsArray  | string ArrayLike.tags_1
      | string IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1019 : Ojs.t) -> t_of_js x1019
    and t_0_to_js : t_0 -> Ojs.t = fun (x1018 : t) -> t_to_js x1018
    type tags =
      [ `ReadonlyArray of string  | `ReadonlyArray of string 
      | `TemplateStringsArray  | string ArrayLike.tags_1
      | string IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `TemplateStringsArray ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x1022 : Ojs.t) -> intf_of_js __tags_of_js x1022
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x1020 : __tags intf) -> intf_to_js __tags_to_js x1020
    let (get_raw : 'tags this -> string list) =
      fun (x1024 : 'tags this) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1024) "raw")
    let (create : raw:string list -> unit -> t) =
      fun ~raw:(x1027 : string list) ->
        fun () ->
          let x1028 = Ojs.empty_obj () in
          Ojs.set_prop_ascii x1028 "raw"
            (Ojs.list_to_js Ojs.string_to_js x1027);
          t_of_js x1028
    let cast_from = Obj.magic
  end
module SyntaxError =
  struct
    type t = [ `Error  | `SyntaxError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1031 : Ojs.t) -> t_of_js x1031
    and t_0_to_js : t_0 -> Ojs.t = fun (x1030 : t) -> t_to_js x1030
    type tags = [ `Error  | `SyntaxError ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `SyntaxError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x1034 : Ojs.t) -> intf_of_js __tags_of_js x1034
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x1032 : __tags intf) -> intf_to_js __tags_to_js x1032
    let (create : ?message:string -> unit -> t) =
      fun ?message:(x1036 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "SyntaxError")
               (let x1037 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x1036 with
                 | Some x1038 ->
                     ignore
                       (Ojs.call x1037 "push" [|(Ojs.string_to_js x1038)|])
                 | None -> ());
                x1037))
    let (invoke : ?message:string -> unit -> t) =
      fun ?message:(x1039 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "SyntaxError") "apply"
               [|Ojs.null;((let x1040 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x1039 with
                             | Some x1041 ->
                                 ignore
                                   (Ojs.call x1040 "push"
                                      [|(Ojs.string_to_js x1041)|])
                             | None -> ());
                            x1040))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "SyntaxError")
             "prototype")
    let cast_from = Obj.magic
  end
module Symbol =
  struct
    type t = [ `Symbol ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1043 : Ojs.t) -> t_of_js x1043
    and t_0_to_js : t_0 -> Ojs.t = fun (x1042 : t) -> t_to_js x1042
    type tags = [ `Symbol ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Symbol ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x1046 : Ojs.t) -> intf_of_js __tags_of_js x1046
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x1044 : __tags intf) -> intf_to_js __tags_to_js x1044
    let (get_description : 'tags this -> string or_undefined) =
      fun (x1048 : 'tags this) ->
        or_undefined_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1048) "description")
    let (toString : 'tags this -> string) =
      fun (x1051 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1051) "toString" [||])
    let (valueOf : 'tags this -> symbol) =
      fun (x1053 : 'tags this) ->
        symbol_of_js (Ojs.call (this_to_js Obj.magic x1053) "valueOf" [||])
    let (matchAll : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "matchAll")
    let (asyncIterator : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "asyncIterator")
    let (hasInstance : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "hasInstance")
    let (isConcatSpreadable : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "isConcatSpreadable")
    let (match_ : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "match")
    let (replace : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "replace")
    let (search : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "search")
    let (species : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "species")
    let (split : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "split")
    let (toPrimitive : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "toPrimitive")
    let (toStringTag : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "toStringTag")
    let (unscopables : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "unscopables")
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "prototype")
    let (invoke : ?description:string or_number -> unit -> symbol) =
      fun ?description:(x1055 : string or_number option) ->
        fun () ->
          symbol_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Symbol") "apply"
               [|Ojs.null;((let x1056 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x1055 with
                             | Some x1057 ->
                                 ignore
                                   (Ojs.call x1056 "push"
                                      [|(or_number_to_js Ojs.string_to_js
                                           x1057)|])
                             | None -> ());
                            x1056))|])
    let (for_ : string -> symbol) =
      fun (x1059 : string) ->
        symbol_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Symbol") "for"
             [|(Ojs.string_to_js x1059)|])
    let (keyFor : symbol -> string or_undefined) =
      fun (x1060 : symbol) ->
        or_undefined_of_js Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Symbol") "keyFor"
             [|(symbol_to_js x1060)|])
    let (iterator : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "iterator")
    let cast_from = Obj.magic
  end
module Array =
  struct
    module AnonymousInterface0 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x1063 : Ojs.t) -> x1063
        and t_to_js : t -> Ojs.t = fun (x1062 : Ojs.t) -> x1062
        let (get_copyWithin : t -> bool) =
          fun (x1064 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1064) "copyWithin")
        let (set_copyWithin : t -> bool -> unit) =
          fun (x1065 : t) ->
            fun (x1066 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1065) "copyWithin"
                (Ojs.bool_to_js x1066)
        let (get_entries : t -> bool) =
          fun (x1067 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1067) "entries")
        let (set_entries : t -> bool -> unit) =
          fun (x1068 : t) ->
            fun (x1069 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1068) "entries"
                (Ojs.bool_to_js x1069)
        let (get_fill : t -> bool) =
          fun (x1070 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1070) "fill")
        let (set_fill : t -> bool -> unit) =
          fun (x1071 : t) ->
            fun (x1072 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1071) "fill"
                (Ojs.bool_to_js x1072)
        let (get_find : t -> bool) =
          fun (x1073 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1073) "find")
        let (set_find : t -> bool -> unit) =
          fun (x1074 : t) ->
            fun (x1075 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1074) "find"
                (Ojs.bool_to_js x1075)
        let (get_findIndex : t -> bool) =
          fun (x1076 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1076) "findIndex")
        let (set_findIndex : t -> bool -> unit) =
          fun (x1077 : t) ->
            fun (x1078 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1077) "findIndex"
                (Ojs.bool_to_js x1078)
        let (get_keys : t -> bool) =
          fun (x1079 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1079) "keys")
        let (set_keys : t -> bool -> unit) =
          fun (x1080 : t) ->
            fun (x1081 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1080) "keys"
                (Ojs.bool_to_js x1081)
        let (get_values : t -> bool) =
          fun (x1082 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1082) "values")
        let (set_values : t -> bool -> unit) =
          fun (x1083 : t) ->
            fun (x1084 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1083) "values"
                (Ojs.bool_to_js x1084)
        let (create :
          copyWithin:bool ->
            entries:bool ->
              fill:bool ->
                find:bool ->
                  findIndex:bool -> keys:bool -> values:bool -> unit -> t)
          =
          fun ~copyWithin:(x1085 : bool) ->
            fun ~entries:(x1086 : bool) ->
              fun ~fill:(x1087 : bool) ->
                fun ~find:(x1088 : bool) ->
                  fun ~findIndex:(x1089 : bool) ->
                    fun ~keys:(x1090 : bool) ->
                      fun ~values:(x1091 : bool) ->
                        fun () ->
                          let x1092 = Ojs.empty_obj () in
                          Ojs.set_prop_ascii x1092 "copyWithin"
                            (Ojs.bool_to_js x1085);
                          Ojs.set_prop_ascii x1092 "entries"
                            (Ojs.bool_to_js x1086);
                          Ojs.set_prop_ascii x1092 "fill"
                            (Ojs.bool_to_js x1087);
                          Ojs.set_prop_ascii x1092 "find"
                            (Ojs.bool_to_js x1088);
                          Ojs.set_prop_ascii x1092 "findIndex"
                            (Ojs.bool_to_js x1089);
                          Ojs.set_prop_ascii x1092 "keys"
                            (Ojs.bool_to_js x1090);
                          Ojs.set_prop_ascii x1092 "values"
                            (Ojs.bool_to_js x1091);
                          t_of_js x1092
      end
    type 'T t =
      [ `Array of 'T  | 'T ArrayLike.tags_1 | 'T IterableIterator.tags_1]
        intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x1095 : Ojs.t) -> t_of_js __T_of_js x1095
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x1093 : __T t) -> t_to_js __T_to_js x1093
    type 'T tags =
      [ `Array of 'T  | 'T ArrayLike.tags_1 | 'T IterableIterator.tags_1]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this = 'tags intf constraint 'tags = [> `Array of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x1099 : Ojs.t) -> intf_of_js __tags_of_js x1099
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x1097 : __tags intf) -> intf_to_js __tags_to_js x1097
    let (flatMap :
      ('tags, 'T) this ->
        callback:(this:'This ->
                    value:'T ->
                      index:float ->
                        array:'T list -> ('U, 'U ReadonlyArray.t) union2)
          -> ?thisArg:'This -> unit -> 'U list)
      =
      fun (x1113 : ('tags, 'T) this) ->
        fun
          ~callback:(x1101 :
                      this:'This ->
                        value:'T ->
                          index:float ->
                            array:'T list -> ('U, 'U ReadonlyArray.t) union2)
          ->
          fun ?thisArg:(x1102 : 'This option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1116 = this_to_js Obj.magic Obj.magic x1113 in
                 Ojs.call (Ojs.get_prop_ascii x1116 "flatMap") "apply"
                   [|x1116;((let x1103 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1103 "push"
                                  [|(Ojs.fun_to_js 4
                                       (fun (x1105 : Ojs.t) ->
                                          fun (x1106 : Ojs.t) ->
                                            fun (x1107 : Ojs.t) ->
                                              fun (x1108 : Ojs.t) ->
                                                union2_to_js Obj.magic
                                                  (fun
                                                     (x1111 :
                                                       'U ReadonlyArray.t)
                                                     ->
                                                     ReadonlyArray.t_to_js
                                                       Obj.magic x1111)
                                                  (x1101
                                                     ~this:(Obj.magic x1105)
                                                     ~value:(Obj.magic x1106)
                                                     ~index:(Ojs.float_of_js
                                                               x1107)
                                                     ~array:(Ojs.list_of_js
                                                               Obj.magic
                                                               x1108))))|]);
                             (match x1102 with
                              | Some x1104 ->
                                  ignore
                                    (Ojs.call x1103 "push"
                                       [|(Obj.magic x1104)|])
                              | None -> ());
                             x1103))|])
    let (flat :
      ('tags, 'T) this ->
        this:'A -> ?depth:'D -> unit -> ('A, 'D) FlatArray.t list)
      =
      fun (x1122 : ('tags, 'T) this) ->
        fun ~this:(x1118 : 'A) ->
          fun ?depth:(x1119 : 'D option) ->
            fun () ->
              Ojs.list_of_js
                (fun (x1126 : Ojs.t) ->
                   FlatArray.t_of_js Obj.magic Obj.magic x1126)
                (let x1125 = this_to_js Obj.magic Obj.magic x1122 in
                 Ojs.call (Ojs.get_prop_ascii x1125 "flat") "apply"
                   [|x1125;((let x1120 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1120 "push" [|(Obj.magic x1118)|]);
                             (match x1119 with
                              | Some x1121 ->
                                  ignore
                                    (Ojs.call x1120 "push"
                                       [|(Obj.magic x1121)|])
                              | None -> ());
                             x1120))|])
    let (includes :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> bool)
      =
      fun (x1133 : ('tags, 'T) this) ->
        fun ~searchElement:(x1129 : 'T) ->
          fun ?fromIndex:(x1130 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1136 = this_to_js Obj.magic Obj.magic x1133 in
                 Ojs.call (Ojs.get_prop_ascii x1136 "includes") "apply"
                   [|x1136;((let x1131 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1131 "push" [|(Obj.magic x1129)|]);
                             (match x1130 with
                              | Some x1132 ->
                                  ignore
                                    (Ojs.call x1131 "push"
                                       [|(Ojs.float_to_js x1132)|])
                              | None -> ());
                             x1131))|])
    let (entries : ('tags, 'T) this -> (float * 'T) IterableIterator.t) =
      fun (x1137 : ('tags, 'T) this) ->
        IterableIterator.t_of_js
          (fun (x1140 : Ojs.t) ->
             let x1141 = x1140 in
             ((Ojs.float_of_js (Ojs.array_get x1141 0)),
               (Obj.magic (Ojs.array_get x1141 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic x1137) "entries" [||])
    let (keys : ('tags, 'T) this -> float IterableIterator.t) =
      fun (x1142 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x1142) "keys" [||])
    let (values : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x1146 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x1146) "values" [||])
    let (find :
      ('tags, 'T) this ->
        predicate:(this:unit ->
                     value:'T -> index:float -> obj:'T list -> bool)
          -> ?thisArg:any -> unit -> 'S or_undefined)
      =
      fun (x1159 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1150 :
                       this:unit ->
                         value:'T -> index:float -> obj:'T list -> bool)
          ->
          fun ?thisArg:(x1151 : any option) ->
            fun () ->
              or_undefined_of_js Obj.magic
                (let x1162 = this_to_js Obj.magic Obj.magic x1159 in
                 Ojs.call (Ojs.get_prop_ascii x1162 "find") "apply"
                   [|x1162;((let x1152 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1152 "push"
                                  [|(Ojs.fun_to_js 4
                                       (fun (x1154 : Ojs.t) ->
                                          fun (x1155 : Ojs.t) ->
                                            fun (x1156 : Ojs.t) ->
                                              fun (x1157 : Ojs.t) ->
                                                Ojs.bool_to_js
                                                  (x1150
                                                     ~this:(Ojs.unit_of_js
                                                              x1154)
                                                     ~value:(Obj.magic x1155)
                                                     ~index:(Ojs.float_of_js
                                                               x1156)
                                                     ~obj:(Ojs.list_of_js
                                                             Obj.magic x1157))))|]);
                             (match x1151 with
                              | Some x1153 ->
                                  ignore
                                    (Ojs.call x1152 "push"
                                       [|(any_to_js x1153)|])
                              | None -> ());
                             x1152))|])
    let (find' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> obj:'T list -> unknown) ->
          ?thisArg:any -> unit -> 'T or_undefined)
      =
      fun (x1172 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1164 :
                       value:'T -> index:float -> obj:'T list -> unknown)
          ->
          fun ?thisArg:(x1165 : any option) ->
            fun () ->
              or_undefined_of_js Obj.magic
                (let x1175 = this_to_js Obj.magic Obj.magic x1172 in
                 Ojs.call (Ojs.get_prop_ascii x1175 "find") "apply"
                   [|x1175;((let x1166 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1166 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1168 : Ojs.t) ->
                                          fun (x1169 : Ojs.t) ->
                                            fun (x1170 : Ojs.t) ->
                                              unknown_to_js
                                                (x1164
                                                   ~value:(Obj.magic x1168)
                                                   ~index:(Ojs.float_of_js
                                                             x1169)
                                                   ~obj:(Ojs.list_of_js
                                                           Obj.magic x1170))))|]);
                             (match x1165 with
                              | Some x1167 ->
                                  ignore
                                    (Ojs.call x1166 "push"
                                       [|(any_to_js x1167)|])
                              | None -> ());
                             x1166))|])
    let (findIndex :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> obj:'T list -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x1185 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1177 :
                       value:'T -> index:float -> obj:'T list -> unknown)
          ->
          fun ?thisArg:(x1178 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x1188 = this_to_js Obj.magic Obj.magic x1185 in
                 Ojs.call (Ojs.get_prop_ascii x1188 "findIndex") "apply"
                   [|x1188;((let x1179 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1179 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1181 : Ojs.t) ->
                                          fun (x1182 : Ojs.t) ->
                                            fun (x1183 : Ojs.t) ->
                                              unknown_to_js
                                                (x1177
                                                   ~value:(Obj.magic x1181)
                                                   ~index:(Ojs.float_of_js
                                                             x1182)
                                                   ~obj:(Ojs.list_of_js
                                                           Obj.magic x1183))))|]);
                             (match x1178 with
                              | Some x1180 ->
                                  ignore
                                    (Ojs.call x1179 "push"
                                       [|(any_to_js x1180)|])
                              | None -> ());
                             x1179))|])
    let (fill :
      ('tags, 'T) this ->
        value:'T -> ?start:float -> ?end_:float -> unit -> ('tags, 'T) this)
      =
      fun (x1195 : ('tags, 'T) this) ->
        fun ~value:(x1189 : 'T) ->
          fun ?start:(x1190 : float option) ->
            fun ?end_:(x1191 : float option) ->
              fun () ->
                this_of_js Obj.magic Obj.magic
                  (let x1198 = this_to_js Obj.magic Obj.magic x1195 in
                   Ojs.call (Ojs.get_prop_ascii x1198 "fill") "apply"
                     [|x1198;((let x1192 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1192 "push" [|(Obj.magic x1189)|]);
                               (match x1190 with
                                | Some x1194 ->
                                    ignore
                                      (Ojs.call x1192 "push"
                                         [|(Ojs.float_to_js x1194)|])
                                | None -> ());
                               (match x1191 with
                                | Some x1193 ->
                                    ignore
                                      (Ojs.call x1192 "push"
                                         [|(Ojs.float_to_js x1193)|])
                                | None -> ());
                               x1192))|])
    let (copyWithin :
      ('tags, 'T) this ->
        target:float ->
          start:float -> ?end_:float -> unit -> ('tags, 'T) this)
      =
      fun (x1206 : ('tags, 'T) this) ->
        fun ~target:(x1201 : float) ->
          fun ~start:(x1202 : float) ->
            fun ?end_:(x1203 : float option) ->
              fun () ->
                this_of_js Obj.magic Obj.magic
                  (let x1209 = this_to_js Obj.magic Obj.magic x1206 in
                   Ojs.call (Ojs.get_prop_ascii x1209 "copyWithin") "apply"
                     [|x1209;((let x1204 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1204 "push"
                                    [|(Ojs.float_to_js x1201)|]);
                               ignore
                                 (Ojs.call x1204 "push"
                                    [|(Ojs.float_to_js x1202)|]);
                               (match x1203 with
                                | Some x1205 ->
                                    ignore
                                      (Ojs.call x1204 "push"
                                         [|(Ojs.float_to_js x1205)|])
                                | None -> ());
                               x1204))|])
    let (get_length : ('tags, 'T) this -> float) =
      fun (x1212 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x1212) "length")
    let (set_length : ('tags, 'T) this -> float -> unit) =
      fun (x1215 : ('tags, 'T) this) ->
        fun (x1216 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x1215) "length"
            (Ojs.float_to_js x1216)
    let (toString : ('tags, 'T) this -> string) =
      fun (x1219 : ('tags, 'T) this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x1219) "toString" [||])
    let (toLocaleString : ('tags, 'T) this -> string) =
      fun (x1222 : ('tags, 'T) this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x1222) "toLocaleString"
             [||])
    let (pop : ('tags, 'T) this -> 'T or_undefined) =
      fun (x1225 : ('tags, 'T) this) ->
        or_undefined_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x1225) "pop" [||])
    let (push : ('tags, 'T) this -> items:'T list -> float) =
      fun (x1232 : ('tags, 'T) this) ->
        fun ~items:(x1229 : 'T list) ->
          Ojs.float_of_js
            (let x1235 = this_to_js Obj.magic Obj.magic x1232 in
             Ojs.call (Ojs.get_prop_ascii x1235 "push") "apply"
               [|x1235;((let x1230 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x1231 : 'T) ->
                              ignore
                                (Ojs.call x1230 "push" [|(Obj.magic x1231)|]))
                           x1229;
                         x1230))|])
    let (concat : ('tags, 'T) this -> items:'T ConcatArray.t list -> 'T list)
      =
      fun (x1240 : ('tags, 'T) this) ->
        fun ~items:(x1236 : 'T ConcatArray.t list) ->
          Ojs.list_of_js Obj.magic
            (let x1243 = this_to_js Obj.magic Obj.magic x1240 in
             Ojs.call (Ojs.get_prop_ascii x1243 "concat") "apply"
               [|x1243;((let x1237 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x1238 : 'T ConcatArray.t) ->
                              ignore
                                (Ojs.call x1237 "push"
                                   [|(ConcatArray.t_to_js Obj.magic x1238)|]))
                           x1236;
                         x1237))|])
    let (concat' :
      ('tags, 'T) this -> items:('T, 'T ConcatArray.t) union2 list -> 'T list)
      =
      fun (x1251 : ('tags, 'T) this) ->
        fun ~items:(x1245 : ('T, 'T ConcatArray.t) union2 list) ->
          Ojs.list_of_js Obj.magic
            (let x1254 = this_to_js Obj.magic Obj.magic x1251 in
             Ojs.call (Ojs.get_prop_ascii x1254 "concat") "apply"
               [|x1254;((let x1246 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x1247 : ('T, 'T ConcatArray.t) union2) ->
                              ignore
                                (Ojs.call x1246 "push"
                                   [|(union2_to_js Obj.magic
                                        (fun (x1249 : 'T ConcatArray.t) ->
                                           ConcatArray.t_to_js Obj.magic
                                             x1249) x1247)|])) x1245;
                         x1246))|])
    let (join : ('tags, 'T) this -> ?separator:string -> unit -> string) =
      fun (x1259 : ('tags, 'T) this) ->
        fun ?separator:(x1256 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x1262 = this_to_js Obj.magic Obj.magic x1259 in
               Ojs.call (Ojs.get_prop_ascii x1262 "join") "apply"
                 [|x1262;((let x1257 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x1256 with
                            | Some x1258 ->
                                ignore
                                  (Ojs.call x1257 "push"
                                     [|(Ojs.string_to_js x1258)|])
                            | None -> ());
                           x1257))|])
    let (reverse : ('tags, 'T) this -> 'T list) =
      fun (x1263 : ('tags, 'T) this) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x1263) "reverse" [||])
    let (shift : ('tags, 'T) this -> 'T or_undefined) =
      fun (x1267 : ('tags, 'T) this) ->
        or_undefined_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x1267) "shift" [||])
    let (slice :
      ('tags, 'T) this -> ?start:float -> ?end_:float -> unit -> 'T list) =
      fun (x1276 : ('tags, 'T) this) ->
        fun ?start:(x1271 : float option) ->
          fun ?end_:(x1272 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1279 = this_to_js Obj.magic Obj.magic x1276 in
                 Ojs.call (Ojs.get_prop_ascii x1279 "slice") "apply"
                   [|x1279;((let x1273 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1271 with
                              | Some x1275 ->
                                  ignore
                                    (Ojs.call x1273 "push"
                                       [|(Ojs.float_to_js x1275)|])
                              | None -> ());
                             (match x1272 with
                              | Some x1274 ->
                                  ignore
                                    (Ojs.call x1273 "push"
                                       [|(Ojs.float_to_js x1274)|])
                              | None -> ());
                             x1273))|])
    let (sort :
      ('tags, 'T) this ->
        ?compareFn:(a:'T -> b:'T -> float) -> unit -> ('tags, 'T) this)
      =
      fun (x1286 : ('tags, 'T) this) ->
        fun ?compareFn:(x1281 : (a:'T -> b:'T -> float) option) ->
          fun () ->
            this_of_js Obj.magic Obj.magic
              (let x1289 = this_to_js Obj.magic Obj.magic x1286 in
               Ojs.call (Ojs.get_prop_ascii x1289 "sort") "apply"
                 [|x1289;((let x1282 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x1281 with
                            | Some x1283 ->
                                ignore
                                  (Ojs.call x1282 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x1284 : Ojs.t) ->
                                             fun (x1285 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x1283 ~a:(Obj.magic x1284)
                                                    ~b:(Obj.magic x1285))))|])
                            | None -> ());
                           x1282))|])
    let (splice :
      ('tags, 'T) this ->
        start:float -> ?deleteCount:float -> unit -> 'T list)
      =
      fun (x1296 : ('tags, 'T) this) ->
        fun ~start:(x1292 : float) ->
          fun ?deleteCount:(x1293 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1299 = this_to_js Obj.magic Obj.magic x1296 in
                 Ojs.call (Ojs.get_prop_ascii x1299 "splice") "apply"
                   [|x1299;((let x1294 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1294 "push"
                                  [|(Ojs.float_to_js x1292)|]);
                             (match x1293 with
                              | Some x1295 ->
                                  ignore
                                    (Ojs.call x1294 "push"
                                       [|(Ojs.float_to_js x1295)|])
                              | None -> ());
                             x1294))|])
    let (splice' :
      ('tags, 'T) this ->
        start:float -> deleteCount:float -> items:'T list -> 'T list)
      =
      fun (x1306 : ('tags, 'T) this) ->
        fun ~start:(x1301 : float) ->
          fun ~deleteCount:(x1302 : float) ->
            fun ~items:(x1303 : 'T list) ->
              Ojs.list_of_js Obj.magic
                (let x1309 = this_to_js Obj.magic Obj.magic x1306 in
                 Ojs.call (Ojs.get_prop_ascii x1309 "splice") "apply"
                   [|x1309;((let x1304 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1304 "push"
                                  [|(Ojs.float_to_js x1301)|]);
                             ignore
                               (Ojs.call x1304 "push"
                                  [|(Ojs.float_to_js x1302)|]);
                             List.iter
                               (fun (x1305 : 'T) ->
                                  ignore
                                    (Ojs.call x1304 "push"
                                       [|(Obj.magic x1305)|])) x1303;
                             x1304))|])
    let (unshift : ('tags, 'T) this -> items:'T list -> float) =
      fun (x1314 : ('tags, 'T) this) ->
        fun ~items:(x1311 : 'T list) ->
          Ojs.float_of_js
            (let x1317 = this_to_js Obj.magic Obj.magic x1314 in
             Ojs.call (Ojs.get_prop_ascii x1317 "unshift") "apply"
               [|x1317;((let x1312 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x1313 : 'T) ->
                              ignore
                                (Ojs.call x1312 "push" [|(Obj.magic x1313)|]))
                           x1311;
                         x1312))|])
    let (indexOf :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> float)
      =
      fun (x1322 : ('tags, 'T) this) ->
        fun ~searchElement:(x1318 : 'T) ->
          fun ?fromIndex:(x1319 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1325 = this_to_js Obj.magic Obj.magic x1322 in
                 Ojs.call (Ojs.get_prop_ascii x1325 "indexOf") "apply"
                   [|x1325;((let x1320 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1320 "push" [|(Obj.magic x1318)|]);
                             (match x1319 with
                              | Some x1321 ->
                                  ignore
                                    (Ojs.call x1320 "push"
                                       [|(Ojs.float_to_js x1321)|])
                              | None -> ());
                             x1320))|])
    let (lastIndexOf :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> float)
      =
      fun (x1330 : ('tags, 'T) this) ->
        fun ~searchElement:(x1326 : 'T) ->
          fun ?fromIndex:(x1327 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1333 = this_to_js Obj.magic Obj.magic x1330 in
                 Ojs.call (Ojs.get_prop_ascii x1333 "lastIndexOf") "apply"
                   [|x1333;((let x1328 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1328 "push" [|(Obj.magic x1326)|]);
                             (match x1327 with
                              | Some x1329 ->
                                  ignore
                                    (Ojs.call x1328 "push"
                                       [|(Ojs.float_to_js x1329)|])
                              | None -> ());
                             x1328))|])
    let (every :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x1342 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1334 :
                       value:'T -> index:float -> array:'T list -> bool)
          ->
          fun ?thisArg:(x1335 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1345 = this_to_js Obj.magic Obj.magic x1342 in
                 Ojs.call (Ojs.get_prop_ascii x1345 "every") "apply"
                   [|x1345;((let x1336 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1336 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1338 : Ojs.t) ->
                                          fun (x1339 : Ojs.t) ->
                                            fun (x1340 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x1334
                                                   ~value:(Obj.magic x1338)
                                                   ~index:(Ojs.float_of_js
                                                             x1339)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1340))))|]);
                             (match x1335 with
                              | Some x1337 ->
                                  ignore
                                    (Ojs.call x1336 "push"
                                       [|(any_to_js x1337)|])
                              | None -> ());
                             x1336))|])
    let (every' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x1354 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1346 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x1347 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1357 = this_to_js Obj.magic Obj.magic x1354 in
                 Ojs.call (Ojs.get_prop_ascii x1357 "every") "apply"
                   [|x1357;((let x1348 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1348 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1350 : Ojs.t) ->
                                          fun (x1351 : Ojs.t) ->
                                            fun (x1352 : Ojs.t) ->
                                              unknown_to_js
                                                (x1346
                                                   ~value:(Obj.magic x1350)
                                                   ~index:(Ojs.float_of_js
                                                             x1351)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1352))))|]);
                             (match x1347 with
                              | Some x1349 ->
                                  ignore
                                    (Ojs.call x1348 "push"
                                       [|(any_to_js x1349)|])
                              | None -> ());
                             x1348))|])
    let (some :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x1366 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1358 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x1359 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1369 = this_to_js Obj.magic Obj.magic x1366 in
                 Ojs.call (Ojs.get_prop_ascii x1369 "some") "apply"
                   [|x1369;((let x1360 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1360 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1362 : Ojs.t) ->
                                          fun (x1363 : Ojs.t) ->
                                            fun (x1364 : Ojs.t) ->
                                              unknown_to_js
                                                (x1358
                                                   ~value:(Obj.magic x1362)
                                                   ~index:(Ojs.float_of_js
                                                             x1363)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1364))))|]);
                             (match x1359 with
                              | Some x1361 ->
                                  ignore
                                    (Ojs.call x1360 "push"
                                       [|(any_to_js x1361)|])
                              | None -> ());
                             x1360))|])
    let (forEach :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> index:float -> array:'T list -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x1378 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1370 :
                        value:'T -> index:float -> array:'T list -> unit)
          ->
          fun ?thisArg:(x1371 : any option) ->
            fun () ->
              ignore
                (let x1381 = this_to_js Obj.magic Obj.magic x1378 in
                 Ojs.call (Ojs.get_prop_ascii x1381 "forEach") "apply"
                   [|x1381;((let x1372 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1372 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1374 : Ojs.t) ->
                                          fun (x1375 : Ojs.t) ->
                                            fun (x1376 : Ojs.t) ->
                                              x1370 ~value:(Obj.magic x1374)
                                                ~index:(Ojs.float_of_js x1375)
                                                ~array:(Ojs.list_of_js
                                                          Obj.magic x1376)))|]);
                             (match x1371 with
                              | Some x1373 ->
                                  ignore
                                    (Ojs.call x1372 "push"
                                       [|(any_to_js x1373)|])
                              | None -> ());
                             x1372))|])
    let (map :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> index:float -> array:'T list -> 'U) ->
          ?thisArg:any -> unit -> 'U list)
      =
      fun (x1390 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1382 :
                        value:'T -> index:float -> array:'T list -> 'U)
          ->
          fun ?thisArg:(x1383 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1393 = this_to_js Obj.magic Obj.magic x1390 in
                 Ojs.call (Ojs.get_prop_ascii x1393 "map") "apply"
                   [|x1393;((let x1384 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1384 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1386 : Ojs.t) ->
                                          fun (x1387 : Ojs.t) ->
                                            fun (x1388 : Ojs.t) ->
                                              Obj.magic
                                                (x1382
                                                   ~value:(Obj.magic x1386)
                                                   ~index:(Ojs.float_of_js
                                                             x1387)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1388))))|]);
                             (match x1383 with
                              | Some x1385 ->
                                  ignore
                                    (Ojs.call x1384 "push"
                                       [|(any_to_js x1385)|])
                              | None -> ());
                             x1384))|])
    let (filter :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> 'S list)
      =
      fun (x1403 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1395 :
                       value:'T -> index:float -> array:'T list -> bool)
          ->
          fun ?thisArg:(x1396 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1406 = this_to_js Obj.magic Obj.magic x1403 in
                 Ojs.call (Ojs.get_prop_ascii x1406 "filter") "apply"
                   [|x1406;((let x1397 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1397 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1399 : Ojs.t) ->
                                          fun (x1400 : Ojs.t) ->
                                            fun (x1401 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x1395
                                                   ~value:(Obj.magic x1399)
                                                   ~index:(Ojs.float_of_js
                                                             x1400)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1401))))|]);
                             (match x1396 with
                              | Some x1398 ->
                                  ignore
                                    (Ojs.call x1397 "push"
                                       [|(any_to_js x1398)|])
                              | None -> ());
                             x1397))|])
    let (filter' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> 'T list)
      =
      fun (x1416 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1408 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x1409 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1419 = this_to_js Obj.magic Obj.magic x1416 in
                 Ojs.call (Ojs.get_prop_ascii x1419 "filter") "apply"
                   [|x1419;((let x1410 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1410 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1412 : Ojs.t) ->
                                          fun (x1413 : Ojs.t) ->
                                            fun (x1414 : Ojs.t) ->
                                              unknown_to_js
                                                (x1408
                                                   ~value:(Obj.magic x1412)
                                                   ~index:(Ojs.float_of_js
                                                             x1413)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1414))))|]);
                             (match x1409 with
                              | Some x1411 ->
                                  ignore
                                    (Ojs.call x1410 "push"
                                       [|(any_to_js x1411)|])
                              | None -> ());
                             x1410))|])
    let (reduce :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> 'T)
      =
      fun (x1427 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1421 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x1427) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x1422 : Ojs.t) ->
                       fun (x1423 : Ojs.t) ->
                         fun (x1424 : Ojs.t) ->
                           fun (x1425 : Ojs.t) ->
                             Obj.magic
                               (x1421 ~previousValue:(Obj.magic x1422)
                                  ~currentValue:(Obj.magic x1423)
                                  ~currentIndex:(Ojs.float_of_js x1424)
                                  ~array:(Ojs.list_of_js Obj.magic x1425))))|])
    let (reduce' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> initialValue:'T -> 'T)
      =
      fun (x1437 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1430 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          fun ~initialValue:(x1436 : 'T) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1437) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x1431 : Ojs.t) ->
                         fun (x1432 : Ojs.t) ->
                           fun (x1433 : Ojs.t) ->
                             fun (x1434 : Ojs.t) ->
                               Obj.magic
                                 (x1430 ~previousValue:(Obj.magic x1431)
                                    ~currentValue:(Obj.magic x1432)
                                    ~currentIndex:(Ojs.float_of_js x1433)
                                    ~array:(Ojs.list_of_js Obj.magic x1434))));(
                   Obj.magic x1436)|])
    let (reduce'' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'U ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x1447 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1440 :
                        previousValue:'U ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'U)
          ->
          fun ~initialValue:(x1446 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1447) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x1441 : Ojs.t) ->
                         fun (x1442 : Ojs.t) ->
                           fun (x1443 : Ojs.t) ->
                             fun (x1444 : Ojs.t) ->
                               Obj.magic
                                 (x1440 ~previousValue:(Obj.magic x1441)
                                    ~currentValue:(Obj.magic x1442)
                                    ~currentIndex:(Ojs.float_of_js x1443)
                                    ~array:(Ojs.list_of_js Obj.magic x1444))));(
                   Obj.magic x1446)|])
    let (reduceRight :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> 'T)
      =
      fun (x1456 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1450 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x1456) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x1451 : Ojs.t) ->
                       fun (x1452 : Ojs.t) ->
                         fun (x1453 : Ojs.t) ->
                           fun (x1454 : Ojs.t) ->
                             Obj.magic
                               (x1450 ~previousValue:(Obj.magic x1451)
                                  ~currentValue:(Obj.magic x1452)
                                  ~currentIndex:(Ojs.float_of_js x1453)
                                  ~array:(Ojs.list_of_js Obj.magic x1454))))|])
    let (reduceRight' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> initialValue:'T -> 'T)
      =
      fun (x1466 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1459 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          fun ~initialValue:(x1465 : 'T) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1466) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x1460 : Ojs.t) ->
                         fun (x1461 : Ojs.t) ->
                           fun (x1462 : Ojs.t) ->
                             fun (x1463 : Ojs.t) ->
                               Obj.magic
                                 (x1459 ~previousValue:(Obj.magic x1460)
                                    ~currentValue:(Obj.magic x1461)
                                    ~currentIndex:(Ojs.float_of_js x1462)
                                    ~array:(Ojs.list_of_js Obj.magic x1463))));(
                   Obj.magic x1465)|])
    let (reduceRight'' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'U ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x1476 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1469 :
                        previousValue:'U ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'U)
          ->
          fun ~initialValue:(x1475 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1476) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x1470 : Ojs.t) ->
                         fun (x1471 : Ojs.t) ->
                           fun (x1472 : Ojs.t) ->
                             fun (x1473 : Ojs.t) ->
                               Obj.magic
                                 (x1469 ~previousValue:(Obj.magic x1470)
                                    ~currentValue:(Obj.magic x1471)
                                    ~currentIndex:(Ojs.float_of_js x1472)
                                    ~array:(Ojs.list_of_js Obj.magic x1473))));(
                   Obj.magic x1475)|])
    let (get : ('tags, 'T) this -> float -> 'T) =
      fun (x1479 : ('tags, 'T) this) ->
        fun (x1482 : float) ->
          Obj.magic
            (Ojs.get_prop (this_to_js Obj.magic Obj.magic x1479)
               (Ojs.float_to_js x1482))
    let (set : ('tags, 'T) this -> float -> 'T -> unit) =
      fun (x1483 : ('tags, 'T) this) ->
        fun (x1486 : float) ->
          fun (x1487 : 'T) ->
            Ojs.set_prop (this_to_js Obj.magic Obj.magic x1483)
              (Ojs.float_to_js x1486) (Obj.magic x1487)
    let (from : ('T ArrayLike.t, 'T Iterable.t) union2 -> 'T list) =
      fun (x1488 : ('T ArrayLike.t, 'T Iterable.t) union2) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "from"
             [|(union2_to_js
                  (fun (x1489 : 'T ArrayLike.t) ->
                     ArrayLike.t_to_js Obj.magic x1489)
                  (fun (x1491 : 'T Iterable.t) ->
                     Iterable.t_to_js Obj.magic x1491) x1488)|])
    let (from' :
      iterable:('T ArrayLike.t, 'T Iterable.t) union2 ->
        mapfn:(v:'T -> k:float -> 'U) -> ?thisArg:any -> unit -> 'U list)
      =
      fun ~iterable:(x1494 : ('T ArrayLike.t, 'T Iterable.t) union2) ->
        fun ~mapfn:(x1495 : v:'T -> k:float -> 'U) ->
          fun ?thisArg:(x1496 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1505 = Ojs.get_prop_ascii Ojs.global "Array" in
                 Ojs.call (Ojs.get_prop_ascii x1505 "from") "apply"
                   [|x1505;((let x1497 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1497 "push"
                                  [|(union2_to_js
                                       (fun (x1501 : 'T ArrayLike.t) ->
                                          ArrayLike.t_to_js Obj.magic x1501)
                                       (fun (x1503 : 'T Iterable.t) ->
                                          Iterable.t_to_js Obj.magic x1503)
                                       x1494)|]);
                             ignore
                               (Ojs.call x1497 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x1499 : Ojs.t) ->
                                          fun (x1500 : Ojs.t) ->
                                            Obj.magic
                                              (x1495 ~v:(Obj.magic x1499)
                                                 ~k:(Ojs.float_of_js x1500))))|]);
                             (match x1496 with
                              | Some x1498 ->
                                  ignore
                                    (Ojs.call x1497 "push"
                                       [|(any_to_js x1498)|])
                              | None -> ());
                             x1497))|])
    let (from'' : 'T ArrayLike.t -> 'T list) =
      fun (x1507 : 'T ArrayLike.t) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "from"
             [|(ArrayLike.t_to_js Obj.magic x1507)|])
    let (from''' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> 'U) -> ?thisArg:any -> unit -> 'U list)
      =
      fun ~arrayLike:(x1510 : 'T ArrayLike.t) ->
        fun ~mapfn:(x1511 : v:'T -> k:float -> 'U) ->
          fun ?thisArg:(x1512 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1518 = Ojs.get_prop_ascii Ojs.global "Array" in
                 Ojs.call (Ojs.get_prop_ascii x1518 "from") "apply"
                   [|x1518;((let x1513 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1513 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x1510)|]);
                             ignore
                               (Ojs.call x1513 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x1515 : Ojs.t) ->
                                          fun (x1516 : Ojs.t) ->
                                            Obj.magic
                                              (x1511 ~v:(Obj.magic x1515)
                                                 ~k:(Ojs.float_of_js x1516))))|]);
                             (match x1512 with
                              | Some x1514 ->
                                  ignore
                                    (Ojs.call x1513 "push"
                                       [|(any_to_js x1514)|])
                              | None -> ());
                             x1513))|])
    let (of_ : 'T list -> 'T list) =
      fun (x1520 : 'T list) ->
        Ojs.list_of_js Obj.magic
          (let x1523 = Ojs.get_prop_ascii Ojs.global "Array" in
           Ojs.call (Ojs.get_prop_ascii x1523 "of") "apply"
             [|x1523;((let x1521 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x1522 : 'T) ->
                            ignore
                              (Ojs.call x1521 "push" [|(Obj.magic x1522)|]))
                         x1520;
                       x1521))|])
    let (create : ?arrayLength:float -> unit -> any list) =
      fun ?arrayLength:(x1525 : float option) ->
        fun () ->
          Ojs.list_of_js any_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Array")
               (let x1526 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x1525 with
                 | Some x1527 ->
                     ignore
                       (Ojs.call x1526 "push" [|(Ojs.float_to_js x1527)|])
                 | None -> ());
                x1526))
    let (create' : float -> 'T list) =
      fun (x1529 : float) ->
        Ojs.list_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
             [|(Ojs.float_to_js x1529)|])
    let (create'' : 'T list -> 'T list) =
      fun (x1531 : 'T list) ->
        Ojs.list_of_js Obj.magic
          (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Array")
             (let x1532 =
                Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
              List.iter
                (fun (x1533 : 'T) ->
                   ignore (Ojs.call x1532 "push" [|(Obj.magic x1533)|]))
                x1531;
              x1532))
    let (invoke : ?arrayLength:float -> unit -> any list) =
      fun ?arrayLength:(x1535 : float option) ->
        fun () ->
          Ojs.list_of_js any_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "apply"
               [|Ojs.null;((let x1536 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x1535 with
                             | Some x1537 ->
                                 ignore
                                   (Ojs.call x1536 "push"
                                      [|(Ojs.float_to_js x1537)|])
                             | None -> ());
                            x1536))|])
    let (invoke' : float -> 'T list) =
      fun (x1539 : float) ->
        Ojs.list_of_js Obj.magic
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "Array")
             [|(Ojs.float_to_js x1539)|])
    let (invoke'' : 'T list -> 'T list) =
      fun (x1541 : 'T list) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "apply"
             [|Ojs.null;((let x1542 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x1543 : 'T) ->
                               ignore
                                 (Ojs.call x1542 "push" [|(Obj.magic x1543)|]))
                            x1541;
                          x1542))|])
    let (isArray : any -> bool) =
      fun (x1545 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "isArray"
             [|(any_to_js x1545)|])
    let (prototype : unit -> any list) =
      fun () ->
        Ojs.list_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Array")
             "prototype")
    let cast_from = Obj.magic
    let (to_ml : 'T t -> 'T list) =
      fun (x1547 : 'T t) ->
        Ojs.list_of_js Obj.magic (t_to_js Obj.magic x1547)
    let (of_ml : 'T list -> 'T t) =
      fun (x1550 : 'T list) ->
        t_of_js Obj.magic (Ojs.list_to_js Obj.magic x1550)
  end
module RegExpMatchArray =
  struct
    module AnonymousInterface16 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x1554 : Ojs.t) -> x1554
        and t_to_js : t -> Ojs.t = fun (x1553 : Ojs.t) -> x1553
        let (get : t -> string -> string) =
          fun (x1555 : t) ->
            fun (x1556 : string) ->
              Ojs.string_of_js
                (Ojs.get_prop (t_to_js x1555) (Ojs.string_to_js x1556))
        let (set : t -> string -> string -> unit) =
          fun (x1557 : t) ->
            fun (x1558 : string) ->
              fun (x1559 : string) ->
                Ojs.set_prop (t_to_js x1557) (Ojs.string_to_js x1558)
                  (Ojs.string_to_js x1559)
      end
    type t =
      [ `Array of string  | `Array of string  | `RegExpMatchArray 
      | string ArrayLike.tags_1 | string IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1561 : Ojs.t) -> t_of_js x1561
    and t_0_to_js : t_0 -> Ojs.t = fun (x1560 : t) -> t_to_js x1560
    type tags =
      [ `Array of string  | `Array of string  | `RegExpMatchArray 
      | string ArrayLike.tags_1 | string IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `RegExpMatchArray ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x1564 : Ojs.t) -> intf_of_js __tags_of_js x1564
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x1562 : __tags intf) -> intf_to_js __tags_to_js x1562
    let (get_groups : 'tags this -> AnonymousInterface16.t) =
      fun (x1566 : 'tags this) ->
        AnonymousInterface16.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1566) "groups")
    let (set_groups : 'tags this -> AnonymousInterface16.t -> unit) =
      fun (x1568 : 'tags this) ->
        fun (x1569 : AnonymousInterface16.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1568) "groups"
            (AnonymousInterface16.t_to_js x1569)
    let (get_index : 'tags this -> float) =
      fun (x1571 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1571) "index")
    let (set_index : 'tags this -> float -> unit) =
      fun (x1573 : 'tags this) ->
        fun (x1574 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1573) "index"
            (Ojs.float_to_js x1574)
    let (get_input : 'tags this -> string) =
      fun (x1576 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1576) "input")
    let (set_input : 'tags this -> string -> unit) =
      fun (x1578 : 'tags this) ->
        fun (x1579 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1578) "input"
            (Ojs.string_to_js x1579)
    let (create :
      groups:AnonymousInterface16.t ->
        index:float -> input:string -> unit -> t)
      =
      fun ~groups:(x1581 : AnonymousInterface16.t) ->
        fun ~index:(x1582 : float) ->
          fun ~input:(x1583 : string) ->
            fun () ->
              let x1584 = Ojs.empty_obj () in
              Ojs.set_prop_ascii x1584 "groups"
                (AnonymousInterface16.t_to_js x1581);
              Ojs.set_prop_ascii x1584 "index" (Ojs.float_to_js x1582);
              Ojs.set_prop_ascii x1584 "input" (Ojs.string_to_js x1583);
              t_of_js x1584
    let cast_from = Obj.magic
  end
module RegExpExecArray =
  struct
    module AnonymousInterface16 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x1586 : Ojs.t) -> x1586
        and t_to_js : t -> Ojs.t = fun (x1585 : Ojs.t) -> x1585
        let (get : t -> string -> string) =
          fun (x1587 : t) ->
            fun (x1588 : string) ->
              Ojs.string_of_js
                (Ojs.get_prop (t_to_js x1587) (Ojs.string_to_js x1588))
        let (set : t -> string -> string -> unit) =
          fun (x1589 : t) ->
            fun (x1590 : string) ->
              fun (x1591 : string) ->
                Ojs.set_prop (t_to_js x1589) (Ojs.string_to_js x1590)
                  (Ojs.string_to_js x1591)
      end
    type t =
      [ `Array of string  | `Array of string  | `RegExpExecArray 
      | string ArrayLike.tags_1 | string IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1593 : Ojs.t) -> t_of_js x1593
    and t_0_to_js : t_0 -> Ojs.t = fun (x1592 : t) -> t_to_js x1592
    type tags =
      [ `Array of string  | `Array of string  | `RegExpExecArray 
      | string ArrayLike.tags_1 | string IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `RegExpExecArray ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x1596 : Ojs.t) -> intf_of_js __tags_of_js x1596
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x1594 : __tags intf) -> intf_to_js __tags_to_js x1594
    let (get_groups : 'tags this -> AnonymousInterface16.t) =
      fun (x1598 : 'tags this) ->
        AnonymousInterface16.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1598) "groups")
    let (set_groups : 'tags this -> AnonymousInterface16.t -> unit) =
      fun (x1600 : 'tags this) ->
        fun (x1601 : AnonymousInterface16.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1600) "groups"
            (AnonymousInterface16.t_to_js x1601)
    let (get_index : 'tags this -> float) =
      fun (x1603 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1603) "index")
    let (set_index : 'tags this -> float -> unit) =
      fun (x1605 : 'tags this) ->
        fun (x1606 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1605) "index"
            (Ojs.float_to_js x1606)
    let (get_input : 'tags this -> string) =
      fun (x1608 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1608) "input")
    let (set_input : 'tags this -> string -> unit) =
      fun (x1610 : 'tags this) ->
        fun (x1611 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1610) "input"
            (Ojs.string_to_js x1611)
    let (create :
      groups:AnonymousInterface16.t ->
        index:float -> input:string -> unit -> t)
      =
      fun ~groups:(x1613 : AnonymousInterface16.t) ->
        fun ~index:(x1614 : float) ->
          fun ~input:(x1615 : string) ->
            fun () ->
              let x1616 = Ojs.empty_obj () in
              Ojs.set_prop_ascii x1616 "groups"
                (AnonymousInterface16.t_to_js x1613);
              Ojs.set_prop_ascii x1616 "index" (Ojs.float_to_js x1614);
              Ojs.set_prop_ascii x1616 "input" (Ojs.string_to_js x1615);
              t_of_js x1616
    let cast_from = Obj.magic
  end
module RegExp =
  struct
    type t = [ `RegExp ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1618 : Ojs.t) -> t_of_js x1618
    and t_0_to_js : t_0 -> Ojs.t = fun (x1617 : t) -> t_to_js x1617
    type tags = [ `RegExp ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `RegExp ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x1621 : Ojs.t) -> intf_of_js __tags_of_js x1621
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x1619 : __tags intf) -> intf_to_js __tags_to_js x1619
    let (get_dotAll : 'tags this -> bool) =
      fun (x1623 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1623) "dotAll")
    let (get_flags : 'tags this -> string) =
      fun (x1625 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1625) "flags")
    let (get_sticky : 'tags this -> bool) =
      fun (x1627 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1627) "sticky")
    let (get_unicode : 'tags this -> bool) =
      fun (x1629 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1629) "unicode")
    let (exec : 'tags this -> string:string -> RegExpExecArray.t or_null) =
      fun (x1632 : 'tags this) ->
        fun ~string:(x1631 : string) ->
          or_null_of_js RegExpExecArray.t_of_js
            (Ojs.call (this_to_js Obj.magic x1632) "exec"
               [|(Ojs.string_to_js x1631)|])
    let (test : 'tags this -> string:string -> bool) =
      fun (x1636 : 'tags this) ->
        fun ~string:(x1635 : string) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic x1636) "test"
               [|(Ojs.string_to_js x1635)|])
    let (get_source : 'tags this -> string) =
      fun (x1638 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1638) "source")
    let (get_global : 'tags this -> bool) =
      fun (x1640 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1640) "global")
    let (get_ignoreCase : 'tags this -> bool) =
      fun (x1642 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1642) "ignoreCase")
    let (get_multiline : 'tags this -> bool) =
      fun (x1644 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1644) "multiline")
    let (get_lastIndex : 'tags this -> float) =
      fun (x1646 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1646) "lastIndex")
    let (set_lastIndex : 'tags this -> float -> unit) =
      fun (x1648 : 'tags this) ->
        fun (x1649 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1648) "lastIndex"
            (Ojs.float_to_js x1649)
    let (compile :
      'tags this -> pattern:string -> ?flags:string -> unit -> 'tags this) =
      fun (x1655 : 'tags this) ->
        fun ~pattern:(x1651 : string) ->
          fun ?flags:(x1652 : string option) ->
            fun () ->
              this_of_js Obj.magic
                (let x1657 = this_to_js Obj.magic x1655 in
                 Ojs.call (Ojs.get_prop_ascii x1657 "compile") "apply"
                   [|x1657;((let x1653 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1653 "push"
                                  [|(Ojs.string_to_js x1651)|]);
                             (match x1652 with
                              | Some x1654 ->
                                  ignore
                                    (Ojs.call x1653 "push"
                                       [|(Ojs.string_to_js x1654)|])
                              | None -> ());
                             x1653))|])
    let (create : pattern:t or_string -> ?flags:string -> unit -> t) =
      fun ~pattern:(x1659 : t or_string) ->
        fun ?flags:(x1660 : string option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "RegExp")
                 (let x1661 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore
                    (Ojs.call x1661 "push"
                       [|(or_string_to_js t_to_js x1659)|]);
                  (match x1660 with
                   | Some x1662 ->
                       ignore
                         (Ojs.call x1661 "push" [|(Ojs.string_to_js x1662)|])
                   | None -> ());
                  x1661))
    let (invoke : pattern:t or_string -> ?flags:string -> unit -> t) =
      fun ~pattern:(x1664 : t or_string) ->
        fun ?flags:(x1665 : string option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "apply"
                 [|Ojs.null;((let x1666 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x1666 "push"
                                   [|(or_string_to_js t_to_js x1664)|]);
                              (match x1665 with
                               | Some x1667 ->
                                   ignore
                                     (Ojs.call x1666 "push"
                                        [|(Ojs.string_to_js x1667)|])
                               | None -> ());
                              x1666))|])
    let (create' : t or_string -> t) =
      fun (x1669 : t or_string) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "RegExp")
             [|(or_string_to_js t_to_js x1669)|])
    let (create'' : pattern:string -> ?flags:string -> unit -> t) =
      fun ~pattern:(x1671 : string) ->
        fun ?flags:(x1672 : string option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "RegExp")
                 (let x1673 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore (Ojs.call x1673 "push" [|(Ojs.string_to_js x1671)|]);
                  (match x1672 with
                   | Some x1674 ->
                       ignore
                         (Ojs.call x1673 "push" [|(Ojs.string_to_js x1674)|])
                   | None -> ());
                  x1673))
    let (invoke' : t or_string -> t) =
      fun (x1675 : t or_string) ->
        t_of_js
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "RegExp")
             [|(or_string_to_js t_to_js x1675)|])
    let (invoke'' : pattern:string -> ?flags:string -> unit -> t) =
      fun ~pattern:(x1677 : string) ->
        fun ?flags:(x1678 : string option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "apply"
                 [|Ojs.null;((let x1679 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x1679 "push"
                                   [|(Ojs.string_to_js x1677)|]);
                              (match x1678 with
                               | Some x1680 ->
                                   ignore
                                     (Ojs.call x1679 "push"
                                        [|(Ojs.string_to_js x1680)|])
                               | None -> ());
                              x1679))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "prototype")
    let (_1 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$1")
    let (_2 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$2")
    let (_3 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$3")
    let (_4 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$4")
    let (_5 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$5")
    let (_6 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$6")
    let (_7 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$7")
    let (_8 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$8")
    let (_9 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$9")
    let (input : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "input")
    let (__ : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$_")
    let (lastMatch : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "lastMatch")
    let (__' : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$&")
    let (lastParen : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "lastParen")
    let (__'' : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$+")
    let (leftContext : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "leftContext")
    let (__''' : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$`")
    let (rightContext : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "rightContext")
    let (__'''' : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$'")
    let cast_from = Obj.magic
  end
module Partial =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x1682 : Ojs.t) -> any_of_js x1682
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x1681 : any) -> any_to_js x1681
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x1685 : Ojs.t) -> t_of_js __T_of_js x1685
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x1683 : __T t) -> t_to_js __T_to_js x1683
  end
module rec
  Date:sig
         type t = [ `Date ] intf
         type t_0 = t
         [@@@js.stop ]
         type tags = [ `Date ]
         type tags_0 = tags
         [@@@js.start ]
         [@@@js.implem type tags = [ `Date ]
           type tags_0 = tags]
         type 'tags this = 'tags intf constraint 'tags = [> `Date ]
         val t_to_js : t -> Ojs.t
         val t_of_js : Ojs.t -> t
         val t_0_to_js : t_0 -> Ojs.t
         val t_0_of_js : Ojs.t -> t_0
         val toLocaleString :
           'tags this ->
             ?locales:string list or_string ->
               ?options:Intl.DateTimeFormatOptions.t -> unit -> string
         val toLocaleDateString :
           'tags this ->
             ?locales:string list or_string ->
               ?options:Intl.DateTimeFormatOptions.t -> unit -> string
         val toLocaleTimeString :
           'tags this ->
             ?locales:string list or_string ->
               ?options:Intl.DateTimeFormatOptions.t -> unit -> string
         val toString : 'tags this -> string
         val toDateString : 'tags this -> string
         val toTimeString : 'tags this -> string
         val toLocaleString' : 'tags this -> string
         val toLocaleDateString' : 'tags this -> string
         val toLocaleTimeString' : 'tags this -> string
         val valueOf : 'tags this -> float
         val getTime : 'tags this -> float
         val getFullYear : 'tags this -> float
         val getUTCFullYear : 'tags this -> float
         val getMonth : 'tags this -> float
         val getUTCMonth : 'tags this -> float
         val getDate : 'tags this -> float
         val getUTCDate : 'tags this -> float
         val getDay : 'tags this -> float
         val getUTCDay : 'tags this -> float
         val getHours : 'tags this -> float
         val getUTCHours : 'tags this -> float
         val getMinutes : 'tags this -> float
         val getUTCMinutes : 'tags this -> float
         val getSeconds : 'tags this -> float
         val getUTCSeconds : 'tags this -> float
         val getMilliseconds : 'tags this -> float
         val getUTCMilliseconds : 'tags this -> float
         val getTimezoneOffset : 'tags this -> float
         val setTime : 'tags this -> time:float -> float
         val setMilliseconds : 'tags this -> ms:float -> float
         val setUTCMilliseconds : 'tags this -> ms:float -> float
         val setSeconds :
           'tags this -> sec:float -> ?ms:float -> unit -> float
         val setUTCSeconds :
           'tags this -> sec:float -> ?ms:float -> unit -> float
         val setMinutes :
           'tags this ->
             min:float -> ?sec:float -> ?ms:float -> unit -> float
         val setUTCMinutes :
           'tags this ->
             min:float -> ?sec:float -> ?ms:float -> unit -> float
         val setHours :
           'tags this ->
             hours:float ->
               ?min:float -> ?sec:float -> ?ms:float -> unit -> float
         val setUTCHours :
           'tags this ->
             hours:float ->
               ?min:float -> ?sec:float -> ?ms:float -> unit -> float
         val setDate : 'tags this -> date:float -> float
         val setUTCDate : 'tags this -> date:float -> float
         val setMonth :
           'tags this -> month:float -> ?date:float -> unit -> float
         val setUTCMonth :
           'tags this -> month:float -> ?date:float -> unit -> float
         val setFullYear :
           'tags this ->
             year:float -> ?month:float -> ?date:float -> unit -> float
         val setUTCFullYear :
           'tags this ->
             year:float -> ?month:float -> ?date:float -> unit -> float
         val toUTCString : 'tags this -> string
         val toISOString : 'tags this -> string
         val toJSON : 'tags this -> ?key:any -> unit -> string
         val create : t or_string or_number -> t
         val create' : unit -> t
         val create'' : string or_number -> t
         val create''' :
           year:float ->
             month:float ->
               ?date:float ->
                 ?hours:float ->
                   ?minutes:float -> ?seconds:float -> ?ms:float -> unit -> t
         val invoke : unit -> string
         val prototype : unit -> t
         val parse : string -> float
         val utc :
           year:float ->
             month:float ->
               ?date:float ->
                 ?hours:float ->
                   ?minutes:float ->
                     ?seconds:float -> ?ms:float -> unit -> float
         val now : unit -> float
         val cast_from : 'tags this -> t
       end =
  struct
    type t = [ `Date ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1688 : Ojs.t) -> t_of_js x1688
    and t_0_to_js : t_0 -> Ojs.t = fun (x1687 : t) -> t_to_js x1687
    type tags = [ `Date ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Date ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x1691 : Ojs.t) -> intf_of_js __tags_of_js x1691
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x1689 : __tags intf) -> intf_to_js __tags_to_js x1689
    let (toLocaleString :
      'tags this ->
        ?locales:string list or_string ->
          ?options:Intl.DateTimeFormatOptions.t -> unit -> string)
      =
      fun (x1700 : 'tags this) ->
        fun ?locales:(x1693 : string list or_string option) ->
          fun ?options:(x1694 : Intl.DateTimeFormatOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x1702 = this_to_js Obj.magic x1700 in
                 Ojs.call (Ojs.get_prop_ascii x1702 "toLocaleString") "apply"
                   [|x1702;((let x1695 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1693 with
                              | Some x1697 ->
                                  ignore
                                    (Ojs.call x1695 "push"
                                       [|(or_string_to_js
                                            (fun (x1698 : string list) ->
                                               Ojs.list_to_js
                                                 Ojs.string_to_js x1698)
                                            x1697)|])
                              | None -> ());
                             (match x1694 with
                              | Some x1696 ->
                                  ignore
                                    (Ojs.call x1695 "push"
                                       [|(Intl.DateTimeFormatOptions.t_to_js
                                            x1696)|])
                              | None -> ());
                             x1695))|])
    let (toLocaleDateString :
      'tags this ->
        ?locales:string list or_string ->
          ?options:Intl.DateTimeFormatOptions.t -> unit -> string)
      =
      fun (x1710 : 'tags this) ->
        fun ?locales:(x1703 : string list or_string option) ->
          fun ?options:(x1704 : Intl.DateTimeFormatOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x1712 = this_to_js Obj.magic x1710 in
                 Ojs.call (Ojs.get_prop_ascii x1712 "toLocaleDateString")
                   "apply"
                   [|x1712;((let x1705 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1703 with
                              | Some x1707 ->
                                  ignore
                                    (Ojs.call x1705 "push"
                                       [|(or_string_to_js
                                            (fun (x1708 : string list) ->
                                               Ojs.list_to_js
                                                 Ojs.string_to_js x1708)
                                            x1707)|])
                              | None -> ());
                             (match x1704 with
                              | Some x1706 ->
                                  ignore
                                    (Ojs.call x1705 "push"
                                       [|(Intl.DateTimeFormatOptions.t_to_js
                                            x1706)|])
                              | None -> ());
                             x1705))|])
    let (toLocaleTimeString :
      'tags this ->
        ?locales:string list or_string ->
          ?options:Intl.DateTimeFormatOptions.t -> unit -> string)
      =
      fun (x1720 : 'tags this) ->
        fun ?locales:(x1713 : string list or_string option) ->
          fun ?options:(x1714 : Intl.DateTimeFormatOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x1722 = this_to_js Obj.magic x1720 in
                 Ojs.call (Ojs.get_prop_ascii x1722 "toLocaleTimeString")
                   "apply"
                   [|x1722;((let x1715 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1713 with
                              | Some x1717 ->
                                  ignore
                                    (Ojs.call x1715 "push"
                                       [|(or_string_to_js
                                            (fun (x1718 : string list) ->
                                               Ojs.list_to_js
                                                 Ojs.string_to_js x1718)
                                            x1717)|])
                              | None -> ());
                             (match x1714 with
                              | Some x1716 ->
                                  ignore
                                    (Ojs.call x1715 "push"
                                       [|(Intl.DateTimeFormatOptions.t_to_js
                                            x1716)|])
                              | None -> ());
                             x1715))|])
    let (toString : 'tags this -> string) =
      fun (x1723 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1723) "toString" [||])
    let (toDateString : 'tags this -> string) =
      fun (x1725 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1725) "toDateString" [||])
    let (toTimeString : 'tags this -> string) =
      fun (x1727 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1727) "toTimeString" [||])
    let (toLocaleString' : 'tags this -> string) =
      fun (x1729 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1729) "toLocaleString" [||])
    let (toLocaleDateString' : 'tags this -> string) =
      fun (x1731 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1731) "toLocaleDateString" [||])
    let (toLocaleTimeString' : 'tags this -> string) =
      fun (x1733 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1733) "toLocaleTimeString" [||])
    let (valueOf : 'tags this -> float) =
      fun (x1735 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1735) "valueOf" [||])
    let (getTime : 'tags this -> float) =
      fun (x1737 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1737) "getTime" [||])
    let (getFullYear : 'tags this -> float) =
      fun (x1739 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1739) "getFullYear" [||])
    let (getUTCFullYear : 'tags this -> float) =
      fun (x1741 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1741) "getUTCFullYear" [||])
    let (getMonth : 'tags this -> float) =
      fun (x1743 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1743) "getMonth" [||])
    let (getUTCMonth : 'tags this -> float) =
      fun (x1745 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1745) "getUTCMonth" [||])
    let (getDate : 'tags this -> float) =
      fun (x1747 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1747) "getDate" [||])
    let (getUTCDate : 'tags this -> float) =
      fun (x1749 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1749) "getUTCDate" [||])
    let (getDay : 'tags this -> float) =
      fun (x1751 : 'tags this) ->
        Ojs.float_of_js (Ojs.call (this_to_js Obj.magic x1751) "getDay" [||])
    let (getUTCDay : 'tags this -> float) =
      fun (x1753 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1753) "getUTCDay" [||])
    let (getHours : 'tags this -> float) =
      fun (x1755 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1755) "getHours" [||])
    let (getUTCHours : 'tags this -> float) =
      fun (x1757 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1757) "getUTCHours" [||])
    let (getMinutes : 'tags this -> float) =
      fun (x1759 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1759) "getMinutes" [||])
    let (getUTCMinutes : 'tags this -> float) =
      fun (x1761 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1761) "getUTCMinutes" [||])
    let (getSeconds : 'tags this -> float) =
      fun (x1763 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1763) "getSeconds" [||])
    let (getUTCSeconds : 'tags this -> float) =
      fun (x1765 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1765) "getUTCSeconds" [||])
    let (getMilliseconds : 'tags this -> float) =
      fun (x1767 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1767) "getMilliseconds" [||])
    let (getUTCMilliseconds : 'tags this -> float) =
      fun (x1769 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1769) "getUTCMilliseconds" [||])
    let (getTimezoneOffset : 'tags this -> float) =
      fun (x1771 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1771) "getTimezoneOffset" [||])
    let (setTime : 'tags this -> time:float -> float) =
      fun (x1774 : 'tags this) ->
        fun ~time:(x1773 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x1774) "setTime"
               [|(Ojs.float_to_js x1773)|])
    let (setMilliseconds : 'tags this -> ms:float -> float) =
      fun (x1777 : 'tags this) ->
        fun ~ms:(x1776 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x1777) "setMilliseconds"
               [|(Ojs.float_to_js x1776)|])
    let (setUTCMilliseconds : 'tags this -> ms:float -> float) =
      fun (x1780 : 'tags this) ->
        fun ~ms:(x1779 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x1780) "setUTCMilliseconds"
               [|(Ojs.float_to_js x1779)|])
    let (setSeconds : 'tags this -> sec:float -> ?ms:float -> unit -> float)
      =
      fun (x1786 : 'tags this) ->
        fun ~sec:(x1782 : float) ->
          fun ?ms:(x1783 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1788 = this_to_js Obj.magic x1786 in
                 Ojs.call (Ojs.get_prop_ascii x1788 "setSeconds") "apply"
                   [|x1788;((let x1784 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1784 "push"
                                  [|(Ojs.float_to_js x1782)|]);
                             (match x1783 with
                              | Some x1785 ->
                                  ignore
                                    (Ojs.call x1784 "push"
                                       [|(Ojs.float_to_js x1785)|])
                              | None -> ());
                             x1784))|])
    let (setUTCSeconds :
      'tags this -> sec:float -> ?ms:float -> unit -> float) =
      fun (x1793 : 'tags this) ->
        fun ~sec:(x1789 : float) ->
          fun ?ms:(x1790 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1795 = this_to_js Obj.magic x1793 in
                 Ojs.call (Ojs.get_prop_ascii x1795 "setUTCSeconds") "apply"
                   [|x1795;((let x1791 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1791 "push"
                                  [|(Ojs.float_to_js x1789)|]);
                             (match x1790 with
                              | Some x1792 ->
                                  ignore
                                    (Ojs.call x1791 "push"
                                       [|(Ojs.float_to_js x1792)|])
                              | None -> ());
                             x1791))|])
    let (setMinutes :
      'tags this -> min:float -> ?sec:float -> ?ms:float -> unit -> float) =
      fun (x1802 : 'tags this) ->
        fun ~min:(x1796 : float) ->
          fun ?sec:(x1797 : float option) ->
            fun ?ms:(x1798 : float option) ->
              fun () ->
                Ojs.float_of_js
                  (let x1804 = this_to_js Obj.magic x1802 in
                   Ojs.call (Ojs.get_prop_ascii x1804 "setMinutes") "apply"
                     [|x1804;((let x1799 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1799 "push"
                                    [|(Ojs.float_to_js x1796)|]);
                               (match x1797 with
                                | Some x1801 ->
                                    ignore
                                      (Ojs.call x1799 "push"
                                         [|(Ojs.float_to_js x1801)|])
                                | None -> ());
                               (match x1798 with
                                | Some x1800 ->
                                    ignore
                                      (Ojs.call x1799 "push"
                                         [|(Ojs.float_to_js x1800)|])
                                | None -> ());
                               x1799))|])
    let (setUTCMinutes :
      'tags this -> min:float -> ?sec:float -> ?ms:float -> unit -> float) =
      fun (x1811 : 'tags this) ->
        fun ~min:(x1805 : float) ->
          fun ?sec:(x1806 : float option) ->
            fun ?ms:(x1807 : float option) ->
              fun () ->
                Ojs.float_of_js
                  (let x1813 = this_to_js Obj.magic x1811 in
                   Ojs.call (Ojs.get_prop_ascii x1813 "setUTCMinutes")
                     "apply"
                     [|x1813;((let x1808 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1808 "push"
                                    [|(Ojs.float_to_js x1805)|]);
                               (match x1806 with
                                | Some x1810 ->
                                    ignore
                                      (Ojs.call x1808 "push"
                                         [|(Ojs.float_to_js x1810)|])
                                | None -> ());
                               (match x1807 with
                                | Some x1809 ->
                                    ignore
                                      (Ojs.call x1808 "push"
                                         [|(Ojs.float_to_js x1809)|])
                                | None -> ());
                               x1808))|])
    let (setHours :
      'tags this ->
        hours:float -> ?min:float -> ?sec:float -> ?ms:float -> unit -> float)
      =
      fun (x1822 : 'tags this) ->
        fun ~hours:(x1814 : float) ->
          fun ?min:(x1815 : float option) ->
            fun ?sec:(x1816 : float option) ->
              fun ?ms:(x1817 : float option) ->
                fun () ->
                  Ojs.float_of_js
                    (let x1824 = this_to_js Obj.magic x1822 in
                     Ojs.call (Ojs.get_prop_ascii x1824 "setHours") "apply"
                       [|x1824;((let x1818 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1818 "push"
                                      [|(Ojs.float_to_js x1814)|]);
                                 (match x1815 with
                                  | Some x1821 ->
                                      ignore
                                        (Ojs.call x1818 "push"
                                           [|(Ojs.float_to_js x1821)|])
                                  | None -> ());
                                 (match x1816 with
                                  | Some x1820 ->
                                      ignore
                                        (Ojs.call x1818 "push"
                                           [|(Ojs.float_to_js x1820)|])
                                  | None -> ());
                                 (match x1817 with
                                  | Some x1819 ->
                                      ignore
                                        (Ojs.call x1818 "push"
                                           [|(Ojs.float_to_js x1819)|])
                                  | None -> ());
                                 x1818))|])
    let (setUTCHours :
      'tags this ->
        hours:float -> ?min:float -> ?sec:float -> ?ms:float -> unit -> float)
      =
      fun (x1833 : 'tags this) ->
        fun ~hours:(x1825 : float) ->
          fun ?min:(x1826 : float option) ->
            fun ?sec:(x1827 : float option) ->
              fun ?ms:(x1828 : float option) ->
                fun () ->
                  Ojs.float_of_js
                    (let x1835 = this_to_js Obj.magic x1833 in
                     Ojs.call (Ojs.get_prop_ascii x1835 "setUTCHours")
                       "apply"
                       [|x1835;((let x1829 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1829 "push"
                                      [|(Ojs.float_to_js x1825)|]);
                                 (match x1826 with
                                  | Some x1832 ->
                                      ignore
                                        (Ojs.call x1829 "push"
                                           [|(Ojs.float_to_js x1832)|])
                                  | None -> ());
                                 (match x1827 with
                                  | Some x1831 ->
                                      ignore
                                        (Ojs.call x1829 "push"
                                           [|(Ojs.float_to_js x1831)|])
                                  | None -> ());
                                 (match x1828 with
                                  | Some x1830 ->
                                      ignore
                                        (Ojs.call x1829 "push"
                                           [|(Ojs.float_to_js x1830)|])
                                  | None -> ());
                                 x1829))|])
    let (setDate : 'tags this -> date:float -> float) =
      fun (x1837 : 'tags this) ->
        fun ~date:(x1836 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x1837) "setDate"
               [|(Ojs.float_to_js x1836)|])
    let (setUTCDate : 'tags this -> date:float -> float) =
      fun (x1840 : 'tags this) ->
        fun ~date:(x1839 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x1840) "setUTCDate"
               [|(Ojs.float_to_js x1839)|])
    let (setMonth :
      'tags this -> month:float -> ?date:float -> unit -> float) =
      fun (x1846 : 'tags this) ->
        fun ~month:(x1842 : float) ->
          fun ?date:(x1843 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1848 = this_to_js Obj.magic x1846 in
                 Ojs.call (Ojs.get_prop_ascii x1848 "setMonth") "apply"
                   [|x1848;((let x1844 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1844 "push"
                                  [|(Ojs.float_to_js x1842)|]);
                             (match x1843 with
                              | Some x1845 ->
                                  ignore
                                    (Ojs.call x1844 "push"
                                       [|(Ojs.float_to_js x1845)|])
                              | None -> ());
                             x1844))|])
    let (setUTCMonth :
      'tags this -> month:float -> ?date:float -> unit -> float) =
      fun (x1853 : 'tags this) ->
        fun ~month:(x1849 : float) ->
          fun ?date:(x1850 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1855 = this_to_js Obj.magic x1853 in
                 Ojs.call (Ojs.get_prop_ascii x1855 "setUTCMonth") "apply"
                   [|x1855;((let x1851 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1851 "push"
                                  [|(Ojs.float_to_js x1849)|]);
                             (match x1850 with
                              | Some x1852 ->
                                  ignore
                                    (Ojs.call x1851 "push"
                                       [|(Ojs.float_to_js x1852)|])
                              | None -> ());
                             x1851))|])
    let (setFullYear :
      'tags this ->
        year:float -> ?month:float -> ?date:float -> unit -> float)
      =
      fun (x1862 : 'tags this) ->
        fun ~year:(x1856 : float) ->
          fun ?month:(x1857 : float option) ->
            fun ?date:(x1858 : float option) ->
              fun () ->
                Ojs.float_of_js
                  (let x1864 = this_to_js Obj.magic x1862 in
                   Ojs.call (Ojs.get_prop_ascii x1864 "setFullYear") "apply"
                     [|x1864;((let x1859 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1859 "push"
                                    [|(Ojs.float_to_js x1856)|]);
                               (match x1857 with
                                | Some x1861 ->
                                    ignore
                                      (Ojs.call x1859 "push"
                                         [|(Ojs.float_to_js x1861)|])
                                | None -> ());
                               (match x1858 with
                                | Some x1860 ->
                                    ignore
                                      (Ojs.call x1859 "push"
                                         [|(Ojs.float_to_js x1860)|])
                                | None -> ());
                               x1859))|])
    let (setUTCFullYear :
      'tags this ->
        year:float -> ?month:float -> ?date:float -> unit -> float)
      =
      fun (x1871 : 'tags this) ->
        fun ~year:(x1865 : float) ->
          fun ?month:(x1866 : float option) ->
            fun ?date:(x1867 : float option) ->
              fun () ->
                Ojs.float_of_js
                  (let x1873 = this_to_js Obj.magic x1871 in
                   Ojs.call (Ojs.get_prop_ascii x1873 "setUTCFullYear")
                     "apply"
                     [|x1873;((let x1868 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1868 "push"
                                    [|(Ojs.float_to_js x1865)|]);
                               (match x1866 with
                                | Some x1870 ->
                                    ignore
                                      (Ojs.call x1868 "push"
                                         [|(Ojs.float_to_js x1870)|])
                                | None -> ());
                               (match x1867 with
                                | Some x1869 ->
                                    ignore
                                      (Ojs.call x1868 "push"
                                         [|(Ojs.float_to_js x1869)|])
                                | None -> ());
                               x1868))|])
    let (toUTCString : 'tags this -> string) =
      fun (x1874 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1874) "toUTCString" [||])
    let (toISOString : 'tags this -> string) =
      fun (x1876 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1876) "toISOString" [||])
    let (toJSON : 'tags this -> ?key:any -> unit -> string) =
      fun (x1881 : 'tags this) ->
        fun ?key:(x1878 : any option) ->
          fun () ->
            Ojs.string_of_js
              (let x1883 = this_to_js Obj.magic x1881 in
               Ojs.call (Ojs.get_prop_ascii x1883 "toJSON") "apply"
                 [|x1883;((let x1879 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x1878 with
                            | Some x1880 ->
                                ignore
                                  (Ojs.call x1879 "push"
                                     [|(any_to_js x1880)|])
                            | None -> ());
                           x1879))|])
    let (create : t or_string or_number -> t) =
      fun (x1884 : t or_string or_number) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Date")
             [|(or_number_to_js
                  (fun (x1885 : t or_string) -> or_string_to_js t_to_js x1885)
                  x1884)|])
    let (create' : unit -> t) =
      fun () ->
        t_of_js (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Date") [||])
    let (create'' : string or_number -> t) =
      fun (x1887 : string or_number) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Date")
             [|(or_number_to_js Ojs.string_to_js x1887)|])
    let (create''' :
      year:float ->
        month:float ->
          ?date:float ->
            ?hours:float ->
              ?minutes:float -> ?seconds:float -> ?ms:float -> unit -> t)
      =
      fun ~year:(x1889 : float) ->
        fun ~month:(x1890 : float) ->
          fun ?date:(x1891 : float option) ->
            fun ?hours:(x1892 : float option) ->
              fun ?minutes:(x1893 : float option) ->
                fun ?seconds:(x1894 : float option) ->
                  fun ?ms:(x1895 : float option) ->
                    fun () ->
                      t_of_js
                        (Ojs.new_obj_arr
                           (Ojs.get_prop_ascii Ojs.global "Date")
                           (let x1896 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x1896 "push"
                                 [|(Ojs.float_to_js x1889)|]);
                            ignore
                              (Ojs.call x1896 "push"
                                 [|(Ojs.float_to_js x1890)|]);
                            (match x1891 with
                             | Some x1901 ->
                                 ignore
                                   (Ojs.call x1896 "push"
                                      [|(Ojs.float_to_js x1901)|])
                             | None -> ());
                            (match x1892 with
                             | Some x1900 ->
                                 ignore
                                   (Ojs.call x1896 "push"
                                      [|(Ojs.float_to_js x1900)|])
                             | None -> ());
                            (match x1893 with
                             | Some x1899 ->
                                 ignore
                                   (Ojs.call x1896 "push"
                                      [|(Ojs.float_to_js x1899)|])
                             | None -> ());
                            (match x1894 with
                             | Some x1898 ->
                                 ignore
                                   (Ojs.call x1896 "push"
                                      [|(Ojs.float_to_js x1898)|])
                             | None -> ());
                            (match x1895 with
                             | Some x1897 ->
                                 ignore
                                   (Ojs.call x1896 "push"
                                      [|(Ojs.float_to_js x1897)|])
                             | None -> ());
                            x1896))
    let (invoke : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "Date") [||])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Date")
             "prototype")
    let (parse : string -> float) =
      fun (x1902 : string) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Date") "parse"
             [|(Ojs.string_to_js x1902)|])
    let (utc :
      year:float ->
        month:float ->
          ?date:float ->
            ?hours:float ->
              ?minutes:float -> ?seconds:float -> ?ms:float -> unit -> float)
      =
      fun ~year:(x1903 : float) ->
        fun ~month:(x1904 : float) ->
          fun ?date:(x1905 : float option) ->
            fun ?hours:(x1906 : float option) ->
              fun ?minutes:(x1907 : float option) ->
                fun ?seconds:(x1908 : float option) ->
                  fun ?ms:(x1909 : float option) ->
                    fun () ->
                      Ojs.float_of_js
                        (let x1916 = Ojs.get_prop_ascii Ojs.global "Date" in
                         Ojs.call (Ojs.get_prop_ascii x1916 "UTC") "apply"
                           [|x1916;((let x1910 =
                                       Ojs.new_obj
                                         (Ojs.get_prop_ascii Ojs.global
                                            "Array") [||] in
                                     ignore
                                       (Ojs.call x1910 "push"
                                          [|(Ojs.float_to_js x1903)|]);
                                     ignore
                                       (Ojs.call x1910 "push"
                                          [|(Ojs.float_to_js x1904)|]);
                                     (match x1905 with
                                      | Some x1915 ->
                                          ignore
                                            (Ojs.call x1910 "push"
                                               [|(Ojs.float_to_js x1915)|])
                                      | None -> ());
                                     (match x1906 with
                                      | Some x1914 ->
                                          ignore
                                            (Ojs.call x1910 "push"
                                               [|(Ojs.float_to_js x1914)|])
                                      | None -> ());
                                     (match x1907 with
                                      | Some x1913 ->
                                          ignore
                                            (Ojs.call x1910 "push"
                                               [|(Ojs.float_to_js x1913)|])
                                      | None -> ());
                                     (match x1908 with
                                      | Some x1912 ->
                                          ignore
                                            (Ojs.call x1910 "push"
                                               [|(Ojs.float_to_js x1912)|])
                                      | None -> ());
                                     (match x1909 with
                                      | Some x1911 ->
                                          ignore
                                            (Ojs.call x1910 "push"
                                               [|(Ojs.float_to_js x1911)|])
                                      | None -> ());
                                     x1910))|])
    let (now : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Date") "now" [||])
    let cast_from = Obj.magic
  end
 and
  Intl:sig
         module UnicodeBCP47LocaleIdentifier :
         sig
           type t = string
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module RelativeTimeFormatNumeric :
         sig
           type t = [ `L_s21_always  | `L_s22_auto ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module RelativeTimeFormatStyle :
         sig
           type t = [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module ResolvedRelativeTimeFormatOptions :
         sig
           type t = [ `Intl_ResolvedRelativeTimeFormatOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_ResolvedRelativeTimeFormatOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_ResolvedRelativeTimeFormatOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_ResolvedRelativeTimeFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_locale : 'tags this -> UnicodeBCP47LocaleIdentifier.t
           val set_locale :
             'tags this -> UnicodeBCP47LocaleIdentifier.t -> unit
           val get_style : 'tags this -> RelativeTimeFormatStyle.t
           val set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit
           val get_numeric : 'tags this -> RelativeTimeFormatNumeric.t
           val set_numeric :
             'tags this -> RelativeTimeFormatNumeric.t -> unit
           val get_numberingSystem : 'tags this -> string
           val set_numberingSystem : 'tags this -> string -> unit
           val create :
             locale:UnicodeBCP47LocaleIdentifier.t ->
               style:RelativeTimeFormatStyle.t ->
                 numeric:RelativeTimeFormatNumeric.t ->
                   numberingSystem:string -> unit -> t
           val cast_from : 'tags this -> t
         end
         module RelativeTimeFormatUnit :
         sig
           type t =
             [ `L_s100_weeks  | `L_s101_year  | `L_s102_years  | `L_s29_day 
             | `L_s31_days  | `L_s49_hour  | `L_s50_hours  | `L_s61_minute 
             | `L_s62_minutes  | `L_s63_month  | `L_s64_months 
             | `L_s80_quarter  | `L_s81_quarters  | `L_s86_second 
             | `L_s87_seconds  | `L_s98_week ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module RelativeTimeFormatPart :
         sig
           type t = [ `Intl_RelativeTimeFormatPart ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_RelativeTimeFormatPart ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_RelativeTimeFormatPart ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_RelativeTimeFormatPart ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_type : 'tags this -> string
           val set_type : 'tags this -> string -> unit
           val get_value : 'tags this -> string
           val set_value : 'tags this -> string -> unit
           val get_unit : 'tags this -> RelativeTimeFormatUnit.t
           val set_unit : 'tags this -> RelativeTimeFormatUnit.t -> unit
           val create :
             type_:string ->
               value:string -> unit:RelativeTimeFormatUnit.t -> unit -> t
           val cast_from : 'tags this -> t
         end
         module RelativeTimeFormatLocaleMatcher :
         sig
           type t = [ `L_s24_best_fit  | `L_s56_lookup ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module RelativeTimeFormatOptions :
         sig
           type t = [ `Intl_RelativeTimeFormatOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_RelativeTimeFormatOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_RelativeTimeFormatOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_RelativeTimeFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_localeMatcher :
             'tags this -> RelativeTimeFormatLocaleMatcher.t
           val set_localeMatcher :
             'tags this -> RelativeTimeFormatLocaleMatcher.t -> unit
           val get_numeric : 'tags this -> RelativeTimeFormatNumeric.t
           val set_numeric :
             'tags this -> RelativeTimeFormatNumeric.t -> unit
           val get_style : 'tags this -> RelativeTimeFormatStyle.t
           val set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit
           val create :
             localeMatcher:RelativeTimeFormatLocaleMatcher.t ->
               numeric:RelativeTimeFormatNumeric.t ->
                 style:RelativeTimeFormatStyle.t -> unit -> t
           val cast_from : 'tags this -> t
         end
         module RelativeTimeFormat :
         sig
           type t = [ `Intl_RelativeTimeFormat ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_RelativeTimeFormat ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_RelativeTimeFormat ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_RelativeTimeFormat ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val format :
             'tags this ->
               value:float -> unit:RelativeTimeFormatUnit.t -> string
           val formatToParts :
             'tags this ->
               value:float ->
                 unit:RelativeTimeFormatUnit.t ->
                   RelativeTimeFormatPart.t list
           val resolvedOptions :
             'tags this -> ResolvedRelativeTimeFormatOptions.t
           val cast_from : 'tags this -> t
           val create :
             ?locales:(UnicodeBCP47LocaleIdentifier.t,
               UnicodeBCP47LocaleIdentifier.t) or_array ->
               ?options:RelativeTimeFormatOptions.t -> unit -> t
           val supportedLocalesOf :
             ?locales:(UnicodeBCP47LocaleIdentifier.t,
               UnicodeBCP47LocaleIdentifier.t) or_array ->
               ?options:RelativeTimeFormatOptions.t ->
                 unit -> UnicodeBCP47LocaleIdentifier.t list
         end
         module PluralRuleType :
         sig
           type t = [ `L_s25_cardinal  | `L_s75_ordinal ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module LDMLPluralRule :
         sig
           type t =
             [ `L_s103_zero  | `L_s40_few  | `L_s58_many  | `L_s74_one 
             | `L_s76_other  | `L_s94_two ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module ResolvedPluralRulesOptions :
         sig
           type t = [ `Intl_ResolvedPluralRulesOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_ResolvedPluralRulesOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_ResolvedPluralRulesOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_ResolvedPluralRulesOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_locale : 'tags this -> string
           val set_locale : 'tags this -> string -> unit
           val get_pluralCategories : 'tags this -> LDMLPluralRule.t list
           val set_pluralCategories :
             'tags this -> LDMLPluralRule.t list -> unit
           val get_type : 'tags this -> PluralRuleType.t
           val set_type : 'tags this -> PluralRuleType.t -> unit
           val get_minimumIntegerDigits : 'tags this -> float
           val set_minimumIntegerDigits : 'tags this -> float -> unit
           val get_minimumFractionDigits : 'tags this -> float
           val set_minimumFractionDigits : 'tags this -> float -> unit
           val get_maximumFractionDigits : 'tags this -> float
           val set_maximumFractionDigits : 'tags this -> float -> unit
           val get_minimumSignificantDigits : 'tags this -> float
           val set_minimumSignificantDigits : 'tags this -> float -> unit
           val get_maximumSignificantDigits : 'tags this -> float
           val set_maximumSignificantDigits : 'tags this -> float -> unit
           val create :
             locale:string ->
               pluralCategories:LDMLPluralRule.t list ->
                 type_:PluralRuleType.t ->
                   minimumIntegerDigits:float ->
                     minimumFractionDigits:float ->
                       maximumFractionDigits:float ->
                         minimumSignificantDigits:float ->
                           maximumSignificantDigits:float -> unit -> t
           val cast_from : 'tags this -> t
         end
         module PluralRulesOptions :
         sig
           type t = [ `Intl_PluralRulesOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_PluralRulesOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_PluralRulesOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_PluralRulesOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_localeMatcher :
             'tags this -> [ `L_s24_best_fit  | `L_s56_lookup ] or_undefined
           val set_localeMatcher :
             'tags this ->
               [ `L_s24_best_fit  | `L_s56_lookup ] or_undefined -> unit
           val get_type : 'tags this -> PluralRuleType.t or_undefined
           val set_type : 'tags this -> PluralRuleType.t or_undefined -> unit
           val get_minimumIntegerDigits : 'tags this -> float or_undefined
           val set_minimumIntegerDigits :
             'tags this -> float or_undefined -> unit
           val get_minimumFractionDigits : 'tags this -> float or_undefined
           val set_minimumFractionDigits :
             'tags this -> float or_undefined -> unit
           val get_maximumFractionDigits : 'tags this -> float or_undefined
           val set_maximumFractionDigits :
             'tags this -> float or_undefined -> unit
           val get_minimumSignificantDigits :
             'tags this -> float or_undefined
           val set_minimumSignificantDigits :
             'tags this -> float or_undefined -> unit
           val get_maximumSignificantDigits :
             'tags this -> float or_undefined
           val set_maximumSignificantDigits :
             'tags this -> float or_undefined -> unit
           val create :
             ?localeMatcher:[ `L_s24_best_fit  | `L_s56_lookup ] ->
               ?type_:PluralRuleType.t ->
                 ?minimumIntegerDigits:float ->
                   ?minimumFractionDigits:float ->
                     ?maximumFractionDigits:float ->
                       ?minimumSignificantDigits:float ->
                         ?maximumSignificantDigits:float -> unit -> t
           val cast_from : 'tags this -> t
         end
         module PluralRules :
         sig
           module AnonymousInterface4 :
           sig
             type t = private Ojs.t
             val t_to_js : t -> Ojs.t
             val t_of_js : Ojs.t -> t
             val get_localeMatcher :
               t -> [ `L_s24_best_fit  | `L_s56_lookup ]
             val set_localeMatcher :
               t -> [ `L_s24_best_fit  | `L_s56_lookup ] -> unit
             val create :
               localeMatcher:[ `L_s24_best_fit  | `L_s56_lookup ] ->
                 unit -> t
           end
           type t = [ `Intl_PluralRules ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_PluralRules ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_PluralRules ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_PluralRules ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val resolvedOptions : 'tags this -> ResolvedPluralRulesOptions.t
           val select : 'tags this -> n:float -> LDMLPluralRule.t
           val cast_from : 'tags this -> t
           val create :
             ?locales:string list or_string ->
               ?options:PluralRulesOptions.t -> unit -> t
           val invoke :
             ?locales:string list or_string ->
               ?options:PluralRulesOptions.t -> unit -> t
           val supportedLocalesOf :
             locales:string list or_string ->
               ?options:AnonymousInterface4.t -> unit -> string list
         end
         module ResolvedNumberFormatOptions :
         sig
           type t = [ `Intl_ResolvedNumberFormatOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_ResolvedNumberFormatOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_ResolvedNumberFormatOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_ResolvedNumberFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_compactDisplay :
             'tags this -> [ `L_s55_long  | `L_s88_short ]
           val set_compactDisplay :
             'tags this -> [ `L_s55_long  | `L_s88_short ] -> unit
           val get_notation :
             'tags this ->
               [ `L_s27_compact  | `L_s34_engineering  | `L_s84_scientific 
               | `L_s89_standard ]
           val set_notation :
             'tags this ->
               [ `L_s27_compact  | `L_s34_engineering  | `L_s84_scientific 
               | `L_s89_standard ] -> unit
           val get_signDisplay :
             'tags this -> [ `L_s21_always  | `L_s22_auto  | `L_s68_never ]
           val set_signDisplay :
             'tags this ->
               [ `L_s21_always  | `L_s22_auto  | `L_s68_never ] -> unit
           val get_unit : 'tags this -> string
           val set_unit : 'tags this -> string -> unit
           val get_unitDisplay :
             'tags this -> [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ]
           val set_unitDisplay :
             'tags this ->
               [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] -> unit
           val get_locale : 'tags this -> string
           val set_locale : 'tags this -> string -> unit
           val get_numberingSystem : 'tags this -> string
           val set_numberingSystem : 'tags this -> string -> unit
           val get_style : 'tags this -> string
           val set_style : 'tags this -> string -> unit
           val get_currency : 'tags this -> string
           val set_currency : 'tags this -> string -> unit
           val get_currencyDisplay : 'tags this -> string
           val set_currencyDisplay : 'tags this -> string -> unit
           val get_minimumIntegerDigits : 'tags this -> float
           val set_minimumIntegerDigits : 'tags this -> float -> unit
           val get_minimumFractionDigits : 'tags this -> float
           val set_minimumFractionDigits : 'tags this -> float -> unit
           val get_maximumFractionDigits : 'tags this -> float
           val set_maximumFractionDigits : 'tags this -> float -> unit
           val get_minimumSignificantDigits : 'tags this -> float
           val set_minimumSignificantDigits : 'tags this -> float -> unit
           val get_maximumSignificantDigits : 'tags this -> float
           val set_maximumSignificantDigits : 'tags this -> float -> unit
           val get_useGrouping : 'tags this -> bool
           val set_useGrouping : 'tags this -> bool -> unit
           val create :
             compactDisplay:[ `L_s55_long  | `L_s88_short ] ->
               notation:[ `L_s27_compact  | `L_s34_engineering 
                        | `L_s84_scientific  | `L_s89_standard ]
                 ->
                 signDisplay:[ `L_s21_always  | `L_s22_auto  | `L_s68_never ]
                   ->
                   unit:string ->
                     unitDisplay:[ `L_s55_long  | `L_s67_narrow 
                                 | `L_s88_short ]
                       ->
                       locale:string ->
                         numberingSystem:string ->
                           style:string ->
                             currency:string ->
                               currencyDisplay:string ->
                                 minimumIntegerDigits:float ->
                                   minimumFractionDigits:float ->
                                     maximumFractionDigits:float ->
                                       minimumSignificantDigits:float ->
                                         maximumSignificantDigits:float ->
                                           useGrouping:bool -> unit -> t
           val cast_from : 'tags this -> t
         end
         module ES2020NumberFormatPartType :
         sig
           type t =
             [ `L_s27_compact  | `L_s36_exponentInteger 
             | `L_s37_exponentMinusSign  | `L_s38_exponentSeparator 
             | `L_s95_unit  | `L_s96_unknown ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module ES2018NumberFormatPartType :
         sig
           type t =
             [ `L_s26_code  | `L_s28_currency  | `L_s32_decimal 
             | `L_s41_fraction  | `L_s44_group  | `L_s51_infinity 
             | `L_s52_integer  | `L_s54_literal  | `L_s60_minusSign 
             | `L_s65_name  | `L_s66_nan  | `L_s77_percent 
             | `L_s78_percentSign  | `L_s79_plusSign  | `L_s91_symbol ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module NumberFormatPartTypes :
         sig
           type t =
             [ `L_s26_code  | `L_s27_compact  | `L_s28_currency 
             | `L_s32_decimal  | `L_s36_exponentInteger 
             | `L_s37_exponentMinusSign  | `L_s38_exponentSeparator 
             | `L_s41_fraction  | `L_s44_group  | `L_s51_infinity 
             | `L_s52_integer  | `L_s54_literal  | `L_s60_minusSign 
             | `L_s65_name  | `L_s66_nan  | `L_s77_percent 
             | `L_s78_percentSign  | `L_s79_plusSign  | `L_s91_symbol 
             | `L_s95_unit  | `L_s96_unknown ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module NumberFormatPart :
         sig
           type t = [ `Intl_NumberFormatPart ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_NumberFormatPart ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_NumberFormatPart ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_NumberFormatPart ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_type : 'tags this -> NumberFormatPartTypes.t
           val set_type : 'tags this -> NumberFormatPartTypes.t -> unit
           val get_value : 'tags this -> string
           val set_value : 'tags this -> string -> unit
           val create :
             type_:NumberFormatPartTypes.t -> value:string -> unit -> t
           val cast_from : 'tags this -> t
         end
         module NumberFormatOptions :
         sig
           type t = [ `Intl_NumberFormatOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_NumberFormatOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_NumberFormatOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_NumberFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_compactDisplay :
             'tags this -> [ `L_s55_long  | `L_s88_short ] or_undefined
           val set_compactDisplay :
             'tags this ->
               [ `L_s55_long  | `L_s88_short ] or_undefined -> unit
           val get_notation :
             'tags this ->
               [ `L_s27_compact  | `L_s34_engineering  | `L_s84_scientific 
               | `L_s89_standard ] or_undefined
           val set_notation :
             'tags this ->
               [ `L_s27_compact  | `L_s34_engineering  | `L_s84_scientific 
               | `L_s89_standard ] or_undefined -> unit
           val get_signDisplay :
             'tags this ->
               [ `L_s21_always  | `L_s22_auto  | `L_s68_never ] or_undefined
           val set_signDisplay :
             'tags this ->
               [ `L_s21_always  | `L_s22_auto  | `L_s68_never ] or_undefined
                 -> unit
           val get_unit : 'tags this -> string or_undefined
           val set_unit : 'tags this -> string or_undefined -> unit
           val get_unitDisplay :
             'tags this ->
               [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined
           val set_unitDisplay :
             'tags this ->
               [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined
                 -> unit
           val get_localeMatcher : 'tags this -> string or_undefined
           val set_localeMatcher : 'tags this -> string or_undefined -> unit
           val get_style : 'tags this -> string or_undefined
           val set_style : 'tags this -> string or_undefined -> unit
           val get_currency : 'tags this -> string or_undefined
           val set_currency : 'tags this -> string or_undefined -> unit
           val get_currencyDisplay : 'tags this -> string or_undefined
           val set_currencyDisplay :
             'tags this -> string or_undefined -> unit
           val get_currencySign : 'tags this -> string or_undefined
           val set_currencySign : 'tags this -> string or_undefined -> unit
           val get_useGrouping : 'tags this -> bool or_undefined
           val set_useGrouping : 'tags this -> bool or_undefined -> unit
           val get_minimumIntegerDigits : 'tags this -> float or_undefined
           val set_minimumIntegerDigits :
             'tags this -> float or_undefined -> unit
           val get_minimumFractionDigits : 'tags this -> float or_undefined
           val set_minimumFractionDigits :
             'tags this -> float or_undefined -> unit
           val get_maximumFractionDigits : 'tags this -> float or_undefined
           val set_maximumFractionDigits :
             'tags this -> float or_undefined -> unit
           val get_minimumSignificantDigits :
             'tags this -> float or_undefined
           val set_minimumSignificantDigits :
             'tags this -> float or_undefined -> unit
           val get_maximumSignificantDigits :
             'tags this -> float or_undefined
           val set_maximumSignificantDigits :
             'tags this -> float or_undefined -> unit
           val create :
             ?compactDisplay:[ `L_s55_long  | `L_s88_short ] ->
               ?notation:[ `L_s27_compact  | `L_s34_engineering 
                         | `L_s84_scientific  | `L_s89_standard ]
                 ->
                 ?signDisplay:[ `L_s21_always  | `L_s22_auto 
                              | `L_s68_never ]
                   ->
                   ?unit:string ->
                     ?unitDisplay:[ `L_s55_long  | `L_s67_narrow 
                                  | `L_s88_short ]
                       ->
                       ?localeMatcher:string ->
                         ?style:string ->
                           ?currency:string ->
                             ?currencyDisplay:string ->
                               ?currencySign:string ->
                                 ?useGrouping:bool ->
                                   ?minimumIntegerDigits:float ->
                                     ?minimumFractionDigits:float ->
                                       ?maximumFractionDigits:float ->
                                         ?minimumSignificantDigits:float ->
                                           ?maximumSignificantDigits:float ->
                                             unit -> t
           val cast_from : 'tags this -> t
         end
         module NumberFormat :
         sig
           type t = [ `Intl_NumberFormat ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_NumberFormat ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_NumberFormat ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_NumberFormat ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val formatRange :
             'tags this ->
               startDate:bigint or_number ->
                 endDate:bigint or_number -> string
           val formatRangeToParts :
             'tags this ->
               startDate:bigint or_number ->
                 endDate:bigint or_number -> NumberFormatPart.t list
           val format : 'tags this -> value:bigint or_number -> string
           val resolvedOptions : 'tags this -> ResolvedNumberFormatOptions.t
           val formatToParts :
             'tags this ->
               ?number:bigint or_number -> unit -> NumberFormatPart.t list
           val format' : 'tags this -> value:float -> string
           val resolvedOptions' : 'tags this -> ResolvedNumberFormatOptions.t
           val cast_from : 'tags this -> t
           val create :
             ?locales:string list or_string ->
               ?options:NumberFormatOptions.t -> unit -> t
           val invoke :
             ?locales:string list or_string ->
               ?options:NumberFormatOptions.t -> unit -> t
           val supportedLocalesOf :
             locales:string list or_string ->
               ?options:NumberFormatOptions.t -> unit -> string list
         end
         module LocaleHourCycleKey :
         sig
           type t = [ `L_s45_h11  | `L_s46_h12  | `L_s47_h23  | `L_s48_h24 ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module LocaleCollationCaseFirst :
         sig
           type t = [ `L_s39_false  | `L_s57_lower  | `L_s97_upper ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module LocaleOptions :
         sig
           type t = [ `Intl_LocaleOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_LocaleOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_LocaleOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_LocaleOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_baseName : 'tags this -> string
           val set_baseName : 'tags this -> string -> unit
           val get_calendar : 'tags this -> string
           val set_calendar : 'tags this -> string -> unit
           val get_caseFirst : 'tags this -> LocaleCollationCaseFirst.t
           val set_caseFirst :
             'tags this -> LocaleCollationCaseFirst.t -> unit
           val get_collation : 'tags this -> string
           val set_collation : 'tags this -> string -> unit
           val get_hourCycle : 'tags this -> LocaleHourCycleKey.t
           val set_hourCycle : 'tags this -> LocaleHourCycleKey.t -> unit
           val get_language : 'tags this -> string
           val set_language : 'tags this -> string -> unit
           val get_numberingSystem : 'tags this -> string
           val set_numberingSystem : 'tags this -> string -> unit
           val get_numeric : 'tags this -> bool
           val set_numeric : 'tags this -> bool -> unit
           val get_region : 'tags this -> string
           val set_region : 'tags this -> string -> unit
           val get_script : 'tags this -> string
           val set_script : 'tags this -> string -> unit
           val create :
             baseName:string ->
               calendar:string ->
                 caseFirst:LocaleCollationCaseFirst.t ->
                   collation:string ->
                     hourCycle:LocaleHourCycleKey.t ->
                       language:string ->
                         numberingSystem:string ->
                           numeric:bool ->
                             region:string -> script:string -> unit -> t
           val cast_from : 'tags this -> t
         end
         module BCP47LanguageTag :
         sig
           type t = string
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module Locale :
         sig
           type t = [ `Intl_Locale  | `Intl_LocaleOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_Locale  | `Intl_LocaleOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_Locale  | `Intl_LocaleOptions ]
             type tags_0 = tags]
           type 'tags this = 'tags intf constraint 'tags = [> `Intl_Locale ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val maximize : 'tags this -> t
           val minimize : 'tags this -> t
           val toString : 'tags this -> BCP47LanguageTag.t
           val cast_from : 'tags this -> t
           val create :
             ?tag:BCP47LanguageTag.t -> ?options:LocaleOptions.t -> unit -> t
         end
         module DisplayNamesOptions :
         sig
           type t = [ `Intl_DisplayNamesOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_DisplayNamesOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_DisplayNamesOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_DisplayNamesOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_localeMatcher :
             'tags this -> RelativeTimeFormatLocaleMatcher.t
           val set_localeMatcher :
             'tags this -> RelativeTimeFormatLocaleMatcher.t -> unit
           val get_style : 'tags this -> RelativeTimeFormatStyle.t
           val set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit
           val get_type :
             'tags this ->
               [ `L_s28_currency  | `L_s53_language  | `L_s82_region 
               | `L_s85_script ]
           val set_type :
             'tags this ->
               [ `L_s28_currency  | `L_s53_language  | `L_s82_region 
               | `L_s85_script ] -> unit
           val get_fallback : 'tags this -> [ `L_s26_code  | `L_s69_none ]
           val set_fallback :
             'tags this -> [ `L_s26_code  | `L_s69_none ] -> unit
           val create :
             localeMatcher:RelativeTimeFormatLocaleMatcher.t ->
               style:RelativeTimeFormatStyle.t ->
                 type_:[ `L_s28_currency  | `L_s53_language  | `L_s82_region 
                       | `L_s85_script ]
                   -> fallback:[ `L_s26_code  | `L_s69_none ] -> unit -> t
           val cast_from : 'tags this -> t
         end
         module DisplayNames :
         sig
           module AnonymousInterface2 :
           sig
             type t = private Ojs.t
             val t_to_js : t -> Ojs.t
             val t_of_js : Ojs.t -> t
             val get_localeMatcher : t -> RelativeTimeFormatLocaleMatcher.t
             val set_localeMatcher :
               t -> RelativeTimeFormatLocaleMatcher.t -> unit
             val create :
               localeMatcher:RelativeTimeFormatLocaleMatcher.t -> unit -> t
           end
           type t = [ `Intl_DisplayNames ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_DisplayNames ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_DisplayNames ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_DisplayNames ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val of_ : 'tags this -> code:string -> string
           val resolvedOptions : 'tags this -> DisplayNamesOptions.t
           val cast_from : 'tags this -> t
           val prototype : unit -> t
           val create :
             ?locales:(BCP47LanguageTag.t, BCP47LanguageTag.t) or_array ->
               ?options:DisplayNamesOptions.t Partial.t -> unit -> t
           val supportedLocalesOf :
             locales:(BCP47LanguageTag.t, BCP47LanguageTag.t) or_array ->
               ?options:AnonymousInterface2.t ->
                 unit -> BCP47LanguageTag.t list
         end
         module ResolvedDateTimeFormatOptions :
         sig
           type t = [ `Intl_ResolvedDateTimeFormatOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_ResolvedDateTimeFormatOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_ResolvedDateTimeFormatOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_ResolvedDateTimeFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_formatMatcher :
             'tags this -> [ `L_s23_basic  | `L_s24_best_fit ]
           val set_formatMatcher :
             'tags this -> [ `L_s23_basic  | `L_s24_best_fit ] -> unit
           val get_dateStyle :
             'tags this ->
               [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
               | `L_s88_short ]
           val set_dateStyle :
             'tags this ->
               [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
               | `L_s88_short ] -> unit
           val get_timeStyle :
             'tags this ->
               [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
               | `L_s88_short ]
           val set_timeStyle :
             'tags this ->
               [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
               | `L_s88_short ] -> unit
           val get_hourCycle :
             'tags this ->
               [ `L_s45_h11  | `L_s46_h12  | `L_s47_h23  | `L_s48_h24 ]
           val set_hourCycle :
             'tags this ->
               [ `L_s45_h11  | `L_s46_h12  | `L_s47_h23  | `L_s48_h24 ] ->
                 unit
           val get_dayPeriod :
             'tags this -> [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ]
           val set_dayPeriod :
             'tags this ->
               [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] -> unit
           val get_fractionalSecondDigits :
             'tags this -> [ `L_n_0  | `L_n_1  | `L_n_2  | `L_n_3 ]
           val set_fractionalSecondDigits :
             'tags this -> [ `L_n_0  | `L_n_1  | `L_n_2  | `L_n_3 ] -> unit
           val get_locale : 'tags this -> string
           val set_locale : 'tags this -> string -> unit
           val get_calendar : 'tags this -> string
           val set_calendar : 'tags this -> string -> unit
           val get_numberingSystem : 'tags this -> string
           val set_numberingSystem : 'tags this -> string -> unit
           val get_timeZone : 'tags this -> string
           val set_timeZone : 'tags this -> string -> unit
           val get_hour12 : 'tags this -> bool
           val set_hour12 : 'tags this -> bool -> unit
           val get_weekday : 'tags this -> string
           val set_weekday : 'tags this -> string -> unit
           val get_era : 'tags this -> string
           val set_era : 'tags this -> string -> unit
           val get_year : 'tags this -> string
           val set_year : 'tags this -> string -> unit
           val get_month : 'tags this -> string
           val set_month : 'tags this -> string -> unit
           val get_day : 'tags this -> string
           val set_day : 'tags this -> string -> unit
           val get_hour : 'tags this -> string
           val set_hour : 'tags this -> string -> unit
           val get_minute : 'tags this -> string
           val set_minute : 'tags this -> string -> unit
           val get_second : 'tags this -> string
           val set_second : 'tags this -> string -> unit
           val get_timeZoneName : 'tags this -> string
           val set_timeZoneName : 'tags this -> string -> unit
           val create :
             formatMatcher:[ `L_s23_basic  | `L_s24_best_fit ] ->
               dateStyle:[ `L_s43_full  | `L_s55_long  | `L_s59_medium 
                         | `L_s88_short ]
                 ->
                 timeStyle:[ `L_s43_full  | `L_s55_long  | `L_s59_medium 
                           | `L_s88_short ]
                   ->
                   hourCycle:[ `L_s45_h11  | `L_s46_h12  | `L_s47_h23 
                             | `L_s48_h24 ]
                     ->
                     dayPeriod:[ `L_s55_long  | `L_s67_narrow 
                               | `L_s88_short ]
                       ->
                       fractionalSecondDigits:[ `L_n_0  | `L_n_1  | `L_n_2 
                                              | `L_n_3 ]
                         ->
                         locale:string ->
                           calendar:string ->
                             numberingSystem:string ->
                               timeZone:string ->
                                 hour12:bool ->
                                   weekday:string ->
                                     era:string ->
                                       year:string ->
                                         month:string ->
                                           day:string ->
                                             hour:string ->
                                               minute:string ->
                                                 second:string ->
                                                   timeZoneName:string ->
                                                     unit -> t
           val cast_from : 'tags this -> t
         end
         module DateTimeFormatPartTypes :
         sig
           type t =
             [ `L_s101_year  | `L_s29_day  | `L_s30_dayPeriod  | `L_s35_era 
             | `L_s49_hour  | `L_s54_literal  | `L_s61_minute 
             | `L_s63_month  | `L_s86_second  | `L_s92_timeZoneName 
             | `L_s99_weekday ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module DateTimeFormatPart :
         sig
           type t = [ `Intl_DateTimeFormatPart ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_DateTimeFormatPart ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_DateTimeFormatPart ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_DateTimeFormatPart ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_type : 'tags this -> DateTimeFormatPartTypes.t
           val set_type : 'tags this -> DateTimeFormatPartTypes.t -> unit
           val get_value : 'tags this -> string
           val set_value : 'tags this -> string -> unit
           val create :
             type_:DateTimeFormatPartTypes.t -> value:string -> unit -> t
           val cast_from : 'tags this -> t
         end
         module DateTimeFormatOptions :
         sig
           type t = [ `Intl_DateTimeFormatOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_DateTimeFormatOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_DateTimeFormatOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_DateTimeFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_formatMatcher :
             'tags this -> [ `L_s23_basic  | `L_s24_best_fit ] or_undefined
           val set_formatMatcher :
             'tags this ->
               [ `L_s23_basic  | `L_s24_best_fit ] or_undefined -> unit
           val get_dateStyle :
             'tags this ->
               [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
               | `L_s88_short ] or_undefined
           val set_dateStyle :
             'tags this ->
               [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
               | `L_s88_short ] or_undefined -> unit
           val get_timeStyle :
             'tags this ->
               [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
               | `L_s88_short ] or_undefined
           val set_timeStyle :
             'tags this ->
               [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
               | `L_s88_short ] or_undefined -> unit
           val get_dayPeriod :
             'tags this ->
               [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined
           val set_dayPeriod :
             'tags this ->
               [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined
                 -> unit
           val get_fractionalSecondDigits :
             'tags this ->
               [ `L_n_0  | `L_n_1  | `L_n_2  | `L_n_3 ] or_undefined
           val set_fractionalSecondDigits :
             'tags this ->
               [ `L_n_0  | `L_n_1  | `L_n_2  | `L_n_3 ] or_undefined -> unit
           val get_calendar : 'tags this -> string or_undefined
           val set_calendar : 'tags this -> string or_undefined -> unit
           val get_dayPeriod' :
             'tags this ->
               [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined
           val set_dayPeriod' :
             'tags this ->
               [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined
                 -> unit
           val get_numberingSystem : 'tags this -> string or_undefined
           val set_numberingSystem :
             'tags this -> string or_undefined -> unit
           val get_dateStyle' :
             'tags this ->
               [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
               | `L_s88_short ] or_undefined
           val set_dateStyle' :
             'tags this ->
               [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
               | `L_s88_short ] or_undefined -> unit
           val get_timeStyle' :
             'tags this ->
               [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
               | `L_s88_short ] or_undefined
           val set_timeStyle' :
             'tags this ->
               [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
               | `L_s88_short ] or_undefined -> unit
           val get_hourCycle :
             'tags this ->
               [ `L_s45_h11  | `L_s46_h12  | `L_s47_h23  | `L_s48_h24 ]
                 or_undefined
           val set_hourCycle :
             'tags this ->
               [ `L_s45_h11  | `L_s46_h12  | `L_s47_h23  | `L_s48_h24 ]
                 or_undefined -> unit
           val get_localeMatcher :
             'tags this -> [ `L_s24_best_fit  | `L_s56_lookup ] or_undefined
           val set_localeMatcher :
             'tags this ->
               [ `L_s24_best_fit  | `L_s56_lookup ] or_undefined -> unit
           val get_weekday :
             'tags this ->
               [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined
           val set_weekday :
             'tags this ->
               [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined
                 -> unit
           val get_era :
             'tags this ->
               [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined
           val set_era :
             'tags this ->
               [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined
                 -> unit
           val get_year :
             'tags this -> [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined
           val set_year :
             'tags this ->
               [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined -> unit
           val get_month :
             'tags this ->
               [ `L_s0_2_digit  | `L_s55_long  | `L_s67_narrow 
               | `L_s72_numeric  | `L_s88_short ] or_undefined
           val set_month :
             'tags this ->
               [ `L_s0_2_digit  | `L_s55_long  | `L_s67_narrow 
               | `L_s72_numeric  | `L_s88_short ] or_undefined -> unit
           val get_day :
             'tags this -> [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined
           val set_day :
             'tags this ->
               [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined -> unit
           val get_hour :
             'tags this -> [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined
           val set_hour :
             'tags this ->
               [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined -> unit
           val get_minute :
             'tags this -> [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined
           val set_minute :
             'tags this ->
               [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined -> unit
           val get_second :
             'tags this -> [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined
           val set_second :
             'tags this ->
               [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined -> unit
           val get_timeZoneName :
             'tags this -> [ `L_s55_long  | `L_s88_short ] or_undefined
           val set_timeZoneName :
             'tags this ->
               [ `L_s55_long  | `L_s88_short ] or_undefined -> unit
           val get_formatMatcher' :
             'tags this -> [ `L_s23_basic  | `L_s24_best_fit ] or_undefined
           val set_formatMatcher' :
             'tags this ->
               [ `L_s23_basic  | `L_s24_best_fit ] or_undefined -> unit
           val get_hour12 : 'tags this -> bool or_undefined
           val set_hour12 : 'tags this -> bool or_undefined -> unit
           val get_timeZone : 'tags this -> string or_undefined
           val set_timeZone : 'tags this -> string or_undefined -> unit
           val create :
             ?formatMatcher:[ `L_s23_basic  | `L_s24_best_fit ] ->
               ?dateStyle:[ `L_s43_full  | `L_s55_long  | `L_s59_medium 
                          | `L_s88_short ]
                 ->
                 ?timeStyle:[ `L_s43_full  | `L_s55_long  | `L_s59_medium 
                            | `L_s88_short ]
                   ->
                   ?dayPeriod:[ `L_s55_long  | `L_s67_narrow 
                              | `L_s88_short ]
                     ->
                     ?fractionalSecondDigits:[ `L_n_0  | `L_n_1  | `L_n_2 
                                             | `L_n_3 ]
                       ->
                       ?calendar:string ->
                         ?dayPeriod:[ `L_s55_long  | `L_s67_narrow 
                                    | `L_s88_short ]
                           ->
                           ?numberingSystem:string ->
                             ?dateStyle:[ `L_s43_full  | `L_s55_long 
                                        | `L_s59_medium  | `L_s88_short ]
                               ->
                               ?timeStyle:[ `L_s43_full  | `L_s55_long 
                                          | `L_s59_medium  | `L_s88_short ]
                                 ->
                                 ?hourCycle:[ `L_s45_h11  | `L_s46_h12 
                                            | `L_s47_h23  | `L_s48_h24 ]
                                   ->
                                   ?localeMatcher:[ `L_s24_best_fit 
                                                  | `L_s56_lookup ]
                                     ->
                                     ?weekday:[ `L_s55_long  | `L_s67_narrow 
                                              | `L_s88_short ]
                                       ->
                                       ?era:[ `L_s55_long  | `L_s67_narrow 
                                            | `L_s88_short ]
                                         ->
                                         ?year:[ `L_s0_2_digit 
                                               | `L_s72_numeric ]
                                           ->
                                           ?month:[ `L_s0_2_digit 
                                                  | `L_s55_long 
                                                  | `L_s67_narrow 
                                                  | `L_s72_numeric 
                                                  | `L_s88_short ]
                                             ->
                                             ?day:[ `L_s0_2_digit 
                                                  | `L_s72_numeric ]
                                               ->
                                               ?hour:[ `L_s0_2_digit 
                                                     | `L_s72_numeric ]
                                                 ->
                                                 ?minute:[ `L_s0_2_digit 
                                                         | `L_s72_numeric ]
                                                   ->
                                                   ?second:[ `L_s0_2_digit 
                                                           | `L_s72_numeric ]
                                                     ->
                                                     ?timeZoneName:[
                                                                    `L_s55_long
                                                                     | 
                                                                    `L_s88_short
                                                                    ]
                                                       ->
                                                       ?formatMatcher:
                                                         [ `L_s23_basic 
                                                         | `L_s24_best_fit ]
                                                         ->
                                                         ?hour12:bool ->
                                                           ?timeZone:string
                                                             -> unit -> t
           val cast_from : 'tags this -> t
         end
         module DateTimeFormat :
         sig
           type t = [ `Intl_DateTimeFormat ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_DateTimeFormat ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_DateTimeFormat ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_DateTimeFormat ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val formatToParts :
             'tags this ->
               ?date:Date.t or_number -> unit -> DateTimeFormatPart.t list
           val format :
             'tags this -> ?date:Date.t or_number -> unit -> string
           val resolvedOptions :
             'tags this -> ResolvedDateTimeFormatOptions.t
           val cast_from : 'tags this -> t
           val create :
             ?locales:string list or_string ->
               ?options:DateTimeFormatOptions.t -> unit -> t
           val invoke :
             ?locales:string list or_string ->
               ?options:DateTimeFormatOptions.t -> unit -> t
           val supportedLocalesOf :
             locales:string list or_string ->
               ?options:DateTimeFormatOptions.t -> unit -> string list
         end
         module ResolvedCollatorOptions :
         sig
           type t = [ `Intl_ResolvedCollatorOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_ResolvedCollatorOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_ResolvedCollatorOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_ResolvedCollatorOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_locale : 'tags this -> string
           val set_locale : 'tags this -> string -> unit
           val get_usage : 'tags this -> string
           val set_usage : 'tags this -> string -> unit
           val get_sensitivity : 'tags this -> string
           val set_sensitivity : 'tags this -> string -> unit
           val get_ignorePunctuation : 'tags this -> bool
           val set_ignorePunctuation : 'tags this -> bool -> unit
           val get_collation : 'tags this -> string
           val set_collation : 'tags this -> string -> unit
           val get_caseFirst : 'tags this -> string
           val set_caseFirst : 'tags this -> string -> unit
           val get_numeric : 'tags this -> bool
           val set_numeric : 'tags this -> bool -> unit
           val create :
             locale:string ->
               usage:string ->
                 sensitivity:string ->
                   ignorePunctuation:bool ->
                     collation:string ->
                       caseFirst:string -> numeric:bool -> unit -> t
           val cast_from : 'tags this -> t
         end
         module CollatorOptions :
         sig
           type t = [ `Intl_CollatorOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_CollatorOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_CollatorOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_CollatorOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_usage : 'tags this -> string or_undefined
           val set_usage : 'tags this -> string or_undefined -> unit
           val get_localeMatcher : 'tags this -> string or_undefined
           val set_localeMatcher : 'tags this -> string or_undefined -> unit
           val get_numeric : 'tags this -> bool or_undefined
           val set_numeric : 'tags this -> bool or_undefined -> unit
           val get_caseFirst : 'tags this -> string or_undefined
           val set_caseFirst : 'tags this -> string or_undefined -> unit
           val get_sensitivity : 'tags this -> string or_undefined
           val set_sensitivity : 'tags this -> string or_undefined -> unit
           val get_ignorePunctuation : 'tags this -> bool or_undefined
           val set_ignorePunctuation :
             'tags this -> bool or_undefined -> unit
           val create :
             ?usage:string ->
               ?localeMatcher:string ->
                 ?numeric:bool ->
                   ?caseFirst:string ->
                     ?sensitivity:string ->
                       ?ignorePunctuation:bool -> unit -> t
           val cast_from : 'tags this -> t
         end
         module Collator :
         sig
           type t = [ `Intl_Collator ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_Collator ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_Collator ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_Collator ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val compare : 'tags this -> x:string -> y:string -> float
           val resolvedOptions : 'tags this -> ResolvedCollatorOptions.t
           val cast_from : 'tags this -> t
           val create :
             ?locales:string list or_string ->
               ?options:CollatorOptions.t -> unit -> t
           val invoke :
             ?locales:string list or_string ->
               ?options:CollatorOptions.t -> unit -> t
           val supportedLocalesOf :
             locales:string list or_string ->
               ?options:CollatorOptions.t -> unit -> string list
         end
       end =
  struct
    module UnicodeBCP47LocaleIdentifier =
      struct
        type t = string
        let rec t_of_js : Ojs.t -> t =
          fun (x1918 : Ojs.t) -> Ojs.string_of_js x1918
        and t_to_js : t -> Ojs.t =
          fun (x1917 : string) -> Ojs.string_to_js x1917
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x1920 : Ojs.t) -> t_of_js x1920
        and t_0_to_js : t_0 -> Ojs.t = fun (x1919 : t) -> t_to_js x1919
      end
    module RelativeTimeFormatNumeric =
      struct
        type t = [ `L_s21_always  | `L_s22_auto ]
        let rec t_of_js : Ojs.t -> t =
          fun (x1922 : Ojs.t) ->
            let x1923 = x1922 in
            match Ojs.string_of_js x1923 with
            | "always" -> `L_s21_always
            | "auto" -> `L_s22_auto
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x1921 : [ `L_s21_always  | `L_s22_auto ]) ->
            match x1921 with
            | `L_s21_always -> Ojs.string_to_js "always"
            | `L_s22_auto -> Ojs.string_to_js "auto"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x1925 : Ojs.t) -> t_of_js x1925
        and t_0_to_js : t_0 -> Ojs.t = fun (x1924 : t) -> t_to_js x1924
      end
    module RelativeTimeFormatStyle =
      struct
        type t = [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ]
        let rec t_of_js : Ojs.t -> t =
          fun (x1927 : Ojs.t) ->
            let x1928 = x1927 in
            match Ojs.string_of_js x1928 with
            | "long" -> `L_s55_long
            | "narrow" -> `L_s67_narrow
            | "short" -> `L_s88_short
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x1926 : [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ]) ->
            match x1926 with
            | `L_s55_long -> Ojs.string_to_js "long"
            | `L_s67_narrow -> Ojs.string_to_js "narrow"
            | `L_s88_short -> Ojs.string_to_js "short"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x1930 : Ojs.t) -> t_of_js x1930
        and t_0_to_js : t_0 -> Ojs.t = fun (x1929 : t) -> t_to_js x1929
      end
    module ResolvedRelativeTimeFormatOptions =
      struct
        type t = [ `Intl_ResolvedRelativeTimeFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x1932 : Ojs.t) -> t_of_js x1932
        and t_0_to_js : t_0 -> Ojs.t = fun (x1931 : t) -> t_to_js x1931
        type tags = [ `Intl_ResolvedRelativeTimeFormatOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags =
                      [> `Intl_ResolvedRelativeTimeFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x1935 : Ojs.t) -> intf_of_js __tags_of_js x1935
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x1933 : __tags intf) -> intf_to_js __tags_to_js x1933
        let (get_locale : 'tags this -> UnicodeBCP47LocaleIdentifier.t) =
          fun (x1937 : 'tags this) ->
            UnicodeBCP47LocaleIdentifier.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x1937) "locale")
        let (set_locale :
          'tags this -> UnicodeBCP47LocaleIdentifier.t -> unit) =
          fun (x1939 : 'tags this) ->
            fun (x1940 : UnicodeBCP47LocaleIdentifier.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x1939) "locale"
                (UnicodeBCP47LocaleIdentifier.t_to_js x1940)
        let (get_style : 'tags this -> RelativeTimeFormatStyle.t) =
          fun (x1942 : 'tags this) ->
            RelativeTimeFormatStyle.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x1942) "style")
        let (set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit) =
          fun (x1944 : 'tags this) ->
            fun (x1945 : RelativeTimeFormatStyle.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x1944) "style"
                (RelativeTimeFormatStyle.t_to_js x1945)
        let (get_numeric : 'tags this -> RelativeTimeFormatNumeric.t) =
          fun (x1947 : 'tags this) ->
            RelativeTimeFormatNumeric.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x1947) "numeric")
        let (set_numeric : 'tags this -> RelativeTimeFormatNumeric.t -> unit)
          =
          fun (x1949 : 'tags this) ->
            fun (x1950 : RelativeTimeFormatNumeric.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x1949) "numeric"
                (RelativeTimeFormatNumeric.t_to_js x1950)
        let (get_numberingSystem : 'tags this -> string) =
          fun (x1952 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x1952)
                 "numberingSystem")
        let (set_numberingSystem : 'tags this -> string -> unit) =
          fun (x1954 : 'tags this) ->
            fun (x1955 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x1954)
                "numberingSystem" (Ojs.string_to_js x1955)
        let (create :
          locale:UnicodeBCP47LocaleIdentifier.t ->
            style:RelativeTimeFormatStyle.t ->
              numeric:RelativeTimeFormatNumeric.t ->
                numberingSystem:string -> unit -> t)
          =
          fun ~locale:(x1957 : UnicodeBCP47LocaleIdentifier.t) ->
            fun ~style:(x1958 : RelativeTimeFormatStyle.t) ->
              fun ~numeric:(x1959 : RelativeTimeFormatNumeric.t) ->
                fun ~numberingSystem:(x1960 : string) ->
                  fun () ->
                    let x1961 = Ojs.empty_obj () in
                    Ojs.set_prop_ascii x1961 "locale"
                      (UnicodeBCP47LocaleIdentifier.t_to_js x1957);
                    Ojs.set_prop_ascii x1961 "style"
                      (RelativeTimeFormatStyle.t_to_js x1958);
                    Ojs.set_prop_ascii x1961 "numeric"
                      (RelativeTimeFormatNumeric.t_to_js x1959);
                    Ojs.set_prop_ascii x1961 "numberingSystem"
                      (Ojs.string_to_js x1960);
                    t_of_js x1961
        let cast_from = Obj.magic
      end
    module RelativeTimeFormatUnit =
      struct
        type t =
          [ `L_s100_weeks  | `L_s101_year  | `L_s102_years  | `L_s29_day 
          | `L_s31_days  | `L_s49_hour  | `L_s50_hours  | `L_s61_minute 
          | `L_s62_minutes  | `L_s63_month  | `L_s64_months 
          | `L_s80_quarter  | `L_s81_quarters  | `L_s86_second 
          | `L_s87_seconds  | `L_s98_week ]
        let rec t_of_js : Ojs.t -> t =
          fun (x1963 : Ojs.t) ->
            let x1964 = x1963 in
            match Ojs.string_of_js x1964 with
            | "weeks" -> `L_s100_weeks
            | "year" -> `L_s101_year
            | "years" -> `L_s102_years
            | "day" -> `L_s29_day
            | "days" -> `L_s31_days
            | "hour" -> `L_s49_hour
            | "hours" -> `L_s50_hours
            | "minute" -> `L_s61_minute
            | "minutes" -> `L_s62_minutes
            | "month" -> `L_s63_month
            | "months" -> `L_s64_months
            | "quarter" -> `L_s80_quarter
            | "quarters" -> `L_s81_quarters
            | "second" -> `L_s86_second
            | "seconds" -> `L_s87_seconds
            | "week" -> `L_s98_week
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x1962 :
              [ `L_s100_weeks  | `L_s101_year  | `L_s102_years  | `L_s29_day 
              | `L_s31_days  | `L_s49_hour  | `L_s50_hours  | `L_s61_minute 
              | `L_s62_minutes  | `L_s63_month  | `L_s64_months 
              | `L_s80_quarter  | `L_s81_quarters  | `L_s86_second 
              | `L_s87_seconds  | `L_s98_week ])
            ->
            match x1962 with
            | `L_s100_weeks -> Ojs.string_to_js "weeks"
            | `L_s101_year -> Ojs.string_to_js "year"
            | `L_s102_years -> Ojs.string_to_js "years"
            | `L_s29_day -> Ojs.string_to_js "day"
            | `L_s31_days -> Ojs.string_to_js "days"
            | `L_s49_hour -> Ojs.string_to_js "hour"
            | `L_s50_hours -> Ojs.string_to_js "hours"
            | `L_s61_minute -> Ojs.string_to_js "minute"
            | `L_s62_minutes -> Ojs.string_to_js "minutes"
            | `L_s63_month -> Ojs.string_to_js "month"
            | `L_s64_months -> Ojs.string_to_js "months"
            | `L_s80_quarter -> Ojs.string_to_js "quarter"
            | `L_s81_quarters -> Ojs.string_to_js "quarters"
            | `L_s86_second -> Ojs.string_to_js "second"
            | `L_s87_seconds -> Ojs.string_to_js "seconds"
            | `L_s98_week -> Ojs.string_to_js "week"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x1966 : Ojs.t) -> t_of_js x1966
        and t_0_to_js : t_0 -> Ojs.t = fun (x1965 : t) -> t_to_js x1965
      end
    module RelativeTimeFormatPart =
      struct
        type t = [ `Intl_RelativeTimeFormatPart ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x1968 : Ojs.t) -> t_of_js x1968
        and t_0_to_js : t_0 -> Ojs.t = fun (x1967 : t) -> t_to_js x1967
        type tags = [ `Intl_RelativeTimeFormatPart ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_RelativeTimeFormatPart ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x1971 : Ojs.t) -> intf_of_js __tags_of_js x1971
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x1969 : __tags intf) -> intf_to_js __tags_to_js x1969
        let (get_type : 'tags this -> string) =
          fun (x1973 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x1973) "type")
        let (set_type : 'tags this -> string -> unit) =
          fun (x1975 : 'tags this) ->
            fun (x1976 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x1975) "type"
                (Ojs.string_to_js x1976)
        let (get_value : 'tags this -> string) =
          fun (x1978 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x1978) "value")
        let (set_value : 'tags this -> string -> unit) =
          fun (x1980 : 'tags this) ->
            fun (x1981 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x1980) "value"
                (Ojs.string_to_js x1981)
        let (get_unit : 'tags this -> RelativeTimeFormatUnit.t) =
          fun (x1983 : 'tags this) ->
            RelativeTimeFormatUnit.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x1983) "unit")
        let (set_unit : 'tags this -> RelativeTimeFormatUnit.t -> unit) =
          fun (x1985 : 'tags this) ->
            fun (x1986 : RelativeTimeFormatUnit.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x1985) "unit"
                (RelativeTimeFormatUnit.t_to_js x1986)
        let (create :
          type_:string ->
            value:string -> unit:RelativeTimeFormatUnit.t -> unit -> t)
          =
          fun ~type_:(x1988 : string) ->
            fun ~value:(x1989 : string) ->
              fun ~unit:(x1990 : RelativeTimeFormatUnit.t) ->
                fun () ->
                  let x1991 = Ojs.empty_obj () in
                  Ojs.set_prop_ascii x1991 "type" (Ojs.string_to_js x1988);
                  Ojs.set_prop_ascii x1991 "value" (Ojs.string_to_js x1989);
                  Ojs.set_prop_ascii x1991 "unit"
                    (RelativeTimeFormatUnit.t_to_js x1990);
                  t_of_js x1991
        let cast_from = Obj.magic
      end
    module RelativeTimeFormatLocaleMatcher =
      struct
        type t = [ `L_s24_best_fit  | `L_s56_lookup ]
        let rec t_of_js : Ojs.t -> t =
          fun (x1993 : Ojs.t) ->
            let x1994 = x1993 in
            match Ojs.string_of_js x1994 with
            | "best fit" -> `L_s24_best_fit
            | "lookup" -> `L_s56_lookup
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x1992 : [ `L_s24_best_fit  | `L_s56_lookup ]) ->
            match x1992 with
            | `L_s24_best_fit -> Ojs.string_to_js "best fit"
            | `L_s56_lookup -> Ojs.string_to_js "lookup"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x1996 : Ojs.t) -> t_of_js x1996
        and t_0_to_js : t_0 -> Ojs.t = fun (x1995 : t) -> t_to_js x1995
      end
    module RelativeTimeFormatOptions =
      struct
        type t = [ `Intl_RelativeTimeFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x1998 : Ojs.t) -> t_of_js x1998
        and t_0_to_js : t_0 -> Ojs.t = fun (x1997 : t) -> t_to_js x1997
        type tags = [ `Intl_RelativeTimeFormatOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_RelativeTimeFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2001 : Ojs.t) -> intf_of_js __tags_of_js x2001
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x1999 : __tags intf) -> intf_to_js __tags_to_js x1999
        let (get_localeMatcher :
          'tags this -> RelativeTimeFormatLocaleMatcher.t) =
          fun (x2003 : 'tags this) ->
            RelativeTimeFormatLocaleMatcher.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2003)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this -> RelativeTimeFormatLocaleMatcher.t -> unit) =
          fun (x2005 : 'tags this) ->
            fun (x2006 : RelativeTimeFormatLocaleMatcher.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2005) "localeMatcher"
                (RelativeTimeFormatLocaleMatcher.t_to_js x2006)
        let (get_numeric : 'tags this -> RelativeTimeFormatNumeric.t) =
          fun (x2008 : 'tags this) ->
            RelativeTimeFormatNumeric.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2008) "numeric")
        let (set_numeric : 'tags this -> RelativeTimeFormatNumeric.t -> unit)
          =
          fun (x2010 : 'tags this) ->
            fun (x2011 : RelativeTimeFormatNumeric.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2010) "numeric"
                (RelativeTimeFormatNumeric.t_to_js x2011)
        let (get_style : 'tags this -> RelativeTimeFormatStyle.t) =
          fun (x2013 : 'tags this) ->
            RelativeTimeFormatStyle.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2013) "style")
        let (set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit) =
          fun (x2015 : 'tags this) ->
            fun (x2016 : RelativeTimeFormatStyle.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2015) "style"
                (RelativeTimeFormatStyle.t_to_js x2016)
        let (create :
          localeMatcher:RelativeTimeFormatLocaleMatcher.t ->
            numeric:RelativeTimeFormatNumeric.t ->
              style:RelativeTimeFormatStyle.t -> unit -> t)
          =
          fun ~localeMatcher:(x2018 : RelativeTimeFormatLocaleMatcher.t) ->
            fun ~numeric:(x2019 : RelativeTimeFormatNumeric.t) ->
              fun ~style:(x2020 : RelativeTimeFormatStyle.t) ->
                fun () ->
                  let x2021 = Ojs.empty_obj () in
                  Ojs.set_prop_ascii x2021 "localeMatcher"
                    (RelativeTimeFormatLocaleMatcher.t_to_js x2018);
                  Ojs.set_prop_ascii x2021 "numeric"
                    (RelativeTimeFormatNumeric.t_to_js x2019);
                  Ojs.set_prop_ascii x2021 "style"
                    (RelativeTimeFormatStyle.t_to_js x2020);
                  t_of_js x2021
        let cast_from = Obj.magic
      end
    module RelativeTimeFormat =
      struct
        type t = [ `Intl_RelativeTimeFormat ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2023 : Ojs.t) -> t_of_js x2023
        and t_0_to_js : t_0 -> Ojs.t = fun (x2022 : t) -> t_to_js x2022
        type tags = [ `Intl_RelativeTimeFormat ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_RelativeTimeFormat ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2026 : Ojs.t) -> intf_of_js __tags_of_js x2026
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2024 : __tags intf) -> intf_to_js __tags_to_js x2024
        let (format :
          'tags this ->
            value:float -> unit:RelativeTimeFormatUnit.t -> string)
          =
          fun (x2030 : 'tags this) ->
            fun ~value:(x2028 : float) ->
              fun ~unit:(x2029 : RelativeTimeFormatUnit.t) ->
                Ojs.string_of_js
                  (Ojs.call (this_to_js Obj.magic x2030) "format"
                     [|(Ojs.float_to_js x2028);(RelativeTimeFormatUnit.t_to_js
                                                  x2029)|])
        let (formatToParts :
          'tags this ->
            value:float ->
              unit:RelativeTimeFormatUnit.t -> RelativeTimeFormatPart.t list)
          =
          fun (x2034 : 'tags this) ->
            fun ~value:(x2032 : float) ->
              fun ~unit:(x2033 : RelativeTimeFormatUnit.t) ->
                Ojs.list_of_js RelativeTimeFormatPart.t_of_js
                  (Ojs.call (this_to_js Obj.magic x2034) "formatToParts"
                     [|(Ojs.float_to_js x2032);(RelativeTimeFormatUnit.t_to_js
                                                  x2033)|])
        let (resolvedOptions :
          'tags this -> ResolvedRelativeTimeFormatOptions.t) =
          fun (x2037 : 'tags this) ->
            ResolvedRelativeTimeFormatOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x2037) "resolvedOptions" [||])
        let cast_from = Obj.magic
        let (create :
          ?locales:(UnicodeBCP47LocaleIdentifier.t,
            UnicodeBCP47LocaleIdentifier.t) or_array ->
            ?options:RelativeTimeFormatOptions.t -> unit -> t)
          =
          fun
            ?locales:(x2039 :
                       (UnicodeBCP47LocaleIdentifier.t,
                         UnicodeBCP47LocaleIdentifier.t) or_array option)
            ->
            fun ?options:(x2040 : RelativeTimeFormatOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl")
                        "RelativeTimeFormat")
                     (let x2041 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x2039 with
                       | Some x2043 ->
                           ignore
                             (Ojs.call x2041 "push"
                                [|(or_array_to_js
                                     UnicodeBCP47LocaleIdentifier.t_to_js
                                     UnicodeBCP47LocaleIdentifier.t_to_js
                                     x2043)|])
                       | None -> ());
                      (match x2040 with
                       | Some x2042 ->
                           ignore
                             (Ojs.call x2041 "push"
                                [|(RelativeTimeFormatOptions.t_to_js x2042)|])
                       | None -> ());
                      x2041))
        let (supportedLocalesOf :
          ?locales:(UnicodeBCP47LocaleIdentifier.t,
            UnicodeBCP47LocaleIdentifier.t) or_array ->
            ?options:RelativeTimeFormatOptions.t ->
              unit -> UnicodeBCP47LocaleIdentifier.t list)
          =
          fun
            ?locales:(x2046 :
                       (UnicodeBCP47LocaleIdentifier.t,
                         UnicodeBCP47LocaleIdentifier.t) or_array option)
            ->
            fun ?options:(x2047 : RelativeTimeFormatOptions.t option) ->
              fun () ->
                Ojs.list_of_js UnicodeBCP47LocaleIdentifier.t_of_js
                  (let x2053 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl")
                       "RelativeTimeFormat" in
                   Ojs.call (Ojs.get_prop_ascii x2053 "supportedLocalesOf")
                     "apply"
                     [|x2053;((let x2048 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x2046 with
                                | Some x2050 ->
                                    ignore
                                      (Ojs.call x2048 "push"
                                         [|(or_array_to_js
                                              UnicodeBCP47LocaleIdentifier.t_to_js
                                              UnicodeBCP47LocaleIdentifier.t_to_js
                                              x2050)|])
                                | None -> ());
                               (match x2047 with
                                | Some x2049 ->
                                    ignore
                                      (Ojs.call x2048 "push"
                                         [|(RelativeTimeFormatOptions.t_to_js
                                              x2049)|])
                                | None -> ());
                               x2048))|])
      end
    module PluralRuleType =
      struct
        type t = [ `L_s25_cardinal  | `L_s75_ordinal ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2056 : Ojs.t) ->
            let x2057 = x2056 in
            match Ojs.string_of_js x2057 with
            | "cardinal" -> `L_s25_cardinal
            | "ordinal" -> `L_s75_ordinal
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x2055 : [ `L_s25_cardinal  | `L_s75_ordinal ]) ->
            match x2055 with
            | `L_s25_cardinal -> Ojs.string_to_js "cardinal"
            | `L_s75_ordinal -> Ojs.string_to_js "ordinal"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2059 : Ojs.t) -> t_of_js x2059
        and t_0_to_js : t_0 -> Ojs.t = fun (x2058 : t) -> t_to_js x2058
      end
    module LDMLPluralRule =
      struct
        type t =
          [ `L_s103_zero  | `L_s40_few  | `L_s58_many  | `L_s74_one 
          | `L_s76_other  | `L_s94_two ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2061 : Ojs.t) ->
            let x2062 = x2061 in
            match Ojs.string_of_js x2062 with
            | "zero" -> `L_s103_zero
            | "few" -> `L_s40_few
            | "many" -> `L_s58_many
            | "one" -> `L_s74_one
            | "other" -> `L_s76_other
            | "two" -> `L_s94_two
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x2060 :
              [ `L_s103_zero  | `L_s40_few  | `L_s58_many  | `L_s74_one 
              | `L_s76_other  | `L_s94_two ])
            ->
            match x2060 with
            | `L_s103_zero -> Ojs.string_to_js "zero"
            | `L_s40_few -> Ojs.string_to_js "few"
            | `L_s58_many -> Ojs.string_to_js "many"
            | `L_s74_one -> Ojs.string_to_js "one"
            | `L_s76_other -> Ojs.string_to_js "other"
            | `L_s94_two -> Ojs.string_to_js "two"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2064 : Ojs.t) -> t_of_js x2064
        and t_0_to_js : t_0 -> Ojs.t = fun (x2063 : t) -> t_to_js x2063
      end
    module ResolvedPluralRulesOptions =
      struct
        type t = [ `Intl_ResolvedPluralRulesOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2066 : Ojs.t) -> t_of_js x2066
        and t_0_to_js : t_0 -> Ojs.t = fun (x2065 : t) -> t_to_js x2065
        type tags = [ `Intl_ResolvedPluralRulesOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_ResolvedPluralRulesOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2069 : Ojs.t) -> intf_of_js __tags_of_js x2069
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2067 : __tags intf) -> intf_to_js __tags_to_js x2067
        let (get_locale : 'tags this -> string) =
          fun (x2071 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2071) "locale")
        let (set_locale : 'tags this -> string -> unit) =
          fun (x2073 : 'tags this) ->
            fun (x2074 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2073) "locale"
                (Ojs.string_to_js x2074)
        let (get_pluralCategories : 'tags this -> LDMLPluralRule.t list) =
          fun (x2076 : 'tags this) ->
            Ojs.list_of_js LDMLPluralRule.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2076)
                 "pluralCategories")
        let (set_pluralCategories :
          'tags this -> LDMLPluralRule.t list -> unit) =
          fun (x2079 : 'tags this) ->
            fun (x2080 : LDMLPluralRule.t list) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2079)
                "pluralCategories"
                (Ojs.list_to_js LDMLPluralRule.t_to_js x2080)
        let (get_type : 'tags this -> PluralRuleType.t) =
          fun (x2083 : 'tags this) ->
            PluralRuleType.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2083) "type")
        let (set_type : 'tags this -> PluralRuleType.t -> unit) =
          fun (x2085 : 'tags this) ->
            fun (x2086 : PluralRuleType.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2085) "type"
                (PluralRuleType.t_to_js x2086)
        let (get_minimumIntegerDigits : 'tags this -> float) =
          fun (x2088 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2088)
                 "minimumIntegerDigits")
        let (set_minimumIntegerDigits : 'tags this -> float -> unit) =
          fun (x2090 : 'tags this) ->
            fun (x2091 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2090)
                "minimumIntegerDigits" (Ojs.float_to_js x2091)
        let (get_minimumFractionDigits : 'tags this -> float) =
          fun (x2093 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2093)
                 "minimumFractionDigits")
        let (set_minimumFractionDigits : 'tags this -> float -> unit) =
          fun (x2095 : 'tags this) ->
            fun (x2096 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2095)
                "minimumFractionDigits" (Ojs.float_to_js x2096)
        let (get_maximumFractionDigits : 'tags this -> float) =
          fun (x2098 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2098)
                 "maximumFractionDigits")
        let (set_maximumFractionDigits : 'tags this -> float -> unit) =
          fun (x2100 : 'tags this) ->
            fun (x2101 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2100)
                "maximumFractionDigits" (Ojs.float_to_js x2101)
        let (get_minimumSignificantDigits : 'tags this -> float) =
          fun (x2103 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2103)
                 "minimumSignificantDigits")
        let (set_minimumSignificantDigits : 'tags this -> float -> unit) =
          fun (x2105 : 'tags this) ->
            fun (x2106 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2105)
                "minimumSignificantDigits" (Ojs.float_to_js x2106)
        let (get_maximumSignificantDigits : 'tags this -> float) =
          fun (x2108 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2108)
                 "maximumSignificantDigits")
        let (set_maximumSignificantDigits : 'tags this -> float -> unit) =
          fun (x2110 : 'tags this) ->
            fun (x2111 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2110)
                "maximumSignificantDigits" (Ojs.float_to_js x2111)
        let (create :
          locale:string ->
            pluralCategories:LDMLPluralRule.t list ->
              type_:PluralRuleType.t ->
                minimumIntegerDigits:float ->
                  minimumFractionDigits:float ->
                    maximumFractionDigits:float ->
                      minimumSignificantDigits:float ->
                        maximumSignificantDigits:float -> unit -> t)
          =
          fun ~locale:(x2113 : string) ->
            fun ~pluralCategories:(x2114 : LDMLPluralRule.t list) ->
              fun ~type_:(x2115 : PluralRuleType.t) ->
                fun ~minimumIntegerDigits:(x2116 : float) ->
                  fun ~minimumFractionDigits:(x2117 : float) ->
                    fun ~maximumFractionDigits:(x2118 : float) ->
                      fun ~minimumSignificantDigits:(x2119 : float) ->
                        fun ~maximumSignificantDigits:(x2120 : float) ->
                          fun () ->
                            let x2121 = Ojs.empty_obj () in
                            Ojs.set_prop_ascii x2121 "locale"
                              (Ojs.string_to_js x2113);
                            Ojs.set_prop_ascii x2121 "pluralCategories"
                              (Ojs.list_to_js LDMLPluralRule.t_to_js x2114);
                            Ojs.set_prop_ascii x2121 "type"
                              (PluralRuleType.t_to_js x2115);
                            Ojs.set_prop_ascii x2121 "minimumIntegerDigits"
                              (Ojs.float_to_js x2116);
                            Ojs.set_prop_ascii x2121 "minimumFractionDigits"
                              (Ojs.float_to_js x2117);
                            Ojs.set_prop_ascii x2121 "maximumFractionDigits"
                              (Ojs.float_to_js x2118);
                            Ojs.set_prop_ascii x2121
                              "minimumSignificantDigits"
                              (Ojs.float_to_js x2119);
                            Ojs.set_prop_ascii x2121
                              "maximumSignificantDigits"
                              (Ojs.float_to_js x2120);
                            t_of_js x2121
        let cast_from = Obj.magic
      end
    module PluralRulesOptions =
      struct
        type t = [ `Intl_PluralRulesOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2124 : Ojs.t) -> t_of_js x2124
        and t_0_to_js : t_0 -> Ojs.t = fun (x2123 : t) -> t_to_js x2123
        type tags = [ `Intl_PluralRulesOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_PluralRulesOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2127 : Ojs.t) -> intf_of_js __tags_of_js x2127
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2125 : __tags intf) -> intf_to_js __tags_to_js x2125
        let (get_localeMatcher :
          'tags this -> [ `L_s24_best_fit  | `L_s56_lookup ] or_undefined) =
          fun (x2129 : 'tags this) ->
            or_undefined_of_js
              (fun (x2131 : Ojs.t) ->
                 let x2132 = x2131 in
                 match Ojs.string_of_js x2132 with
                 | "best fit" -> `L_s24_best_fit
                 | "lookup" -> `L_s56_lookup
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2129)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this ->
            [ `L_s24_best_fit  | `L_s56_lookup ] or_undefined -> unit)
          =
          fun (x2133 : 'tags this) ->
            fun (x2134 : [ `L_s24_best_fit  | `L_s56_lookup ] or_undefined)
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2133) "localeMatcher"
                (or_undefined_to_js
                   (fun (x2135 : [ `L_s24_best_fit  | `L_s56_lookup ]) ->
                      match x2135 with
                      | `L_s24_best_fit -> Ojs.string_to_js "best fit"
                      | `L_s56_lookup -> Ojs.string_to_js "lookup") x2134)
        let (get_type : 'tags this -> PluralRuleType.t or_undefined) =
          fun (x2137 : 'tags this) ->
            or_undefined_of_js PluralRuleType.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2137) "type")
        let (set_type : 'tags this -> PluralRuleType.t or_undefined -> unit)
          =
          fun (x2140 : 'tags this) ->
            fun (x2141 : PluralRuleType.t or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2140) "type"
                (or_undefined_to_js PluralRuleType.t_to_js x2141)
        let (get_minimumIntegerDigits : 'tags this -> float or_undefined) =
          fun (x2144 : 'tags this) ->
            or_undefined_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2144)
                 "minimumIntegerDigits")
        let (set_minimumIntegerDigits :
          'tags this -> float or_undefined -> unit) =
          fun (x2147 : 'tags this) ->
            fun (x2148 : float or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2147)
                "minimumIntegerDigits"
                (or_undefined_to_js Ojs.float_to_js x2148)
        let (get_minimumFractionDigits : 'tags this -> float or_undefined) =
          fun (x2151 : 'tags this) ->
            or_undefined_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2151)
                 "minimumFractionDigits")
        let (set_minimumFractionDigits :
          'tags this -> float or_undefined -> unit) =
          fun (x2154 : 'tags this) ->
            fun (x2155 : float or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2154)
                "minimumFractionDigits"
                (or_undefined_to_js Ojs.float_to_js x2155)
        let (get_maximumFractionDigits : 'tags this -> float or_undefined) =
          fun (x2158 : 'tags this) ->
            or_undefined_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2158)
                 "maximumFractionDigits")
        let (set_maximumFractionDigits :
          'tags this -> float or_undefined -> unit) =
          fun (x2161 : 'tags this) ->
            fun (x2162 : float or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2161)
                "maximumFractionDigits"
                (or_undefined_to_js Ojs.float_to_js x2162)
        let (get_minimumSignificantDigits : 'tags this -> float or_undefined)
          =
          fun (x2165 : 'tags this) ->
            or_undefined_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2165)
                 "minimumSignificantDigits")
        let (set_minimumSignificantDigits :
          'tags this -> float or_undefined -> unit) =
          fun (x2168 : 'tags this) ->
            fun (x2169 : float or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2168)
                "minimumSignificantDigits"
                (or_undefined_to_js Ojs.float_to_js x2169)
        let (get_maximumSignificantDigits : 'tags this -> float or_undefined)
          =
          fun (x2172 : 'tags this) ->
            or_undefined_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2172)
                 "maximumSignificantDigits")
        let (set_maximumSignificantDigits :
          'tags this -> float or_undefined -> unit) =
          fun (x2175 : 'tags this) ->
            fun (x2176 : float or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2175)
                "maximumSignificantDigits"
                (or_undefined_to_js Ojs.float_to_js x2176)
        let (create :
          ?localeMatcher:[ `L_s24_best_fit  | `L_s56_lookup ] ->
            ?type_:PluralRuleType.t ->
              ?minimumIntegerDigits:float ->
                ?minimumFractionDigits:float ->
                  ?maximumFractionDigits:float ->
                    ?minimumSignificantDigits:float ->
                      ?maximumSignificantDigits:float -> unit -> t)
          =
          fun
            ?localeMatcher:(x2179 :
                             [ `L_s24_best_fit  | `L_s56_lookup ] option)
            ->
            fun ?type_:(x2180 : PluralRuleType.t option) ->
              fun ?minimumIntegerDigits:(x2181 : float option) ->
                fun ?minimumFractionDigits:(x2182 : float option) ->
                  fun ?maximumFractionDigits:(x2183 : float option) ->
                    fun ?minimumSignificantDigits:(x2184 : float option) ->
                      fun ?maximumSignificantDigits:(x2185 : float option) ->
                        fun () ->
                          let x2186 = Ojs.empty_obj () in
                          (match x2179 with
                           | Some x2193 ->
                               Ojs.set_prop_ascii x2186 "localeMatcher"
                                 (match x2193 with
                                  | `L_s24_best_fit ->
                                      Ojs.string_to_js "best fit"
                                  | `L_s56_lookup ->
                                      Ojs.string_to_js "lookup")
                           | None -> ());
                          (match x2180 with
                           | Some x2192 ->
                               Ojs.set_prop_ascii x2186 "type"
                                 (PluralRuleType.t_to_js x2192)
                           | None -> ());
                          (match x2181 with
                           | Some x2191 ->
                               Ojs.set_prop_ascii x2186
                                 "minimumIntegerDigits"
                                 (Ojs.float_to_js x2191)
                           | None -> ());
                          (match x2182 with
                           | Some x2190 ->
                               Ojs.set_prop_ascii x2186
                                 "minimumFractionDigits"
                                 (Ojs.float_to_js x2190)
                           | None -> ());
                          (match x2183 with
                           | Some x2189 ->
                               Ojs.set_prop_ascii x2186
                                 "maximumFractionDigits"
                                 (Ojs.float_to_js x2189)
                           | None -> ());
                          (match x2184 with
                           | Some x2188 ->
                               Ojs.set_prop_ascii x2186
                                 "minimumSignificantDigits"
                                 (Ojs.float_to_js x2188)
                           | None -> ());
                          (match x2185 with
                           | Some x2187 ->
                               Ojs.set_prop_ascii x2186
                                 "maximumSignificantDigits"
                                 (Ojs.float_to_js x2187)
                           | None -> ());
                          t_of_js x2186
        let cast_from = Obj.magic
      end
    module PluralRules =
      struct
        module AnonymousInterface4 =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x2195 : Ojs.t) -> x2195
            and t_to_js : t -> Ojs.t = fun (x2194 : Ojs.t) -> x2194
            let (get_localeMatcher :
              t -> [ `L_s24_best_fit  | `L_s56_lookup ]) =
              fun (x2196 : t) ->
                let x2197 =
                  Ojs.get_prop_ascii (t_to_js x2196) "localeMatcher" in
                match Ojs.string_of_js x2197 with
                | "best fit" -> `L_s24_best_fit
                | "lookup" -> `L_s56_lookup
                | _ -> assert false
            let (set_localeMatcher :
              t -> [ `L_s24_best_fit  | `L_s56_lookup ] -> unit) =
              fun (x2198 : t) ->
                fun (x2199 : [ `L_s24_best_fit  | `L_s56_lookup ]) ->
                  Ojs.set_prop_ascii (t_to_js x2198) "localeMatcher"
                    (match x2199 with
                     | `L_s24_best_fit -> Ojs.string_to_js "best fit"
                     | `L_s56_lookup -> Ojs.string_to_js "lookup")
            let (create :
              localeMatcher:[ `L_s24_best_fit  | `L_s56_lookup ] -> unit -> t)
              =
              fun
                ~localeMatcher:(x2200 : [ `L_s24_best_fit  | `L_s56_lookup ])
                ->
                fun () ->
                  let x2201 = Ojs.empty_obj () in
                  Ojs.set_prop_ascii x2201 "localeMatcher"
                    (match x2200 with
                     | `L_s24_best_fit -> Ojs.string_to_js "best fit"
                     | `L_s56_lookup -> Ojs.string_to_js "lookup");
                  t_of_js x2201
          end
        type t = [ `Intl_PluralRules ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2203 : Ojs.t) -> t_of_js x2203
        and t_0_to_js : t_0 -> Ojs.t = fun (x2202 : t) -> t_to_js x2202
        type tags = [ `Intl_PluralRules ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_PluralRules ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2206 : Ojs.t) -> intf_of_js __tags_of_js x2206
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2204 : __tags intf) -> intf_to_js __tags_to_js x2204
        let (resolvedOptions : 'tags this -> ResolvedPluralRulesOptions.t) =
          fun (x2208 : 'tags this) ->
            ResolvedPluralRulesOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x2208) "resolvedOptions" [||])
        let (select : 'tags this -> n:float -> LDMLPluralRule.t) =
          fun (x2211 : 'tags this) ->
            fun ~n:(x2210 : float) ->
              LDMLPluralRule.t_of_js
                (Ojs.call (this_to_js Obj.magic x2211) "select"
                   [|(Ojs.float_to_js x2210)|])
        let cast_from = Obj.magic
        let (create :
          ?locales:string list or_string ->
            ?options:PluralRulesOptions.t -> unit -> t)
          =
          fun ?locales:(x2213 : string list or_string option) ->
            fun ?options:(x2214 : PluralRulesOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "PluralRules")
                     (let x2215 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x2213 with
                       | Some x2217 ->
                           ignore
                             (Ojs.call x2215 "push"
                                [|(or_string_to_js
                                     (fun (x2218 : string list) ->
                                        Ojs.list_to_js Ojs.string_to_js x2218)
                                     x2217)|])
                       | None -> ());
                      (match x2214 with
                       | Some x2216 ->
                           ignore
                             (Ojs.call x2215 "push"
                                [|(PluralRulesOptions.t_to_js x2216)|])
                       | None -> ());
                      x2215))
        let (invoke :
          ?locales:string list or_string ->
            ?options:PluralRulesOptions.t -> unit -> t)
          =
          fun ?locales:(x2220 : string list or_string option) ->
            fun ?options:(x2221 : PluralRulesOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "PluralRules")
                     "apply"
                     [|Ojs.null;((let x2222 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  (match x2220 with
                                   | Some x2224 ->
                                       ignore
                                         (Ojs.call x2222 "push"
                                            [|(or_string_to_js
                                                 (fun (x2225 : string list)
                                                    ->
                                                    Ojs.list_to_js
                                                      Ojs.string_to_js x2225)
                                                 x2224)|])
                                   | None -> ());
                                  (match x2221 with
                                   | Some x2223 ->
                                       ignore
                                         (Ojs.call x2222 "push"
                                            [|(PluralRulesOptions.t_to_js
                                                 x2223)|])
                                   | None -> ());
                                  x2222))|])
        let (supportedLocalesOf :
          locales:string list or_string ->
            ?options:AnonymousInterface4.t -> unit -> string list)
          =
          fun ~locales:(x2227 : string list or_string) ->
            fun ?options:(x2228 : AnonymousInterface4.t option) ->
              fun () ->
                Ojs.list_of_js Ojs.string_of_js
                  (let x2233 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl") "PluralRules" in
                   Ojs.call (Ojs.get_prop_ascii x2233 "supportedLocalesOf")
                     "apply"
                     [|x2233;((let x2229 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2229 "push"
                                    [|(or_string_to_js
                                         (fun (x2231 : string list) ->
                                            Ojs.list_to_js Ojs.string_to_js
                                              x2231) x2227)|]);
                               (match x2228 with
                                | Some x2230 ->
                                    ignore
                                      (Ojs.call x2229 "push"
                                         [|(AnonymousInterface4.t_to_js x2230)|])
                                | None -> ());
                               x2229))|])
      end
    module ResolvedNumberFormatOptions =
      struct
        type t = [ `Intl_ResolvedNumberFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2236 : Ojs.t) -> t_of_js x2236
        and t_0_to_js : t_0 -> Ojs.t = fun (x2235 : t) -> t_to_js x2235
        type tags = [ `Intl_ResolvedNumberFormatOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags =
                      [> `Intl_ResolvedNumberFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2239 : Ojs.t) -> intf_of_js __tags_of_js x2239
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2237 : __tags intf) -> intf_to_js __tags_to_js x2237
        let (get_compactDisplay :
          'tags this -> [ `L_s55_long  | `L_s88_short ]) =
          fun (x2241 : 'tags this) ->
            let x2243 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2241)
                "compactDisplay" in
            match Ojs.string_of_js x2243 with
            | "long" -> `L_s55_long
            | "short" -> `L_s88_short
            | _ -> assert false
        let (set_compactDisplay :
          'tags this -> [ `L_s55_long  | `L_s88_short ] -> unit) =
          fun (x2244 : 'tags this) ->
            fun (x2245 : [ `L_s55_long  | `L_s88_short ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2244)
                "compactDisplay"
                (match x2245 with
                 | `L_s55_long -> Ojs.string_to_js "long"
                 | `L_s88_short -> Ojs.string_to_js "short")
        let (get_notation :
          'tags this ->
            [ `L_s27_compact  | `L_s34_engineering  | `L_s84_scientific 
            | `L_s89_standard ])
          =
          fun (x2247 : 'tags this) ->
            let x2249 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2247) "notation" in
            match Ojs.string_of_js x2249 with
            | "compact" -> `L_s27_compact
            | "engineering" -> `L_s34_engineering
            | "scientific" -> `L_s84_scientific
            | "standard" -> `L_s89_standard
            | _ -> assert false
        let (set_notation :
          'tags this ->
            [ `L_s27_compact  | `L_s34_engineering  | `L_s84_scientific 
            | `L_s89_standard ] -> unit)
          =
          fun (x2250 : 'tags this) ->
            fun
              (x2251 :
                [ `L_s27_compact  | `L_s34_engineering  | `L_s84_scientific 
                | `L_s89_standard ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2250) "notation"
                (match x2251 with
                 | `L_s27_compact -> Ojs.string_to_js "compact"
                 | `L_s34_engineering -> Ojs.string_to_js "engineering"
                 | `L_s84_scientific -> Ojs.string_to_js "scientific"
                 | `L_s89_standard -> Ojs.string_to_js "standard")
        let (get_signDisplay :
          'tags this -> [ `L_s21_always  | `L_s22_auto  | `L_s68_never ]) =
          fun (x2253 : 'tags this) ->
            let x2255 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2253) "signDisplay" in
            match Ojs.string_of_js x2255 with
            | "always" -> `L_s21_always
            | "auto" -> `L_s22_auto
            | "never" -> `L_s68_never
            | _ -> assert false
        let (set_signDisplay :
          'tags this ->
            [ `L_s21_always  | `L_s22_auto  | `L_s68_never ] -> unit)
          =
          fun (x2256 : 'tags this) ->
            fun (x2257 : [ `L_s21_always  | `L_s22_auto  | `L_s68_never ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2256) "signDisplay"
                (match x2257 with
                 | `L_s21_always -> Ojs.string_to_js "always"
                 | `L_s22_auto -> Ojs.string_to_js "auto"
                 | `L_s68_never -> Ojs.string_to_js "never")
        let (get_unit : 'tags this -> string) =
          fun (x2259 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2259) "unit")
        let (set_unit : 'tags this -> string -> unit) =
          fun (x2261 : 'tags this) ->
            fun (x2262 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2261) "unit"
                (Ojs.string_to_js x2262)
        let (get_unitDisplay :
          'tags this -> [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ]) =
          fun (x2264 : 'tags this) ->
            let x2266 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2264) "unitDisplay" in
            match Ojs.string_of_js x2266 with
            | "long" -> `L_s55_long
            | "narrow" -> `L_s67_narrow
            | "short" -> `L_s88_short
            | _ -> assert false
        let (set_unitDisplay :
          'tags this ->
            [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] -> unit)
          =
          fun (x2267 : 'tags this) ->
            fun (x2268 : [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2267) "unitDisplay"
                (match x2268 with
                 | `L_s55_long -> Ojs.string_to_js "long"
                 | `L_s67_narrow -> Ojs.string_to_js "narrow"
                 | `L_s88_short -> Ojs.string_to_js "short")
        let (get_locale : 'tags this -> string) =
          fun (x2270 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2270) "locale")
        let (set_locale : 'tags this -> string -> unit) =
          fun (x2272 : 'tags this) ->
            fun (x2273 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2272) "locale"
                (Ojs.string_to_js x2273)
        let (get_numberingSystem : 'tags this -> string) =
          fun (x2275 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2275)
                 "numberingSystem")
        let (set_numberingSystem : 'tags this -> string -> unit) =
          fun (x2277 : 'tags this) ->
            fun (x2278 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2277)
                "numberingSystem" (Ojs.string_to_js x2278)
        let (get_style : 'tags this -> string) =
          fun (x2280 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2280) "style")
        let (set_style : 'tags this -> string -> unit) =
          fun (x2282 : 'tags this) ->
            fun (x2283 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2282) "style"
                (Ojs.string_to_js x2283)
        let (get_currency : 'tags this -> string) =
          fun (x2285 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2285) "currency")
        let (set_currency : 'tags this -> string -> unit) =
          fun (x2287 : 'tags this) ->
            fun (x2288 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2287) "currency"
                (Ojs.string_to_js x2288)
        let (get_currencyDisplay : 'tags this -> string) =
          fun (x2290 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2290)
                 "currencyDisplay")
        let (set_currencyDisplay : 'tags this -> string -> unit) =
          fun (x2292 : 'tags this) ->
            fun (x2293 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2292)
                "currencyDisplay" (Ojs.string_to_js x2293)
        let (get_minimumIntegerDigits : 'tags this -> float) =
          fun (x2295 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2295)
                 "minimumIntegerDigits")
        let (set_minimumIntegerDigits : 'tags this -> float -> unit) =
          fun (x2297 : 'tags this) ->
            fun (x2298 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2297)
                "minimumIntegerDigits" (Ojs.float_to_js x2298)
        let (get_minimumFractionDigits : 'tags this -> float) =
          fun (x2300 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2300)
                 "minimumFractionDigits")
        let (set_minimumFractionDigits : 'tags this -> float -> unit) =
          fun (x2302 : 'tags this) ->
            fun (x2303 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2302)
                "minimumFractionDigits" (Ojs.float_to_js x2303)
        let (get_maximumFractionDigits : 'tags this -> float) =
          fun (x2305 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2305)
                 "maximumFractionDigits")
        let (set_maximumFractionDigits : 'tags this -> float -> unit) =
          fun (x2307 : 'tags this) ->
            fun (x2308 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2307)
                "maximumFractionDigits" (Ojs.float_to_js x2308)
        let (get_minimumSignificantDigits : 'tags this -> float) =
          fun (x2310 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2310)
                 "minimumSignificantDigits")
        let (set_minimumSignificantDigits : 'tags this -> float -> unit) =
          fun (x2312 : 'tags this) ->
            fun (x2313 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2312)
                "minimumSignificantDigits" (Ojs.float_to_js x2313)
        let (get_maximumSignificantDigits : 'tags this -> float) =
          fun (x2315 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2315)
                 "maximumSignificantDigits")
        let (set_maximumSignificantDigits : 'tags this -> float -> unit) =
          fun (x2317 : 'tags this) ->
            fun (x2318 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2317)
                "maximumSignificantDigits" (Ojs.float_to_js x2318)
        let (get_useGrouping : 'tags this -> bool) =
          fun (x2320 : 'tags this) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2320) "useGrouping")
        let (set_useGrouping : 'tags this -> bool -> unit) =
          fun (x2322 : 'tags this) ->
            fun (x2323 : bool) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2322) "useGrouping"
                (Ojs.bool_to_js x2323)
        let (create :
          compactDisplay:[ `L_s55_long  | `L_s88_short ] ->
            notation:[ `L_s27_compact  | `L_s34_engineering 
                     | `L_s84_scientific  | `L_s89_standard ]
              ->
              signDisplay:[ `L_s21_always  | `L_s22_auto  | `L_s68_never ] ->
                unit:string ->
                  unitDisplay:[ `L_s55_long  | `L_s67_narrow 
                              | `L_s88_short ]
                    ->
                    locale:string ->
                      numberingSystem:string ->
                        style:string ->
                          currency:string ->
                            currencyDisplay:string ->
                              minimumIntegerDigits:float ->
                                minimumFractionDigits:float ->
                                  maximumFractionDigits:float ->
                                    minimumSignificantDigits:float ->
                                      maximumSignificantDigits:float ->
                                        useGrouping:bool -> unit -> t)
          =
          fun ~compactDisplay:(x2325 : [ `L_s55_long  | `L_s88_short ]) ->
            fun
              ~notation:(x2326 :
                          [ `L_s27_compact  | `L_s34_engineering 
                          | `L_s84_scientific  | `L_s89_standard ])
              ->
              fun
                ~signDisplay:(x2327 :
                               [ `L_s21_always  | `L_s22_auto 
                               | `L_s68_never ])
                ->
                fun ~unit:(x2328 : string) ->
                  fun
                    ~unitDisplay:(x2329 :
                                   [ `L_s55_long  | `L_s67_narrow 
                                   | `L_s88_short ])
                    ->
                    fun ~locale:(x2330 : string) ->
                      fun ~numberingSystem:(x2331 : string) ->
                        fun ~style:(x2332 : string) ->
                          fun ~currency:(x2333 : string) ->
                            fun ~currencyDisplay:(x2334 : string) ->
                              fun ~minimumIntegerDigits:(x2335 : float) ->
                                fun ~minimumFractionDigits:(x2336 : float) ->
                                  fun ~maximumFractionDigits:(x2337 : float)
                                    ->
                                    fun
                                      ~minimumSignificantDigits:(x2338 :
                                                                  float)
                                      ->
                                      fun
                                        ~maximumSignificantDigits:(x2339 :
                                                                    float)
                                        ->
                                        fun ~useGrouping:(x2340 : bool) ->
                                          fun () ->
                                            let x2341 = Ojs.empty_obj () in
                                            Ojs.set_prop_ascii x2341
                                              "compactDisplay"
                                              (match x2325 with
                                               | `L_s55_long ->
                                                   Ojs.string_to_js "long"
                                               | `L_s88_short ->
                                                   Ojs.string_to_js "short");
                                            Ojs.set_prop_ascii x2341
                                              "notation"
                                              (match x2326 with
                                               | `L_s27_compact ->
                                                   Ojs.string_to_js "compact"
                                               | `L_s34_engineering ->
                                                   Ojs.string_to_js
                                                     "engineering"
                                               | `L_s84_scientific ->
                                                   Ojs.string_to_js
                                                     "scientific"
                                               | `L_s89_standard ->
                                                   Ojs.string_to_js
                                                     "standard");
                                            Ojs.set_prop_ascii x2341
                                              "signDisplay"
                                              (match x2327 with
                                               | `L_s21_always ->
                                                   Ojs.string_to_js "always"
                                               | `L_s22_auto ->
                                                   Ojs.string_to_js "auto"
                                               | `L_s68_never ->
                                                   Ojs.string_to_js "never");
                                            Ojs.set_prop_ascii x2341 "unit"
                                              (Ojs.string_to_js x2328);
                                            Ojs.set_prop_ascii x2341
                                              "unitDisplay"
                                              (match x2329 with
                                               | `L_s55_long ->
                                                   Ojs.string_to_js "long"
                                               | `L_s67_narrow ->
                                                   Ojs.string_to_js "narrow"
                                               | `L_s88_short ->
                                                   Ojs.string_to_js "short");
                                            Ojs.set_prop_ascii x2341 "locale"
                                              (Ojs.string_to_js x2330);
                                            Ojs.set_prop_ascii x2341
                                              "numberingSystem"
                                              (Ojs.string_to_js x2331);
                                            Ojs.set_prop_ascii x2341 "style"
                                              (Ojs.string_to_js x2332);
                                            Ojs.set_prop_ascii x2341
                                              "currency"
                                              (Ojs.string_to_js x2333);
                                            Ojs.set_prop_ascii x2341
                                              "currencyDisplay"
                                              (Ojs.string_to_js x2334);
                                            Ojs.set_prop_ascii x2341
                                              "minimumIntegerDigits"
                                              (Ojs.float_to_js x2335);
                                            Ojs.set_prop_ascii x2341
                                              "minimumFractionDigits"
                                              (Ojs.float_to_js x2336);
                                            Ojs.set_prop_ascii x2341
                                              "maximumFractionDigits"
                                              (Ojs.float_to_js x2337);
                                            Ojs.set_prop_ascii x2341
                                              "minimumSignificantDigits"
                                              (Ojs.float_to_js x2338);
                                            Ojs.set_prop_ascii x2341
                                              "maximumSignificantDigits"
                                              (Ojs.float_to_js x2339);
                                            Ojs.set_prop_ascii x2341
                                              "useGrouping"
                                              (Ojs.bool_to_js x2340);
                                            t_of_js x2341
        let cast_from = Obj.magic
      end
    module ES2020NumberFormatPartType =
      struct
        type t =
          [ `L_s27_compact  | `L_s36_exponentInteger 
          | `L_s37_exponentMinusSign  | `L_s38_exponentSeparator 
          | `L_s95_unit  | `L_s96_unknown ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2343 : Ojs.t) ->
            let x2344 = x2343 in
            match Ojs.string_of_js x2344 with
            | "compact" -> `L_s27_compact
            | "exponentInteger" -> `L_s36_exponentInteger
            | "exponentMinusSign" -> `L_s37_exponentMinusSign
            | "exponentSeparator" -> `L_s38_exponentSeparator
            | "unit" -> `L_s95_unit
            | "unknown" -> `L_s96_unknown
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x2342 :
              [ `L_s27_compact  | `L_s36_exponentInteger 
              | `L_s37_exponentMinusSign  | `L_s38_exponentSeparator 
              | `L_s95_unit  | `L_s96_unknown ])
            ->
            match x2342 with
            | `L_s27_compact -> Ojs.string_to_js "compact"
            | `L_s36_exponentInteger -> Ojs.string_to_js "exponentInteger"
            | `L_s37_exponentMinusSign ->
                Ojs.string_to_js "exponentMinusSign"
            | `L_s38_exponentSeparator ->
                Ojs.string_to_js "exponentSeparator"
            | `L_s95_unit -> Ojs.string_to_js "unit"
            | `L_s96_unknown -> Ojs.string_to_js "unknown"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2346 : Ojs.t) -> t_of_js x2346
        and t_0_to_js : t_0 -> Ojs.t = fun (x2345 : t) -> t_to_js x2345
      end
    module ES2018NumberFormatPartType =
      struct
        type t =
          [ `L_s26_code  | `L_s28_currency  | `L_s32_decimal 
          | `L_s41_fraction  | `L_s44_group  | `L_s51_infinity 
          | `L_s52_integer  | `L_s54_literal  | `L_s60_minusSign 
          | `L_s65_name  | `L_s66_nan  | `L_s77_percent 
          | `L_s78_percentSign  | `L_s79_plusSign  | `L_s91_symbol ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2348 : Ojs.t) ->
            let x2349 = x2348 in
            match Ojs.string_of_js x2349 with
            | "code" -> `L_s26_code
            | "currency" -> `L_s28_currency
            | "decimal" -> `L_s32_decimal
            | "fraction" -> `L_s41_fraction
            | "group" -> `L_s44_group
            | "infinity" -> `L_s51_infinity
            | "integer" -> `L_s52_integer
            | "literal" -> `L_s54_literal
            | "minusSign" -> `L_s60_minusSign
            | "name" -> `L_s65_name
            | "nan" -> `L_s66_nan
            | "percent" -> `L_s77_percent
            | "percentSign" -> `L_s78_percentSign
            | "plusSign" -> `L_s79_plusSign
            | "symbol" -> `L_s91_symbol
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x2347 :
              [ `L_s26_code  | `L_s28_currency  | `L_s32_decimal 
              | `L_s41_fraction  | `L_s44_group  | `L_s51_infinity 
              | `L_s52_integer  | `L_s54_literal  | `L_s60_minusSign 
              | `L_s65_name  | `L_s66_nan  | `L_s77_percent 
              | `L_s78_percentSign  | `L_s79_plusSign  | `L_s91_symbol ])
            ->
            match x2347 with
            | `L_s26_code -> Ojs.string_to_js "code"
            | `L_s28_currency -> Ojs.string_to_js "currency"
            | `L_s32_decimal -> Ojs.string_to_js "decimal"
            | `L_s41_fraction -> Ojs.string_to_js "fraction"
            | `L_s44_group -> Ojs.string_to_js "group"
            | `L_s51_infinity -> Ojs.string_to_js "infinity"
            | `L_s52_integer -> Ojs.string_to_js "integer"
            | `L_s54_literal -> Ojs.string_to_js "literal"
            | `L_s60_minusSign -> Ojs.string_to_js "minusSign"
            | `L_s65_name -> Ojs.string_to_js "name"
            | `L_s66_nan -> Ojs.string_to_js "nan"
            | `L_s77_percent -> Ojs.string_to_js "percent"
            | `L_s78_percentSign -> Ojs.string_to_js "percentSign"
            | `L_s79_plusSign -> Ojs.string_to_js "plusSign"
            | `L_s91_symbol -> Ojs.string_to_js "symbol"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2351 : Ojs.t) -> t_of_js x2351
        and t_0_to_js : t_0 -> Ojs.t = fun (x2350 : t) -> t_to_js x2350
      end
    module NumberFormatPartTypes =
      struct
        type t =
          [ `L_s26_code  | `L_s27_compact  | `L_s28_currency 
          | `L_s32_decimal  | `L_s36_exponentInteger 
          | `L_s37_exponentMinusSign  | `L_s38_exponentSeparator 
          | `L_s41_fraction  | `L_s44_group  | `L_s51_infinity 
          | `L_s52_integer  | `L_s54_literal  | `L_s60_minusSign 
          | `L_s65_name  | `L_s66_nan  | `L_s77_percent 
          | `L_s78_percentSign  | `L_s79_plusSign  | `L_s91_symbol 
          | `L_s95_unit  | `L_s96_unknown ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2353 : Ojs.t) ->
            let x2354 = x2353 in
            match Ojs.string_of_js x2354 with
            | "code" -> `L_s26_code
            | "compact" -> `L_s27_compact
            | "currency" -> `L_s28_currency
            | "decimal" -> `L_s32_decimal
            | "exponentInteger" -> `L_s36_exponentInteger
            | "exponentMinusSign" -> `L_s37_exponentMinusSign
            | "exponentSeparator" -> `L_s38_exponentSeparator
            | "fraction" -> `L_s41_fraction
            | "group" -> `L_s44_group
            | "infinity" -> `L_s51_infinity
            | "integer" -> `L_s52_integer
            | "literal" -> `L_s54_literal
            | "minusSign" -> `L_s60_minusSign
            | "name" -> `L_s65_name
            | "nan" -> `L_s66_nan
            | "percent" -> `L_s77_percent
            | "percentSign" -> `L_s78_percentSign
            | "plusSign" -> `L_s79_plusSign
            | "symbol" -> `L_s91_symbol
            | "unit" -> `L_s95_unit
            | "unknown" -> `L_s96_unknown
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x2352 :
              [ `L_s26_code  | `L_s27_compact  | `L_s28_currency 
              | `L_s32_decimal  | `L_s36_exponentInteger 
              | `L_s37_exponentMinusSign  | `L_s38_exponentSeparator 
              | `L_s41_fraction  | `L_s44_group  | `L_s51_infinity 
              | `L_s52_integer  | `L_s54_literal  | `L_s60_minusSign 
              | `L_s65_name  | `L_s66_nan  | `L_s77_percent 
              | `L_s78_percentSign  | `L_s79_plusSign  | `L_s91_symbol 
              | `L_s95_unit  | `L_s96_unknown ])
            ->
            match x2352 with
            | `L_s26_code -> Ojs.string_to_js "code"
            | `L_s27_compact -> Ojs.string_to_js "compact"
            | `L_s28_currency -> Ojs.string_to_js "currency"
            | `L_s32_decimal -> Ojs.string_to_js "decimal"
            | `L_s36_exponentInteger -> Ojs.string_to_js "exponentInteger"
            | `L_s37_exponentMinusSign ->
                Ojs.string_to_js "exponentMinusSign"
            | `L_s38_exponentSeparator ->
                Ojs.string_to_js "exponentSeparator"
            | `L_s41_fraction -> Ojs.string_to_js "fraction"
            | `L_s44_group -> Ojs.string_to_js "group"
            | `L_s51_infinity -> Ojs.string_to_js "infinity"
            | `L_s52_integer -> Ojs.string_to_js "integer"
            | `L_s54_literal -> Ojs.string_to_js "literal"
            | `L_s60_minusSign -> Ojs.string_to_js "minusSign"
            | `L_s65_name -> Ojs.string_to_js "name"
            | `L_s66_nan -> Ojs.string_to_js "nan"
            | `L_s77_percent -> Ojs.string_to_js "percent"
            | `L_s78_percentSign -> Ojs.string_to_js "percentSign"
            | `L_s79_plusSign -> Ojs.string_to_js "plusSign"
            | `L_s91_symbol -> Ojs.string_to_js "symbol"
            | `L_s95_unit -> Ojs.string_to_js "unit"
            | `L_s96_unknown -> Ojs.string_to_js "unknown"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2356 : Ojs.t) -> t_of_js x2356
        and t_0_to_js : t_0 -> Ojs.t = fun (x2355 : t) -> t_to_js x2355
      end
    module NumberFormatPart =
      struct
        type t = [ `Intl_NumberFormatPart ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2358 : Ojs.t) -> t_of_js x2358
        and t_0_to_js : t_0 -> Ojs.t = fun (x2357 : t) -> t_to_js x2357
        type tags = [ `Intl_NumberFormatPart ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_NumberFormatPart ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2361 : Ojs.t) -> intf_of_js __tags_of_js x2361
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2359 : __tags intf) -> intf_to_js __tags_to_js x2359
        let (get_type : 'tags this -> NumberFormatPartTypes.t) =
          fun (x2363 : 'tags this) ->
            NumberFormatPartTypes.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2363) "type")
        let (set_type : 'tags this -> NumberFormatPartTypes.t -> unit) =
          fun (x2365 : 'tags this) ->
            fun (x2366 : NumberFormatPartTypes.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2365) "type"
                (NumberFormatPartTypes.t_to_js x2366)
        let (get_value : 'tags this -> string) =
          fun (x2368 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2368) "value")
        let (set_value : 'tags this -> string -> unit) =
          fun (x2370 : 'tags this) ->
            fun (x2371 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2370) "value"
                (Ojs.string_to_js x2371)
        let (create :
          type_:NumberFormatPartTypes.t -> value:string -> unit -> t) =
          fun ~type_:(x2373 : NumberFormatPartTypes.t) ->
            fun ~value:(x2374 : string) ->
              fun () ->
                let x2375 = Ojs.empty_obj () in
                Ojs.set_prop_ascii x2375 "type"
                  (NumberFormatPartTypes.t_to_js x2373);
                Ojs.set_prop_ascii x2375 "value" (Ojs.string_to_js x2374);
                t_of_js x2375
        let cast_from = Obj.magic
      end
    module NumberFormatOptions =
      struct
        type t = [ `Intl_NumberFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2377 : Ojs.t) -> t_of_js x2377
        and t_0_to_js : t_0 -> Ojs.t = fun (x2376 : t) -> t_to_js x2376
        type tags = [ `Intl_NumberFormatOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_NumberFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2380 : Ojs.t) -> intf_of_js __tags_of_js x2380
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2378 : __tags intf) -> intf_to_js __tags_to_js x2378
        let (get_compactDisplay :
          'tags this -> [ `L_s55_long  | `L_s88_short ] or_undefined) =
          fun (x2382 : 'tags this) ->
            or_undefined_of_js
              (fun (x2384 : Ojs.t) ->
                 let x2385 = x2384 in
                 match Ojs.string_of_js x2385 with
                 | "long" -> `L_s55_long
                 | "short" -> `L_s88_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2382)
                 "compactDisplay")
        let (set_compactDisplay :
          'tags this -> [ `L_s55_long  | `L_s88_short ] or_undefined -> unit)
          =
          fun (x2386 : 'tags this) ->
            fun (x2387 : [ `L_s55_long  | `L_s88_short ] or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2386)
                "compactDisplay"
                (or_undefined_to_js
                   (fun (x2388 : [ `L_s55_long  | `L_s88_short ]) ->
                      match x2388 with
                      | `L_s55_long -> Ojs.string_to_js "long"
                      | `L_s88_short -> Ojs.string_to_js "short") x2387)
        let (get_notation :
          'tags this ->
            [ `L_s27_compact  | `L_s34_engineering  | `L_s84_scientific 
            | `L_s89_standard ] or_undefined)
          =
          fun (x2390 : 'tags this) ->
            or_undefined_of_js
              (fun (x2392 : Ojs.t) ->
                 let x2393 = x2392 in
                 match Ojs.string_of_js x2393 with
                 | "compact" -> `L_s27_compact
                 | "engineering" -> `L_s34_engineering
                 | "scientific" -> `L_s84_scientific
                 | "standard" -> `L_s89_standard
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2390) "notation")
        let (set_notation :
          'tags this ->
            [ `L_s27_compact  | `L_s34_engineering  | `L_s84_scientific 
            | `L_s89_standard ] or_undefined -> unit)
          =
          fun (x2394 : 'tags this) ->
            fun
              (x2395 :
                [ `L_s27_compact  | `L_s34_engineering  | `L_s84_scientific 
                | `L_s89_standard ] or_undefined)
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2394) "notation"
                (or_undefined_to_js
                   (fun
                      (x2396 :
                        [ `L_s27_compact  | `L_s34_engineering 
                        | `L_s84_scientific  | `L_s89_standard ])
                      ->
                      match x2396 with
                      | `L_s27_compact -> Ojs.string_to_js "compact"
                      | `L_s34_engineering -> Ojs.string_to_js "engineering"
                      | `L_s84_scientific -> Ojs.string_to_js "scientific"
                      | `L_s89_standard -> Ojs.string_to_js "standard") x2395)
        let (get_signDisplay :
          'tags this ->
            [ `L_s21_always  | `L_s22_auto  | `L_s68_never ] or_undefined)
          =
          fun (x2398 : 'tags this) ->
            or_undefined_of_js
              (fun (x2400 : Ojs.t) ->
                 let x2401 = x2400 in
                 match Ojs.string_of_js x2401 with
                 | "always" -> `L_s21_always
                 | "auto" -> `L_s22_auto
                 | "never" -> `L_s68_never
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2398) "signDisplay")
        let (set_signDisplay :
          'tags this ->
            [ `L_s21_always  | `L_s22_auto  | `L_s68_never ] or_undefined ->
              unit)
          =
          fun (x2402 : 'tags this) ->
            fun
              (x2403 :
                [ `L_s21_always  | `L_s22_auto  | `L_s68_never ] or_undefined)
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2402) "signDisplay"
                (or_undefined_to_js
                   (fun
                      (x2404 :
                        [ `L_s21_always  | `L_s22_auto  | `L_s68_never ])
                      ->
                      match x2404 with
                      | `L_s21_always -> Ojs.string_to_js "always"
                      | `L_s22_auto -> Ojs.string_to_js "auto"
                      | `L_s68_never -> Ojs.string_to_js "never") x2403)
        let (get_unit : 'tags this -> string or_undefined) =
          fun (x2406 : 'tags this) ->
            or_undefined_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2406) "unit")
        let (set_unit : 'tags this -> string or_undefined -> unit) =
          fun (x2409 : 'tags this) ->
            fun (x2410 : string or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2409) "unit"
                (or_undefined_to_js Ojs.string_to_js x2410)
        let (get_unitDisplay :
          'tags this ->
            [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined)
          =
          fun (x2413 : 'tags this) ->
            or_undefined_of_js
              (fun (x2415 : Ojs.t) ->
                 let x2416 = x2415 in
                 match Ojs.string_of_js x2416 with
                 | "long" -> `L_s55_long
                 | "narrow" -> `L_s67_narrow
                 | "short" -> `L_s88_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2413) "unitDisplay")
        let (set_unitDisplay :
          'tags this ->
            [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined ->
              unit)
          =
          fun (x2417 : 'tags this) ->
            fun
              (x2418 :
                [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined)
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2417) "unitDisplay"
                (or_undefined_to_js
                   (fun
                      (x2419 :
                        [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ])
                      ->
                      match x2419 with
                      | `L_s55_long -> Ojs.string_to_js "long"
                      | `L_s67_narrow -> Ojs.string_to_js "narrow"
                      | `L_s88_short -> Ojs.string_to_js "short") x2418)
        let (get_localeMatcher : 'tags this -> string or_undefined) =
          fun (x2421 : 'tags this) ->
            or_undefined_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2421)
                 "localeMatcher")
        let (set_localeMatcher : 'tags this -> string or_undefined -> unit) =
          fun (x2424 : 'tags this) ->
            fun (x2425 : string or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2424) "localeMatcher"
                (or_undefined_to_js Ojs.string_to_js x2425)
        let (get_style : 'tags this -> string or_undefined) =
          fun (x2428 : 'tags this) ->
            or_undefined_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2428) "style")
        let (set_style : 'tags this -> string or_undefined -> unit) =
          fun (x2431 : 'tags this) ->
            fun (x2432 : string or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2431) "style"
                (or_undefined_to_js Ojs.string_to_js x2432)
        let (get_currency : 'tags this -> string or_undefined) =
          fun (x2435 : 'tags this) ->
            or_undefined_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2435) "currency")
        let (set_currency : 'tags this -> string or_undefined -> unit) =
          fun (x2438 : 'tags this) ->
            fun (x2439 : string or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2438) "currency"
                (or_undefined_to_js Ojs.string_to_js x2439)
        let (get_currencyDisplay : 'tags this -> string or_undefined) =
          fun (x2442 : 'tags this) ->
            or_undefined_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2442)
                 "currencyDisplay")
        let (set_currencyDisplay : 'tags this -> string or_undefined -> unit)
          =
          fun (x2445 : 'tags this) ->
            fun (x2446 : string or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2445)
                "currencyDisplay" (or_undefined_to_js Ojs.string_to_js x2446)
        let (get_currencySign : 'tags this -> string or_undefined) =
          fun (x2449 : 'tags this) ->
            or_undefined_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2449) "currencySign")
        let (set_currencySign : 'tags this -> string or_undefined -> unit) =
          fun (x2452 : 'tags this) ->
            fun (x2453 : string or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2452) "currencySign"
                (or_undefined_to_js Ojs.string_to_js x2453)
        let (get_useGrouping : 'tags this -> bool or_undefined) =
          fun (x2456 : 'tags this) ->
            or_undefined_of_js Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2456) "useGrouping")
        let (set_useGrouping : 'tags this -> bool or_undefined -> unit) =
          fun (x2459 : 'tags this) ->
            fun (x2460 : bool or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2459) "useGrouping"
                (or_undefined_to_js Ojs.bool_to_js x2460)
        let (get_minimumIntegerDigits : 'tags this -> float or_undefined) =
          fun (x2463 : 'tags this) ->
            or_undefined_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2463)
                 "minimumIntegerDigits")
        let (set_minimumIntegerDigits :
          'tags this -> float or_undefined -> unit) =
          fun (x2466 : 'tags this) ->
            fun (x2467 : float or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2466)
                "minimumIntegerDigits"
                (or_undefined_to_js Ojs.float_to_js x2467)
        let (get_minimumFractionDigits : 'tags this -> float or_undefined) =
          fun (x2470 : 'tags this) ->
            or_undefined_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2470)
                 "minimumFractionDigits")
        let (set_minimumFractionDigits :
          'tags this -> float or_undefined -> unit) =
          fun (x2473 : 'tags this) ->
            fun (x2474 : float or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2473)
                "minimumFractionDigits"
                (or_undefined_to_js Ojs.float_to_js x2474)
        let (get_maximumFractionDigits : 'tags this -> float or_undefined) =
          fun (x2477 : 'tags this) ->
            or_undefined_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2477)
                 "maximumFractionDigits")
        let (set_maximumFractionDigits :
          'tags this -> float or_undefined -> unit) =
          fun (x2480 : 'tags this) ->
            fun (x2481 : float or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2480)
                "maximumFractionDigits"
                (or_undefined_to_js Ojs.float_to_js x2481)
        let (get_minimumSignificantDigits : 'tags this -> float or_undefined)
          =
          fun (x2484 : 'tags this) ->
            or_undefined_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2484)
                 "minimumSignificantDigits")
        let (set_minimumSignificantDigits :
          'tags this -> float or_undefined -> unit) =
          fun (x2487 : 'tags this) ->
            fun (x2488 : float or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2487)
                "minimumSignificantDigits"
                (or_undefined_to_js Ojs.float_to_js x2488)
        let (get_maximumSignificantDigits : 'tags this -> float or_undefined)
          =
          fun (x2491 : 'tags this) ->
            or_undefined_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2491)
                 "maximumSignificantDigits")
        let (set_maximumSignificantDigits :
          'tags this -> float or_undefined -> unit) =
          fun (x2494 : 'tags this) ->
            fun (x2495 : float or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2494)
                "maximumSignificantDigits"
                (or_undefined_to_js Ojs.float_to_js x2495)
        let (create :
          ?compactDisplay:[ `L_s55_long  | `L_s88_short ] ->
            ?notation:[ `L_s27_compact  | `L_s34_engineering 
                      | `L_s84_scientific  | `L_s89_standard ]
              ->
              ?signDisplay:[ `L_s21_always  | `L_s22_auto  | `L_s68_never ]
                ->
                ?unit:string ->
                  ?unitDisplay:[ `L_s55_long  | `L_s67_narrow 
                               | `L_s88_short ]
                    ->
                    ?localeMatcher:string ->
                      ?style:string ->
                        ?currency:string ->
                          ?currencyDisplay:string ->
                            ?currencySign:string ->
                              ?useGrouping:bool ->
                                ?minimumIntegerDigits:float ->
                                  ?minimumFractionDigits:float ->
                                    ?maximumFractionDigits:float ->
                                      ?minimumSignificantDigits:float ->
                                        ?maximumSignificantDigits:float ->
                                          unit -> t)
          =
          fun
            ?compactDisplay:(x2498 : [ `L_s55_long  | `L_s88_short ] option)
            ->
            fun
              ?notation:(x2499 :
                          [ `L_s27_compact  | `L_s34_engineering 
                          | `L_s84_scientific  | `L_s89_standard ] option)
              ->
              fun
                ?signDisplay:(x2500 :
                               [ `L_s21_always  | `L_s22_auto 
                               | `L_s68_never ] option)
                ->
                fun ?unit:(x2501 : string option) ->
                  fun
                    ?unitDisplay:(x2502 :
                                   [ `L_s55_long  | `L_s67_narrow 
                                   | `L_s88_short ] option)
                    ->
                    fun ?localeMatcher:(x2503 : string option) ->
                      fun ?style:(x2504 : string option) ->
                        fun ?currency:(x2505 : string option) ->
                          fun ?currencyDisplay:(x2506 : string option) ->
                            fun ?currencySign:(x2507 : string option) ->
                              fun ?useGrouping:(x2508 : bool option) ->
                                fun
                                  ?minimumIntegerDigits:(x2509 :
                                                          float option)
                                  ->
                                  fun
                                    ?minimumFractionDigits:(x2510 :
                                                             float option)
                                    ->
                                    fun
                                      ?maximumFractionDigits:(x2511 :
                                                               float option)
                                      ->
                                      fun
                                        ?minimumSignificantDigits:(x2512 :
                                                                    float
                                                                    option)
                                        ->
                                        fun
                                          ?maximumSignificantDigits:(x2513 :
                                                                    float
                                                                    option)
                                          ->
                                          fun () ->
                                            let x2514 = Ojs.empty_obj () in
                                            (match x2498 with
                                             | Some x2530 ->
                                                 Ojs.set_prop_ascii x2514
                                                   "compactDisplay"
                                                   (match x2530 with
                                                    | `L_s55_long ->
                                                        Ojs.string_to_js
                                                          "long"
                                                    | `L_s88_short ->
                                                        Ojs.string_to_js
                                                          "short")
                                             | None -> ());
                                            (match x2499 with
                                             | Some x2529 ->
                                                 Ojs.set_prop_ascii x2514
                                                   "notation"
                                                   (match x2529 with
                                                    | `L_s27_compact ->
                                                        Ojs.string_to_js
                                                          "compact"
                                                    | `L_s34_engineering ->
                                                        Ojs.string_to_js
                                                          "engineering"
                                                    | `L_s84_scientific ->
                                                        Ojs.string_to_js
                                                          "scientific"
                                                    | `L_s89_standard ->
                                                        Ojs.string_to_js
                                                          "standard")
                                             | None -> ());
                                            (match x2500 with
                                             | Some x2528 ->
                                                 Ojs.set_prop_ascii x2514
                                                   "signDisplay"
                                                   (match x2528 with
                                                    | `L_s21_always ->
                                                        Ojs.string_to_js
                                                          "always"
                                                    | `L_s22_auto ->
                                                        Ojs.string_to_js
                                                          "auto"
                                                    | `L_s68_never ->
                                                        Ojs.string_to_js
                                                          "never")
                                             | None -> ());
                                            (match x2501 with
                                             | Some x2527 ->
                                                 Ojs.set_prop_ascii x2514
                                                   "unit"
                                                   (Ojs.string_to_js x2527)
                                             | None -> ());
                                            (match x2502 with
                                             | Some x2526 ->
                                                 Ojs.set_prop_ascii x2514
                                                   "unitDisplay"
                                                   (match x2526 with
                                                    | `L_s55_long ->
                                                        Ojs.string_to_js
                                                          "long"
                                                    | `L_s67_narrow ->
                                                        Ojs.string_to_js
                                                          "narrow"
                                                    | `L_s88_short ->
                                                        Ojs.string_to_js
                                                          "short")
                                             | None -> ());
                                            (match x2503 with
                                             | Some x2525 ->
                                                 Ojs.set_prop_ascii x2514
                                                   "localeMatcher"
                                                   (Ojs.string_to_js x2525)
                                             | None -> ());
                                            (match x2504 with
                                             | Some x2524 ->
                                                 Ojs.set_prop_ascii x2514
                                                   "style"
                                                   (Ojs.string_to_js x2524)
                                             | None -> ());
                                            (match x2505 with
                                             | Some x2523 ->
                                                 Ojs.set_prop_ascii x2514
                                                   "currency"
                                                   (Ojs.string_to_js x2523)
                                             | None -> ());
                                            (match x2506 with
                                             | Some x2522 ->
                                                 Ojs.set_prop_ascii x2514
                                                   "currencyDisplay"
                                                   (Ojs.string_to_js x2522)
                                             | None -> ());
                                            (match x2507 with
                                             | Some x2521 ->
                                                 Ojs.set_prop_ascii x2514
                                                   "currencySign"
                                                   (Ojs.string_to_js x2521)
                                             | None -> ());
                                            (match x2508 with
                                             | Some x2520 ->
                                                 Ojs.set_prop_ascii x2514
                                                   "useGrouping"
                                                   (Ojs.bool_to_js x2520)
                                             | None -> ());
                                            (match x2509 with
                                             | Some x2519 ->
                                                 Ojs.set_prop_ascii x2514
                                                   "minimumIntegerDigits"
                                                   (Ojs.float_to_js x2519)
                                             | None -> ());
                                            (match x2510 with
                                             | Some x2518 ->
                                                 Ojs.set_prop_ascii x2514
                                                   "minimumFractionDigits"
                                                   (Ojs.float_to_js x2518)
                                             | None -> ());
                                            (match x2511 with
                                             | Some x2517 ->
                                                 Ojs.set_prop_ascii x2514
                                                   "maximumFractionDigits"
                                                   (Ojs.float_to_js x2517)
                                             | None -> ());
                                            (match x2512 with
                                             | Some x2516 ->
                                                 Ojs.set_prop_ascii x2514
                                                   "minimumSignificantDigits"
                                                   (Ojs.float_to_js x2516)
                                             | None -> ());
                                            (match x2513 with
                                             | Some x2515 ->
                                                 Ojs.set_prop_ascii x2514
                                                   "maximumSignificantDigits"
                                                   (Ojs.float_to_js x2515)
                                             | None -> ());
                                            t_of_js x2514
        let cast_from = Obj.magic
      end
    module NumberFormat =
      struct
        type t = [ `Intl_NumberFormat ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2532 : Ojs.t) -> t_of_js x2532
        and t_0_to_js : t_0 -> Ojs.t = fun (x2531 : t) -> t_to_js x2531
        type tags = [ `Intl_NumberFormat ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_NumberFormat ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2535 : Ojs.t) -> intf_of_js __tags_of_js x2535
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2533 : __tags intf) -> intf_to_js __tags_to_js x2533
        let (formatRange :
          'tags this ->
            startDate:bigint or_number -> endDate:bigint or_number -> string)
          =
          fun (x2541 : 'tags this) ->
            fun ~startDate:(x2537 : bigint or_number) ->
              fun ~endDate:(x2539 : bigint or_number) ->
                Ojs.string_of_js
                  (Ojs.call (this_to_js Obj.magic x2541) "formatRange"
                     [|(or_number_to_js bigint_to_js x2537);(or_number_to_js
                                                               bigint_to_js
                                                               x2539)|])
        let (formatRangeToParts :
          'tags this ->
            startDate:bigint or_number ->
              endDate:bigint or_number -> NumberFormatPart.t list)
          =
          fun (x2547 : 'tags this) ->
            fun ~startDate:(x2543 : bigint or_number) ->
              fun ~endDate:(x2545 : bigint or_number) ->
                Ojs.list_of_js NumberFormatPart.t_of_js
                  (Ojs.call (this_to_js Obj.magic x2547) "formatRangeToParts"
                     [|(or_number_to_js bigint_to_js x2543);(or_number_to_js
                                                               bigint_to_js
                                                               x2545)|])
        let (format : 'tags this -> value:bigint or_number -> string) =
          fun (x2552 : 'tags this) ->
            fun ~value:(x2550 : bigint or_number) ->
              Ojs.string_of_js
                (Ojs.call (this_to_js Obj.magic x2552) "format"
                   [|(or_number_to_js bigint_to_js x2550)|])
        let (resolvedOptions : 'tags this -> ResolvedNumberFormatOptions.t) =
          fun (x2554 : 'tags this) ->
            ResolvedNumberFormatOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x2554) "resolvedOptions" [||])
        let (formatToParts :
          'tags this ->
            ?number:bigint or_number -> unit -> NumberFormatPart.t list)
          =
          fun (x2560 : 'tags this) ->
            fun ?number:(x2556 : bigint or_number option) ->
              fun () ->
                Ojs.list_of_js NumberFormatPart.t_of_js
                  (let x2562 = this_to_js Obj.magic x2560 in
                   Ojs.call (Ojs.get_prop_ascii x2562 "formatToParts")
                     "apply"
                     [|x2562;((let x2557 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x2556 with
                                | Some x2558 ->
                                    ignore
                                      (Ojs.call x2557 "push"
                                         [|(or_number_to_js bigint_to_js
                                              x2558)|])
                                | None -> ());
                               x2557))|])
        let (format' : 'tags this -> value:float -> string) =
          fun (x2565 : 'tags this) ->
            fun ~value:(x2564 : float) ->
              Ojs.string_of_js
                (Ojs.call (this_to_js Obj.magic x2565) "format"
                   [|(Ojs.float_to_js x2564)|])
        let (resolvedOptions' : 'tags this -> ResolvedNumberFormatOptions.t)
          =
          fun (x2567 : 'tags this) ->
            ResolvedNumberFormatOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x2567) "resolvedOptions" [||])
        let cast_from = Obj.magic
        let (create :
          ?locales:string list or_string ->
            ?options:NumberFormatOptions.t -> unit -> t)
          =
          fun ?locales:(x2569 : string list or_string option) ->
            fun ?options:(x2570 : NumberFormatOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "NumberFormat")
                     (let x2571 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x2569 with
                       | Some x2573 ->
                           ignore
                             (Ojs.call x2571 "push"
                                [|(or_string_to_js
                                     (fun (x2574 : string list) ->
                                        Ojs.list_to_js Ojs.string_to_js x2574)
                                     x2573)|])
                       | None -> ());
                      (match x2570 with
                       | Some x2572 ->
                           ignore
                             (Ojs.call x2571 "push"
                                [|(NumberFormatOptions.t_to_js x2572)|])
                       | None -> ());
                      x2571))
        let (invoke :
          ?locales:string list or_string ->
            ?options:NumberFormatOptions.t -> unit -> t)
          =
          fun ?locales:(x2576 : string list or_string option) ->
            fun ?options:(x2577 : NumberFormatOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "NumberFormat")
                     "apply"
                     [|Ojs.null;((let x2578 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  (match x2576 with
                                   | Some x2580 ->
                                       ignore
                                         (Ojs.call x2578 "push"
                                            [|(or_string_to_js
                                                 (fun (x2581 : string list)
                                                    ->
                                                    Ojs.list_to_js
                                                      Ojs.string_to_js x2581)
                                                 x2580)|])
                                   | None -> ());
                                  (match x2577 with
                                   | Some x2579 ->
                                       ignore
                                         (Ojs.call x2578 "push"
                                            [|(NumberFormatOptions.t_to_js
                                                 x2579)|])
                                   | None -> ());
                                  x2578))|])
        let (supportedLocalesOf :
          locales:string list or_string ->
            ?options:NumberFormatOptions.t -> unit -> string list)
          =
          fun ~locales:(x2583 : string list or_string) ->
            fun ?options:(x2584 : NumberFormatOptions.t option) ->
              fun () ->
                Ojs.list_of_js Ojs.string_of_js
                  (let x2589 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl") "NumberFormat" in
                   Ojs.call (Ojs.get_prop_ascii x2589 "supportedLocalesOf")
                     "apply"
                     [|x2589;((let x2585 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2585 "push"
                                    [|(or_string_to_js
                                         (fun (x2587 : string list) ->
                                            Ojs.list_to_js Ojs.string_to_js
                                              x2587) x2583)|]);
                               (match x2584 with
                                | Some x2586 ->
                                    ignore
                                      (Ojs.call x2585 "push"
                                         [|(NumberFormatOptions.t_to_js x2586)|])
                                | None -> ());
                               x2585))|])
      end
    module LocaleHourCycleKey =
      struct
        type t = [ `L_s45_h11  | `L_s46_h12  | `L_s47_h23  | `L_s48_h24 ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2592 : Ojs.t) ->
            let x2593 = x2592 in
            match Ojs.string_of_js x2593 with
            | "h11" -> `L_s45_h11
            | "h12" -> `L_s46_h12
            | "h23" -> `L_s47_h23
            | "h24" -> `L_s48_h24
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x2591 :
              [ `L_s45_h11  | `L_s46_h12  | `L_s47_h23  | `L_s48_h24 ])
            ->
            match x2591 with
            | `L_s45_h11 -> Ojs.string_to_js "h11"
            | `L_s46_h12 -> Ojs.string_to_js "h12"
            | `L_s47_h23 -> Ojs.string_to_js "h23"
            | `L_s48_h24 -> Ojs.string_to_js "h24"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2595 : Ojs.t) -> t_of_js x2595
        and t_0_to_js : t_0 -> Ojs.t = fun (x2594 : t) -> t_to_js x2594
      end
    module LocaleCollationCaseFirst =
      struct
        type t = [ `L_s39_false  | `L_s57_lower  | `L_s97_upper ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2597 : Ojs.t) ->
            let x2598 = x2597 in
            match Ojs.string_of_js x2598 with
            | "false" -> `L_s39_false
            | "lower" -> `L_s57_lower
            | "upper" -> `L_s97_upper
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x2596 : [ `L_s39_false  | `L_s57_lower  | `L_s97_upper ]) ->
            match x2596 with
            | `L_s39_false -> Ojs.string_to_js "false"
            | `L_s57_lower -> Ojs.string_to_js "lower"
            | `L_s97_upper -> Ojs.string_to_js "upper"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2600 : Ojs.t) -> t_of_js x2600
        and t_0_to_js : t_0 -> Ojs.t = fun (x2599 : t) -> t_to_js x2599
      end
    module LocaleOptions =
      struct
        type t = [ `Intl_LocaleOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2602 : Ojs.t) -> t_of_js x2602
        and t_0_to_js : t_0 -> Ojs.t = fun (x2601 : t) -> t_to_js x2601
        type tags = [ `Intl_LocaleOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_LocaleOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2605 : Ojs.t) -> intf_of_js __tags_of_js x2605
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2603 : __tags intf) -> intf_to_js __tags_to_js x2603
        let (get_baseName : 'tags this -> string) =
          fun (x2607 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2607) "baseName")
        let (set_baseName : 'tags this -> string -> unit) =
          fun (x2609 : 'tags this) ->
            fun (x2610 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2609) "baseName"
                (Ojs.string_to_js x2610)
        let (get_calendar : 'tags this -> string) =
          fun (x2612 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2612) "calendar")
        let (set_calendar : 'tags this -> string -> unit) =
          fun (x2614 : 'tags this) ->
            fun (x2615 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2614) "calendar"
                (Ojs.string_to_js x2615)
        let (get_caseFirst : 'tags this -> LocaleCollationCaseFirst.t) =
          fun (x2617 : 'tags this) ->
            LocaleCollationCaseFirst.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2617) "caseFirst")
        let (set_caseFirst :
          'tags this -> LocaleCollationCaseFirst.t -> unit) =
          fun (x2619 : 'tags this) ->
            fun (x2620 : LocaleCollationCaseFirst.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2619) "caseFirst"
                (LocaleCollationCaseFirst.t_to_js x2620)
        let (get_collation : 'tags this -> string) =
          fun (x2622 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2622) "collation")
        let (set_collation : 'tags this -> string -> unit) =
          fun (x2624 : 'tags this) ->
            fun (x2625 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2624) "collation"
                (Ojs.string_to_js x2625)
        let (get_hourCycle : 'tags this -> LocaleHourCycleKey.t) =
          fun (x2627 : 'tags this) ->
            LocaleHourCycleKey.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2627) "hourCycle")
        let (set_hourCycle : 'tags this -> LocaleHourCycleKey.t -> unit) =
          fun (x2629 : 'tags this) ->
            fun (x2630 : LocaleHourCycleKey.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2629) "hourCycle"
                (LocaleHourCycleKey.t_to_js x2630)
        let (get_language : 'tags this -> string) =
          fun (x2632 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2632) "language")
        let (set_language : 'tags this -> string -> unit) =
          fun (x2634 : 'tags this) ->
            fun (x2635 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2634) "language"
                (Ojs.string_to_js x2635)
        let (get_numberingSystem : 'tags this -> string) =
          fun (x2637 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2637)
                 "numberingSystem")
        let (set_numberingSystem : 'tags this -> string -> unit) =
          fun (x2639 : 'tags this) ->
            fun (x2640 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2639)
                "numberingSystem" (Ojs.string_to_js x2640)
        let (get_numeric : 'tags this -> bool) =
          fun (x2642 : 'tags this) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2642) "numeric")
        let (set_numeric : 'tags this -> bool -> unit) =
          fun (x2644 : 'tags this) ->
            fun (x2645 : bool) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2644) "numeric"
                (Ojs.bool_to_js x2645)
        let (get_region : 'tags this -> string) =
          fun (x2647 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2647) "region")
        let (set_region : 'tags this -> string -> unit) =
          fun (x2649 : 'tags this) ->
            fun (x2650 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2649) "region"
                (Ojs.string_to_js x2650)
        let (get_script : 'tags this -> string) =
          fun (x2652 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2652) "script")
        let (set_script : 'tags this -> string -> unit) =
          fun (x2654 : 'tags this) ->
            fun (x2655 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2654) "script"
                (Ojs.string_to_js x2655)
        let (create :
          baseName:string ->
            calendar:string ->
              caseFirst:LocaleCollationCaseFirst.t ->
                collation:string ->
                  hourCycle:LocaleHourCycleKey.t ->
                    language:string ->
                      numberingSystem:string ->
                        numeric:bool ->
                          region:string -> script:string -> unit -> t)
          =
          fun ~baseName:(x2657 : string) ->
            fun ~calendar:(x2658 : string) ->
              fun ~caseFirst:(x2659 : LocaleCollationCaseFirst.t) ->
                fun ~collation:(x2660 : string) ->
                  fun ~hourCycle:(x2661 : LocaleHourCycleKey.t) ->
                    fun ~language:(x2662 : string) ->
                      fun ~numberingSystem:(x2663 : string) ->
                        fun ~numeric:(x2664 : bool) ->
                          fun ~region:(x2665 : string) ->
                            fun ~script:(x2666 : string) ->
                              fun () ->
                                let x2667 = Ojs.empty_obj () in
                                Ojs.set_prop_ascii x2667 "baseName"
                                  (Ojs.string_to_js x2657);
                                Ojs.set_prop_ascii x2667 "calendar"
                                  (Ojs.string_to_js x2658);
                                Ojs.set_prop_ascii x2667 "caseFirst"
                                  (LocaleCollationCaseFirst.t_to_js x2659);
                                Ojs.set_prop_ascii x2667 "collation"
                                  (Ojs.string_to_js x2660);
                                Ojs.set_prop_ascii x2667 "hourCycle"
                                  (LocaleHourCycleKey.t_to_js x2661);
                                Ojs.set_prop_ascii x2667 "language"
                                  (Ojs.string_to_js x2662);
                                Ojs.set_prop_ascii x2667 "numberingSystem"
                                  (Ojs.string_to_js x2663);
                                Ojs.set_prop_ascii x2667 "numeric"
                                  (Ojs.bool_to_js x2664);
                                Ojs.set_prop_ascii x2667 "region"
                                  (Ojs.string_to_js x2665);
                                Ojs.set_prop_ascii x2667 "script"
                                  (Ojs.string_to_js x2666);
                                t_of_js x2667
        let cast_from = Obj.magic
      end
    module BCP47LanguageTag =
      struct
        type t = string
        let rec t_of_js : Ojs.t -> t =
          fun (x2669 : Ojs.t) -> Ojs.string_of_js x2669
        and t_to_js : t -> Ojs.t =
          fun (x2668 : string) -> Ojs.string_to_js x2668
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2671 : Ojs.t) -> t_of_js x2671
        and t_0_to_js : t_0 -> Ojs.t = fun (x2670 : t) -> t_to_js x2670
      end
    module Locale =
      struct
        type t = [ `Intl_Locale  | `Intl_LocaleOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2673 : Ojs.t) -> t_of_js x2673
        and t_0_to_js : t_0 -> Ojs.t = fun (x2672 : t) -> t_to_js x2672
        type tags = [ `Intl_Locale  | `Intl_LocaleOptions ]
        type tags_0 = tags
        type 'tags this = 'tags intf constraint 'tags = [> `Intl_Locale ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2676 : Ojs.t) -> intf_of_js __tags_of_js x2676
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2674 : __tags intf) -> intf_to_js __tags_to_js x2674
        let (maximize : 'tags this -> t) =
          fun (x2678 : 'tags this) ->
            t_of_js (Ojs.call (this_to_js Obj.magic x2678) "maximize" [||])
        let (minimize : 'tags this -> t) =
          fun (x2680 : 'tags this) ->
            t_of_js (Ojs.call (this_to_js Obj.magic x2680) "minimize" [||])
        let (toString : 'tags this -> BCP47LanguageTag.t) =
          fun (x2682 : 'tags this) ->
            BCP47LanguageTag.t_of_js
              (Ojs.call (this_to_js Obj.magic x2682) "toString" [||])
        let cast_from = Obj.magic
        let (create :
          ?tag:BCP47LanguageTag.t -> ?options:LocaleOptions.t -> unit -> t) =
          fun ?tag:(x2684 : BCP47LanguageTag.t option) ->
            fun ?options:(x2685 : LocaleOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "Locale")
                     (let x2686 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x2684 with
                       | Some x2688 ->
                           ignore
                             (Ojs.call x2686 "push"
                                [|(BCP47LanguageTag.t_to_js x2688)|])
                       | None -> ());
                      (match x2685 with
                       | Some x2687 ->
                           ignore
                             (Ojs.call x2686 "push"
                                [|(LocaleOptions.t_to_js x2687)|])
                       | None -> ());
                      x2686))
      end
    module DisplayNamesOptions =
      struct
        type t = [ `Intl_DisplayNamesOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2690 : Ojs.t) -> t_of_js x2690
        and t_0_to_js : t_0 -> Ojs.t = fun (x2689 : t) -> t_to_js x2689
        type tags = [ `Intl_DisplayNamesOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_DisplayNamesOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2693 : Ojs.t) -> intf_of_js __tags_of_js x2693
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2691 : __tags intf) -> intf_to_js __tags_to_js x2691
        let (get_localeMatcher :
          'tags this -> RelativeTimeFormatLocaleMatcher.t) =
          fun (x2695 : 'tags this) ->
            RelativeTimeFormatLocaleMatcher.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2695)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this -> RelativeTimeFormatLocaleMatcher.t -> unit) =
          fun (x2697 : 'tags this) ->
            fun (x2698 : RelativeTimeFormatLocaleMatcher.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2697) "localeMatcher"
                (RelativeTimeFormatLocaleMatcher.t_to_js x2698)
        let (get_style : 'tags this -> RelativeTimeFormatStyle.t) =
          fun (x2700 : 'tags this) ->
            RelativeTimeFormatStyle.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2700) "style")
        let (set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit) =
          fun (x2702 : 'tags this) ->
            fun (x2703 : RelativeTimeFormatStyle.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2702) "style"
                (RelativeTimeFormatStyle.t_to_js x2703)
        let (get_type :
          'tags this ->
            [ `L_s28_currency  | `L_s53_language  | `L_s82_region 
            | `L_s85_script ])
          =
          fun (x2705 : 'tags this) ->
            let x2707 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2705) "type" in
            match Ojs.string_of_js x2707 with
            | "currency" -> `L_s28_currency
            | "language" -> `L_s53_language
            | "region" -> `L_s82_region
            | "script" -> `L_s85_script
            | _ -> assert false
        let (set_type :
          'tags this ->
            [ `L_s28_currency  | `L_s53_language  | `L_s82_region 
            | `L_s85_script ] -> unit)
          =
          fun (x2708 : 'tags this) ->
            fun
              (x2709 :
                [ `L_s28_currency  | `L_s53_language  | `L_s82_region 
                | `L_s85_script ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2708) "type"
                (match x2709 with
                 | `L_s28_currency -> Ojs.string_to_js "currency"
                 | `L_s53_language -> Ojs.string_to_js "language"
                 | `L_s82_region -> Ojs.string_to_js "region"
                 | `L_s85_script -> Ojs.string_to_js "script")
        let (get_fallback : 'tags this -> [ `L_s26_code  | `L_s69_none ]) =
          fun (x2711 : 'tags this) ->
            let x2713 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2711) "fallback" in
            match Ojs.string_of_js x2713 with
            | "code" -> `L_s26_code
            | "none" -> `L_s69_none
            | _ -> assert false
        let (set_fallback :
          'tags this -> [ `L_s26_code  | `L_s69_none ] -> unit) =
          fun (x2714 : 'tags this) ->
            fun (x2715 : [ `L_s26_code  | `L_s69_none ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2714) "fallback"
                (match x2715 with
                 | `L_s26_code -> Ojs.string_to_js "code"
                 | `L_s69_none -> Ojs.string_to_js "none")
        let (create :
          localeMatcher:RelativeTimeFormatLocaleMatcher.t ->
            style:RelativeTimeFormatStyle.t ->
              type_:[ `L_s28_currency  | `L_s53_language  | `L_s82_region 
                    | `L_s85_script ]
                -> fallback:[ `L_s26_code  | `L_s69_none ] -> unit -> t)
          =
          fun ~localeMatcher:(x2717 : RelativeTimeFormatLocaleMatcher.t) ->
            fun ~style:(x2718 : RelativeTimeFormatStyle.t) ->
              fun
                ~type_:(x2719 :
                         [ `L_s28_currency  | `L_s53_language 
                         | `L_s82_region  | `L_s85_script ])
                ->
                fun ~fallback:(x2720 : [ `L_s26_code  | `L_s69_none ]) ->
                  fun () ->
                    let x2721 = Ojs.empty_obj () in
                    Ojs.set_prop_ascii x2721 "localeMatcher"
                      (RelativeTimeFormatLocaleMatcher.t_to_js x2717);
                    Ojs.set_prop_ascii x2721 "style"
                      (RelativeTimeFormatStyle.t_to_js x2718);
                    Ojs.set_prop_ascii x2721 "type"
                      (match x2719 with
                       | `L_s28_currency -> Ojs.string_to_js "currency"
                       | `L_s53_language -> Ojs.string_to_js "language"
                       | `L_s82_region -> Ojs.string_to_js "region"
                       | `L_s85_script -> Ojs.string_to_js "script");
                    Ojs.set_prop_ascii x2721 "fallback"
                      (match x2720 with
                       | `L_s26_code -> Ojs.string_to_js "code"
                       | `L_s69_none -> Ojs.string_to_js "none");
                    t_of_js x2721
        let cast_from = Obj.magic
      end
    module DisplayNames =
      struct
        module AnonymousInterface2 =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x2723 : Ojs.t) -> x2723
            and t_to_js : t -> Ojs.t = fun (x2722 : Ojs.t) -> x2722
            let (get_localeMatcher : t -> RelativeTimeFormatLocaleMatcher.t)
              =
              fun (x2724 : t) ->
                RelativeTimeFormatLocaleMatcher.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x2724) "localeMatcher")
            let (set_localeMatcher :
              t -> RelativeTimeFormatLocaleMatcher.t -> unit) =
              fun (x2725 : t) ->
                fun (x2726 : RelativeTimeFormatLocaleMatcher.t) ->
                  Ojs.set_prop_ascii (t_to_js x2725) "localeMatcher"
                    (RelativeTimeFormatLocaleMatcher.t_to_js x2726)
            let (create :
              localeMatcher:RelativeTimeFormatLocaleMatcher.t -> unit -> t) =
              fun ~localeMatcher:(x2727 : RelativeTimeFormatLocaleMatcher.t)
                ->
                fun () ->
                  let x2728 = Ojs.empty_obj () in
                  Ojs.set_prop_ascii x2728 "localeMatcher"
                    (RelativeTimeFormatLocaleMatcher.t_to_js x2727);
                  t_of_js x2728
          end
        type t = [ `Intl_DisplayNames ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2730 : Ojs.t) -> t_of_js x2730
        and t_0_to_js : t_0 -> Ojs.t = fun (x2729 : t) -> t_to_js x2729
        type tags = [ `Intl_DisplayNames ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_DisplayNames ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2733 : Ojs.t) -> intf_of_js __tags_of_js x2733
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2731 : __tags intf) -> intf_to_js __tags_to_js x2731
        let (of_ : 'tags this -> code:string -> string) =
          fun (x2736 : 'tags this) ->
            fun ~code:(x2735 : string) ->
              Ojs.string_of_js
                (Ojs.call (this_to_js Obj.magic x2736) "of"
                   [|(Ojs.string_to_js x2735)|])
        let (resolvedOptions : 'tags this -> DisplayNamesOptions.t) =
          fun (x2738 : 'tags this) ->
            DisplayNamesOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x2738) "resolvedOptions" [||])
        let cast_from = Obj.magic
        let (prototype : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.get_prop_ascii
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Intl")
                    "DisplayNames") "prototype")
        let (create :
          ?locales:(BCP47LanguageTag.t, BCP47LanguageTag.t) or_array ->
            ?options:DisplayNamesOptions.t Partial.t -> unit -> t)
          =
          fun
            ?locales:(x2740 :
                       (BCP47LanguageTag.t, BCP47LanguageTag.t) or_array
                         option)
            ->
            fun ?options:(x2741 : DisplayNamesOptions.t Partial.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "DisplayNames")
                     (let x2742 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x2740 with
                       | Some x2745 ->
                           ignore
                             (Ojs.call x2742 "push"
                                [|(or_array_to_js BCP47LanguageTag.t_to_js
                                     BCP47LanguageTag.t_to_js x2745)|])
                       | None -> ());
                      (match x2741 with
                       | Some x2743 ->
                           ignore
                             (Ojs.call x2742 "push"
                                [|(Partial.t_to_js
                                     DisplayNamesOptions.t_to_js x2743)|])
                       | None -> ());
                      x2742))
        let (supportedLocalesOf :
          locales:(BCP47LanguageTag.t, BCP47LanguageTag.t) or_array ->
            ?options:AnonymousInterface2.t -> unit -> BCP47LanguageTag.t list)
          =
          fun
            ~locales:(x2748 :
                       (BCP47LanguageTag.t, BCP47LanguageTag.t) or_array)
            ->
            fun ?options:(x2749 : AnonymousInterface2.t option) ->
              fun () ->
                Ojs.list_of_js BCP47LanguageTag.t_of_js
                  (let x2754 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl") "DisplayNames" in
                   Ojs.call (Ojs.get_prop_ascii x2754 "supportedLocalesOf")
                     "apply"
                     [|x2754;((let x2750 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2750 "push"
                                    [|(or_array_to_js
                                         BCP47LanguageTag.t_to_js
                                         BCP47LanguageTag.t_to_js x2748)|]);
                               (match x2749 with
                                | Some x2751 ->
                                    ignore
                                      (Ojs.call x2750 "push"
                                         [|(AnonymousInterface2.t_to_js x2751)|])
                                | None -> ());
                               x2750))|])
      end
    module ResolvedDateTimeFormatOptions =
      struct
        type t = [ `Intl_ResolvedDateTimeFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2757 : Ojs.t) -> t_of_js x2757
        and t_0_to_js : t_0 -> Ojs.t = fun (x2756 : t) -> t_to_js x2756
        type tags = [ `Intl_ResolvedDateTimeFormatOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags =
                      [> `Intl_ResolvedDateTimeFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2760 : Ojs.t) -> intf_of_js __tags_of_js x2760
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2758 : __tags intf) -> intf_to_js __tags_to_js x2758
        let (get_formatMatcher :
          'tags this -> [ `L_s23_basic  | `L_s24_best_fit ]) =
          fun (x2762 : 'tags this) ->
            let x2764 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2762) "formatMatcher" in
            match Ojs.string_of_js x2764 with
            | "basic" -> `L_s23_basic
            | "best fit" -> `L_s24_best_fit
            | _ -> assert false
        let (set_formatMatcher :
          'tags this -> [ `L_s23_basic  | `L_s24_best_fit ] -> unit) =
          fun (x2765 : 'tags this) ->
            fun (x2766 : [ `L_s23_basic  | `L_s24_best_fit ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2765) "formatMatcher"
                (match x2766 with
                 | `L_s23_basic -> Ojs.string_to_js "basic"
                 | `L_s24_best_fit -> Ojs.string_to_js "best fit")
        let (get_dateStyle :
          'tags this ->
            [ `L_s43_full  | `L_s55_long  | `L_s59_medium  | `L_s88_short ])
          =
          fun (x2768 : 'tags this) ->
            let x2770 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2768) "dateStyle" in
            match Ojs.string_of_js x2770 with
            | "full" -> `L_s43_full
            | "long" -> `L_s55_long
            | "medium" -> `L_s59_medium
            | "short" -> `L_s88_short
            | _ -> assert false
        let (set_dateStyle :
          'tags this ->
            [ `L_s43_full  | `L_s55_long  | `L_s59_medium  | `L_s88_short ]
              -> unit)
          =
          fun (x2771 : 'tags this) ->
            fun
              (x2772 :
                [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
                | `L_s88_short ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2771) "dateStyle"
                (match x2772 with
                 | `L_s43_full -> Ojs.string_to_js "full"
                 | `L_s55_long -> Ojs.string_to_js "long"
                 | `L_s59_medium -> Ojs.string_to_js "medium"
                 | `L_s88_short -> Ojs.string_to_js "short")
        let (get_timeStyle :
          'tags this ->
            [ `L_s43_full  | `L_s55_long  | `L_s59_medium  | `L_s88_short ])
          =
          fun (x2774 : 'tags this) ->
            let x2776 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2774) "timeStyle" in
            match Ojs.string_of_js x2776 with
            | "full" -> `L_s43_full
            | "long" -> `L_s55_long
            | "medium" -> `L_s59_medium
            | "short" -> `L_s88_short
            | _ -> assert false
        let (set_timeStyle :
          'tags this ->
            [ `L_s43_full  | `L_s55_long  | `L_s59_medium  | `L_s88_short ]
              -> unit)
          =
          fun (x2777 : 'tags this) ->
            fun
              (x2778 :
                [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
                | `L_s88_short ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2777) "timeStyle"
                (match x2778 with
                 | `L_s43_full -> Ojs.string_to_js "full"
                 | `L_s55_long -> Ojs.string_to_js "long"
                 | `L_s59_medium -> Ojs.string_to_js "medium"
                 | `L_s88_short -> Ojs.string_to_js "short")
        let (get_hourCycle :
          'tags this ->
            [ `L_s45_h11  | `L_s46_h12  | `L_s47_h23  | `L_s48_h24 ])
          =
          fun (x2780 : 'tags this) ->
            let x2782 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2780) "hourCycle" in
            match Ojs.string_of_js x2782 with
            | "h11" -> `L_s45_h11
            | "h12" -> `L_s46_h12
            | "h23" -> `L_s47_h23
            | "h24" -> `L_s48_h24
            | _ -> assert false
        let (set_hourCycle :
          'tags this ->
            [ `L_s45_h11  | `L_s46_h12  | `L_s47_h23  | `L_s48_h24 ] -> unit)
          =
          fun (x2783 : 'tags this) ->
            fun
              (x2784 :
                [ `L_s45_h11  | `L_s46_h12  | `L_s47_h23  | `L_s48_h24 ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2783) "hourCycle"
                (match x2784 with
                 | `L_s45_h11 -> Ojs.string_to_js "h11"
                 | `L_s46_h12 -> Ojs.string_to_js "h12"
                 | `L_s47_h23 -> Ojs.string_to_js "h23"
                 | `L_s48_h24 -> Ojs.string_to_js "h24")
        let (get_dayPeriod :
          'tags this -> [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ]) =
          fun (x2786 : 'tags this) ->
            let x2788 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2786) "dayPeriod" in
            match Ojs.string_of_js x2788 with
            | "long" -> `L_s55_long
            | "narrow" -> `L_s67_narrow
            | "short" -> `L_s88_short
            | _ -> assert false
        let (set_dayPeriod :
          'tags this ->
            [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] -> unit)
          =
          fun (x2789 : 'tags this) ->
            fun (x2790 : [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2789) "dayPeriod"
                (match x2790 with
                 | `L_s55_long -> Ojs.string_to_js "long"
                 | `L_s67_narrow -> Ojs.string_to_js "narrow"
                 | `L_s88_short -> Ojs.string_to_js "short")
        let (get_fractionalSecondDigits :
          'tags this -> [ `L_n_0  | `L_n_1  | `L_n_2  | `L_n_3 ]) =
          fun (x2792 : 'tags this) ->
            let x2794 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2792)
                "fractionalSecondDigits" in
            match Ojs.int_of_js x2794 with
            | 0 -> `L_n_0
            | 1 -> `L_n_1
            | 2 -> `L_n_2
            | 3 -> `L_n_3
            | _ -> assert false
        let (set_fractionalSecondDigits :
          'tags this -> [ `L_n_0  | `L_n_1  | `L_n_2  | `L_n_3 ] -> unit) =
          fun (x2795 : 'tags this) ->
            fun (x2796 : [ `L_n_0  | `L_n_1  | `L_n_2  | `L_n_3 ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2795)
                "fractionalSecondDigits"
                (match x2796 with
                 | `L_n_0 -> Ojs.int_to_js 0
                 | `L_n_1 -> Ojs.int_to_js 1
                 | `L_n_2 -> Ojs.int_to_js 2
                 | `L_n_3 -> Ojs.int_to_js 3)
        let (get_locale : 'tags this -> string) =
          fun (x2798 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2798) "locale")
        let (set_locale : 'tags this -> string -> unit) =
          fun (x2800 : 'tags this) ->
            fun (x2801 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2800) "locale"
                (Ojs.string_to_js x2801)
        let (get_calendar : 'tags this -> string) =
          fun (x2803 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2803) "calendar")
        let (set_calendar : 'tags this -> string -> unit) =
          fun (x2805 : 'tags this) ->
            fun (x2806 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2805) "calendar"
                (Ojs.string_to_js x2806)
        let (get_numberingSystem : 'tags this -> string) =
          fun (x2808 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2808)
                 "numberingSystem")
        let (set_numberingSystem : 'tags this -> string -> unit) =
          fun (x2810 : 'tags this) ->
            fun (x2811 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2810)
                "numberingSystem" (Ojs.string_to_js x2811)
        let (get_timeZone : 'tags this -> string) =
          fun (x2813 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2813) "timeZone")
        let (set_timeZone : 'tags this -> string -> unit) =
          fun (x2815 : 'tags this) ->
            fun (x2816 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2815) "timeZone"
                (Ojs.string_to_js x2816)
        let (get_hour12 : 'tags this -> bool) =
          fun (x2818 : 'tags this) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2818) "hour12")
        let (set_hour12 : 'tags this -> bool -> unit) =
          fun (x2820 : 'tags this) ->
            fun (x2821 : bool) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2820) "hour12"
                (Ojs.bool_to_js x2821)
        let (get_weekday : 'tags this -> string) =
          fun (x2823 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2823) "weekday")
        let (set_weekday : 'tags this -> string -> unit) =
          fun (x2825 : 'tags this) ->
            fun (x2826 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2825) "weekday"
                (Ojs.string_to_js x2826)
        let (get_era : 'tags this -> string) =
          fun (x2828 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2828) "era")
        let (set_era : 'tags this -> string -> unit) =
          fun (x2830 : 'tags this) ->
            fun (x2831 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2830) "era"
                (Ojs.string_to_js x2831)
        let (get_year : 'tags this -> string) =
          fun (x2833 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2833) "year")
        let (set_year : 'tags this -> string -> unit) =
          fun (x2835 : 'tags this) ->
            fun (x2836 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2835) "year"
                (Ojs.string_to_js x2836)
        let (get_month : 'tags this -> string) =
          fun (x2838 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2838) "month")
        let (set_month : 'tags this -> string -> unit) =
          fun (x2840 : 'tags this) ->
            fun (x2841 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2840) "month"
                (Ojs.string_to_js x2841)
        let (get_day : 'tags this -> string) =
          fun (x2843 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2843) "day")
        let (set_day : 'tags this -> string -> unit) =
          fun (x2845 : 'tags this) ->
            fun (x2846 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2845) "day"
                (Ojs.string_to_js x2846)
        let (get_hour : 'tags this -> string) =
          fun (x2848 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2848) "hour")
        let (set_hour : 'tags this -> string -> unit) =
          fun (x2850 : 'tags this) ->
            fun (x2851 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2850) "hour"
                (Ojs.string_to_js x2851)
        let (get_minute : 'tags this -> string) =
          fun (x2853 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2853) "minute")
        let (set_minute : 'tags this -> string -> unit) =
          fun (x2855 : 'tags this) ->
            fun (x2856 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2855) "minute"
                (Ojs.string_to_js x2856)
        let (get_second : 'tags this -> string) =
          fun (x2858 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2858) "second")
        let (set_second : 'tags this -> string -> unit) =
          fun (x2860 : 'tags this) ->
            fun (x2861 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2860) "second"
                (Ojs.string_to_js x2861)
        let (get_timeZoneName : 'tags this -> string) =
          fun (x2863 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2863) "timeZoneName")
        let (set_timeZoneName : 'tags this -> string -> unit) =
          fun (x2865 : 'tags this) ->
            fun (x2866 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2865) "timeZoneName"
                (Ojs.string_to_js x2866)
        let (create :
          formatMatcher:[ `L_s23_basic  | `L_s24_best_fit ] ->
            dateStyle:[ `L_s43_full  | `L_s55_long  | `L_s59_medium 
                      | `L_s88_short ]
              ->
              timeStyle:[ `L_s43_full  | `L_s55_long  | `L_s59_medium 
                        | `L_s88_short ]
                ->
                hourCycle:[ `L_s45_h11  | `L_s46_h12  | `L_s47_h23 
                          | `L_s48_h24 ]
                  ->
                  dayPeriod:[ `L_s55_long  | `L_s67_narrow  | `L_s88_short ]
                    ->
                    fractionalSecondDigits:[ `L_n_0  | `L_n_1  | `L_n_2 
                                           | `L_n_3 ]
                      ->
                      locale:string ->
                        calendar:string ->
                          numberingSystem:string ->
                            timeZone:string ->
                              hour12:bool ->
                                weekday:string ->
                                  era:string ->
                                    year:string ->
                                      month:string ->
                                        day:string ->
                                          hour:string ->
                                            minute:string ->
                                              second:string ->
                                                timeZoneName:string ->
                                                  unit -> t)
          =
          fun ~formatMatcher:(x2868 : [ `L_s23_basic  | `L_s24_best_fit ]) ->
            fun
              ~dateStyle:(x2869 :
                           [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
                           | `L_s88_short ])
              ->
              fun
                ~timeStyle:(x2870 :
                             [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
                             | `L_s88_short ])
                ->
                fun
                  ~hourCycle:(x2871 :
                               [ `L_s45_h11  | `L_s46_h12  | `L_s47_h23 
                               | `L_s48_h24 ])
                  ->
                  fun
                    ~dayPeriod:(x2872 :
                                 [ `L_s55_long  | `L_s67_narrow 
                                 | `L_s88_short ])
                    ->
                    fun
                      ~fractionalSecondDigits:(x2873 :
                                                [ `L_n_0  | `L_n_1  | 
                                                  `L_n_2 
                                                | `L_n_3 ])
                      ->
                      fun ~locale:(x2874 : string) ->
                        fun ~calendar:(x2875 : string) ->
                          fun ~numberingSystem:(x2876 : string) ->
                            fun ~timeZone:(x2877 : string) ->
                              fun ~hour12:(x2878 : bool) ->
                                fun ~weekday:(x2879 : string) ->
                                  fun ~era:(x2880 : string) ->
                                    fun ~year:(x2881 : string) ->
                                      fun ~month:(x2882 : string) ->
                                        fun ~day:(x2883 : string) ->
                                          fun ~hour:(x2884 : string) ->
                                            fun ~minute:(x2885 : string) ->
                                              fun ~second:(x2886 : string) ->
                                                fun
                                                  ~timeZoneName:(x2887 :
                                                                  string)
                                                  ->
                                                  fun () ->
                                                    let x2888 =
                                                      Ojs.empty_obj () in
                                                    Ojs.set_prop_ascii x2888
                                                      "formatMatcher"
                                                      (match x2868 with
                                                       | `L_s23_basic ->
                                                           Ojs.string_to_js
                                                             "basic"
                                                       | `L_s24_best_fit ->
                                                           Ojs.string_to_js
                                                             "best fit");
                                                    Ojs.set_prop_ascii x2888
                                                      "dateStyle"
                                                      (match x2869 with
                                                       | `L_s43_full ->
                                                           Ojs.string_to_js
                                                             "full"
                                                       | `L_s55_long ->
                                                           Ojs.string_to_js
                                                             "long"
                                                       | `L_s59_medium ->
                                                           Ojs.string_to_js
                                                             "medium"
                                                       | `L_s88_short ->
                                                           Ojs.string_to_js
                                                             "short");
                                                    Ojs.set_prop_ascii x2888
                                                      "timeStyle"
                                                      (match x2870 with
                                                       | `L_s43_full ->
                                                           Ojs.string_to_js
                                                             "full"
                                                       | `L_s55_long ->
                                                           Ojs.string_to_js
                                                             "long"
                                                       | `L_s59_medium ->
                                                           Ojs.string_to_js
                                                             "medium"
                                                       | `L_s88_short ->
                                                           Ojs.string_to_js
                                                             "short");
                                                    Ojs.set_prop_ascii x2888
                                                      "hourCycle"
                                                      (match x2871 with
                                                       | `L_s45_h11 ->
                                                           Ojs.string_to_js
                                                             "h11"
                                                       | `L_s46_h12 ->
                                                           Ojs.string_to_js
                                                             "h12"
                                                       | `L_s47_h23 ->
                                                           Ojs.string_to_js
                                                             "h23"
                                                       | `L_s48_h24 ->
                                                           Ojs.string_to_js
                                                             "h24");
                                                    Ojs.set_prop_ascii x2888
                                                      "dayPeriod"
                                                      (match x2872 with
                                                       | `L_s55_long ->
                                                           Ojs.string_to_js
                                                             "long"
                                                       | `L_s67_narrow ->
                                                           Ojs.string_to_js
                                                             "narrow"
                                                       | `L_s88_short ->
                                                           Ojs.string_to_js
                                                             "short");
                                                    Ojs.set_prop_ascii x2888
                                                      "fractionalSecondDigits"
                                                      (match x2873 with
                                                       | `L_n_0 ->
                                                           Ojs.int_to_js 0
                                                       | `L_n_1 ->
                                                           Ojs.int_to_js 1
                                                       | `L_n_2 ->
                                                           Ojs.int_to_js 2
                                                       | `L_n_3 ->
                                                           Ojs.int_to_js 3);
                                                    Ojs.set_prop_ascii x2888
                                                      "locale"
                                                      (Ojs.string_to_js x2874);
                                                    Ojs.set_prop_ascii x2888
                                                      "calendar"
                                                      (Ojs.string_to_js x2875);
                                                    Ojs.set_prop_ascii x2888
                                                      "numberingSystem"
                                                      (Ojs.string_to_js x2876);
                                                    Ojs.set_prop_ascii x2888
                                                      "timeZone"
                                                      (Ojs.string_to_js x2877);
                                                    Ojs.set_prop_ascii x2888
                                                      "hour12"
                                                      (Ojs.bool_to_js x2878);
                                                    Ojs.set_prop_ascii x2888
                                                      "weekday"
                                                      (Ojs.string_to_js x2879);
                                                    Ojs.set_prop_ascii x2888
                                                      "era"
                                                      (Ojs.string_to_js x2880);
                                                    Ojs.set_prop_ascii x2888
                                                      "year"
                                                      (Ojs.string_to_js x2881);
                                                    Ojs.set_prop_ascii x2888
                                                      "month"
                                                      (Ojs.string_to_js x2882);
                                                    Ojs.set_prop_ascii x2888
                                                      "day"
                                                      (Ojs.string_to_js x2883);
                                                    Ojs.set_prop_ascii x2888
                                                      "hour"
                                                      (Ojs.string_to_js x2884);
                                                    Ojs.set_prop_ascii x2888
                                                      "minute"
                                                      (Ojs.string_to_js x2885);
                                                    Ojs.set_prop_ascii x2888
                                                      "second"
                                                      (Ojs.string_to_js x2886);
                                                    Ojs.set_prop_ascii x2888
                                                      "timeZoneName"
                                                      (Ojs.string_to_js x2887);
                                                    t_of_js x2888
        let cast_from = Obj.magic
      end
    module DateTimeFormatPartTypes =
      struct
        type t =
          [ `L_s101_year  | `L_s29_day  | `L_s30_dayPeriod  | `L_s35_era 
          | `L_s49_hour  | `L_s54_literal  | `L_s61_minute  | `L_s63_month 
          | `L_s86_second  | `L_s92_timeZoneName  | `L_s99_weekday ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2890 : Ojs.t) ->
            let x2891 = x2890 in
            match Ojs.string_of_js x2891 with
            | "year" -> `L_s101_year
            | "day" -> `L_s29_day
            | "dayPeriod" -> `L_s30_dayPeriod
            | "era" -> `L_s35_era
            | "hour" -> `L_s49_hour
            | "literal" -> `L_s54_literal
            | "minute" -> `L_s61_minute
            | "month" -> `L_s63_month
            | "second" -> `L_s86_second
            | "timeZoneName" -> `L_s92_timeZoneName
            | "weekday" -> `L_s99_weekday
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x2889 :
              [ `L_s101_year  | `L_s29_day  | `L_s30_dayPeriod  | `L_s35_era 
              | `L_s49_hour  | `L_s54_literal  | `L_s61_minute 
              | `L_s63_month  | `L_s86_second  | `L_s92_timeZoneName 
              | `L_s99_weekday ])
            ->
            match x2889 with
            | `L_s101_year -> Ojs.string_to_js "year"
            | `L_s29_day -> Ojs.string_to_js "day"
            | `L_s30_dayPeriod -> Ojs.string_to_js "dayPeriod"
            | `L_s35_era -> Ojs.string_to_js "era"
            | `L_s49_hour -> Ojs.string_to_js "hour"
            | `L_s54_literal -> Ojs.string_to_js "literal"
            | `L_s61_minute -> Ojs.string_to_js "minute"
            | `L_s63_month -> Ojs.string_to_js "month"
            | `L_s86_second -> Ojs.string_to_js "second"
            | `L_s92_timeZoneName -> Ojs.string_to_js "timeZoneName"
            | `L_s99_weekday -> Ojs.string_to_js "weekday"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2893 : Ojs.t) -> t_of_js x2893
        and t_0_to_js : t_0 -> Ojs.t = fun (x2892 : t) -> t_to_js x2892
      end
    module DateTimeFormatPart =
      struct
        type t = [ `Intl_DateTimeFormatPart ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2895 : Ojs.t) -> t_of_js x2895
        and t_0_to_js : t_0 -> Ojs.t = fun (x2894 : t) -> t_to_js x2894
        type tags = [ `Intl_DateTimeFormatPart ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_DateTimeFormatPart ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2898 : Ojs.t) -> intf_of_js __tags_of_js x2898
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2896 : __tags intf) -> intf_to_js __tags_to_js x2896
        let (get_type : 'tags this -> DateTimeFormatPartTypes.t) =
          fun (x2900 : 'tags this) ->
            DateTimeFormatPartTypes.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2900) "type")
        let (set_type : 'tags this -> DateTimeFormatPartTypes.t -> unit) =
          fun (x2902 : 'tags this) ->
            fun (x2903 : DateTimeFormatPartTypes.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2902) "type"
                (DateTimeFormatPartTypes.t_to_js x2903)
        let (get_value : 'tags this -> string) =
          fun (x2905 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2905) "value")
        let (set_value : 'tags this -> string -> unit) =
          fun (x2907 : 'tags this) ->
            fun (x2908 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2907) "value"
                (Ojs.string_to_js x2908)
        let (create :
          type_:DateTimeFormatPartTypes.t -> value:string -> unit -> t) =
          fun ~type_:(x2910 : DateTimeFormatPartTypes.t) ->
            fun ~value:(x2911 : string) ->
              fun () ->
                let x2912 = Ojs.empty_obj () in
                Ojs.set_prop_ascii x2912 "type"
                  (DateTimeFormatPartTypes.t_to_js x2910);
                Ojs.set_prop_ascii x2912 "value" (Ojs.string_to_js x2911);
                t_of_js x2912
        let cast_from = Obj.magic
      end
    module DateTimeFormatOptions =
      struct
        type t = [ `Intl_DateTimeFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2914 : Ojs.t) -> t_of_js x2914
        and t_0_to_js : t_0 -> Ojs.t = fun (x2913 : t) -> t_to_js x2913
        type tags = [ `Intl_DateTimeFormatOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_DateTimeFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2917 : Ojs.t) -> intf_of_js __tags_of_js x2917
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2915 : __tags intf) -> intf_to_js __tags_to_js x2915
        let (get_formatMatcher :
          'tags this -> [ `L_s23_basic  | `L_s24_best_fit ] or_undefined) =
          fun (x2919 : 'tags this) ->
            or_undefined_of_js
              (fun (x2921 : Ojs.t) ->
                 let x2922 = x2921 in
                 match Ojs.string_of_js x2922 with
                 | "basic" -> `L_s23_basic
                 | "best fit" -> `L_s24_best_fit
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2919)
                 "formatMatcher")
        let (set_formatMatcher :
          'tags this ->
            [ `L_s23_basic  | `L_s24_best_fit ] or_undefined -> unit)
          =
          fun (x2923 : 'tags this) ->
            fun (x2924 : [ `L_s23_basic  | `L_s24_best_fit ] or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2923) "formatMatcher"
                (or_undefined_to_js
                   (fun (x2925 : [ `L_s23_basic  | `L_s24_best_fit ]) ->
                      match x2925 with
                      | `L_s23_basic -> Ojs.string_to_js "basic"
                      | `L_s24_best_fit -> Ojs.string_to_js "best fit") x2924)
        let (get_dateStyle :
          'tags this ->
            [ `L_s43_full  | `L_s55_long  | `L_s59_medium  | `L_s88_short ]
              or_undefined)
          =
          fun (x2927 : 'tags this) ->
            or_undefined_of_js
              (fun (x2929 : Ojs.t) ->
                 let x2930 = x2929 in
                 match Ojs.string_of_js x2930 with
                 | "full" -> `L_s43_full
                 | "long" -> `L_s55_long
                 | "medium" -> `L_s59_medium
                 | "short" -> `L_s88_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2927) "dateStyle")
        let (set_dateStyle :
          'tags this ->
            [ `L_s43_full  | `L_s55_long  | `L_s59_medium  | `L_s88_short ]
              or_undefined -> unit)
          =
          fun (x2931 : 'tags this) ->
            fun
              (x2932 :
                [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
                | `L_s88_short ] or_undefined)
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2931) "dateStyle"
                (or_undefined_to_js
                   (fun
                      (x2933 :
                        [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
                        | `L_s88_short ])
                      ->
                      match x2933 with
                      | `L_s43_full -> Ojs.string_to_js "full"
                      | `L_s55_long -> Ojs.string_to_js "long"
                      | `L_s59_medium -> Ojs.string_to_js "medium"
                      | `L_s88_short -> Ojs.string_to_js "short") x2932)
        let (get_timeStyle :
          'tags this ->
            [ `L_s43_full  | `L_s55_long  | `L_s59_medium  | `L_s88_short ]
              or_undefined)
          =
          fun (x2935 : 'tags this) ->
            or_undefined_of_js
              (fun (x2937 : Ojs.t) ->
                 let x2938 = x2937 in
                 match Ojs.string_of_js x2938 with
                 | "full" -> `L_s43_full
                 | "long" -> `L_s55_long
                 | "medium" -> `L_s59_medium
                 | "short" -> `L_s88_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2935) "timeStyle")
        let (set_timeStyle :
          'tags this ->
            [ `L_s43_full  | `L_s55_long  | `L_s59_medium  | `L_s88_short ]
              or_undefined -> unit)
          =
          fun (x2939 : 'tags this) ->
            fun
              (x2940 :
                [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
                | `L_s88_short ] or_undefined)
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2939) "timeStyle"
                (or_undefined_to_js
                   (fun
                      (x2941 :
                        [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
                        | `L_s88_short ])
                      ->
                      match x2941 with
                      | `L_s43_full -> Ojs.string_to_js "full"
                      | `L_s55_long -> Ojs.string_to_js "long"
                      | `L_s59_medium -> Ojs.string_to_js "medium"
                      | `L_s88_short -> Ojs.string_to_js "short") x2940)
        let (get_dayPeriod :
          'tags this ->
            [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined)
          =
          fun (x2943 : 'tags this) ->
            or_undefined_of_js
              (fun (x2945 : Ojs.t) ->
                 let x2946 = x2945 in
                 match Ojs.string_of_js x2946 with
                 | "long" -> `L_s55_long
                 | "narrow" -> `L_s67_narrow
                 | "short" -> `L_s88_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2943) "dayPeriod")
        let (set_dayPeriod :
          'tags this ->
            [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined ->
              unit)
          =
          fun (x2947 : 'tags this) ->
            fun
              (x2948 :
                [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined)
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2947) "dayPeriod"
                (or_undefined_to_js
                   (fun
                      (x2949 :
                        [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ])
                      ->
                      match x2949 with
                      | `L_s55_long -> Ojs.string_to_js "long"
                      | `L_s67_narrow -> Ojs.string_to_js "narrow"
                      | `L_s88_short -> Ojs.string_to_js "short") x2948)
        let (get_fractionalSecondDigits :
          'tags this -> [ `L_n_0  | `L_n_1  | `L_n_2  | `L_n_3 ] or_undefined)
          =
          fun (x2951 : 'tags this) ->
            or_undefined_of_js
              (fun (x2953 : Ojs.t) ->
                 let x2954 = x2953 in
                 match Ojs.int_of_js x2954 with
                 | 0 -> `L_n_0
                 | 1 -> `L_n_1
                 | 2 -> `L_n_2
                 | 3 -> `L_n_3
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2951)
                 "fractionalSecondDigits")
        let (set_fractionalSecondDigits :
          'tags this ->
            [ `L_n_0  | `L_n_1  | `L_n_2  | `L_n_3 ] or_undefined -> unit)
          =
          fun (x2955 : 'tags this) ->
            fun
              (x2956 : [ `L_n_0  | `L_n_1  | `L_n_2  | `L_n_3 ] or_undefined)
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2955)
                "fractionalSecondDigits"
                (or_undefined_to_js
                   (fun (x2957 : [ `L_n_0  | `L_n_1  | `L_n_2  | `L_n_3 ]) ->
                      match x2957 with
                      | `L_n_0 -> Ojs.int_to_js 0
                      | `L_n_1 -> Ojs.int_to_js 1
                      | `L_n_2 -> Ojs.int_to_js 2
                      | `L_n_3 -> Ojs.int_to_js 3) x2956)
        let (get_calendar : 'tags this -> string or_undefined) =
          fun (x2959 : 'tags this) ->
            or_undefined_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2959) "calendar")
        let (set_calendar : 'tags this -> string or_undefined -> unit) =
          fun (x2962 : 'tags this) ->
            fun (x2963 : string or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2962) "calendar"
                (or_undefined_to_js Ojs.string_to_js x2963)
        let (get_dayPeriod' :
          'tags this ->
            [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined)
          =
          fun (x2966 : 'tags this) ->
            or_undefined_of_js
              (fun (x2968 : Ojs.t) ->
                 let x2969 = x2968 in
                 match Ojs.string_of_js x2969 with
                 | "long" -> `L_s55_long
                 | "narrow" -> `L_s67_narrow
                 | "short" -> `L_s88_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2966) "dayPeriod")
        let (set_dayPeriod' :
          'tags this ->
            [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined ->
              unit)
          =
          fun (x2970 : 'tags this) ->
            fun
              (x2971 :
                [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined)
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2970) "dayPeriod"
                (or_undefined_to_js
                   (fun
                      (x2972 :
                        [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ])
                      ->
                      match x2972 with
                      | `L_s55_long -> Ojs.string_to_js "long"
                      | `L_s67_narrow -> Ojs.string_to_js "narrow"
                      | `L_s88_short -> Ojs.string_to_js "short") x2971)
        let (get_numberingSystem : 'tags this -> string or_undefined) =
          fun (x2974 : 'tags this) ->
            or_undefined_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2974)
                 "numberingSystem")
        let (set_numberingSystem : 'tags this -> string or_undefined -> unit)
          =
          fun (x2977 : 'tags this) ->
            fun (x2978 : string or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2977)
                "numberingSystem" (or_undefined_to_js Ojs.string_to_js x2978)
        let (get_dateStyle' :
          'tags this ->
            [ `L_s43_full  | `L_s55_long  | `L_s59_medium  | `L_s88_short ]
              or_undefined)
          =
          fun (x2981 : 'tags this) ->
            or_undefined_of_js
              (fun (x2983 : Ojs.t) ->
                 let x2984 = x2983 in
                 match Ojs.string_of_js x2984 with
                 | "full" -> `L_s43_full
                 | "long" -> `L_s55_long
                 | "medium" -> `L_s59_medium
                 | "short" -> `L_s88_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2981) "dateStyle")
        let (set_dateStyle' :
          'tags this ->
            [ `L_s43_full  | `L_s55_long  | `L_s59_medium  | `L_s88_short ]
              or_undefined -> unit)
          =
          fun (x2985 : 'tags this) ->
            fun
              (x2986 :
                [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
                | `L_s88_short ] or_undefined)
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2985) "dateStyle"
                (or_undefined_to_js
                   (fun
                      (x2987 :
                        [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
                        | `L_s88_short ])
                      ->
                      match x2987 with
                      | `L_s43_full -> Ojs.string_to_js "full"
                      | `L_s55_long -> Ojs.string_to_js "long"
                      | `L_s59_medium -> Ojs.string_to_js "medium"
                      | `L_s88_short -> Ojs.string_to_js "short") x2986)
        let (get_timeStyle' :
          'tags this ->
            [ `L_s43_full  | `L_s55_long  | `L_s59_medium  | `L_s88_short ]
              or_undefined)
          =
          fun (x2989 : 'tags this) ->
            or_undefined_of_js
              (fun (x2991 : Ojs.t) ->
                 let x2992 = x2991 in
                 match Ojs.string_of_js x2992 with
                 | "full" -> `L_s43_full
                 | "long" -> `L_s55_long
                 | "medium" -> `L_s59_medium
                 | "short" -> `L_s88_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2989) "timeStyle")
        let (set_timeStyle' :
          'tags this ->
            [ `L_s43_full  | `L_s55_long  | `L_s59_medium  | `L_s88_short ]
              or_undefined -> unit)
          =
          fun (x2993 : 'tags this) ->
            fun
              (x2994 :
                [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
                | `L_s88_short ] or_undefined)
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2993) "timeStyle"
                (or_undefined_to_js
                   (fun
                      (x2995 :
                        [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
                        | `L_s88_short ])
                      ->
                      match x2995 with
                      | `L_s43_full -> Ojs.string_to_js "full"
                      | `L_s55_long -> Ojs.string_to_js "long"
                      | `L_s59_medium -> Ojs.string_to_js "medium"
                      | `L_s88_short -> Ojs.string_to_js "short") x2994)
        let (get_hourCycle :
          'tags this ->
            [ `L_s45_h11  | `L_s46_h12  | `L_s47_h23  | `L_s48_h24 ]
              or_undefined)
          =
          fun (x2997 : 'tags this) ->
            or_undefined_of_js
              (fun (x2999 : Ojs.t) ->
                 let x3000 = x2999 in
                 match Ojs.string_of_js x3000 with
                 | "h11" -> `L_s45_h11
                 | "h12" -> `L_s46_h12
                 | "h23" -> `L_s47_h23
                 | "h24" -> `L_s48_h24
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2997) "hourCycle")
        let (set_hourCycle :
          'tags this ->
            [ `L_s45_h11  | `L_s46_h12  | `L_s47_h23  | `L_s48_h24 ]
              or_undefined -> unit)
          =
          fun (x3001 : 'tags this) ->
            fun
              (x3002 :
                [ `L_s45_h11  | `L_s46_h12  | `L_s47_h23  | `L_s48_h24 ]
                  or_undefined)
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3001) "hourCycle"
                (or_undefined_to_js
                   (fun
                      (x3003 :
                        [ `L_s45_h11  | `L_s46_h12  | `L_s47_h23 
                        | `L_s48_h24 ])
                      ->
                      match x3003 with
                      | `L_s45_h11 -> Ojs.string_to_js "h11"
                      | `L_s46_h12 -> Ojs.string_to_js "h12"
                      | `L_s47_h23 -> Ojs.string_to_js "h23"
                      | `L_s48_h24 -> Ojs.string_to_js "h24") x3002)
        let (get_localeMatcher :
          'tags this -> [ `L_s24_best_fit  | `L_s56_lookup ] or_undefined) =
          fun (x3005 : 'tags this) ->
            or_undefined_of_js
              (fun (x3007 : Ojs.t) ->
                 let x3008 = x3007 in
                 match Ojs.string_of_js x3008 with
                 | "best fit" -> `L_s24_best_fit
                 | "lookup" -> `L_s56_lookup
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3005)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this ->
            [ `L_s24_best_fit  | `L_s56_lookup ] or_undefined -> unit)
          =
          fun (x3009 : 'tags this) ->
            fun (x3010 : [ `L_s24_best_fit  | `L_s56_lookup ] or_undefined)
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3009) "localeMatcher"
                (or_undefined_to_js
                   (fun (x3011 : [ `L_s24_best_fit  | `L_s56_lookup ]) ->
                      match x3011 with
                      | `L_s24_best_fit -> Ojs.string_to_js "best fit"
                      | `L_s56_lookup -> Ojs.string_to_js "lookup") x3010)
        let (get_weekday :
          'tags this ->
            [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined)
          =
          fun (x3013 : 'tags this) ->
            or_undefined_of_js
              (fun (x3015 : Ojs.t) ->
                 let x3016 = x3015 in
                 match Ojs.string_of_js x3016 with
                 | "long" -> `L_s55_long
                 | "narrow" -> `L_s67_narrow
                 | "short" -> `L_s88_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3013) "weekday")
        let (set_weekday :
          'tags this ->
            [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined ->
              unit)
          =
          fun (x3017 : 'tags this) ->
            fun
              (x3018 :
                [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined)
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3017) "weekday"
                (or_undefined_to_js
                   (fun
                      (x3019 :
                        [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ])
                      ->
                      match x3019 with
                      | `L_s55_long -> Ojs.string_to_js "long"
                      | `L_s67_narrow -> Ojs.string_to_js "narrow"
                      | `L_s88_short -> Ojs.string_to_js "short") x3018)
        let (get_era :
          'tags this ->
            [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined)
          =
          fun (x3021 : 'tags this) ->
            or_undefined_of_js
              (fun (x3023 : Ojs.t) ->
                 let x3024 = x3023 in
                 match Ojs.string_of_js x3024 with
                 | "long" -> `L_s55_long
                 | "narrow" -> `L_s67_narrow
                 | "short" -> `L_s88_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3021) "era")
        let (set_era :
          'tags this ->
            [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined ->
              unit)
          =
          fun (x3025 : 'tags this) ->
            fun
              (x3026 :
                [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] or_undefined)
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3025) "era"
                (or_undefined_to_js
                   (fun
                      (x3027 :
                        [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ])
                      ->
                      match x3027 with
                      | `L_s55_long -> Ojs.string_to_js "long"
                      | `L_s67_narrow -> Ojs.string_to_js "narrow"
                      | `L_s88_short -> Ojs.string_to_js "short") x3026)
        let (get_year :
          'tags this -> [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined) =
          fun (x3029 : 'tags this) ->
            or_undefined_of_js
              (fun (x3031 : Ojs.t) ->
                 let x3032 = x3031 in
                 match Ojs.string_of_js x3032 with
                 | "2-digit" -> `L_s0_2_digit
                 | "numeric" -> `L_s72_numeric
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3029) "year")
        let (set_year :
          'tags this ->
            [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined -> unit)
          =
          fun (x3033 : 'tags this) ->
            fun (x3034 : [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3033) "year"
                (or_undefined_to_js
                   (fun (x3035 : [ `L_s0_2_digit  | `L_s72_numeric ]) ->
                      match x3035 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit"
                      | `L_s72_numeric -> Ojs.string_to_js "numeric") x3034)
        let (get_month :
          'tags this ->
            [ `L_s0_2_digit  | `L_s55_long  | `L_s67_narrow 
            | `L_s72_numeric  | `L_s88_short ] or_undefined)
          =
          fun (x3037 : 'tags this) ->
            or_undefined_of_js
              (fun (x3039 : Ojs.t) ->
                 let x3040 = x3039 in
                 match Ojs.string_of_js x3040 with
                 | "2-digit" -> `L_s0_2_digit
                 | "long" -> `L_s55_long
                 | "narrow" -> `L_s67_narrow
                 | "numeric" -> `L_s72_numeric
                 | "short" -> `L_s88_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3037) "month")
        let (set_month :
          'tags this ->
            [ `L_s0_2_digit  | `L_s55_long  | `L_s67_narrow 
            | `L_s72_numeric  | `L_s88_short ] or_undefined -> unit)
          =
          fun (x3041 : 'tags this) ->
            fun
              (x3042 :
                [ `L_s0_2_digit  | `L_s55_long  | `L_s67_narrow 
                | `L_s72_numeric  | `L_s88_short ] or_undefined)
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3041) "month"
                (or_undefined_to_js
                   (fun
                      (x3043 :
                        [ `L_s0_2_digit  | `L_s55_long  | `L_s67_narrow 
                        | `L_s72_numeric  | `L_s88_short ])
                      ->
                      match x3043 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit"
                      | `L_s55_long -> Ojs.string_to_js "long"
                      | `L_s67_narrow -> Ojs.string_to_js "narrow"
                      | `L_s72_numeric -> Ojs.string_to_js "numeric"
                      | `L_s88_short -> Ojs.string_to_js "short") x3042)
        let (get_day :
          'tags this -> [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined) =
          fun (x3045 : 'tags this) ->
            or_undefined_of_js
              (fun (x3047 : Ojs.t) ->
                 let x3048 = x3047 in
                 match Ojs.string_of_js x3048 with
                 | "2-digit" -> `L_s0_2_digit
                 | "numeric" -> `L_s72_numeric
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3045) "day")
        let (set_day :
          'tags this ->
            [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined -> unit)
          =
          fun (x3049 : 'tags this) ->
            fun (x3050 : [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3049) "day"
                (or_undefined_to_js
                   (fun (x3051 : [ `L_s0_2_digit  | `L_s72_numeric ]) ->
                      match x3051 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit"
                      | `L_s72_numeric -> Ojs.string_to_js "numeric") x3050)
        let (get_hour :
          'tags this -> [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined) =
          fun (x3053 : 'tags this) ->
            or_undefined_of_js
              (fun (x3055 : Ojs.t) ->
                 let x3056 = x3055 in
                 match Ojs.string_of_js x3056 with
                 | "2-digit" -> `L_s0_2_digit
                 | "numeric" -> `L_s72_numeric
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3053) "hour")
        let (set_hour :
          'tags this ->
            [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined -> unit)
          =
          fun (x3057 : 'tags this) ->
            fun (x3058 : [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3057) "hour"
                (or_undefined_to_js
                   (fun (x3059 : [ `L_s0_2_digit  | `L_s72_numeric ]) ->
                      match x3059 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit"
                      | `L_s72_numeric -> Ojs.string_to_js "numeric") x3058)
        let (get_minute :
          'tags this -> [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined) =
          fun (x3061 : 'tags this) ->
            or_undefined_of_js
              (fun (x3063 : Ojs.t) ->
                 let x3064 = x3063 in
                 match Ojs.string_of_js x3064 with
                 | "2-digit" -> `L_s0_2_digit
                 | "numeric" -> `L_s72_numeric
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3061) "minute")
        let (set_minute :
          'tags this ->
            [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined -> unit)
          =
          fun (x3065 : 'tags this) ->
            fun (x3066 : [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3065) "minute"
                (or_undefined_to_js
                   (fun (x3067 : [ `L_s0_2_digit  | `L_s72_numeric ]) ->
                      match x3067 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit"
                      | `L_s72_numeric -> Ojs.string_to_js "numeric") x3066)
        let (get_second :
          'tags this -> [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined) =
          fun (x3069 : 'tags this) ->
            or_undefined_of_js
              (fun (x3071 : Ojs.t) ->
                 let x3072 = x3071 in
                 match Ojs.string_of_js x3072 with
                 | "2-digit" -> `L_s0_2_digit
                 | "numeric" -> `L_s72_numeric
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3069) "second")
        let (set_second :
          'tags this ->
            [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined -> unit)
          =
          fun (x3073 : 'tags this) ->
            fun (x3074 : [ `L_s0_2_digit  | `L_s72_numeric ] or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3073) "second"
                (or_undefined_to_js
                   (fun (x3075 : [ `L_s0_2_digit  | `L_s72_numeric ]) ->
                      match x3075 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit"
                      | `L_s72_numeric -> Ojs.string_to_js "numeric") x3074)
        let (get_timeZoneName :
          'tags this -> [ `L_s55_long  | `L_s88_short ] or_undefined) =
          fun (x3077 : 'tags this) ->
            or_undefined_of_js
              (fun (x3079 : Ojs.t) ->
                 let x3080 = x3079 in
                 match Ojs.string_of_js x3080 with
                 | "long" -> `L_s55_long
                 | "short" -> `L_s88_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3077) "timeZoneName")
        let (set_timeZoneName :
          'tags this -> [ `L_s55_long  | `L_s88_short ] or_undefined -> unit)
          =
          fun (x3081 : 'tags this) ->
            fun (x3082 : [ `L_s55_long  | `L_s88_short ] or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3081) "timeZoneName"
                (or_undefined_to_js
                   (fun (x3083 : [ `L_s55_long  | `L_s88_short ]) ->
                      match x3083 with
                      | `L_s55_long -> Ojs.string_to_js "long"
                      | `L_s88_short -> Ojs.string_to_js "short") x3082)
        let (get_formatMatcher' :
          'tags this -> [ `L_s23_basic  | `L_s24_best_fit ] or_undefined) =
          fun (x3085 : 'tags this) ->
            or_undefined_of_js
              (fun (x3087 : Ojs.t) ->
                 let x3088 = x3087 in
                 match Ojs.string_of_js x3088 with
                 | "basic" -> `L_s23_basic
                 | "best fit" -> `L_s24_best_fit
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3085)
                 "formatMatcher")
        let (set_formatMatcher' :
          'tags this ->
            [ `L_s23_basic  | `L_s24_best_fit ] or_undefined -> unit)
          =
          fun (x3089 : 'tags this) ->
            fun (x3090 : [ `L_s23_basic  | `L_s24_best_fit ] or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3089) "formatMatcher"
                (or_undefined_to_js
                   (fun (x3091 : [ `L_s23_basic  | `L_s24_best_fit ]) ->
                      match x3091 with
                      | `L_s23_basic -> Ojs.string_to_js "basic"
                      | `L_s24_best_fit -> Ojs.string_to_js "best fit") x3090)
        let (get_hour12 : 'tags this -> bool or_undefined) =
          fun (x3093 : 'tags this) ->
            or_undefined_of_js Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3093) "hour12")
        let (set_hour12 : 'tags this -> bool or_undefined -> unit) =
          fun (x3096 : 'tags this) ->
            fun (x3097 : bool or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3096) "hour12"
                (or_undefined_to_js Ojs.bool_to_js x3097)
        let (get_timeZone : 'tags this -> string or_undefined) =
          fun (x3100 : 'tags this) ->
            or_undefined_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3100) "timeZone")
        let (set_timeZone : 'tags this -> string or_undefined -> unit) =
          fun (x3103 : 'tags this) ->
            fun (x3104 : string or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3103) "timeZone"
                (or_undefined_to_js Ojs.string_to_js x3104)
        let (create :
          ?formatMatcher:[ `L_s23_basic  | `L_s24_best_fit ] ->
            ?dateStyle:[ `L_s43_full  | `L_s55_long  | `L_s59_medium 
                       | `L_s88_short ]
              ->
              ?timeStyle:[ `L_s43_full  | `L_s55_long  | `L_s59_medium 
                         | `L_s88_short ]
                ->
                ?dayPeriod:[ `L_s55_long  | `L_s67_narrow  | `L_s88_short ]
                  ->
                  ?fractionalSecondDigits:[ `L_n_0  | `L_n_1  | `L_n_2 
                                          | `L_n_3 ]
                    ->
                    ?calendar:string ->
                      ?dayPeriod:[ `L_s55_long  | `L_s67_narrow 
                                 | `L_s88_short ]
                        ->
                        ?numberingSystem:string ->
                          ?dateStyle:[ `L_s43_full  | `L_s55_long 
                                     | `L_s59_medium  | `L_s88_short ]
                            ->
                            ?timeStyle:[ `L_s43_full  | `L_s55_long 
                                       | `L_s59_medium  | `L_s88_short ]
                              ->
                              ?hourCycle:[ `L_s45_h11  | `L_s46_h12 
                                         | `L_s47_h23  | `L_s48_h24 ]
                                ->
                                ?localeMatcher:[ `L_s24_best_fit 
                                               | `L_s56_lookup ]
                                  ->
                                  ?weekday:[ `L_s55_long  | `L_s67_narrow 
                                           | `L_s88_short ]
                                    ->
                                    ?era:[ `L_s55_long  | `L_s67_narrow 
                                         | `L_s88_short ]
                                      ->
                                      ?year:[ `L_s0_2_digit 
                                            | `L_s72_numeric ]
                                        ->
                                        ?month:[ `L_s0_2_digit 
                                               | `L_s55_long 
                                               | `L_s67_narrow 
                                               | `L_s72_numeric 
                                               | `L_s88_short ]
                                          ->
                                          ?day:[ `L_s0_2_digit 
                                               | `L_s72_numeric ]
                                            ->
                                            ?hour:[ `L_s0_2_digit 
                                                  | `L_s72_numeric ]
                                              ->
                                              ?minute:[ `L_s0_2_digit 
                                                      | `L_s72_numeric ]
                                                ->
                                                ?second:[ `L_s0_2_digit 
                                                        | `L_s72_numeric ]
                                                  ->
                                                  ?timeZoneName:[
                                                                  `L_s55_long 
                                                                | `L_s88_short
                                                                    ]
                                                    ->
                                                    ?formatMatcher:[
                                                                    `L_s23_basic
                                                                     | 
                                                                    `L_s24_best_fit
                                                                    ]
                                                      ->
                                                      ?hour12:bool ->
                                                        ?timeZone:string ->
                                                          unit -> t)
          =
          fun
            ?formatMatcher:(x3107 :
                             [ `L_s23_basic  | `L_s24_best_fit ] option)
            ->
            fun
              ?dateStyle:(x3108 :
                           [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
                           | `L_s88_short ] option)
              ->
              fun
                ?timeStyle:(x3109 :
                             [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
                             | `L_s88_short ] option)
                ->
                fun
                  ?dayPeriod:(x3110 :
                               [ `L_s55_long  | `L_s67_narrow 
                               | `L_s88_short ] option)
                  ->
                  fun
                    ?fractionalSecondDigits:(x3111 :
                                              [ `L_n_0  | `L_n_1  | `L_n_2 
                                              | `L_n_3 ] option)
                    ->
                    fun ?calendar:(x3112 : string option) ->
                      fun
                        ?dayPeriod:(x3113 :
                                     [ `L_s55_long  | `L_s67_narrow 
                                     | `L_s88_short ] option)
                        ->
                        fun ?numberingSystem:(x3114 : string option) ->
                          fun
                            ?dateStyle:(x3115 :
                                         [ `L_s43_full  | `L_s55_long 
                                         | `L_s59_medium  | `L_s88_short ]
                                           option)
                            ->
                            fun
                              ?timeStyle:(x3116 :
                                           [ `L_s43_full  | `L_s55_long 
                                           | `L_s59_medium  | `L_s88_short ]
                                             option)
                              ->
                              fun
                                ?hourCycle:(x3117 :
                                             [ `L_s45_h11  | `L_s46_h12 
                                             | `L_s47_h23  | `L_s48_h24 ]
                                               option)
                                ->
                                fun
                                  ?localeMatcher:(x3118 :
                                                   [ `L_s24_best_fit 
                                                   | `L_s56_lookup ] option)
                                  ->
                                  fun
                                    ?weekday:(x3119 :
                                               [ `L_s55_long 
                                               | `L_s67_narrow 
                                               | `L_s88_short ] option)
                                    ->
                                    fun
                                      ?era:(x3120 :
                                             [ `L_s55_long  | `L_s67_narrow 
                                             | `L_s88_short ] option)
                                      ->
                                      fun
                                        ?year:(x3121 :
                                                [ `L_s0_2_digit 
                                                | `L_s72_numeric ] option)
                                        ->
                                        fun
                                          ?month:(x3122 :
                                                   [ `L_s0_2_digit 
                                                   | `L_s55_long 
                                                   | `L_s67_narrow 
                                                   | `L_s72_numeric 
                                                   | `L_s88_short ] option)
                                          ->
                                          fun
                                            ?day:(x3123 :
                                                   [ `L_s0_2_digit 
                                                   | `L_s72_numeric ] option)
                                            ->
                                            fun
                                              ?hour:(x3124 :
                                                      [ `L_s0_2_digit 
                                                      | `L_s72_numeric ]
                                                        option)
                                              ->
                                              fun
                                                ?minute:(x3125 :
                                                          [ `L_s0_2_digit 
                                                          | `L_s72_numeric ]
                                                            option)
                                                ->
                                                fun
                                                  ?second:(x3126 :
                                                            [ `L_s0_2_digit 
                                                            | `L_s72_numeric ]
                                                              option)
                                                  ->
                                                  fun
                                                    ?timeZoneName:(x3127 :
                                                                    [
                                                                    `L_s55_long
                                                                     | 
                                                                    `L_s88_short
                                                                    ] option)
                                                    ->
                                                    fun
                                                      ?formatMatcher:
                                                      (x3128 :
                                                        [ `L_s23_basic 
                                                        | `L_s24_best_fit ]
                                                          option)
                                                      ->
                                                      fun
                                                        ?hour12:(x3129 :
                                                                  bool option)
                                                        ->
                                                        fun
                                                          ?timeZone:(x3130 :
                                                                    string
                                                                    option)
                                                          ->
                                                          fun () ->
                                                            let x3131 =
                                                              Ojs.empty_obj
                                                                () in
                                                            (match x3107 with
                                                             | Some x3155 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3131
                                                                   "formatMatcher"
                                                                   (match x3155
                                                                    with
                                                                    | 
                                                                    `L_s23_basic
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "basic"
                                                                    | 
                                                                    `L_s24_best_fit
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "best fit")
                                                             | None -> ());
                                                            (match x3108 with
                                                             | Some x3154 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3131
                                                                   "dateStyle"
                                                                   (match x3154
                                                                    with
                                                                    | 
                                                                    `L_s43_full
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "full"
                                                                    | 
                                                                    `L_s55_long
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "long"
                                                                    | 
                                                                    `L_s59_medium
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "medium"
                                                                    | 
                                                                    `L_s88_short
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "short")
                                                             | None -> ());
                                                            (match x3109 with
                                                             | Some x3153 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3131
                                                                   "timeStyle"
                                                                   (match x3153
                                                                    with
                                                                    | 
                                                                    `L_s43_full
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "full"
                                                                    | 
                                                                    `L_s55_long
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "long"
                                                                    | 
                                                                    `L_s59_medium
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "medium"
                                                                    | 
                                                                    `L_s88_short
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "short")
                                                             | None -> ());
                                                            (match x3110 with
                                                             | Some x3152 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3131
                                                                   "dayPeriod"
                                                                   (match x3152
                                                                    with
                                                                    | 
                                                                    `L_s55_long
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "long"
                                                                    | 
                                                                    `L_s67_narrow
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "narrow"
                                                                    | 
                                                                    `L_s88_short
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "short")
                                                             | None -> ());
                                                            (match x3111 with
                                                             | Some x3151 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3131
                                                                   "fractionalSecondDigits"
                                                                   (match x3151
                                                                    with
                                                                    | 
                                                                    `L_n_0 ->
                                                                    Ojs.int_to_js
                                                                    0
                                                                    | 
                                                                    `L_n_1 ->
                                                                    Ojs.int_to_js
                                                                    1
                                                                    | 
                                                                    `L_n_2 ->
                                                                    Ojs.int_to_js
                                                                    2
                                                                    | 
                                                                    `L_n_3 ->
                                                                    Ojs.int_to_js
                                                                    3)
                                                             | None -> ());
                                                            (match x3112 with
                                                             | Some x3150 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3131
                                                                   "calendar"
                                                                   (Ojs.string_to_js
                                                                    x3150)
                                                             | None -> ());
                                                            (match x3113 with
                                                             | Some x3149 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3131
                                                                   "dayPeriod"
                                                                   (match x3149
                                                                    with
                                                                    | 
                                                                    `L_s55_long
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "long"
                                                                    | 
                                                                    `L_s67_narrow
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "narrow"
                                                                    | 
                                                                    `L_s88_short
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "short")
                                                             | None -> ());
                                                            (match x3114 with
                                                             | Some x3148 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3131
                                                                   "numberingSystem"
                                                                   (Ojs.string_to_js
                                                                    x3148)
                                                             | None -> ());
                                                            (match x3115 with
                                                             | Some x3147 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3131
                                                                   "dateStyle"
                                                                   (match x3147
                                                                    with
                                                                    | 
                                                                    `L_s43_full
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "full"
                                                                    | 
                                                                    `L_s55_long
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "long"
                                                                    | 
                                                                    `L_s59_medium
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "medium"
                                                                    | 
                                                                    `L_s88_short
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "short")
                                                             | None -> ());
                                                            (match x3116 with
                                                             | Some x3146 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3131
                                                                   "timeStyle"
                                                                   (match x3146
                                                                    with
                                                                    | 
                                                                    `L_s43_full
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "full"
                                                                    | 
                                                                    `L_s55_long
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "long"
                                                                    | 
                                                                    `L_s59_medium
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "medium"
                                                                    | 
                                                                    `L_s88_short
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "short")
                                                             | None -> ());
                                                            (match x3117 with
                                                             | Some x3145 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3131
                                                                   "hourCycle"
                                                                   (match x3145
                                                                    with
                                                                    | 
                                                                    `L_s45_h11
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "h11"
                                                                    | 
                                                                    `L_s46_h12
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "h12"
                                                                    | 
                                                                    `L_s47_h23
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "h23"
                                                                    | 
                                                                    `L_s48_h24
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "h24")
                                                             | None -> ());
                                                            (match x3118 with
                                                             | Some x3144 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3131
                                                                   "localeMatcher"
                                                                   (match x3144
                                                                    with
                                                                    | 
                                                                    `L_s24_best_fit
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "best fit"
                                                                    | 
                                                                    `L_s56_lookup
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "lookup")
                                                             | None -> ());
                                                            (match x3119 with
                                                             | Some x3143 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3131
                                                                   "weekday"
                                                                   (match x3143
                                                                    with
                                                                    | 
                                                                    `L_s55_long
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "long"
                                                                    | 
                                                                    `L_s67_narrow
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "narrow"
                                                                    | 
                                                                    `L_s88_short
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "short")
                                                             | None -> ());
                                                            (match x3120 with
                                                             | Some x3142 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3131
                                                                   "era"
                                                                   (match x3142
                                                                    with
                                                                    | 
                                                                    `L_s55_long
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "long"
                                                                    | 
                                                                    `L_s67_narrow
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "narrow"
                                                                    | 
                                                                    `L_s88_short
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "short")
                                                             | None -> ());
                                                            (match x3121 with
                                                             | Some x3141 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3131
                                                                   "year"
                                                                   (match x3141
                                                                    with
                                                                    | 
                                                                    `L_s0_2_digit
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "2-digit"
                                                                    | 
                                                                    `L_s72_numeric
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "numeric")
                                                             | None -> ());
                                                            (match x3122 with
                                                             | Some x3140 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3131
                                                                   "month"
                                                                   (match x3140
                                                                    with
                                                                    | 
                                                                    `L_s0_2_digit
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "2-digit"
                                                                    | 
                                                                    `L_s55_long
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "long"
                                                                    | 
                                                                    `L_s67_narrow
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "narrow"
                                                                    | 
                                                                    `L_s72_numeric
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "numeric"
                                                                    | 
                                                                    `L_s88_short
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "short")
                                                             | None -> ());
                                                            (match x3123 with
                                                             | Some x3139 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3131
                                                                   "day"
                                                                   (match x3139
                                                                    with
                                                                    | 
                                                                    `L_s0_2_digit
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "2-digit"
                                                                    | 
                                                                    `L_s72_numeric
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "numeric")
                                                             | None -> ());
                                                            (match x3124 with
                                                             | Some x3138 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3131
                                                                   "hour"
                                                                   (match x3138
                                                                    with
                                                                    | 
                                                                    `L_s0_2_digit
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "2-digit"
                                                                    | 
                                                                    `L_s72_numeric
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "numeric")
                                                             | None -> ());
                                                            (match x3125 with
                                                             | Some x3137 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3131
                                                                   "minute"
                                                                   (match x3137
                                                                    with
                                                                    | 
                                                                    `L_s0_2_digit
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "2-digit"
                                                                    | 
                                                                    `L_s72_numeric
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "numeric")
                                                             | None -> ());
                                                            (match x3126 with
                                                             | Some x3136 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3131
                                                                   "second"
                                                                   (match x3136
                                                                    with
                                                                    | 
                                                                    `L_s0_2_digit
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "2-digit"
                                                                    | 
                                                                    `L_s72_numeric
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "numeric")
                                                             | None -> ());
                                                            (match x3127 with
                                                             | Some x3135 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3131
                                                                   "timeZoneName"
                                                                   (match x3135
                                                                    with
                                                                    | 
                                                                    `L_s55_long
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "long"
                                                                    | 
                                                                    `L_s88_short
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "short")
                                                             | None -> ());
                                                            (match x3128 with
                                                             | Some x3134 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3131
                                                                   "formatMatcher"
                                                                   (match x3134
                                                                    with
                                                                    | 
                                                                    `L_s23_basic
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "basic"
                                                                    | 
                                                                    `L_s24_best_fit
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "best fit")
                                                             | None -> ());
                                                            (match x3129 with
                                                             | Some x3133 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3131
                                                                   "hour12"
                                                                   (Ojs.bool_to_js
                                                                    x3133)
                                                             | None -> ());
                                                            (match x3130 with
                                                             | Some x3132 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3131
                                                                   "timeZone"
                                                                   (Ojs.string_to_js
                                                                    x3132)
                                                             | None -> ());
                                                            t_of_js x3131
        let cast_from = Obj.magic
      end
    module DateTimeFormat =
      struct
        type t = [ `Intl_DateTimeFormat ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x3157 : Ojs.t) -> t_of_js x3157
        and t_0_to_js : t_0 -> Ojs.t = fun (x3156 : t) -> t_to_js x3156
        type tags = [ `Intl_DateTimeFormat ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_DateTimeFormat ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x3160 : Ojs.t) -> intf_of_js __tags_of_js x3160
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x3158 : __tags intf) -> intf_to_js __tags_to_js x3158
        let (formatToParts :
          'tags this ->
            ?date:Date.t or_number -> unit -> DateTimeFormatPart.t list)
          =
          fun (x3166 : 'tags this) ->
            fun ?date:(x3162 : Date.t or_number option) ->
              fun () ->
                Ojs.list_of_js DateTimeFormatPart.t_of_js
                  (let x3168 = this_to_js Obj.magic x3166 in
                   Ojs.call (Ojs.get_prop_ascii x3168 "formatToParts")
                     "apply"
                     [|x3168;((let x3163 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x3162 with
                                | Some x3164 ->
                                    ignore
                                      (Ojs.call x3163 "push"
                                         [|(or_number_to_js Date.t_to_js
                                              x3164)|])
                                | None -> ());
                               x3163))|])
        let (format : 'tags this -> ?date:Date.t or_number -> unit -> string)
          =
          fun (x3174 : 'tags this) ->
            fun ?date:(x3170 : Date.t or_number option) ->
              fun () ->
                Ojs.string_of_js
                  (let x3176 = this_to_js Obj.magic x3174 in
                   Ojs.call (Ojs.get_prop_ascii x3176 "format") "apply"
                     [|x3176;((let x3171 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x3170 with
                                | Some x3172 ->
                                    ignore
                                      (Ojs.call x3171 "push"
                                         [|(or_number_to_js Date.t_to_js
                                              x3172)|])
                                | None -> ());
                               x3171))|])
        let (resolvedOptions : 'tags this -> ResolvedDateTimeFormatOptions.t)
          =
          fun (x3177 : 'tags this) ->
            ResolvedDateTimeFormatOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x3177) "resolvedOptions" [||])
        let cast_from = Obj.magic
        let (create :
          ?locales:string list or_string ->
            ?options:DateTimeFormatOptions.t -> unit -> t)
          =
          fun ?locales:(x3179 : string list or_string option) ->
            fun ?options:(x3180 : DateTimeFormatOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl")
                        "DateTimeFormat")
                     (let x3181 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x3179 with
                       | Some x3183 ->
                           ignore
                             (Ojs.call x3181 "push"
                                [|(or_string_to_js
                                     (fun (x3184 : string list) ->
                                        Ojs.list_to_js Ojs.string_to_js x3184)
                                     x3183)|])
                       | None -> ());
                      (match x3180 with
                       | Some x3182 ->
                           ignore
                             (Ojs.call x3181 "push"
                                [|(DateTimeFormatOptions.t_to_js x3182)|])
                       | None -> ());
                      x3181))
        let (invoke :
          ?locales:string list or_string ->
            ?options:DateTimeFormatOptions.t -> unit -> t)
          =
          fun ?locales:(x3186 : string list or_string option) ->
            fun ?options:(x3187 : DateTimeFormatOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl")
                        "DateTimeFormat") "apply"
                     [|Ojs.null;((let x3188 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  (match x3186 with
                                   | Some x3190 ->
                                       ignore
                                         (Ojs.call x3188 "push"
                                            [|(or_string_to_js
                                                 (fun (x3191 : string list)
                                                    ->
                                                    Ojs.list_to_js
                                                      Ojs.string_to_js x3191)
                                                 x3190)|])
                                   | None -> ());
                                  (match x3187 with
                                   | Some x3189 ->
                                       ignore
                                         (Ojs.call x3188 "push"
                                            [|(DateTimeFormatOptions.t_to_js
                                                 x3189)|])
                                   | None -> ());
                                  x3188))|])
        let (supportedLocalesOf :
          locales:string list or_string ->
            ?options:DateTimeFormatOptions.t -> unit -> string list)
          =
          fun ~locales:(x3193 : string list or_string) ->
            fun ?options:(x3194 : DateTimeFormatOptions.t option) ->
              fun () ->
                Ojs.list_of_js Ojs.string_of_js
                  (let x3199 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl")
                       "DateTimeFormat" in
                   Ojs.call (Ojs.get_prop_ascii x3199 "supportedLocalesOf")
                     "apply"
                     [|x3199;((let x3195 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3195 "push"
                                    [|(or_string_to_js
                                         (fun (x3197 : string list) ->
                                            Ojs.list_to_js Ojs.string_to_js
                                              x3197) x3193)|]);
                               (match x3194 with
                                | Some x3196 ->
                                    ignore
                                      (Ojs.call x3195 "push"
                                         [|(DateTimeFormatOptions.t_to_js
                                              x3196)|])
                                | None -> ());
                               x3195))|])
      end
    module ResolvedCollatorOptions =
      struct
        type t = [ `Intl_ResolvedCollatorOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x3202 : Ojs.t) -> t_of_js x3202
        and t_0_to_js : t_0 -> Ojs.t = fun (x3201 : t) -> t_to_js x3201
        type tags = [ `Intl_ResolvedCollatorOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_ResolvedCollatorOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x3205 : Ojs.t) -> intf_of_js __tags_of_js x3205
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x3203 : __tags intf) -> intf_to_js __tags_to_js x3203
        let (get_locale : 'tags this -> string) =
          fun (x3207 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3207) "locale")
        let (set_locale : 'tags this -> string -> unit) =
          fun (x3209 : 'tags this) ->
            fun (x3210 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3209) "locale"
                (Ojs.string_to_js x3210)
        let (get_usage : 'tags this -> string) =
          fun (x3212 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3212) "usage")
        let (set_usage : 'tags this -> string -> unit) =
          fun (x3214 : 'tags this) ->
            fun (x3215 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3214) "usage"
                (Ojs.string_to_js x3215)
        let (get_sensitivity : 'tags this -> string) =
          fun (x3217 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3217) "sensitivity")
        let (set_sensitivity : 'tags this -> string -> unit) =
          fun (x3219 : 'tags this) ->
            fun (x3220 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3219) "sensitivity"
                (Ojs.string_to_js x3220)
        let (get_ignorePunctuation : 'tags this -> bool) =
          fun (x3222 : 'tags this) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3222)
                 "ignorePunctuation")
        let (set_ignorePunctuation : 'tags this -> bool -> unit) =
          fun (x3224 : 'tags this) ->
            fun (x3225 : bool) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3224)
                "ignorePunctuation" (Ojs.bool_to_js x3225)
        let (get_collation : 'tags this -> string) =
          fun (x3227 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3227) "collation")
        let (set_collation : 'tags this -> string -> unit) =
          fun (x3229 : 'tags this) ->
            fun (x3230 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3229) "collation"
                (Ojs.string_to_js x3230)
        let (get_caseFirst : 'tags this -> string) =
          fun (x3232 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3232) "caseFirst")
        let (set_caseFirst : 'tags this -> string -> unit) =
          fun (x3234 : 'tags this) ->
            fun (x3235 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3234) "caseFirst"
                (Ojs.string_to_js x3235)
        let (get_numeric : 'tags this -> bool) =
          fun (x3237 : 'tags this) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3237) "numeric")
        let (set_numeric : 'tags this -> bool -> unit) =
          fun (x3239 : 'tags this) ->
            fun (x3240 : bool) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3239) "numeric"
                (Ojs.bool_to_js x3240)
        let (create :
          locale:string ->
            usage:string ->
              sensitivity:string ->
                ignorePunctuation:bool ->
                  collation:string ->
                    caseFirst:string -> numeric:bool -> unit -> t)
          =
          fun ~locale:(x3242 : string) ->
            fun ~usage:(x3243 : string) ->
              fun ~sensitivity:(x3244 : string) ->
                fun ~ignorePunctuation:(x3245 : bool) ->
                  fun ~collation:(x3246 : string) ->
                    fun ~caseFirst:(x3247 : string) ->
                      fun ~numeric:(x3248 : bool) ->
                        fun () ->
                          let x3249 = Ojs.empty_obj () in
                          Ojs.set_prop_ascii x3249 "locale"
                            (Ojs.string_to_js x3242);
                          Ojs.set_prop_ascii x3249 "usage"
                            (Ojs.string_to_js x3243);
                          Ojs.set_prop_ascii x3249 "sensitivity"
                            (Ojs.string_to_js x3244);
                          Ojs.set_prop_ascii x3249 "ignorePunctuation"
                            (Ojs.bool_to_js x3245);
                          Ojs.set_prop_ascii x3249 "collation"
                            (Ojs.string_to_js x3246);
                          Ojs.set_prop_ascii x3249 "caseFirst"
                            (Ojs.string_to_js x3247);
                          Ojs.set_prop_ascii x3249 "numeric"
                            (Ojs.bool_to_js x3248);
                          t_of_js x3249
        let cast_from = Obj.magic
      end
    module CollatorOptions =
      struct
        type t = [ `Intl_CollatorOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x3251 : Ojs.t) -> t_of_js x3251
        and t_0_to_js : t_0 -> Ojs.t = fun (x3250 : t) -> t_to_js x3250
        type tags = [ `Intl_CollatorOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_CollatorOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x3254 : Ojs.t) -> intf_of_js __tags_of_js x3254
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x3252 : __tags intf) -> intf_to_js __tags_to_js x3252
        let (get_usage : 'tags this -> string or_undefined) =
          fun (x3256 : 'tags this) ->
            or_undefined_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3256) "usage")
        let (set_usage : 'tags this -> string or_undefined -> unit) =
          fun (x3259 : 'tags this) ->
            fun (x3260 : string or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3259) "usage"
                (or_undefined_to_js Ojs.string_to_js x3260)
        let (get_localeMatcher : 'tags this -> string or_undefined) =
          fun (x3263 : 'tags this) ->
            or_undefined_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3263)
                 "localeMatcher")
        let (set_localeMatcher : 'tags this -> string or_undefined -> unit) =
          fun (x3266 : 'tags this) ->
            fun (x3267 : string or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3266) "localeMatcher"
                (or_undefined_to_js Ojs.string_to_js x3267)
        let (get_numeric : 'tags this -> bool or_undefined) =
          fun (x3270 : 'tags this) ->
            or_undefined_of_js Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3270) "numeric")
        let (set_numeric : 'tags this -> bool or_undefined -> unit) =
          fun (x3273 : 'tags this) ->
            fun (x3274 : bool or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3273) "numeric"
                (or_undefined_to_js Ojs.bool_to_js x3274)
        let (get_caseFirst : 'tags this -> string or_undefined) =
          fun (x3277 : 'tags this) ->
            or_undefined_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3277) "caseFirst")
        let (set_caseFirst : 'tags this -> string or_undefined -> unit) =
          fun (x3280 : 'tags this) ->
            fun (x3281 : string or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3280) "caseFirst"
                (or_undefined_to_js Ojs.string_to_js x3281)
        let (get_sensitivity : 'tags this -> string or_undefined) =
          fun (x3284 : 'tags this) ->
            or_undefined_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3284) "sensitivity")
        let (set_sensitivity : 'tags this -> string or_undefined -> unit) =
          fun (x3287 : 'tags this) ->
            fun (x3288 : string or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3287) "sensitivity"
                (or_undefined_to_js Ojs.string_to_js x3288)
        let (get_ignorePunctuation : 'tags this -> bool or_undefined) =
          fun (x3291 : 'tags this) ->
            or_undefined_of_js Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3291)
                 "ignorePunctuation")
        let (set_ignorePunctuation : 'tags this -> bool or_undefined -> unit)
          =
          fun (x3294 : 'tags this) ->
            fun (x3295 : bool or_undefined) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3294)
                "ignorePunctuation" (or_undefined_to_js Ojs.bool_to_js x3295)
        let (create :
          ?usage:string ->
            ?localeMatcher:string ->
              ?numeric:bool ->
                ?caseFirst:string ->
                  ?sensitivity:string -> ?ignorePunctuation:bool -> unit -> t)
          =
          fun ?usage:(x3298 : string option) ->
            fun ?localeMatcher:(x3299 : string option) ->
              fun ?numeric:(x3300 : bool option) ->
                fun ?caseFirst:(x3301 : string option) ->
                  fun ?sensitivity:(x3302 : string option) ->
                    fun ?ignorePunctuation:(x3303 : bool option) ->
                      fun () ->
                        let x3304 = Ojs.empty_obj () in
                        (match x3298 with
                         | Some x3310 ->
                             Ojs.set_prop_ascii x3304 "usage"
                               (Ojs.string_to_js x3310)
                         | None -> ());
                        (match x3299 with
                         | Some x3309 ->
                             Ojs.set_prop_ascii x3304 "localeMatcher"
                               (Ojs.string_to_js x3309)
                         | None -> ());
                        (match x3300 with
                         | Some x3308 ->
                             Ojs.set_prop_ascii x3304 "numeric"
                               (Ojs.bool_to_js x3308)
                         | None -> ());
                        (match x3301 with
                         | Some x3307 ->
                             Ojs.set_prop_ascii x3304 "caseFirst"
                               (Ojs.string_to_js x3307)
                         | None -> ());
                        (match x3302 with
                         | Some x3306 ->
                             Ojs.set_prop_ascii x3304 "sensitivity"
                               (Ojs.string_to_js x3306)
                         | None -> ());
                        (match x3303 with
                         | Some x3305 ->
                             Ojs.set_prop_ascii x3304 "ignorePunctuation"
                               (Ojs.bool_to_js x3305)
                         | None -> ());
                        t_of_js x3304
        let cast_from = Obj.magic
      end
    module Collator =
      struct
        type t = [ `Intl_Collator ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x3312 : Ojs.t) -> t_of_js x3312
        and t_0_to_js : t_0 -> Ojs.t = fun (x3311 : t) -> t_to_js x3311
        type tags = [ `Intl_Collator ]
        type tags_0 = tags
        type 'tags this = 'tags intf constraint 'tags = [> `Intl_Collator ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x3315 : Ojs.t) -> intf_of_js __tags_of_js x3315
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x3313 : __tags intf) -> intf_to_js __tags_to_js x3313
        let (compare : 'tags this -> x:string -> y:string -> float) =
          fun (x3319 : 'tags this) ->
            fun ~x:(x3317 : string) ->
              fun ~y:(x3318 : string) ->
                Ojs.float_of_js
                  (Ojs.call (this_to_js Obj.magic x3319) "compare"
                     [|(Ojs.string_to_js x3317);(Ojs.string_to_js x3318)|])
        let (resolvedOptions : 'tags this -> ResolvedCollatorOptions.t) =
          fun (x3321 : 'tags this) ->
            ResolvedCollatorOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x3321) "resolvedOptions" [||])
        let cast_from = Obj.magic
        let (create :
          ?locales:string list or_string ->
            ?options:CollatorOptions.t -> unit -> t)
          =
          fun ?locales:(x3323 : string list or_string option) ->
            fun ?options:(x3324 : CollatorOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "Collator")
                     (let x3325 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x3323 with
                       | Some x3327 ->
                           ignore
                             (Ojs.call x3325 "push"
                                [|(or_string_to_js
                                     (fun (x3328 : string list) ->
                                        Ojs.list_to_js Ojs.string_to_js x3328)
                                     x3327)|])
                       | None -> ());
                      (match x3324 with
                       | Some x3326 ->
                           ignore
                             (Ojs.call x3325 "push"
                                [|(CollatorOptions.t_to_js x3326)|])
                       | None -> ());
                      x3325))
        let (invoke :
          ?locales:string list or_string ->
            ?options:CollatorOptions.t -> unit -> t)
          =
          fun ?locales:(x3330 : string list or_string option) ->
            fun ?options:(x3331 : CollatorOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "Collator")
                     "apply"
                     [|Ojs.null;((let x3332 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  (match x3330 with
                                   | Some x3334 ->
                                       ignore
                                         (Ojs.call x3332 "push"
                                            [|(or_string_to_js
                                                 (fun (x3335 : string list)
                                                    ->
                                                    Ojs.list_to_js
                                                      Ojs.string_to_js x3335)
                                                 x3334)|])
                                   | None -> ());
                                  (match x3331 with
                                   | Some x3333 ->
                                       ignore
                                         (Ojs.call x3332 "push"
                                            [|(CollatorOptions.t_to_js x3333)|])
                                   | None -> ());
                                  x3332))|])
        let (supportedLocalesOf :
          locales:string list or_string ->
            ?options:CollatorOptions.t -> unit -> string list)
          =
          fun ~locales:(x3337 : string list or_string) ->
            fun ?options:(x3338 : CollatorOptions.t option) ->
              fun () ->
                Ojs.list_of_js Ojs.string_of_js
                  (let x3343 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl") "Collator" in
                   Ojs.call (Ojs.get_prop_ascii x3343 "supportedLocalesOf")
                     "apply"
                     [|x3343;((let x3339 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3339 "push"
                                    [|(or_string_to_js
                                         (fun (x3341 : string list) ->
                                            Ojs.list_to_js Ojs.string_to_js
                                              x3341) x3337)|]);
                               (match x3338 with
                                | Some x3340 ->
                                    ignore
                                      (Ojs.call x3339 "push"
                                         [|(CollatorOptions.t_to_js x3340)|])
                                | None -> ());
                               x3339))|])
      end
  end
module String =
  struct
    module AnonymousInterface6 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x3346 : Ojs.t) -> x3346
        and t_to_js : t -> Ojs.t = fun (x3345 : Ojs.t) -> x3345
        let (get_raw : t -> (string ArrayLike.t, string list) union2) =
          fun (x3347 : t) ->
            union2_of_js
              (fun (x3348 : Ojs.t) ->
                 ArrayLike.t_of_js Ojs.string_of_js x3348)
              (fun (x3350 : Ojs.t) -> Ojs.list_of_js Ojs.string_of_js x3350)
              (Ojs.get_prop_ascii (t_to_js x3347) "raw")
        let (set_raw : t -> (string ArrayLike.t, string list) union2 -> unit)
          =
          fun (x3352 : t) ->
            fun (x3353 : (string ArrayLike.t, string list) union2) ->
              Ojs.set_prop_ascii (t_to_js x3352) "raw"
                (union2_to_js
                   (fun (x3354 : string ArrayLike.t) ->
                      ArrayLike.t_to_js Ojs.string_to_js x3354)
                   (fun (x3356 : string list) ->
                      Ojs.list_to_js Ojs.string_to_js x3356) x3353)
        let (create :
          raw:(string ArrayLike.t, string list) union2 -> unit -> t) =
          fun ~raw:(x3358 : (string ArrayLike.t, string list) union2) ->
            fun () ->
              let x3359 = Ojs.empty_obj () in
              Ojs.set_prop_ascii x3359 "raw"
                (union2_to_js
                   (fun (x3360 : string ArrayLike.t) ->
                      ArrayLike.t_to_js Ojs.string_to_js x3360)
                   (fun (x3362 : string list) ->
                      Ojs.list_to_js Ojs.string_to_js x3362) x3358);
              t_of_js x3359
      end
    module AnonymousInterface22 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x3365 : Ojs.t) -> x3365
        and t_to_js : t -> Ojs.t = fun (x3364 : Ojs.t) -> x3364
      end
    module AnonymousInterface21 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x3367 : Ojs.t) -> x3367
        and t_to_js : t -> Ojs.t = fun (x3366 : Ojs.t) -> x3366
      end
    module AnonymousInterface20 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x3369 : Ojs.t) -> x3369
        and t_to_js : t -> Ojs.t = fun (x3368 : Ojs.t) -> x3368
      end
    module AnonymousInterface19 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x3371 : Ojs.t) -> x3371
        and t_to_js : t -> Ojs.t = fun (x3370 : Ojs.t) -> x3370
      end
    module AnonymousInterface18 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x3373 : Ojs.t) -> x3373
        and t_to_js : t -> Ojs.t = fun (x3372 : Ojs.t) -> x3372
      end
    type t =
      [ `String  | string ArrayLike.tags_1 | string IterableIterator.tags_1]
        intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3375 : Ojs.t) -> t_of_js x3375
    and t_0_to_js : t_0 -> Ojs.t = fun (x3374 : t) -> t_to_js x3374
    type tags =
      [ `String  | string ArrayLike.tags_1 | string IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `String ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x3378 : Ojs.t) -> intf_of_js __tags_of_js x3378
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x3376 : __tags intf) -> intf_to_js __tags_to_js x3376
    let (replaceAll :
      'tags this ->
        searchValue:RegExp.t or_string -> replaceValue:string -> string)
      =
      fun (x3383 : 'tags this) ->
        fun ~searchValue:(x3380 : RegExp.t or_string) ->
          fun ~replaceValue:(x3382 : string) ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3383) "replaceAll"
                 [|(or_string_to_js RegExp.t_to_js x3380);(Ojs.string_to_js
                                                             x3382)|])
    let (replaceAll' :
      'tags this ->
        searchValue:RegExp.t or_string ->
          replacer:(substring:string -> args:any list -> string) -> string)
      =
      fun (x3390 : 'tags this) ->
        fun ~searchValue:(x3385 : RegExp.t or_string) ->
          fun ~replacer:(x3387 : substring:string -> args:any list -> string)
            ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3390) "replaceAll"
                 [|(or_string_to_js RegExp.t_to_js x3385);(Ojs.fun_to_js_args
                                                             (fun (x3388 : _)
                                                                ->
                                                                Ojs.string_to_js
                                                                  (x3387
                                                                    ~substring:(
                                                                    Ojs.string_of_js
                                                                    (Ojs.array_get
                                                                    x3388 0))
                                                                    ~args:(
                                                                    Ojs.list_of_js_from
                                                                    any_of_js
                                                                    x3388 1))))|])
    let (replaceAll'' :
      'tags this ->
        searchValue:RegExp.t or_string -> replaceValue:string -> string)
      =
      fun (x3395 : 'tags this) ->
        fun ~searchValue:(x3392 : RegExp.t or_string) ->
          fun ~replaceValue:(x3394 : string) ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3395) "replaceAll"
                 [|(or_string_to_js RegExp.t_to_js x3392);(Ojs.string_to_js
                                                             x3394)|])
    let (replaceAll''' :
      'tags this ->
        searchValue:RegExp.t or_string ->
          replacer:(substring:string -> args:any list -> string) -> string)
      =
      fun (x3402 : 'tags this) ->
        fun ~searchValue:(x3397 : RegExp.t or_string) ->
          fun ~replacer:(x3399 : substring:string -> args:any list -> string)
            ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3402) "replaceAll"
                 [|(or_string_to_js RegExp.t_to_js x3397);(Ojs.fun_to_js_args
                                                             (fun (x3400 : _)
                                                                ->
                                                                Ojs.string_to_js
                                                                  (x3399
                                                                    ~substring:(
                                                                    Ojs.string_of_js
                                                                    (Ojs.array_get
                                                                    x3400 0))
                                                                    ~args:(
                                                                    Ojs.list_of_js_from
                                                                    any_of_js
                                                                    x3400 1))))|])
    let (matchAll :
      'tags this -> regexp:RegExp.t -> RegExpMatchArray.t IterableIterator.t)
      =
      fun (x3405 : 'tags this) ->
        fun ~regexp:(x3404 : RegExp.t) ->
          IterableIterator.t_of_js RegExpMatchArray.t_of_js
            (Ojs.call (this_to_js Obj.magic x3405) "matchAll"
               [|(RegExp.t_to_js x3404)|])
    let (trimEnd : 'tags this -> string) =
      fun (x3408 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3408) "trimEnd" [||])
    let (trimStart : 'tags this -> string) =
      fun (x3410 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3410) "trimStart" [||])
    let (trimLeft : 'tags this -> string) =
      fun (x3412 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3412) "trimLeft" [||])
    let (trimRight : 'tags this -> string) =
      fun (x3414 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3414) "trimRight" [||])
    let (padStart :
      'tags this -> maxLength:float -> ?fillString:string -> unit -> string)
      =
      fun (x3420 : 'tags this) ->
        fun ~maxLength:(x3416 : float) ->
          fun ?fillString:(x3417 : string option) ->
            fun () ->
              Ojs.string_of_js
                (let x3422 = this_to_js Obj.magic x3420 in
                 Ojs.call (Ojs.get_prop_ascii x3422 "padStart") "apply"
                   [|x3422;((let x3418 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3418 "push"
                                  [|(Ojs.float_to_js x3416)|]);
                             (match x3417 with
                              | Some x3419 ->
                                  ignore
                                    (Ojs.call x3418 "push"
                                       [|(Ojs.string_to_js x3419)|])
                              | None -> ());
                             x3418))|])
    let (padEnd :
      'tags this -> maxLength:float -> ?fillString:string -> unit -> string)
      =
      fun (x3427 : 'tags this) ->
        fun ~maxLength:(x3423 : float) ->
          fun ?fillString:(x3424 : string option) ->
            fun () ->
              Ojs.string_of_js
                (let x3429 = this_to_js Obj.magic x3427 in
                 Ojs.call (Ojs.get_prop_ascii x3429 "padEnd") "apply"
                   [|x3429;((let x3425 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3425 "push"
                                  [|(Ojs.float_to_js x3423)|]);
                             (match x3424 with
                              | Some x3426 ->
                                  ignore
                                    (Ojs.call x3425 "push"
                                       [|(Ojs.string_to_js x3426)|])
                              | None -> ());
                             x3425))|])
    let (match_ :
      'tags this ->
        matcher:AnonymousInterface18.t -> RegExpMatchArray.t or_null)
      =
      fun (x3431 : 'tags this) ->
        fun ~matcher:(x3430 : AnonymousInterface18.t) ->
          or_null_of_js RegExpMatchArray.t_of_js
            (Ojs.call (this_to_js Obj.magic x3431) "match"
               [|(AnonymousInterface18.t_to_js x3430)|])
    let (replace :
      'tags this ->
        searchValue:AnonymousInterface19.t -> replaceValue:string -> string)
      =
      fun (x3436 : 'tags this) ->
        fun ~searchValue:(x3434 : AnonymousInterface19.t) ->
          fun ~replaceValue:(x3435 : string) ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3436) "replace"
                 [|(AnonymousInterface19.t_to_js x3434);(Ojs.string_to_js
                                                           x3435)|])
    let (replace' :
      'tags this ->
        searchValue:AnonymousInterface20.t ->
          replacer:(substring:string -> args:any list -> string) -> string)
      =
      fun (x3442 : 'tags this) ->
        fun ~searchValue:(x3438 : AnonymousInterface20.t) ->
          fun ~replacer:(x3439 : substring:string -> args:any list -> string)
            ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3442) "replace"
                 [|(AnonymousInterface20.t_to_js x3438);(Ojs.fun_to_js_args
                                                           (fun (x3440 : _)
                                                              ->
                                                              Ojs.string_to_js
                                                                (x3439
                                                                   ~substring:(
                                                                   Ojs.string_of_js
                                                                    (Ojs.array_get
                                                                    x3440 0))
                                                                   ~args:(
                                                                   Ojs.list_of_js_from
                                                                    any_of_js
                                                                    x3440 1))))|])
    let (search : 'tags this -> searcher:AnonymousInterface21.t -> float) =
      fun (x3445 : 'tags this) ->
        fun ~searcher:(x3444 : AnonymousInterface21.t) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x3445) "search"
               [|(AnonymousInterface21.t_to_js x3444)|])
    let (split :
      'tags this ->
        splitter:AnonymousInterface22.t ->
          ?limit:float -> unit -> string list)
      =
      fun (x3451 : 'tags this) ->
        fun ~splitter:(x3447 : AnonymousInterface22.t) ->
          fun ?limit:(x3448 : float option) ->
            fun () ->
              Ojs.list_of_js Ojs.string_of_js
                (let x3453 = this_to_js Obj.magic x3451 in
                 Ojs.call (Ojs.get_prop_ascii x3453 "split") "apply"
                   [|x3453;((let x3449 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3449 "push"
                                  [|(AnonymousInterface22.t_to_js x3447)|]);
                             (match x3448 with
                              | Some x3450 ->
                                  ignore
                                    (Ojs.call x3449 "push"
                                       [|(Ojs.float_to_js x3450)|])
                              | None -> ());
                             x3449))|])
    let (codePointAt : 'tags this -> pos:float -> float or_undefined) =
      fun (x3456 : 'tags this) ->
        fun ~pos:(x3455 : float) ->
          or_undefined_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x3456) "codePointAt"
               [|(Ojs.float_to_js x3455)|])
    let (includes :
      'tags this -> searchString:string -> ?position:float -> unit -> bool) =
      fun (x3463 : 'tags this) ->
        fun ~searchString:(x3459 : string) ->
          fun ?position:(x3460 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x3465 = this_to_js Obj.magic x3463 in
                 Ojs.call (Ojs.get_prop_ascii x3465 "includes") "apply"
                   [|x3465;((let x3461 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3461 "push"
                                  [|(Ojs.string_to_js x3459)|]);
                             (match x3460 with
                              | Some x3462 ->
                                  ignore
                                    (Ojs.call x3461 "push"
                                       [|(Ojs.float_to_js x3462)|])
                              | None -> ());
                             x3461))|])
    let (endsWith :
      'tags this -> searchString:string -> ?endPosition:float -> unit -> bool)
      =
      fun (x3470 : 'tags this) ->
        fun ~searchString:(x3466 : string) ->
          fun ?endPosition:(x3467 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x3472 = this_to_js Obj.magic x3470 in
                 Ojs.call (Ojs.get_prop_ascii x3472 "endsWith") "apply"
                   [|x3472;((let x3468 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3468 "push"
                                  [|(Ojs.string_to_js x3466)|]);
                             (match x3467 with
                              | Some x3469 ->
                                  ignore
                                    (Ojs.call x3468 "push"
                                       [|(Ojs.float_to_js x3469)|])
                              | None -> ());
                             x3468))|])
    let (normalize :
      'tags this ->
        form:[ `L_s11_NFC  | `L_s12_NFD  | `L_s13_NFKC  | `L_s14_NFKD ] ->
          string)
      =
      fun (x3474 : 'tags this) ->
        fun
          ~form:(x3473 :
                  [ `L_s11_NFC  | `L_s12_NFD  | `L_s13_NFKC  | `L_s14_NFKD ])
          ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3474) "normalize"
               [|((match x3473 with
                   | `L_s11_NFC -> Ojs.string_to_js "NFC"
                   | `L_s12_NFD -> Ojs.string_to_js "NFD"
                   | `L_s13_NFKC -> Ojs.string_to_js "NFKC"
                   | `L_s14_NFKD -> Ojs.string_to_js "NFKD"))|])
    let (normalize' : 'tags this -> ?form:string -> unit -> string) =
      fun (x3479 : 'tags this) ->
        fun ?form:(x3476 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x3481 = this_to_js Obj.magic x3479 in
               Ojs.call (Ojs.get_prop_ascii x3481 "normalize") "apply"
                 [|x3481;((let x3477 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3476 with
                            | Some x3478 ->
                                ignore
                                  (Ojs.call x3477 "push"
                                     [|(Ojs.string_to_js x3478)|])
                            | None -> ());
                           x3477))|])
    let (repeat : 'tags this -> count:float -> string) =
      fun (x3483 : 'tags this) ->
        fun ~count:(x3482 : float) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3483) "repeat"
               [|(Ojs.float_to_js x3482)|])
    let (startsWith :
      'tags this -> searchString:string -> ?position:float -> unit -> bool) =
      fun (x3489 : 'tags this) ->
        fun ~searchString:(x3485 : string) ->
          fun ?position:(x3486 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x3491 = this_to_js Obj.magic x3489 in
                 Ojs.call (Ojs.get_prop_ascii x3491 "startsWith") "apply"
                   [|x3491;((let x3487 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3487 "push"
                                  [|(Ojs.string_to_js x3485)|]);
                             (match x3486 with
                              | Some x3488 ->
                                  ignore
                                    (Ojs.call x3487 "push"
                                       [|(Ojs.float_to_js x3488)|])
                              | None -> ());
                             x3487))|])
    let (anchor : 'tags this -> name:string -> string) =
      fun (x3493 : 'tags this) ->
        fun ~name:(x3492 : string) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3493) "anchor"
               [|(Ojs.string_to_js x3492)|])
    let (big : 'tags this -> string) =
      fun (x3495 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x3495) "big" [||])
    let (blink : 'tags this -> string) =
      fun (x3497 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x3497) "blink" [||])
    let (bold : 'tags this -> string) =
      fun (x3499 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x3499) "bold" [||])
    let (fixed : 'tags this -> string) =
      fun (x3501 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x3501) "fixed" [||])
    let (fontcolor : 'tags this -> color:string -> string) =
      fun (x3504 : 'tags this) ->
        fun ~color:(x3503 : string) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3504) "fontcolor"
               [|(Ojs.string_to_js x3503)|])
    let (fontsize : 'tags this -> size:float -> string) =
      fun (x3507 : 'tags this) ->
        fun ~size:(x3506 : float) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3507) "fontsize"
               [|(Ojs.float_to_js x3506)|])
    let (fontsize' : 'tags this -> size:string -> string) =
      fun (x3510 : 'tags this) ->
        fun ~size:(x3509 : string) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3510) "fontsize"
               [|(Ojs.string_to_js x3509)|])
    let (italics : 'tags this -> string) =
      fun (x3512 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3512) "italics" [||])
    let (link : 'tags this -> url:string -> string) =
      fun (x3515 : 'tags this) ->
        fun ~url:(x3514 : string) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3515) "link"
               [|(Ojs.string_to_js x3514)|])
    let (small : 'tags this -> string) =
      fun (x3517 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x3517) "small" [||])
    let (strike : 'tags this -> string) =
      fun (x3519 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3519) "strike" [||])
    let (sub : 'tags this -> string) =
      fun (x3521 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x3521) "sub" [||])
    let (sup : 'tags this -> string) =
      fun (x3523 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x3523) "sup" [||])
    let (localeCompare :
      'tags this ->
        that:string ->
          ?locales:string list or_string ->
            ?options:Intl.CollatorOptions.t -> unit -> float)
      =
      fun (x3533 : 'tags this) ->
        fun ~that:(x3525 : string) ->
          fun ?locales:(x3526 : string list or_string option) ->
            fun ?options:(x3527 : Intl.CollatorOptions.t option) ->
              fun () ->
                Ojs.float_of_js
                  (let x3535 = this_to_js Obj.magic x3533 in
                   Ojs.call (Ojs.get_prop_ascii x3535 "localeCompare")
                     "apply"
                     [|x3535;((let x3528 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3528 "push"
                                    [|(Ojs.string_to_js x3525)|]);
                               (match x3526 with
                                | Some x3530 ->
                                    ignore
                                      (Ojs.call x3528 "push"
                                         [|(or_string_to_js
                                              (fun (x3531 : string list) ->
                                                 Ojs.list_to_js
                                                   Ojs.string_to_js x3531)
                                              x3530)|])
                                | None -> ());
                               (match x3527 with
                                | Some x3529 ->
                                    ignore
                                      (Ojs.call x3528 "push"
                                         [|(Intl.CollatorOptions.t_to_js
                                              x3529)|])
                                | None -> ());
                               x3528))|])
    let (toString : 'tags this -> string) =
      fun (x3536 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3536) "toString" [||])
    let (charAt : 'tags this -> pos:float -> string) =
      fun (x3539 : 'tags this) ->
        fun ~pos:(x3538 : float) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3539) "charAt"
               [|(Ojs.float_to_js x3538)|])
    let (charCodeAt : 'tags this -> index:float -> float) =
      fun (x3542 : 'tags this) ->
        fun ~index:(x3541 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x3542) "charCodeAt"
               [|(Ojs.float_to_js x3541)|])
    let (concat : 'tags this -> strings:string list -> string) =
      fun (x3547 : 'tags this) ->
        fun ~strings:(x3544 : string list) ->
          Ojs.string_of_js
            (let x3549 = this_to_js Obj.magic x3547 in
             Ojs.call (Ojs.get_prop_ascii x3549 "concat") "apply"
               [|x3549;((let x3545 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x3546 : string) ->
                              ignore
                                (Ojs.call x3545 "push"
                                   [|(Ojs.string_to_js x3546)|])) x3544;
                         x3545))|])
    let (indexOf :
      'tags this -> searchString:string -> ?position:float -> unit -> float)
      =
      fun (x3554 : 'tags this) ->
        fun ~searchString:(x3550 : string) ->
          fun ?position:(x3551 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x3556 = this_to_js Obj.magic x3554 in
                 Ojs.call (Ojs.get_prop_ascii x3556 "indexOf") "apply"
                   [|x3556;((let x3552 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3552 "push"
                                  [|(Ojs.string_to_js x3550)|]);
                             (match x3551 with
                              | Some x3553 ->
                                  ignore
                                    (Ojs.call x3552 "push"
                                       [|(Ojs.float_to_js x3553)|])
                              | None -> ());
                             x3552))|])
    let (lastIndexOf :
      'tags this -> searchString:string -> ?position:float -> unit -> float)
      =
      fun (x3561 : 'tags this) ->
        fun ~searchString:(x3557 : string) ->
          fun ?position:(x3558 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x3563 = this_to_js Obj.magic x3561 in
                 Ojs.call (Ojs.get_prop_ascii x3563 "lastIndexOf") "apply"
                   [|x3563;((let x3559 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3559 "push"
                                  [|(Ojs.string_to_js x3557)|]);
                             (match x3558 with
                              | Some x3560 ->
                                  ignore
                                    (Ojs.call x3559 "push"
                                       [|(Ojs.float_to_js x3560)|])
                              | None -> ());
                             x3559))|])
    let (localeCompare' : 'tags this -> that:string -> float) =
      fun (x3565 : 'tags this) ->
        fun ~that:(x3564 : string) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x3565) "localeCompare"
               [|(Ojs.string_to_js x3564)|])
    let (match_' :
      'tags this -> regexp:RegExp.t or_string -> RegExpMatchArray.t or_null)
      =
      fun (x3569 : 'tags this) ->
        fun ~regexp:(x3567 : RegExp.t or_string) ->
          or_null_of_js RegExpMatchArray.t_of_js
            (Ojs.call (this_to_js Obj.magic x3569) "match"
               [|(or_string_to_js RegExp.t_to_js x3567)|])
    let (replace'' :
      'tags this ->
        searchValue:RegExp.t or_string -> replaceValue:string -> string)
      =
      fun (x3575 : 'tags this) ->
        fun ~searchValue:(x3572 : RegExp.t or_string) ->
          fun ~replaceValue:(x3574 : string) ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3575) "replace"
                 [|(or_string_to_js RegExp.t_to_js x3572);(Ojs.string_to_js
                                                             x3574)|])
    let (replace''' :
      'tags this ->
        searchValue:RegExp.t or_string ->
          replacer:(substring:string -> args:any list -> string) -> string)
      =
      fun (x3582 : 'tags this) ->
        fun ~searchValue:(x3577 : RegExp.t or_string) ->
          fun ~replacer:(x3579 : substring:string -> args:any list -> string)
            ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3582) "replace"
                 [|(or_string_to_js RegExp.t_to_js x3577);(Ojs.fun_to_js_args
                                                             (fun (x3580 : _)
                                                                ->
                                                                Ojs.string_to_js
                                                                  (x3579
                                                                    ~substring:(
                                                                    Ojs.string_of_js
                                                                    (Ojs.array_get
                                                                    x3580 0))
                                                                    ~args:(
                                                                    Ojs.list_of_js_from
                                                                    any_of_js
                                                                    x3580 1))))|])
    let (search' : 'tags this -> regexp:RegExp.t or_string -> float) =
      fun (x3586 : 'tags this) ->
        fun ~regexp:(x3584 : RegExp.t or_string) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x3586) "search"
               [|(or_string_to_js RegExp.t_to_js x3584)|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> string)
      =
      fun (x3593 : 'tags this) ->
        fun ?start:(x3588 : float option) ->
          fun ?end_:(x3589 : float option) ->
            fun () ->
              Ojs.string_of_js
                (let x3595 = this_to_js Obj.magic x3593 in
                 Ojs.call (Ojs.get_prop_ascii x3595 "slice") "apply"
                   [|x3595;((let x3590 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x3588 with
                              | Some x3592 ->
                                  ignore
                                    (Ojs.call x3590 "push"
                                       [|(Ojs.float_to_js x3592)|])
                              | None -> ());
                             (match x3589 with
                              | Some x3591 ->
                                  ignore
                                    (Ojs.call x3590 "push"
                                       [|(Ojs.float_to_js x3591)|])
                              | None -> ());
                             x3590))|])
    let (split' :
      'tags this ->
        separator:RegExp.t or_string -> ?limit:float -> unit -> string list)
      =
      fun (x3601 : 'tags this) ->
        fun ~separator:(x3596 : RegExp.t or_string) ->
          fun ?limit:(x3597 : float option) ->
            fun () ->
              Ojs.list_of_js Ojs.string_of_js
                (let x3603 = this_to_js Obj.magic x3601 in
                 Ojs.call (Ojs.get_prop_ascii x3603 "split") "apply"
                   [|x3603;((let x3598 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3598 "push"
                                  [|(or_string_to_js RegExp.t_to_js x3596)|]);
                             (match x3597 with
                              | Some x3599 ->
                                  ignore
                                    (Ojs.call x3598 "push"
                                       [|(Ojs.float_to_js x3599)|])
                              | None -> ());
                             x3598))|])
    let (substring :
      'tags this -> start:float -> ?end_:float -> unit -> string) =
      fun (x3609 : 'tags this) ->
        fun ~start:(x3605 : float) ->
          fun ?end_:(x3606 : float option) ->
            fun () ->
              Ojs.string_of_js
                (let x3611 = this_to_js Obj.magic x3609 in
                 Ojs.call (Ojs.get_prop_ascii x3611 "substring") "apply"
                   [|x3611;((let x3607 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3607 "push"
                                  [|(Ojs.float_to_js x3605)|]);
                             (match x3606 with
                              | Some x3608 ->
                                  ignore
                                    (Ojs.call x3607 "push"
                                       [|(Ojs.float_to_js x3608)|])
                              | None -> ());
                             x3607))|])
    let (toLowerCase : 'tags this -> string) =
      fun (x3612 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3612) "toLowerCase" [||])
    let (toLocaleLowerCase :
      'tags this -> ?locales:string list or_string -> unit -> string) =
      fun (x3619 : 'tags this) ->
        fun ?locales:(x3614 : string list or_string option) ->
          fun () ->
            Ojs.string_of_js
              (let x3621 = this_to_js Obj.magic x3619 in
               Ojs.call (Ojs.get_prop_ascii x3621 "toLocaleLowerCase")
                 "apply"
                 [|x3621;((let x3615 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3614 with
                            | Some x3616 ->
                                ignore
                                  (Ojs.call x3615 "push"
                                     [|(or_string_to_js
                                          (fun (x3617 : string list) ->
                                             Ojs.list_to_js Ojs.string_to_js
                                               x3617) x3616)|])
                            | None -> ());
                           x3615))|])
    let (toUpperCase : 'tags this -> string) =
      fun (x3622 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3622) "toUpperCase" [||])
    let (toLocaleUpperCase :
      'tags this -> ?locales:string list or_string -> unit -> string) =
      fun (x3629 : 'tags this) ->
        fun ?locales:(x3624 : string list or_string option) ->
          fun () ->
            Ojs.string_of_js
              (let x3631 = this_to_js Obj.magic x3629 in
               Ojs.call (Ojs.get_prop_ascii x3631 "toLocaleUpperCase")
                 "apply"
                 [|x3631;((let x3625 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3624 with
                            | Some x3626 ->
                                ignore
                                  (Ojs.call x3625 "push"
                                     [|(or_string_to_js
                                          (fun (x3627 : string list) ->
                                             Ojs.list_to_js Ojs.string_to_js
                                               x3627) x3626)|])
                            | None -> ());
                           x3625))|])
    let (trim : 'tags this -> string) =
      fun (x3632 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x3632) "trim" [||])
    let (get_length : 'tags this -> float) =
      fun (x3634 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3634) "length")
    let (substr :
      'tags this -> from:float -> ?length:float -> unit -> string) =
      fun (x3640 : 'tags this) ->
        fun ~from:(x3636 : float) ->
          fun ?length:(x3637 : float option) ->
            fun () ->
              Ojs.string_of_js
                (let x3642 = this_to_js Obj.magic x3640 in
                 Ojs.call (Ojs.get_prop_ascii x3642 "substr") "apply"
                   [|x3642;((let x3638 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3638 "push"
                                  [|(Ojs.float_to_js x3636)|]);
                             (match x3637 with
                              | Some x3639 ->
                                  ignore
                                    (Ojs.call x3638 "push"
                                       [|(Ojs.float_to_js x3639)|])
                              | None -> ());
                             x3638))|])
    let (valueOf : 'tags this -> string) =
      fun (x3643 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3643) "valueOf" [||])
    let (get : 'tags this -> float -> string) =
      fun (x3645 : 'tags this) ->
        fun (x3647 : float) ->
          Ojs.string_of_js
            (Ojs.get_prop (this_to_js Obj.magic x3645)
               (Ojs.float_to_js x3647))
    let (fromCodePoint : float list -> string) =
      fun (x3648 : float list) ->
        Ojs.string_of_js
          (let x3651 = Ojs.get_prop_ascii Ojs.global "String" in
           Ojs.call (Ojs.get_prop_ascii x3651 "fromCodePoint") "apply"
             [|x3651;((let x3649 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x3650 : float) ->
                            ignore
                              (Ojs.call x3649 "push"
                                 [|(Ojs.float_to_js x3650)|])) x3648;
                       x3649))|])
    let (raw :
      template:AnonymousInterface6.t -> substitutions:any list -> string) =
      fun ~template:(x3652 : AnonymousInterface6.t) ->
        fun ~substitutions:(x3653 : any list) ->
          Ojs.string_of_js
            (let x3656 = Ojs.get_prop_ascii Ojs.global "String" in
             Ojs.call (Ojs.get_prop_ascii x3656 "raw") "apply"
               [|x3656;((let x3654 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         ignore
                           (Ojs.call x3654 "push"
                              [|(AnonymousInterface6.t_to_js x3652)|]);
                         List.iter
                           (fun (x3655 : any) ->
                              ignore
                                (Ojs.call x3654 "push" [|(any_to_js x3655)|]))
                           x3653;
                         x3654))|])
    let (create : ?value:any -> unit -> t) =
      fun ?value:(x3657 : any option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "String")
               (let x3658 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x3657 with
                 | Some x3659 ->
                     ignore (Ojs.call x3658 "push" [|(any_to_js x3659)|])
                 | None -> ());
                x3658))
    let (invoke : ?value:any -> unit -> string) =
      fun ?value:(x3660 : any option) ->
        fun () ->
          Ojs.string_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "String") "apply"
               [|Ojs.null;((let x3661 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x3660 with
                             | Some x3662 ->
                                 ignore
                                   (Ojs.call x3661 "push"
                                      [|(any_to_js x3662)|])
                             | None -> ());
                            x3661))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "String")
             "prototype")
    let (fromCharCode : float list -> string) =
      fun (x3663 : float list) ->
        Ojs.string_of_js
          (let x3666 = Ojs.get_prop_ascii Ojs.global "String" in
           Ojs.call (Ojs.get_prop_ascii x3666 "fromCharCode") "apply"
             [|x3666;((let x3664 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x3665 : float) ->
                            ignore
                              (Ojs.call x3664 "push"
                                 [|(Ojs.float_to_js x3665)|])) x3663;
                       x3664))|])
    let cast_from = Obj.magic
  end
module Set =
  struct
    type 'T t = [ `Set of 'T  | 'T IterableIterator.tags_1] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x3669 : Ojs.t) -> t_of_js __T_of_js x3669
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x3667 : __T t) -> t_to_js __T_to_js x3667
    type 'T tags = [ `Set of 'T  | 'T IterableIterator.tags_1]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this = 'tags intf constraint 'tags = [> `Set of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x3673 : Ojs.t) -> intf_of_js __tags_of_js x3673
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x3671 : __tags intf) -> intf_to_js __tags_to_js x3671
    let (entries : ('tags, 'T) this -> ('T * 'T) IterableIterator.t) =
      fun (x3675 : ('tags, 'T) this) ->
        IterableIterator.t_of_js
          (fun (x3678 : Ojs.t) ->
             let x3679 = x3678 in
             ((Obj.magic (Ojs.array_get x3679 0)),
               (Obj.magic (Ojs.array_get x3679 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic x3675) "entries" [||])
    let (keys : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x3680 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x3680) "keys" [||])
    let (values : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x3684 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x3684) "values" [||])
    let (add : ('tags, 'T) this -> value:'T -> ('tags, 'T) this) =
      fun (x3689 : ('tags, 'T) this) ->
        fun ~value:(x3688 : 'T) ->
          this_of_js Obj.magic Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x3689) "add"
               [|(Obj.magic x3688)|])
    let (clear : ('tags, 'T) this -> unit) =
      fun (x3694 : ('tags, 'T) this) ->
        ignore (Ojs.call (this_to_js Obj.magic Obj.magic x3694) "clear" [||])
    let (delete : ('tags, 'T) this -> value:'T -> bool) =
      fun (x3698 : ('tags, 'T) this) ->
        fun ~value:(x3697 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x3698) "delete"
               [|(Obj.magic x3697)|])
    let (forEach :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> value2:'T -> set_:'T t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x3709 : ('tags, 'T) this) ->
        fun ~callbackfn:(x3701 : value:'T -> value2:'T -> set_:'T t -> unit)
          ->
          fun ?thisArg:(x3702 : any option) ->
            fun () ->
              ignore
                (let x3712 = this_to_js Obj.magic Obj.magic x3709 in
                 Ojs.call (Ojs.get_prop_ascii x3712 "forEach") "apply"
                   [|x3712;((let x3703 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3703 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3705 : Ojs.t) ->
                                          fun (x3706 : Ojs.t) ->
                                            fun (x3707 : Ojs.t) ->
                                              x3701 ~value:(Obj.magic x3705)
                                                ~value2:(Obj.magic x3706)
                                                ~set_:(t_of_js Obj.magic
                                                         x3707)))|]);
                             (match x3702 with
                              | Some x3704 ->
                                  ignore
                                    (Ojs.call x3703 "push"
                                       [|(any_to_js x3704)|])
                              | None -> ());
                             x3703))|])
    let (has : ('tags, 'T) this -> value:'T -> bool) =
      fun (x3714 : ('tags, 'T) this) ->
        fun ~value:(x3713 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x3714) "has"
               [|(Obj.magic x3713)|])
    let (get_size : ('tags, 'T) this -> float) =
      fun (x3717 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x3717) "size")
    let (create : ?iterable:'T Iterable.t or_null -> unit -> 'T t) =
      fun ?iterable:(x3720 : 'T Iterable.t or_null option) ->
        fun () ->
          t_of_js Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Set")
               (let x3721 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x3720 with
                 | Some x3722 ->
                     ignore
                       (Ojs.call x3721 "push"
                          [|(or_null_to_js
                               (fun (x3723 : 'T Iterable.t) ->
                                  Iterable.t_to_js Obj.magic x3723) x3722)|])
                 | None -> ());
                x3721))
    let (create' : ?values:'T list or_null -> unit -> 'T t) =
      fun ?values:(x3726 : 'T list or_null option) ->
        fun () ->
          t_of_js Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Set")
               (let x3727 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x3726 with
                 | Some x3728 ->
                     ignore
                       (Ojs.call x3727 "push"
                          [|(or_null_to_js
                               (fun (x3729 : 'T list) ->
                                  Ojs.list_to_js Obj.magic x3729) x3728)|])
                 | None -> ());
                x3727))
    let (prototype : unit -> any t) =
      fun () ->
        t_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Set")
             "prototype")
    let cast_from = Obj.magic
  end
module ReturnType =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x3734 : Ojs.t) -> any_of_js x3734
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x3733 : any) -> any_to_js x3733
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x3737 : Ojs.t) -> t_of_js __T_of_js x3737
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x3735 : __T t) -> t_to_js __T_to_js x3735
  end
module Required =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x3740 : Ojs.t) -> any_of_js x3740
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x3739 : any) -> any_to_js x3739
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x3743 : Ojs.t) -> t_of_js __T_of_js x3743
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x3741 : __T t) -> t_to_js __T_to_js x3741
  end
module PropertyKey =
  struct
    type t = symbol or_string or_number
    let rec t_of_js : Ojs.t -> t =
      fun (x3748 : Ojs.t) ->
        or_number_of_js
          (fun (x3749 : Ojs.t) -> or_string_of_js symbol_of_js x3749) x3748
    and t_to_js : t -> Ojs.t =
      fun (x3745 : symbol or_string or_number) ->
        or_number_to_js
          (fun (x3746 : symbol or_string) ->
             or_string_to_js symbol_to_js x3746) x3745
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3752 : Ojs.t) -> t_of_js x3752
    and t_0_to_js : t_0 -> Ojs.t = fun (x3751 : t) -> t_to_js x3751
  end
module PropertyDescriptor =
  struct
    type t = [ `PropertyDescriptor ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3754 : Ojs.t) -> t_of_js x3754
    and t_0_to_js : t_0 -> Ojs.t = fun (x3753 : t) -> t_to_js x3753
    type tags = [ `PropertyDescriptor ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `PropertyDescriptor ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x3757 : Ojs.t) -> intf_of_js __tags_of_js x3757
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x3755 : __tags intf) -> intf_to_js __tags_to_js x3755
    let (get_configurable : 'tags this -> bool) =
      fun (x3759 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3759) "configurable")
    let (set_configurable : 'tags this -> bool -> unit) =
      fun (x3761 : 'tags this) ->
        fun (x3762 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x3761) "configurable"
            (Ojs.bool_to_js x3762)
    let (get_enumerable : 'tags this -> bool) =
      fun (x3764 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3764) "enumerable")
    let (set_enumerable : 'tags this -> bool -> unit) =
      fun (x3766 : 'tags this) ->
        fun (x3767 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x3766) "enumerable"
            (Ojs.bool_to_js x3767)
    let (get_value : 'tags this -> any) =
      fun (x3769 : 'tags this) ->
        any_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x3769) "value")
    let (set_value : 'tags this -> any -> unit) =
      fun (x3771 : 'tags this) ->
        fun (x3772 : any) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x3771) "value"
            (any_to_js x3772)
    let (get_writable : 'tags this -> bool) =
      fun (x3774 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3774) "writable")
    let (set_writable : 'tags this -> bool -> unit) =
      fun (x3776 : 'tags this) ->
        fun (x3777 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x3776) "writable"
            (Ojs.bool_to_js x3777)
    let (get_ : 'tags this -> any) =
      fun (x3779 : 'tags this) ->
        any_of_js (Ojs.call (this_to_js Obj.magic x3779) "get" [||])
    let (set_ : 'tags this -> v:any -> unit) =
      fun (x3782 : 'tags this) ->
        fun ~v:(x3781 : any) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x3782) "set"
               [|(any_to_js x3781)|])
    let cast_from = Obj.magic
  end
module Function =
  struct
    type t = [ `Function ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3785 : Ojs.t) -> t_of_js x3785
    and t_0_to_js : t_0 -> Ojs.t = fun (x3784 : t) -> t_to_js x3784
    type tags = [ `Function ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Function ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x3788 : Ojs.t) -> intf_of_js __tags_of_js x3788
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x3786 : __tags intf) -> intf_to_js __tags_to_js x3786
    let (get_name : 'tags this -> string) =
      fun (x3790 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3790) "name")
    let (apply_ :
      'tags this -> this:t -> thisArg:any -> ?argArray:any -> unit -> any) =
      fun (x3797 : 'tags this) ->
        fun ~this:(x3792 : t) ->
          fun ~thisArg:(x3793 : any) ->
            fun ?argArray:(x3794 : any option) ->
              fun () ->
                any_of_js
                  (let x3799 = this_to_js Obj.magic x3797 in
                   Ojs.call (Ojs.get_prop_ascii x3799 "apply") "apply"
                     [|x3799;((let x3795 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3795 "push" [|(t_to_js x3792)|]);
                               ignore
                                 (Ojs.call x3795 "push" [|(any_to_js x3793)|]);
                               (match x3794 with
                                | Some x3796 ->
                                    ignore
                                      (Ojs.call x3795 "push"
                                         [|(any_to_js x3796)|])
                                | None -> ());
                               x3795))|])
    let (call :
      'tags this -> this:t -> thisArg:any -> argArray:any list -> any) =
      fun (x3805 : 'tags this) ->
        fun ~this:(x3800 : t) ->
          fun ~thisArg:(x3801 : any) ->
            fun ~argArray:(x3802 : any list) ->
              any_of_js
                (let x3807 = this_to_js Obj.magic x3805 in
                 Ojs.call (Ojs.get_prop_ascii x3807 "call") "apply"
                   [|x3807;((let x3803 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3803 "push" [|(t_to_js x3800)|]);
                             ignore
                               (Ojs.call x3803 "push" [|(any_to_js x3801)|]);
                             List.iter
                               (fun (x3804 : any) ->
                                  ignore
                                    (Ojs.call x3803 "push"
                                       [|(any_to_js x3804)|])) x3802;
                             x3803))|])
    let (bind :
      'tags this -> this:t -> thisArg:any -> argArray:any list -> any) =
      fun (x3813 : 'tags this) ->
        fun ~this:(x3808 : t) ->
          fun ~thisArg:(x3809 : any) ->
            fun ~argArray:(x3810 : any list) ->
              any_of_js
                (let x3815 = this_to_js Obj.magic x3813 in
                 Ojs.call (Ojs.get_prop_ascii x3815 "bind") "apply"
                   [|x3815;((let x3811 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3811 "push" [|(t_to_js x3808)|]);
                             ignore
                               (Ojs.call x3811 "push" [|(any_to_js x3809)|]);
                             List.iter
                               (fun (x3812 : any) ->
                                  ignore
                                    (Ojs.call x3811 "push"
                                       [|(any_to_js x3812)|])) x3810;
                             x3811))|])
    let (toString : 'tags this -> string) =
      fun (x3816 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3816) "toString" [||])
    let (get_prototype : 'tags this -> any) =
      fun (x3818 : 'tags this) ->
        any_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3818) "prototype")
    let (set_prototype : 'tags this -> any -> unit) =
      fun (x3820 : 'tags this) ->
        fun (x3821 : any) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x3820) "prototype"
            (any_to_js x3821)
    let (get_length : 'tags this -> float) =
      fun (x3823 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3823) "length")
    let (get_arguments : 'tags this -> any) =
      fun (x3825 : 'tags this) ->
        any_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3825) "arguments")
    let (set_arguments : 'tags this -> any -> unit) =
      fun (x3827 : 'tags this) ->
        fun (x3828 : any) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x3827) "arguments"
            (any_to_js x3828)
    let (get_caller : 'tags this -> t) =
      fun (x3830 : 'tags this) ->
        t_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x3830) "caller")
    let (set_caller : 'tags this -> t -> unit) =
      fun (x3832 : 'tags this) ->
        fun (x3833 : t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x3832) "caller"
            (t_to_js x3833)
    let (create : string list -> t) =
      fun (x3835 : string list) ->
        t_of_js
          (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Function")
             (let x3836 =
                Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
              List.iter
                (fun (x3837 : string) ->
                   ignore
                     (Ojs.call x3836 "push" [|(Ojs.string_to_js x3837)|]))
                x3835;
              x3836))
    let (invoke : string list -> t) =
      fun (x3838 : string list) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Function") "apply"
             [|Ojs.null;((let x3839 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x3840 : string) ->
                               ignore
                                 (Ojs.call x3839 "push"
                                    [|(Ojs.string_to_js x3840)|])) x3838;
                          x3839))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Function")
             "prototype")
    let cast_from = Obj.magic
  end
module Reflect =
  struct
    let (apply_ :
      target:Function.t ->
        thisArgument:any -> argumentsList:any ArrayLike.t -> any)
      =
      fun ~target:(x3841 : Function.t) ->
        fun ~thisArgument:(x3842 : any) ->
          fun ~argumentsList:(x3843 : any ArrayLike.t) ->
            any_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect") "apply"
                 [|(Function.t_to_js x3841);(any_to_js x3842);(ArrayLike.t_to_js
                                                                 any_to_js
                                                                 x3843)|])
    let (construct :
      target:Function.t ->
        argumentsList:any ArrayLike.t -> ?newTarget:Function.t -> unit -> any)
      =
      fun ~target:(x3845 : Function.t) ->
        fun ~argumentsList:(x3846 : any ArrayLike.t) ->
          fun ?newTarget:(x3847 : Function.t option) ->
            fun () ->
              any_of_js
                (let x3851 = Ojs.get_prop_ascii Ojs.global "Reflect" in
                 Ojs.call (Ojs.get_prop_ascii x3851 "construct") "apply"
                   [|x3851;((let x3848 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3848 "push"
                                  [|(Function.t_to_js x3845)|]);
                             ignore
                               (Ojs.call x3848 "push"
                                  [|(ArrayLike.t_to_js any_to_js x3846)|]);
                             (match x3847 with
                              | Some x3849 ->
                                  ignore
                                    (Ojs.call x3848 "push"
                                       [|(Function.t_to_js x3849)|])
                              | None -> ());
                             x3848))|])
    let (defineProperty :
      target:untyped_object ->
        propertyKey:PropertyKey.t -> attributes:PropertyDescriptor.t -> bool)
      =
      fun ~target:(x3852 : untyped_object) ->
        fun ~propertyKey:(x3853 : PropertyKey.t) ->
          fun ~attributes:(x3854 : PropertyDescriptor.t) ->
            Ojs.bool_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
                 "defineProperty"
                 [|(untyped_object_to_js x3852);(PropertyKey.t_to_js x3853);(
                   PropertyDescriptor.t_to_js x3854)|])
    let (deleteProperty :
      target:untyped_object -> propertyKey:PropertyKey.t -> bool) =
      fun ~target:(x3855 : untyped_object) ->
        fun ~propertyKey:(x3856 : PropertyKey.t) ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
               "deleteProperty"
               [|(untyped_object_to_js x3855);(PropertyKey.t_to_js x3856)|])
    let (get_ :
      target:untyped_object ->
        propertyKey:PropertyKey.t -> ?receiver:any -> unit -> any)
      =
      fun ~target:(x3857 : untyped_object) ->
        fun ~propertyKey:(x3858 : PropertyKey.t) ->
          fun ?receiver:(x3859 : any option) ->
            fun () ->
              any_of_js
                (let x3862 = Ojs.get_prop_ascii Ojs.global "Reflect" in
                 Ojs.call (Ojs.get_prop_ascii x3862 "get") "apply"
                   [|x3862;((let x3860 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3860 "push"
                                  [|(untyped_object_to_js x3857)|]);
                             ignore
                               (Ojs.call x3860 "push"
                                  [|(PropertyKey.t_to_js x3858)|]);
                             (match x3859 with
                              | Some x3861 ->
                                  ignore
                                    (Ojs.call x3860 "push"
                                       [|(any_to_js x3861)|])
                              | None -> ());
                             x3860))|])
    let (getOwnPropertyDescriptor :
      target:untyped_object ->
        propertyKey:PropertyKey.t -> PropertyDescriptor.t or_undefined)
      =
      fun ~target:(x3863 : untyped_object) ->
        fun ~propertyKey:(x3864 : PropertyKey.t) ->
          or_undefined_of_js PropertyDescriptor.t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
               "getOwnPropertyDescriptor"
               [|(untyped_object_to_js x3863);(PropertyKey.t_to_js x3864)|])
    let (getPrototypeOf : untyped_object -> untyped_object or_null) =
      fun (x3866 : untyped_object) ->
        or_null_of_js untyped_object_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
             "getPrototypeOf" [|(untyped_object_to_js x3866)|])
    let (has : target:untyped_object -> propertyKey:PropertyKey.t -> bool) =
      fun ~target:(x3868 : untyped_object) ->
        fun ~propertyKey:(x3869 : PropertyKey.t) ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect") "has"
               [|(untyped_object_to_js x3868);(PropertyKey.t_to_js x3869)|])
    let (isExtensible : untyped_object -> bool) =
      fun (x3870 : untyped_object) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect") "isExtensible"
             [|(untyped_object_to_js x3870)|])
    let (ownKeys : untyped_object -> symbol or_string list) =
      fun (x3871 : untyped_object) ->
        Ojs.list_of_js
          (fun (x3872 : Ojs.t) -> or_string_of_js symbol_of_js x3872)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect") "ownKeys"
             [|(untyped_object_to_js x3871)|])
    let (preventExtensions : untyped_object -> bool) =
      fun (x3874 : untyped_object) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
             "preventExtensions" [|(untyped_object_to_js x3874)|])
    let (set_ :
      target:untyped_object ->
        propertyKey:PropertyKey.t ->
          value:any -> ?receiver:any -> unit -> bool)
      =
      fun ~target:(x3875 : untyped_object) ->
        fun ~propertyKey:(x3876 : PropertyKey.t) ->
          fun ~value:(x3877 : any) ->
            fun ?receiver:(x3878 : any option) ->
              fun () ->
                Ojs.bool_of_js
                  (let x3881 = Ojs.get_prop_ascii Ojs.global "Reflect" in
                   Ojs.call (Ojs.get_prop_ascii x3881 "set") "apply"
                     [|x3881;((let x3879 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3879 "push"
                                    [|(untyped_object_to_js x3875)|]);
                               ignore
                                 (Ojs.call x3879 "push"
                                    [|(PropertyKey.t_to_js x3876)|]);
                               ignore
                                 (Ojs.call x3879 "push" [|(any_to_js x3877)|]);
                               (match x3878 with
                                | Some x3880 ->
                                    ignore
                                      (Ojs.call x3879 "push"
                                         [|(any_to_js x3880)|])
                                | None -> ());
                               x3879))|])
    let (setPrototypeOf :
      target:untyped_object -> proto:untyped_object or_null -> bool) =
      fun ~target:(x3882 : untyped_object) ->
        fun ~proto:(x3883 : untyped_object or_null) ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
               "setPrototypeOf"
               [|(untyped_object_to_js x3882);(or_null_to_js
                                                 untyped_object_to_js x3883)|])
  end
module ReferenceError =
  struct
    type t = [ `Error  | `ReferenceError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3886 : Ojs.t) -> t_of_js x3886
    and t_0_to_js : t_0 -> Ojs.t = fun (x3885 : t) -> t_to_js x3885
    type tags = [ `Error  | `ReferenceError ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ReferenceError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x3889 : Ojs.t) -> intf_of_js __tags_of_js x3889
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x3887 : __tags intf) -> intf_to_js __tags_to_js x3887
    let (create : ?message:string -> unit -> t) =
      fun ?message:(x3891 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "ReferenceError")
               (let x3892 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x3891 with
                 | Some x3893 ->
                     ignore
                       (Ojs.call x3892 "push" [|(Ojs.string_to_js x3893)|])
                 | None -> ());
                x3892))
    let (invoke : ?message:string -> unit -> t) =
      fun ?message:(x3894 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "ReferenceError")
               "apply"
               [|Ojs.null;((let x3895 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x3894 with
                             | Some x3896 ->
                                 ignore
                                   (Ojs.call x3895 "push"
                                      [|(Ojs.string_to_js x3896)|])
                             | None -> ());
                            x3895))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "ReferenceError") "prototype")
    let cast_from = Obj.magic
  end
module Record =
  struct
    type ('K, 'T) t = any
    let rec t_of_js :
      'K 'T . (Ojs.t -> 'K) -> (Ojs.t -> 'T) -> Ojs.t -> ('K, 'T) t = fun
      (type __K) -> fun (type __T) ->
      fun (__K_of_js : Ojs.t -> __K) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x3898 : Ojs.t) -> any_of_js x3898
    and t_to_js :
      'K 'T . ('K -> Ojs.t) -> ('T -> Ojs.t) -> ('K, 'T) t -> Ojs.t = fun
      (type __K) -> fun (type __T) ->
      fun (__K_to_js : __K -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x3897 : any) -> any_to_js x3897
    type ('K, 'T) t_2 = ('K, 'T) t
    let rec t_2_of_js :
      'K 'T . (Ojs.t -> 'K) -> (Ojs.t -> 'T) -> Ojs.t -> ('K, 'T) t_2 = fun
      (type __K) -> fun (type __T) ->
      fun (__K_of_js : Ojs.t -> __K) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x3902 : Ojs.t) -> t_of_js __K_of_js __T_of_js x3902
    and t_2_to_js :
      'K 'T . ('K -> Ojs.t) -> ('T -> Ojs.t) -> ('K, 'T) t_2 -> Ojs.t = fun
      (type __K) -> fun (type __T) ->
      fun (__K_to_js : __K -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x3899 : (__K, __T) t) -> t_to_js __K_to_js __T_to_js x3899
  end
module ReadonlySet =
  struct
    type 'T t = [ `ReadonlySet of 'T  | 'T IterableIterator.tags_1] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x3907 : Ojs.t) -> t_of_js __T_of_js x3907
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x3905 : __T t) -> t_to_js __T_to_js x3905
    type 'T tags = [ `ReadonlySet of 'T  | 'T IterableIterator.tags_1]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ReadonlySet of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x3911 : Ojs.t) -> intf_of_js __tags_of_js x3911
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x3909 : __tags intf) -> intf_to_js __tags_to_js x3909
    let (entries : ('tags, 'T) this -> ('T * 'T) IterableIterator.t) =
      fun (x3913 : ('tags, 'T) this) ->
        IterableIterator.t_of_js
          (fun (x3916 : Ojs.t) ->
             let x3917 = x3916 in
             ((Obj.magic (Ojs.array_get x3917 0)),
               (Obj.magic (Ojs.array_get x3917 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic x3913) "entries" [||])
    let (keys : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x3918 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x3918) "keys" [||])
    let (values : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x3922 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x3922) "values" [||])
    let (forEach :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> value2:'T -> set_:'T t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x3934 : ('tags, 'T) this) ->
        fun ~callbackfn:(x3926 : value:'T -> value2:'T -> set_:'T t -> unit)
          ->
          fun ?thisArg:(x3927 : any option) ->
            fun () ->
              ignore
                (let x3937 = this_to_js Obj.magic Obj.magic x3934 in
                 Ojs.call (Ojs.get_prop_ascii x3937 "forEach") "apply"
                   [|x3937;((let x3928 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3928 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3930 : Ojs.t) ->
                                          fun (x3931 : Ojs.t) ->
                                            fun (x3932 : Ojs.t) ->
                                              x3926 ~value:(Obj.magic x3930)
                                                ~value2:(Obj.magic x3931)
                                                ~set_:(t_of_js Obj.magic
                                                         x3932)))|]);
                             (match x3927 with
                              | Some x3929 ->
                                  ignore
                                    (Ojs.call x3928 "push"
                                       [|(any_to_js x3929)|])
                              | None -> ());
                             x3928))|])
    let (has : ('tags, 'T) this -> value:'T -> bool) =
      fun (x3939 : ('tags, 'T) this) ->
        fun ~value:(x3938 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x3939) "has"
               [|(Obj.magic x3938)|])
    let (get_size : ('tags, 'T) this -> float) =
      fun (x3942 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x3942) "size")
    let cast_from = Obj.magic
  end
module ReadonlyMap =
  struct
    type ('K, 'V) t =
      [ `ReadonlyMap of ('K * 'V)  | ('K * 'V) IterableIterator.tags_1] intf
    let rec t_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) t =
      fun _K -> fun _V -> Obj.magic
    and t_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) t -> Ojs.t =
      fun _K -> fun _V -> Obj.magic
    type ('K, 'V) t_2 = ('K, 'V) t
    let rec t_2_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) t_2 = fun
      (type __K) -> fun (type __V) ->
      fun (__K_of_js : Ojs.t -> __K) ->
        fun (__V_of_js : Ojs.t -> __V) ->
          fun (x3948 : Ojs.t) -> t_of_js __K_of_js __V_of_js x3948
    and t_2_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) t_2 -> Ojs.t = fun
      (type __K) -> fun (type __V) ->
      fun (__K_to_js : __K -> Ojs.t) ->
        fun (__V_to_js : __V -> Ojs.t) ->
          fun (x3945 : (__K, __V) t) -> t_to_js __K_to_js __V_to_js x3945
    type ('K, 'V) tags =
      [ `ReadonlyMap of ('K * 'V)  | ('K * 'V) IterableIterator.tags_1]
    type ('K, 'V) tags_2 = ('K, 'V) tags
    type ('tags, 'K, 'V) this =
      'tags intf constraint 'tags = [> `ReadonlyMap of ('K * 'V) ]
    let rec this_of_js :
      'tags 'K 'V .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('tags, 'K, 'V) this
      = fun (type __tags) -> fun (type __K) -> fun (type __V) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__K_of_js : Ojs.t -> __K) ->
          fun (__V_of_js : Ojs.t -> __V) ->
            fun (x3953 : Ojs.t) -> intf_of_js __tags_of_js x3953
    and this_to_js :
      'tags 'K 'V .
        ('tags -> Ojs.t) ->
          ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('tags, 'K, 'V) this -> Ojs.t
      = fun (type __tags) -> fun (type __K) -> fun (type __V) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__K_to_js : __K -> Ojs.t) ->
          fun (__V_to_js : __V -> Ojs.t) ->
            fun (x3951 : __tags intf) -> intf_to_js __tags_to_js x3951
    let (entries : ('tags, 'K, 'V) this -> ('K * 'V) IterableIterator.t) =
      fun (x3955 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js
          (fun (x3959 : Ojs.t) ->
             let x3960 = x3959 in
             ((Obj.magic (Ojs.array_get x3960 0)),
               (Obj.magic (Ojs.array_get x3960 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x3955)
             "entries" [||])
    let (keys : ('tags, 'K, 'V) this -> 'K IterableIterator.t) =
      fun (x3961 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x3961) "keys"
             [||])
    let (values : ('tags, 'K, 'V) this -> 'V IterableIterator.t) =
      fun (x3966 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x3966) "values"
             [||])
    let (forEach :
      ('tags, 'K, 'V) this ->
        callbackfn:(value:'V -> key:'K -> map:('K, 'V) t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x3980 : ('tags, 'K, 'V) this) ->
        fun
          ~callbackfn:(x3971 : value:'V -> key:'K -> map:('K, 'V) t -> unit)
          ->
          fun ?thisArg:(x3972 : any option) ->
            fun () ->
              ignore
                (let x3984 = this_to_js Obj.magic Obj.magic Obj.magic x3980 in
                 Ojs.call (Ojs.get_prop_ascii x3984 "forEach") "apply"
                   [|x3984;((let x3973 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3973 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3975 : Ojs.t) ->
                                          fun (x3976 : Ojs.t) ->
                                            fun (x3977 : Ojs.t) ->
                                              x3971 ~value:(Obj.magic x3975)
                                                ~key:(Obj.magic x3976)
                                                ~map:(t_of_js Obj.magic
                                                        Obj.magic x3977)))|]);
                             (match x3972 with
                              | Some x3974 ->
                                  ignore
                                    (Ojs.call x3973 "push"
                                       [|(any_to_js x3974)|])
                              | None -> ());
                             x3973))|])
    let (get_ : ('tags, 'K, 'V) this -> key:'K -> 'V or_undefined) =
      fun (x3986 : ('tags, 'K, 'V) this) ->
        fun ~key:(x3985 : 'K) ->
          or_undefined_of_js Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x3986) "get"
               [|(Obj.magic x3985)|])
    let (has : ('tags, 'K, 'V) this -> key:'K -> bool) =
      fun (x3992 : ('tags, 'K, 'V) this) ->
        fun ~key:(x3991 : 'K) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x3992) "has"
               [|(Obj.magic x3991)|])
    let (get_size : ('tags, 'K, 'V) this -> float) =
      fun (x3996 : ('tags, 'K, 'V) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii
             (this_to_js Obj.magic Obj.magic Obj.magic x3996) "size")
    let cast_from = Obj.magic
  end
module RangeError =
  struct
    type t = [ `Error  | `RangeError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4001 : Ojs.t) -> t_of_js x4001
    and t_0_to_js : t_0 -> Ojs.t = fun (x4000 : t) -> t_to_js x4000
    type tags = [ `Error  | `RangeError ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `RangeError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4004 : Ojs.t) -> intf_of_js __tags_of_js x4004
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4002 : __tags intf) -> intf_to_js __tags_to_js x4002
    let (create : ?message:string -> unit -> t) =
      fun ?message:(x4006 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "RangeError")
               (let x4007 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x4006 with
                 | Some x4008 ->
                     ignore
                       (Ojs.call x4007 "push" [|(Ojs.string_to_js x4008)|])
                 | None -> ());
                x4007))
    let (invoke : ?message:string -> unit -> t) =
      fun ?message:(x4009 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "RangeError") "apply"
               [|Ojs.null;((let x4010 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x4009 with
                             | Some x4011 ->
                                 ignore
                                   (Ojs.call x4010 "push"
                                      [|(Ojs.string_to_js x4011)|])
                             | None -> ());
                            x4010))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RangeError")
             "prototype")
    let cast_from = Obj.magic
  end
module ProxyHandler =
  struct
    type 'T t = [ `ProxyHandler of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4014 : Ojs.t) -> t_of_js __T_of_js x4014
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x4012 : __T t) -> t_to_js __T_to_js x4012
    type 'T tags = [ `ProxyHandler of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ProxyHandler of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4018 : Ojs.t) -> intf_of_js __tags_of_js x4018
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4016 : __tags intf) -> intf_to_js __tags_to_js x4016
    let (apply_ :
      ('tags, 'T) this ->
        target:'T -> thisArg:any -> argArray:any list -> any)
      =
      fun (x4024 : ('tags, 'T) this) ->
        fun ~target:(x4020 : 'T) ->
          fun ~thisArg:(x4021 : any) ->
            fun ~argArray:(x4022 : any list) ->
              any_of_js
                (Ojs.call (this_to_js Obj.magic Obj.magic x4024) "apply"
                   [|(Obj.magic x4020);(any_to_js x4021);(Ojs.list_to_js
                                                            any_to_js x4022)|])
    let (construct :
      ('tags, 'T) this ->
        target:'T ->
          argArray:any list -> newTarget:Function.t -> untyped_object)
      =
      fun (x4031 : ('tags, 'T) this) ->
        fun ~target:(x4027 : 'T) ->
          fun ~argArray:(x4028 : any list) ->
            fun ~newTarget:(x4030 : Function.t) ->
              untyped_object_of_js
                (Ojs.call (this_to_js Obj.magic Obj.magic x4031) "construct"
                   [|(Obj.magic x4027);(Ojs.list_to_js any_to_js x4028);(
                     Function.t_to_js x4030)|])
    let (defineProperty :
      ('tags, 'T) this ->
        target:'T ->
          p:symbol or_string -> attributes:PropertyDescriptor.t -> bool)
      =
      fun (x4038 : ('tags, 'T) this) ->
        fun ~target:(x4034 : 'T) ->
          fun ~p:(x4035 : symbol or_string) ->
            fun ~attributes:(x4037 : PropertyDescriptor.t) ->
              Ojs.bool_of_js
                (Ojs.call (this_to_js Obj.magic Obj.magic x4038)
                   "defineProperty"
                   [|(Obj.magic x4034);(or_string_to_js symbol_to_js x4035);(
                     PropertyDescriptor.t_to_js x4037)|])
    let (deleteProperty :
      ('tags, 'T) this -> target:'T -> p:symbol or_string -> bool) =
      fun (x4044 : ('tags, 'T) this) ->
        fun ~target:(x4041 : 'T) ->
          fun ~p:(x4042 : symbol or_string) ->
            Ojs.bool_of_js
              (Ojs.call (this_to_js Obj.magic Obj.magic x4044)
                 "deleteProperty"
                 [|(Obj.magic x4041);(or_string_to_js symbol_to_js x4042)|])
    let (get_ :
      ('tags, 'T) this ->
        target:'T -> p:symbol or_string -> receiver:any -> any)
      =
      fun (x4051 : ('tags, 'T) this) ->
        fun ~target:(x4047 : 'T) ->
          fun ~p:(x4048 : symbol or_string) ->
            fun ~receiver:(x4050 : any) ->
              any_of_js
                (Ojs.call (this_to_js Obj.magic Obj.magic x4051) "get"
                   [|(Obj.magic x4047);(or_string_to_js symbol_to_js x4048);(
                     any_to_js x4050)|])
    let (getOwnPropertyDescriptor :
      ('tags, 'T) this ->
        target:'T -> p:symbol or_string -> PropertyDescriptor.t or_undefined)
      =
      fun (x4057 : ('tags, 'T) this) ->
        fun ~target:(x4054 : 'T) ->
          fun ~p:(x4055 : symbol or_string) ->
            or_undefined_of_js PropertyDescriptor.t_of_js
              (Ojs.call (this_to_js Obj.magic Obj.magic x4057)
                 "getOwnPropertyDescriptor"
                 [|(Obj.magic x4054);(or_string_to_js symbol_to_js x4055)|])
    let (getPrototypeOf :
      ('tags, 'T) this -> target:'T -> untyped_object or_null) =
      fun (x4062 : ('tags, 'T) this) ->
        fun ~target:(x4061 : 'T) ->
          or_null_of_js untyped_object_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x4062) "getPrototypeOf"
               [|(Obj.magic x4061)|])
    let (has : ('tags, 'T) this -> target:'T -> p:symbol or_string -> bool) =
      fun (x4069 : ('tags, 'T) this) ->
        fun ~target:(x4066 : 'T) ->
          fun ~p:(x4067 : symbol or_string) ->
            Ojs.bool_of_js
              (Ojs.call (this_to_js Obj.magic Obj.magic x4069) "has"
                 [|(Obj.magic x4066);(or_string_to_js symbol_to_js x4067)|])
    let (isExtensible : ('tags, 'T) this -> target:'T -> bool) =
      fun (x4073 : ('tags, 'T) this) ->
        fun ~target:(x4072 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x4073) "isExtensible"
               [|(Obj.magic x4072)|])
    let (ownKeys :
      ('tags, 'T) this -> target:'T -> symbol or_string ArrayLike.t) =
      fun (x4077 : ('tags, 'T) this) ->
        fun ~target:(x4076 : 'T) ->
          ArrayLike.t_of_js
            (fun (x4080 : Ojs.t) -> or_string_of_js symbol_of_js x4080)
            (Ojs.call (this_to_js Obj.magic Obj.magic x4077) "ownKeys"
               [|(Obj.magic x4076)|])
    let (preventExtensions : ('tags, 'T) this -> target:'T -> bool) =
      fun (x4083 : ('tags, 'T) this) ->
        fun ~target:(x4082 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x4083)
               "preventExtensions" [|(Obj.magic x4082)|])
    let (set_ :
      ('tags, 'T) this ->
        target:'T -> p:symbol or_string -> value:any -> receiver:any -> bool)
      =
      fun (x4091 : ('tags, 'T) this) ->
        fun ~target:(x4086 : 'T) ->
          fun ~p:(x4087 : symbol or_string) ->
            fun ~value:(x4089 : any) ->
              fun ~receiver:(x4090 : any) ->
                Ojs.bool_of_js
                  (Ojs.call (this_to_js Obj.magic Obj.magic x4091) "set"
                     [|(Obj.magic x4086);(or_string_to_js symbol_to_js x4087);(
                       any_to_js x4089);(any_to_js x4090)|])
    let (setPrototypeOf :
      ('tags, 'T) this -> target:'T -> v:untyped_object or_null -> bool) =
      fun (x4097 : ('tags, 'T) this) ->
        fun ~target:(x4094 : 'T) ->
          fun ~v:(x4095 : untyped_object or_null) ->
            Ojs.bool_of_js
              (Ojs.call (this_to_js Obj.magic Obj.magic x4097)
                 "setPrototypeOf"
                 [|(Obj.magic x4094);(or_null_to_js untyped_object_to_js
                                        x4095)|])
    let cast_from = Obj.magic
  end
module ProxyStatic =
  struct
    module AnonymousInterface41 =
      struct
        type 'T t = Ojs.t
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) -> fun (x4101 : Ojs.t) -> x4101
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) -> fun (x4100 : Ojs.t) -> x4100
        let (get_proxy : 'T t -> 'T) =
          fun (x4102 : 'T t) ->
            Obj.magic (Ojs.get_prop_ascii (t_to_js Obj.magic x4102) "proxy")
        let (set_proxy : 'T t -> 'T -> unit) =
          fun (x4104 : 'T t) ->
            fun (x4105 : 'T) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x4104) "proxy"
                (Obj.magic x4105)
        let (revoke : 'T t -> unit) =
          fun (x4107 : 'T t) ->
            ignore (Ojs.call (t_to_js Obj.magic x4107) "revoke" [||])
        let (create : proxy:'T -> revoke:(unit -> unit) -> unit -> 'T t) =
          fun ~proxy:(x4109 : 'T) ->
            fun ~revoke:(x4110 : unit -> unit) ->
              fun () ->
                let x4111 = Ojs.empty_obj () in
                Ojs.set_prop_ascii x4111 "proxy" (Obj.magic x4109);
                Ojs.set_prop_ascii x4111 "revoke"
                  (Ojs.fun_to_js 1 (fun _ -> x4110 ()));
                t_of_js Obj.magic x4111
      end
    let (revocable :
      target:'T -> handler:'T ProxyHandler.t -> 'T AnonymousInterface41.t) =
      fun ~target:(x4113 : 'T) ->
        fun ~handler:(x4114 : 'T ProxyHandler.t) ->
          AnonymousInterface41.t_of_js Obj.magic
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Proxy") "revocable"
               [|(Obj.magic x4113);(ProxyHandler.t_to_js Obj.magic x4114)|])
    let (create : target:'T -> handler:'T ProxyHandler.t -> 'T) =
      fun ~target:(x4117 : 'T) ->
        fun ~handler:(x4118 : 'T ProxyHandler.t) ->
          Obj.magic
            (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Proxy")
               [|(Obj.magic x4117);(ProxyHandler.t_to_js Obj.magic x4118)|])
  end
module ProxyConstructor =
  struct
    module AnonymousInterface41 =
      struct
        type 'T t = Ojs.t
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) -> fun (x4121 : Ojs.t) -> x4121
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) -> fun (x4120 : Ojs.t) -> x4120
        let (get_proxy : 'T t -> 'T) =
          fun (x4122 : 'T t) ->
            Obj.magic (Ojs.get_prop_ascii (t_to_js Obj.magic x4122) "proxy")
        let (set_proxy : 'T t -> 'T -> unit) =
          fun (x4124 : 'T t) ->
            fun (x4125 : 'T) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x4124) "proxy"
                (Obj.magic x4125)
        let (revoke : 'T t -> unit) =
          fun (x4127 : 'T t) ->
            ignore (Ojs.call (t_to_js Obj.magic x4127) "revoke" [||])
        let (create : proxy:'T -> revoke:(unit -> unit) -> unit -> 'T t) =
          fun ~proxy:(x4129 : 'T) ->
            fun ~revoke:(x4130 : unit -> unit) ->
              fun () ->
                let x4131 = Ojs.empty_obj () in
                Ojs.set_prop_ascii x4131 "proxy" (Obj.magic x4129);
                Ojs.set_prop_ascii x4131 "revoke"
                  (Ojs.fun_to_js 1 (fun _ -> x4130 ()));
                t_of_js Obj.magic x4131
      end
    type t = [ `ProxyConstructor ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4134 : Ojs.t) -> t_of_js x4134
    and t_0_to_js : t_0 -> Ojs.t = fun (x4133 : t) -> t_to_js x4133
    type tags = [ `ProxyConstructor ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ProxyConstructor ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4137 : Ojs.t) -> intf_of_js __tags_of_js x4137
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4135 : __tags intf) -> intf_to_js __tags_to_js x4135
    let (revocable :
      'tags this ->
        target:'T -> handler:'T ProxyHandler.t -> 'T AnonymousInterface41.t)
      =
      fun (x4142 : 'tags this) ->
        fun ~target:(x4139 : 'T) ->
          fun ~handler:(x4140 : 'T ProxyHandler.t) ->
            AnonymousInterface41.t_of_js Obj.magic
              (Ojs.call (this_to_js Obj.magic x4142) "revocable"
                 [|(Obj.magic x4139);(ProxyHandler.t_to_js Obj.magic x4140)|])
    let (create : 'tags this -> target:'T -> handler:'T ProxyHandler.t -> 'T)
      =
      fun (x4148 : 'tags this) ->
        fun ~target:(x4145 : 'T) ->
          fun ~handler:(x4146 : 'T ProxyHandler.t) ->
            Obj.magic
              (Ojs.new_obj (this_to_js Obj.magic x4148)
                 [|(Obj.magic x4145);(ProxyHandler.t_to_js Obj.magic x4146)|])
    let cast_from = Obj.magic
  end
module ThisType =
  struct
    type 'T t = [ `ThisType of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4152 : Ojs.t) -> t_of_js __T_of_js x4152
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x4150 : __T t) -> t_to_js __T_to_js x4150
    type 'T tags = [ `ThisType of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ThisType of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4156 : Ojs.t) -> intf_of_js __tags_of_js x4156
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4154 : __tags intf) -> intf_to_js __tags_to_js x4154
    let cast_from = Obj.magic
  end
module Readonly =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4159 : Ojs.t) -> any_of_js x4159
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x4158 : any) -> any_to_js x4158
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4162 : Ojs.t) -> t_of_js __T_of_js x4162
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x4160 : __T t) -> t_to_js __T_to_js x4160
  end
module PropertyDescriptorMap =
  struct
    type t = [ `PropertyDescriptorMap ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4165 : Ojs.t) -> t_of_js x4165
    and t_0_to_js : t_0 -> Ojs.t = fun (x4164 : t) -> t_to_js x4164
    type tags = [ `PropertyDescriptorMap ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `PropertyDescriptorMap ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4168 : Ojs.t) -> intf_of_js __tags_of_js x4168
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4166 : __tags intf) -> intf_to_js __tags_to_js x4166
    let (get : 'tags this -> string -> PropertyDescriptor.t) =
      fun (x4170 : 'tags this) ->
        fun (x4172 : string) ->
          PropertyDescriptor.t_of_js
            (Ojs.get_prop (this_to_js Obj.magic x4170)
               (Ojs.string_to_js x4172))
    let (set : 'tags this -> string -> PropertyDescriptor.t -> unit) =
      fun (x4173 : 'tags this) ->
        fun (x4175 : string) ->
          fun (x4176 : PropertyDescriptor.t) ->
            Ojs.set_prop (this_to_js Obj.magic x4173)
              (Ojs.string_to_js x4175) (PropertyDescriptor.t_to_js x4176)
    let cast_from = Obj.magic
  end
module Object =
  struct
    module AnonymousInterface48 =
      struct
        type 'T t = Ojs.t
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) -> fun (x4178 : Ojs.t) -> x4178
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) -> fun (x4177 : Ojs.t) -> x4177
        let (get : 'T t -> string -> 'T) =
          fun (x4179 : 'T t) ->
            fun (x4181 : string) ->
              Obj.magic
                (Ojs.get_prop (t_to_js Obj.magic x4179)
                   (Ojs.string_to_js x4181))
        let (set : 'T t -> string -> 'T -> unit) =
          fun (x4182 : 'T t) ->
            fun (x4184 : string) ->
              fun (x4185 : 'T) ->
                Ojs.set_prop (t_to_js Obj.magic x4182)
                  (Ojs.string_to_js x4184) (Obj.magic x4185)
      end
    module AnonymousInterface45 =
      struct
        type 'T t = Ojs.t
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) -> fun (x4187 : Ojs.t) -> x4187
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) -> fun (x4186 : Ojs.t) -> x4186
        let (get : 'T t -> string -> 'T) =
          fun (x4188 : 'T t) ->
            fun (x4190 : string) ->
              Obj.magic
                (Ojs.get_prop (t_to_js Obj.magic x4188)
                   (Ojs.string_to_js x4190))
        let (set : 'T t -> string -> 'T -> unit) =
          fun (x4191 : 'T t) ->
            fun (x4193 : string) ->
              fun (x4194 : 'T) ->
                Ojs.set_prop (t_to_js Obj.magic x4191)
                  (Ojs.string_to_js x4193) (Obj.magic x4194)
      end
    module AnonymousInterface17 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x4196 : Ojs.t) -> x4196
        and t_to_js : t -> Ojs.t = fun (x4195 : Ojs.t) -> x4195
        let (get : t -> string -> PropertyDescriptor.t) =
          fun (x4197 : t) ->
            fun (x4198 : string) ->
              PropertyDescriptor.t_of_js
                (Ojs.get_prop (t_to_js x4197) (Ojs.string_to_js x4198))
        let (set : t -> string -> PropertyDescriptor.t -> unit) =
          fun (x4199 : t) ->
            fun (x4200 : string) ->
              fun (x4201 : PropertyDescriptor.t) ->
                Ojs.set_prop (t_to_js x4199) (Ojs.string_to_js x4200)
                  (PropertyDescriptor.t_to_js x4201)
      end
    type t = [ `Object ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4203 : Ojs.t) -> t_of_js x4203
    and t_0_to_js : t_0 -> Ojs.t = fun (x4202 : t) -> t_to_js x4202
    type tags = [ `Object ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Object ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4206 : Ojs.t) -> intf_of_js __tags_of_js x4206
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4204 : __tags intf) -> intf_to_js __tags_to_js x4204
    let (get_constructor : 'tags this -> Function.t) =
      fun (x4208 : 'tags this) ->
        Function.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4208) "constructor")
    let (set_constructor : 'tags this -> Function.t -> unit) =
      fun (x4210 : 'tags this) ->
        fun (x4211 : Function.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4210) "constructor"
            (Function.t_to_js x4211)
    let (toString : 'tags this -> string) =
      fun (x4213 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x4213) "toString" [||])
    let (toLocaleString : 'tags this -> string) =
      fun (x4215 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x4215) "toLocaleString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x4217 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x4217) "valueOf" [||])
    let (hasOwnProperty : 'tags this -> v:PropertyKey.t -> bool) =
      fun (x4220 : 'tags this) ->
        fun ~v:(x4219 : PropertyKey.t) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic x4220) "hasOwnProperty"
               [|(PropertyKey.t_to_js x4219)|])
    let (isPrototypeOf : 'tags this -> v:t -> bool) =
      fun (x4223 : 'tags this) ->
        fun ~v:(x4222 : t) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic x4223) "isPrototypeOf"
               [|(t_to_js x4222)|])
    let (propertyIsEnumerable : 'tags this -> v:PropertyKey.t -> bool) =
      fun (x4226 : 'tags this) ->
        fun ~v:(x4225 : PropertyKey.t) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic x4226) "propertyIsEnumerable"
               [|(PropertyKey.t_to_js x4225)|])
    let (fromEntries :
      (PropertyKey.t * 'T) Iterable.t -> 'T AnonymousInterface45.t) =
      fun (x4228 : (PropertyKey.t * 'T) Iterable.t) ->
        AnonymousInterface45.t_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "fromEntries"
             [|(Iterable.t_to_js
                  (fun (x4229 : (PropertyKey.t * 'T)) ->
                     let (x4230, x4231) = x4229 in
                     let x4232 = Ojs.array_make 2 in
                     Ojs.array_set x4232 0 (PropertyKey.t_to_js x4230);
                     Ojs.array_set x4232 1 (Obj.magic x4231);
                     x4232) x4228)|])
    let (fromEntries' : any list Iterable.t -> any) =
      fun (x4234 : any list Iterable.t) ->
        any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "fromEntries"
             [|(Iterable.t_to_js
                  (fun (x4235 : any list) -> Ojs.list_to_js any_to_js x4235)
                  x4234)|])
    let (values :
      ('T ArrayLike.t, 'T AnonymousInterface48.t) union2 -> 'T list) =
      fun (x4237 : ('T ArrayLike.t, 'T AnonymousInterface48.t) union2) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "values"
             [|(union2_to_js
                  (fun (x4238 : 'T ArrayLike.t) ->
                     ArrayLike.t_to_js Obj.magic x4238)
                  (fun (x4240 : 'T AnonymousInterface48.t) ->
                     AnonymousInterface48.t_to_js Obj.magic x4240) x4237)|])
    let (values' : untyped_object -> any list) =
      fun (x4243 : untyped_object) ->
        Ojs.list_of_js any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "values"
             [|(untyped_object_to_js x4243)|])
    let (entries :
      ('T ArrayLike.t, 'T AnonymousInterface48.t) union2 ->
        (string * 'T) list)
      =
      fun (x4245 : ('T ArrayLike.t, 'T AnonymousInterface48.t) union2) ->
        Ojs.list_of_js
          (fun (x4250 : Ojs.t) ->
             let x4251 = x4250 in
             ((Ojs.string_of_js (Ojs.array_get x4251 0)),
               (Obj.magic (Ojs.array_get x4251 1))))
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "entries"
             [|(union2_to_js
                  (fun (x4246 : 'T ArrayLike.t) ->
                     ArrayLike.t_to_js Obj.magic x4246)
                  (fun (x4248 : 'T AnonymousInterface48.t) ->
                     AnonymousInterface48.t_to_js Obj.magic x4248) x4245)|])
    let (entries' : untyped_object -> (string * any) list) =
      fun (x4252 : untyped_object) ->
        Ojs.list_of_js
          (fun (x4253 : Ojs.t) ->
             let x4254 = x4253 in
             ((Ojs.string_of_js (Ojs.array_get x4254 0)),
               (any_of_js (Ojs.array_get x4254 1))))
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "entries"
             [|(untyped_object_to_js x4252)|])
    let (getOwnPropertyDescriptors :
      'T -> (any, AnonymousInterface17.t) intersection2) =
      fun (x4255 : 'T) ->
        intersection2_of_js any_of_js AnonymousInterface17.t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
             "getOwnPropertyDescriptors" [|(Obj.magic x4255)|])
    let (assign : target:'T -> source:'U -> ('T, 'U) intersection2) =
      fun ~target:(x4258 : 'T) ->
        fun ~source:(x4259 : 'U) ->
          intersection2_of_js Obj.magic Obj.magic
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "assign"
               [|(Obj.magic x4258);(Obj.magic x4259)|])
    let (assign' :
      target:'T -> source1:'U -> source2:'V -> ('T, 'U, 'V) intersection3) =
      fun ~target:(x4262 : 'T) ->
        fun ~source1:(x4263 : 'U) ->
          fun ~source2:(x4264 : 'V) ->
            intersection3_of_js Obj.magic Obj.magic Obj.magic
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "assign"
                 [|(Obj.magic x4262);(Obj.magic x4263);(Obj.magic x4264)|])
    let (assign'' :
      target:'T ->
        source1:'U ->
          source2:'V -> source3:'W -> ('T, 'U, 'V, 'W) intersection4)
      =
      fun ~target:(x4268 : 'T) ->
        fun ~source1:(x4269 : 'U) ->
          fun ~source2:(x4270 : 'V) ->
            fun ~source3:(x4271 : 'W) ->
              intersection4_of_js Obj.magic Obj.magic Obj.magic Obj.magic
                (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "assign"
                   [|(Obj.magic x4268);(Obj.magic x4269);(Obj.magic x4270);(
                     Obj.magic x4271)|])
    let (assign''' : target:untyped_object -> sources:any list -> any) =
      fun ~target:(x4276 : untyped_object) ->
        fun ~sources:(x4277 : any list) ->
          any_of_js
            (let x4280 = Ojs.get_prop_ascii Ojs.global "Object" in
             Ojs.call (Ojs.get_prop_ascii x4280 "assign") "apply"
               [|x4280;((let x4278 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         ignore
                           (Ojs.call x4278 "push"
                              [|(untyped_object_to_js x4276)|]);
                         List.iter
                           (fun (x4279 : any) ->
                              ignore
                                (Ojs.call x4278 "push" [|(any_to_js x4279)|]))
                           x4277;
                         x4278))|])
    let (getOwnPropertySymbols : any -> symbol list) =
      fun (x4281 : any) ->
        Ojs.list_of_js symbol_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
             "getOwnPropertySymbols" [|(any_to_js x4281)|])
    let (keys : untyped_object -> string list) =
      fun (x4283 : untyped_object) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "keys"
             [|(untyped_object_to_js x4283)|])
    let (is : value1:any -> value2:any -> bool) =
      fun ~value1:(x4285 : any) ->
        fun ~value2:(x4286 : any) ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "is"
               [|(any_to_js x4285);(any_to_js x4286)|])
    let (setPrototypeOf : o:any -> proto:untyped_object or_null -> any) =
      fun ~o:(x4287 : any) ->
        fun ~proto:(x4288 : untyped_object or_null) ->
          any_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
               "setPrototypeOf"
               [|(any_to_js x4287);(or_null_to_js untyped_object_to_js x4288)|])
    let (create : ?value:any -> unit -> t) =
      fun ?value:(x4290 : any option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Object")
               (let x4291 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x4290 with
                 | Some x4292 ->
                     ignore (Ojs.call x4291 "push" [|(any_to_js x4292)|])
                 | None -> ());
                x4291))
    let (invoke : unit -> any) =
      fun () ->
        any_of_js (Ojs.apply (Ojs.get_prop_ascii Ojs.global "Object") [||])
    let (invoke' : any -> any) =
      fun (x4293 : any) ->
        any_of_js
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "Object")
             [|(any_to_js x4293)|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Object")
             "prototype")
    let (getPrototypeOf : any -> any) =
      fun (x4294 : any) ->
        any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "getPrototypeOf"
             [|(any_to_js x4294)|])
    let (getOwnPropertyDescriptor :
      o:any -> p:PropertyKey.t -> PropertyDescriptor.t or_undefined) =
      fun ~o:(x4295 : any) ->
        fun ~p:(x4296 : PropertyKey.t) ->
          or_undefined_of_js PropertyDescriptor.t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
               "getOwnPropertyDescriptor"
               [|(any_to_js x4295);(PropertyKey.t_to_js x4296)|])
    let (getOwnPropertyNames : any -> string list) =
      fun (x4298 : any) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
             "getOwnPropertyNames" [|(any_to_js x4298)|])
    let (create_ : untyped_object or_null -> any) =
      fun (x4300 : untyped_object or_null) ->
        any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "create"
             [|(or_null_to_js untyped_object_to_js x4300)|])
    let (create_' :
      o:untyped_object or_null ->
        properties:(PropertyDescriptorMap.t, any ThisType.t) intersection2 ->
          any)
      =
      fun ~o:(x4302 : untyped_object or_null) ->
        fun
          ~properties:(x4304 :
                        (PropertyDescriptorMap.t, any ThisType.t)
                          intersection2)
          ->
          any_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "create"
               [|(or_null_to_js untyped_object_to_js x4302);(intersection2_to_js
                                                               PropertyDescriptorMap.t_to_js
                                                               (fun
                                                                  (x4306 :
                                                                    any
                                                                    ThisType.t)
                                                                  ->
                                                                  ThisType.t_to_js
                                                                    any_to_js
                                                                    x4306)
                                                               x4304)|])
    let (defineProperty :
      o:'T ->
        p:PropertyKey.t ->
          attributes:(PropertyDescriptor.t, any ThisType.t) intersection2 ->
            'T)
      =
      fun ~o:(x4308 : 'T) ->
        fun ~p:(x4309 : PropertyKey.t) ->
          fun
            ~attributes:(x4310 :
                          (PropertyDescriptor.t, any ThisType.t)
                            intersection2)
            ->
            Obj.magic
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
                 "defineProperty"
                 [|(Obj.magic x4308);(PropertyKey.t_to_js x4309);(intersection2_to_js
                                                                    PropertyDescriptor.t_to_js
                                                                    (
                                                                    fun
                                                                    (x4312 :
                                                                    any
                                                                    ThisType.t)
                                                                    ->
                                                                    ThisType.t_to_js
                                                                    any_to_js
                                                                    x4312)
                                                                    x4310)|])
    let (defineProperties :
      o:'T ->
        properties:(PropertyDescriptorMap.t, any ThisType.t) intersection2 ->
          'T)
      =
      fun ~o:(x4314 : 'T) ->
        fun
          ~properties:(x4315 :
                        (PropertyDescriptorMap.t, any ThisType.t)
                          intersection2)
          ->
          Obj.magic
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
               "defineProperties"
               [|(Obj.magic x4314);(intersection2_to_js
                                      PropertyDescriptorMap.t_to_js
                                      (fun (x4317 : any ThisType.t) ->
                                         ThisType.t_to_js any_to_js x4317)
                                      x4315)|])
    let (seal : 'T -> 'T) =
      fun (x4319 : 'T) ->
        Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "seal"
             [|(Obj.magic x4319)|])
    let (freeze : 'T list -> 'T list) =
      fun (x4320 : 'T list) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "freeze"
             [|(Ojs.list_to_js Obj.magic x4320)|])
    let (freeze' : 'T -> 'T) =
      fun (x4323 : 'T) ->
        Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "freeze"
             [|(Obj.magic x4323)|])
    let (freeze'' : 'T -> 'T Readonly.t) =
      fun (x4324 : 'T) ->
        Readonly.t_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "freeze"
             [|(Obj.magic x4324)|])
    let (preventExtensions : 'T -> 'T) =
      fun (x4326 : 'T) ->
        Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
             "preventExtensions" [|(Obj.magic x4326)|])
    let (isSealed : any -> bool) =
      fun (x4327 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "isSealed"
             [|(any_to_js x4327)|])
    let (isFrozen : any -> bool) =
      fun (x4328 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "isFrozen"
             [|(any_to_js x4328)|])
    let (isExtensible : any -> bool) =
      fun (x4329 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "isExtensible"
             [|(any_to_js x4329)|])
    let (keys' : untyped_object -> string list) =
      fun (x4330 : untyped_object) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "keys"
             [|(untyped_object_to_js x4330)|])
    let cast_from = Obj.magic
  end
module PropertyDecorator =
  struct
    type t = [ `PropertyDecorator ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4333 : Ojs.t) -> t_of_js x4333
    and t_0_to_js : t_0 -> Ojs.t = fun (x4332 : t) -> t_to_js x4332
    type tags = [ `PropertyDecorator ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `PropertyDecorator ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4336 : Ojs.t) -> intf_of_js __tags_of_js x4336
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4334 : __tags intf) -> intf_to_js __tags_to_js x4334
    let (apply :
      'tags this -> target:Object.t -> propertyKey:symbol or_string -> unit)
      =
      fun (x4341 : 'tags this) ->
        fun ~target:(x4338 : Object.t) ->
          fun ~propertyKey:(x4339 : symbol or_string) ->
            ignore
              (Ojs.apply (this_to_js Obj.magic x4341)
                 [|(Object.t_to_js x4338);(or_string_to_js symbol_to_js x4339)|])
    let cast_from = Obj.magic
  end
module PromiseLike =
  struct
    type 'T t = [ `PromiseLike of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4345 : Ojs.t) -> t_of_js __T_of_js x4345
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x4343 : __T t) -> t_to_js __T_to_js x4343
    type 'T tags = [ `PromiseLike of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `PromiseLike of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4349 : Ojs.t) -> intf_of_js __tags_of_js x4349
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4347 : __tags intf) -> intf_to_js __tags_to_js x4347
    let (then_ :
      ('tags, 'T) this ->
        ?onfulfilled:('T -> ('TResult1, 'TResult1 t) union2)
          or_null_or_undefined ->
          ?onrejected:(any -> ('TResult2, 'TResult2 t) union2)
            or_null_or_undefined -> unit -> ('TResult1, 'TResult2) union2 t)
      =
      fun (x4366 : ('tags, 'T) this) ->
        fun
          ?onfulfilled:(x4351 :
                         ('T -> ('TResult1, 'TResult1 t) union2)
                           or_null_or_undefined option)
          ->
          fun
            ?onrejected:(x4352 :
                          (any -> ('TResult2, 'TResult2 t) union2)
                            or_null_or_undefined option)
            ->
            fun () ->
              t_of_js
                (fun (x4370 : Ojs.t) ->
                   union2_of_js Obj.magic Obj.magic x4370)
                (let x4369 = this_to_js Obj.magic Obj.magic x4366 in
                 Ojs.call (Ojs.get_prop_ascii x4369 "then") "apply"
                   [|x4369;((let x4353 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x4351 with
                              | Some x4360 ->
                                  ignore
                                    (Ojs.call x4353 "push"
                                       [|(or_null_or_undefined_to_js
                                            (fun
                                               (x4361 :
                                                 'T ->
                                                   ('TResult1, 'TResult1 t)
                                                     union2)
                                               ->
                                               Ojs.fun_to_js 1
                                                 (fun (x4362 : Ojs.t) ->
                                                    union2_to_js Obj.magic
                                                      (fun
                                                         (x4364 :
                                                           'TResult1 t)
                                                         ->
                                                         t_to_js Obj.magic
                                                           x4364)
                                                      (x4361
                                                         (Obj.magic x4362))))
                                            x4360)|])
                              | None -> ());
                             (match x4352 with
                              | Some x4354 ->
                                  ignore
                                    (Ojs.call x4353 "push"
                                       [|(or_null_or_undefined_to_js
                                            (fun
                                               (x4355 :
                                                 any ->
                                                   ('TResult2, 'TResult2 t)
                                                     union2)
                                               ->
                                               Ojs.fun_to_js 1
                                                 (fun (x4356 : Ojs.t) ->
                                                    union2_to_js Obj.magic
                                                      (fun
                                                         (x4358 :
                                                           'TResult2 t)
                                                         ->
                                                         t_to_js Obj.magic
                                                           x4358)
                                                      (x4355
                                                         (any_of_js x4356))))
                                            x4354)|])
                              | None -> ());
                             x4353))|])
    let cast_from = Obj.magic
  end
module PromiseConstructorLike =
  struct
    module AnonymousInterface9 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x4374 : Ojs.t) -> x4374
        and t_to_js : t -> Ojs.t = fun (x4373 : Ojs.t) -> x4373
        let (create :
          t ->
            executor:(resolve:(('T, 'T PromiseLike.t) union2 -> unit) ->
                        reject:(?reason:any -> unit -> unit) -> unit)
              -> 'T PromiseLike.t)
          =
          fun (x4385 : t) ->
            fun
              ~executor:(x4375 :
                          resolve:(('T, 'T PromiseLike.t) union2 -> unit) ->
                            reject:(?reason:any -> unit -> unit) -> unit)
              ->
              PromiseLike.t_of_js Obj.magic
                (Ojs.new_obj (t_to_js x4385)
                   [|(Ojs.fun_to_js 2
                        (fun (x4376 : Ojs.t) ->
                           fun (x4381 : Ojs.t) ->
                             x4375
                               ~resolve:(fun
                                           (x4377 :
                                             ('T, 'T PromiseLike.t) union2)
                                           ->
                                           ignore
                                             (Ojs.apply x4376
                                                [|(union2_to_js Obj.magic
                                                     (fun
                                                        (x4379 :
                                                          'T PromiseLike.t)
                                                        ->
                                                        PromiseLike.t_to_js
                                                          Obj.magic x4379)
                                                     x4377)|]))
                               ~reject:(fun ?reason:(x4382 : any option) ->
                                          fun () ->
                                            ignore
                                              (Ojs.call x4381 "apply"
                                                 [|Ojs.null;((let x4383 =
                                                                Ojs.new_obj
                                                                  (Ojs.get_prop_ascii
                                                                    Ojs.global
                                                                    "Array")
                                                                  [||] in
                                                              (match x4382
                                                               with
                                                               | Some x4384
                                                                   ->
                                                                   ignore
                                                                    (Ojs.call
                                                                    x4383
                                                                    "push"
                                                                    [|(
                                                                    any_to_js
                                                                    x4384)|])
                                                               | None -> ());
                                                              x4383))|]))))|])
      end
    type t = AnonymousInterface9.t
    let rec t_of_js : Ojs.t -> t =
      fun (x4388 : Ojs.t) -> AnonymousInterface9.t_of_js x4388
    and t_to_js : t -> Ojs.t =
      fun (x4387 : AnonymousInterface9.t) ->
        AnonymousInterface9.t_to_js x4387
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4390 : Ojs.t) -> t_of_js x4390
    and t_0_to_js : t_0 -> Ojs.t = fun (x4389 : t) -> t_to_js x4389
  end
module Parameters =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4392 : Ojs.t) -> any_of_js x4392
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x4391 : any) -> any_to_js x4391
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4395 : Ojs.t) -> t_of_js __T_of_js x4395
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x4393 : __T t) -> t_to_js __T_to_js x4393
  end
module ParameterDecorator =
  struct
    type t = [ `ParameterDecorator ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4398 : Ojs.t) -> t_of_js x4398
    and t_0_to_js : t_0 -> Ojs.t = fun (x4397 : t) -> t_to_js x4397
    type tags = [ `ParameterDecorator ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ParameterDecorator ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4401 : Ojs.t) -> intf_of_js __tags_of_js x4401
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4399 : __tags intf) -> intf_to_js __tags_to_js x4399
    let (apply :
      'tags this ->
        target:Object.t ->
          propertyKey:symbol or_string -> parameterIndex:float -> unit)
      =
      fun (x4407 : 'tags this) ->
        fun ~target:(x4403 : Object.t) ->
          fun ~propertyKey:(x4404 : symbol or_string) ->
            fun ~parameterIndex:(x4406 : float) ->
              ignore
                (Ojs.apply (this_to_js Obj.magic x4407)
                   [|(Object.t_to_js x4403);(or_string_to_js symbol_to_js
                                               x4404);(Ojs.float_to_js x4406)|])
    let cast_from = Obj.magic
  end
module Pick =
  struct
    type ('T, 'K) t = any
    let rec t_of_js :
      'T 'K . (Ojs.t -> 'T) -> (Ojs.t -> 'K) -> Ojs.t -> ('T, 'K) t = fun
      (type __T) -> fun (type __K) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__K_of_js : Ojs.t -> __K) ->
          fun (x4410 : Ojs.t) -> any_of_js x4410
    and t_to_js :
      'T 'K . ('T -> Ojs.t) -> ('K -> Ojs.t) -> ('T, 'K) t -> Ojs.t = fun
      (type __T) -> fun (type __K) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__K_to_js : __K -> Ojs.t) ->
          fun (x4409 : any) -> any_to_js x4409
    type ('T, 'K) t_2 = ('T, 'K) t
    let rec t_2_of_js :
      'T 'K . (Ojs.t -> 'T) -> (Ojs.t -> 'K) -> Ojs.t -> ('T, 'K) t_2 = fun
      (type __T) -> fun (type __K) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__K_of_js : Ojs.t -> __K) ->
          fun (x4414 : Ojs.t) -> t_of_js __T_of_js __K_of_js x4414
    and t_2_to_js :
      'T 'K . ('T -> Ojs.t) -> ('K -> Ojs.t) -> ('T, 'K) t_2 -> Ojs.t = fun
      (type __T) -> fun (type __K) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__K_to_js : __K -> Ojs.t) ->
          fun (x4411 : (__T, __K) t) -> t_to_js __T_to_js __K_to_js x4411
  end
module Exclude =
  struct
    type ('T, 'U) t = any
    let rec t_of_js :
      'T 'U . (Ojs.t -> 'T) -> (Ojs.t -> 'U) -> Ojs.t -> ('T, 'U) t = fun
      (type __T) -> fun (type __U) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__U_of_js : Ojs.t -> __U) ->
          fun (x4418 : Ojs.t) -> any_of_js x4418
    and t_to_js :
      'T 'U . ('T -> Ojs.t) -> ('U -> Ojs.t) -> ('T, 'U) t -> Ojs.t = fun
      (type __T) -> fun (type __U) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__U_to_js : __U -> Ojs.t) ->
          fun (x4417 : any) -> any_to_js x4417
    type ('T, 'U) t_2 = ('T, 'U) t
    let rec t_2_of_js :
      'T 'U . (Ojs.t -> 'T) -> (Ojs.t -> 'U) -> Ojs.t -> ('T, 'U) t_2 = fun
      (type __T) -> fun (type __U) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__U_of_js : Ojs.t -> __U) ->
          fun (x4422 : Ojs.t) -> t_of_js __T_of_js __U_of_js x4422
    and t_2_to_js :
      'T 'U . ('T -> Ojs.t) -> ('U -> Ojs.t) -> ('T, 'U) t_2 -> Ojs.t = fun
      (type __T) -> fun (type __U) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__U_to_js : __U -> Ojs.t) ->
          fun (x4419 : (__T, __U) t) -> t_to_js __T_to_js __U_to_js x4419
  end
module Omit =
  struct
    type ('T, 'K) t = ('T, (any, 'K) Exclude.t) Pick.t
    let rec t_of_js :
      'T 'K . (Ojs.t -> 'T) -> (Ojs.t -> 'K) -> Ojs.t -> ('T, 'K) t = fun
      (type __T) -> fun (type __K) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__K_of_js : Ojs.t -> __K) ->
          fun (x4430 : Ojs.t) ->
            Pick.t_of_js __T_of_js
              (fun (x4432 : Ojs.t) ->
                 Exclude.t_of_js any_of_js __K_of_js x4432) x4430
    and t_to_js :
      'T 'K . ('T -> Ojs.t) -> ('K -> Ojs.t) -> ('T, 'K) t -> Ojs.t = fun
      (type __T) -> fun (type __K) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__K_to_js : __K -> Ojs.t) ->
          fun (x4425 : (__T, (any, __K) Exclude.t) Pick.t) ->
            Pick.t_to_js __T_to_js
              (fun (x4427 : (any, __K) Exclude.t) ->
                 Exclude.t_to_js any_to_js __K_to_js x4427) x4425
    type ('T, 'K) t_2 = ('T, 'K) t
    let rec t_2_of_js :
      'T 'K . (Ojs.t -> 'T) -> (Ojs.t -> 'K) -> Ojs.t -> ('T, 'K) t_2 = fun
      (type __T) -> fun (type __K) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__K_of_js : Ojs.t -> __K) ->
          fun (x4438 : Ojs.t) -> t_of_js __T_of_js __K_of_js x4438
    and t_2_to_js :
      'T 'K . ('T -> Ojs.t) -> ('K -> Ojs.t) -> ('T, 'K) t_2 -> Ojs.t = fun
      (type __T) -> fun (type __K) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__K_to_js : __K -> Ojs.t) ->
          fun (x4435 : (__T, __K) t) -> t_to_js __T_to_js __K_to_js x4435
  end
module Number =
  struct
    type t = [ `Number ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4442 : Ojs.t) -> t_of_js x4442
    and t_0_to_js : t_0 -> Ojs.t = fun (x4441 : t) -> t_to_js x4441
    type tags = [ `Number ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Number ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4445 : Ojs.t) -> intf_of_js __tags_of_js x4445
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4443 : __tags intf) -> intf_to_js __tags_to_js x4443
    let (toLocaleString :
      'tags this ->
        ?locales:string list or_string ->
          ?options:Intl.NumberFormatOptions.t -> unit -> string)
      =
      fun (x4454 : 'tags this) ->
        fun ?locales:(x4447 : string list or_string option) ->
          fun ?options:(x4448 : Intl.NumberFormatOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x4456 = this_to_js Obj.magic x4454 in
                 Ojs.call (Ojs.get_prop_ascii x4456 "toLocaleString") "apply"
                   [|x4456;((let x4449 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x4447 with
                              | Some x4451 ->
                                  ignore
                                    (Ojs.call x4449 "push"
                                       [|(or_string_to_js
                                            (fun (x4452 : string list) ->
                                               Ojs.list_to_js
                                                 Ojs.string_to_js x4452)
                                            x4451)|])
                              | None -> ());
                             (match x4448 with
                              | Some x4450 ->
                                  ignore
                                    (Ojs.call x4449 "push"
                                       [|(Intl.NumberFormatOptions.t_to_js
                                            x4450)|])
                              | None -> ());
                             x4449))|])
    let (toString : 'tags this -> ?radix:float -> unit -> string) =
      fun (x4460 : 'tags this) ->
        fun ?radix:(x4457 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x4462 = this_to_js Obj.magic x4460 in
               Ojs.call (Ojs.get_prop_ascii x4462 "toString") "apply"
                 [|x4462;((let x4458 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x4457 with
                            | Some x4459 ->
                                ignore
                                  (Ojs.call x4458 "push"
                                     [|(Ojs.float_to_js x4459)|])
                            | None -> ());
                           x4458))|])
    let (toFixed : 'tags this -> ?fractionDigits:float -> unit -> string) =
      fun (x4466 : 'tags this) ->
        fun ?fractionDigits:(x4463 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x4468 = this_to_js Obj.magic x4466 in
               Ojs.call (Ojs.get_prop_ascii x4468 "toFixed") "apply"
                 [|x4468;((let x4464 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x4463 with
                            | Some x4465 ->
                                ignore
                                  (Ojs.call x4464 "push"
                                     [|(Ojs.float_to_js x4465)|])
                            | None -> ());
                           x4464))|])
    let (toExponential :
      'tags this -> ?fractionDigits:float -> unit -> string) =
      fun (x4472 : 'tags this) ->
        fun ?fractionDigits:(x4469 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x4474 = this_to_js Obj.magic x4472 in
               Ojs.call (Ojs.get_prop_ascii x4474 "toExponential") "apply"
                 [|x4474;((let x4470 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x4469 with
                            | Some x4471 ->
                                ignore
                                  (Ojs.call x4470 "push"
                                     [|(Ojs.float_to_js x4471)|])
                            | None -> ());
                           x4470))|])
    let (toPrecision : 'tags this -> ?precision:float -> unit -> string) =
      fun (x4478 : 'tags this) ->
        fun ?precision:(x4475 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x4480 = this_to_js Obj.magic x4478 in
               Ojs.call (Ojs.get_prop_ascii x4480 "toPrecision") "apply"
                 [|x4480;((let x4476 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x4475 with
                            | Some x4477 ->
                                ignore
                                  (Ojs.call x4476 "push"
                                     [|(Ojs.float_to_js x4477)|])
                            | None -> ());
                           x4476))|])
    let (valueOf : 'tags this -> float) =
      fun (x4481 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x4481) "valueOf" [||])
    let (epsilon : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "EPSILON")
    let (isFinite : unknown -> bool) =
      fun (x4483 : unknown) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "isFinite"
             [|(unknown_to_js x4483)|])
    let (isInteger : unknown -> bool) =
      fun (x4484 : unknown) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "isInteger"
             [|(unknown_to_js x4484)|])
    let (isNaN : unknown -> bool) =
      fun (x4485 : unknown) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "isNaN"
             [|(unknown_to_js x4485)|])
    let (isSafeInteger : unknown -> bool) =
      fun (x4486 : unknown) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "isSafeInteger"
             [|(unknown_to_js x4486)|])
    let (max_safe_integer : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "MAX_SAFE_INTEGER")
    let (min_safe_integer : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "MIN_SAFE_INTEGER")
    let (parseFloat : string -> float) =
      fun (x4487 : string) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "parseFloat"
             [|(Ojs.string_to_js x4487)|])
    let (parseInt : string:string -> ?radix:float -> unit -> float) =
      fun ~string:(x4488 : string) ->
        fun ?radix:(x4489 : float option) ->
          fun () ->
            Ojs.float_of_js
              (let x4492 = Ojs.get_prop_ascii Ojs.global "Number" in
               Ojs.call (Ojs.get_prop_ascii x4492 "parseInt") "apply"
                 [|x4492;((let x4490 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x4490 "push"
                                [|(Ojs.string_to_js x4488)|]);
                           (match x4489 with
                            | Some x4491 ->
                                ignore
                                  (Ojs.call x4490 "push"
                                     [|(Ojs.float_to_js x4491)|])
                            | None -> ());
                           x4490))|])
    let (create : ?value:any -> unit -> t) =
      fun ?value:(x4493 : any option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Number")
               (let x4494 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x4493 with
                 | Some x4495 ->
                     ignore (Ojs.call x4494 "push" [|(any_to_js x4495)|])
                 | None -> ());
                x4494))
    let (invoke : ?value:any -> unit -> float) =
      fun ?value:(x4496 : any option) ->
        fun () ->
          Ojs.float_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "apply"
               [|Ojs.null;((let x4497 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x4496 with
                             | Some x4498 ->
                                 ignore
                                   (Ojs.call x4497 "push"
                                      [|(any_to_js x4498)|])
                             | None -> ());
                            x4497))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "prototype")
    let (max_value : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "MAX_VALUE")
    let (min_value : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "MIN_VALUE")
    let (nan : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number") "NaN")
    let (negative_infinity : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "NEGATIVE_INFINITY")
    let (positive_infinity : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "POSITIVE_INFINITY")
    let cast_from = Obj.magic
  end
module NonNullable =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4500 : Ojs.t) -> any_of_js x4500
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x4499 : any) -> any_to_js x4499
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4503 : Ojs.t) -> t_of_js __T_of_js x4503
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x4501 : __T t) -> t_to_js __T_to_js x4501
  end
module NewableFunction =
  struct
    module AnonymousInterface43 =
      struct
        type 'T t = Ojs.t
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) -> fun (x4506 : Ojs.t) -> x4506
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) -> fun (x4505 : Ojs.t) -> x4505
        let (create : 'T t -> 'T) =
          fun (x4507 : 'T t) ->
            Obj.magic (Ojs.new_obj (t_to_js Obj.magic x4507) [||])
      end
    module AnonymousInterface39 =
      struct
        type ('AX, 'R) t = Ojs.t
        let rec t_of_js :
          'AX 'R . (Ojs.t -> 'AX) -> (Ojs.t -> 'R) -> Ojs.t -> ('AX, 'R) t =
          fun (type __AX) -> fun (type __R) ->
          fun (__AX_of_js : Ojs.t -> __AX) ->
            fun (__R_of_js : Ojs.t -> __R) -> fun (x4510 : Ojs.t) -> x4510
        and t_to_js :
          'AX 'R . ('AX -> Ojs.t) -> ('R -> Ojs.t) -> ('AX, 'R) t -> Ojs.t =
          fun (type __AX) -> fun (type __R) ->
          fun (__AX_to_js : __AX -> Ojs.t) ->
            fun (__R_to_js : __R -> Ojs.t) -> fun (x4509 : Ojs.t) -> x4509
        let (create : ('AX, 'R) t -> args:'AX list -> 'R) =
          fun (x4514 : ('AX, 'R) t) ->
            fun ~args:(x4511 : 'AX list) ->
              Obj.magic
                (Ojs.new_obj_arr (t_to_js Obj.magic Obj.magic x4514)
                   (let x4512 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    List.iter
                      (fun (x4513 : 'AX) ->
                         ignore (Ojs.call x4512 "push" [|(Obj.magic x4513)|]))
                      x4511;
                    x4512))
      end
    module AnonymousInterface36 =
      struct
        type ('A, 'T) t = Ojs.t
        let rec t_of_js :
          'A 'T . (Ojs.t -> 'A) -> (Ojs.t -> 'T) -> Ojs.t -> ('A, 'T) t = fun
          (type __A) -> fun (type __T) ->
          fun (__A_of_js : Ojs.t -> __A) ->
            fun (__T_of_js : Ojs.t -> __T) -> fun (x4518 : Ojs.t) -> x4518
        and t_to_js :
          'A 'T . ('A -> Ojs.t) -> ('T -> Ojs.t) -> ('A, 'T) t -> Ojs.t = fun
          (type __A) -> fun (type __T) ->
          fun (__A_to_js : __A -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) -> fun (x4517 : Ojs.t) -> x4517
        let (create : ('A, 'T) t -> args:any list -> 'T) =
          fun (x4522 : ('A, 'T) t) ->
            fun ~args:(x4519 : any list) ->
              Obj.magic
                (Ojs.new_obj_arr (t_to_js Obj.magic Obj.magic x4522)
                   (let x4520 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    List.iter
                      (fun (x4521 : any) ->
                         ignore (Ojs.call x4520 "push" [|(any_to_js x4521)|]))
                      x4519;
                    x4520))
      end
    module AnonymousInterface33 =
      struct
        type ('A, 'R) t = Ojs.t
        let rec t_of_js :
          'A 'R . (Ojs.t -> 'A) -> (Ojs.t -> 'R) -> Ojs.t -> ('A, 'R) t = fun
          (type __A) -> fun (type __R) ->
          fun (__A_of_js : Ojs.t -> __A) ->
            fun (__R_of_js : Ojs.t -> __R) -> fun (x4526 : Ojs.t) -> x4526
        and t_to_js :
          'A 'R . ('A -> Ojs.t) -> ('R -> Ojs.t) -> ('A, 'R) t -> Ojs.t = fun
          (type __A) -> fun (type __R) ->
          fun (__A_to_js : __A -> Ojs.t) ->
            fun (__R_to_js : __R -> Ojs.t) -> fun (x4525 : Ojs.t) -> x4525
        let (create : ('A, 'R) t -> args:any list -> 'R) =
          fun (x4530 : ('A, 'R) t) ->
            fun ~args:(x4527 : any list) ->
              Obj.magic
                (Ojs.new_obj_arr (t_to_js Obj.magic Obj.magic x4530)
                   (let x4528 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    List.iter
                      (fun (x4529 : any) ->
                         ignore (Ojs.call x4528 "push" [|(any_to_js x4529)|]))
                      x4527;
                    x4528))
      end
    module AnonymousInterface31 =
      struct
        type ('A, 'A0, 'R) t = Ojs.t
        let rec t_of_js :
          'A 'A0 'R .
            (Ojs.t -> 'A) ->
              (Ojs.t -> 'A0) -> (Ojs.t -> 'R) -> Ojs.t -> ('A, 'A0, 'R) t
          = fun (type __A) -> fun (type __A0) -> fun (type __R) ->
          fun (__A_of_js : Ojs.t -> __A) ->
            fun (__A0_of_js : Ojs.t -> __A0) ->
              fun (__R_of_js : Ojs.t -> __R) -> fun (x4534 : Ojs.t) -> x4534
        and t_to_js :
          'A 'A0 'R .
            ('A -> Ojs.t) ->
              ('A0 -> Ojs.t) -> ('R -> Ojs.t) -> ('A, 'A0, 'R) t -> Ojs.t
          = fun (type __A) -> fun (type __A0) -> fun (type __R) ->
          fun (__A_to_js : __A -> Ojs.t) ->
            fun (__A0_to_js : __A0 -> Ojs.t) ->
              fun (__R_to_js : __R -> Ojs.t) -> fun (x4533 : Ojs.t) -> x4533
        let (create : ('A, 'A0, 'R) t -> arg0:'A0 -> args:any list -> 'R) =
          fun (x4539 : ('A, 'A0, 'R) t) ->
            fun ~arg0:(x4535 : 'A0) ->
              fun ~args:(x4536 : any list) ->
                Obj.magic
                  (Ojs.new_obj_arr
                     (t_to_js Obj.magic Obj.magic Obj.magic x4539)
                     (let x4537 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore (Ojs.call x4537 "push" [|(Obj.magic x4535)|]);
                      List.iter
                        (fun (x4538 : any) ->
                           ignore
                             (Ojs.call x4537 "push" [|(any_to_js x4538)|]))
                        x4536;
                      x4537))
      end
    module AnonymousInterface29 =
      struct
        type ('A, 'A0, 'A1, 'R) t = Ojs.t
        let rec t_of_js :
          'A 'A0 'A1 'R .
            (Ojs.t -> 'A) ->
              (Ojs.t -> 'A0) ->
                (Ojs.t -> 'A1) ->
                  (Ojs.t -> 'R) -> Ojs.t -> ('A, 'A0, 'A1, 'R) t
          = fun (type __A) -> fun (type __A0) -> fun (type __A1) -> fun (type
          __R) ->
          fun (__A_of_js : Ojs.t -> __A) ->
            fun (__A0_of_js : Ojs.t -> __A0) ->
              fun (__A1_of_js : Ojs.t -> __A1) ->
                fun (__R_of_js : Ojs.t -> __R) ->
                  fun (x4544 : Ojs.t) -> x4544
        and t_to_js :
          'A 'A0 'A1 'R .
            ('A -> Ojs.t) ->
              ('A0 -> Ojs.t) ->
                ('A1 -> Ojs.t) ->
                  ('R -> Ojs.t) -> ('A, 'A0, 'A1, 'R) t -> Ojs.t
          = fun (type __A) -> fun (type __A0) -> fun (type __A1) -> fun (type
          __R) ->
          fun (__A_to_js : __A -> Ojs.t) ->
            fun (__A0_to_js : __A0 -> Ojs.t) ->
              fun (__A1_to_js : __A1 -> Ojs.t) ->
                fun (__R_to_js : __R -> Ojs.t) ->
                  fun (x4543 : Ojs.t) -> x4543
        let (create :
          ('A, 'A0, 'A1, 'R) t -> arg0:'A0 -> arg1:'A1 -> args:any list -> 'R)
          =
          fun (x4550 : ('A, 'A0, 'A1, 'R) t) ->
            fun ~arg0:(x4545 : 'A0) ->
              fun ~arg1:(x4546 : 'A1) ->
                fun ~args:(x4547 : any list) ->
                  Obj.magic
                    (Ojs.new_obj_arr
                       (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic x4550)
                       (let x4548 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        ignore (Ojs.call x4548 "push" [|(Obj.magic x4545)|]);
                        ignore (Ojs.call x4548 "push" [|(Obj.magic x4546)|]);
                        List.iter
                          (fun (x4549 : any) ->
                             ignore
                               (Ojs.call x4548 "push" [|(any_to_js x4549)|]))
                          x4547;
                        x4548))
      end
    module AnonymousInterface27 =
      struct
        type ('A, 'A0, 'A1, 'A2, 'R) t = Ojs.t
        let rec t_of_js :
          'A 'A0 'A1 'A2 'R .
            (Ojs.t -> 'A) ->
              (Ojs.t -> 'A0) ->
                (Ojs.t -> 'A1) ->
                  (Ojs.t -> 'A2) ->
                    (Ojs.t -> 'R) -> Ojs.t -> ('A, 'A0, 'A1, 'A2, 'R) t
          = fun (type __A) -> fun (type __A0) -> fun (type __A1) -> fun (type
          __A2) -> fun (type __R) ->
          fun (__A_of_js : Ojs.t -> __A) ->
            fun (__A0_of_js : Ojs.t -> __A0) ->
              fun (__A1_of_js : Ojs.t -> __A1) ->
                fun (__A2_of_js : Ojs.t -> __A2) ->
                  fun (__R_of_js : Ojs.t -> __R) ->
                    fun (x4556 : Ojs.t) -> x4556
        and t_to_js :
          'A 'A0 'A1 'A2 'R .
            ('A -> Ojs.t) ->
              ('A0 -> Ojs.t) ->
                ('A1 -> Ojs.t) ->
                  ('A2 -> Ojs.t) ->
                    ('R -> Ojs.t) -> ('A, 'A0, 'A1, 'A2, 'R) t -> Ojs.t
          = fun (type __A) -> fun (type __A0) -> fun (type __A1) -> fun (type
          __A2) -> fun (type __R) ->
          fun (__A_to_js : __A -> Ojs.t) ->
            fun (__A0_to_js : __A0 -> Ojs.t) ->
              fun (__A1_to_js : __A1 -> Ojs.t) ->
                fun (__A2_to_js : __A2 -> Ojs.t) ->
                  fun (__R_to_js : __R -> Ojs.t) ->
                    fun (x4555 : Ojs.t) -> x4555
        let (create :
          ('A, 'A0, 'A1, 'A2, 'R) t ->
            arg0:'A0 -> arg1:'A1 -> arg2:'A2 -> args:any list -> 'R)
          =
          fun (x4563 : ('A, 'A0, 'A1, 'A2, 'R) t) ->
            fun ~arg0:(x4557 : 'A0) ->
              fun ~arg1:(x4558 : 'A1) ->
                fun ~arg2:(x4559 : 'A2) ->
                  fun ~args:(x4560 : any list) ->
                    Obj.magic
                      (Ojs.new_obj_arr
                         (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic
                            Obj.magic x4563)
                         (let x4561 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          ignore
                            (Ojs.call x4561 "push" [|(Obj.magic x4557)|]);
                          ignore
                            (Ojs.call x4561 "push" [|(Obj.magic x4558)|]);
                          ignore
                            (Ojs.call x4561 "push" [|(Obj.magic x4559)|]);
                          List.iter
                            (fun (x4562 : any) ->
                               ignore
                                 (Ojs.call x4561 "push" [|(any_to_js x4562)|]))
                            x4560;
                          x4561))
      end
    module AnonymousInterface25 =
      struct
        type ('A, 'A0, 'A1, 'A2, 'A3, 'R) t = Ojs.t
        let rec t_of_js :
          'A 'A0 'A1 'A2 'A3 'R .
            (Ojs.t -> 'A) ->
              (Ojs.t -> 'A0) ->
                (Ojs.t -> 'A1) ->
                  (Ojs.t -> 'A2) ->
                    (Ojs.t -> 'A3) ->
                      (Ojs.t -> 'R) ->
                        Ojs.t -> ('A, 'A0, 'A1, 'A2, 'A3, 'R) t
          = fun (type __A) -> fun (type __A0) -> fun (type __A1) -> fun (type
          __A2) -> fun (type __A3) -> fun (type __R) ->
          fun (__A_of_js : Ojs.t -> __A) ->
            fun (__A0_of_js : Ojs.t -> __A0) ->
              fun (__A1_of_js : Ojs.t -> __A1) ->
                fun (__A2_of_js : Ojs.t -> __A2) ->
                  fun (__A3_of_js : Ojs.t -> __A3) ->
                    fun (__R_of_js : Ojs.t -> __R) ->
                      fun (x4570 : Ojs.t) -> x4570
        and t_to_js :
          'A 'A0 'A1 'A2 'A3 'R .
            ('A -> Ojs.t) ->
              ('A0 -> Ojs.t) ->
                ('A1 -> Ojs.t) ->
                  ('A2 -> Ojs.t) ->
                    ('A3 -> Ojs.t) ->
                      ('R -> Ojs.t) ->
                        ('A, 'A0, 'A1, 'A2, 'A3, 'R) t -> Ojs.t
          = fun (type __A) -> fun (type __A0) -> fun (type __A1) -> fun (type
          __A2) -> fun (type __A3) -> fun (type __R) ->
          fun (__A_to_js : __A -> Ojs.t) ->
            fun (__A0_to_js : __A0 -> Ojs.t) ->
              fun (__A1_to_js : __A1 -> Ojs.t) ->
                fun (__A2_to_js : __A2 -> Ojs.t) ->
                  fun (__A3_to_js : __A3 -> Ojs.t) ->
                    fun (__R_to_js : __R -> Ojs.t) ->
                      fun (x4569 : Ojs.t) -> x4569
        let (create :
          ('A, 'A0, 'A1, 'A2, 'A3, 'R) t ->
            arg0:'A0 ->
              arg1:'A1 -> arg2:'A2 -> arg3:'A3 -> args:any list -> 'R)
          =
          fun (x4578 : ('A, 'A0, 'A1, 'A2, 'A3, 'R) t) ->
            fun ~arg0:(x4571 : 'A0) ->
              fun ~arg1:(x4572 : 'A1) ->
                fun ~arg2:(x4573 : 'A2) ->
                  fun ~arg3:(x4574 : 'A3) ->
                    fun ~args:(x4575 : any list) ->
                      Obj.magic
                        (Ojs.new_obj_arr
                           (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic
                              Obj.magic Obj.magic x4578)
                           (let x4576 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x4576 "push" [|(Obj.magic x4571)|]);
                            ignore
                              (Ojs.call x4576 "push" [|(Obj.magic x4572)|]);
                            ignore
                              (Ojs.call x4576 "push" [|(Obj.magic x4573)|]);
                            ignore
                              (Ojs.call x4576 "push" [|(Obj.magic x4574)|]);
                            List.iter
                              (fun (x4577 : any) ->
                                 ignore
                                   (Ojs.call x4576 "push"
                                      [|(any_to_js x4577)|])) x4575;
                            x4576))
      end
    type t = [ `Function  | `Function  | `NewableFunction ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4586 : Ojs.t) -> t_of_js x4586
    and t_0_to_js : t_0 -> Ojs.t = fun (x4585 : t) -> t_to_js x4585
    type tags = [ `Function  | `Function  | `NewableFunction ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `NewableFunction ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4589 : Ojs.t) -> intf_of_js __tags_of_js x4589
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4587 : __tags intf) -> intf_to_js __tags_to_js x4587
    let (apply_ :
      'tags this -> this:'T AnonymousInterface43.t -> thisArg:'T -> unit) =
      fun (x4594 : 'tags this) ->
        fun ~this:(x4591 : 'T AnonymousInterface43.t) ->
          fun ~thisArg:(x4593 : 'T) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x4594) "apply"
                 [|(AnonymousInterface43.t_to_js Obj.magic x4591);(Obj.magic
                                                                    x4593)|])
    let (apply_' :
      'tags this ->
        this:('A, 'T) AnonymousInterface36.t -> thisArg:'T -> args:'A -> unit)
      =
      fun (x4601 : 'tags this) ->
        fun ~this:(x4596 : ('A, 'T) AnonymousInterface36.t) ->
          fun ~thisArg:(x4599 : 'T) ->
            fun ~args:(x4600 : 'A) ->
              ignore
                (Ojs.call (this_to_js Obj.magic x4601) "apply"
                   [|(AnonymousInterface36.t_to_js Obj.magic Obj.magic x4596);(
                     Obj.magic x4599);(Obj.magic x4600)|])
    let (call :
      'tags this ->
        this:('A, 'T) AnonymousInterface36.t ->
          thisArg:'T -> args:any list -> unit)
      =
      fun (x4610 : 'tags this) ->
        fun ~this:(x4603 : ('A, 'T) AnonymousInterface36.t) ->
          fun ~thisArg:(x4604 : 'T) ->
            fun ~args:(x4605 : any list) ->
              ignore
                (let x4612 = this_to_js Obj.magic x4610 in
                 Ojs.call (Ojs.get_prop_ascii x4612 "call") "apply"
                   [|x4612;((let x4606 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4606 "push"
                                  [|(AnonymousInterface36.t_to_js Obj.magic
                                       Obj.magic x4603)|]);
                             ignore
                               (Ojs.call x4606 "push" [|(Obj.magic x4604)|]);
                             List.iter
                               (fun (x4607 : any) ->
                                  ignore
                                    (Ojs.call x4606 "push"
                                       [|(any_to_js x4607)|])) x4605;
                             x4606))|])
    let (bind : 'tags this -> this:'T -> thisArg:any -> 'T) =
      fun (x4615 : 'tags this) ->
        fun ~this:(x4613 : 'T) ->
          fun ~thisArg:(x4614 : any) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x4615) "bind"
                 [|(Obj.magic x4613);(any_to_js x4614)|])
    let (bind' :
      'tags this ->
        this:('A, 'A0, 'R) AnonymousInterface31.t ->
          thisArg:any -> arg0:'A0 -> ('A, 'R) AnonymousInterface33.t)
      =
      fun (x4623 : 'tags this) ->
        fun ~this:(x4617 : ('A, 'A0, 'R) AnonymousInterface31.t) ->
          fun ~thisArg:(x4621 : any) ->
            fun ~arg0:(x4622 : 'A0) ->
              AnonymousInterface33.t_of_js Obj.magic Obj.magic
                (Ojs.call (this_to_js Obj.magic x4623) "bind"
                   [|(AnonymousInterface31.t_to_js Obj.magic Obj.magic
                        Obj.magic x4617);(any_to_js x4621);(Obj.magic x4622)|])
    let (bind'' :
      'tags this ->
        this:('A, 'A0, 'A1, 'R) AnonymousInterface29.t ->
          thisArg:any ->
            arg0:'A0 -> arg1:'A1 -> ('A, 'R) AnonymousInterface33.t)
      =
      fun (x4635 : 'tags this) ->
        fun ~this:(x4627 : ('A, 'A0, 'A1, 'R) AnonymousInterface29.t) ->
          fun ~thisArg:(x4632 : any) ->
            fun ~arg0:(x4633 : 'A0) ->
              fun ~arg1:(x4634 : 'A1) ->
                AnonymousInterface33.t_of_js Obj.magic Obj.magic
                  (Ojs.call (this_to_js Obj.magic x4635) "bind"
                     [|(AnonymousInterface29.t_to_js Obj.magic Obj.magic
                          Obj.magic Obj.magic x4627);(any_to_js x4632);(
                       Obj.magic x4633);(Obj.magic x4634)|])
    let (bind''' :
      'tags this ->
        this:('A, 'A0, 'A1, 'A2, 'R) AnonymousInterface27.t ->
          thisArg:any ->
            arg0:'A0 ->
              arg1:'A1 -> arg2:'A2 -> ('A, 'R) AnonymousInterface33.t)
      =
      fun (x4649 : 'tags this) ->
        fun ~this:(x4639 : ('A, 'A0, 'A1, 'A2, 'R) AnonymousInterface27.t) ->
          fun ~thisArg:(x4645 : any) ->
            fun ~arg0:(x4646 : 'A0) ->
              fun ~arg1:(x4647 : 'A1) ->
                fun ~arg2:(x4648 : 'A2) ->
                  AnonymousInterface33.t_of_js Obj.magic Obj.magic
                    (Ojs.call (this_to_js Obj.magic x4649) "bind"
                       [|(AnonymousInterface27.t_to_js Obj.magic Obj.magic
                            Obj.magic Obj.magic Obj.magic x4639);(any_to_js
                                                                    x4645);(
                         Obj.magic x4646);(Obj.magic x4647);(Obj.magic x4648)|])
    let (bind'''' :
      'tags this ->
        this:('A, 'A0, 'A1, 'A2, 'A3, 'R) AnonymousInterface25.t ->
          thisArg:any ->
            arg0:'A0 ->
              arg1:'A1 ->
                arg2:'A2 -> arg3:'A3 -> ('A, 'R) AnonymousInterface33.t)
      =
      fun (x4665 : 'tags this) ->
        fun
          ~this:(x4653 : ('A, 'A0, 'A1, 'A2, 'A3, 'R) AnonymousInterface25.t)
          ->
          fun ~thisArg:(x4660 : any) ->
            fun ~arg0:(x4661 : 'A0) ->
              fun ~arg1:(x4662 : 'A1) ->
                fun ~arg2:(x4663 : 'A2) ->
                  fun ~arg3:(x4664 : 'A3) ->
                    AnonymousInterface33.t_of_js Obj.magic Obj.magic
                      (Ojs.call (this_to_js Obj.magic x4665) "bind"
                         [|(AnonymousInterface25.t_to_js Obj.magic Obj.magic
                              Obj.magic Obj.magic Obj.magic Obj.magic x4653);(
                           any_to_js x4660);(Obj.magic x4661);(Obj.magic
                                                                 x4662);(
                           Obj.magic x4663);(Obj.magic x4664)|])
    let (bind''''' :
      'tags this ->
        this:('AX, 'R) AnonymousInterface39.t ->
          thisArg:any -> args:'AX list -> ('AX, 'R) AnonymousInterface39.t)
      =
      fun (x4676 : 'tags this) ->
        fun ~this:(x4669 : ('AX, 'R) AnonymousInterface39.t) ->
          fun ~thisArg:(x4670 : any) ->
            fun ~args:(x4671 : 'AX list) ->
              AnonymousInterface39.t_of_js Obj.magic Obj.magic
                (let x4678 = this_to_js Obj.magic x4676 in
                 Ojs.call (Ojs.get_prop_ascii x4678 "bind") "apply"
                   [|x4678;((let x4672 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4672 "push"
                                  [|(AnonymousInterface39.t_to_js Obj.magic
                                       Obj.magic x4669)|]);
                             ignore
                               (Ojs.call x4672 "push" [|(any_to_js x4670)|]);
                             List.iter
                               (fun (x4673 : 'AX) ->
                                  ignore
                                    (Ojs.call x4672 "push"
                                       [|(Obj.magic x4673)|])) x4671;
                             x4672))|])
    let cast_from = Obj.magic
  end
module TypedPropertyDescriptor =
  struct
    type 'T t = [ `TypedPropertyDescriptor of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4683 : Ojs.t) -> t_of_js __T_of_js x4683
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x4681 : __T t) -> t_to_js __T_to_js x4681
    type 'T tags = [ `TypedPropertyDescriptor of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `TypedPropertyDescriptor of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4687 : Ojs.t) -> intf_of_js __tags_of_js x4687
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4685 : __tags intf) -> intf_to_js __tags_to_js x4685
    let (get_enumerable : ('tags, 'T) this -> bool) =
      fun (x4689 : ('tags, 'T) this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x4689)
             "enumerable")
    let (set_enumerable : ('tags, 'T) this -> bool -> unit) =
      fun (x4692 : ('tags, 'T) this) ->
        fun (x4693 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x4692)
            "enumerable" (Ojs.bool_to_js x4693)
    let (get_configurable : ('tags, 'T) this -> bool) =
      fun (x4696 : ('tags, 'T) this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x4696)
             "configurable")
    let (set_configurable : ('tags, 'T) this -> bool -> unit) =
      fun (x4699 : ('tags, 'T) this) ->
        fun (x4700 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x4699)
            "configurable" (Ojs.bool_to_js x4700)
    let (get_writable : ('tags, 'T) this -> bool) =
      fun (x4703 : ('tags, 'T) this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x4703)
             "writable")
    let (set_writable : ('tags, 'T) this -> bool -> unit) =
      fun (x4706 : ('tags, 'T) this) ->
        fun (x4707 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x4706)
            "writable" (Ojs.bool_to_js x4707)
    let (get_value : ('tags, 'T) this -> 'T) =
      fun (x4710 : ('tags, 'T) this) ->
        Obj.magic
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x4710) "value")
    let (set_value : ('tags, 'T) this -> 'T -> unit) =
      fun (x4713 : ('tags, 'T) this) ->
        fun (x4714 : 'T) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x4713) "value"
            (Obj.magic x4714)
    let (get_ : ('tags, 'T) this -> 'T) =
      fun (x4717 : ('tags, 'T) this) ->
        Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x4717) "get" [||])
    let (set_ : ('tags, 'T) this -> value:'T -> unit) =
      fun (x4721 : ('tags, 'T) this) ->
        fun ~value:(x4720 : 'T) ->
          ignore
            (Ojs.call (this_to_js Obj.magic Obj.magic x4721) "set"
               [|(Obj.magic x4720)|])
    let (create :
      enumerable:bool ->
        configurable:bool ->
          writable:bool ->
            value:'T ->
              get_:(unit -> 'T) -> set_:('T -> unit) -> unit -> 'T t)
      =
      fun ~enumerable:(x4724 : bool) ->
        fun ~configurable:(x4725 : bool) ->
          fun ~writable:(x4726 : bool) ->
            fun ~value:(x4727 : 'T) ->
              fun ~get_:(x4728 : unit -> 'T) ->
                fun ~set_:(x4729 : 'T -> unit) ->
                  fun () ->
                    let x4730 = Ojs.empty_obj () in
                    Ojs.set_prop_ascii x4730 "enumerable"
                      (Ojs.bool_to_js x4724);
                    Ojs.set_prop_ascii x4730 "configurable"
                      (Ojs.bool_to_js x4725);
                    Ojs.set_prop_ascii x4730 "writable"
                      (Ojs.bool_to_js x4726);
                    Ojs.set_prop_ascii x4730 "value" (Obj.magic x4727);
                    Ojs.set_prop_ascii x4730 "get"
                      (Ojs.fun_to_js 1 (fun _ -> Obj.magic (x4728 ())));
                    Ojs.set_prop_ascii x4730 "set"
                      (Ojs.fun_to_js 1
                         (fun (x4732 : Ojs.t) -> x4729 (Obj.magic x4732)));
                    t_of_js Obj.magic x4730
    let cast_from = Obj.magic
  end
module MethodDecorator =
  struct
    type t = [ `MethodDecorator ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4734 : Ojs.t) -> t_of_js x4734
    and t_0_to_js : t_0 -> Ojs.t = fun (x4733 : t) -> t_to_js x4733
    type tags = [ `MethodDecorator ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `MethodDecorator ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4737 : Ojs.t) -> intf_of_js __tags_of_js x4737
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4735 : __tags intf) -> intf_to_js __tags_to_js x4735
    let (apply :
      'tags this ->
        target:Object.t ->
          propertyKey:symbol or_string ->
            descriptor:'T TypedPropertyDescriptor.t ->
              (unit, 'T TypedPropertyDescriptor.t) union2)
      =
      fun (x4744 : 'tags this) ->
        fun ~target:(x4739 : Object.t) ->
          fun ~propertyKey:(x4740 : symbol or_string) ->
            fun ~descriptor:(x4742 : 'T TypedPropertyDescriptor.t) ->
              union2_of_js Ojs.unit_of_js
                (fun (x4747 : Ojs.t) ->
                   TypedPropertyDescriptor.t_of_js Obj.magic x4747)
                (Ojs.apply (this_to_js Obj.magic x4744)
                   [|(Object.t_to_js x4739);(or_string_to_js symbol_to_js
                                               x4740);(TypedPropertyDescriptor.t_to_js
                                                         Obj.magic x4742)|])
    let cast_from = Obj.magic
  end
module Math =
  struct
    let (clz32 : float -> float) =
      fun (x4749 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "clz32"
             [|(Ojs.float_to_js x4749)|])
    let (imul : x:float -> y:float -> float) =
      fun ~x:(x4750 : float) ->
        fun ~y:(x4751 : float) ->
          Ojs.float_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "imul"
               [|(Ojs.float_to_js x4750);(Ojs.float_to_js x4751)|])
    let (sign : float -> float) =
      fun (x4752 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "sign"
             [|(Ojs.float_to_js x4752)|])
    let (log10 : float -> float) =
      fun (x4753 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "log10"
             [|(Ojs.float_to_js x4753)|])
    let (log2 : float -> float) =
      fun (x4754 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "log2"
             [|(Ojs.float_to_js x4754)|])
    let (log1p : float -> float) =
      fun (x4755 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "log1p"
             [|(Ojs.float_to_js x4755)|])
    let (expm1 : float -> float) =
      fun (x4756 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "expm1"
             [|(Ojs.float_to_js x4756)|])
    let (cosh : float -> float) =
      fun (x4757 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "cosh"
             [|(Ojs.float_to_js x4757)|])
    let (sinh : float -> float) =
      fun (x4758 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "sinh"
             [|(Ojs.float_to_js x4758)|])
    let (tanh : float -> float) =
      fun (x4759 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "tanh"
             [|(Ojs.float_to_js x4759)|])
    let (acosh : float -> float) =
      fun (x4760 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "acosh"
             [|(Ojs.float_to_js x4760)|])
    let (asinh : float -> float) =
      fun (x4761 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "asinh"
             [|(Ojs.float_to_js x4761)|])
    let (atanh : float -> float) =
      fun (x4762 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "atanh"
             [|(Ojs.float_to_js x4762)|])
    let (hypot : float list -> float) =
      fun (x4763 : float list) ->
        Ojs.float_of_js
          (let x4766 = Ojs.get_prop_ascii Ojs.global "Math" in
           Ojs.call (Ojs.get_prop_ascii x4766 "hypot") "apply"
             [|x4766;((let x4764 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x4765 : float) ->
                            ignore
                              (Ojs.call x4764 "push"
                                 [|(Ojs.float_to_js x4765)|])) x4763;
                       x4764))|])
    let (trunc : float -> float) =
      fun (x4767 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "trunc"
             [|(Ojs.float_to_js x4767)|])
    let (fround : float -> float) =
      fun (x4768 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "fround"
             [|(Ojs.float_to_js x4768)|])
    let (cbrt : float -> float) =
      fun (x4769 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "cbrt"
             [|(Ojs.float_to_js x4769)|])
    let (e : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "E")
    let (ln10 : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "LN10")
    let (ln2 : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "LN2")
    let (log2e : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "LOG2E")
    let (log10e : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "LOG10E")
    let (pi : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "PI")
    let (sqrt1_2 : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math")
             "SQRT1_2")
    let (sqrt2 : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "SQRT2")
    let (abs : float -> float) =
      fun (x4770 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "abs"
             [|(Ojs.float_to_js x4770)|])
    let (acos : float -> float) =
      fun (x4771 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "acos"
             [|(Ojs.float_to_js x4771)|])
    let (asin : float -> float) =
      fun (x4772 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "asin"
             [|(Ojs.float_to_js x4772)|])
    let (atan : float -> float) =
      fun (x4773 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "atan"
             [|(Ojs.float_to_js x4773)|])
    let (atan2 : y:float -> x:float -> float) =
      fun ~y:(x4774 : float) ->
        fun ~x:(x4775 : float) ->
          Ojs.float_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "atan2"
               [|(Ojs.float_to_js x4774);(Ojs.float_to_js x4775)|])
    let (ceil : float -> float) =
      fun (x4776 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "ceil"
             [|(Ojs.float_to_js x4776)|])
    let (cos : float -> float) =
      fun (x4777 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "cos"
             [|(Ojs.float_to_js x4777)|])
    let (exp : float -> float) =
      fun (x4778 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "exp"
             [|(Ojs.float_to_js x4778)|])
    let (floor : float -> float) =
      fun (x4779 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "floor"
             [|(Ojs.float_to_js x4779)|])
    let (log : float -> float) =
      fun (x4780 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "log"
             [|(Ojs.float_to_js x4780)|])
    let (max : float list -> float) =
      fun (x4781 : float list) ->
        Ojs.float_of_js
          (let x4784 = Ojs.get_prop_ascii Ojs.global "Math" in
           Ojs.call (Ojs.get_prop_ascii x4784 "max") "apply"
             [|x4784;((let x4782 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x4783 : float) ->
                            ignore
                              (Ojs.call x4782 "push"
                                 [|(Ojs.float_to_js x4783)|])) x4781;
                       x4782))|])
    let (min : float list -> float) =
      fun (x4785 : float list) ->
        Ojs.float_of_js
          (let x4788 = Ojs.get_prop_ascii Ojs.global "Math" in
           Ojs.call (Ojs.get_prop_ascii x4788 "min") "apply"
             [|x4788;((let x4786 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x4787 : float) ->
                            ignore
                              (Ojs.call x4786 "push"
                                 [|(Ojs.float_to_js x4787)|])) x4785;
                       x4786))|])
    let (pow : x:float -> y:float -> float) =
      fun ~x:(x4789 : float) ->
        fun ~y:(x4790 : float) ->
          Ojs.float_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "pow"
               [|(Ojs.float_to_js x4789);(Ojs.float_to_js x4790)|])
    let (random : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "random" [||])
    let (round : float -> float) =
      fun (x4791 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "round"
             [|(Ojs.float_to_js x4791)|])
    let (sin : float -> float) =
      fun (x4792 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "sin"
             [|(Ojs.float_to_js x4792)|])
    let (sqrt : float -> float) =
      fun (x4793 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "sqrt"
             [|(Ojs.float_to_js x4793)|])
    let (tan : float -> float) =
      fun (x4794 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "tan"
             [|(Ojs.float_to_js x4794)|])
  end
module Map =
  struct
    type ('K, 'V) t =
      [ `Map of ('K * 'V)  | ('K * 'V) IterableIterator.tags_1] intf
    let rec t_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) t =
      fun _K -> fun _V -> Obj.magic
    and t_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) t -> Ojs.t =
      fun _K -> fun _V -> Obj.magic
    type ('K, 'V) t_2 = ('K, 'V) t
    let rec t_2_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) t_2 = fun
      (type __K) -> fun (type __V) ->
      fun (__K_of_js : Ojs.t -> __K) ->
        fun (__V_of_js : Ojs.t -> __V) ->
          fun (x4798 : Ojs.t) -> t_of_js __K_of_js __V_of_js x4798
    and t_2_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) t_2 -> Ojs.t = fun
      (type __K) -> fun (type __V) ->
      fun (__K_to_js : __K -> Ojs.t) ->
        fun (__V_to_js : __V -> Ojs.t) ->
          fun (x4795 : (__K, __V) t) -> t_to_js __K_to_js __V_to_js x4795
    type ('K, 'V) tags =
      [ `Map of ('K * 'V)  | ('K * 'V) IterableIterator.tags_1]
    type ('K, 'V) tags_2 = ('K, 'V) tags
    type ('tags, 'K, 'V) this =
      'tags intf constraint 'tags = [> `Map of ('K * 'V) ]
    let rec this_of_js :
      'tags 'K 'V .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('tags, 'K, 'V) this
      = fun (type __tags) -> fun (type __K) -> fun (type __V) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__K_of_js : Ojs.t -> __K) ->
          fun (__V_of_js : Ojs.t -> __V) ->
            fun (x4803 : Ojs.t) -> intf_of_js __tags_of_js x4803
    and this_to_js :
      'tags 'K 'V .
        ('tags -> Ojs.t) ->
          ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('tags, 'K, 'V) this -> Ojs.t
      = fun (type __tags) -> fun (type __K) -> fun (type __V) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__K_to_js : __K -> Ojs.t) ->
          fun (__V_to_js : __V -> Ojs.t) ->
            fun (x4801 : __tags intf) -> intf_to_js __tags_to_js x4801
    let (entries : ('tags, 'K, 'V) this -> ('K * 'V) IterableIterator.t) =
      fun (x4805 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js
          (fun (x4809 : Ojs.t) ->
             let x4810 = x4809 in
             ((Obj.magic (Ojs.array_get x4810 0)),
               (Obj.magic (Ojs.array_get x4810 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4805)
             "entries" [||])
    let (keys : ('tags, 'K, 'V) this -> 'K IterableIterator.t) =
      fun (x4811 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4811) "keys"
             [||])
    let (values : ('tags, 'K, 'V) this -> 'V IterableIterator.t) =
      fun (x4816 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4816) "values"
             [||])
    let (clear : ('tags, 'K, 'V) this -> unit) =
      fun (x4821 : ('tags, 'K, 'V) this) ->
        ignore
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4821) "clear"
             [||])
    let (delete : ('tags, 'K, 'V) this -> key:'K -> bool) =
      fun (x4826 : ('tags, 'K, 'V) this) ->
        fun ~key:(x4825 : 'K) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4826)
               "delete" [|(Obj.magic x4825)|])
    let (forEach :
      ('tags, 'K, 'V) this ->
        callbackfn:(value:'V -> key:'K -> map:('K, 'V) t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x4839 : ('tags, 'K, 'V) this) ->
        fun
          ~callbackfn:(x4830 : value:'V -> key:'K -> map:('K, 'V) t -> unit)
          ->
          fun ?thisArg:(x4831 : any option) ->
            fun () ->
              ignore
                (let x4843 = this_to_js Obj.magic Obj.magic Obj.magic x4839 in
                 Ojs.call (Ojs.get_prop_ascii x4843 "forEach") "apply"
                   [|x4843;((let x4832 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4832 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4834 : Ojs.t) ->
                                          fun (x4835 : Ojs.t) ->
                                            fun (x4836 : Ojs.t) ->
                                              x4830 ~value:(Obj.magic x4834)
                                                ~key:(Obj.magic x4835)
                                                ~map:(t_of_js Obj.magic
                                                        Obj.magic x4836)))|]);
                             (match x4831 with
                              | Some x4833 ->
                                  ignore
                                    (Ojs.call x4832 "push"
                                       [|(any_to_js x4833)|])
                              | None -> ());
                             x4832))|])
    let (get_ : ('tags, 'K, 'V) this -> key:'K -> 'V or_undefined) =
      fun (x4845 : ('tags, 'K, 'V) this) ->
        fun ~key:(x4844 : 'K) ->
          or_undefined_of_js Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4845) "get"
               [|(Obj.magic x4844)|])
    let (has : ('tags, 'K, 'V) this -> key:'K -> bool) =
      fun (x4851 : ('tags, 'K, 'V) this) ->
        fun ~key:(x4850 : 'K) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4851) "has"
               [|(Obj.magic x4850)|])
    let (set_ :
      ('tags, 'K, 'V) this -> key:'K -> value:'V -> ('tags, 'K, 'V) this) =
      fun (x4857 : ('tags, 'K, 'V) this) ->
        fun ~key:(x4855 : 'K) ->
          fun ~value:(x4856 : 'V) ->
            this_of_js Obj.magic Obj.magic Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4857)
                 "set" [|(Obj.magic x4855);(Obj.magic x4856)|])
    let (get_size : ('tags, 'K, 'V) this -> float) =
      fun (x4864 : ('tags, 'K, 'V) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii
             (this_to_js Obj.magic Obj.magic Obj.magic x4864) "size")
    let (create : ('K * 'V) Iterable.t -> ('K, 'V) t) =
      fun (x4868 : ('K * 'V) Iterable.t) ->
        t_of_js Obj.magic Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Map")
             [|(Iterable.t_to_js
                  (fun (x4869 : ('K * 'V)) ->
                     let (x4870, x4871) = x4869 in
                     let x4872 = Ojs.array_make 2 in
                     Ojs.array_set x4872 0 (Obj.magic x4870);
                     Ojs.array_set x4872 1 (Obj.magic x4871);
                     x4872) x4868)|])
    let (create' : unit -> (any, any) t) =
      fun () ->
        t_of_js any_of_js any_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Map") [||])
    let (create'' : ?entries:('K * 'V) list or_null -> unit -> ('K, 'V) t) =
      fun ?entries:(x4877 : ('K * 'V) list or_null option) ->
        fun () ->
          t_of_js Obj.magic Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Map")
               (let x4878 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x4877 with
                 | Some x4879 ->
                     ignore
                       (Ojs.call x4878 "push"
                          [|(or_null_to_js
                               (fun (x4880 : ('K * 'V) list) ->
                                  Ojs.list_to_js
                                    (fun (x4881 : ('K * 'V)) ->
                                       let (x4882, x4883) = x4881 in
                                       let x4884 = Ojs.array_make 2 in
                                       Ojs.array_set x4884 0
                                         (Obj.magic x4882);
                                       Ojs.array_set x4884 1
                                         (Obj.magic x4883);
                                       x4884) x4880) x4879)|])
                 | None -> ());
                x4878))
    let (prototype : unit -> (any, any) t) =
      fun () ->
        t_of_js any_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Map")
             "prototype")
    let cast_from = Obj.magic
  end
module Lowercase =
  struct
    type 'S t = Ojs.t
    let rec t_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t = fun (type __S) ->
      fun (__S_of_js : Ojs.t -> __S) -> fun (x4890 : Ojs.t) -> x4890
    and t_to_js : 'S . ('S -> Ojs.t) -> 'S t -> Ojs.t = fun (type __S) ->
      fun (__S_to_js : __S -> Ojs.t) -> fun (x4889 : Ojs.t) -> x4889
    type 'S t_1 = 'S t
    let rec t_1_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t_1 = fun (type
      __S) ->
      fun (__S_of_js : Ojs.t -> __S) ->
        fun (x4893 : Ojs.t) -> t_of_js __S_of_js x4893
    and t_1_to_js : 'S . ('S -> Ojs.t) -> 'S t_1 -> Ojs.t = fun (type __S) ->
      fun (__S_to_js : __S -> Ojs.t) ->
        fun (x4891 : __S t) -> t_to_js __S_to_js x4891
  end
module JSON =
  struct
    let (parse :
      text:string ->
        ?reviver:(this:any -> key:string -> value:any -> any) -> unit -> any)
      =
      fun ~text:(x4895 : string) ->
        fun
          ?reviver:(x4896 :
                     (this:any -> key:string -> value:any -> any) option)
          ->
          fun () ->
            any_of_js
              (let x4902 = Ojs.get_prop_ascii Ojs.global "JSON" in
               Ojs.call (Ojs.get_prop_ascii x4902 "parse") "apply"
                 [|x4902;((let x4897 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x4897 "push"
                                [|(Ojs.string_to_js x4895)|]);
                           (match x4896 with
                            | Some x4898 ->
                                ignore
                                  (Ojs.call x4897 "push"
                                     [|(Ojs.fun_to_js 3
                                          (fun (x4899 : Ojs.t) ->
                                             fun (x4900 : Ojs.t) ->
                                               fun (x4901 : Ojs.t) ->
                                                 any_to_js
                                                   (x4898
                                                      ~this:(any_of_js x4899)
                                                      ~key:(Ojs.string_of_js
                                                              x4900)
                                                      ~value:(any_of_js x4901))))|])
                            | None -> ());
                           x4897))|])
    let (stringify :
      value:any ->
        ?replacer:(this:any -> key:string -> value:any -> any) ->
          ?space:string or_number -> unit -> string)
      =
      fun ~value:(x4903 : any) ->
        fun
          ?replacer:(x4904 :
                      (this:any -> key:string -> value:any -> any) option)
          ->
          fun ?space:(x4905 : string or_number option) ->
            fun () ->
              Ojs.string_of_js
                (let x4913 = Ojs.get_prop_ascii Ojs.global "JSON" in
                 Ojs.call (Ojs.get_prop_ascii x4913 "stringify") "apply"
                   [|x4913;((let x4906 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4906 "push" [|(any_to_js x4903)|]);
                             (match x4904 with
                              | Some x4909 ->
                                  ignore
                                    (Ojs.call x4906 "push"
                                       [|(Ojs.fun_to_js 3
                                            (fun (x4910 : Ojs.t) ->
                                               fun (x4911 : Ojs.t) ->
                                                 fun (x4912 : Ojs.t) ->
                                                   any_to_js
                                                     (x4909
                                                        ~this:(any_of_js
                                                                 x4910)
                                                        ~key:(Ojs.string_of_js
                                                                x4911)
                                                        ~value:(any_of_js
                                                                  x4912))))|])
                              | None -> ());
                             (match x4905 with
                              | Some x4907 ->
                                  ignore
                                    (Ojs.call x4906 "push"
                                       [|(or_number_to_js Ojs.string_to_js
                                            x4907)|])
                              | None -> ());
                             x4906))|])
    let (stringify' :
      value:any ->
        ?replacer:string or_number list or_null ->
          ?space:string or_number -> unit -> string)
      =
      fun ~value:(x4914 : any) ->
        fun ?replacer:(x4915 : string or_number list or_null option) ->
          fun ?space:(x4916 : string or_number option) ->
            fun () ->
              Ojs.string_of_js
                (let x4924 = Ojs.get_prop_ascii Ojs.global "JSON" in
                 Ojs.call (Ojs.get_prop_ascii x4924 "stringify") "apply"
                   [|x4924;((let x4917 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4917 "push" [|(any_to_js x4914)|]);
                             (match x4915 with
                              | Some x4920 ->
                                  ignore
                                    (Ojs.call x4917 "push"
                                       [|(or_null_to_js
                                            (fun
                                               (x4921 :
                                                 string or_number list)
                                               ->
                                               Ojs.list_to_js
                                                 (fun
                                                    (x4922 :
                                                      string or_number)
                                                    ->
                                                    or_number_to_js
                                                      Ojs.string_to_js x4922)
                                                 x4921) x4920)|])
                              | None -> ());
                             (match x4916 with
                              | Some x4918 ->
                                  ignore
                                    (Ojs.call x4917 "push"
                                       [|(or_number_to_js Ojs.string_to_js
                                            x4918)|])
                              | None -> ());
                             x4917))|])
  end
module InstanceType =
  struct
    module AnonymousInterface8 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x4926 : Ojs.t) -> x4926
        and t_to_js : t -> Ojs.t = fun (x4925 : Ojs.t) -> x4925
        let (create : t -> args:any list -> any) =
          fun (x4930 : t) ->
            fun ~args:(x4927 : any list) ->
              any_of_js
                (Ojs.new_obj_arr (t_to_js x4930)
                   (let x4928 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    List.iter
                      (fun (x4929 : any) ->
                         ignore (Ojs.call x4928 "push" [|(any_to_js x4929)|]))
                      x4927;
                    x4928))
      end
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4932 : Ojs.t) -> any_of_js x4932
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x4931 : any) -> any_to_js x4931
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4935 : Ojs.t) -> t_of_js __T_of_js x4935
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x4933 : __T t) -> t_to_js __T_to_js x4933
  end
module ImportMeta =
  struct
    type t = [ `ImportMeta ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4938 : Ojs.t) -> t_of_js x4938
    and t_0_to_js : t_0 -> Ojs.t = fun (x4937 : t) -> t_to_js x4937
    type tags = [ `ImportMeta ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ImportMeta ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4941 : Ojs.t) -> intf_of_js __tags_of_js x4941
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4939 : __tags intf) -> intf_to_js __tags_to_js x4939
    let cast_from = Obj.magic
  end
module ImportAssertions =
  struct
    type t = [ `ImportAssertions ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4944 : Ojs.t) -> t_of_js x4944
    and t_0_to_js : t_0 -> Ojs.t = fun (x4943 : t) -> t_to_js x4943
    type tags = [ `ImportAssertions ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ImportAssertions ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4947 : Ojs.t) -> intf_of_js __tags_of_js x4947
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4945 : __tags intf) -> intf_to_js __tags_to_js x4945
    let (get : 'tags this -> string -> string) =
      fun (x4949 : 'tags this) ->
        fun (x4951 : string) ->
          Ojs.string_of_js
            (Ojs.get_prop (this_to_js Obj.magic x4949)
               (Ojs.string_to_js x4951))
    let (set : 'tags this -> string -> string -> unit) =
      fun (x4952 : 'tags this) ->
        fun (x4954 : string) ->
          fun (x4955 : string) ->
            Ojs.set_prop (this_to_js Obj.magic x4952)
              (Ojs.string_to_js x4954) (Ojs.string_to_js x4955)
    let cast_from = Obj.magic
  end
module ImportCallOptions =
  struct
    type t = [ `ImportCallOptions ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4957 : Ojs.t) -> t_of_js x4957
    and t_0_to_js : t_0 -> Ojs.t = fun (x4956 : t) -> t_to_js x4956
    type tags = [ `ImportCallOptions ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ImportCallOptions ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4960 : Ojs.t) -> intf_of_js __tags_of_js x4960
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4958 : __tags intf) -> intf_to_js __tags_to_js x4958
    let (get_assert : 'tags this -> ImportAssertions.t) =
      fun (x4962 : 'tags this) ->
        ImportAssertions.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4962) "assert")
    let (set_assert : 'tags this -> ImportAssertions.t -> unit) =
      fun (x4964 : 'tags this) ->
        fun (x4965 : ImportAssertions.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4964) "assert"
            (ImportAssertions.t_to_js x4965)
    let (create : assert_:ImportAssertions.t -> unit -> t) =
      fun ~assert_:(x4967 : ImportAssertions.t) ->
        fun () ->
          let x4968 = Ojs.empty_obj () in
          Ojs.set_prop_ascii x4968 "assert" (ImportAssertions.t_to_js x4967);
          t_of_js x4968
    let cast_from = Obj.magic
  end
module IArguments =
  struct
    type t =
      [ `IArguments  | any ArrayLike.tags_1 | any IterableIterator.tags_1]
        intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4970 : Ojs.t) -> t_of_js x4970
    and t_0_to_js : t_0 -> Ojs.t = fun (x4969 : t) -> t_to_js x4969
    type tags =
      [ `IArguments  | any ArrayLike.tags_1 | any IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `IArguments ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4973 : Ojs.t) -> intf_of_js __tags_of_js x4973
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4971 : __tags intf) -> intf_to_js __tags_to_js x4971
    let (get : 'tags this -> float -> any) =
      fun (x4975 : 'tags this) ->
        fun (x4977 : float) ->
          any_of_js
            (Ojs.get_prop (this_to_js Obj.magic x4975)
               (Ojs.float_to_js x4977))
    let (set : 'tags this -> float -> any -> unit) =
      fun (x4978 : 'tags this) ->
        fun (x4980 : float) ->
          fun (x4981 : any) ->
            Ojs.set_prop (this_to_js Obj.magic x4978) (Ojs.float_to_js x4980)
              (any_to_js x4981)
    let (get_length : 'tags this -> float) =
      fun (x4982 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4982) "length")
    let (set_length : 'tags this -> float -> unit) =
      fun (x4984 : 'tags this) ->
        fun (x4985 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4984) "length"
            (Ojs.float_to_js x4985)
    let (get_callee : 'tags this -> Function.t) =
      fun (x4987 : 'tags this) ->
        Function.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4987) "callee")
    let (set_callee : 'tags this -> Function.t -> unit) =
      fun (x4989 : 'tags this) ->
        fun (x4990 : Function.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4989) "callee"
            (Function.t_to_js x4990)
    let cast_from = Obj.magic
  end
module Generator =
  struct
    type ('T, 'TReturn, 'TNext) t =
      [ `Generator of ('T * 'TReturn * 'TNext) 
      | `Iterator of ('T * 'TReturn * 'TNext) ] intf
    let rec t_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    and t_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t -> Ojs.t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    type ('T, 'TReturn, 'TNext) t_3 = ('T, 'TReturn, 'TNext) t
    let rec t_3_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t_3
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (__TNext_of_js : Ojs.t -> __TNext) ->
            fun (x4996 : Ojs.t) ->
              t_of_js __T_of_js __TReturn_of_js __TNext_of_js x4996
    and t_3_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t_3 -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (__TNext_to_js : __TNext -> Ojs.t) ->
            fun (x4992 : (__T, __TReturn, __TNext) t) ->
              t_to_js __T_to_js __TReturn_to_js __TNext_to_js x4992
    type ('T, 'TReturn) t_2 = ('T, 'TReturn, unknown) t
    let rec t_2_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t_2
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (x5004 : Ojs.t) ->
            t_of_js __T_of_js __TReturn_of_js unknown_of_js x5004
    and t_2_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t_2 -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (x5000 : (__T, __TReturn, unknown) t) ->
            t_to_js __T_to_js __TReturn_to_js unknown_to_js x5000
    type 'T t_1 = ('T, any, unknown) t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x5012 : Ojs.t) ->
          t_of_js __T_of_js any_of_js unknown_of_js x5012
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x5008 : (__T, any, unknown) t) ->
          t_to_js __T_to_js any_to_js unknown_to_js x5008
    type t_0 = (unknown, any, unknown) t
    let rec t_0_of_js : Ojs.t -> t_0 =
      fun (x5020 : Ojs.t) ->
        t_of_js unknown_of_js any_of_js unknown_of_js x5020
    and t_0_to_js : t_0 -> Ojs.t =
      fun (x5016 : (unknown, any, unknown) t) ->
        t_to_js unknown_to_js any_to_js unknown_to_js x5016
    type ('T, 'TReturn, 'TNext) tags =
      [ `Generator of ('T * 'TReturn * 'TNext) 
      | `Iterator of ('T * 'TReturn * 'TNext) ]
    type ('T, 'TReturn, 'TNext) tags_3 = ('T, 'TReturn, 'TNext) tags
    type ('T, 'TReturn) tags_2 = ('T, 'TReturn, unknown) tags
    type 'T tags_1 = ('T, any, unknown) tags
    type tags_0 = (unknown, any, unknown) tags
    type ('tags, 'T, 'TReturn, 'TNext) this =
      'tags intf constraint 'tags =
                  [> `Generator of ('T * 'TReturn * 'TNext) ]
    let rec this_of_js :
      'tags 'T 'TReturn 'TNext .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'T) ->
            (Ojs.t -> 'TReturn) ->
              (Ojs.t -> 'TNext) ->
                Ojs.t -> ('tags, 'T, 'TReturn, 'TNext) this
      = fun (type __tags) -> fun (type __T) -> fun (type __TReturn) -> fun
      (type __TNext) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
            fun (__TNext_of_js : Ojs.t -> __TNext) ->
              fun (x5026 : Ojs.t) -> intf_of_js __tags_of_js x5026
    and this_to_js :
      'tags 'T 'TReturn 'TNext .
        ('tags -> Ojs.t) ->
          ('T -> Ojs.t) ->
            ('TReturn -> Ojs.t) ->
              ('TNext -> Ojs.t) ->
                ('tags, 'T, 'TReturn, 'TNext) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) -> fun (type __TReturn) -> fun
      (type __TNext) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
            fun (__TNext_to_js : __TNext -> Ojs.t) ->
              fun (x5024 : __tags intf) -> intf_to_js __tags_to_js x5024
    let (next :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        args:any list -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x5031 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~args:(x5028 : any list) ->
          IteratorResult.t_of_js Obj.magic Obj.magic
            (let x5036 =
               this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x5031 in
             Ojs.call (Ojs.get_prop_ascii x5036 "next") "apply"
               [|x5036;((let x5029 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x5030 : any) ->
                              ignore
                                (Ojs.call x5029 "push" [|(any_to_js x5030)|]))
                           x5028;
                         x5029))|])
    let (return :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        value:'TReturn -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x5040 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~value:(x5039 : 'TReturn) ->
          IteratorResult.t_of_js Obj.magic Obj.magic
            (Ojs.call
               (this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x5040)
               "return" [|(Obj.magic x5039)|])
    let (throw :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        e:any -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x5048 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~e:(x5047 : any) ->
          IteratorResult.t_of_js Obj.magic Obj.magic
            (Ojs.call
               (this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x5048)
               "throw" [|(any_to_js x5047)|])
    let cast_from = Obj.magic
  end
module GeneratorFunction =
  struct
    type t = [ `GeneratorFunction ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5056 : Ojs.t) -> t_of_js x5056
    and t_0_to_js : t_0 -> Ojs.t = fun (x5055 : t) -> t_to_js x5055
    type tags = [ `GeneratorFunction ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `GeneratorFunction ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5059 : Ojs.t) -> intf_of_js __tags_of_js x5059
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5057 : __tags intf) -> intf_to_js __tags_to_js x5057
    let (create : 'tags this -> args:any list -> Generator.t_0) =
      fun (x5064 : 'tags this) ->
        fun ~args:(x5061 : any list) ->
          Generator.t_0_of_js
            (Ojs.new_obj_arr (this_to_js Obj.magic x5064)
               (let x5062 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                List.iter
                  (fun (x5063 : any) ->
                     ignore (Ojs.call x5062 "push" [|(any_to_js x5063)|]))
                  x5061;
                x5062))
    let (apply : 'tags this -> args:any list -> Generator.t_0) =
      fun (x5069 : 'tags this) ->
        fun ~args:(x5066 : any list) ->
          Generator.t_0_of_js
            (Ojs.call (this_to_js Obj.magic x5069) "apply"
               [|Ojs.null;((let x5067 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            List.iter
                              (fun (x5068 : any) ->
                                 ignore
                                   (Ojs.call x5067 "push"
                                      [|(any_to_js x5068)|])) x5066;
                            x5067))|])
    let (get_length : 'tags this -> float) =
      fun (x5071 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5071) "length")
    let (get_name : 'tags this -> string) =
      fun (x5073 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5073) "name")
    let (get_prototype : 'tags this -> Generator.t_0) =
      fun (x5075 : 'tags this) ->
        Generator.t_0_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5075) "prototype")
    let cast_from = Obj.magic
  end
module GeneratorFunctionConstructor =
  struct
    type t = [ `GeneratorFunctionConstructor ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5078 : Ojs.t) -> t_of_js x5078
    and t_0_to_js : t_0 -> Ojs.t = fun (x5077 : t) -> t_to_js x5077
    type tags = [ `GeneratorFunctionConstructor ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `GeneratorFunctionConstructor ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5081 : Ojs.t) -> intf_of_js __tags_of_js x5081
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5079 : __tags intf) -> intf_to_js __tags_to_js x5079
    let (create : 'tags this -> args:string list -> GeneratorFunction.t) =
      fun (x5086 : 'tags this) ->
        fun ~args:(x5083 : string list) ->
          GeneratorFunction.t_of_js
            (Ojs.new_obj_arr (this_to_js Obj.magic x5086)
               (let x5084 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                List.iter
                  (fun (x5085 : string) ->
                     ignore
                       (Ojs.call x5084 "push" [|(Ojs.string_to_js x5085)|]))
                  x5083;
                x5084))
    let (apply : 'tags this -> args:string list -> GeneratorFunction.t) =
      fun (x5091 : 'tags this) ->
        fun ~args:(x5088 : string list) ->
          GeneratorFunction.t_of_js
            (Ojs.call (this_to_js Obj.magic x5091) "apply"
               [|Ojs.null;((let x5089 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            List.iter
                              (fun (x5090 : string) ->
                                 ignore
                                   (Ojs.call x5089 "push"
                                      [|(Ojs.string_to_js x5090)|])) x5088;
                            x5089))|])
    let (get_length : 'tags this -> float) =
      fun (x5093 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5093) "length")
    let (get_name : 'tags this -> string) =
      fun (x5095 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5095) "name")
    let (get_prototype : 'tags this -> GeneratorFunction.t) =
      fun (x5097 : 'tags this) ->
        GeneratorFunction.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5097) "prototype")
    let cast_from = Obj.magic
  end
module Float64Array =
  struct
    type t =
      [ `Float64Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5100 : Ojs.t) -> t_of_js x5100
    and t_0_to_js : t_0 -> Ojs.t = fun (x5099 : t) -> t_to_js x5099
    type tags =
      [ `Float64Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Float64Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5103 : Ojs.t) -> intf_of_js __tags_of_js x5103
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5101 : __tags intf) -> intf_to_js __tags_to_js x5101
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x5109 : 'tags this) ->
        fun ~searchElement:(x5105 : float) ->
          fun ?fromIndex:(x5106 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x5111 = this_to_js Obj.magic x5109 in
                 Ojs.call (Ojs.get_prop_ascii x5111 "includes") "apply"
                   [|x5111;((let x5107 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5107 "push"
                                  [|(Ojs.float_to_js x5105)|]);
                             (match x5106 with
                              | Some x5108 ->
                                  ignore
                                    (Ojs.call x5107 "push"
                                       [|(Ojs.float_to_js x5108)|])
                              | None -> ());
                             x5107))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x5112 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x5114 : Ojs.t) ->
             let x5115 = x5114 in
             ((Ojs.float_of_js (Ojs.array_get x5115 0)),
               (Ojs.float_of_js (Ojs.array_get x5115 1))))
          (Ojs.call (this_to_js Obj.magic x5112) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x5116 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x5116) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x5119 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x5119) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x5122 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5122)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x5124 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5124) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x5126 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5126) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x5128 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5128) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x5135 : 'tags this) ->
        fun ~target:(x5130 : float) ->
          fun ~start:(x5131 : float) ->
            fun ?end_:(x5132 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x5137 = this_to_js Obj.magic x5135 in
                   Ojs.call (Ojs.get_prop_ascii x5137 "copyWithin") "apply"
                     [|x5137;((let x5133 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5133 "push"
                                    [|(Ojs.float_to_js x5130)|]);
                               ignore
                                 (Ojs.call x5133 "push"
                                    [|(Ojs.float_to_js x5131)|]);
                               (match x5132 with
                                | Some x5134 ->
                                    ignore
                                      (Ojs.call x5133 "push"
                                         [|(Ojs.float_to_js x5134)|])
                                | None -> ());
                               x5133))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x5146 : 'tags this) ->
        fun
          ~predicate:(x5139 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x5140 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x5148 = this_to_js Obj.magic x5146 in
                 Ojs.call (Ojs.get_prop_ascii x5148 "every") "apply"
                   [|x5148;((let x5141 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5141 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5143 : Ojs.t) ->
                                          fun (x5144 : Ojs.t) ->
                                            fun (x5145 : Ojs.t) ->
                                              unknown_to_js
                                                (x5139
                                                   ~value:(Ojs.float_of_js
                                                             x5143)
                                                   ~index:(Ojs.float_of_js
                                                             x5144)
                                                   ~array:(t_of_js x5145))))|]);
                             (match x5140 with
                              | Some x5142 ->
                                  ignore
                                    (Ojs.call x5141 "push"
                                       [|(any_to_js x5142)|])
                              | None -> ());
                             x5141))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x5155 : 'tags this) ->
        fun ~value:(x5149 : float) ->
          fun ?start:(x5150 : float option) ->
            fun ?end_:(x5151 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x5157 = this_to_js Obj.magic x5155 in
                   Ojs.call (Ojs.get_prop_ascii x5157 "fill") "apply"
                     [|x5157;((let x5152 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5152 "push"
                                    [|(Ojs.float_to_js x5149)|]);
                               (match x5150 with
                                | Some x5154 ->
                                    ignore
                                      (Ojs.call x5152 "push"
                                         [|(Ojs.float_to_js x5154)|])
                                | None -> ());
                               (match x5151 with
                                | Some x5153 ->
                                    ignore
                                      (Ojs.call x5152 "push"
                                         [|(Ojs.float_to_js x5153)|])
                                | None -> ());
                               x5152))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x5166 : 'tags this) ->
        fun ~predicate:(x5159 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x5160 : any option) ->
            fun () ->
              t_of_js
                (let x5168 = this_to_js Obj.magic x5166 in
                 Ojs.call (Ojs.get_prop_ascii x5168 "filter") "apply"
                   [|x5168;((let x5161 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5161 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5163 : Ojs.t) ->
                                          fun (x5164 : Ojs.t) ->
                                            fun (x5165 : Ojs.t) ->
                                              any_to_js
                                                (x5159
                                                   ~value:(Ojs.float_of_js
                                                             x5163)
                                                   ~index:(Ojs.float_of_js
                                                             x5164)
                                                   ~array:(t_of_js x5165))))|]);
                             (match x5160 with
                              | Some x5162 ->
                                  ignore
                                    (Ojs.call x5161 "push"
                                       [|(any_to_js x5162)|])
                              | None -> ());
                             x5161))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x5176 : 'tags this) ->
        fun ~predicate:(x5169 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x5170 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x5178 = this_to_js Obj.magic x5176 in
                 Ojs.call (Ojs.get_prop_ascii x5178 "find") "apply"
                   [|x5178;((let x5171 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5171 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5173 : Ojs.t) ->
                                          fun (x5174 : Ojs.t) ->
                                            fun (x5175 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x5169
                                                   ~value:(Ojs.float_of_js
                                                             x5173)
                                                   ~index:(Ojs.float_of_js
                                                             x5174)
                                                   ~obj:(t_of_js x5175))))|]);
                             (match x5170 with
                              | Some x5172 ->
                                  ignore
                                    (Ojs.call x5171 "push"
                                       [|(any_to_js x5172)|])
                              | None -> ());
                             x5171))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x5187 : 'tags this) ->
        fun ~predicate:(x5180 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x5181 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x5189 = this_to_js Obj.magic x5187 in
                 Ojs.call (Ojs.get_prop_ascii x5189 "findIndex") "apply"
                   [|x5189;((let x5182 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5182 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5184 : Ojs.t) ->
                                          fun (x5185 : Ojs.t) ->
                                            fun (x5186 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x5180
                                                   ~value:(Ojs.float_of_js
                                                             x5184)
                                                   ~index:(Ojs.float_of_js
                                                             x5185)
                                                   ~obj:(t_of_js x5186))))|]);
                             (match x5181 with
                              | Some x5183 ->
                                  ignore
                                    (Ojs.call x5182 "push"
                                       [|(any_to_js x5183)|])
                              | None -> ());
                             x5182))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x5197 : 'tags this) ->
        fun
          ~callbackfn:(x5190 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x5191 : any option) ->
            fun () ->
              ignore
                (let x5199 = this_to_js Obj.magic x5197 in
                 Ojs.call (Ojs.get_prop_ascii x5199 "forEach") "apply"
                   [|x5199;((let x5192 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5192 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5194 : Ojs.t) ->
                                          fun (x5195 : Ojs.t) ->
                                            fun (x5196 : Ojs.t) ->
                                              x5190
                                                ~value:(Ojs.float_of_js x5194)
                                                ~index:(Ojs.float_of_js x5195)
                                                ~array:(t_of_js x5196)))|]);
                             (match x5191 with
                              | Some x5193 ->
                                  ignore
                                    (Ojs.call x5192 "push"
                                       [|(any_to_js x5193)|])
                              | None -> ());
                             x5192))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x5204 : 'tags this) ->
        fun ~searchElement:(x5200 : float) ->
          fun ?fromIndex:(x5201 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x5206 = this_to_js Obj.magic x5204 in
                 Ojs.call (Ojs.get_prop_ascii x5206 "indexOf") "apply"
                   [|x5206;((let x5202 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5202 "push"
                                  [|(Ojs.float_to_js x5200)|]);
                             (match x5201 with
                              | Some x5203 ->
                                  ignore
                                    (Ojs.call x5202 "push"
                                       [|(Ojs.float_to_js x5203)|])
                              | None -> ());
                             x5202))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x5210 : 'tags this) ->
        fun ?separator:(x5207 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x5212 = this_to_js Obj.magic x5210 in
               Ojs.call (Ojs.get_prop_ascii x5212 "join") "apply"
                 [|x5212;((let x5208 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x5207 with
                            | Some x5209 ->
                                ignore
                                  (Ojs.call x5208 "push"
                                     [|(Ojs.string_to_js x5209)|])
                            | None -> ());
                           x5208))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x5217 : 'tags this) ->
        fun ~searchElement:(x5213 : float) ->
          fun ?fromIndex:(x5214 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x5219 = this_to_js Obj.magic x5217 in
                 Ojs.call (Ojs.get_prop_ascii x5219 "lastIndexOf") "apply"
                   [|x5219;((let x5215 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5215 "push"
                                  [|(Ojs.float_to_js x5213)|]);
                             (match x5214 with
                              | Some x5216 ->
                                  ignore
                                    (Ojs.call x5215 "push"
                                       [|(Ojs.float_to_js x5216)|])
                              | None -> ());
                             x5215))|])
    let (get_length : 'tags this -> float) =
      fun (x5220 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5220) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x5229 : 'tags this) ->
        fun
          ~callbackfn:(x5222 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x5223 : any option) ->
            fun () ->
              t_of_js
                (let x5231 = this_to_js Obj.magic x5229 in
                 Ojs.call (Ojs.get_prop_ascii x5231 "map") "apply"
                   [|x5231;((let x5224 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5224 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5226 : Ojs.t) ->
                                          fun (x5227 : Ojs.t) ->
                                            fun (x5228 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x5222
                                                   ~value:(Ojs.float_of_js
                                                             x5226)
                                                   ~index:(Ojs.float_of_js
                                                             x5227)
                                                   ~array:(t_of_js x5228))))|]);
                             (match x5223 with
                              | Some x5225 ->
                                  ignore
                                    (Ojs.call x5224 "push"
                                       [|(any_to_js x5225)|])
                              | None -> ());
                             x5224))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x5237 : 'tags this) ->
        fun
          ~callbackfn:(x5232 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x5237) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x5233 : Ojs.t) ->
                       fun (x5234 : Ojs.t) ->
                         fun (x5235 : Ojs.t) ->
                           fun (x5236 : Ojs.t) ->
                             Ojs.float_to_js
                               (x5232 ~previousValue:(Ojs.float_of_js x5233)
                                  ~currentValue:(Ojs.float_of_js x5234)
                                  ~currentIndex:(Ojs.float_of_js x5235)
                                  ~array:(t_of_js x5236))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x5245 : 'tags this) ->
        fun
          ~callbackfn:(x5239 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x5244 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x5245) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x5240 : Ojs.t) ->
                         fun (x5241 : Ojs.t) ->
                           fun (x5242 : Ojs.t) ->
                             fun (x5243 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x5239
                                    ~previousValue:(Ojs.float_of_js x5240)
                                    ~currentValue:(Ojs.float_of_js x5241)
                                    ~currentIndex:(Ojs.float_of_js x5242)
                                    ~array:(t_of_js x5243))));(Ojs.float_to_js
                                                                 x5244)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x5253 : 'tags this) ->
        fun
          ~callbackfn:(x5247 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x5252 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x5253) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x5248 : Ojs.t) ->
                         fun (x5249 : Ojs.t) ->
                           fun (x5250 : Ojs.t) ->
                             fun (x5251 : Ojs.t) ->
                               Obj.magic
                                 (x5247 ~previousValue:(Obj.magic x5248)
                                    ~currentValue:(Ojs.float_of_js x5249)
                                    ~currentIndex:(Ojs.float_of_js x5250)
                                    ~array:(t_of_js x5251))));(Obj.magic
                                                                 x5252)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x5260 : 'tags this) ->
        fun
          ~callbackfn:(x5255 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x5260) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x5256 : Ojs.t) ->
                       fun (x5257 : Ojs.t) ->
                         fun (x5258 : Ojs.t) ->
                           fun (x5259 : Ojs.t) ->
                             Ojs.float_to_js
                               (x5255 ~previousValue:(Ojs.float_of_js x5256)
                                  ~currentValue:(Ojs.float_of_js x5257)
                                  ~currentIndex:(Ojs.float_of_js x5258)
                                  ~array:(t_of_js x5259))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x5268 : 'tags this) ->
        fun
          ~callbackfn:(x5262 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x5267 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x5268) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x5263 : Ojs.t) ->
                         fun (x5264 : Ojs.t) ->
                           fun (x5265 : Ojs.t) ->
                             fun (x5266 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x5262
                                    ~previousValue:(Ojs.float_of_js x5263)
                                    ~currentValue:(Ojs.float_of_js x5264)
                                    ~currentIndex:(Ojs.float_of_js x5265)
                                    ~array:(t_of_js x5266))));(Ojs.float_to_js
                                                                 x5267)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x5276 : 'tags this) ->
        fun
          ~callbackfn:(x5270 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x5275 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x5276) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x5271 : Ojs.t) ->
                         fun (x5272 : Ojs.t) ->
                           fun (x5273 : Ojs.t) ->
                             fun (x5274 : Ojs.t) ->
                               Obj.magic
                                 (x5270 ~previousValue:(Obj.magic x5271)
                                    ~currentValue:(Ojs.float_of_js x5272)
                                    ~currentIndex:(Ojs.float_of_js x5273)
                                    ~array:(t_of_js x5274))));(Obj.magic
                                                                 x5275)|])
    let (reverse : 'tags this -> t) =
      fun (x5278 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x5278) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x5285 : 'tags this) ->
        fun ~array:(x5280 : float ArrayLike.t) ->
          fun ?offset:(x5281 : float option) ->
            fun () ->
              ignore
                (let x5287 = this_to_js Obj.magic x5285 in
                 Ojs.call (Ojs.get_prop_ascii x5287 "set") "apply"
                   [|x5287;((let x5282 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5282 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x5280)|]);
                             (match x5281 with
                              | Some x5283 ->
                                  ignore
                                    (Ojs.call x5282 "push"
                                       [|(Ojs.float_to_js x5283)|])
                              | None -> ());
                             x5282))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x5293 : 'tags this) ->
        fun ?start:(x5288 : float option) ->
          fun ?end_:(x5289 : float option) ->
            fun () ->
              t_of_js
                (let x5295 = this_to_js Obj.magic x5293 in
                 Ojs.call (Ojs.get_prop_ascii x5295 "slice") "apply"
                   [|x5295;((let x5290 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x5288 with
                              | Some x5292 ->
                                  ignore
                                    (Ojs.call x5290 "push"
                                       [|(Ojs.float_to_js x5292)|])
                              | None -> ());
                             (match x5289 with
                              | Some x5291 ->
                                  ignore
                                    (Ojs.call x5290 "push"
                                       [|(Ojs.float_to_js x5291)|])
                              | None -> ());
                             x5290))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x5303 : 'tags this) ->
        fun
          ~predicate:(x5296 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x5297 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x5305 = this_to_js Obj.magic x5303 in
                 Ojs.call (Ojs.get_prop_ascii x5305 "some") "apply"
                   [|x5305;((let x5298 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5298 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5300 : Ojs.t) ->
                                          fun (x5301 : Ojs.t) ->
                                            fun (x5302 : Ojs.t) ->
                                              unknown_to_js
                                                (x5296
                                                   ~value:(Ojs.float_of_js
                                                             x5300)
                                                   ~index:(Ojs.float_of_js
                                                             x5301)
                                                   ~array:(t_of_js x5302))))|]);
                             (match x5297 with
                              | Some x5299 ->
                                  ignore
                                    (Ojs.call x5298 "push"
                                       [|(any_to_js x5299)|])
                              | None -> ());
                             x5298))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x5311 : 'tags this) ->
        fun ?compareFn:(x5306 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x5313 = this_to_js Obj.magic x5311 in
               Ojs.call (Ojs.get_prop_ascii x5313 "sort") "apply"
                 [|x5313;((let x5307 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x5306 with
                            | Some x5308 ->
                                ignore
                                  (Ojs.call x5307 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x5309 : Ojs.t) ->
                                             fun (x5310 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x5308
                                                    ~a:(Ojs.float_of_js x5309)
                                                    ~b:(Ojs.float_of_js x5310))))|])
                            | None -> ());
                           x5307))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x5320 : 'tags this) ->
        fun ?begin_:(x5315 : float option) ->
          fun ?end_:(x5316 : float option) ->
            fun () ->
              t_of_js
                (let x5322 = this_to_js Obj.magic x5320 in
                 Ojs.call (Ojs.get_prop_ascii x5322 "subarray") "apply"
                   [|x5322;((let x5317 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x5315 with
                              | Some x5319 ->
                                  ignore
                                    (Ojs.call x5317 "push"
                                       [|(Ojs.float_to_js x5319)|])
                              | None -> ());
                             (match x5316 with
                              | Some x5318 ->
                                  ignore
                                    (Ojs.call x5317 "push"
                                       [|(Ojs.float_to_js x5318)|])
                              | None -> ());
                             x5317))|])
    let (toString : 'tags this -> string) =
      fun (x5323 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x5323) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x5325 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x5325) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x5327 : 'tags this) ->
        fun (x5329 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x5327)
               (Ojs.float_to_js x5329))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x5330 : 'tags this) ->
        fun (x5332 : float) ->
          fun (x5333 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x5330) (Ojs.float_to_js x5332)
              (Ojs.float_to_js x5333)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float64Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x5334 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float64Array")
             [|(Iterable.t_to_js Ojs.float_to_js x5334)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x5336 : float Iterable.t) ->
        fun ?mapfn:(x5337 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x5338 : any option) ->
            fun () ->
              t_of_js
                (let x5345 = Ojs.get_prop_ascii Ojs.global "Float64Array" in
                 Ojs.call (Ojs.get_prop_ascii x5345 "from") "apply"
                   [|x5345;((let x5339 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5339 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x5336)|]);
                             (match x5337 with
                              | Some x5341 ->
                                  ignore
                                    (Ojs.call x5339 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x5342 : Ojs.t) ->
                                               fun (x5343 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x5341
                                                      ~v:(Ojs.float_of_js
                                                            x5342)
                                                      ~k:(Ojs.float_of_js
                                                            x5343))))|])
                              | None -> ());
                             (match x5338 with
                              | Some x5340 ->
                                  ignore
                                    (Ojs.call x5339 "push"
                                       [|(any_to_js x5340)|])
                              | None -> ());
                             x5339))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Float64Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x5346 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float64Array")
             [|(Ojs.float_to_js x5346)|])
    let (create''' : (ArrayBufferLike.t, float ArrayLike.t) union2 -> t) =
      fun (x5347 : (ArrayBufferLike.t, float ArrayLike.t) union2) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float64Array")
             [|(union2_to_js ArrayBufferLike.t_to_js
                  (fun (x5349 : float ArrayLike.t) ->
                     ArrayLike.t_to_js Ojs.float_to_js x5349) x5347)|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x5351 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x5352 : float option) ->
          fun ?length:(x5353 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Float64Array")
                   (let x5354 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x5354 "push"
                         [|(ArrayBufferLike.t_to_js x5351)|]);
                    (match x5352 with
                     | Some x5356 ->
                         ignore
                           (Ojs.call x5354 "push" [|(Ojs.float_to_js x5356)|])
                     | None -> ());
                    (match x5353 with
                     | Some x5355 ->
                         ignore
                           (Ojs.call x5354 "push" [|(Ojs.float_to_js x5355)|])
                     | None -> ());
                    x5354))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Float64Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x5357 : float list) ->
        t_of_js
          (let x5360 = Ojs.get_prop_ascii Ojs.global "Float64Array" in
           Ojs.call (Ojs.get_prop_ascii x5360 "of") "apply"
             [|x5360;((let x5358 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x5359 : float) ->
                            ignore
                              (Ojs.call x5358 "push"
                                 [|(Ojs.float_to_js x5359)|])) x5357;
                       x5358))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x5361 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Float64Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x5361)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x5363 : 'T ArrayLike.t) ->
        fun ~mapfn:(x5364 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x5365 : any option) ->
            fun () ->
              t_of_js
                (let x5371 = Ojs.get_prop_ascii Ojs.global "Float64Array" in
                 Ojs.call (Ojs.get_prop_ascii x5371 "from") "apply"
                   [|x5371;((let x5366 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5366 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x5363)|]);
                             ignore
                               (Ojs.call x5366 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x5368 : Ojs.t) ->
                                          fun (x5369 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x5364 ~v:(Obj.magic x5368)
                                                 ~k:(Ojs.float_of_js x5369))))|]);
                             (match x5365 with
                              | Some x5367 ->
                                  ignore
                                    (Ojs.call x5366 "push"
                                       [|(any_to_js x5367)|])
                              | None -> ());
                             x5366))|])
    let cast_from = Obj.magic
  end
module Float32Array =
  struct
    type t =
      [ `Float32Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5373 : Ojs.t) -> t_of_js x5373
    and t_0_to_js : t_0 -> Ojs.t = fun (x5372 : t) -> t_to_js x5372
    type tags =
      [ `Float32Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Float32Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5376 : Ojs.t) -> intf_of_js __tags_of_js x5376
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5374 : __tags intf) -> intf_to_js __tags_to_js x5374
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x5382 : 'tags this) ->
        fun ~searchElement:(x5378 : float) ->
          fun ?fromIndex:(x5379 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x5384 = this_to_js Obj.magic x5382 in
                 Ojs.call (Ojs.get_prop_ascii x5384 "includes") "apply"
                   [|x5384;((let x5380 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5380 "push"
                                  [|(Ojs.float_to_js x5378)|]);
                             (match x5379 with
                              | Some x5381 ->
                                  ignore
                                    (Ojs.call x5380 "push"
                                       [|(Ojs.float_to_js x5381)|])
                              | None -> ());
                             x5380))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x5385 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x5387 : Ojs.t) ->
             let x5388 = x5387 in
             ((Ojs.float_of_js (Ojs.array_get x5388 0)),
               (Ojs.float_of_js (Ojs.array_get x5388 1))))
          (Ojs.call (this_to_js Obj.magic x5385) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x5389 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x5389) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x5392 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x5392) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x5395 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5395)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x5397 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5397) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x5399 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5399) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x5401 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5401) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x5408 : 'tags this) ->
        fun ~target:(x5403 : float) ->
          fun ~start:(x5404 : float) ->
            fun ?end_:(x5405 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x5410 = this_to_js Obj.magic x5408 in
                   Ojs.call (Ojs.get_prop_ascii x5410 "copyWithin") "apply"
                     [|x5410;((let x5406 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5406 "push"
                                    [|(Ojs.float_to_js x5403)|]);
                               ignore
                                 (Ojs.call x5406 "push"
                                    [|(Ojs.float_to_js x5404)|]);
                               (match x5405 with
                                | Some x5407 ->
                                    ignore
                                      (Ojs.call x5406 "push"
                                         [|(Ojs.float_to_js x5407)|])
                                | None -> ());
                               x5406))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x5419 : 'tags this) ->
        fun
          ~predicate:(x5412 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x5413 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x5421 = this_to_js Obj.magic x5419 in
                 Ojs.call (Ojs.get_prop_ascii x5421 "every") "apply"
                   [|x5421;((let x5414 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5414 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5416 : Ojs.t) ->
                                          fun (x5417 : Ojs.t) ->
                                            fun (x5418 : Ojs.t) ->
                                              unknown_to_js
                                                (x5412
                                                   ~value:(Ojs.float_of_js
                                                             x5416)
                                                   ~index:(Ojs.float_of_js
                                                             x5417)
                                                   ~array:(t_of_js x5418))))|]);
                             (match x5413 with
                              | Some x5415 ->
                                  ignore
                                    (Ojs.call x5414 "push"
                                       [|(any_to_js x5415)|])
                              | None -> ());
                             x5414))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x5428 : 'tags this) ->
        fun ~value:(x5422 : float) ->
          fun ?start:(x5423 : float option) ->
            fun ?end_:(x5424 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x5430 = this_to_js Obj.magic x5428 in
                   Ojs.call (Ojs.get_prop_ascii x5430 "fill") "apply"
                     [|x5430;((let x5425 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5425 "push"
                                    [|(Ojs.float_to_js x5422)|]);
                               (match x5423 with
                                | Some x5427 ->
                                    ignore
                                      (Ojs.call x5425 "push"
                                         [|(Ojs.float_to_js x5427)|])
                                | None -> ());
                               (match x5424 with
                                | Some x5426 ->
                                    ignore
                                      (Ojs.call x5425 "push"
                                         [|(Ojs.float_to_js x5426)|])
                                | None -> ());
                               x5425))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x5439 : 'tags this) ->
        fun ~predicate:(x5432 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x5433 : any option) ->
            fun () ->
              t_of_js
                (let x5441 = this_to_js Obj.magic x5439 in
                 Ojs.call (Ojs.get_prop_ascii x5441 "filter") "apply"
                   [|x5441;((let x5434 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5434 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5436 : Ojs.t) ->
                                          fun (x5437 : Ojs.t) ->
                                            fun (x5438 : Ojs.t) ->
                                              any_to_js
                                                (x5432
                                                   ~value:(Ojs.float_of_js
                                                             x5436)
                                                   ~index:(Ojs.float_of_js
                                                             x5437)
                                                   ~array:(t_of_js x5438))))|]);
                             (match x5433 with
                              | Some x5435 ->
                                  ignore
                                    (Ojs.call x5434 "push"
                                       [|(any_to_js x5435)|])
                              | None -> ());
                             x5434))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x5449 : 'tags this) ->
        fun ~predicate:(x5442 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x5443 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x5451 = this_to_js Obj.magic x5449 in
                 Ojs.call (Ojs.get_prop_ascii x5451 "find") "apply"
                   [|x5451;((let x5444 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5444 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5446 : Ojs.t) ->
                                          fun (x5447 : Ojs.t) ->
                                            fun (x5448 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x5442
                                                   ~value:(Ojs.float_of_js
                                                             x5446)
                                                   ~index:(Ojs.float_of_js
                                                             x5447)
                                                   ~obj:(t_of_js x5448))))|]);
                             (match x5443 with
                              | Some x5445 ->
                                  ignore
                                    (Ojs.call x5444 "push"
                                       [|(any_to_js x5445)|])
                              | None -> ());
                             x5444))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x5460 : 'tags this) ->
        fun ~predicate:(x5453 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x5454 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x5462 = this_to_js Obj.magic x5460 in
                 Ojs.call (Ojs.get_prop_ascii x5462 "findIndex") "apply"
                   [|x5462;((let x5455 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5455 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5457 : Ojs.t) ->
                                          fun (x5458 : Ojs.t) ->
                                            fun (x5459 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x5453
                                                   ~value:(Ojs.float_of_js
                                                             x5457)
                                                   ~index:(Ojs.float_of_js
                                                             x5458)
                                                   ~obj:(t_of_js x5459))))|]);
                             (match x5454 with
                              | Some x5456 ->
                                  ignore
                                    (Ojs.call x5455 "push"
                                       [|(any_to_js x5456)|])
                              | None -> ());
                             x5455))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x5470 : 'tags this) ->
        fun
          ~callbackfn:(x5463 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x5464 : any option) ->
            fun () ->
              ignore
                (let x5472 = this_to_js Obj.magic x5470 in
                 Ojs.call (Ojs.get_prop_ascii x5472 "forEach") "apply"
                   [|x5472;((let x5465 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5465 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5467 : Ojs.t) ->
                                          fun (x5468 : Ojs.t) ->
                                            fun (x5469 : Ojs.t) ->
                                              x5463
                                                ~value:(Ojs.float_of_js x5467)
                                                ~index:(Ojs.float_of_js x5468)
                                                ~array:(t_of_js x5469)))|]);
                             (match x5464 with
                              | Some x5466 ->
                                  ignore
                                    (Ojs.call x5465 "push"
                                       [|(any_to_js x5466)|])
                              | None -> ());
                             x5465))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x5477 : 'tags this) ->
        fun ~searchElement:(x5473 : float) ->
          fun ?fromIndex:(x5474 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x5479 = this_to_js Obj.magic x5477 in
                 Ojs.call (Ojs.get_prop_ascii x5479 "indexOf") "apply"
                   [|x5479;((let x5475 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5475 "push"
                                  [|(Ojs.float_to_js x5473)|]);
                             (match x5474 with
                              | Some x5476 ->
                                  ignore
                                    (Ojs.call x5475 "push"
                                       [|(Ojs.float_to_js x5476)|])
                              | None -> ());
                             x5475))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x5483 : 'tags this) ->
        fun ?separator:(x5480 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x5485 = this_to_js Obj.magic x5483 in
               Ojs.call (Ojs.get_prop_ascii x5485 "join") "apply"
                 [|x5485;((let x5481 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x5480 with
                            | Some x5482 ->
                                ignore
                                  (Ojs.call x5481 "push"
                                     [|(Ojs.string_to_js x5482)|])
                            | None -> ());
                           x5481))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x5490 : 'tags this) ->
        fun ~searchElement:(x5486 : float) ->
          fun ?fromIndex:(x5487 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x5492 = this_to_js Obj.magic x5490 in
                 Ojs.call (Ojs.get_prop_ascii x5492 "lastIndexOf") "apply"
                   [|x5492;((let x5488 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5488 "push"
                                  [|(Ojs.float_to_js x5486)|]);
                             (match x5487 with
                              | Some x5489 ->
                                  ignore
                                    (Ojs.call x5488 "push"
                                       [|(Ojs.float_to_js x5489)|])
                              | None -> ());
                             x5488))|])
    let (get_length : 'tags this -> float) =
      fun (x5493 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5493) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x5502 : 'tags this) ->
        fun
          ~callbackfn:(x5495 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x5496 : any option) ->
            fun () ->
              t_of_js
                (let x5504 = this_to_js Obj.magic x5502 in
                 Ojs.call (Ojs.get_prop_ascii x5504 "map") "apply"
                   [|x5504;((let x5497 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5497 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5499 : Ojs.t) ->
                                          fun (x5500 : Ojs.t) ->
                                            fun (x5501 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x5495
                                                   ~value:(Ojs.float_of_js
                                                             x5499)
                                                   ~index:(Ojs.float_of_js
                                                             x5500)
                                                   ~array:(t_of_js x5501))))|]);
                             (match x5496 with
                              | Some x5498 ->
                                  ignore
                                    (Ojs.call x5497 "push"
                                       [|(any_to_js x5498)|])
                              | None -> ());
                             x5497))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x5510 : 'tags this) ->
        fun
          ~callbackfn:(x5505 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x5510) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x5506 : Ojs.t) ->
                       fun (x5507 : Ojs.t) ->
                         fun (x5508 : Ojs.t) ->
                           fun (x5509 : Ojs.t) ->
                             Ojs.float_to_js
                               (x5505 ~previousValue:(Ojs.float_of_js x5506)
                                  ~currentValue:(Ojs.float_of_js x5507)
                                  ~currentIndex:(Ojs.float_of_js x5508)
                                  ~array:(t_of_js x5509))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x5518 : 'tags this) ->
        fun
          ~callbackfn:(x5512 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x5517 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x5518) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x5513 : Ojs.t) ->
                         fun (x5514 : Ojs.t) ->
                           fun (x5515 : Ojs.t) ->
                             fun (x5516 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x5512
                                    ~previousValue:(Ojs.float_of_js x5513)
                                    ~currentValue:(Ojs.float_of_js x5514)
                                    ~currentIndex:(Ojs.float_of_js x5515)
                                    ~array:(t_of_js x5516))));(Ojs.float_to_js
                                                                 x5517)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x5526 : 'tags this) ->
        fun
          ~callbackfn:(x5520 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x5525 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x5526) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x5521 : Ojs.t) ->
                         fun (x5522 : Ojs.t) ->
                           fun (x5523 : Ojs.t) ->
                             fun (x5524 : Ojs.t) ->
                               Obj.magic
                                 (x5520 ~previousValue:(Obj.magic x5521)
                                    ~currentValue:(Ojs.float_of_js x5522)
                                    ~currentIndex:(Ojs.float_of_js x5523)
                                    ~array:(t_of_js x5524))));(Obj.magic
                                                                 x5525)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x5533 : 'tags this) ->
        fun
          ~callbackfn:(x5528 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x5533) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x5529 : Ojs.t) ->
                       fun (x5530 : Ojs.t) ->
                         fun (x5531 : Ojs.t) ->
                           fun (x5532 : Ojs.t) ->
                             Ojs.float_to_js
                               (x5528 ~previousValue:(Ojs.float_of_js x5529)
                                  ~currentValue:(Ojs.float_of_js x5530)
                                  ~currentIndex:(Ojs.float_of_js x5531)
                                  ~array:(t_of_js x5532))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x5541 : 'tags this) ->
        fun
          ~callbackfn:(x5535 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x5540 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x5541) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x5536 : Ojs.t) ->
                         fun (x5537 : Ojs.t) ->
                           fun (x5538 : Ojs.t) ->
                             fun (x5539 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x5535
                                    ~previousValue:(Ojs.float_of_js x5536)
                                    ~currentValue:(Ojs.float_of_js x5537)
                                    ~currentIndex:(Ojs.float_of_js x5538)
                                    ~array:(t_of_js x5539))));(Ojs.float_to_js
                                                                 x5540)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x5549 : 'tags this) ->
        fun
          ~callbackfn:(x5543 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x5548 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x5549) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x5544 : Ojs.t) ->
                         fun (x5545 : Ojs.t) ->
                           fun (x5546 : Ojs.t) ->
                             fun (x5547 : Ojs.t) ->
                               Obj.magic
                                 (x5543 ~previousValue:(Obj.magic x5544)
                                    ~currentValue:(Ojs.float_of_js x5545)
                                    ~currentIndex:(Ojs.float_of_js x5546)
                                    ~array:(t_of_js x5547))));(Obj.magic
                                                                 x5548)|])
    let (reverse : 'tags this -> t) =
      fun (x5551 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x5551) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x5558 : 'tags this) ->
        fun ~array:(x5553 : float ArrayLike.t) ->
          fun ?offset:(x5554 : float option) ->
            fun () ->
              ignore
                (let x5560 = this_to_js Obj.magic x5558 in
                 Ojs.call (Ojs.get_prop_ascii x5560 "set") "apply"
                   [|x5560;((let x5555 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5555 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x5553)|]);
                             (match x5554 with
                              | Some x5556 ->
                                  ignore
                                    (Ojs.call x5555 "push"
                                       [|(Ojs.float_to_js x5556)|])
                              | None -> ());
                             x5555))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x5566 : 'tags this) ->
        fun ?start:(x5561 : float option) ->
          fun ?end_:(x5562 : float option) ->
            fun () ->
              t_of_js
                (let x5568 = this_to_js Obj.magic x5566 in
                 Ojs.call (Ojs.get_prop_ascii x5568 "slice") "apply"
                   [|x5568;((let x5563 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x5561 with
                              | Some x5565 ->
                                  ignore
                                    (Ojs.call x5563 "push"
                                       [|(Ojs.float_to_js x5565)|])
                              | None -> ());
                             (match x5562 with
                              | Some x5564 ->
                                  ignore
                                    (Ojs.call x5563 "push"
                                       [|(Ojs.float_to_js x5564)|])
                              | None -> ());
                             x5563))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x5576 : 'tags this) ->
        fun
          ~predicate:(x5569 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x5570 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x5578 = this_to_js Obj.magic x5576 in
                 Ojs.call (Ojs.get_prop_ascii x5578 "some") "apply"
                   [|x5578;((let x5571 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5571 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5573 : Ojs.t) ->
                                          fun (x5574 : Ojs.t) ->
                                            fun (x5575 : Ojs.t) ->
                                              unknown_to_js
                                                (x5569
                                                   ~value:(Ojs.float_of_js
                                                             x5573)
                                                   ~index:(Ojs.float_of_js
                                                             x5574)
                                                   ~array:(t_of_js x5575))))|]);
                             (match x5570 with
                              | Some x5572 ->
                                  ignore
                                    (Ojs.call x5571 "push"
                                       [|(any_to_js x5572)|])
                              | None -> ());
                             x5571))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x5584 : 'tags this) ->
        fun ?compareFn:(x5579 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x5586 = this_to_js Obj.magic x5584 in
               Ojs.call (Ojs.get_prop_ascii x5586 "sort") "apply"
                 [|x5586;((let x5580 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x5579 with
                            | Some x5581 ->
                                ignore
                                  (Ojs.call x5580 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x5582 : Ojs.t) ->
                                             fun (x5583 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x5581
                                                    ~a:(Ojs.float_of_js x5582)
                                                    ~b:(Ojs.float_of_js x5583))))|])
                            | None -> ());
                           x5580))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x5593 : 'tags this) ->
        fun ?begin_:(x5588 : float option) ->
          fun ?end_:(x5589 : float option) ->
            fun () ->
              t_of_js
                (let x5595 = this_to_js Obj.magic x5593 in
                 Ojs.call (Ojs.get_prop_ascii x5595 "subarray") "apply"
                   [|x5595;((let x5590 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x5588 with
                              | Some x5592 ->
                                  ignore
                                    (Ojs.call x5590 "push"
                                       [|(Ojs.float_to_js x5592)|])
                              | None -> ());
                             (match x5589 with
                              | Some x5591 ->
                                  ignore
                                    (Ojs.call x5590 "push"
                                       [|(Ojs.float_to_js x5591)|])
                              | None -> ());
                             x5590))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x5596 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x5596) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x5598 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x5598) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x5600 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x5600) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x5602 : 'tags this) ->
        fun (x5604 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x5602)
               (Ojs.float_to_js x5604))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x5605 : 'tags this) ->
        fun (x5607 : float) ->
          fun (x5608 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x5605) (Ojs.float_to_js x5607)
              (Ojs.float_to_js x5608)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float32Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x5609 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float32Array")
             [|(Iterable.t_to_js Ojs.float_to_js x5609)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x5611 : float Iterable.t) ->
        fun ?mapfn:(x5612 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x5613 : any option) ->
            fun () ->
              t_of_js
                (let x5620 = Ojs.get_prop_ascii Ojs.global "Float32Array" in
                 Ojs.call (Ojs.get_prop_ascii x5620 "from") "apply"
                   [|x5620;((let x5614 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5614 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x5611)|]);
                             (match x5612 with
                              | Some x5616 ->
                                  ignore
                                    (Ojs.call x5614 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x5617 : Ojs.t) ->
                                               fun (x5618 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x5616
                                                      ~v:(Ojs.float_of_js
                                                            x5617)
                                                      ~k:(Ojs.float_of_js
                                                            x5618))))|])
                              | None -> ());
                             (match x5613 with
                              | Some x5615 ->
                                  ignore
                                    (Ojs.call x5614 "push"
                                       [|(any_to_js x5615)|])
                              | None -> ());
                             x5614))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Float32Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x5621 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float32Array")
             [|(Ojs.float_to_js x5621)|])
    let (create''' : (ArrayBufferLike.t, float ArrayLike.t) union2 -> t) =
      fun (x5622 : (ArrayBufferLike.t, float ArrayLike.t) union2) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float32Array")
             [|(union2_to_js ArrayBufferLike.t_to_js
                  (fun (x5624 : float ArrayLike.t) ->
                     ArrayLike.t_to_js Ojs.float_to_js x5624) x5622)|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x5626 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x5627 : float option) ->
          fun ?length:(x5628 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Float32Array")
                   (let x5629 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x5629 "push"
                         [|(ArrayBufferLike.t_to_js x5626)|]);
                    (match x5627 with
                     | Some x5631 ->
                         ignore
                           (Ojs.call x5629 "push" [|(Ojs.float_to_js x5631)|])
                     | None -> ());
                    (match x5628 with
                     | Some x5630 ->
                         ignore
                           (Ojs.call x5629 "push" [|(Ojs.float_to_js x5630)|])
                     | None -> ());
                    x5629))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Float32Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x5632 : float list) ->
        t_of_js
          (let x5635 = Ojs.get_prop_ascii Ojs.global "Float32Array" in
           Ojs.call (Ojs.get_prop_ascii x5635 "of") "apply"
             [|x5635;((let x5633 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x5634 : float) ->
                            ignore
                              (Ojs.call x5633 "push"
                                 [|(Ojs.float_to_js x5634)|])) x5632;
                       x5633))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x5636 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Float32Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x5636)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x5638 : 'T ArrayLike.t) ->
        fun ~mapfn:(x5639 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x5640 : any option) ->
            fun () ->
              t_of_js
                (let x5646 = Ojs.get_prop_ascii Ojs.global "Float32Array" in
                 Ojs.call (Ojs.get_prop_ascii x5646 "from") "apply"
                   [|x5646;((let x5641 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5641 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x5638)|]);
                             ignore
                               (Ojs.call x5641 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x5643 : Ojs.t) ->
                                          fun (x5644 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x5639 ~v:(Obj.magic x5643)
                                                 ~k:(Ojs.float_of_js x5644))))|]);
                             (match x5640 with
                              | Some x5642 ->
                                  ignore
                                    (Ojs.call x5641 "push"
                                       [|(any_to_js x5642)|])
                              | None -> ());
                             x5641))|])
    let cast_from = Obj.magic
  end
module FinalizationRegistry =
  struct
    type 'T t = [ `FinalizationRegistry of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x5649 : Ojs.t) -> t_of_js __T_of_js x5649
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x5647 : __T t) -> t_to_js __T_to_js x5647
    type t_0 = any t
    let rec t_0_of_js : Ojs.t -> t_0 =
      fun (x5653 : Ojs.t) -> t_of_js any_of_js x5653
    and t_0_to_js : t_0 -> Ojs.t =
      fun (x5651 : any t) -> t_to_js any_to_js x5651
    type 'T tags = [ `FinalizationRegistry of 'T ]
    type 'T tags_1 = 'T tags
    type tags_0 = any tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `FinalizationRegistry of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x5657 : Ojs.t) -> intf_of_js __tags_of_js x5657
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x5655 : __tags intf) -> intf_to_js __tags_to_js x5655
    let (register :
      ('tags, 'T) this ->
        target:untyped_object ->
          heldValue:any -> ?unregisterToken:untyped_object -> unit -> unit)
      =
      fun (x5664 : ('tags, 'T) this) ->
        fun ~target:(x5659 : untyped_object) ->
          fun ~heldValue:(x5660 : any) ->
            fun ?unregisterToken:(x5661 : untyped_object option) ->
              fun () ->
                ignore
                  (let x5667 = this_to_js Obj.magic Obj.magic x5664 in
                   Ojs.call (Ojs.get_prop_ascii x5667 "register") "apply"
                     [|x5667;((let x5662 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5662 "push"
                                    [|(untyped_object_to_js x5659)|]);
                               ignore
                                 (Ojs.call x5662 "push" [|(any_to_js x5660)|]);
                               (match x5661 with
                                | Some x5663 ->
                                    ignore
                                      (Ojs.call x5662 "push"
                                         [|(untyped_object_to_js x5663)|])
                                | None -> ());
                               x5662))|])
    let (unregister :
      ('tags, 'T) this -> unregisterToken:untyped_object -> unit) =
      fun (x5669 : ('tags, 'T) this) ->
        fun ~unregisterToken:(x5668 : untyped_object) ->
          ignore
            (Ojs.call (this_to_js Obj.magic Obj.magic x5669) "unregister"
               [|(untyped_object_to_js x5668)|])
    let (register' :
      ('tags, 'T) this ->
        target:untyped_object ->
          heldValue:'T -> ?unregisterToken:untyped_object -> unit -> unit)
      =
      fun (x5677 : ('tags, 'T) this) ->
        fun ~target:(x5672 : untyped_object) ->
          fun ~heldValue:(x5673 : 'T) ->
            fun ?unregisterToken:(x5674 : untyped_object option) ->
              fun () ->
                ignore
                  (let x5680 = this_to_js Obj.magic Obj.magic x5677 in
                   Ojs.call (Ojs.get_prop_ascii x5680 "register") "apply"
                     [|x5680;((let x5675 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5675 "push"
                                    [|(untyped_object_to_js x5672)|]);
                               ignore
                                 (Ojs.call x5675 "push" [|(Obj.magic x5673)|]);
                               (match x5674 with
                                | Some x5676 ->
                                    ignore
                                      (Ojs.call x5675 "push"
                                         [|(untyped_object_to_js x5676)|])
                                | None -> ());
                               x5675))|])
    let (unregister' :
      ('tags, 'T) this -> unregisterToken:untyped_object -> unit) =
      fun (x5682 : ('tags, 'T) this) ->
        fun ~unregisterToken:(x5681 : untyped_object) ->
          ignore
            (Ojs.call (this_to_js Obj.magic Obj.magic x5682) "unregister"
               [|(untyped_object_to_js x5681)|])
    let (prototype : unit -> t_0) =
      fun () ->
        t_0_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             "prototype")
    let (create : (any -> unit) -> t_0) =
      fun (x5685 : any -> unit) ->
        t_0_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             [|(Ojs.fun_to_js 1
                  (fun (x5686 : Ojs.t) -> x5685 (any_of_js x5686)))|])
    let (prototype' : unit -> any t) =
      fun () ->
        t_of_js any_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             "prototype")
    let (create' : ('T -> unit) -> 'T t) =
      fun (x5688 : 'T -> unit) ->
        t_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             [|(Ojs.fun_to_js 1
                  (fun (x5689 : Ojs.t) -> x5688 (Obj.magic x5689)))|])
    let cast_from = Obj.magic
  end
module Extract =
  struct
    type ('T, 'U) t = any
    let rec t_of_js :
      'T 'U . (Ojs.t -> 'T) -> (Ojs.t -> 'U) -> Ojs.t -> ('T, 'U) t = fun
      (type __T) -> fun (type __U) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__U_of_js : Ojs.t -> __U) ->
          fun (x5692 : Ojs.t) -> any_of_js x5692
    and t_to_js :
      'T 'U . ('T -> Ojs.t) -> ('U -> Ojs.t) -> ('T, 'U) t -> Ojs.t = fun
      (type __T) -> fun (type __U) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__U_to_js : __U -> Ojs.t) ->
          fun (x5691 : any) -> any_to_js x5691
    type ('T, 'U) t_2 = ('T, 'U) t
    let rec t_2_of_js :
      'T 'U . (Ojs.t -> 'T) -> (Ojs.t -> 'U) -> Ojs.t -> ('T, 'U) t_2 = fun
      (type __T) -> fun (type __U) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__U_of_js : Ojs.t -> __U) ->
          fun (x5696 : Ojs.t) -> t_of_js __T_of_js __U_of_js x5696
    and t_2_to_js :
      'T 'U . ('T -> Ojs.t) -> ('U -> Ojs.t) -> ('T, 'U) t_2 -> Ojs.t = fun
      (type __T) -> fun (type __U) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__U_to_js : __U -> Ojs.t) ->
          fun (x5693 : (__T, __U) t) -> t_to_js __T_to_js __U_to_js x5693
  end
module EvalError =
  struct
    type t = [ `Error  | `EvalError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5700 : Ojs.t) -> t_of_js x5700
    and t_0_to_js : t_0 -> Ojs.t = fun (x5699 : t) -> t_to_js x5699
    type tags = [ `Error  | `EvalError ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `EvalError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5703 : Ojs.t) -> intf_of_js __tags_of_js x5703
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5701 : __tags intf) -> intf_to_js __tags_to_js x5701
    let (create : ?message:string -> unit -> t) =
      fun ?message:(x5705 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "EvalError")
               (let x5706 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x5705 with
                 | Some x5707 ->
                     ignore
                       (Ojs.call x5706 "push" [|(Ojs.string_to_js x5707)|])
                 | None -> ());
                x5706))
    let (invoke : ?message:string -> unit -> t) =
      fun ?message:(x5708 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "EvalError") "apply"
               [|Ojs.null;((let x5709 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x5708 with
                             | Some x5710 ->
                                 ignore
                                   (Ojs.call x5709 "push"
                                      [|(Ojs.string_to_js x5710)|])
                             | None -> ());
                            x5709))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "EvalError")
             "prototype")
    let cast_from = Obj.magic
  end
module DataView =
  struct
    type t = [ `DataView ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5712 : Ojs.t) -> t_of_js x5712
    and t_0_to_js : t_0 -> Ojs.t = fun (x5711 : t) -> t_to_js x5711
    type tags = [ `DataView ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `DataView ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5715 : Ojs.t) -> intf_of_js __tags_of_js x5715
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5713 : __tags intf) -> intf_to_js __tags_to_js x5713
    let (getBigInt64 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> bigint)
      =
      fun (x5721 : 'tags this) ->
        fun ~byteOffset:(x5717 : float) ->
          fun ?littleEndian:(x5718 : bool option) ->
            fun () ->
              bigint_of_js
                (let x5723 = this_to_js Obj.magic x5721 in
                 Ojs.call (Ojs.get_prop_ascii x5723 "getBigInt64") "apply"
                   [|x5723;((let x5719 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5719 "push"
                                  [|(Ojs.float_to_js x5717)|]);
                             (match x5718 with
                              | Some x5720 ->
                                  ignore
                                    (Ojs.call x5719 "push"
                                       [|(Ojs.bool_to_js x5720)|])
                              | None -> ());
                             x5719))|])
    let (getBigUint64 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> bigint)
      =
      fun (x5728 : 'tags this) ->
        fun ~byteOffset:(x5724 : float) ->
          fun ?littleEndian:(x5725 : bool option) ->
            fun () ->
              bigint_of_js
                (let x5730 = this_to_js Obj.magic x5728 in
                 Ojs.call (Ojs.get_prop_ascii x5730 "getBigUint64") "apply"
                   [|x5730;((let x5726 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5726 "push"
                                  [|(Ojs.float_to_js x5724)|]);
                             (match x5725 with
                              | Some x5727 ->
                                  ignore
                                    (Ojs.call x5726 "push"
                                       [|(Ojs.bool_to_js x5727)|])
                              | None -> ());
                             x5726))|])
    let (setBigInt64 :
      'tags this ->
        byteOffset:float ->
          value:bigint -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x5736 : 'tags this) ->
        fun ~byteOffset:(x5731 : float) ->
          fun ~value:(x5732 : bigint) ->
            fun ?littleEndian:(x5733 : bool option) ->
              fun () ->
                ignore
                  (let x5738 = this_to_js Obj.magic x5736 in
                   Ojs.call (Ojs.get_prop_ascii x5738 "setBigInt64") "apply"
                     [|x5738;((let x5734 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5734 "push"
                                    [|(Ojs.float_to_js x5731)|]);
                               ignore
                                 (Ojs.call x5734 "push"
                                    [|(bigint_to_js x5732)|]);
                               (match x5733 with
                                | Some x5735 ->
                                    ignore
                                      (Ojs.call x5734 "push"
                                         [|(Ojs.bool_to_js x5735)|])
                                | None -> ());
                               x5734))|])
    let (setBigUint64 :
      'tags this ->
        byteOffset:float ->
          value:bigint -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x5744 : 'tags this) ->
        fun ~byteOffset:(x5739 : float) ->
          fun ~value:(x5740 : bigint) ->
            fun ?littleEndian:(x5741 : bool option) ->
              fun () ->
                ignore
                  (let x5746 = this_to_js Obj.magic x5744 in
                   Ojs.call (Ojs.get_prop_ascii x5746 "setBigUint64") "apply"
                     [|x5746;((let x5742 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5742 "push"
                                    [|(Ojs.float_to_js x5739)|]);
                               ignore
                                 (Ojs.call x5742 "push"
                                    [|(bigint_to_js x5740)|]);
                               (match x5741 with
                                | Some x5743 ->
                                    ignore
                                      (Ojs.call x5742 "push"
                                         [|(Ojs.bool_to_js x5743)|])
                                | None -> ());
                               x5742))|])
    let (get_buffer : 'tags this -> ArrayBuffer.t) =
      fun (x5747 : 'tags this) ->
        ArrayBuffer.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5747) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x5749 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5749) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x5751 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5751) "byteOffset")
    let (getFloat32 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x5757 : 'tags this) ->
        fun ~byteOffset:(x5753 : float) ->
          fun ?littleEndian:(x5754 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x5759 = this_to_js Obj.magic x5757 in
                 Ojs.call (Ojs.get_prop_ascii x5759 "getFloat32") "apply"
                   [|x5759;((let x5755 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5755 "push"
                                  [|(Ojs.float_to_js x5753)|]);
                             (match x5754 with
                              | Some x5756 ->
                                  ignore
                                    (Ojs.call x5755 "push"
                                       [|(Ojs.bool_to_js x5756)|])
                              | None -> ());
                             x5755))|])
    let (getFloat64 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x5764 : 'tags this) ->
        fun ~byteOffset:(x5760 : float) ->
          fun ?littleEndian:(x5761 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x5766 = this_to_js Obj.magic x5764 in
                 Ojs.call (Ojs.get_prop_ascii x5766 "getFloat64") "apply"
                   [|x5766;((let x5762 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5762 "push"
                                  [|(Ojs.float_to_js x5760)|]);
                             (match x5761 with
                              | Some x5763 ->
                                  ignore
                                    (Ojs.call x5762 "push"
                                       [|(Ojs.bool_to_js x5763)|])
                              | None -> ());
                             x5762))|])
    let (getInt8 : 'tags this -> byteOffset:float -> float) =
      fun (x5768 : 'tags this) ->
        fun ~byteOffset:(x5767 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x5768) "getInt8"
               [|(Ojs.float_to_js x5767)|])
    let (getInt16 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x5774 : 'tags this) ->
        fun ~byteOffset:(x5770 : float) ->
          fun ?littleEndian:(x5771 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x5776 = this_to_js Obj.magic x5774 in
                 Ojs.call (Ojs.get_prop_ascii x5776 "getInt16") "apply"
                   [|x5776;((let x5772 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5772 "push"
                                  [|(Ojs.float_to_js x5770)|]);
                             (match x5771 with
                              | Some x5773 ->
                                  ignore
                                    (Ojs.call x5772 "push"
                                       [|(Ojs.bool_to_js x5773)|])
                              | None -> ());
                             x5772))|])
    let (getInt32 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x5781 : 'tags this) ->
        fun ~byteOffset:(x5777 : float) ->
          fun ?littleEndian:(x5778 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x5783 = this_to_js Obj.magic x5781 in
                 Ojs.call (Ojs.get_prop_ascii x5783 "getInt32") "apply"
                   [|x5783;((let x5779 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5779 "push"
                                  [|(Ojs.float_to_js x5777)|]);
                             (match x5778 with
                              | Some x5780 ->
                                  ignore
                                    (Ojs.call x5779 "push"
                                       [|(Ojs.bool_to_js x5780)|])
                              | None -> ());
                             x5779))|])
    let (getUint8 : 'tags this -> byteOffset:float -> float) =
      fun (x5785 : 'tags this) ->
        fun ~byteOffset:(x5784 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x5785) "getUint8"
               [|(Ojs.float_to_js x5784)|])
    let (getUint16 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x5791 : 'tags this) ->
        fun ~byteOffset:(x5787 : float) ->
          fun ?littleEndian:(x5788 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x5793 = this_to_js Obj.magic x5791 in
                 Ojs.call (Ojs.get_prop_ascii x5793 "getUint16") "apply"
                   [|x5793;((let x5789 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5789 "push"
                                  [|(Ojs.float_to_js x5787)|]);
                             (match x5788 with
                              | Some x5790 ->
                                  ignore
                                    (Ojs.call x5789 "push"
                                       [|(Ojs.bool_to_js x5790)|])
                              | None -> ());
                             x5789))|])
    let (getUint32 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x5798 : 'tags this) ->
        fun ~byteOffset:(x5794 : float) ->
          fun ?littleEndian:(x5795 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x5800 = this_to_js Obj.magic x5798 in
                 Ojs.call (Ojs.get_prop_ascii x5800 "getUint32") "apply"
                   [|x5800;((let x5796 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5796 "push"
                                  [|(Ojs.float_to_js x5794)|]);
                             (match x5795 with
                              | Some x5797 ->
                                  ignore
                                    (Ojs.call x5796 "push"
                                       [|(Ojs.bool_to_js x5797)|])
                              | None -> ());
                             x5796))|])
    let (setFloat32 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x5806 : 'tags this) ->
        fun ~byteOffset:(x5801 : float) ->
          fun ~value:(x5802 : float) ->
            fun ?littleEndian:(x5803 : bool option) ->
              fun () ->
                ignore
                  (let x5808 = this_to_js Obj.magic x5806 in
                   Ojs.call (Ojs.get_prop_ascii x5808 "setFloat32") "apply"
                     [|x5808;((let x5804 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5804 "push"
                                    [|(Ojs.float_to_js x5801)|]);
                               ignore
                                 (Ojs.call x5804 "push"
                                    [|(Ojs.float_to_js x5802)|]);
                               (match x5803 with
                                | Some x5805 ->
                                    ignore
                                      (Ojs.call x5804 "push"
                                         [|(Ojs.bool_to_js x5805)|])
                                | None -> ());
                               x5804))|])
    let (setFloat64 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x5814 : 'tags this) ->
        fun ~byteOffset:(x5809 : float) ->
          fun ~value:(x5810 : float) ->
            fun ?littleEndian:(x5811 : bool option) ->
              fun () ->
                ignore
                  (let x5816 = this_to_js Obj.magic x5814 in
                   Ojs.call (Ojs.get_prop_ascii x5816 "setFloat64") "apply"
                     [|x5816;((let x5812 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5812 "push"
                                    [|(Ojs.float_to_js x5809)|]);
                               ignore
                                 (Ojs.call x5812 "push"
                                    [|(Ojs.float_to_js x5810)|]);
                               (match x5811 with
                                | Some x5813 ->
                                    ignore
                                      (Ojs.call x5812 "push"
                                         [|(Ojs.bool_to_js x5813)|])
                                | None -> ());
                               x5812))|])
    let (setInt8 : 'tags this -> byteOffset:float -> value:float -> unit) =
      fun (x5819 : 'tags this) ->
        fun ~byteOffset:(x5817 : float) ->
          fun ~value:(x5818 : float) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x5819) "setInt8"
                 [|(Ojs.float_to_js x5817);(Ojs.float_to_js x5818)|])
    let (setInt16 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x5826 : 'tags this) ->
        fun ~byteOffset:(x5821 : float) ->
          fun ~value:(x5822 : float) ->
            fun ?littleEndian:(x5823 : bool option) ->
              fun () ->
                ignore
                  (let x5828 = this_to_js Obj.magic x5826 in
                   Ojs.call (Ojs.get_prop_ascii x5828 "setInt16") "apply"
                     [|x5828;((let x5824 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5824 "push"
                                    [|(Ojs.float_to_js x5821)|]);
                               ignore
                                 (Ojs.call x5824 "push"
                                    [|(Ojs.float_to_js x5822)|]);
                               (match x5823 with
                                | Some x5825 ->
                                    ignore
                                      (Ojs.call x5824 "push"
                                         [|(Ojs.bool_to_js x5825)|])
                                | None -> ());
                               x5824))|])
    let (setInt32 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x5834 : 'tags this) ->
        fun ~byteOffset:(x5829 : float) ->
          fun ~value:(x5830 : float) ->
            fun ?littleEndian:(x5831 : bool option) ->
              fun () ->
                ignore
                  (let x5836 = this_to_js Obj.magic x5834 in
                   Ojs.call (Ojs.get_prop_ascii x5836 "setInt32") "apply"
                     [|x5836;((let x5832 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5832 "push"
                                    [|(Ojs.float_to_js x5829)|]);
                               ignore
                                 (Ojs.call x5832 "push"
                                    [|(Ojs.float_to_js x5830)|]);
                               (match x5831 with
                                | Some x5833 ->
                                    ignore
                                      (Ojs.call x5832 "push"
                                         [|(Ojs.bool_to_js x5833)|])
                                | None -> ());
                               x5832))|])
    let (setUint8 : 'tags this -> byteOffset:float -> value:float -> unit) =
      fun (x5839 : 'tags this) ->
        fun ~byteOffset:(x5837 : float) ->
          fun ~value:(x5838 : float) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x5839) "setUint8"
                 [|(Ojs.float_to_js x5837);(Ojs.float_to_js x5838)|])
    let (setUint16 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x5846 : 'tags this) ->
        fun ~byteOffset:(x5841 : float) ->
          fun ~value:(x5842 : float) ->
            fun ?littleEndian:(x5843 : bool option) ->
              fun () ->
                ignore
                  (let x5848 = this_to_js Obj.magic x5846 in
                   Ojs.call (Ojs.get_prop_ascii x5848 "setUint16") "apply"
                     [|x5848;((let x5844 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5844 "push"
                                    [|(Ojs.float_to_js x5841)|]);
                               ignore
                                 (Ojs.call x5844 "push"
                                    [|(Ojs.float_to_js x5842)|]);
                               (match x5843 with
                                | Some x5845 ->
                                    ignore
                                      (Ojs.call x5844 "push"
                                         [|(Ojs.bool_to_js x5845)|])
                                | None -> ());
                               x5844))|])
    let (setUint32 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x5854 : 'tags this) ->
        fun ~byteOffset:(x5849 : float) ->
          fun ~value:(x5850 : float) ->
            fun ?littleEndian:(x5851 : bool option) ->
              fun () ->
                ignore
                  (let x5856 = this_to_js Obj.magic x5854 in
                   Ojs.call (Ojs.get_prop_ascii x5856 "setUint32") "apply"
                     [|x5856;((let x5852 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5852 "push"
                                    [|(Ojs.float_to_js x5849)|]);
                               ignore
                                 (Ojs.call x5852 "push"
                                    [|(Ojs.float_to_js x5850)|]);
                               (match x5851 with
                                | Some x5853 ->
                                    ignore
                                      (Ojs.call x5852 "push"
                                         [|(Ojs.bool_to_js x5853)|])
                                | None -> ());
                               x5852))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "DataView")
             "prototype")
    let (create :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?byteLength:float -> unit -> t)
      =
      fun ~buffer:(x5857 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x5858 : float option) ->
          fun ?byteLength:(x5859 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "DataView")
                   (let x5860 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x5860 "push"
                         [|(ArrayBufferLike.t_to_js x5857)|]);
                    (match x5858 with
                     | Some x5862 ->
                         ignore
                           (Ojs.call x5860 "push" [|(Ojs.float_to_js x5862)|])
                     | None -> ());
                    (match x5859 with
                     | Some x5861 ->
                         ignore
                           (Ojs.call x5860 "push" [|(Ojs.float_to_js x5861)|])
                     | None -> ());
                    x5860))
    let cast_from = Obj.magic
  end
module ConstructorParameters =
  struct
    module AnonymousInterface8 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x5864 : Ojs.t) -> x5864
        and t_to_js : t -> Ojs.t = fun (x5863 : Ojs.t) -> x5863
        let (create : t -> args:any list -> any) =
          fun (x5868 : t) ->
            fun ~args:(x5865 : any list) ->
              any_of_js
                (Ojs.new_obj_arr (t_to_js x5868)
                   (let x5866 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    List.iter
                      (fun (x5867 : any) ->
                         ignore (Ojs.call x5866 "push" [|(any_to_js x5867)|]))
                      x5865;
                    x5866))
      end
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x5870 : Ojs.t) -> any_of_js x5870
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x5869 : any) -> any_to_js x5869
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x5873 : Ojs.t) -> t_of_js __T_of_js x5873
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x5871 : __T t) -> t_to_js __T_to_js x5871
  end
module ClassDecorator =
  struct
    type t = [ `ClassDecorator ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5876 : Ojs.t) -> t_of_js x5876
    and t_0_to_js : t_0 -> Ojs.t = fun (x5875 : t) -> t_to_js x5875
    type tags = [ `ClassDecorator ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ClassDecorator ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5879 : Ojs.t) -> intf_of_js __tags_of_js x5879
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5877 : __tags intf) -> intf_to_js __tags_to_js x5877
    let (apply :
      'tags this -> target:'TFunction -> ('TFunction, unit) union2) =
      fun (x5882 : 'tags this) ->
        fun ~target:(x5881 : 'TFunction) ->
          union2_of_js Obj.magic Ojs.unit_of_js
            (Ojs.apply (this_to_js Obj.magic x5882) [|(Obj.magic x5881)|])
    let cast_from = Obj.magic
  end
module Capitalize =
  struct
    type 'S t = Ojs.t
    let rec t_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t = fun (type __S) ->
      fun (__S_of_js : Ojs.t -> __S) -> fun (x5887 : Ojs.t) -> x5887
    and t_to_js : 'S . ('S -> Ojs.t) -> 'S t -> Ojs.t = fun (type __S) ->
      fun (__S_to_js : __S -> Ojs.t) -> fun (x5886 : Ojs.t) -> x5886
    type 'S t_1 = 'S t
    let rec t_1_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t_1 = fun (type
      __S) ->
      fun (__S_of_js : Ojs.t -> __S) ->
        fun (x5890 : Ojs.t) -> t_of_js __S_of_js x5890
    and t_1_to_js : 'S . ('S -> Ojs.t) -> 'S t_1 -> Ojs.t = fun (type __S) ->
      fun (__S_to_js : __S -> Ojs.t) ->
        fun (x5888 : __S t) -> t_to_js __S_to_js x5888
  end
module ThisParameterType =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x5893 : Ojs.t) -> any_of_js x5893
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x5892 : any) -> any_to_js x5892
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x5896 : Ojs.t) -> t_of_js __T_of_js x5896
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x5894 : __T t) -> t_to_js __T_to_js x5894
  end
module OmitThisParameter =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x5899 : Ojs.t) -> any_of_js x5899
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x5898 : any) -> any_to_js x5898
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x5902 : Ojs.t) -> t_of_js __T_of_js x5902
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x5900 : __T t) -> t_to_js __T_to_js x5900
  end
module CallableFunction =
  struct
    type t = [ `CallableFunction  | `Function  | `Function ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5905 : Ojs.t) -> t_of_js x5905
    and t_0_to_js : t_0 -> Ojs.t = fun (x5904 : t) -> t_to_js x5904
    type tags = [ `CallableFunction  | `Function  | `Function ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `CallableFunction ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5908 : Ojs.t) -> intf_of_js __tags_of_js x5908
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5906 : __tags intf) -> intf_to_js __tags_to_js x5906
    let (apply_ : 'tags this -> this:('T -> 'R) -> thisArg:'T -> 'R) =
      fun (x5913 : 'tags this) ->
        fun ~this:(x5910 : 'T -> 'R) ->
          fun ~thisArg:(x5912 : 'T) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x5913) "apply"
                 [|(Ojs.fun_to_js 1
                      (fun (x5911 : Ojs.t) ->
                         Obj.magic (x5910 (Obj.magic x5911))));(Obj.magic
                                                                  x5912)|])
    let (apply_' :
      'tags this ->
        this:(this:'T -> args:any list -> 'R) -> thisArg:'T -> args:'A -> 'R)
      =
      fun (x5920 : 'tags this) ->
        fun ~this:(x5915 : this:'T -> args:any list -> 'R) ->
          fun ~thisArg:(x5918 : 'T) ->
            fun ~args:(x5919 : 'A) ->
              Obj.magic
                (Ojs.call (this_to_js Obj.magic x5920) "apply"
                   [|(Ojs.fun_to_js_args
                        (fun (x5916 : _) ->
                           Obj.magic
                             (x5915 ~this:(Obj.magic (Ojs.array_get x5916 0))
                                ~args:(Ojs.list_of_js_from any_of_js x5916 1))));(
                     Obj.magic x5918);(Obj.magic x5919)|])
    let (call :
      'tags this ->
        this:(this:'T -> args:any list -> 'R) ->
          thisArg:'T -> args:any list -> 'R)
      =
      fun (x5929 : 'tags this) ->
        fun ~this:(x5922 : this:'T -> args:any list -> 'R) ->
          fun ~thisArg:(x5923 : 'T) ->
            fun ~args:(x5924 : any list) ->
              Obj.magic
                (let x5931 = this_to_js Obj.magic x5929 in
                 Ojs.call (Ojs.get_prop_ascii x5931 "call") "apply"
                   [|x5931;((let x5925 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5925 "push"
                                  [|(Ojs.fun_to_js_args
                                       (fun (x5927 : _) ->
                                          Obj.magic
                                            (x5922
                                               ~this:(Obj.magic
                                                        (Ojs.array_get x5927
                                                           0))
                                               ~args:(Ojs.list_of_js_from
                                                        any_of_js x5927 1))))|]);
                             ignore
                               (Ojs.call x5925 "push" [|(Obj.magic x5923)|]);
                             List.iter
                               (fun (x5926 : any) ->
                                  ignore
                                    (Ojs.call x5925 "push"
                                       [|(any_to_js x5926)|])) x5924;
                             x5925))|])
    let (bind :
      'tags this ->
        this:'T -> thisArg:'T ThisParameterType.t -> 'T OmitThisParameter.t)
      =
      fun (x5935 : 'tags this) ->
        fun ~this:(x5932 : 'T) ->
          fun ~thisArg:(x5933 : 'T ThisParameterType.t) ->
            OmitThisParameter.t_of_js Obj.magic
              (Ojs.call (this_to_js Obj.magic x5935) "bind"
                 [|(Obj.magic x5932);(ThisParameterType.t_to_js Obj.magic
                                        x5933)|])
    let (bind' :
      'tags this ->
        this:(this:'T -> arg0:'A0 -> args:any list -> 'R) ->
          thisArg:'T -> arg0:'A0 -> any list -> 'R)
      =
      fun (x5943 : 'tags this) ->
        fun ~this:(x5938 : this:'T -> arg0:'A0 -> args:any list -> 'R) ->
          fun ~thisArg:(x5941 : 'T) ->
            fun ~arg0:(x5942 : 'A0) ->
              fun (x5945 : any list) ->
                Obj.magic
                  (Ojs.call
                     (Ojs.call (this_to_js Obj.magic x5943) "bind"
                        [|(Ojs.fun_to_js_args
                             (fun (x5939 : _) ->
                                Obj.magic
                                  (x5938
                                     ~this:(Obj.magic (Ojs.array_get x5939 0))
                                     ~arg0:(Obj.magic (Ojs.array_get x5939 1))
                                     ~args:(Ojs.list_of_js_from any_of_js
                                              x5939 2))));(Obj.magic x5941);(
                          Obj.magic x5942)|]) "apply"
                     [|Ojs.null;((let x5946 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  List.iter
                                    (fun (x5947 : any) ->
                                       ignore
                                         (Ojs.call x5946 "push"
                                            [|(any_to_js x5947)|])) x5945;
                                  x5946))|])
    let (bind'' :
      'tags this ->
        this:(this:'T -> arg0:'A0 -> arg1:'A1 -> args:any list -> 'R) ->
          thisArg:'T -> arg0:'A0 -> arg1:'A1 -> any list -> 'R)
      =
      fun (x5954 : 'tags this) ->
        fun
          ~this:(x5948 :
                  this:'T -> arg0:'A0 -> arg1:'A1 -> args:any list -> 'R)
          ->
          fun ~thisArg:(x5951 : 'T) ->
            fun ~arg0:(x5952 : 'A0) ->
              fun ~arg1:(x5953 : 'A1) ->
                fun (x5956 : any list) ->
                  Obj.magic
                    (Ojs.call
                       (Ojs.call (this_to_js Obj.magic x5954) "bind"
                          [|(Ojs.fun_to_js_args
                               (fun (x5949 : _) ->
                                  Obj.magic
                                    (x5948
                                       ~this:(Obj.magic
                                                (Ojs.array_get x5949 0))
                                       ~arg0:(Obj.magic
                                                (Ojs.array_get x5949 1))
                                       ~arg1:(Obj.magic
                                                (Ojs.array_get x5949 2))
                                       ~args:(Ojs.list_of_js_from any_of_js
                                                x5949 3))));(Obj.magic x5951);(
                            Obj.magic x5952);(Obj.magic x5953)|]) "apply"
                       [|Ojs.null;((let x5957 =
                                      Ojs.new_obj
                                        (Ojs.get_prop_ascii Ojs.global
                                           "Array") [||] in
                                    List.iter
                                      (fun (x5958 : any) ->
                                         ignore
                                           (Ojs.call x5957 "push"
                                              [|(any_to_js x5958)|])) x5956;
                                    x5957))|])
    let (bind''' :
      'tags this ->
        this:(this:'T ->
                arg0:'A0 -> arg1:'A1 -> arg2:'A2 -> args:any list -> 'R)
          -> thisArg:'T -> arg0:'A0 -> arg1:'A1 -> arg2:'A2 -> any list -> 'R)
      =
      fun (x5966 : 'tags this) ->
        fun
          ~this:(x5959 :
                  this:'T ->
                    arg0:'A0 -> arg1:'A1 -> arg2:'A2 -> args:any list -> 'R)
          ->
          fun ~thisArg:(x5962 : 'T) ->
            fun ~arg0:(x5963 : 'A0) ->
              fun ~arg1:(x5964 : 'A1) ->
                fun ~arg2:(x5965 : 'A2) ->
                  fun (x5968 : any list) ->
                    Obj.magic
                      (Ojs.call
                         (Ojs.call (this_to_js Obj.magic x5966) "bind"
                            [|(Ojs.fun_to_js_args
                                 (fun (x5960 : _) ->
                                    Obj.magic
                                      (x5959
                                         ~this:(Obj.magic
                                                  (Ojs.array_get x5960 0))
                                         ~arg0:(Obj.magic
                                                  (Ojs.array_get x5960 1))
                                         ~arg1:(Obj.magic
                                                  (Ojs.array_get x5960 2))
                                         ~arg2:(Obj.magic
                                                  (Ojs.array_get x5960 3))
                                         ~args:(Ojs.list_of_js_from any_of_js
                                                  x5960 4))));(Obj.magic
                                                                 x5962);(
                              Obj.magic x5963);(Obj.magic x5964);(Obj.magic
                                                                    x5965)|])
                         "apply"
                         [|Ojs.null;((let x5969 =
                                        Ojs.new_obj
                                          (Ojs.get_prop_ascii Ojs.global
                                             "Array") [||] in
                                      List.iter
                                        (fun (x5970 : any) ->
                                           ignore
                                             (Ojs.call x5969 "push"
                                                [|(any_to_js x5970)|])) x5968;
                                      x5969))|])
    let (bind'''' :
      'tags this ->
        this:(this:'T ->
                arg0:'A0 ->
                  arg1:'A1 -> arg2:'A2 -> arg3:'A3 -> args:any list -> 'R)
          ->
          thisArg:'T ->
            arg0:'A0 -> arg1:'A1 -> arg2:'A2 -> arg3:'A3 -> any list -> 'R)
      =
      fun (x5979 : 'tags this) ->
        fun
          ~this:(x5971 :
                  this:'T ->
                    arg0:'A0 ->
                      arg1:'A1 -> arg2:'A2 -> arg3:'A3 -> args:any list -> 'R)
          ->
          fun ~thisArg:(x5974 : 'T) ->
            fun ~arg0:(x5975 : 'A0) ->
              fun ~arg1:(x5976 : 'A1) ->
                fun ~arg2:(x5977 : 'A2) ->
                  fun ~arg3:(x5978 : 'A3) ->
                    fun (x5981 : any list) ->
                      Obj.magic
                        (Ojs.call
                           (Ojs.call (this_to_js Obj.magic x5979) "bind"
                              [|(Ojs.fun_to_js_args
                                   (fun (x5972 : _) ->
                                      Obj.magic
                                        (x5971
                                           ~this:(Obj.magic
                                                    (Ojs.array_get x5972 0))
                                           ~arg0:(Obj.magic
                                                    (Ojs.array_get x5972 1))
                                           ~arg1:(Obj.magic
                                                    (Ojs.array_get x5972 2))
                                           ~arg2:(Obj.magic
                                                    (Ojs.array_get x5972 3))
                                           ~arg3:(Obj.magic
                                                    (Ojs.array_get x5972 4))
                                           ~args:(Ojs.list_of_js_from
                                                    any_of_js x5972 5))));(
                                Obj.magic x5974);(Obj.magic x5975);(Obj.magic
                                                                    x5976);(
                                Obj.magic x5977);(Obj.magic x5978)|]) "apply"
                           [|Ojs.null;((let x5982 =
                                          Ojs.new_obj
                                            (Ojs.get_prop_ascii Ojs.global
                                               "Array") [||] in
                                        List.iter
                                          (fun (x5983 : any) ->
                                             ignore
                                               (Ojs.call x5982 "push"
                                                  [|(any_to_js x5983)|]))
                                          x5981;
                                        x5982))|])
    let (bind''''' :
      'tags this ->
        this:(this:'T -> args:'AX list -> 'R) ->
          thisArg:'T -> args:'AX list -> 'AX list -> 'R)
      =
      fun (x5991 : 'tags this) ->
        fun ~this:(x5984 : this:'T -> args:'AX list -> 'R) ->
          fun ~thisArg:(x5985 : 'T) ->
            fun ~args:(x5986 : 'AX list) ->
              fun (x5994 : 'AX list) ->
                Obj.magic
                  (Ojs.call
                     (let x5993 = this_to_js Obj.magic x5991 in
                      Ojs.call (Ojs.get_prop_ascii x5993 "bind") "apply"
                        [|x5993;((let x5987 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  ignore
                                    (Ojs.call x5987 "push"
                                       [|(Ojs.fun_to_js_args
                                            (fun (x5989 : _) ->
                                               Obj.magic
                                                 (x5984
                                                    ~this:(Obj.magic
                                                             (Ojs.array_get
                                                                x5989 0))
                                                    ~args:(Ojs.list_of_js_from
                                                             Obj.magic x5989
                                                             1))))|]);
                                  ignore
                                    (Ojs.call x5987 "push"
                                       [|(Obj.magic x5985)|]);
                                  List.iter
                                    (fun (x5988 : 'AX) ->
                                       ignore
                                         (Ojs.call x5987 "push"
                                            [|(Obj.magic x5988)|])) x5986;
                                  x5987))|]) "apply"
                     [|Ojs.null;((let x5995 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  List.iter
                                    (fun (x5996 : 'AX) ->
                                       ignore
                                         (Ojs.call x5995 "push"
                                            [|(Obj.magic x5996)|])) x5994;
                                  x5995))|])
    let cast_from = Obj.magic
  end
module Boolean =
  struct
    type t = [ `Boolean ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5998 : Ojs.t) -> t_of_js x5998
    and t_0_to_js : t_0 -> Ojs.t = fun (x5997 : t) -> t_to_js x5997
    type tags = [ `Boolean ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Boolean ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6001 : Ojs.t) -> intf_of_js __tags_of_js x6001
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5999 : __tags intf) -> intf_to_js __tags_to_js x5999
    let (valueOf : 'tags this -> bool) =
      fun (x6003 : 'tags this) ->
        Ojs.bool_of_js (Ojs.call (this_to_js Obj.magic x6003) "valueOf" [||])
    let (create : ?value:any -> unit -> t) =
      fun ?value:(x6005 : any option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Boolean")
               (let x6006 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x6005 with
                 | Some x6007 ->
                     ignore (Ojs.call x6006 "push" [|(any_to_js x6007)|])
                 | None -> ());
                x6006))
    let (invoke : ?value:'T -> unit -> bool) =
      fun ?value:(x6008 : 'T option) ->
        fun () ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Boolean") "apply"
               [|Ojs.null;((let x6009 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x6008 with
                             | Some x6010 ->
                                 ignore
                                   (Ojs.call x6009 "push"
                                      [|(Obj.magic x6010)|])
                             | None -> ());
                            x6009))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Boolean")
             "prototype")
    let cast_from = Obj.magic
  end
module BigIntToLocaleStringOptions =
  struct
    type t = [ `BigIntToLocaleStringOptions ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6012 : Ojs.t) -> t_of_js x6012
    and t_0_to_js : t_0 -> Ojs.t = fun (x6011 : t) -> t_to_js x6011
    type tags = [ `BigIntToLocaleStringOptions ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `BigIntToLocaleStringOptions ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6015 : Ojs.t) -> intf_of_js __tags_of_js x6015
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6013 : __tags intf) -> intf_to_js __tags_to_js x6013
    let (get_localeMatcher : 'tags this -> string) =
      fun (x6017 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6017) "localeMatcher")
    let (set_localeMatcher : 'tags this -> string -> unit) =
      fun (x6019 : 'tags this) ->
        fun (x6020 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6019) "localeMatcher"
            (Ojs.string_to_js x6020)
    let (get_style : 'tags this -> string) =
      fun (x6022 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6022) "style")
    let (set_style : 'tags this -> string -> unit) =
      fun (x6024 : 'tags this) ->
        fun (x6025 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6024) "style"
            (Ojs.string_to_js x6025)
    let (get_numberingSystem : 'tags this -> string) =
      fun (x6027 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6027) "numberingSystem")
    let (set_numberingSystem : 'tags this -> string -> unit) =
      fun (x6029 : 'tags this) ->
        fun (x6030 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6029) "numberingSystem"
            (Ojs.string_to_js x6030)
    let (get_unit : 'tags this -> string) =
      fun (x6032 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6032) "unit")
    let (set_unit : 'tags this -> string -> unit) =
      fun (x6034 : 'tags this) ->
        fun (x6035 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6034) "unit"
            (Ojs.string_to_js x6035)
    let (get_unitDisplay : 'tags this -> string) =
      fun (x6037 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6037) "unitDisplay")
    let (set_unitDisplay : 'tags this -> string -> unit) =
      fun (x6039 : 'tags this) ->
        fun (x6040 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6039) "unitDisplay"
            (Ojs.string_to_js x6040)
    let (get_currency : 'tags this -> string) =
      fun (x6042 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6042) "currency")
    let (set_currency : 'tags this -> string -> unit) =
      fun (x6044 : 'tags this) ->
        fun (x6045 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6044) "currency"
            (Ojs.string_to_js x6045)
    let (get_currencyDisplay : 'tags this -> string) =
      fun (x6047 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6047) "currencyDisplay")
    let (set_currencyDisplay : 'tags this -> string -> unit) =
      fun (x6049 : 'tags this) ->
        fun (x6050 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6049) "currencyDisplay"
            (Ojs.string_to_js x6050)
    let (get_useGrouping : 'tags this -> bool) =
      fun (x6052 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6052) "useGrouping")
    let (set_useGrouping : 'tags this -> bool -> unit) =
      fun (x6054 : 'tags this) ->
        fun (x6055 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6054) "useGrouping"
            (Ojs.bool_to_js x6055)
    let (get_minimumIntegerDigits :
      'tags this ->
        [ `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13  | `L_n_14 
        | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19  | `L_n_2 
        | `L_n_20  | `L_n_21  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ])
      =
      fun (x6057 : 'tags this) ->
        let x6059 =
          Ojs.get_prop_ascii (this_to_js Obj.magic x6057)
            "minimumIntegerDigits" in
        match Ojs.int_of_js x6059 with
        | 1 -> `L_n_1
        | 10 -> `L_n_10
        | 11 -> `L_n_11
        | 12 -> `L_n_12
        | 13 -> `L_n_13
        | 14 -> `L_n_14
        | 15 -> `L_n_15
        | 16 -> `L_n_16
        | 17 -> `L_n_17
        | 18 -> `L_n_18
        | 19 -> `L_n_19
        | 2 -> `L_n_2
        | 20 -> `L_n_20
        | 21 -> `L_n_21
        | 3 -> `L_n_3
        | 4 -> `L_n_4
        | 5 -> `L_n_5
        | 6 -> `L_n_6
        | 7 -> `L_n_7
        | 8 -> `L_n_8
        | 9 -> `L_n_9
        | _ -> assert false
    let (set_minimumIntegerDigits :
      'tags this ->
        [ `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13  | `L_n_14 
        | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19  | `L_n_2 
        | `L_n_20  | `L_n_21  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ] -> unit)
      =
      fun (x6060 : 'tags this) ->
        fun
          (x6061 :
            [ `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13  | `L_n_14 
            | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19  | 
              `L_n_2 
            | `L_n_20  | `L_n_21  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
            | `L_n_7  | `L_n_8  | `L_n_9 ])
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6060)
            "minimumIntegerDigits"
            (match x6061 with
             | `L_n_1 -> Ojs.int_to_js 1
             | `L_n_10 -> Ojs.int_to_js 10
             | `L_n_11 -> Ojs.int_to_js 11
             | `L_n_12 -> Ojs.int_to_js 12
             | `L_n_13 -> Ojs.int_to_js 13
             | `L_n_14 -> Ojs.int_to_js 14
             | `L_n_15 -> Ojs.int_to_js 15
             | `L_n_16 -> Ojs.int_to_js 16
             | `L_n_17 -> Ojs.int_to_js 17
             | `L_n_18 -> Ojs.int_to_js 18
             | `L_n_19 -> Ojs.int_to_js 19
             | `L_n_2 -> Ojs.int_to_js 2
             | `L_n_20 -> Ojs.int_to_js 20
             | `L_n_21 -> Ojs.int_to_js 21
             | `L_n_3 -> Ojs.int_to_js 3
             | `L_n_4 -> Ojs.int_to_js 4
             | `L_n_5 -> Ojs.int_to_js 5
             | `L_n_6 -> Ojs.int_to_js 6
             | `L_n_7 -> Ojs.int_to_js 7
             | `L_n_8 -> Ojs.int_to_js 8
             | `L_n_9 -> Ojs.int_to_js 9)
    let (get_minimumFractionDigits :
      'tags this ->
        [ `L_n_0  | `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13 
        | `L_n_14  | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19 
        | `L_n_2  | `L_n_20  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ])
      =
      fun (x6063 : 'tags this) ->
        let x6065 =
          Ojs.get_prop_ascii (this_to_js Obj.magic x6063)
            "minimumFractionDigits" in
        match Ojs.int_of_js x6065 with
        | 0 -> `L_n_0
        | 1 -> `L_n_1
        | 10 -> `L_n_10
        | 11 -> `L_n_11
        | 12 -> `L_n_12
        | 13 -> `L_n_13
        | 14 -> `L_n_14
        | 15 -> `L_n_15
        | 16 -> `L_n_16
        | 17 -> `L_n_17
        | 18 -> `L_n_18
        | 19 -> `L_n_19
        | 2 -> `L_n_2
        | 20 -> `L_n_20
        | 3 -> `L_n_3
        | 4 -> `L_n_4
        | 5 -> `L_n_5
        | 6 -> `L_n_6
        | 7 -> `L_n_7
        | 8 -> `L_n_8
        | 9 -> `L_n_9
        | _ -> assert false
    let (set_minimumFractionDigits :
      'tags this ->
        [ `L_n_0  | `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13 
        | `L_n_14  | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19 
        | `L_n_2  | `L_n_20  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ] -> unit)
      =
      fun (x6066 : 'tags this) ->
        fun
          (x6067 :
            [ `L_n_0  | `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13 
            | `L_n_14  | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | 
              `L_n_19 
            | `L_n_2  | `L_n_20  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
            | `L_n_7  | `L_n_8  | `L_n_9 ])
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6066)
            "minimumFractionDigits"
            (match x6067 with
             | `L_n_0 -> Ojs.int_to_js 0
             | `L_n_1 -> Ojs.int_to_js 1
             | `L_n_10 -> Ojs.int_to_js 10
             | `L_n_11 -> Ojs.int_to_js 11
             | `L_n_12 -> Ojs.int_to_js 12
             | `L_n_13 -> Ojs.int_to_js 13
             | `L_n_14 -> Ojs.int_to_js 14
             | `L_n_15 -> Ojs.int_to_js 15
             | `L_n_16 -> Ojs.int_to_js 16
             | `L_n_17 -> Ojs.int_to_js 17
             | `L_n_18 -> Ojs.int_to_js 18
             | `L_n_19 -> Ojs.int_to_js 19
             | `L_n_2 -> Ojs.int_to_js 2
             | `L_n_20 -> Ojs.int_to_js 20
             | `L_n_3 -> Ojs.int_to_js 3
             | `L_n_4 -> Ojs.int_to_js 4
             | `L_n_5 -> Ojs.int_to_js 5
             | `L_n_6 -> Ojs.int_to_js 6
             | `L_n_7 -> Ojs.int_to_js 7
             | `L_n_8 -> Ojs.int_to_js 8
             | `L_n_9 -> Ojs.int_to_js 9)
    let (get_maximumFractionDigits :
      'tags this ->
        [ `L_n_0  | `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13 
        | `L_n_14  | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19 
        | `L_n_2  | `L_n_20  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ])
      =
      fun (x6069 : 'tags this) ->
        let x6071 =
          Ojs.get_prop_ascii (this_to_js Obj.magic x6069)
            "maximumFractionDigits" in
        match Ojs.int_of_js x6071 with
        | 0 -> `L_n_0
        | 1 -> `L_n_1
        | 10 -> `L_n_10
        | 11 -> `L_n_11
        | 12 -> `L_n_12
        | 13 -> `L_n_13
        | 14 -> `L_n_14
        | 15 -> `L_n_15
        | 16 -> `L_n_16
        | 17 -> `L_n_17
        | 18 -> `L_n_18
        | 19 -> `L_n_19
        | 2 -> `L_n_2
        | 20 -> `L_n_20
        | 3 -> `L_n_3
        | 4 -> `L_n_4
        | 5 -> `L_n_5
        | 6 -> `L_n_6
        | 7 -> `L_n_7
        | 8 -> `L_n_8
        | 9 -> `L_n_9
        | _ -> assert false
    let (set_maximumFractionDigits :
      'tags this ->
        [ `L_n_0  | `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13 
        | `L_n_14  | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19 
        | `L_n_2  | `L_n_20  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ] -> unit)
      =
      fun (x6072 : 'tags this) ->
        fun
          (x6073 :
            [ `L_n_0  | `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13 
            | `L_n_14  | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | 
              `L_n_19 
            | `L_n_2  | `L_n_20  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
            | `L_n_7  | `L_n_8  | `L_n_9 ])
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6072)
            "maximumFractionDigits"
            (match x6073 with
             | `L_n_0 -> Ojs.int_to_js 0
             | `L_n_1 -> Ojs.int_to_js 1
             | `L_n_10 -> Ojs.int_to_js 10
             | `L_n_11 -> Ojs.int_to_js 11
             | `L_n_12 -> Ojs.int_to_js 12
             | `L_n_13 -> Ojs.int_to_js 13
             | `L_n_14 -> Ojs.int_to_js 14
             | `L_n_15 -> Ojs.int_to_js 15
             | `L_n_16 -> Ojs.int_to_js 16
             | `L_n_17 -> Ojs.int_to_js 17
             | `L_n_18 -> Ojs.int_to_js 18
             | `L_n_19 -> Ojs.int_to_js 19
             | `L_n_2 -> Ojs.int_to_js 2
             | `L_n_20 -> Ojs.int_to_js 20
             | `L_n_3 -> Ojs.int_to_js 3
             | `L_n_4 -> Ojs.int_to_js 4
             | `L_n_5 -> Ojs.int_to_js 5
             | `L_n_6 -> Ojs.int_to_js 6
             | `L_n_7 -> Ojs.int_to_js 7
             | `L_n_8 -> Ojs.int_to_js 8
             | `L_n_9 -> Ojs.int_to_js 9)
    let (get_minimumSignificantDigits :
      'tags this ->
        [ `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13  | `L_n_14 
        | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19  | `L_n_2 
        | `L_n_20  | `L_n_21  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ])
      =
      fun (x6075 : 'tags this) ->
        let x6077 =
          Ojs.get_prop_ascii (this_to_js Obj.magic x6075)
            "minimumSignificantDigits" in
        match Ojs.int_of_js x6077 with
        | 1 -> `L_n_1
        | 10 -> `L_n_10
        | 11 -> `L_n_11
        | 12 -> `L_n_12
        | 13 -> `L_n_13
        | 14 -> `L_n_14
        | 15 -> `L_n_15
        | 16 -> `L_n_16
        | 17 -> `L_n_17
        | 18 -> `L_n_18
        | 19 -> `L_n_19
        | 2 -> `L_n_2
        | 20 -> `L_n_20
        | 21 -> `L_n_21
        | 3 -> `L_n_3
        | 4 -> `L_n_4
        | 5 -> `L_n_5
        | 6 -> `L_n_6
        | 7 -> `L_n_7
        | 8 -> `L_n_8
        | 9 -> `L_n_9
        | _ -> assert false
    let (set_minimumSignificantDigits :
      'tags this ->
        [ `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13  | `L_n_14 
        | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19  | `L_n_2 
        | `L_n_20  | `L_n_21  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ] -> unit)
      =
      fun (x6078 : 'tags this) ->
        fun
          (x6079 :
            [ `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13  | `L_n_14 
            | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19  | 
              `L_n_2 
            | `L_n_20  | `L_n_21  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
            | `L_n_7  | `L_n_8  | `L_n_9 ])
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6078)
            "minimumSignificantDigits"
            (match x6079 with
             | `L_n_1 -> Ojs.int_to_js 1
             | `L_n_10 -> Ojs.int_to_js 10
             | `L_n_11 -> Ojs.int_to_js 11
             | `L_n_12 -> Ojs.int_to_js 12
             | `L_n_13 -> Ojs.int_to_js 13
             | `L_n_14 -> Ojs.int_to_js 14
             | `L_n_15 -> Ojs.int_to_js 15
             | `L_n_16 -> Ojs.int_to_js 16
             | `L_n_17 -> Ojs.int_to_js 17
             | `L_n_18 -> Ojs.int_to_js 18
             | `L_n_19 -> Ojs.int_to_js 19
             | `L_n_2 -> Ojs.int_to_js 2
             | `L_n_20 -> Ojs.int_to_js 20
             | `L_n_21 -> Ojs.int_to_js 21
             | `L_n_3 -> Ojs.int_to_js 3
             | `L_n_4 -> Ojs.int_to_js 4
             | `L_n_5 -> Ojs.int_to_js 5
             | `L_n_6 -> Ojs.int_to_js 6
             | `L_n_7 -> Ojs.int_to_js 7
             | `L_n_8 -> Ojs.int_to_js 8
             | `L_n_9 -> Ojs.int_to_js 9)
    let (get_maximumSignificantDigits :
      'tags this ->
        [ `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13  | `L_n_14 
        | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19  | `L_n_2 
        | `L_n_20  | `L_n_21  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ])
      =
      fun (x6081 : 'tags this) ->
        let x6083 =
          Ojs.get_prop_ascii (this_to_js Obj.magic x6081)
            "maximumSignificantDigits" in
        match Ojs.int_of_js x6083 with
        | 1 -> `L_n_1
        | 10 -> `L_n_10
        | 11 -> `L_n_11
        | 12 -> `L_n_12
        | 13 -> `L_n_13
        | 14 -> `L_n_14
        | 15 -> `L_n_15
        | 16 -> `L_n_16
        | 17 -> `L_n_17
        | 18 -> `L_n_18
        | 19 -> `L_n_19
        | 2 -> `L_n_2
        | 20 -> `L_n_20
        | 21 -> `L_n_21
        | 3 -> `L_n_3
        | 4 -> `L_n_4
        | 5 -> `L_n_5
        | 6 -> `L_n_6
        | 7 -> `L_n_7
        | 8 -> `L_n_8
        | 9 -> `L_n_9
        | _ -> assert false
    let (set_maximumSignificantDigits :
      'tags this ->
        [ `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13  | `L_n_14 
        | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19  | `L_n_2 
        | `L_n_20  | `L_n_21  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ] -> unit)
      =
      fun (x6084 : 'tags this) ->
        fun
          (x6085 :
            [ `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13  | `L_n_14 
            | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19  | 
              `L_n_2 
            | `L_n_20  | `L_n_21  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
            | `L_n_7  | `L_n_8  | `L_n_9 ])
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6084)
            "maximumSignificantDigits"
            (match x6085 with
             | `L_n_1 -> Ojs.int_to_js 1
             | `L_n_10 -> Ojs.int_to_js 10
             | `L_n_11 -> Ojs.int_to_js 11
             | `L_n_12 -> Ojs.int_to_js 12
             | `L_n_13 -> Ojs.int_to_js 13
             | `L_n_14 -> Ojs.int_to_js 14
             | `L_n_15 -> Ojs.int_to_js 15
             | `L_n_16 -> Ojs.int_to_js 16
             | `L_n_17 -> Ojs.int_to_js 17
             | `L_n_18 -> Ojs.int_to_js 18
             | `L_n_19 -> Ojs.int_to_js 19
             | `L_n_2 -> Ojs.int_to_js 2
             | `L_n_20 -> Ojs.int_to_js 20
             | `L_n_21 -> Ojs.int_to_js 21
             | `L_n_3 -> Ojs.int_to_js 3
             | `L_n_4 -> Ojs.int_to_js 4
             | `L_n_5 -> Ojs.int_to_js 5
             | `L_n_6 -> Ojs.int_to_js 6
             | `L_n_7 -> Ojs.int_to_js 7
             | `L_n_8 -> Ojs.int_to_js 8
             | `L_n_9 -> Ojs.int_to_js 9)
    let (get_notation : 'tags this -> string) =
      fun (x6087 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6087) "notation")
    let (set_notation : 'tags this -> string -> unit) =
      fun (x6089 : 'tags this) ->
        fun (x6090 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6089) "notation"
            (Ojs.string_to_js x6090)
    let (get_compactDisplay : 'tags this -> string) =
      fun (x6092 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6092) "compactDisplay")
    let (set_compactDisplay : 'tags this -> string -> unit) =
      fun (x6094 : 'tags this) ->
        fun (x6095 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6094) "compactDisplay"
            (Ojs.string_to_js x6095)
    let (create :
      localeMatcher:string ->
        style:string ->
          numberingSystem:string ->
            unit:string ->
              unitDisplay:string ->
                currency:string ->
                  currencyDisplay:string ->
                    useGrouping:bool ->
                      minimumIntegerDigits:[ `L_n_1  | `L_n_10  | `L_n_11 
                                           | `L_n_12  | `L_n_13  | `L_n_14 
                                           | `L_n_15  | `L_n_16  | `L_n_17 
                                           | `L_n_18  | `L_n_19  | `L_n_2 
                                           | `L_n_20  | `L_n_21  | `L_n_3 
                                           | `L_n_4  | `L_n_5  | `L_n_6 
                                           | `L_n_7  | `L_n_8  | `L_n_9 ]
                        ->
                        minimumFractionDigits:[ `L_n_0  | `L_n_1  | `L_n_10 
                                              | `L_n_11  | `L_n_12 
                                              | `L_n_13  | `L_n_14 
                                              | `L_n_15  | `L_n_16 
                                              | `L_n_17  | `L_n_18 
                                              | `L_n_19  | `L_n_2  | 
                                                `L_n_20 
                                              | `L_n_3  | `L_n_4  | `L_n_5 
                                              | `L_n_6  | `L_n_7  | `L_n_8 
                                              | `L_n_9 ]
                          ->
                          maximumFractionDigits:[ `L_n_0  | `L_n_1 
                                                | `L_n_10  | `L_n_11 
                                                | `L_n_12  | `L_n_13 
                                                | `L_n_14  | `L_n_15 
                                                | `L_n_16  | `L_n_17 
                                                | `L_n_18  | `L_n_19 
                                                | `L_n_2  | `L_n_20 
                                                | `L_n_3  | `L_n_4  | 
                                                  `L_n_5 
                                                | `L_n_6  | `L_n_7  | 
                                                  `L_n_8 
                                                | `L_n_9 ]
                            ->
                            minimumSignificantDigits:[ `L_n_1  | `L_n_10 
                                                     | `L_n_11  | `L_n_12 
                                                     | `L_n_13  | `L_n_14 
                                                     | `L_n_15  | `L_n_16 
                                                     | `L_n_17  | `L_n_18 
                                                     | `L_n_19  | `L_n_2 
                                                     | `L_n_20  | `L_n_21 
                                                     | `L_n_3  | `L_n_4 
                                                     | `L_n_5  | `L_n_6 
                                                     | `L_n_7  | `L_n_8 
                                                     | `L_n_9 ]
                              ->
                              maximumSignificantDigits:[ `L_n_1  | `L_n_10 
                                                       | `L_n_11  | `L_n_12 
                                                       | `L_n_13  | `L_n_14 
                                                       | `L_n_15  | `L_n_16 
                                                       | `L_n_17  | `L_n_18 
                                                       | `L_n_19  | `L_n_2 
                                                       | `L_n_20  | `L_n_21 
                                                       | `L_n_3  | `L_n_4 
                                                       | `L_n_5  | `L_n_6 
                                                       | `L_n_7  | `L_n_8 
                                                       | `L_n_9 ]
                                ->
                                notation:string ->
                                  compactDisplay:string -> unit -> t)
      =
      fun ~localeMatcher:(x6097 : string) ->
        fun ~style:(x6098 : string) ->
          fun ~numberingSystem:(x6099 : string) ->
            fun ~unit:(x6100 : string) ->
              fun ~unitDisplay:(x6101 : string) ->
                fun ~currency:(x6102 : string) ->
                  fun ~currencyDisplay:(x6103 : string) ->
                    fun ~useGrouping:(x6104 : bool) ->
                      fun
                        ~minimumIntegerDigits:(x6105 :
                                                [ `L_n_1  | `L_n_10 
                                                | `L_n_11  | `L_n_12 
                                                | `L_n_13  | `L_n_14 
                                                | `L_n_15  | `L_n_16 
                                                | `L_n_17  | `L_n_18 
                                                | `L_n_19  | `L_n_2 
                                                | `L_n_20  | `L_n_21 
                                                | `L_n_3  | `L_n_4  | 
                                                  `L_n_5 
                                                | `L_n_6  | `L_n_7  | 
                                                  `L_n_8 
                                                | `L_n_9 ])
                        ->
                        fun
                          ~minimumFractionDigits:(x6106 :
                                                   [ `L_n_0  | `L_n_1 
                                                   | `L_n_10  | `L_n_11 
                                                   | `L_n_12  | `L_n_13 
                                                   | `L_n_14  | `L_n_15 
                                                   | `L_n_16  | `L_n_17 
                                                   | `L_n_18  | `L_n_19 
                                                   | `L_n_2  | `L_n_20 
                                                   | `L_n_3  | `L_n_4 
                                                   | `L_n_5  | `L_n_6 
                                                   | `L_n_7  | `L_n_8 
                                                   | `L_n_9 ])
                          ->
                          fun
                            ~maximumFractionDigits:(x6107 :
                                                     [ `L_n_0  | `L_n_1 
                                                     | `L_n_10  | `L_n_11 
                                                     | `L_n_12  | `L_n_13 
                                                     | `L_n_14  | `L_n_15 
                                                     | `L_n_16  | `L_n_17 
                                                     | `L_n_18  | `L_n_19 
                                                     | `L_n_2  | `L_n_20 
                                                     | `L_n_3  | `L_n_4 
                                                     | `L_n_5  | `L_n_6 
                                                     | `L_n_7  | `L_n_8 
                                                     | `L_n_9 ])
                            ->
                            fun
                              ~minimumSignificantDigits:(x6108 :
                                                          [ `L_n_1 
                                                          | `L_n_10 
                                                          | `L_n_11 
                                                          | `L_n_12 
                                                          | `L_n_13 
                                                          | `L_n_14 
                                                          | `L_n_15 
                                                          | `L_n_16 
                                                          | `L_n_17 
                                                          | `L_n_18 
                                                          | `L_n_19 
                                                          | `L_n_2 
                                                          | `L_n_20 
                                                          | `L_n_21 
                                                          | `L_n_3  | 
                                                            `L_n_4 
                                                          | `L_n_5  | 
                                                            `L_n_6 
                                                          | `L_n_7  | 
                                                            `L_n_8 
                                                          | `L_n_9 ])
                              ->
                              fun
                                ~maximumSignificantDigits:(x6109 :
                                                            [ `L_n_1 
                                                            | `L_n_10 
                                                            | `L_n_11 
                                                            | `L_n_12 
                                                            | `L_n_13 
                                                            | `L_n_14 
                                                            | `L_n_15 
                                                            | `L_n_16 
                                                            | `L_n_17 
                                                            | `L_n_18 
                                                            | `L_n_19 
                                                            | `L_n_2 
                                                            | `L_n_20 
                                                            | `L_n_21 
                                                            | `L_n_3 
                                                            | `L_n_4 
                                                            | `L_n_5 
                                                            | `L_n_6 
                                                            | `L_n_7 
                                                            | `L_n_8 
                                                            | `L_n_9 ])
                                ->
                                fun ~notation:(x6110 : string) ->
                                  fun ~compactDisplay:(x6111 : string) ->
                                    fun () ->
                                      let x6112 = Ojs.empty_obj () in
                                      Ojs.set_prop_ascii x6112
                                        "localeMatcher"
                                        (Ojs.string_to_js x6097);
                                      Ojs.set_prop_ascii x6112 "style"
                                        (Ojs.string_to_js x6098);
                                      Ojs.set_prop_ascii x6112
                                        "numberingSystem"
                                        (Ojs.string_to_js x6099);
                                      Ojs.set_prop_ascii x6112 "unit"
                                        (Ojs.string_to_js x6100);
                                      Ojs.set_prop_ascii x6112 "unitDisplay"
                                        (Ojs.string_to_js x6101);
                                      Ojs.set_prop_ascii x6112 "currency"
                                        (Ojs.string_to_js x6102);
                                      Ojs.set_prop_ascii x6112
                                        "currencyDisplay"
                                        (Ojs.string_to_js x6103);
                                      Ojs.set_prop_ascii x6112 "useGrouping"
                                        (Ojs.bool_to_js x6104);
                                      Ojs.set_prop_ascii x6112
                                        "minimumIntegerDigits"
                                        (match x6105 with
                                         | `L_n_1 -> Ojs.int_to_js 1
                                         | `L_n_10 -> Ojs.int_to_js 10
                                         | `L_n_11 -> Ojs.int_to_js 11
                                         | `L_n_12 -> Ojs.int_to_js 12
                                         | `L_n_13 -> Ojs.int_to_js 13
                                         | `L_n_14 -> Ojs.int_to_js 14
                                         | `L_n_15 -> Ojs.int_to_js 15
                                         | `L_n_16 -> Ojs.int_to_js 16
                                         | `L_n_17 -> Ojs.int_to_js 17
                                         | `L_n_18 -> Ojs.int_to_js 18
                                         | `L_n_19 -> Ojs.int_to_js 19
                                         | `L_n_2 -> Ojs.int_to_js 2
                                         | `L_n_20 -> Ojs.int_to_js 20
                                         | `L_n_21 -> Ojs.int_to_js 21
                                         | `L_n_3 -> Ojs.int_to_js 3
                                         | `L_n_4 -> Ojs.int_to_js 4
                                         | `L_n_5 -> Ojs.int_to_js 5
                                         | `L_n_6 -> Ojs.int_to_js 6
                                         | `L_n_7 -> Ojs.int_to_js 7
                                         | `L_n_8 -> Ojs.int_to_js 8
                                         | `L_n_9 -> Ojs.int_to_js 9);
                                      Ojs.set_prop_ascii x6112
                                        "minimumFractionDigits"
                                        (match x6106 with
                                         | `L_n_0 -> Ojs.int_to_js 0
                                         | `L_n_1 -> Ojs.int_to_js 1
                                         | `L_n_10 -> Ojs.int_to_js 10
                                         | `L_n_11 -> Ojs.int_to_js 11
                                         | `L_n_12 -> Ojs.int_to_js 12
                                         | `L_n_13 -> Ojs.int_to_js 13
                                         | `L_n_14 -> Ojs.int_to_js 14
                                         | `L_n_15 -> Ojs.int_to_js 15
                                         | `L_n_16 -> Ojs.int_to_js 16
                                         | `L_n_17 -> Ojs.int_to_js 17
                                         | `L_n_18 -> Ojs.int_to_js 18
                                         | `L_n_19 -> Ojs.int_to_js 19
                                         | `L_n_2 -> Ojs.int_to_js 2
                                         | `L_n_20 -> Ojs.int_to_js 20
                                         | `L_n_3 -> Ojs.int_to_js 3
                                         | `L_n_4 -> Ojs.int_to_js 4
                                         | `L_n_5 -> Ojs.int_to_js 5
                                         | `L_n_6 -> Ojs.int_to_js 6
                                         | `L_n_7 -> Ojs.int_to_js 7
                                         | `L_n_8 -> Ojs.int_to_js 8
                                         | `L_n_9 -> Ojs.int_to_js 9);
                                      Ojs.set_prop_ascii x6112
                                        "maximumFractionDigits"
                                        (match x6107 with
                                         | `L_n_0 -> Ojs.int_to_js 0
                                         | `L_n_1 -> Ojs.int_to_js 1
                                         | `L_n_10 -> Ojs.int_to_js 10
                                         | `L_n_11 -> Ojs.int_to_js 11
                                         | `L_n_12 -> Ojs.int_to_js 12
                                         | `L_n_13 -> Ojs.int_to_js 13
                                         | `L_n_14 -> Ojs.int_to_js 14
                                         | `L_n_15 -> Ojs.int_to_js 15
                                         | `L_n_16 -> Ojs.int_to_js 16
                                         | `L_n_17 -> Ojs.int_to_js 17
                                         | `L_n_18 -> Ojs.int_to_js 18
                                         | `L_n_19 -> Ojs.int_to_js 19
                                         | `L_n_2 -> Ojs.int_to_js 2
                                         | `L_n_20 -> Ojs.int_to_js 20
                                         | `L_n_3 -> Ojs.int_to_js 3
                                         | `L_n_4 -> Ojs.int_to_js 4
                                         | `L_n_5 -> Ojs.int_to_js 5
                                         | `L_n_6 -> Ojs.int_to_js 6
                                         | `L_n_7 -> Ojs.int_to_js 7
                                         | `L_n_8 -> Ojs.int_to_js 8
                                         | `L_n_9 -> Ojs.int_to_js 9);
                                      Ojs.set_prop_ascii x6112
                                        "minimumSignificantDigits"
                                        (match x6108 with
                                         | `L_n_1 -> Ojs.int_to_js 1
                                         | `L_n_10 -> Ojs.int_to_js 10
                                         | `L_n_11 -> Ojs.int_to_js 11
                                         | `L_n_12 -> Ojs.int_to_js 12
                                         | `L_n_13 -> Ojs.int_to_js 13
                                         | `L_n_14 -> Ojs.int_to_js 14
                                         | `L_n_15 -> Ojs.int_to_js 15
                                         | `L_n_16 -> Ojs.int_to_js 16
                                         | `L_n_17 -> Ojs.int_to_js 17
                                         | `L_n_18 -> Ojs.int_to_js 18
                                         | `L_n_19 -> Ojs.int_to_js 19
                                         | `L_n_2 -> Ojs.int_to_js 2
                                         | `L_n_20 -> Ojs.int_to_js 20
                                         | `L_n_21 -> Ojs.int_to_js 21
                                         | `L_n_3 -> Ojs.int_to_js 3
                                         | `L_n_4 -> Ojs.int_to_js 4
                                         | `L_n_5 -> Ojs.int_to_js 5
                                         | `L_n_6 -> Ojs.int_to_js 6
                                         | `L_n_7 -> Ojs.int_to_js 7
                                         | `L_n_8 -> Ojs.int_to_js 8
                                         | `L_n_9 -> Ojs.int_to_js 9);
                                      Ojs.set_prop_ascii x6112
                                        "maximumSignificantDigits"
                                        (match x6109 with
                                         | `L_n_1 -> Ojs.int_to_js 1
                                         | `L_n_10 -> Ojs.int_to_js 10
                                         | `L_n_11 -> Ojs.int_to_js 11
                                         | `L_n_12 -> Ojs.int_to_js 12
                                         | `L_n_13 -> Ojs.int_to_js 13
                                         | `L_n_14 -> Ojs.int_to_js 14
                                         | `L_n_15 -> Ojs.int_to_js 15
                                         | `L_n_16 -> Ojs.int_to_js 16
                                         | `L_n_17 -> Ojs.int_to_js 17
                                         | `L_n_18 -> Ojs.int_to_js 18
                                         | `L_n_19 -> Ojs.int_to_js 19
                                         | `L_n_2 -> Ojs.int_to_js 2
                                         | `L_n_20 -> Ojs.int_to_js 20
                                         | `L_n_21 -> Ojs.int_to_js 21
                                         | `L_n_3 -> Ojs.int_to_js 3
                                         | `L_n_4 -> Ojs.int_to_js 4
                                         | `L_n_5 -> Ojs.int_to_js 5
                                         | `L_n_6 -> Ojs.int_to_js 6
                                         | `L_n_7 -> Ojs.int_to_js 7
                                         | `L_n_8 -> Ojs.int_to_js 8
                                         | `L_n_9 -> Ojs.int_to_js 9);
                                      Ojs.set_prop_ascii x6112 "notation"
                                        (Ojs.string_to_js x6110);
                                      Ojs.set_prop_ascii x6112
                                        "compactDisplay"
                                        (Ojs.string_to_js x6111);
                                      t_of_js x6112
    let cast_from = Obj.magic
  end
module BigInt =
  struct
    type t = [ `BigInt ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6114 : Ojs.t) -> t_of_js x6114
    and t_0_to_js : t_0 -> Ojs.t = fun (x6113 : t) -> t_to_js x6113
    type tags = [ `BigInt ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `BigInt ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6117 : Ojs.t) -> intf_of_js __tags_of_js x6117
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6115 : __tags intf) -> intf_to_js __tags_to_js x6115
    let (toString : 'tags this -> ?radix:float -> unit -> string) =
      fun (x6122 : 'tags this) ->
        fun ?radix:(x6119 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x6124 = this_to_js Obj.magic x6122 in
               Ojs.call (Ojs.get_prop_ascii x6124 "toString") "apply"
                 [|x6124;((let x6120 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6119 with
                            | Some x6121 ->
                                ignore
                                  (Ojs.call x6120 "push"
                                     [|(Ojs.float_to_js x6121)|])
                            | None -> ());
                           x6120))|])
    let (toLocaleString :
      'tags this ->
        ?locales:string ->
          ?options:BigIntToLocaleStringOptions.t -> unit -> string)
      =
      fun (x6130 : 'tags this) ->
        fun ?locales:(x6125 : string option) ->
          fun ?options:(x6126 : BigIntToLocaleStringOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x6132 = this_to_js Obj.magic x6130 in
                 Ojs.call (Ojs.get_prop_ascii x6132 "toLocaleString") "apply"
                   [|x6132;((let x6127 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x6125 with
                              | Some x6129 ->
                                  ignore
                                    (Ojs.call x6127 "push"
                                       [|(Ojs.string_to_js x6129)|])
                              | None -> ());
                             (match x6126 with
                              | Some x6128 ->
                                  ignore
                                    (Ojs.call x6127 "push"
                                       [|(BigIntToLocaleStringOptions.t_to_js
                                            x6128)|])
                              | None -> ());
                             x6127))|])
    let (valueOf : 'tags this -> bigint) =
      fun (x6133 : 'tags this) ->
        bigint_of_js (Ojs.call (this_to_js Obj.magic x6133) "valueOf" [||])
    let (invoke : bigint or_boolean or_string or_number -> bigint) =
      fun (x6135 : bigint or_boolean or_string or_number) ->
        bigint_of_js
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "BigInt")
             [|(or_number_to_js
                  (fun (x6136 : bigint or_boolean or_string) ->
                     or_string_to_js
                       (fun (x6137 : bigint or_boolean) ->
                          or_boolean_to_js bigint_to_js x6137) x6136) x6135)|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "BigInt")
             "prototype")
    let (asIntN : bits:float -> int:bigint -> bigint) =
      fun ~bits:(x6139 : float) ->
        fun ~int:(x6140 : bigint) ->
          bigint_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "BigInt") "asIntN"
               [|(Ojs.float_to_js x6139);(bigint_to_js x6140)|])
    let (asUintN : bits:float -> int:bigint -> bigint) =
      fun ~bits:(x6141 : float) ->
        fun ~int:(x6142 : bigint) ->
          bigint_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "BigInt") "asUintN"
               [|(Ojs.float_to_js x6141);(bigint_to_js x6142)|])
    let cast_from = Obj.magic
  end
module Uint8Array =
  struct
    type t =
      [ `Uint8Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6144 : Ojs.t) -> t_of_js x6144
    and t_0_to_js : t_0 -> Ojs.t = fun (x6143 : t) -> t_to_js x6143
    type tags =
      [ `Uint8Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Uint8Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6147 : Ojs.t) -> intf_of_js __tags_of_js x6147
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6145 : __tags intf) -> intf_to_js __tags_to_js x6145
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x6153 : 'tags this) ->
        fun ~searchElement:(x6149 : float) ->
          fun ?fromIndex:(x6150 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6155 = this_to_js Obj.magic x6153 in
                 Ojs.call (Ojs.get_prop_ascii x6155 "includes") "apply"
                   [|x6155;((let x6151 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6151 "push"
                                  [|(Ojs.float_to_js x6149)|]);
                             (match x6150 with
                              | Some x6152 ->
                                  ignore
                                    (Ojs.call x6151 "push"
                                       [|(Ojs.float_to_js x6152)|])
                              | None -> ());
                             x6151))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x6156 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x6158 : Ojs.t) ->
             let x6159 = x6158 in
             ((Ojs.float_of_js (Ojs.array_get x6159 0)),
               (Ojs.float_of_js (Ojs.array_get x6159 1))))
          (Ojs.call (this_to_js Obj.magic x6156) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x6160 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x6160) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x6163 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x6163) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x6166 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6166)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x6168 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6168) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x6170 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6170) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x6172 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6172) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x6179 : 'tags this) ->
        fun ~target:(x6174 : float) ->
          fun ~start:(x6175 : float) ->
            fun ?end_:(x6176 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x6181 = this_to_js Obj.magic x6179 in
                   Ojs.call (Ojs.get_prop_ascii x6181 "copyWithin") "apply"
                     [|x6181;((let x6177 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6177 "push"
                                    [|(Ojs.float_to_js x6174)|]);
                               ignore
                                 (Ojs.call x6177 "push"
                                    [|(Ojs.float_to_js x6175)|]);
                               (match x6176 with
                                | Some x6178 ->
                                    ignore
                                      (Ojs.call x6177 "push"
                                         [|(Ojs.float_to_js x6178)|])
                                | None -> ());
                               x6177))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x6190 : 'tags this) ->
        fun
          ~predicate:(x6183 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x6184 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6192 = this_to_js Obj.magic x6190 in
                 Ojs.call (Ojs.get_prop_ascii x6192 "every") "apply"
                   [|x6192;((let x6185 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6185 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6187 : Ojs.t) ->
                                          fun (x6188 : Ojs.t) ->
                                            fun (x6189 : Ojs.t) ->
                                              unknown_to_js
                                                (x6183
                                                   ~value:(Ojs.float_of_js
                                                             x6187)
                                                   ~index:(Ojs.float_of_js
                                                             x6188)
                                                   ~array:(t_of_js x6189))))|]);
                             (match x6184 with
                              | Some x6186 ->
                                  ignore
                                    (Ojs.call x6185 "push"
                                       [|(any_to_js x6186)|])
                              | None -> ());
                             x6185))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x6199 : 'tags this) ->
        fun ~value:(x6193 : float) ->
          fun ?start:(x6194 : float option) ->
            fun ?end_:(x6195 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x6201 = this_to_js Obj.magic x6199 in
                   Ojs.call (Ojs.get_prop_ascii x6201 "fill") "apply"
                     [|x6201;((let x6196 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6196 "push"
                                    [|(Ojs.float_to_js x6193)|]);
                               (match x6194 with
                                | Some x6198 ->
                                    ignore
                                      (Ojs.call x6196 "push"
                                         [|(Ojs.float_to_js x6198)|])
                                | None -> ());
                               (match x6195 with
                                | Some x6197 ->
                                    ignore
                                      (Ojs.call x6196 "push"
                                         [|(Ojs.float_to_js x6197)|])
                                | None -> ());
                               x6196))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x6210 : 'tags this) ->
        fun ~predicate:(x6203 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x6204 : any option) ->
            fun () ->
              t_of_js
                (let x6212 = this_to_js Obj.magic x6210 in
                 Ojs.call (Ojs.get_prop_ascii x6212 "filter") "apply"
                   [|x6212;((let x6205 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6205 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6207 : Ojs.t) ->
                                          fun (x6208 : Ojs.t) ->
                                            fun (x6209 : Ojs.t) ->
                                              any_to_js
                                                (x6203
                                                   ~value:(Ojs.float_of_js
                                                             x6207)
                                                   ~index:(Ojs.float_of_js
                                                             x6208)
                                                   ~array:(t_of_js x6209))))|]);
                             (match x6204 with
                              | Some x6206 ->
                                  ignore
                                    (Ojs.call x6205 "push"
                                       [|(any_to_js x6206)|])
                              | None -> ());
                             x6205))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x6220 : 'tags this) ->
        fun ~predicate:(x6213 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x6214 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x6222 = this_to_js Obj.magic x6220 in
                 Ojs.call (Ojs.get_prop_ascii x6222 "find") "apply"
                   [|x6222;((let x6215 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6215 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6217 : Ojs.t) ->
                                          fun (x6218 : Ojs.t) ->
                                            fun (x6219 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x6213
                                                   ~value:(Ojs.float_of_js
                                                             x6217)
                                                   ~index:(Ojs.float_of_js
                                                             x6218)
                                                   ~obj:(t_of_js x6219))))|]);
                             (match x6214 with
                              | Some x6216 ->
                                  ignore
                                    (Ojs.call x6215 "push"
                                       [|(any_to_js x6216)|])
                              | None -> ());
                             x6215))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x6231 : 'tags this) ->
        fun ~predicate:(x6224 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x6225 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x6233 = this_to_js Obj.magic x6231 in
                 Ojs.call (Ojs.get_prop_ascii x6233 "findIndex") "apply"
                   [|x6233;((let x6226 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6226 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6228 : Ojs.t) ->
                                          fun (x6229 : Ojs.t) ->
                                            fun (x6230 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x6224
                                                   ~value:(Ojs.float_of_js
                                                             x6228)
                                                   ~index:(Ojs.float_of_js
                                                             x6229)
                                                   ~obj:(t_of_js x6230))))|]);
                             (match x6225 with
                              | Some x6227 ->
                                  ignore
                                    (Ojs.call x6226 "push"
                                       [|(any_to_js x6227)|])
                              | None -> ());
                             x6226))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x6241 : 'tags this) ->
        fun
          ~callbackfn:(x6234 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x6235 : any option) ->
            fun () ->
              ignore
                (let x6243 = this_to_js Obj.magic x6241 in
                 Ojs.call (Ojs.get_prop_ascii x6243 "forEach") "apply"
                   [|x6243;((let x6236 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6236 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6238 : Ojs.t) ->
                                          fun (x6239 : Ojs.t) ->
                                            fun (x6240 : Ojs.t) ->
                                              x6234
                                                ~value:(Ojs.float_of_js x6238)
                                                ~index:(Ojs.float_of_js x6239)
                                                ~array:(t_of_js x6240)))|]);
                             (match x6235 with
                              | Some x6237 ->
                                  ignore
                                    (Ojs.call x6236 "push"
                                       [|(any_to_js x6237)|])
                              | None -> ());
                             x6236))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x6248 : 'tags this) ->
        fun ~searchElement:(x6244 : float) ->
          fun ?fromIndex:(x6245 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x6250 = this_to_js Obj.magic x6248 in
                 Ojs.call (Ojs.get_prop_ascii x6250 "indexOf") "apply"
                   [|x6250;((let x6246 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6246 "push"
                                  [|(Ojs.float_to_js x6244)|]);
                             (match x6245 with
                              | Some x6247 ->
                                  ignore
                                    (Ojs.call x6246 "push"
                                       [|(Ojs.float_to_js x6247)|])
                              | None -> ());
                             x6246))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x6254 : 'tags this) ->
        fun ?separator:(x6251 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x6256 = this_to_js Obj.magic x6254 in
               Ojs.call (Ojs.get_prop_ascii x6256 "join") "apply"
                 [|x6256;((let x6252 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6251 with
                            | Some x6253 ->
                                ignore
                                  (Ojs.call x6252 "push"
                                     [|(Ojs.string_to_js x6253)|])
                            | None -> ());
                           x6252))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x6261 : 'tags this) ->
        fun ~searchElement:(x6257 : float) ->
          fun ?fromIndex:(x6258 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x6263 = this_to_js Obj.magic x6261 in
                 Ojs.call (Ojs.get_prop_ascii x6263 "lastIndexOf") "apply"
                   [|x6263;((let x6259 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6259 "push"
                                  [|(Ojs.float_to_js x6257)|]);
                             (match x6258 with
                              | Some x6260 ->
                                  ignore
                                    (Ojs.call x6259 "push"
                                       [|(Ojs.float_to_js x6260)|])
                              | None -> ());
                             x6259))|])
    let (get_length : 'tags this -> float) =
      fun (x6264 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6264) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x6273 : 'tags this) ->
        fun
          ~callbackfn:(x6266 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x6267 : any option) ->
            fun () ->
              t_of_js
                (let x6275 = this_to_js Obj.magic x6273 in
                 Ojs.call (Ojs.get_prop_ascii x6275 "map") "apply"
                   [|x6275;((let x6268 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6268 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6270 : Ojs.t) ->
                                          fun (x6271 : Ojs.t) ->
                                            fun (x6272 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x6266
                                                   ~value:(Ojs.float_of_js
                                                             x6270)
                                                   ~index:(Ojs.float_of_js
                                                             x6271)
                                                   ~array:(t_of_js x6272))))|]);
                             (match x6267 with
                              | Some x6269 ->
                                  ignore
                                    (Ojs.call x6268 "push"
                                       [|(any_to_js x6269)|])
                              | None -> ());
                             x6268))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x6281 : 'tags this) ->
        fun
          ~callbackfn:(x6276 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6281) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x6277 : Ojs.t) ->
                       fun (x6278 : Ojs.t) ->
                         fun (x6279 : Ojs.t) ->
                           fun (x6280 : Ojs.t) ->
                             Ojs.float_to_js
                               (x6276 ~previousValue:(Ojs.float_of_js x6277)
                                  ~currentValue:(Ojs.float_of_js x6278)
                                  ~currentIndex:(Ojs.float_of_js x6279)
                                  ~array:(t_of_js x6280))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x6289 : 'tags this) ->
        fun
          ~callbackfn:(x6283 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x6288 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x6289) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x6284 : Ojs.t) ->
                         fun (x6285 : Ojs.t) ->
                           fun (x6286 : Ojs.t) ->
                             fun (x6287 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x6283
                                    ~previousValue:(Ojs.float_of_js x6284)
                                    ~currentValue:(Ojs.float_of_js x6285)
                                    ~currentIndex:(Ojs.float_of_js x6286)
                                    ~array:(t_of_js x6287))));(Ojs.float_to_js
                                                                 x6288)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x6297 : 'tags this) ->
        fun
          ~callbackfn:(x6291 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x6296 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x6297) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x6292 : Ojs.t) ->
                         fun (x6293 : Ojs.t) ->
                           fun (x6294 : Ojs.t) ->
                             fun (x6295 : Ojs.t) ->
                               Obj.magic
                                 (x6291 ~previousValue:(Obj.magic x6292)
                                    ~currentValue:(Ojs.float_of_js x6293)
                                    ~currentIndex:(Ojs.float_of_js x6294)
                                    ~array:(t_of_js x6295))));(Obj.magic
                                                                 x6296)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x6304 : 'tags this) ->
        fun
          ~callbackfn:(x6299 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6304) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x6300 : Ojs.t) ->
                       fun (x6301 : Ojs.t) ->
                         fun (x6302 : Ojs.t) ->
                           fun (x6303 : Ojs.t) ->
                             Ojs.float_to_js
                               (x6299 ~previousValue:(Ojs.float_of_js x6300)
                                  ~currentValue:(Ojs.float_of_js x6301)
                                  ~currentIndex:(Ojs.float_of_js x6302)
                                  ~array:(t_of_js x6303))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x6312 : 'tags this) ->
        fun
          ~callbackfn:(x6306 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x6311 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x6312) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x6307 : Ojs.t) ->
                         fun (x6308 : Ojs.t) ->
                           fun (x6309 : Ojs.t) ->
                             fun (x6310 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x6306
                                    ~previousValue:(Ojs.float_of_js x6307)
                                    ~currentValue:(Ojs.float_of_js x6308)
                                    ~currentIndex:(Ojs.float_of_js x6309)
                                    ~array:(t_of_js x6310))));(Ojs.float_to_js
                                                                 x6311)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x6320 : 'tags this) ->
        fun
          ~callbackfn:(x6314 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x6319 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x6320) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x6315 : Ojs.t) ->
                         fun (x6316 : Ojs.t) ->
                           fun (x6317 : Ojs.t) ->
                             fun (x6318 : Ojs.t) ->
                               Obj.magic
                                 (x6314 ~previousValue:(Obj.magic x6315)
                                    ~currentValue:(Ojs.float_of_js x6316)
                                    ~currentIndex:(Ojs.float_of_js x6317)
                                    ~array:(t_of_js x6318))));(Obj.magic
                                                                 x6319)|])
    let (reverse : 'tags this -> t) =
      fun (x6322 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x6322) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x6329 : 'tags this) ->
        fun ~array:(x6324 : float ArrayLike.t) ->
          fun ?offset:(x6325 : float option) ->
            fun () ->
              ignore
                (let x6331 = this_to_js Obj.magic x6329 in
                 Ojs.call (Ojs.get_prop_ascii x6331 "set") "apply"
                   [|x6331;((let x6326 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6326 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x6324)|]);
                             (match x6325 with
                              | Some x6327 ->
                                  ignore
                                    (Ojs.call x6326 "push"
                                       [|(Ojs.float_to_js x6327)|])
                              | None -> ());
                             x6326))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x6337 : 'tags this) ->
        fun ?start:(x6332 : float option) ->
          fun ?end_:(x6333 : float option) ->
            fun () ->
              t_of_js
                (let x6339 = this_to_js Obj.magic x6337 in
                 Ojs.call (Ojs.get_prop_ascii x6339 "slice") "apply"
                   [|x6339;((let x6334 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x6332 with
                              | Some x6336 ->
                                  ignore
                                    (Ojs.call x6334 "push"
                                       [|(Ojs.float_to_js x6336)|])
                              | None -> ());
                             (match x6333 with
                              | Some x6335 ->
                                  ignore
                                    (Ojs.call x6334 "push"
                                       [|(Ojs.float_to_js x6335)|])
                              | None -> ());
                             x6334))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x6347 : 'tags this) ->
        fun
          ~predicate:(x6340 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x6341 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6349 = this_to_js Obj.magic x6347 in
                 Ojs.call (Ojs.get_prop_ascii x6349 "some") "apply"
                   [|x6349;((let x6342 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6342 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6344 : Ojs.t) ->
                                          fun (x6345 : Ojs.t) ->
                                            fun (x6346 : Ojs.t) ->
                                              unknown_to_js
                                                (x6340
                                                   ~value:(Ojs.float_of_js
                                                             x6344)
                                                   ~index:(Ojs.float_of_js
                                                             x6345)
                                                   ~array:(t_of_js x6346))))|]);
                             (match x6341 with
                              | Some x6343 ->
                                  ignore
                                    (Ojs.call x6342 "push"
                                       [|(any_to_js x6343)|])
                              | None -> ());
                             x6342))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x6355 : 'tags this) ->
        fun ?compareFn:(x6350 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x6357 = this_to_js Obj.magic x6355 in
               Ojs.call (Ojs.get_prop_ascii x6357 "sort") "apply"
                 [|x6357;((let x6351 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6350 with
                            | Some x6352 ->
                                ignore
                                  (Ojs.call x6351 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x6353 : Ojs.t) ->
                                             fun (x6354 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x6352
                                                    ~a:(Ojs.float_of_js x6353)
                                                    ~b:(Ojs.float_of_js x6354))))|])
                            | None -> ());
                           x6351))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x6364 : 'tags this) ->
        fun ?begin_:(x6359 : float option) ->
          fun ?end_:(x6360 : float option) ->
            fun () ->
              t_of_js
                (let x6366 = this_to_js Obj.magic x6364 in
                 Ojs.call (Ojs.get_prop_ascii x6366 "subarray") "apply"
                   [|x6366;((let x6361 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x6359 with
                              | Some x6363 ->
                                  ignore
                                    (Ojs.call x6361 "push"
                                       [|(Ojs.float_to_js x6363)|])
                              | None -> ());
                             (match x6360 with
                              | Some x6362 ->
                                  ignore
                                    (Ojs.call x6361 "push"
                                       [|(Ojs.float_to_js x6362)|])
                              | None -> ());
                             x6361))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x6367 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x6367) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x6369 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x6369) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x6371 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x6371) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x6373 : 'tags this) ->
        fun (x6375 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x6373)
               (Ojs.float_to_js x6375))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x6376 : 'tags this) ->
        fun (x6378 : float) ->
          fun (x6379 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x6376) (Ojs.float_to_js x6378)
              (Ojs.float_to_js x6379)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x6380 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             [|(Iterable.t_to_js Ojs.float_to_js x6380)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x6382 : float Iterable.t) ->
        fun ?mapfn:(x6383 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x6384 : any option) ->
            fun () ->
              t_of_js
                (let x6391 = Ojs.get_prop_ascii Ojs.global "Uint8Array" in
                 Ojs.call (Ojs.get_prop_ascii x6391 "from") "apply"
                   [|x6391;((let x6385 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6385 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x6382)|]);
                             (match x6383 with
                              | Some x6387 ->
                                  ignore
                                    (Ojs.call x6385 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x6388 : Ojs.t) ->
                                               fun (x6389 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x6387
                                                      ~v:(Ojs.float_of_js
                                                            x6388)
                                                      ~k:(Ojs.float_of_js
                                                            x6389))))|])
                              | None -> ());
                             (match x6384 with
                              | Some x6386 ->
                                  ignore
                                    (Ojs.call x6385 "push"
                                       [|(any_to_js x6386)|])
                              | None -> ());
                             x6385))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x6392 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             [|(Ojs.float_to_js x6392)|])
    let (create''' : (ArrayBufferLike.t, float ArrayLike.t) union2 -> t) =
      fun (x6393 : (ArrayBufferLike.t, float ArrayLike.t) union2) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             [|(union2_to_js ArrayBufferLike.t_to_js
                  (fun (x6395 : float ArrayLike.t) ->
                     ArrayLike.t_to_js Ojs.float_to_js x6395) x6393)|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x6397 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x6398 : float option) ->
          fun ?length:(x6399 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Uint8Array")
                   (let x6400 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x6400 "push"
                         [|(ArrayBufferLike.t_to_js x6397)|]);
                    (match x6398 with
                     | Some x6402 ->
                         ignore
                           (Ojs.call x6400 "push" [|(Ojs.float_to_js x6402)|])
                     | None -> ());
                    (match x6399 with
                     | Some x6401 ->
                         ignore
                           (Ojs.call x6400 "push" [|(Ojs.float_to_js x6401)|])
                     | None -> ());
                    x6400))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x6403 : float list) ->
        t_of_js
          (let x6406 = Ojs.get_prop_ascii Ojs.global "Uint8Array" in
           Ojs.call (Ojs.get_prop_ascii x6406 "of") "apply"
             [|x6406;((let x6404 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x6405 : float) ->
                            ignore
                              (Ojs.call x6404 "push"
                                 [|(Ojs.float_to_js x6405)|])) x6403;
                       x6404))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x6407 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Uint8Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x6407)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x6409 : 'T ArrayLike.t) ->
        fun ~mapfn:(x6410 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x6411 : any option) ->
            fun () ->
              t_of_js
                (let x6417 = Ojs.get_prop_ascii Ojs.global "Uint8Array" in
                 Ojs.call (Ojs.get_prop_ascii x6417 "from") "apply"
                   [|x6417;((let x6412 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6412 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x6409)|]);
                             ignore
                               (Ojs.call x6412 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x6414 : Ojs.t) ->
                                          fun (x6415 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x6410 ~v:(Obj.magic x6414)
                                                 ~k:(Ojs.float_of_js x6415))))|]);
                             (match x6411 with
                              | Some x6413 ->
                                  ignore
                                    (Ojs.call x6412 "push"
                                       [|(any_to_js x6413)|])
                              | None -> ());
                             x6412))|])
    let cast_from = Obj.magic
  end
module Uint32Array =
  struct
    type t =
      [ `Uint32Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6419 : Ojs.t) -> t_of_js x6419
    and t_0_to_js : t_0 -> Ojs.t = fun (x6418 : t) -> t_to_js x6418
    type tags =
      [ `Uint32Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Uint32Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6422 : Ojs.t) -> intf_of_js __tags_of_js x6422
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6420 : __tags intf) -> intf_to_js __tags_to_js x6420
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x6428 : 'tags this) ->
        fun ~searchElement:(x6424 : float) ->
          fun ?fromIndex:(x6425 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6430 = this_to_js Obj.magic x6428 in
                 Ojs.call (Ojs.get_prop_ascii x6430 "includes") "apply"
                   [|x6430;((let x6426 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6426 "push"
                                  [|(Ojs.float_to_js x6424)|]);
                             (match x6425 with
                              | Some x6427 ->
                                  ignore
                                    (Ojs.call x6426 "push"
                                       [|(Ojs.float_to_js x6427)|])
                              | None -> ());
                             x6426))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x6431 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x6433 : Ojs.t) ->
             let x6434 = x6433 in
             ((Ojs.float_of_js (Ojs.array_get x6434 0)),
               (Ojs.float_of_js (Ojs.array_get x6434 1))))
          (Ojs.call (this_to_js Obj.magic x6431) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x6435 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x6435) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x6438 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x6438) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x6441 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6441)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x6443 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6443) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x6445 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6445) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x6447 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6447) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x6454 : 'tags this) ->
        fun ~target:(x6449 : float) ->
          fun ~start:(x6450 : float) ->
            fun ?end_:(x6451 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x6456 = this_to_js Obj.magic x6454 in
                   Ojs.call (Ojs.get_prop_ascii x6456 "copyWithin") "apply"
                     [|x6456;((let x6452 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6452 "push"
                                    [|(Ojs.float_to_js x6449)|]);
                               ignore
                                 (Ojs.call x6452 "push"
                                    [|(Ojs.float_to_js x6450)|]);
                               (match x6451 with
                                | Some x6453 ->
                                    ignore
                                      (Ojs.call x6452 "push"
                                         [|(Ojs.float_to_js x6453)|])
                                | None -> ());
                               x6452))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x6465 : 'tags this) ->
        fun
          ~predicate:(x6458 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x6459 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6467 = this_to_js Obj.magic x6465 in
                 Ojs.call (Ojs.get_prop_ascii x6467 "every") "apply"
                   [|x6467;((let x6460 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6460 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6462 : Ojs.t) ->
                                          fun (x6463 : Ojs.t) ->
                                            fun (x6464 : Ojs.t) ->
                                              unknown_to_js
                                                (x6458
                                                   ~value:(Ojs.float_of_js
                                                             x6462)
                                                   ~index:(Ojs.float_of_js
                                                             x6463)
                                                   ~array:(t_of_js x6464))))|]);
                             (match x6459 with
                              | Some x6461 ->
                                  ignore
                                    (Ojs.call x6460 "push"
                                       [|(any_to_js x6461)|])
                              | None -> ());
                             x6460))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x6474 : 'tags this) ->
        fun ~value:(x6468 : float) ->
          fun ?start:(x6469 : float option) ->
            fun ?end_:(x6470 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x6476 = this_to_js Obj.magic x6474 in
                   Ojs.call (Ojs.get_prop_ascii x6476 "fill") "apply"
                     [|x6476;((let x6471 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6471 "push"
                                    [|(Ojs.float_to_js x6468)|]);
                               (match x6469 with
                                | Some x6473 ->
                                    ignore
                                      (Ojs.call x6471 "push"
                                         [|(Ojs.float_to_js x6473)|])
                                | None -> ());
                               (match x6470 with
                                | Some x6472 ->
                                    ignore
                                      (Ojs.call x6471 "push"
                                         [|(Ojs.float_to_js x6472)|])
                                | None -> ());
                               x6471))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x6485 : 'tags this) ->
        fun ~predicate:(x6478 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x6479 : any option) ->
            fun () ->
              t_of_js
                (let x6487 = this_to_js Obj.magic x6485 in
                 Ojs.call (Ojs.get_prop_ascii x6487 "filter") "apply"
                   [|x6487;((let x6480 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6480 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6482 : Ojs.t) ->
                                          fun (x6483 : Ojs.t) ->
                                            fun (x6484 : Ojs.t) ->
                                              any_to_js
                                                (x6478
                                                   ~value:(Ojs.float_of_js
                                                             x6482)
                                                   ~index:(Ojs.float_of_js
                                                             x6483)
                                                   ~array:(t_of_js x6484))))|]);
                             (match x6479 with
                              | Some x6481 ->
                                  ignore
                                    (Ojs.call x6480 "push"
                                       [|(any_to_js x6481)|])
                              | None -> ());
                             x6480))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x6495 : 'tags this) ->
        fun ~predicate:(x6488 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x6489 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x6497 = this_to_js Obj.magic x6495 in
                 Ojs.call (Ojs.get_prop_ascii x6497 "find") "apply"
                   [|x6497;((let x6490 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6490 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6492 : Ojs.t) ->
                                          fun (x6493 : Ojs.t) ->
                                            fun (x6494 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x6488
                                                   ~value:(Ojs.float_of_js
                                                             x6492)
                                                   ~index:(Ojs.float_of_js
                                                             x6493)
                                                   ~obj:(t_of_js x6494))))|]);
                             (match x6489 with
                              | Some x6491 ->
                                  ignore
                                    (Ojs.call x6490 "push"
                                       [|(any_to_js x6491)|])
                              | None -> ());
                             x6490))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x6506 : 'tags this) ->
        fun ~predicate:(x6499 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x6500 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x6508 = this_to_js Obj.magic x6506 in
                 Ojs.call (Ojs.get_prop_ascii x6508 "findIndex") "apply"
                   [|x6508;((let x6501 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6501 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6503 : Ojs.t) ->
                                          fun (x6504 : Ojs.t) ->
                                            fun (x6505 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x6499
                                                   ~value:(Ojs.float_of_js
                                                             x6503)
                                                   ~index:(Ojs.float_of_js
                                                             x6504)
                                                   ~obj:(t_of_js x6505))))|]);
                             (match x6500 with
                              | Some x6502 ->
                                  ignore
                                    (Ojs.call x6501 "push"
                                       [|(any_to_js x6502)|])
                              | None -> ());
                             x6501))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x6516 : 'tags this) ->
        fun
          ~callbackfn:(x6509 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x6510 : any option) ->
            fun () ->
              ignore
                (let x6518 = this_to_js Obj.magic x6516 in
                 Ojs.call (Ojs.get_prop_ascii x6518 "forEach") "apply"
                   [|x6518;((let x6511 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6511 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6513 : Ojs.t) ->
                                          fun (x6514 : Ojs.t) ->
                                            fun (x6515 : Ojs.t) ->
                                              x6509
                                                ~value:(Ojs.float_of_js x6513)
                                                ~index:(Ojs.float_of_js x6514)
                                                ~array:(t_of_js x6515)))|]);
                             (match x6510 with
                              | Some x6512 ->
                                  ignore
                                    (Ojs.call x6511 "push"
                                       [|(any_to_js x6512)|])
                              | None -> ());
                             x6511))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x6523 : 'tags this) ->
        fun ~searchElement:(x6519 : float) ->
          fun ?fromIndex:(x6520 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x6525 = this_to_js Obj.magic x6523 in
                 Ojs.call (Ojs.get_prop_ascii x6525 "indexOf") "apply"
                   [|x6525;((let x6521 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6521 "push"
                                  [|(Ojs.float_to_js x6519)|]);
                             (match x6520 with
                              | Some x6522 ->
                                  ignore
                                    (Ojs.call x6521 "push"
                                       [|(Ojs.float_to_js x6522)|])
                              | None -> ());
                             x6521))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x6529 : 'tags this) ->
        fun ?separator:(x6526 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x6531 = this_to_js Obj.magic x6529 in
               Ojs.call (Ojs.get_prop_ascii x6531 "join") "apply"
                 [|x6531;((let x6527 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6526 with
                            | Some x6528 ->
                                ignore
                                  (Ojs.call x6527 "push"
                                     [|(Ojs.string_to_js x6528)|])
                            | None -> ());
                           x6527))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x6536 : 'tags this) ->
        fun ~searchElement:(x6532 : float) ->
          fun ?fromIndex:(x6533 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x6538 = this_to_js Obj.magic x6536 in
                 Ojs.call (Ojs.get_prop_ascii x6538 "lastIndexOf") "apply"
                   [|x6538;((let x6534 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6534 "push"
                                  [|(Ojs.float_to_js x6532)|]);
                             (match x6533 with
                              | Some x6535 ->
                                  ignore
                                    (Ojs.call x6534 "push"
                                       [|(Ojs.float_to_js x6535)|])
                              | None -> ());
                             x6534))|])
    let (get_length : 'tags this -> float) =
      fun (x6539 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6539) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x6548 : 'tags this) ->
        fun
          ~callbackfn:(x6541 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x6542 : any option) ->
            fun () ->
              t_of_js
                (let x6550 = this_to_js Obj.magic x6548 in
                 Ojs.call (Ojs.get_prop_ascii x6550 "map") "apply"
                   [|x6550;((let x6543 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6543 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6545 : Ojs.t) ->
                                          fun (x6546 : Ojs.t) ->
                                            fun (x6547 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x6541
                                                   ~value:(Ojs.float_of_js
                                                             x6545)
                                                   ~index:(Ojs.float_of_js
                                                             x6546)
                                                   ~array:(t_of_js x6547))))|]);
                             (match x6542 with
                              | Some x6544 ->
                                  ignore
                                    (Ojs.call x6543 "push"
                                       [|(any_to_js x6544)|])
                              | None -> ());
                             x6543))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x6556 : 'tags this) ->
        fun
          ~callbackfn:(x6551 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6556) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x6552 : Ojs.t) ->
                       fun (x6553 : Ojs.t) ->
                         fun (x6554 : Ojs.t) ->
                           fun (x6555 : Ojs.t) ->
                             Ojs.float_to_js
                               (x6551 ~previousValue:(Ojs.float_of_js x6552)
                                  ~currentValue:(Ojs.float_of_js x6553)
                                  ~currentIndex:(Ojs.float_of_js x6554)
                                  ~array:(t_of_js x6555))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x6564 : 'tags this) ->
        fun
          ~callbackfn:(x6558 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x6563 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x6564) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x6559 : Ojs.t) ->
                         fun (x6560 : Ojs.t) ->
                           fun (x6561 : Ojs.t) ->
                             fun (x6562 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x6558
                                    ~previousValue:(Ojs.float_of_js x6559)
                                    ~currentValue:(Ojs.float_of_js x6560)
                                    ~currentIndex:(Ojs.float_of_js x6561)
                                    ~array:(t_of_js x6562))));(Ojs.float_to_js
                                                                 x6563)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x6572 : 'tags this) ->
        fun
          ~callbackfn:(x6566 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x6571 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x6572) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x6567 : Ojs.t) ->
                         fun (x6568 : Ojs.t) ->
                           fun (x6569 : Ojs.t) ->
                             fun (x6570 : Ojs.t) ->
                               Obj.magic
                                 (x6566 ~previousValue:(Obj.magic x6567)
                                    ~currentValue:(Ojs.float_of_js x6568)
                                    ~currentIndex:(Ojs.float_of_js x6569)
                                    ~array:(t_of_js x6570))));(Obj.magic
                                                                 x6571)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x6579 : 'tags this) ->
        fun
          ~callbackfn:(x6574 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6579) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x6575 : Ojs.t) ->
                       fun (x6576 : Ojs.t) ->
                         fun (x6577 : Ojs.t) ->
                           fun (x6578 : Ojs.t) ->
                             Ojs.float_to_js
                               (x6574 ~previousValue:(Ojs.float_of_js x6575)
                                  ~currentValue:(Ojs.float_of_js x6576)
                                  ~currentIndex:(Ojs.float_of_js x6577)
                                  ~array:(t_of_js x6578))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x6587 : 'tags this) ->
        fun
          ~callbackfn:(x6581 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x6586 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x6587) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x6582 : Ojs.t) ->
                         fun (x6583 : Ojs.t) ->
                           fun (x6584 : Ojs.t) ->
                             fun (x6585 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x6581
                                    ~previousValue:(Ojs.float_of_js x6582)
                                    ~currentValue:(Ojs.float_of_js x6583)
                                    ~currentIndex:(Ojs.float_of_js x6584)
                                    ~array:(t_of_js x6585))));(Ojs.float_to_js
                                                                 x6586)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x6595 : 'tags this) ->
        fun
          ~callbackfn:(x6589 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x6594 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x6595) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x6590 : Ojs.t) ->
                         fun (x6591 : Ojs.t) ->
                           fun (x6592 : Ojs.t) ->
                             fun (x6593 : Ojs.t) ->
                               Obj.magic
                                 (x6589 ~previousValue:(Obj.magic x6590)
                                    ~currentValue:(Ojs.float_of_js x6591)
                                    ~currentIndex:(Ojs.float_of_js x6592)
                                    ~array:(t_of_js x6593))));(Obj.magic
                                                                 x6594)|])
    let (reverse : 'tags this -> t) =
      fun (x6597 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x6597) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x6604 : 'tags this) ->
        fun ~array:(x6599 : float ArrayLike.t) ->
          fun ?offset:(x6600 : float option) ->
            fun () ->
              ignore
                (let x6606 = this_to_js Obj.magic x6604 in
                 Ojs.call (Ojs.get_prop_ascii x6606 "set") "apply"
                   [|x6606;((let x6601 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6601 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x6599)|]);
                             (match x6600 with
                              | Some x6602 ->
                                  ignore
                                    (Ojs.call x6601 "push"
                                       [|(Ojs.float_to_js x6602)|])
                              | None -> ());
                             x6601))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x6612 : 'tags this) ->
        fun ?start:(x6607 : float option) ->
          fun ?end_:(x6608 : float option) ->
            fun () ->
              t_of_js
                (let x6614 = this_to_js Obj.magic x6612 in
                 Ojs.call (Ojs.get_prop_ascii x6614 "slice") "apply"
                   [|x6614;((let x6609 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x6607 with
                              | Some x6611 ->
                                  ignore
                                    (Ojs.call x6609 "push"
                                       [|(Ojs.float_to_js x6611)|])
                              | None -> ());
                             (match x6608 with
                              | Some x6610 ->
                                  ignore
                                    (Ojs.call x6609 "push"
                                       [|(Ojs.float_to_js x6610)|])
                              | None -> ());
                             x6609))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x6622 : 'tags this) ->
        fun
          ~predicate:(x6615 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x6616 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6624 = this_to_js Obj.magic x6622 in
                 Ojs.call (Ojs.get_prop_ascii x6624 "some") "apply"
                   [|x6624;((let x6617 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6617 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6619 : Ojs.t) ->
                                          fun (x6620 : Ojs.t) ->
                                            fun (x6621 : Ojs.t) ->
                                              unknown_to_js
                                                (x6615
                                                   ~value:(Ojs.float_of_js
                                                             x6619)
                                                   ~index:(Ojs.float_of_js
                                                             x6620)
                                                   ~array:(t_of_js x6621))))|]);
                             (match x6616 with
                              | Some x6618 ->
                                  ignore
                                    (Ojs.call x6617 "push"
                                       [|(any_to_js x6618)|])
                              | None -> ());
                             x6617))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x6630 : 'tags this) ->
        fun ?compareFn:(x6625 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x6632 = this_to_js Obj.magic x6630 in
               Ojs.call (Ojs.get_prop_ascii x6632 "sort") "apply"
                 [|x6632;((let x6626 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6625 with
                            | Some x6627 ->
                                ignore
                                  (Ojs.call x6626 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x6628 : Ojs.t) ->
                                             fun (x6629 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x6627
                                                    ~a:(Ojs.float_of_js x6628)
                                                    ~b:(Ojs.float_of_js x6629))))|])
                            | None -> ());
                           x6626))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x6639 : 'tags this) ->
        fun ?begin_:(x6634 : float option) ->
          fun ?end_:(x6635 : float option) ->
            fun () ->
              t_of_js
                (let x6641 = this_to_js Obj.magic x6639 in
                 Ojs.call (Ojs.get_prop_ascii x6641 "subarray") "apply"
                   [|x6641;((let x6636 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x6634 with
                              | Some x6638 ->
                                  ignore
                                    (Ojs.call x6636 "push"
                                       [|(Ojs.float_to_js x6638)|])
                              | None -> ());
                             (match x6635 with
                              | Some x6637 ->
                                  ignore
                                    (Ojs.call x6636 "push"
                                       [|(Ojs.float_to_js x6637)|])
                              | None -> ());
                             x6636))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x6642 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x6642) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x6644 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x6644) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x6646 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x6646) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x6648 : 'tags this) ->
        fun (x6650 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x6648)
               (Ojs.float_to_js x6650))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x6651 : 'tags this) ->
        fun (x6653 : float) ->
          fun (x6654 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x6651) (Ojs.float_to_js x6653)
              (Ojs.float_to_js x6654)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint32Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x6655 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             [|(Iterable.t_to_js Ojs.float_to_js x6655)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x6657 : float Iterable.t) ->
        fun ?mapfn:(x6658 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x6659 : any option) ->
            fun () ->
              t_of_js
                (let x6666 = Ojs.get_prop_ascii Ojs.global "Uint32Array" in
                 Ojs.call (Ojs.get_prop_ascii x6666 "from") "apply"
                   [|x6666;((let x6660 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6660 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x6657)|]);
                             (match x6658 with
                              | Some x6662 ->
                                  ignore
                                    (Ojs.call x6660 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x6663 : Ojs.t) ->
                                               fun (x6664 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x6662
                                                      ~v:(Ojs.float_of_js
                                                            x6663)
                                                      ~k:(Ojs.float_of_js
                                                            x6664))))|])
                              | None -> ());
                             (match x6659 with
                              | Some x6661 ->
                                  ignore
                                    (Ojs.call x6660 "push"
                                       [|(any_to_js x6661)|])
                              | None -> ());
                             x6660))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x6667 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             [|(Ojs.float_to_js x6667)|])
    let (create''' : (ArrayBufferLike.t, float ArrayLike.t) union2 -> t) =
      fun (x6668 : (ArrayBufferLike.t, float ArrayLike.t) union2) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             [|(union2_to_js ArrayBufferLike.t_to_js
                  (fun (x6670 : float ArrayLike.t) ->
                     ArrayLike.t_to_js Ojs.float_to_js x6670) x6668)|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x6672 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x6673 : float option) ->
          fun ?length:(x6674 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Uint32Array")
                   (let x6675 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x6675 "push"
                         [|(ArrayBufferLike.t_to_js x6672)|]);
                    (match x6673 with
                     | Some x6677 ->
                         ignore
                           (Ojs.call x6675 "push" [|(Ojs.float_to_js x6677)|])
                     | None -> ());
                    (match x6674 with
                     | Some x6676 ->
                         ignore
                           (Ojs.call x6675 "push" [|(Ojs.float_to_js x6676)|])
                     | None -> ());
                    x6675))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x6678 : float list) ->
        t_of_js
          (let x6681 = Ojs.get_prop_ascii Ojs.global "Uint32Array" in
           Ojs.call (Ojs.get_prop_ascii x6681 "of") "apply"
             [|x6681;((let x6679 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x6680 : float) ->
                            ignore
                              (Ojs.call x6679 "push"
                                 [|(Ojs.float_to_js x6680)|])) x6678;
                       x6679))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x6682 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Uint32Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x6682)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x6684 : 'T ArrayLike.t) ->
        fun ~mapfn:(x6685 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x6686 : any option) ->
            fun () ->
              t_of_js
                (let x6692 = Ojs.get_prop_ascii Ojs.global "Uint32Array" in
                 Ojs.call (Ojs.get_prop_ascii x6692 "from") "apply"
                   [|x6692;((let x6687 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6687 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x6684)|]);
                             ignore
                               (Ojs.call x6687 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x6689 : Ojs.t) ->
                                          fun (x6690 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x6685 ~v:(Obj.magic x6689)
                                                 ~k:(Ojs.float_of_js x6690))))|]);
                             (match x6686 with
                              | Some x6688 ->
                                  ignore
                                    (Ojs.call x6687 "push"
                                       [|(any_to_js x6688)|])
                              | None -> ());
                             x6687))|])
    let cast_from = Obj.magic
  end
module Uint16Array =
  struct
    type t =
      [ `Uint16Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6694 : Ojs.t) -> t_of_js x6694
    and t_0_to_js : t_0 -> Ojs.t = fun (x6693 : t) -> t_to_js x6693
    type tags =
      [ `Uint16Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Uint16Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6697 : Ojs.t) -> intf_of_js __tags_of_js x6697
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6695 : __tags intf) -> intf_to_js __tags_to_js x6695
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x6703 : 'tags this) ->
        fun ~searchElement:(x6699 : float) ->
          fun ?fromIndex:(x6700 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6705 = this_to_js Obj.magic x6703 in
                 Ojs.call (Ojs.get_prop_ascii x6705 "includes") "apply"
                   [|x6705;((let x6701 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6701 "push"
                                  [|(Ojs.float_to_js x6699)|]);
                             (match x6700 with
                              | Some x6702 ->
                                  ignore
                                    (Ojs.call x6701 "push"
                                       [|(Ojs.float_to_js x6702)|])
                              | None -> ());
                             x6701))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x6706 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x6708 : Ojs.t) ->
             let x6709 = x6708 in
             ((Ojs.float_of_js (Ojs.array_get x6709 0)),
               (Ojs.float_of_js (Ojs.array_get x6709 1))))
          (Ojs.call (this_to_js Obj.magic x6706) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x6710 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x6710) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x6713 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x6713) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x6716 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6716)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x6718 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6718) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x6720 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6720) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x6722 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6722) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x6729 : 'tags this) ->
        fun ~target:(x6724 : float) ->
          fun ~start:(x6725 : float) ->
            fun ?end_:(x6726 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x6731 = this_to_js Obj.magic x6729 in
                   Ojs.call (Ojs.get_prop_ascii x6731 "copyWithin") "apply"
                     [|x6731;((let x6727 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6727 "push"
                                    [|(Ojs.float_to_js x6724)|]);
                               ignore
                                 (Ojs.call x6727 "push"
                                    [|(Ojs.float_to_js x6725)|]);
                               (match x6726 with
                                | Some x6728 ->
                                    ignore
                                      (Ojs.call x6727 "push"
                                         [|(Ojs.float_to_js x6728)|])
                                | None -> ());
                               x6727))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x6740 : 'tags this) ->
        fun
          ~predicate:(x6733 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x6734 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6742 = this_to_js Obj.magic x6740 in
                 Ojs.call (Ojs.get_prop_ascii x6742 "every") "apply"
                   [|x6742;((let x6735 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6735 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6737 : Ojs.t) ->
                                          fun (x6738 : Ojs.t) ->
                                            fun (x6739 : Ojs.t) ->
                                              unknown_to_js
                                                (x6733
                                                   ~value:(Ojs.float_of_js
                                                             x6737)
                                                   ~index:(Ojs.float_of_js
                                                             x6738)
                                                   ~array:(t_of_js x6739))))|]);
                             (match x6734 with
                              | Some x6736 ->
                                  ignore
                                    (Ojs.call x6735 "push"
                                       [|(any_to_js x6736)|])
                              | None -> ());
                             x6735))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x6749 : 'tags this) ->
        fun ~value:(x6743 : float) ->
          fun ?start:(x6744 : float option) ->
            fun ?end_:(x6745 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x6751 = this_to_js Obj.magic x6749 in
                   Ojs.call (Ojs.get_prop_ascii x6751 "fill") "apply"
                     [|x6751;((let x6746 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6746 "push"
                                    [|(Ojs.float_to_js x6743)|]);
                               (match x6744 with
                                | Some x6748 ->
                                    ignore
                                      (Ojs.call x6746 "push"
                                         [|(Ojs.float_to_js x6748)|])
                                | None -> ());
                               (match x6745 with
                                | Some x6747 ->
                                    ignore
                                      (Ojs.call x6746 "push"
                                         [|(Ojs.float_to_js x6747)|])
                                | None -> ());
                               x6746))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x6760 : 'tags this) ->
        fun ~predicate:(x6753 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x6754 : any option) ->
            fun () ->
              t_of_js
                (let x6762 = this_to_js Obj.magic x6760 in
                 Ojs.call (Ojs.get_prop_ascii x6762 "filter") "apply"
                   [|x6762;((let x6755 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6755 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6757 : Ojs.t) ->
                                          fun (x6758 : Ojs.t) ->
                                            fun (x6759 : Ojs.t) ->
                                              any_to_js
                                                (x6753
                                                   ~value:(Ojs.float_of_js
                                                             x6757)
                                                   ~index:(Ojs.float_of_js
                                                             x6758)
                                                   ~array:(t_of_js x6759))))|]);
                             (match x6754 with
                              | Some x6756 ->
                                  ignore
                                    (Ojs.call x6755 "push"
                                       [|(any_to_js x6756)|])
                              | None -> ());
                             x6755))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x6770 : 'tags this) ->
        fun ~predicate:(x6763 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x6764 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x6772 = this_to_js Obj.magic x6770 in
                 Ojs.call (Ojs.get_prop_ascii x6772 "find") "apply"
                   [|x6772;((let x6765 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6765 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6767 : Ojs.t) ->
                                          fun (x6768 : Ojs.t) ->
                                            fun (x6769 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x6763
                                                   ~value:(Ojs.float_of_js
                                                             x6767)
                                                   ~index:(Ojs.float_of_js
                                                             x6768)
                                                   ~obj:(t_of_js x6769))))|]);
                             (match x6764 with
                              | Some x6766 ->
                                  ignore
                                    (Ojs.call x6765 "push"
                                       [|(any_to_js x6766)|])
                              | None -> ());
                             x6765))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x6781 : 'tags this) ->
        fun ~predicate:(x6774 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x6775 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x6783 = this_to_js Obj.magic x6781 in
                 Ojs.call (Ojs.get_prop_ascii x6783 "findIndex") "apply"
                   [|x6783;((let x6776 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6776 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6778 : Ojs.t) ->
                                          fun (x6779 : Ojs.t) ->
                                            fun (x6780 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x6774
                                                   ~value:(Ojs.float_of_js
                                                             x6778)
                                                   ~index:(Ojs.float_of_js
                                                             x6779)
                                                   ~obj:(t_of_js x6780))))|]);
                             (match x6775 with
                              | Some x6777 ->
                                  ignore
                                    (Ojs.call x6776 "push"
                                       [|(any_to_js x6777)|])
                              | None -> ());
                             x6776))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x6791 : 'tags this) ->
        fun
          ~callbackfn:(x6784 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x6785 : any option) ->
            fun () ->
              ignore
                (let x6793 = this_to_js Obj.magic x6791 in
                 Ojs.call (Ojs.get_prop_ascii x6793 "forEach") "apply"
                   [|x6793;((let x6786 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6786 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6788 : Ojs.t) ->
                                          fun (x6789 : Ojs.t) ->
                                            fun (x6790 : Ojs.t) ->
                                              x6784
                                                ~value:(Ojs.float_of_js x6788)
                                                ~index:(Ojs.float_of_js x6789)
                                                ~array:(t_of_js x6790)))|]);
                             (match x6785 with
                              | Some x6787 ->
                                  ignore
                                    (Ojs.call x6786 "push"
                                       [|(any_to_js x6787)|])
                              | None -> ());
                             x6786))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x6798 : 'tags this) ->
        fun ~searchElement:(x6794 : float) ->
          fun ?fromIndex:(x6795 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x6800 = this_to_js Obj.magic x6798 in
                 Ojs.call (Ojs.get_prop_ascii x6800 "indexOf") "apply"
                   [|x6800;((let x6796 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6796 "push"
                                  [|(Ojs.float_to_js x6794)|]);
                             (match x6795 with
                              | Some x6797 ->
                                  ignore
                                    (Ojs.call x6796 "push"
                                       [|(Ojs.float_to_js x6797)|])
                              | None -> ());
                             x6796))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x6804 : 'tags this) ->
        fun ?separator:(x6801 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x6806 = this_to_js Obj.magic x6804 in
               Ojs.call (Ojs.get_prop_ascii x6806 "join") "apply"
                 [|x6806;((let x6802 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6801 with
                            | Some x6803 ->
                                ignore
                                  (Ojs.call x6802 "push"
                                     [|(Ojs.string_to_js x6803)|])
                            | None -> ());
                           x6802))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x6811 : 'tags this) ->
        fun ~searchElement:(x6807 : float) ->
          fun ?fromIndex:(x6808 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x6813 = this_to_js Obj.magic x6811 in
                 Ojs.call (Ojs.get_prop_ascii x6813 "lastIndexOf") "apply"
                   [|x6813;((let x6809 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6809 "push"
                                  [|(Ojs.float_to_js x6807)|]);
                             (match x6808 with
                              | Some x6810 ->
                                  ignore
                                    (Ojs.call x6809 "push"
                                       [|(Ojs.float_to_js x6810)|])
                              | None -> ());
                             x6809))|])
    let (get_length : 'tags this -> float) =
      fun (x6814 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6814) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x6823 : 'tags this) ->
        fun
          ~callbackfn:(x6816 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x6817 : any option) ->
            fun () ->
              t_of_js
                (let x6825 = this_to_js Obj.magic x6823 in
                 Ojs.call (Ojs.get_prop_ascii x6825 "map") "apply"
                   [|x6825;((let x6818 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6818 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6820 : Ojs.t) ->
                                          fun (x6821 : Ojs.t) ->
                                            fun (x6822 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x6816
                                                   ~value:(Ojs.float_of_js
                                                             x6820)
                                                   ~index:(Ojs.float_of_js
                                                             x6821)
                                                   ~array:(t_of_js x6822))))|]);
                             (match x6817 with
                              | Some x6819 ->
                                  ignore
                                    (Ojs.call x6818 "push"
                                       [|(any_to_js x6819)|])
                              | None -> ());
                             x6818))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x6831 : 'tags this) ->
        fun
          ~callbackfn:(x6826 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6831) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x6827 : Ojs.t) ->
                       fun (x6828 : Ojs.t) ->
                         fun (x6829 : Ojs.t) ->
                           fun (x6830 : Ojs.t) ->
                             Ojs.float_to_js
                               (x6826 ~previousValue:(Ojs.float_of_js x6827)
                                  ~currentValue:(Ojs.float_of_js x6828)
                                  ~currentIndex:(Ojs.float_of_js x6829)
                                  ~array:(t_of_js x6830))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x6839 : 'tags this) ->
        fun
          ~callbackfn:(x6833 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x6838 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x6839) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x6834 : Ojs.t) ->
                         fun (x6835 : Ojs.t) ->
                           fun (x6836 : Ojs.t) ->
                             fun (x6837 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x6833
                                    ~previousValue:(Ojs.float_of_js x6834)
                                    ~currentValue:(Ojs.float_of_js x6835)
                                    ~currentIndex:(Ojs.float_of_js x6836)
                                    ~array:(t_of_js x6837))));(Ojs.float_to_js
                                                                 x6838)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x6847 : 'tags this) ->
        fun
          ~callbackfn:(x6841 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x6846 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x6847) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x6842 : Ojs.t) ->
                         fun (x6843 : Ojs.t) ->
                           fun (x6844 : Ojs.t) ->
                             fun (x6845 : Ojs.t) ->
                               Obj.magic
                                 (x6841 ~previousValue:(Obj.magic x6842)
                                    ~currentValue:(Ojs.float_of_js x6843)
                                    ~currentIndex:(Ojs.float_of_js x6844)
                                    ~array:(t_of_js x6845))));(Obj.magic
                                                                 x6846)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x6854 : 'tags this) ->
        fun
          ~callbackfn:(x6849 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6854) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x6850 : Ojs.t) ->
                       fun (x6851 : Ojs.t) ->
                         fun (x6852 : Ojs.t) ->
                           fun (x6853 : Ojs.t) ->
                             Ojs.float_to_js
                               (x6849 ~previousValue:(Ojs.float_of_js x6850)
                                  ~currentValue:(Ojs.float_of_js x6851)
                                  ~currentIndex:(Ojs.float_of_js x6852)
                                  ~array:(t_of_js x6853))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x6862 : 'tags this) ->
        fun
          ~callbackfn:(x6856 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x6861 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x6862) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x6857 : Ojs.t) ->
                         fun (x6858 : Ojs.t) ->
                           fun (x6859 : Ojs.t) ->
                             fun (x6860 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x6856
                                    ~previousValue:(Ojs.float_of_js x6857)
                                    ~currentValue:(Ojs.float_of_js x6858)
                                    ~currentIndex:(Ojs.float_of_js x6859)
                                    ~array:(t_of_js x6860))));(Ojs.float_to_js
                                                                 x6861)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x6870 : 'tags this) ->
        fun
          ~callbackfn:(x6864 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x6869 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x6870) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x6865 : Ojs.t) ->
                         fun (x6866 : Ojs.t) ->
                           fun (x6867 : Ojs.t) ->
                             fun (x6868 : Ojs.t) ->
                               Obj.magic
                                 (x6864 ~previousValue:(Obj.magic x6865)
                                    ~currentValue:(Ojs.float_of_js x6866)
                                    ~currentIndex:(Ojs.float_of_js x6867)
                                    ~array:(t_of_js x6868))));(Obj.magic
                                                                 x6869)|])
    let (reverse : 'tags this -> t) =
      fun (x6872 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x6872) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x6879 : 'tags this) ->
        fun ~array:(x6874 : float ArrayLike.t) ->
          fun ?offset:(x6875 : float option) ->
            fun () ->
              ignore
                (let x6881 = this_to_js Obj.magic x6879 in
                 Ojs.call (Ojs.get_prop_ascii x6881 "set") "apply"
                   [|x6881;((let x6876 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6876 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x6874)|]);
                             (match x6875 with
                              | Some x6877 ->
                                  ignore
                                    (Ojs.call x6876 "push"
                                       [|(Ojs.float_to_js x6877)|])
                              | None -> ());
                             x6876))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x6887 : 'tags this) ->
        fun ?start:(x6882 : float option) ->
          fun ?end_:(x6883 : float option) ->
            fun () ->
              t_of_js
                (let x6889 = this_to_js Obj.magic x6887 in
                 Ojs.call (Ojs.get_prop_ascii x6889 "slice") "apply"
                   [|x6889;((let x6884 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x6882 with
                              | Some x6886 ->
                                  ignore
                                    (Ojs.call x6884 "push"
                                       [|(Ojs.float_to_js x6886)|])
                              | None -> ());
                             (match x6883 with
                              | Some x6885 ->
                                  ignore
                                    (Ojs.call x6884 "push"
                                       [|(Ojs.float_to_js x6885)|])
                              | None -> ());
                             x6884))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x6897 : 'tags this) ->
        fun
          ~predicate:(x6890 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x6891 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6899 = this_to_js Obj.magic x6897 in
                 Ojs.call (Ojs.get_prop_ascii x6899 "some") "apply"
                   [|x6899;((let x6892 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6892 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6894 : Ojs.t) ->
                                          fun (x6895 : Ojs.t) ->
                                            fun (x6896 : Ojs.t) ->
                                              unknown_to_js
                                                (x6890
                                                   ~value:(Ojs.float_of_js
                                                             x6894)
                                                   ~index:(Ojs.float_of_js
                                                             x6895)
                                                   ~array:(t_of_js x6896))))|]);
                             (match x6891 with
                              | Some x6893 ->
                                  ignore
                                    (Ojs.call x6892 "push"
                                       [|(any_to_js x6893)|])
                              | None -> ());
                             x6892))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x6905 : 'tags this) ->
        fun ?compareFn:(x6900 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x6907 = this_to_js Obj.magic x6905 in
               Ojs.call (Ojs.get_prop_ascii x6907 "sort") "apply"
                 [|x6907;((let x6901 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6900 with
                            | Some x6902 ->
                                ignore
                                  (Ojs.call x6901 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x6903 : Ojs.t) ->
                                             fun (x6904 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x6902
                                                    ~a:(Ojs.float_of_js x6903)
                                                    ~b:(Ojs.float_of_js x6904))))|])
                            | None -> ());
                           x6901))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x6914 : 'tags this) ->
        fun ?begin_:(x6909 : float option) ->
          fun ?end_:(x6910 : float option) ->
            fun () ->
              t_of_js
                (let x6916 = this_to_js Obj.magic x6914 in
                 Ojs.call (Ojs.get_prop_ascii x6916 "subarray") "apply"
                   [|x6916;((let x6911 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x6909 with
                              | Some x6913 ->
                                  ignore
                                    (Ojs.call x6911 "push"
                                       [|(Ojs.float_to_js x6913)|])
                              | None -> ());
                             (match x6910 with
                              | Some x6912 ->
                                  ignore
                                    (Ojs.call x6911 "push"
                                       [|(Ojs.float_to_js x6912)|])
                              | None -> ());
                             x6911))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x6917 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x6917) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x6919 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x6919) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x6921 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x6921) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x6923 : 'tags this) ->
        fun (x6925 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x6923)
               (Ojs.float_to_js x6925))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x6926 : 'tags this) ->
        fun (x6928 : float) ->
          fun (x6929 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x6926) (Ojs.float_to_js x6928)
              (Ojs.float_to_js x6929)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint16Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x6930 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             [|(Iterable.t_to_js Ojs.float_to_js x6930)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x6932 : float Iterable.t) ->
        fun ?mapfn:(x6933 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x6934 : any option) ->
            fun () ->
              t_of_js
                (let x6941 = Ojs.get_prop_ascii Ojs.global "Uint16Array" in
                 Ojs.call (Ojs.get_prop_ascii x6941 "from") "apply"
                   [|x6941;((let x6935 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6935 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x6932)|]);
                             (match x6933 with
                              | Some x6937 ->
                                  ignore
                                    (Ojs.call x6935 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x6938 : Ojs.t) ->
                                               fun (x6939 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x6937
                                                      ~v:(Ojs.float_of_js
                                                            x6938)
                                                      ~k:(Ojs.float_of_js
                                                            x6939))))|])
                              | None -> ());
                             (match x6934 with
                              | Some x6936 ->
                                  ignore
                                    (Ojs.call x6935 "push"
                                       [|(any_to_js x6936)|])
                              | None -> ());
                             x6935))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x6942 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             [|(Ojs.float_to_js x6942)|])
    let (create''' : (ArrayBufferLike.t, float ArrayLike.t) union2 -> t) =
      fun (x6943 : (ArrayBufferLike.t, float ArrayLike.t) union2) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             [|(union2_to_js ArrayBufferLike.t_to_js
                  (fun (x6945 : float ArrayLike.t) ->
                     ArrayLike.t_to_js Ojs.float_to_js x6945) x6943)|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x6947 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x6948 : float option) ->
          fun ?length:(x6949 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Uint16Array")
                   (let x6950 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x6950 "push"
                         [|(ArrayBufferLike.t_to_js x6947)|]);
                    (match x6948 with
                     | Some x6952 ->
                         ignore
                           (Ojs.call x6950 "push" [|(Ojs.float_to_js x6952)|])
                     | None -> ());
                    (match x6949 with
                     | Some x6951 ->
                         ignore
                           (Ojs.call x6950 "push" [|(Ojs.float_to_js x6951)|])
                     | None -> ());
                    x6950))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x6953 : float list) ->
        t_of_js
          (let x6956 = Ojs.get_prop_ascii Ojs.global "Uint16Array" in
           Ojs.call (Ojs.get_prop_ascii x6956 "of") "apply"
             [|x6956;((let x6954 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x6955 : float) ->
                            ignore
                              (Ojs.call x6954 "push"
                                 [|(Ojs.float_to_js x6955)|])) x6953;
                       x6954))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x6957 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Uint16Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x6957)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x6959 : 'T ArrayLike.t) ->
        fun ~mapfn:(x6960 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x6961 : any option) ->
            fun () ->
              t_of_js
                (let x6967 = Ojs.get_prop_ascii Ojs.global "Uint16Array" in
                 Ojs.call (Ojs.get_prop_ascii x6967 "from") "apply"
                   [|x6967;((let x6962 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6962 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x6959)|]);
                             ignore
                               (Ojs.call x6962 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x6964 : Ojs.t) ->
                                          fun (x6965 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x6960 ~v:(Obj.magic x6964)
                                                 ~k:(Ojs.float_of_js x6965))))|]);
                             (match x6961 with
                              | Some x6963 ->
                                  ignore
                                    (Ojs.call x6962 "push"
                                       [|(any_to_js x6963)|])
                              | None -> ());
                             x6962))|])
    let cast_from = Obj.magic
  end
module Int8Array =
  struct
    type t =
      [ `Int8Array  | float ArrayLike.tags_1 | float IterableIterator.tags_1]
        intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6969 : Ojs.t) -> t_of_js x6969
    and t_0_to_js : t_0 -> Ojs.t = fun (x6968 : t) -> t_to_js x6968
    type tags =
      [ `Int8Array  | float ArrayLike.tags_1 | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Int8Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6972 : Ojs.t) -> intf_of_js __tags_of_js x6972
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6970 : __tags intf) -> intf_to_js __tags_to_js x6970
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x6978 : 'tags this) ->
        fun ~searchElement:(x6974 : float) ->
          fun ?fromIndex:(x6975 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6980 = this_to_js Obj.magic x6978 in
                 Ojs.call (Ojs.get_prop_ascii x6980 "includes") "apply"
                   [|x6980;((let x6976 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6976 "push"
                                  [|(Ojs.float_to_js x6974)|]);
                             (match x6975 with
                              | Some x6977 ->
                                  ignore
                                    (Ojs.call x6976 "push"
                                       [|(Ojs.float_to_js x6977)|])
                              | None -> ());
                             x6976))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x6981 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x6983 : Ojs.t) ->
             let x6984 = x6983 in
             ((Ojs.float_of_js (Ojs.array_get x6984 0)),
               (Ojs.float_of_js (Ojs.array_get x6984 1))))
          (Ojs.call (this_to_js Obj.magic x6981) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x6985 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x6985) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x6988 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x6988) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x6991 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6991)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x6993 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6993) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x6995 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6995) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x6997 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6997) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7004 : 'tags this) ->
        fun ~target:(x6999 : float) ->
          fun ~start:(x7000 : float) ->
            fun ?end_:(x7001 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7006 = this_to_js Obj.magic x7004 in
                   Ojs.call (Ojs.get_prop_ascii x7006 "copyWithin") "apply"
                     [|x7006;((let x7002 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7002 "push"
                                    [|(Ojs.float_to_js x6999)|]);
                               ignore
                                 (Ojs.call x7002 "push"
                                    [|(Ojs.float_to_js x7000)|]);
                               (match x7001 with
                                | Some x7003 ->
                                    ignore
                                      (Ojs.call x7002 "push"
                                         [|(Ojs.float_to_js x7003)|])
                                | None -> ());
                               x7002))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7015 : 'tags this) ->
        fun
          ~predicate:(x7008 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7009 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7017 = this_to_js Obj.magic x7015 in
                 Ojs.call (Ojs.get_prop_ascii x7017 "every") "apply"
                   [|x7017;((let x7010 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7010 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7012 : Ojs.t) ->
                                          fun (x7013 : Ojs.t) ->
                                            fun (x7014 : Ojs.t) ->
                                              unknown_to_js
                                                (x7008
                                                   ~value:(Ojs.float_of_js
                                                             x7012)
                                                   ~index:(Ojs.float_of_js
                                                             x7013)
                                                   ~array:(t_of_js x7014))))|]);
                             (match x7009 with
                              | Some x7011 ->
                                  ignore
                                    (Ojs.call x7010 "push"
                                       [|(any_to_js x7011)|])
                              | None -> ());
                             x7010))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7024 : 'tags this) ->
        fun ~value:(x7018 : float) ->
          fun ?start:(x7019 : float option) ->
            fun ?end_:(x7020 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7026 = this_to_js Obj.magic x7024 in
                   Ojs.call (Ojs.get_prop_ascii x7026 "fill") "apply"
                     [|x7026;((let x7021 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7021 "push"
                                    [|(Ojs.float_to_js x7018)|]);
                               (match x7019 with
                                | Some x7023 ->
                                    ignore
                                      (Ojs.call x7021 "push"
                                         [|(Ojs.float_to_js x7023)|])
                                | None -> ());
                               (match x7020 with
                                | Some x7022 ->
                                    ignore
                                      (Ojs.call x7021 "push"
                                         [|(Ojs.float_to_js x7022)|])
                                | None -> ());
                               x7021))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7035 : 'tags this) ->
        fun ~predicate:(x7028 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x7029 : any option) ->
            fun () ->
              t_of_js
                (let x7037 = this_to_js Obj.magic x7035 in
                 Ojs.call (Ojs.get_prop_ascii x7037 "filter") "apply"
                   [|x7037;((let x7030 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7030 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7032 : Ojs.t) ->
                                          fun (x7033 : Ojs.t) ->
                                            fun (x7034 : Ojs.t) ->
                                              any_to_js
                                                (x7028
                                                   ~value:(Ojs.float_of_js
                                                             x7032)
                                                   ~index:(Ojs.float_of_js
                                                             x7033)
                                                   ~array:(t_of_js x7034))))|]);
                             (match x7029 with
                              | Some x7031 ->
                                  ignore
                                    (Ojs.call x7030 "push"
                                       [|(any_to_js x7031)|])
                              | None -> ());
                             x7030))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x7045 : 'tags this) ->
        fun ~predicate:(x7038 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7039 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x7047 = this_to_js Obj.magic x7045 in
                 Ojs.call (Ojs.get_prop_ascii x7047 "find") "apply"
                   [|x7047;((let x7040 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7040 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7042 : Ojs.t) ->
                                          fun (x7043 : Ojs.t) ->
                                            fun (x7044 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7038
                                                   ~value:(Ojs.float_of_js
                                                             x7042)
                                                   ~index:(Ojs.float_of_js
                                                             x7043)
                                                   ~obj:(t_of_js x7044))))|]);
                             (match x7039 with
                              | Some x7041 ->
                                  ignore
                                    (Ojs.call x7040 "push"
                                       [|(any_to_js x7041)|])
                              | None -> ());
                             x7040))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x7056 : 'tags this) ->
        fun ~predicate:(x7049 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7050 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x7058 = this_to_js Obj.magic x7056 in
                 Ojs.call (Ojs.get_prop_ascii x7058 "findIndex") "apply"
                   [|x7058;((let x7051 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7051 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7053 : Ojs.t) ->
                                          fun (x7054 : Ojs.t) ->
                                            fun (x7055 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7049
                                                   ~value:(Ojs.float_of_js
                                                             x7053)
                                                   ~index:(Ojs.float_of_js
                                                             x7054)
                                                   ~obj:(t_of_js x7055))))|]);
                             (match x7050 with
                              | Some x7052 ->
                                  ignore
                                    (Ojs.call x7051 "push"
                                       [|(any_to_js x7052)|])
                              | None -> ());
                             x7051))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x7066 : 'tags this) ->
        fun
          ~callbackfn:(x7059 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x7060 : any option) ->
            fun () ->
              ignore
                (let x7068 = this_to_js Obj.magic x7066 in
                 Ojs.call (Ojs.get_prop_ascii x7068 "forEach") "apply"
                   [|x7068;((let x7061 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7061 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7063 : Ojs.t) ->
                                          fun (x7064 : Ojs.t) ->
                                            fun (x7065 : Ojs.t) ->
                                              x7059
                                                ~value:(Ojs.float_of_js x7063)
                                                ~index:(Ojs.float_of_js x7064)
                                                ~array:(t_of_js x7065)))|]);
                             (match x7060 with
                              | Some x7062 ->
                                  ignore
                                    (Ojs.call x7061 "push"
                                       [|(any_to_js x7062)|])
                              | None -> ());
                             x7061))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7073 : 'tags this) ->
        fun ~searchElement:(x7069 : float) ->
          fun ?fromIndex:(x7070 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7075 = this_to_js Obj.magic x7073 in
                 Ojs.call (Ojs.get_prop_ascii x7075 "indexOf") "apply"
                   [|x7075;((let x7071 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7071 "push"
                                  [|(Ojs.float_to_js x7069)|]);
                             (match x7070 with
                              | Some x7072 ->
                                  ignore
                                    (Ojs.call x7071 "push"
                                       [|(Ojs.float_to_js x7072)|])
                              | None -> ());
                             x7071))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x7079 : 'tags this) ->
        fun ?separator:(x7076 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x7081 = this_to_js Obj.magic x7079 in
               Ojs.call (Ojs.get_prop_ascii x7081 "join") "apply"
                 [|x7081;((let x7077 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7076 with
                            | Some x7078 ->
                                ignore
                                  (Ojs.call x7077 "push"
                                     [|(Ojs.string_to_js x7078)|])
                            | None -> ());
                           x7077))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7086 : 'tags this) ->
        fun ~searchElement:(x7082 : float) ->
          fun ?fromIndex:(x7083 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7088 = this_to_js Obj.magic x7086 in
                 Ojs.call (Ojs.get_prop_ascii x7088 "lastIndexOf") "apply"
                   [|x7088;((let x7084 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7084 "push"
                                  [|(Ojs.float_to_js x7082)|]);
                             (match x7083 with
                              | Some x7085 ->
                                  ignore
                                    (Ojs.call x7084 "push"
                                       [|(Ojs.float_to_js x7085)|])
                              | None -> ());
                             x7084))|])
    let (get_length : 'tags this -> float) =
      fun (x7089 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7089) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7098 : 'tags this) ->
        fun
          ~callbackfn:(x7091 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x7092 : any option) ->
            fun () ->
              t_of_js
                (let x7100 = this_to_js Obj.magic x7098 in
                 Ojs.call (Ojs.get_prop_ascii x7100 "map") "apply"
                   [|x7100;((let x7093 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7093 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7095 : Ojs.t) ->
                                          fun (x7096 : Ojs.t) ->
                                            fun (x7097 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x7091
                                                   ~value:(Ojs.float_of_js
                                                             x7095)
                                                   ~index:(Ojs.float_of_js
                                                             x7096)
                                                   ~array:(t_of_js x7097))))|]);
                             (match x7092 with
                              | Some x7094 ->
                                  ignore
                                    (Ojs.call x7093 "push"
                                       [|(any_to_js x7094)|])
                              | None -> ());
                             x7093))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7106 : 'tags this) ->
        fun
          ~callbackfn:(x7101 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7106) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x7102 : Ojs.t) ->
                       fun (x7103 : Ojs.t) ->
                         fun (x7104 : Ojs.t) ->
                           fun (x7105 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7101 ~previousValue:(Ojs.float_of_js x7102)
                                  ~currentValue:(Ojs.float_of_js x7103)
                                  ~currentIndex:(Ojs.float_of_js x7104)
                                  ~array:(t_of_js x7105))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7114 : 'tags this) ->
        fun
          ~callbackfn:(x7108 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7113 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7114) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7109 : Ojs.t) ->
                         fun (x7110 : Ojs.t) ->
                           fun (x7111 : Ojs.t) ->
                             fun (x7112 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7108
                                    ~previousValue:(Ojs.float_of_js x7109)
                                    ~currentValue:(Ojs.float_of_js x7110)
                                    ~currentIndex:(Ojs.float_of_js x7111)
                                    ~array:(t_of_js x7112))));(Ojs.float_to_js
                                                                 x7113)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7122 : 'tags this) ->
        fun
          ~callbackfn:(x7116 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7121 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7122) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7117 : Ojs.t) ->
                         fun (x7118 : Ojs.t) ->
                           fun (x7119 : Ojs.t) ->
                             fun (x7120 : Ojs.t) ->
                               Obj.magic
                                 (x7116 ~previousValue:(Obj.magic x7117)
                                    ~currentValue:(Ojs.float_of_js x7118)
                                    ~currentIndex:(Ojs.float_of_js x7119)
                                    ~array:(t_of_js x7120))));(Obj.magic
                                                                 x7121)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7129 : 'tags this) ->
        fun
          ~callbackfn:(x7124 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7129) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x7125 : Ojs.t) ->
                       fun (x7126 : Ojs.t) ->
                         fun (x7127 : Ojs.t) ->
                           fun (x7128 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7124 ~previousValue:(Ojs.float_of_js x7125)
                                  ~currentValue:(Ojs.float_of_js x7126)
                                  ~currentIndex:(Ojs.float_of_js x7127)
                                  ~array:(t_of_js x7128))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7137 : 'tags this) ->
        fun
          ~callbackfn:(x7131 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7136 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7137) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7132 : Ojs.t) ->
                         fun (x7133 : Ojs.t) ->
                           fun (x7134 : Ojs.t) ->
                             fun (x7135 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7131
                                    ~previousValue:(Ojs.float_of_js x7132)
                                    ~currentValue:(Ojs.float_of_js x7133)
                                    ~currentIndex:(Ojs.float_of_js x7134)
                                    ~array:(t_of_js x7135))));(Ojs.float_to_js
                                                                 x7136)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7145 : 'tags this) ->
        fun
          ~callbackfn:(x7139 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7144 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7145) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7140 : Ojs.t) ->
                         fun (x7141 : Ojs.t) ->
                           fun (x7142 : Ojs.t) ->
                             fun (x7143 : Ojs.t) ->
                               Obj.magic
                                 (x7139 ~previousValue:(Obj.magic x7140)
                                    ~currentValue:(Ojs.float_of_js x7141)
                                    ~currentIndex:(Ojs.float_of_js x7142)
                                    ~array:(t_of_js x7143))));(Obj.magic
                                                                 x7144)|])
    let (reverse : 'tags this -> t) =
      fun (x7147 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7147) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x7154 : 'tags this) ->
        fun ~array:(x7149 : float ArrayLike.t) ->
          fun ?offset:(x7150 : float option) ->
            fun () ->
              ignore
                (let x7156 = this_to_js Obj.magic x7154 in
                 Ojs.call (Ojs.get_prop_ascii x7156 "set") "apply"
                   [|x7156;((let x7151 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7151 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x7149)|]);
                             (match x7150 with
                              | Some x7152 ->
                                  ignore
                                    (Ojs.call x7151 "push"
                                       [|(Ojs.float_to_js x7152)|])
                              | None -> ());
                             x7151))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x7162 : 'tags this) ->
        fun ?start:(x7157 : float option) ->
          fun ?end_:(x7158 : float option) ->
            fun () ->
              t_of_js
                (let x7164 = this_to_js Obj.magic x7162 in
                 Ojs.call (Ojs.get_prop_ascii x7164 "slice") "apply"
                   [|x7164;((let x7159 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7157 with
                              | Some x7161 ->
                                  ignore
                                    (Ojs.call x7159 "push"
                                       [|(Ojs.float_to_js x7161)|])
                              | None -> ());
                             (match x7158 with
                              | Some x7160 ->
                                  ignore
                                    (Ojs.call x7159 "push"
                                       [|(Ojs.float_to_js x7160)|])
                              | None -> ());
                             x7159))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7172 : 'tags this) ->
        fun
          ~predicate:(x7165 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7166 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7174 = this_to_js Obj.magic x7172 in
                 Ojs.call (Ojs.get_prop_ascii x7174 "some") "apply"
                   [|x7174;((let x7167 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7167 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7169 : Ojs.t) ->
                                          fun (x7170 : Ojs.t) ->
                                            fun (x7171 : Ojs.t) ->
                                              unknown_to_js
                                                (x7165
                                                   ~value:(Ojs.float_of_js
                                                             x7169)
                                                   ~index:(Ojs.float_of_js
                                                             x7170)
                                                   ~array:(t_of_js x7171))))|]);
                             (match x7166 with
                              | Some x7168 ->
                                  ignore
                                    (Ojs.call x7167 "push"
                                       [|(any_to_js x7168)|])
                              | None -> ());
                             x7167))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x7180 : 'tags this) ->
        fun ?compareFn:(x7175 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x7182 = this_to_js Obj.magic x7180 in
               Ojs.call (Ojs.get_prop_ascii x7182 "sort") "apply"
                 [|x7182;((let x7176 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7175 with
                            | Some x7177 ->
                                ignore
                                  (Ojs.call x7176 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x7178 : Ojs.t) ->
                                             fun (x7179 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x7177
                                                    ~a:(Ojs.float_of_js x7178)
                                                    ~b:(Ojs.float_of_js x7179))))|])
                            | None -> ());
                           x7176))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x7189 : 'tags this) ->
        fun ?begin_:(x7184 : float option) ->
          fun ?end_:(x7185 : float option) ->
            fun () ->
              t_of_js
                (let x7191 = this_to_js Obj.magic x7189 in
                 Ojs.call (Ojs.get_prop_ascii x7191 "subarray") "apply"
                   [|x7191;((let x7186 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7184 with
                              | Some x7188 ->
                                  ignore
                                    (Ojs.call x7186 "push"
                                       [|(Ojs.float_to_js x7188)|])
                              | None -> ());
                             (match x7185 with
                              | Some x7187 ->
                                  ignore
                                    (Ojs.call x7186 "push"
                                       [|(Ojs.float_to_js x7187)|])
                              | None -> ());
                             x7186))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x7192 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7192) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x7194 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7194) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x7196 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7196) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x7198 : 'tags this) ->
        fun (x7200 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x7198)
               (Ojs.float_to_js x7200))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x7201 : 'tags this) ->
        fun (x7203 : float) ->
          fun (x7204 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x7201) (Ojs.float_to_js x7203)
              (Ojs.float_to_js x7204)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int8Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x7205 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int8Array")
             [|(Iterable.t_to_js Ojs.float_to_js x7205)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7207 : float Iterable.t) ->
        fun ?mapfn:(x7208 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x7209 : any option) ->
            fun () ->
              t_of_js
                (let x7216 = Ojs.get_prop_ascii Ojs.global "Int8Array" in
                 Ojs.call (Ojs.get_prop_ascii x7216 "from") "apply"
                   [|x7216;((let x7210 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7210 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x7207)|]);
                             (match x7208 with
                              | Some x7212 ->
                                  ignore
                                    (Ojs.call x7210 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x7213 : Ojs.t) ->
                                               fun (x7214 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x7212
                                                      ~v:(Ojs.float_of_js
                                                            x7213)
                                                      ~k:(Ojs.float_of_js
                                                            x7214))))|])
                              | None -> ());
                             (match x7209 with
                              | Some x7211 ->
                                  ignore
                                    (Ojs.call x7210 "push"
                                       [|(any_to_js x7211)|])
                              | None -> ());
                             x7210))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int8Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x7217 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int8Array")
             [|(Ojs.float_to_js x7217)|])
    let (create''' : (ArrayBufferLike.t, float ArrayLike.t) union2 -> t) =
      fun (x7218 : (ArrayBufferLike.t, float ArrayLike.t) union2) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int8Array")
             [|(union2_to_js ArrayBufferLike.t_to_js
                  (fun (x7220 : float ArrayLike.t) ->
                     ArrayLike.t_to_js Ojs.float_to_js x7220) x7218)|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x7222 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x7223 : float option) ->
          fun ?length:(x7224 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Int8Array")
                   (let x7225 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x7225 "push"
                         [|(ArrayBufferLike.t_to_js x7222)|]);
                    (match x7223 with
                     | Some x7227 ->
                         ignore
                           (Ojs.call x7225 "push" [|(Ojs.float_to_js x7227)|])
                     | None -> ());
                    (match x7224 with
                     | Some x7226 ->
                         ignore
                           (Ojs.call x7225 "push" [|(Ojs.float_to_js x7226)|])
                     | None -> ());
                    x7225))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int8Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x7228 : float list) ->
        t_of_js
          (let x7231 = Ojs.get_prop_ascii Ojs.global "Int8Array" in
           Ojs.call (Ojs.get_prop_ascii x7231 "of") "apply"
             [|x7231;((let x7229 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x7230 : float) ->
                            ignore
                              (Ojs.call x7229 "push"
                                 [|(Ojs.float_to_js x7230)|])) x7228;
                       x7229))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x7232 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Int8Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x7232)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7234 : 'T ArrayLike.t) ->
        fun ~mapfn:(x7235 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x7236 : any option) ->
            fun () ->
              t_of_js
                (let x7242 = Ojs.get_prop_ascii Ojs.global "Int8Array" in
                 Ojs.call (Ojs.get_prop_ascii x7242 "from") "apply"
                   [|x7242;((let x7237 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7237 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x7234)|]);
                             ignore
                               (Ojs.call x7237 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x7239 : Ojs.t) ->
                                          fun (x7240 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x7235 ~v:(Obj.magic x7239)
                                                 ~k:(Ojs.float_of_js x7240))))|]);
                             (match x7236 with
                              | Some x7238 ->
                                  ignore
                                    (Ojs.call x7237 "push"
                                       [|(any_to_js x7238)|])
                              | None -> ());
                             x7237))|])
    let cast_from = Obj.magic
  end
module Int32Array =
  struct
    type t =
      [ `Int32Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x7244 : Ojs.t) -> t_of_js x7244
    and t_0_to_js : t_0 -> Ojs.t = fun (x7243 : t) -> t_to_js x7243
    type tags =
      [ `Int32Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Int32Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x7247 : Ojs.t) -> intf_of_js __tags_of_js x7247
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x7245 : __tags intf) -> intf_to_js __tags_to_js x7245
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x7253 : 'tags this) ->
        fun ~searchElement:(x7249 : float) ->
          fun ?fromIndex:(x7250 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7255 = this_to_js Obj.magic x7253 in
                 Ojs.call (Ojs.get_prop_ascii x7255 "includes") "apply"
                   [|x7255;((let x7251 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7251 "push"
                                  [|(Ojs.float_to_js x7249)|]);
                             (match x7250 with
                              | Some x7252 ->
                                  ignore
                                    (Ojs.call x7251 "push"
                                       [|(Ojs.float_to_js x7252)|])
                              | None -> ());
                             x7251))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x7256 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x7258 : Ojs.t) ->
             let x7259 = x7258 in
             ((Ojs.float_of_js (Ojs.array_get x7259 0)),
               (Ojs.float_of_js (Ojs.array_get x7259 1))))
          (Ojs.call (this_to_js Obj.magic x7256) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x7260 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7260) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x7263 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7263) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x7266 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7266)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x7268 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7268) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x7270 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7270) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x7272 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7272) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7279 : 'tags this) ->
        fun ~target:(x7274 : float) ->
          fun ~start:(x7275 : float) ->
            fun ?end_:(x7276 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7281 = this_to_js Obj.magic x7279 in
                   Ojs.call (Ojs.get_prop_ascii x7281 "copyWithin") "apply"
                     [|x7281;((let x7277 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7277 "push"
                                    [|(Ojs.float_to_js x7274)|]);
                               ignore
                                 (Ojs.call x7277 "push"
                                    [|(Ojs.float_to_js x7275)|]);
                               (match x7276 with
                                | Some x7278 ->
                                    ignore
                                      (Ojs.call x7277 "push"
                                         [|(Ojs.float_to_js x7278)|])
                                | None -> ());
                               x7277))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7290 : 'tags this) ->
        fun
          ~predicate:(x7283 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7284 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7292 = this_to_js Obj.magic x7290 in
                 Ojs.call (Ojs.get_prop_ascii x7292 "every") "apply"
                   [|x7292;((let x7285 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7285 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7287 : Ojs.t) ->
                                          fun (x7288 : Ojs.t) ->
                                            fun (x7289 : Ojs.t) ->
                                              unknown_to_js
                                                (x7283
                                                   ~value:(Ojs.float_of_js
                                                             x7287)
                                                   ~index:(Ojs.float_of_js
                                                             x7288)
                                                   ~array:(t_of_js x7289))))|]);
                             (match x7284 with
                              | Some x7286 ->
                                  ignore
                                    (Ojs.call x7285 "push"
                                       [|(any_to_js x7286)|])
                              | None -> ());
                             x7285))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7299 : 'tags this) ->
        fun ~value:(x7293 : float) ->
          fun ?start:(x7294 : float option) ->
            fun ?end_:(x7295 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7301 = this_to_js Obj.magic x7299 in
                   Ojs.call (Ojs.get_prop_ascii x7301 "fill") "apply"
                     [|x7301;((let x7296 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7296 "push"
                                    [|(Ojs.float_to_js x7293)|]);
                               (match x7294 with
                                | Some x7298 ->
                                    ignore
                                      (Ojs.call x7296 "push"
                                         [|(Ojs.float_to_js x7298)|])
                                | None -> ());
                               (match x7295 with
                                | Some x7297 ->
                                    ignore
                                      (Ojs.call x7296 "push"
                                         [|(Ojs.float_to_js x7297)|])
                                | None -> ());
                               x7296))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7310 : 'tags this) ->
        fun ~predicate:(x7303 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x7304 : any option) ->
            fun () ->
              t_of_js
                (let x7312 = this_to_js Obj.magic x7310 in
                 Ojs.call (Ojs.get_prop_ascii x7312 "filter") "apply"
                   [|x7312;((let x7305 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7305 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7307 : Ojs.t) ->
                                          fun (x7308 : Ojs.t) ->
                                            fun (x7309 : Ojs.t) ->
                                              any_to_js
                                                (x7303
                                                   ~value:(Ojs.float_of_js
                                                             x7307)
                                                   ~index:(Ojs.float_of_js
                                                             x7308)
                                                   ~array:(t_of_js x7309))))|]);
                             (match x7304 with
                              | Some x7306 ->
                                  ignore
                                    (Ojs.call x7305 "push"
                                       [|(any_to_js x7306)|])
                              | None -> ());
                             x7305))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x7320 : 'tags this) ->
        fun ~predicate:(x7313 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7314 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x7322 = this_to_js Obj.magic x7320 in
                 Ojs.call (Ojs.get_prop_ascii x7322 "find") "apply"
                   [|x7322;((let x7315 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7315 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7317 : Ojs.t) ->
                                          fun (x7318 : Ojs.t) ->
                                            fun (x7319 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7313
                                                   ~value:(Ojs.float_of_js
                                                             x7317)
                                                   ~index:(Ojs.float_of_js
                                                             x7318)
                                                   ~obj:(t_of_js x7319))))|]);
                             (match x7314 with
                              | Some x7316 ->
                                  ignore
                                    (Ojs.call x7315 "push"
                                       [|(any_to_js x7316)|])
                              | None -> ());
                             x7315))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x7331 : 'tags this) ->
        fun ~predicate:(x7324 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7325 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x7333 = this_to_js Obj.magic x7331 in
                 Ojs.call (Ojs.get_prop_ascii x7333 "findIndex") "apply"
                   [|x7333;((let x7326 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7326 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7328 : Ojs.t) ->
                                          fun (x7329 : Ojs.t) ->
                                            fun (x7330 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7324
                                                   ~value:(Ojs.float_of_js
                                                             x7328)
                                                   ~index:(Ojs.float_of_js
                                                             x7329)
                                                   ~obj:(t_of_js x7330))))|]);
                             (match x7325 with
                              | Some x7327 ->
                                  ignore
                                    (Ojs.call x7326 "push"
                                       [|(any_to_js x7327)|])
                              | None -> ());
                             x7326))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x7341 : 'tags this) ->
        fun
          ~callbackfn:(x7334 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x7335 : any option) ->
            fun () ->
              ignore
                (let x7343 = this_to_js Obj.magic x7341 in
                 Ojs.call (Ojs.get_prop_ascii x7343 "forEach") "apply"
                   [|x7343;((let x7336 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7336 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7338 : Ojs.t) ->
                                          fun (x7339 : Ojs.t) ->
                                            fun (x7340 : Ojs.t) ->
                                              x7334
                                                ~value:(Ojs.float_of_js x7338)
                                                ~index:(Ojs.float_of_js x7339)
                                                ~array:(t_of_js x7340)))|]);
                             (match x7335 with
                              | Some x7337 ->
                                  ignore
                                    (Ojs.call x7336 "push"
                                       [|(any_to_js x7337)|])
                              | None -> ());
                             x7336))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7348 : 'tags this) ->
        fun ~searchElement:(x7344 : float) ->
          fun ?fromIndex:(x7345 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7350 = this_to_js Obj.magic x7348 in
                 Ojs.call (Ojs.get_prop_ascii x7350 "indexOf") "apply"
                   [|x7350;((let x7346 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7346 "push"
                                  [|(Ojs.float_to_js x7344)|]);
                             (match x7345 with
                              | Some x7347 ->
                                  ignore
                                    (Ojs.call x7346 "push"
                                       [|(Ojs.float_to_js x7347)|])
                              | None -> ());
                             x7346))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x7354 : 'tags this) ->
        fun ?separator:(x7351 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x7356 = this_to_js Obj.magic x7354 in
               Ojs.call (Ojs.get_prop_ascii x7356 "join") "apply"
                 [|x7356;((let x7352 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7351 with
                            | Some x7353 ->
                                ignore
                                  (Ojs.call x7352 "push"
                                     [|(Ojs.string_to_js x7353)|])
                            | None -> ());
                           x7352))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7361 : 'tags this) ->
        fun ~searchElement:(x7357 : float) ->
          fun ?fromIndex:(x7358 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7363 = this_to_js Obj.magic x7361 in
                 Ojs.call (Ojs.get_prop_ascii x7363 "lastIndexOf") "apply"
                   [|x7363;((let x7359 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7359 "push"
                                  [|(Ojs.float_to_js x7357)|]);
                             (match x7358 with
                              | Some x7360 ->
                                  ignore
                                    (Ojs.call x7359 "push"
                                       [|(Ojs.float_to_js x7360)|])
                              | None -> ());
                             x7359))|])
    let (get_length : 'tags this -> float) =
      fun (x7364 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7364) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7373 : 'tags this) ->
        fun
          ~callbackfn:(x7366 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x7367 : any option) ->
            fun () ->
              t_of_js
                (let x7375 = this_to_js Obj.magic x7373 in
                 Ojs.call (Ojs.get_prop_ascii x7375 "map") "apply"
                   [|x7375;((let x7368 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7368 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7370 : Ojs.t) ->
                                          fun (x7371 : Ojs.t) ->
                                            fun (x7372 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x7366
                                                   ~value:(Ojs.float_of_js
                                                             x7370)
                                                   ~index:(Ojs.float_of_js
                                                             x7371)
                                                   ~array:(t_of_js x7372))))|]);
                             (match x7367 with
                              | Some x7369 ->
                                  ignore
                                    (Ojs.call x7368 "push"
                                       [|(any_to_js x7369)|])
                              | None -> ());
                             x7368))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7381 : 'tags this) ->
        fun
          ~callbackfn:(x7376 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7381) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x7377 : Ojs.t) ->
                       fun (x7378 : Ojs.t) ->
                         fun (x7379 : Ojs.t) ->
                           fun (x7380 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7376 ~previousValue:(Ojs.float_of_js x7377)
                                  ~currentValue:(Ojs.float_of_js x7378)
                                  ~currentIndex:(Ojs.float_of_js x7379)
                                  ~array:(t_of_js x7380))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7389 : 'tags this) ->
        fun
          ~callbackfn:(x7383 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7388 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7389) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7384 : Ojs.t) ->
                         fun (x7385 : Ojs.t) ->
                           fun (x7386 : Ojs.t) ->
                             fun (x7387 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7383
                                    ~previousValue:(Ojs.float_of_js x7384)
                                    ~currentValue:(Ojs.float_of_js x7385)
                                    ~currentIndex:(Ojs.float_of_js x7386)
                                    ~array:(t_of_js x7387))));(Ojs.float_to_js
                                                                 x7388)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7397 : 'tags this) ->
        fun
          ~callbackfn:(x7391 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7396 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7397) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7392 : Ojs.t) ->
                         fun (x7393 : Ojs.t) ->
                           fun (x7394 : Ojs.t) ->
                             fun (x7395 : Ojs.t) ->
                               Obj.magic
                                 (x7391 ~previousValue:(Obj.magic x7392)
                                    ~currentValue:(Ojs.float_of_js x7393)
                                    ~currentIndex:(Ojs.float_of_js x7394)
                                    ~array:(t_of_js x7395))));(Obj.magic
                                                                 x7396)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7404 : 'tags this) ->
        fun
          ~callbackfn:(x7399 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7404) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x7400 : Ojs.t) ->
                       fun (x7401 : Ojs.t) ->
                         fun (x7402 : Ojs.t) ->
                           fun (x7403 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7399 ~previousValue:(Ojs.float_of_js x7400)
                                  ~currentValue:(Ojs.float_of_js x7401)
                                  ~currentIndex:(Ojs.float_of_js x7402)
                                  ~array:(t_of_js x7403))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7412 : 'tags this) ->
        fun
          ~callbackfn:(x7406 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7411 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7412) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7407 : Ojs.t) ->
                         fun (x7408 : Ojs.t) ->
                           fun (x7409 : Ojs.t) ->
                             fun (x7410 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7406
                                    ~previousValue:(Ojs.float_of_js x7407)
                                    ~currentValue:(Ojs.float_of_js x7408)
                                    ~currentIndex:(Ojs.float_of_js x7409)
                                    ~array:(t_of_js x7410))));(Ojs.float_to_js
                                                                 x7411)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7420 : 'tags this) ->
        fun
          ~callbackfn:(x7414 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7419 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7420) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7415 : Ojs.t) ->
                         fun (x7416 : Ojs.t) ->
                           fun (x7417 : Ojs.t) ->
                             fun (x7418 : Ojs.t) ->
                               Obj.magic
                                 (x7414 ~previousValue:(Obj.magic x7415)
                                    ~currentValue:(Ojs.float_of_js x7416)
                                    ~currentIndex:(Ojs.float_of_js x7417)
                                    ~array:(t_of_js x7418))));(Obj.magic
                                                                 x7419)|])
    let (reverse : 'tags this -> t) =
      fun (x7422 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7422) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x7429 : 'tags this) ->
        fun ~array:(x7424 : float ArrayLike.t) ->
          fun ?offset:(x7425 : float option) ->
            fun () ->
              ignore
                (let x7431 = this_to_js Obj.magic x7429 in
                 Ojs.call (Ojs.get_prop_ascii x7431 "set") "apply"
                   [|x7431;((let x7426 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7426 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x7424)|]);
                             (match x7425 with
                              | Some x7427 ->
                                  ignore
                                    (Ojs.call x7426 "push"
                                       [|(Ojs.float_to_js x7427)|])
                              | None -> ());
                             x7426))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x7437 : 'tags this) ->
        fun ?start:(x7432 : float option) ->
          fun ?end_:(x7433 : float option) ->
            fun () ->
              t_of_js
                (let x7439 = this_to_js Obj.magic x7437 in
                 Ojs.call (Ojs.get_prop_ascii x7439 "slice") "apply"
                   [|x7439;((let x7434 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7432 with
                              | Some x7436 ->
                                  ignore
                                    (Ojs.call x7434 "push"
                                       [|(Ojs.float_to_js x7436)|])
                              | None -> ());
                             (match x7433 with
                              | Some x7435 ->
                                  ignore
                                    (Ojs.call x7434 "push"
                                       [|(Ojs.float_to_js x7435)|])
                              | None -> ());
                             x7434))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7447 : 'tags this) ->
        fun
          ~predicate:(x7440 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7441 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7449 = this_to_js Obj.magic x7447 in
                 Ojs.call (Ojs.get_prop_ascii x7449 "some") "apply"
                   [|x7449;((let x7442 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7442 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7444 : Ojs.t) ->
                                          fun (x7445 : Ojs.t) ->
                                            fun (x7446 : Ojs.t) ->
                                              unknown_to_js
                                                (x7440
                                                   ~value:(Ojs.float_of_js
                                                             x7444)
                                                   ~index:(Ojs.float_of_js
                                                             x7445)
                                                   ~array:(t_of_js x7446))))|]);
                             (match x7441 with
                              | Some x7443 ->
                                  ignore
                                    (Ojs.call x7442 "push"
                                       [|(any_to_js x7443)|])
                              | None -> ());
                             x7442))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x7455 : 'tags this) ->
        fun ?compareFn:(x7450 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x7457 = this_to_js Obj.magic x7455 in
               Ojs.call (Ojs.get_prop_ascii x7457 "sort") "apply"
                 [|x7457;((let x7451 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7450 with
                            | Some x7452 ->
                                ignore
                                  (Ojs.call x7451 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x7453 : Ojs.t) ->
                                             fun (x7454 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x7452
                                                    ~a:(Ojs.float_of_js x7453)
                                                    ~b:(Ojs.float_of_js x7454))))|])
                            | None -> ());
                           x7451))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x7464 : 'tags this) ->
        fun ?begin_:(x7459 : float option) ->
          fun ?end_:(x7460 : float option) ->
            fun () ->
              t_of_js
                (let x7466 = this_to_js Obj.magic x7464 in
                 Ojs.call (Ojs.get_prop_ascii x7466 "subarray") "apply"
                   [|x7466;((let x7461 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7459 with
                              | Some x7463 ->
                                  ignore
                                    (Ojs.call x7461 "push"
                                       [|(Ojs.float_to_js x7463)|])
                              | None -> ());
                             (match x7460 with
                              | Some x7462 ->
                                  ignore
                                    (Ojs.call x7461 "push"
                                       [|(Ojs.float_to_js x7462)|])
                              | None -> ());
                             x7461))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x7467 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7467) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x7469 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7469) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x7471 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7471) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x7473 : 'tags this) ->
        fun (x7475 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x7473)
               (Ojs.float_to_js x7475))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x7476 : 'tags this) ->
        fun (x7478 : float) ->
          fun (x7479 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x7476) (Ojs.float_to_js x7478)
              (Ojs.float_to_js x7479)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int32Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x7480 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int32Array")
             [|(Iterable.t_to_js Ojs.float_to_js x7480)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7482 : float Iterable.t) ->
        fun ?mapfn:(x7483 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x7484 : any option) ->
            fun () ->
              t_of_js
                (let x7491 = Ojs.get_prop_ascii Ojs.global "Int32Array" in
                 Ojs.call (Ojs.get_prop_ascii x7491 "from") "apply"
                   [|x7491;((let x7485 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7485 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x7482)|]);
                             (match x7483 with
                              | Some x7487 ->
                                  ignore
                                    (Ojs.call x7485 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x7488 : Ojs.t) ->
                                               fun (x7489 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x7487
                                                      ~v:(Ojs.float_of_js
                                                            x7488)
                                                      ~k:(Ojs.float_of_js
                                                            x7489))))|])
                              | None -> ());
                             (match x7484 with
                              | Some x7486 ->
                                  ignore
                                    (Ojs.call x7485 "push"
                                       [|(any_to_js x7486)|])
                              | None -> ());
                             x7485))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int32Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x7492 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int32Array")
             [|(Ojs.float_to_js x7492)|])
    let (create''' : (ArrayBufferLike.t, float ArrayLike.t) union2 -> t) =
      fun (x7493 : (ArrayBufferLike.t, float ArrayLike.t) union2) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int32Array")
             [|(union2_to_js ArrayBufferLike.t_to_js
                  (fun (x7495 : float ArrayLike.t) ->
                     ArrayLike.t_to_js Ojs.float_to_js x7495) x7493)|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x7497 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x7498 : float option) ->
          fun ?length:(x7499 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Int32Array")
                   (let x7500 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x7500 "push"
                         [|(ArrayBufferLike.t_to_js x7497)|]);
                    (match x7498 with
                     | Some x7502 ->
                         ignore
                           (Ojs.call x7500 "push" [|(Ojs.float_to_js x7502)|])
                     | None -> ());
                    (match x7499 with
                     | Some x7501 ->
                         ignore
                           (Ojs.call x7500 "push" [|(Ojs.float_to_js x7501)|])
                     | None -> ());
                    x7500))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int32Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x7503 : float list) ->
        t_of_js
          (let x7506 = Ojs.get_prop_ascii Ojs.global "Int32Array" in
           Ojs.call (Ojs.get_prop_ascii x7506 "of") "apply"
             [|x7506;((let x7504 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x7505 : float) ->
                            ignore
                              (Ojs.call x7504 "push"
                                 [|(Ojs.float_to_js x7505)|])) x7503;
                       x7504))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x7507 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Int32Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x7507)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7509 : 'T ArrayLike.t) ->
        fun ~mapfn:(x7510 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x7511 : any option) ->
            fun () ->
              t_of_js
                (let x7517 = Ojs.get_prop_ascii Ojs.global "Int32Array" in
                 Ojs.call (Ojs.get_prop_ascii x7517 "from") "apply"
                   [|x7517;((let x7512 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7512 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x7509)|]);
                             ignore
                               (Ojs.call x7512 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x7514 : Ojs.t) ->
                                          fun (x7515 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x7510 ~v:(Obj.magic x7514)
                                                 ~k:(Ojs.float_of_js x7515))))|]);
                             (match x7511 with
                              | Some x7513 ->
                                  ignore
                                    (Ojs.call x7512 "push"
                                       [|(any_to_js x7513)|])
                              | None -> ());
                             x7512))|])
    let cast_from = Obj.magic
  end
module Int16Array =
  struct
    type t =
      [ `Int16Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x7519 : Ojs.t) -> t_of_js x7519
    and t_0_to_js : t_0 -> Ojs.t = fun (x7518 : t) -> t_to_js x7518
    type tags =
      [ `Int16Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Int16Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x7522 : Ojs.t) -> intf_of_js __tags_of_js x7522
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x7520 : __tags intf) -> intf_to_js __tags_to_js x7520
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x7528 : 'tags this) ->
        fun ~searchElement:(x7524 : float) ->
          fun ?fromIndex:(x7525 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7530 = this_to_js Obj.magic x7528 in
                 Ojs.call (Ojs.get_prop_ascii x7530 "includes") "apply"
                   [|x7530;((let x7526 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7526 "push"
                                  [|(Ojs.float_to_js x7524)|]);
                             (match x7525 with
                              | Some x7527 ->
                                  ignore
                                    (Ojs.call x7526 "push"
                                       [|(Ojs.float_to_js x7527)|])
                              | None -> ());
                             x7526))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x7531 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x7533 : Ojs.t) ->
             let x7534 = x7533 in
             ((Ojs.float_of_js (Ojs.array_get x7534 0)),
               (Ojs.float_of_js (Ojs.array_get x7534 1))))
          (Ojs.call (this_to_js Obj.magic x7531) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x7535 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7535) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x7538 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7538) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x7541 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7541)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x7543 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7543) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x7545 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7545) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x7547 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7547) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7554 : 'tags this) ->
        fun ~target:(x7549 : float) ->
          fun ~start:(x7550 : float) ->
            fun ?end_:(x7551 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7556 = this_to_js Obj.magic x7554 in
                   Ojs.call (Ojs.get_prop_ascii x7556 "copyWithin") "apply"
                     [|x7556;((let x7552 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7552 "push"
                                    [|(Ojs.float_to_js x7549)|]);
                               ignore
                                 (Ojs.call x7552 "push"
                                    [|(Ojs.float_to_js x7550)|]);
                               (match x7551 with
                                | Some x7553 ->
                                    ignore
                                      (Ojs.call x7552 "push"
                                         [|(Ojs.float_to_js x7553)|])
                                | None -> ());
                               x7552))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7565 : 'tags this) ->
        fun
          ~predicate:(x7558 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7559 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7567 = this_to_js Obj.magic x7565 in
                 Ojs.call (Ojs.get_prop_ascii x7567 "every") "apply"
                   [|x7567;((let x7560 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7560 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7562 : Ojs.t) ->
                                          fun (x7563 : Ojs.t) ->
                                            fun (x7564 : Ojs.t) ->
                                              unknown_to_js
                                                (x7558
                                                   ~value:(Ojs.float_of_js
                                                             x7562)
                                                   ~index:(Ojs.float_of_js
                                                             x7563)
                                                   ~array:(t_of_js x7564))))|]);
                             (match x7559 with
                              | Some x7561 ->
                                  ignore
                                    (Ojs.call x7560 "push"
                                       [|(any_to_js x7561)|])
                              | None -> ());
                             x7560))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7574 : 'tags this) ->
        fun ~value:(x7568 : float) ->
          fun ?start:(x7569 : float option) ->
            fun ?end_:(x7570 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7576 = this_to_js Obj.magic x7574 in
                   Ojs.call (Ojs.get_prop_ascii x7576 "fill") "apply"
                     [|x7576;((let x7571 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7571 "push"
                                    [|(Ojs.float_to_js x7568)|]);
                               (match x7569 with
                                | Some x7573 ->
                                    ignore
                                      (Ojs.call x7571 "push"
                                         [|(Ojs.float_to_js x7573)|])
                                | None -> ());
                               (match x7570 with
                                | Some x7572 ->
                                    ignore
                                      (Ojs.call x7571 "push"
                                         [|(Ojs.float_to_js x7572)|])
                                | None -> ());
                               x7571))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7585 : 'tags this) ->
        fun ~predicate:(x7578 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x7579 : any option) ->
            fun () ->
              t_of_js
                (let x7587 = this_to_js Obj.magic x7585 in
                 Ojs.call (Ojs.get_prop_ascii x7587 "filter") "apply"
                   [|x7587;((let x7580 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7580 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7582 : Ojs.t) ->
                                          fun (x7583 : Ojs.t) ->
                                            fun (x7584 : Ojs.t) ->
                                              any_to_js
                                                (x7578
                                                   ~value:(Ojs.float_of_js
                                                             x7582)
                                                   ~index:(Ojs.float_of_js
                                                             x7583)
                                                   ~array:(t_of_js x7584))))|]);
                             (match x7579 with
                              | Some x7581 ->
                                  ignore
                                    (Ojs.call x7580 "push"
                                       [|(any_to_js x7581)|])
                              | None -> ());
                             x7580))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x7595 : 'tags this) ->
        fun ~predicate:(x7588 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7589 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x7597 = this_to_js Obj.magic x7595 in
                 Ojs.call (Ojs.get_prop_ascii x7597 "find") "apply"
                   [|x7597;((let x7590 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7590 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7592 : Ojs.t) ->
                                          fun (x7593 : Ojs.t) ->
                                            fun (x7594 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7588
                                                   ~value:(Ojs.float_of_js
                                                             x7592)
                                                   ~index:(Ojs.float_of_js
                                                             x7593)
                                                   ~obj:(t_of_js x7594))))|]);
                             (match x7589 with
                              | Some x7591 ->
                                  ignore
                                    (Ojs.call x7590 "push"
                                       [|(any_to_js x7591)|])
                              | None -> ());
                             x7590))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x7606 : 'tags this) ->
        fun ~predicate:(x7599 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7600 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x7608 = this_to_js Obj.magic x7606 in
                 Ojs.call (Ojs.get_prop_ascii x7608 "findIndex") "apply"
                   [|x7608;((let x7601 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7601 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7603 : Ojs.t) ->
                                          fun (x7604 : Ojs.t) ->
                                            fun (x7605 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7599
                                                   ~value:(Ojs.float_of_js
                                                             x7603)
                                                   ~index:(Ojs.float_of_js
                                                             x7604)
                                                   ~obj:(t_of_js x7605))))|]);
                             (match x7600 with
                              | Some x7602 ->
                                  ignore
                                    (Ojs.call x7601 "push"
                                       [|(any_to_js x7602)|])
                              | None -> ());
                             x7601))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x7616 : 'tags this) ->
        fun
          ~callbackfn:(x7609 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x7610 : any option) ->
            fun () ->
              ignore
                (let x7618 = this_to_js Obj.magic x7616 in
                 Ojs.call (Ojs.get_prop_ascii x7618 "forEach") "apply"
                   [|x7618;((let x7611 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7611 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7613 : Ojs.t) ->
                                          fun (x7614 : Ojs.t) ->
                                            fun (x7615 : Ojs.t) ->
                                              x7609
                                                ~value:(Ojs.float_of_js x7613)
                                                ~index:(Ojs.float_of_js x7614)
                                                ~array:(t_of_js x7615)))|]);
                             (match x7610 with
                              | Some x7612 ->
                                  ignore
                                    (Ojs.call x7611 "push"
                                       [|(any_to_js x7612)|])
                              | None -> ());
                             x7611))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7623 : 'tags this) ->
        fun ~searchElement:(x7619 : float) ->
          fun ?fromIndex:(x7620 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7625 = this_to_js Obj.magic x7623 in
                 Ojs.call (Ojs.get_prop_ascii x7625 "indexOf") "apply"
                   [|x7625;((let x7621 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7621 "push"
                                  [|(Ojs.float_to_js x7619)|]);
                             (match x7620 with
                              | Some x7622 ->
                                  ignore
                                    (Ojs.call x7621 "push"
                                       [|(Ojs.float_to_js x7622)|])
                              | None -> ());
                             x7621))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x7629 : 'tags this) ->
        fun ?separator:(x7626 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x7631 = this_to_js Obj.magic x7629 in
               Ojs.call (Ojs.get_prop_ascii x7631 "join") "apply"
                 [|x7631;((let x7627 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7626 with
                            | Some x7628 ->
                                ignore
                                  (Ojs.call x7627 "push"
                                     [|(Ojs.string_to_js x7628)|])
                            | None -> ());
                           x7627))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7636 : 'tags this) ->
        fun ~searchElement:(x7632 : float) ->
          fun ?fromIndex:(x7633 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7638 = this_to_js Obj.magic x7636 in
                 Ojs.call (Ojs.get_prop_ascii x7638 "lastIndexOf") "apply"
                   [|x7638;((let x7634 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7634 "push"
                                  [|(Ojs.float_to_js x7632)|]);
                             (match x7633 with
                              | Some x7635 ->
                                  ignore
                                    (Ojs.call x7634 "push"
                                       [|(Ojs.float_to_js x7635)|])
                              | None -> ());
                             x7634))|])
    let (get_length : 'tags this -> float) =
      fun (x7639 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7639) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7648 : 'tags this) ->
        fun
          ~callbackfn:(x7641 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x7642 : any option) ->
            fun () ->
              t_of_js
                (let x7650 = this_to_js Obj.magic x7648 in
                 Ojs.call (Ojs.get_prop_ascii x7650 "map") "apply"
                   [|x7650;((let x7643 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7643 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7645 : Ojs.t) ->
                                          fun (x7646 : Ojs.t) ->
                                            fun (x7647 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x7641
                                                   ~value:(Ojs.float_of_js
                                                             x7645)
                                                   ~index:(Ojs.float_of_js
                                                             x7646)
                                                   ~array:(t_of_js x7647))))|]);
                             (match x7642 with
                              | Some x7644 ->
                                  ignore
                                    (Ojs.call x7643 "push"
                                       [|(any_to_js x7644)|])
                              | None -> ());
                             x7643))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7656 : 'tags this) ->
        fun
          ~callbackfn:(x7651 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7656) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x7652 : Ojs.t) ->
                       fun (x7653 : Ojs.t) ->
                         fun (x7654 : Ojs.t) ->
                           fun (x7655 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7651 ~previousValue:(Ojs.float_of_js x7652)
                                  ~currentValue:(Ojs.float_of_js x7653)
                                  ~currentIndex:(Ojs.float_of_js x7654)
                                  ~array:(t_of_js x7655))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7664 : 'tags this) ->
        fun
          ~callbackfn:(x7658 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7663 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7664) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7659 : Ojs.t) ->
                         fun (x7660 : Ojs.t) ->
                           fun (x7661 : Ojs.t) ->
                             fun (x7662 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7658
                                    ~previousValue:(Ojs.float_of_js x7659)
                                    ~currentValue:(Ojs.float_of_js x7660)
                                    ~currentIndex:(Ojs.float_of_js x7661)
                                    ~array:(t_of_js x7662))));(Ojs.float_to_js
                                                                 x7663)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7672 : 'tags this) ->
        fun
          ~callbackfn:(x7666 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7671 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7672) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7667 : Ojs.t) ->
                         fun (x7668 : Ojs.t) ->
                           fun (x7669 : Ojs.t) ->
                             fun (x7670 : Ojs.t) ->
                               Obj.magic
                                 (x7666 ~previousValue:(Obj.magic x7667)
                                    ~currentValue:(Ojs.float_of_js x7668)
                                    ~currentIndex:(Ojs.float_of_js x7669)
                                    ~array:(t_of_js x7670))));(Obj.magic
                                                                 x7671)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7679 : 'tags this) ->
        fun
          ~callbackfn:(x7674 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7679) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x7675 : Ojs.t) ->
                       fun (x7676 : Ojs.t) ->
                         fun (x7677 : Ojs.t) ->
                           fun (x7678 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7674 ~previousValue:(Ojs.float_of_js x7675)
                                  ~currentValue:(Ojs.float_of_js x7676)
                                  ~currentIndex:(Ojs.float_of_js x7677)
                                  ~array:(t_of_js x7678))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7687 : 'tags this) ->
        fun
          ~callbackfn:(x7681 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7686 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7687) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7682 : Ojs.t) ->
                         fun (x7683 : Ojs.t) ->
                           fun (x7684 : Ojs.t) ->
                             fun (x7685 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7681
                                    ~previousValue:(Ojs.float_of_js x7682)
                                    ~currentValue:(Ojs.float_of_js x7683)
                                    ~currentIndex:(Ojs.float_of_js x7684)
                                    ~array:(t_of_js x7685))));(Ojs.float_to_js
                                                                 x7686)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7695 : 'tags this) ->
        fun
          ~callbackfn:(x7689 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7694 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7695) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7690 : Ojs.t) ->
                         fun (x7691 : Ojs.t) ->
                           fun (x7692 : Ojs.t) ->
                             fun (x7693 : Ojs.t) ->
                               Obj.magic
                                 (x7689 ~previousValue:(Obj.magic x7690)
                                    ~currentValue:(Ojs.float_of_js x7691)
                                    ~currentIndex:(Ojs.float_of_js x7692)
                                    ~array:(t_of_js x7693))));(Obj.magic
                                                                 x7694)|])
    let (reverse : 'tags this -> t) =
      fun (x7697 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7697) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x7704 : 'tags this) ->
        fun ~array:(x7699 : float ArrayLike.t) ->
          fun ?offset:(x7700 : float option) ->
            fun () ->
              ignore
                (let x7706 = this_to_js Obj.magic x7704 in
                 Ojs.call (Ojs.get_prop_ascii x7706 "set") "apply"
                   [|x7706;((let x7701 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7701 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x7699)|]);
                             (match x7700 with
                              | Some x7702 ->
                                  ignore
                                    (Ojs.call x7701 "push"
                                       [|(Ojs.float_to_js x7702)|])
                              | None -> ());
                             x7701))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x7712 : 'tags this) ->
        fun ?start:(x7707 : float option) ->
          fun ?end_:(x7708 : float option) ->
            fun () ->
              t_of_js
                (let x7714 = this_to_js Obj.magic x7712 in
                 Ojs.call (Ojs.get_prop_ascii x7714 "slice") "apply"
                   [|x7714;((let x7709 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7707 with
                              | Some x7711 ->
                                  ignore
                                    (Ojs.call x7709 "push"
                                       [|(Ojs.float_to_js x7711)|])
                              | None -> ());
                             (match x7708 with
                              | Some x7710 ->
                                  ignore
                                    (Ojs.call x7709 "push"
                                       [|(Ojs.float_to_js x7710)|])
                              | None -> ());
                             x7709))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7722 : 'tags this) ->
        fun
          ~predicate:(x7715 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7716 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7724 = this_to_js Obj.magic x7722 in
                 Ojs.call (Ojs.get_prop_ascii x7724 "some") "apply"
                   [|x7724;((let x7717 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7717 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7719 : Ojs.t) ->
                                          fun (x7720 : Ojs.t) ->
                                            fun (x7721 : Ojs.t) ->
                                              unknown_to_js
                                                (x7715
                                                   ~value:(Ojs.float_of_js
                                                             x7719)
                                                   ~index:(Ojs.float_of_js
                                                             x7720)
                                                   ~array:(t_of_js x7721))))|]);
                             (match x7716 with
                              | Some x7718 ->
                                  ignore
                                    (Ojs.call x7717 "push"
                                       [|(any_to_js x7718)|])
                              | None -> ());
                             x7717))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x7730 : 'tags this) ->
        fun ?compareFn:(x7725 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x7732 = this_to_js Obj.magic x7730 in
               Ojs.call (Ojs.get_prop_ascii x7732 "sort") "apply"
                 [|x7732;((let x7726 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7725 with
                            | Some x7727 ->
                                ignore
                                  (Ojs.call x7726 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x7728 : Ojs.t) ->
                                             fun (x7729 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x7727
                                                    ~a:(Ojs.float_of_js x7728)
                                                    ~b:(Ojs.float_of_js x7729))))|])
                            | None -> ());
                           x7726))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x7739 : 'tags this) ->
        fun ?begin_:(x7734 : float option) ->
          fun ?end_:(x7735 : float option) ->
            fun () ->
              t_of_js
                (let x7741 = this_to_js Obj.magic x7739 in
                 Ojs.call (Ojs.get_prop_ascii x7741 "subarray") "apply"
                   [|x7741;((let x7736 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7734 with
                              | Some x7738 ->
                                  ignore
                                    (Ojs.call x7736 "push"
                                       [|(Ojs.float_to_js x7738)|])
                              | None -> ());
                             (match x7735 with
                              | Some x7737 ->
                                  ignore
                                    (Ojs.call x7736 "push"
                                       [|(Ojs.float_to_js x7737)|])
                              | None -> ());
                             x7736))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x7742 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7742) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x7744 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7744) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x7746 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7746) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x7748 : 'tags this) ->
        fun (x7750 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x7748)
               (Ojs.float_to_js x7750))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x7751 : 'tags this) ->
        fun (x7753 : float) ->
          fun (x7754 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x7751) (Ojs.float_to_js x7753)
              (Ojs.float_to_js x7754)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int16Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x7755 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int16Array")
             [|(Iterable.t_to_js Ojs.float_to_js x7755)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7757 : float Iterable.t) ->
        fun ?mapfn:(x7758 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x7759 : any option) ->
            fun () ->
              t_of_js
                (let x7766 = Ojs.get_prop_ascii Ojs.global "Int16Array" in
                 Ojs.call (Ojs.get_prop_ascii x7766 "from") "apply"
                   [|x7766;((let x7760 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7760 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x7757)|]);
                             (match x7758 with
                              | Some x7762 ->
                                  ignore
                                    (Ojs.call x7760 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x7763 : Ojs.t) ->
                                               fun (x7764 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x7762
                                                      ~v:(Ojs.float_of_js
                                                            x7763)
                                                      ~k:(Ojs.float_of_js
                                                            x7764))))|])
                              | None -> ());
                             (match x7759 with
                              | Some x7761 ->
                                  ignore
                                    (Ojs.call x7760 "push"
                                       [|(any_to_js x7761)|])
                              | None -> ());
                             x7760))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int16Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x7767 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int16Array")
             [|(Ojs.float_to_js x7767)|])
    let (create''' : (ArrayBufferLike.t, float ArrayLike.t) union2 -> t) =
      fun (x7768 : (ArrayBufferLike.t, float ArrayLike.t) union2) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int16Array")
             [|(union2_to_js ArrayBufferLike.t_to_js
                  (fun (x7770 : float ArrayLike.t) ->
                     ArrayLike.t_to_js Ojs.float_to_js x7770) x7768)|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x7772 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x7773 : float option) ->
          fun ?length:(x7774 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Int16Array")
                   (let x7775 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x7775 "push"
                         [|(ArrayBufferLike.t_to_js x7772)|]);
                    (match x7773 with
                     | Some x7777 ->
                         ignore
                           (Ojs.call x7775 "push" [|(Ojs.float_to_js x7777)|])
                     | None -> ());
                    (match x7774 with
                     | Some x7776 ->
                         ignore
                           (Ojs.call x7775 "push" [|(Ojs.float_to_js x7776)|])
                     | None -> ());
                    x7775))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int16Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x7778 : float list) ->
        t_of_js
          (let x7781 = Ojs.get_prop_ascii Ojs.global "Int16Array" in
           Ojs.call (Ojs.get_prop_ascii x7781 "of") "apply"
             [|x7781;((let x7779 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x7780 : float) ->
                            ignore
                              (Ojs.call x7779 "push"
                                 [|(Ojs.float_to_js x7780)|])) x7778;
                       x7779))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x7782 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Int16Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x7782)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7784 : 'T ArrayLike.t) ->
        fun ~mapfn:(x7785 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x7786 : any option) ->
            fun () ->
              t_of_js
                (let x7792 = Ojs.get_prop_ascii Ojs.global "Int16Array" in
                 Ojs.call (Ojs.get_prop_ascii x7792 "from") "apply"
                   [|x7792;((let x7787 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7787 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x7784)|]);
                             ignore
                               (Ojs.call x7787 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x7789 : Ojs.t) ->
                                          fun (x7790 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x7785 ~v:(Obj.magic x7789)
                                                 ~k:(Ojs.float_of_js x7790))))|]);
                             (match x7786 with
                              | Some x7788 ->
                                  ignore
                                    (Ojs.call x7787 "push"
                                       [|(any_to_js x7788)|])
                              | None -> ());
                             x7787))|])
    let cast_from = Obj.magic
  end
module BigUint64Array =
  struct
    type t =
      [ `BigUint64Array  | bigint ArrayLike.tags_1
      | bigint IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x7794 : Ojs.t) -> t_of_js x7794
    and t_0_to_js : t_0 -> Ojs.t = fun (x7793 : t) -> t_to_js x7793
    type tags =
      [ `BigUint64Array  | bigint ArrayLike.tags_1
      | bigint IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `BigUint64Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x7797 : Ojs.t) -> intf_of_js __tags_of_js x7797
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x7795 : __tags intf) -> intf_to_js __tags_to_js x7795
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x7799 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7799)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x7801 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7801) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x7803 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7803) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x7805 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7805) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7812 : 'tags this) ->
        fun ~target:(x7807 : float) ->
          fun ~start:(x7808 : float) ->
            fun ?end_:(x7809 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7814 = this_to_js Obj.magic x7812 in
                   Ojs.call (Ojs.get_prop_ascii x7814 "copyWithin") "apply"
                     [|x7814;((let x7810 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7810 "push"
                                    [|(Ojs.float_to_js x7807)|]);
                               ignore
                                 (Ojs.call x7810 "push"
                                    [|(Ojs.float_to_js x7808)|]);
                               (match x7809 with
                                | Some x7811 ->
                                    ignore
                                      (Ojs.call x7810 "push"
                                         [|(Ojs.float_to_js x7811)|])
                                | None -> ());
                               x7810))|])
    let (entries : 'tags this -> (float * bigint) IterableIterator.t) =
      fun (x7816 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x7818 : Ojs.t) ->
             let x7819 = x7818 in
             ((Ojs.float_of_js (Ojs.array_get x7819 0)),
               (bigint_of_js (Ojs.array_get x7819 1))))
          (Ojs.call (this_to_js Obj.magic x7816) "entries" [||])
    let (every :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7827 : 'tags this) ->
        fun
          ~predicate:(x7820 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x7821 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7829 = this_to_js Obj.magic x7827 in
                 Ojs.call (Ojs.get_prop_ascii x7829 "every") "apply"
                   [|x7829;((let x7822 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7822 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7824 : Ojs.t) ->
                                          fun (x7825 : Ojs.t) ->
                                            fun (x7826 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7820
                                                   ~value:(bigint_of_js x7824)
                                                   ~index:(Ojs.float_of_js
                                                             x7825)
                                                   ~array:(t_of_js x7826))))|]);
                             (match x7821 with
                              | Some x7823 ->
                                  ignore
                                    (Ojs.call x7822 "push"
                                       [|(any_to_js x7823)|])
                              | None -> ());
                             x7822))|])
    let (fill :
      'tags this ->
        value:bigint -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7836 : 'tags this) ->
        fun ~value:(x7830 : bigint) ->
          fun ?start:(x7831 : float option) ->
            fun ?end_:(x7832 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7838 = this_to_js Obj.magic x7836 in
                   Ojs.call (Ojs.get_prop_ascii x7838 "fill") "apply"
                     [|x7838;((let x7833 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7833 "push"
                                    [|(bigint_to_js x7830)|]);
                               (match x7831 with
                                | Some x7835 ->
                                    ignore
                                      (Ojs.call x7833 "push"
                                         [|(Ojs.float_to_js x7835)|])
                                | None -> ());
                               (match x7832 with
                                | Some x7834 ->
                                    ignore
                                      (Ojs.call x7833 "push"
                                         [|(Ojs.float_to_js x7834)|])
                                | None -> ());
                               x7833))|])
    let (filter :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7847 : 'tags this) ->
        fun
          ~predicate:(x7840 : value:bigint -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x7841 : any option) ->
            fun () ->
              t_of_js
                (let x7849 = this_to_js Obj.magic x7847 in
                 Ojs.call (Ojs.get_prop_ascii x7849 "filter") "apply"
                   [|x7849;((let x7842 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7842 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7844 : Ojs.t) ->
                                          fun (x7845 : Ojs.t) ->
                                            fun (x7846 : Ojs.t) ->
                                              any_to_js
                                                (x7840
                                                   ~value:(bigint_of_js x7844)
                                                   ~index:(Ojs.float_of_js
                                                             x7845)
                                                   ~array:(t_of_js x7846))))|]);
                             (match x7841 with
                              | Some x7843 ->
                                  ignore
                                    (Ojs.call x7842 "push"
                                       [|(any_to_js x7843)|])
                              | None -> ());
                             x7842))|])
    let (find :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bigint or_undefined)
      =
      fun (x7857 : 'tags this) ->
        fun
          ~predicate:(x7850 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x7851 : any option) ->
            fun () ->
              or_undefined_of_js bigint_of_js
                (let x7859 = this_to_js Obj.magic x7857 in
                 Ojs.call (Ojs.get_prop_ascii x7859 "find") "apply"
                   [|x7859;((let x7852 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7852 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7854 : Ojs.t) ->
                                          fun (x7855 : Ojs.t) ->
                                            fun (x7856 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7850
                                                   ~value:(bigint_of_js x7854)
                                                   ~index:(Ojs.float_of_js
                                                             x7855)
                                                   ~array:(t_of_js x7856))))|]);
                             (match x7851 with
                              | Some x7853 ->
                                  ignore
                                    (Ojs.call x7852 "push"
                                       [|(any_to_js x7853)|])
                              | None -> ());
                             x7852))|])
    let (findIndex :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x7868 : 'tags this) ->
        fun
          ~predicate:(x7861 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x7862 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x7870 = this_to_js Obj.magic x7868 in
                 Ojs.call (Ojs.get_prop_ascii x7870 "findIndex") "apply"
                   [|x7870;((let x7863 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7863 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7865 : Ojs.t) ->
                                          fun (x7866 : Ojs.t) ->
                                            fun (x7867 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7861
                                                   ~value:(bigint_of_js x7865)
                                                   ~index:(Ojs.float_of_js
                                                             x7866)
                                                   ~array:(t_of_js x7867))))|]);
                             (match x7862 with
                              | Some x7864 ->
                                  ignore
                                    (Ojs.call x7863 "push"
                                       [|(any_to_js x7864)|])
                              | None -> ());
                             x7863))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:bigint -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x7878 : 'tags this) ->
        fun
          ~callbackfn:(x7871 :
                        value:bigint -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x7872 : any option) ->
            fun () ->
              ignore
                (let x7880 = this_to_js Obj.magic x7878 in
                 Ojs.call (Ojs.get_prop_ascii x7880 "forEach") "apply"
                   [|x7880;((let x7873 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7873 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7875 : Ojs.t) ->
                                          fun (x7876 : Ojs.t) ->
                                            fun (x7877 : Ojs.t) ->
                                              x7871
                                                ~value:(bigint_of_js x7875)
                                                ~index:(Ojs.float_of_js x7876)
                                                ~array:(t_of_js x7877)))|]);
                             (match x7872 with
                              | Some x7874 ->
                                  ignore
                                    (Ojs.call x7873 "push"
                                       [|(any_to_js x7874)|])
                              | None -> ());
                             x7873))|])
    let (includes :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> bool)
      =
      fun (x7885 : 'tags this) ->
        fun ~searchElement:(x7881 : bigint) ->
          fun ?fromIndex:(x7882 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7887 = this_to_js Obj.magic x7885 in
                 Ojs.call (Ojs.get_prop_ascii x7887 "includes") "apply"
                   [|x7887;((let x7883 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7883 "push"
                                  [|(bigint_to_js x7881)|]);
                             (match x7882 with
                              | Some x7884 ->
                                  ignore
                                    (Ojs.call x7883 "push"
                                       [|(Ojs.float_to_js x7884)|])
                              | None -> ());
                             x7883))|])
    let (indexOf :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> float)
      =
      fun (x7892 : 'tags this) ->
        fun ~searchElement:(x7888 : bigint) ->
          fun ?fromIndex:(x7889 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7894 = this_to_js Obj.magic x7892 in
                 Ojs.call (Ojs.get_prop_ascii x7894 "indexOf") "apply"
                   [|x7894;((let x7890 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7890 "push"
                                  [|(bigint_to_js x7888)|]);
                             (match x7889 with
                              | Some x7891 ->
                                  ignore
                                    (Ojs.call x7890 "push"
                                       [|(Ojs.float_to_js x7891)|])
                              | None -> ());
                             x7890))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x7898 : 'tags this) ->
        fun ?separator:(x7895 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x7900 = this_to_js Obj.magic x7898 in
               Ojs.call (Ojs.get_prop_ascii x7900 "join") "apply"
                 [|x7900;((let x7896 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7895 with
                            | Some x7897 ->
                                ignore
                                  (Ojs.call x7896 "push"
                                     [|(Ojs.string_to_js x7897)|])
                            | None -> ());
                           x7896))|])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x7901 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7901) "keys" [||])
    let (lastIndexOf :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> float)
      =
      fun (x7908 : 'tags this) ->
        fun ~searchElement:(x7904 : bigint) ->
          fun ?fromIndex:(x7905 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7910 = this_to_js Obj.magic x7908 in
                 Ojs.call (Ojs.get_prop_ascii x7910 "lastIndexOf") "apply"
                   [|x7910;((let x7906 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7906 "push"
                                  [|(bigint_to_js x7904)|]);
                             (match x7905 with
                              | Some x7907 ->
                                  ignore
                                    (Ojs.call x7906 "push"
                                       [|(Ojs.float_to_js x7907)|])
                              | None -> ());
                             x7906))|])
    let (get_length : 'tags this -> float) =
      fun (x7911 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7911) "length")
    let (map :
      'tags this ->
        callbackfn:(value:bigint -> index:float -> array:t -> bigint) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7920 : 'tags this) ->
        fun
          ~callbackfn:(x7913 :
                        value:bigint -> index:float -> array:t -> bigint)
          ->
          fun ?thisArg:(x7914 : any option) ->
            fun () ->
              t_of_js
                (let x7922 = this_to_js Obj.magic x7920 in
                 Ojs.call (Ojs.get_prop_ascii x7922 "map") "apply"
                   [|x7922;((let x7915 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7915 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7917 : Ojs.t) ->
                                          fun (x7918 : Ojs.t) ->
                                            fun (x7919 : Ojs.t) ->
                                              bigint_to_js
                                                (x7913
                                                   ~value:(bigint_of_js x7917)
                                                   ~index:(Ojs.float_of_js
                                                             x7918)
                                                   ~array:(t_of_js x7919))))|]);
                             (match x7914 with
                              | Some x7916 ->
                                  ignore
                                    (Ojs.call x7915 "push"
                                       [|(any_to_js x7916)|])
                              | None -> ());
                             x7915))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:bigint ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> bigint)
          -> bigint)
      =
      fun (x7928 : 'tags this) ->
        fun
          ~callbackfn:(x7923 :
                        previousValue:bigint ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> bigint)
          ->
          bigint_of_js
            (Ojs.call (this_to_js Obj.magic x7928) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x7924 : Ojs.t) ->
                       fun (x7925 : Ojs.t) ->
                         fun (x7926 : Ojs.t) ->
                           fun (x7927 : Ojs.t) ->
                             bigint_to_js
                               (x7923 ~previousValue:(bigint_of_js x7924)
                                  ~currentValue:(bigint_of_js x7925)
                                  ~currentIndex:(Ojs.float_of_js x7926)
                                  ~array:(t_of_js x7927))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7936 : 'tags this) ->
        fun
          ~callbackfn:(x7930 :
                        previousValue:'U ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7935 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7936) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7931 : Ojs.t) ->
                         fun (x7932 : Ojs.t) ->
                           fun (x7933 : Ojs.t) ->
                             fun (x7934 : Ojs.t) ->
                               Obj.magic
                                 (x7930 ~previousValue:(Obj.magic x7931)
                                    ~currentValue:(bigint_of_js x7932)
                                    ~currentIndex:(Ojs.float_of_js x7933)
                                    ~array:(t_of_js x7934))));(Obj.magic
                                                                 x7935)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:bigint ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> bigint)
          -> bigint)
      =
      fun (x7943 : 'tags this) ->
        fun
          ~callbackfn:(x7938 :
                        previousValue:bigint ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> bigint)
          ->
          bigint_of_js
            (Ojs.call (this_to_js Obj.magic x7943) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x7939 : Ojs.t) ->
                       fun (x7940 : Ojs.t) ->
                         fun (x7941 : Ojs.t) ->
                           fun (x7942 : Ojs.t) ->
                             bigint_to_js
                               (x7938 ~previousValue:(bigint_of_js x7939)
                                  ~currentValue:(bigint_of_js x7940)
                                  ~currentIndex:(Ojs.float_of_js x7941)
                                  ~array:(t_of_js x7942))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7951 : 'tags this) ->
        fun
          ~callbackfn:(x7945 :
                        previousValue:'U ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7950 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7951) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7946 : Ojs.t) ->
                         fun (x7947 : Ojs.t) ->
                           fun (x7948 : Ojs.t) ->
                             fun (x7949 : Ojs.t) ->
                               Obj.magic
                                 (x7945 ~previousValue:(Obj.magic x7946)
                                    ~currentValue:(bigint_of_js x7947)
                                    ~currentIndex:(Ojs.float_of_js x7948)
                                    ~array:(t_of_js x7949))));(Obj.magic
                                                                 x7950)|])
    let (reverse : 'tags this -> 'tags this) =
      fun (x7953 : 'tags this) ->
        this_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic x7953) "reverse" [||])
    let (set_ :
      'tags this -> array:bigint ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x7961 : 'tags this) ->
        fun ~array:(x7956 : bigint ArrayLike.t) ->
          fun ?offset:(x7957 : float option) ->
            fun () ->
              ignore
                (let x7963 = this_to_js Obj.magic x7961 in
                 Ojs.call (Ojs.get_prop_ascii x7963 "set") "apply"
                   [|x7963;((let x7958 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7958 "push"
                                  [|(ArrayLike.t_to_js bigint_to_js x7956)|]);
                             (match x7957 with
                              | Some x7959 ->
                                  ignore
                                    (Ojs.call x7958 "push"
                                       [|(Ojs.float_to_js x7959)|])
                              | None -> ());
                             x7958))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x7969 : 'tags this) ->
        fun ?start:(x7964 : float option) ->
          fun ?end_:(x7965 : float option) ->
            fun () ->
              t_of_js
                (let x7971 = this_to_js Obj.magic x7969 in
                 Ojs.call (Ojs.get_prop_ascii x7971 "slice") "apply"
                   [|x7971;((let x7966 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7964 with
                              | Some x7968 ->
                                  ignore
                                    (Ojs.call x7966 "push"
                                       [|(Ojs.float_to_js x7968)|])
                              | None -> ());
                             (match x7965 with
                              | Some x7967 ->
                                  ignore
                                    (Ojs.call x7966 "push"
                                       [|(Ojs.float_to_js x7967)|])
                              | None -> ());
                             x7966))|])
    let (some :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7979 : 'tags this) ->
        fun
          ~predicate:(x7972 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x7973 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7981 = this_to_js Obj.magic x7979 in
                 Ojs.call (Ojs.get_prop_ascii x7981 "some") "apply"
                   [|x7981;((let x7974 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7974 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7976 : Ojs.t) ->
                                          fun (x7977 : Ojs.t) ->
                                            fun (x7978 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7972
                                                   ~value:(bigint_of_js x7976)
                                                   ~index:(Ojs.float_of_js
                                                             x7977)
                                                   ~array:(t_of_js x7978))))|]);
                             (match x7973 with
                              | Some x7975 ->
                                  ignore
                                    (Ojs.call x7974 "push"
                                       [|(any_to_js x7975)|])
                              | None -> ());
                             x7974))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:bigint -> b:bigint -> bigint or_number) ->
          unit -> 'tags this)
      =
      fun (x7988 : 'tags this) ->
        fun
          ?compareFn:(x7982 :
                       (a:bigint -> b:bigint -> bigint or_number) option)
          ->
          fun () ->
            this_of_js Obj.magic
              (let x7990 = this_to_js Obj.magic x7988 in
               Ojs.call (Ojs.get_prop_ascii x7990 "sort") "apply"
                 [|x7990;((let x7983 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7982 with
                            | Some x7984 ->
                                ignore
                                  (Ojs.call x7983 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x7985 : Ojs.t) ->
                                             fun (x7986 : Ojs.t) ->
                                               or_number_to_js bigint_to_js
                                                 (x7984
                                                    ~a:(bigint_of_js x7985)
                                                    ~b:(bigint_of_js x7986))))|])
                            | None -> ());
                           x7983))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x7997 : 'tags this) ->
        fun ?begin_:(x7992 : float option) ->
          fun ?end_:(x7993 : float option) ->
            fun () ->
              t_of_js
                (let x7999 = this_to_js Obj.magic x7997 in
                 Ojs.call (Ojs.get_prop_ascii x7999 "subarray") "apply"
                   [|x7999;((let x7994 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7992 with
                              | Some x7996 ->
                                  ignore
                                    (Ojs.call x7994 "push"
                                       [|(Ojs.float_to_js x7996)|])
                              | None -> ());
                             (match x7993 with
                              | Some x7995 ->
                                  ignore
                                    (Ojs.call x7994 "push"
                                       [|(Ojs.float_to_js x7995)|])
                              | None -> ());
                             x7994))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x8000 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8000) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x8002 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8002) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x8004 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x8004) "valueOf" [||])
    let (values : 'tags this -> bigint IterableIterator.t) =
      fun (x8006 : 'tags this) ->
        IterableIterator.t_of_js bigint_of_js
          (Ojs.call (this_to_js Obj.magic x8006) "values" [||])
    let (get : 'tags this -> float -> bigint) =
      fun (x8009 : 'tags this) ->
        fun (x8011 : float) ->
          bigint_of_js
            (Ojs.get_prop (this_to_js Obj.magic x8009)
               (Ojs.float_to_js x8011))
    let (set : 'tags this -> float -> bigint -> unit) =
      fun (x8012 : 'tags this) ->
        fun (x8014 : float) ->
          fun (x8015 : bigint) ->
            Ojs.set_prop (this_to_js Obj.magic x8012) (Ojs.float_to_js x8014)
              (bigint_to_js x8015)
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "BigUint64Array") "prototype")
    let (create : ?length:float -> unit -> t) =
      fun ?length:(x8016 : float option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "BigUint64Array")
               (let x8017 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x8016 with
                 | Some x8018 ->
                     ignore
                       (Ojs.call x8017 "push" [|(Ojs.float_to_js x8018)|])
                 | None -> ());
                x8017))
    let (create' : bigint Iterable.t -> t) =
      fun (x8019 : bigint Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "BigUint64Array")
             [|(Iterable.t_to_js bigint_to_js x8019)|])
    let (create'' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x8021 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x8022 : float option) ->
          fun ?length:(x8023 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "BigUint64Array")
                   (let x8024 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x8024 "push"
                         [|(ArrayBufferLike.t_to_js x8021)|]);
                    (match x8022 with
                     | Some x8026 ->
                         ignore
                           (Ojs.call x8024 "push" [|(Ojs.float_to_js x8026)|])
                     | None -> ());
                    (match x8023 with
                     | Some x8025 ->
                         ignore
                           (Ojs.call x8024 "push" [|(Ojs.float_to_js x8025)|])
                     | None -> ());
                    x8024))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "BigUint64Array")
             "BYTES_PER_ELEMENT")
    let (of_ : bigint list -> t) =
      fun (x8027 : bigint list) ->
        t_of_js
          (let x8030 = Ojs.get_prop_ascii Ojs.global "BigUint64Array" in
           Ojs.call (Ojs.get_prop_ascii x8030 "of") "apply"
             [|x8030;((let x8028 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x8029 : bigint) ->
                            ignore
                              (Ojs.call x8028 "push" [|(bigint_to_js x8029)|]))
                         x8027;
                       x8028))|])
    let (from : bigint ArrayLike.t -> t) =
      fun (x8031 : bigint ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "BigUint64Array") "from"
             [|(ArrayLike.t_to_js bigint_to_js x8031)|])
    let (from' :
      arrayLike:'U ArrayLike.t ->
        mapfn:(v:'U -> k:float -> bigint) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x8033 : 'U ArrayLike.t) ->
        fun ~mapfn:(x8034 : v:'U -> k:float -> bigint) ->
          fun ?thisArg:(x8035 : any option) ->
            fun () ->
              t_of_js
                (let x8041 = Ojs.get_prop_ascii Ojs.global "BigUint64Array" in
                 Ojs.call (Ojs.get_prop_ascii x8041 "from") "apply"
                   [|x8041;((let x8036 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8036 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x8033)|]);
                             ignore
                               (Ojs.call x8036 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x8038 : Ojs.t) ->
                                          fun (x8039 : Ojs.t) ->
                                            bigint_to_js
                                              (x8034 ~v:(Obj.magic x8038)
                                                 ~k:(Ojs.float_of_js x8039))))|]);
                             (match x8035 with
                              | Some x8037 ->
                                  ignore
                                    (Ojs.call x8036 "push"
                                       [|(any_to_js x8037)|])
                              | None -> ());
                             x8036))|])
    let cast_from = Obj.magic
  end
module BigInt64Array =
  struct
    type t =
      [ `BigInt64Array  | bigint ArrayLike.tags_1
      | bigint IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8043 : Ojs.t) -> t_of_js x8043
    and t_0_to_js : t_0 -> Ojs.t = fun (x8042 : t) -> t_to_js x8042
    type tags =
      [ `BigInt64Array  | bigint ArrayLike.tags_1
      | bigint IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `BigInt64Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x8046 : Ojs.t) -> intf_of_js __tags_of_js x8046
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x8044 : __tags intf) -> intf_to_js __tags_to_js x8044
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x8048 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8048)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x8050 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8050) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x8052 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8052) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x8054 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8054) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x8061 : 'tags this) ->
        fun ~target:(x8056 : float) ->
          fun ~start:(x8057 : float) ->
            fun ?end_:(x8058 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x8063 = this_to_js Obj.magic x8061 in
                   Ojs.call (Ojs.get_prop_ascii x8063 "copyWithin") "apply"
                     [|x8063;((let x8059 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x8059 "push"
                                    [|(Ojs.float_to_js x8056)|]);
                               ignore
                                 (Ojs.call x8059 "push"
                                    [|(Ojs.float_to_js x8057)|]);
                               (match x8058 with
                                | Some x8060 ->
                                    ignore
                                      (Ojs.call x8059 "push"
                                         [|(Ojs.float_to_js x8060)|])
                                | None -> ());
                               x8059))|])
    let (entries : 'tags this -> (float * bigint) IterableIterator.t) =
      fun (x8065 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x8067 : Ojs.t) ->
             let x8068 = x8067 in
             ((Ojs.float_of_js (Ojs.array_get x8068 0)),
               (bigint_of_js (Ojs.array_get x8068 1))))
          (Ojs.call (this_to_js Obj.magic x8065) "entries" [||])
    let (every :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x8076 : 'tags this) ->
        fun
          ~predicate:(x8069 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x8070 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8078 = this_to_js Obj.magic x8076 in
                 Ojs.call (Ojs.get_prop_ascii x8078 "every") "apply"
                   [|x8078;((let x8071 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8071 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8073 : Ojs.t) ->
                                          fun (x8074 : Ojs.t) ->
                                            fun (x8075 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8069
                                                   ~value:(bigint_of_js x8073)
                                                   ~index:(Ojs.float_of_js
                                                             x8074)
                                                   ~array:(t_of_js x8075))))|]);
                             (match x8070 with
                              | Some x8072 ->
                                  ignore
                                    (Ojs.call x8071 "push"
                                       [|(any_to_js x8072)|])
                              | None -> ());
                             x8071))|])
    let (fill :
      'tags this ->
        value:bigint -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x8085 : 'tags this) ->
        fun ~value:(x8079 : bigint) ->
          fun ?start:(x8080 : float option) ->
            fun ?end_:(x8081 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x8087 = this_to_js Obj.magic x8085 in
                   Ojs.call (Ojs.get_prop_ascii x8087 "fill") "apply"
                     [|x8087;((let x8082 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x8082 "push"
                                    [|(bigint_to_js x8079)|]);
                               (match x8080 with
                                | Some x8084 ->
                                    ignore
                                      (Ojs.call x8082 "push"
                                         [|(Ojs.float_to_js x8084)|])
                                | None -> ());
                               (match x8081 with
                                | Some x8083 ->
                                    ignore
                                      (Ojs.call x8082 "push"
                                         [|(Ojs.float_to_js x8083)|])
                                | None -> ());
                               x8082))|])
    let (filter :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x8096 : 'tags this) ->
        fun
          ~predicate:(x8089 : value:bigint -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x8090 : any option) ->
            fun () ->
              t_of_js
                (let x8098 = this_to_js Obj.magic x8096 in
                 Ojs.call (Ojs.get_prop_ascii x8098 "filter") "apply"
                   [|x8098;((let x8091 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8091 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8093 : Ojs.t) ->
                                          fun (x8094 : Ojs.t) ->
                                            fun (x8095 : Ojs.t) ->
                                              any_to_js
                                                (x8089
                                                   ~value:(bigint_of_js x8093)
                                                   ~index:(Ojs.float_of_js
                                                             x8094)
                                                   ~array:(t_of_js x8095))))|]);
                             (match x8090 with
                              | Some x8092 ->
                                  ignore
                                    (Ojs.call x8091 "push"
                                       [|(any_to_js x8092)|])
                              | None -> ());
                             x8091))|])
    let (find :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bigint or_undefined)
      =
      fun (x8106 : 'tags this) ->
        fun
          ~predicate:(x8099 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x8100 : any option) ->
            fun () ->
              or_undefined_of_js bigint_of_js
                (let x8108 = this_to_js Obj.magic x8106 in
                 Ojs.call (Ojs.get_prop_ascii x8108 "find") "apply"
                   [|x8108;((let x8101 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8101 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8103 : Ojs.t) ->
                                          fun (x8104 : Ojs.t) ->
                                            fun (x8105 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8099
                                                   ~value:(bigint_of_js x8103)
                                                   ~index:(Ojs.float_of_js
                                                             x8104)
                                                   ~array:(t_of_js x8105))))|]);
                             (match x8100 with
                              | Some x8102 ->
                                  ignore
                                    (Ojs.call x8101 "push"
                                       [|(any_to_js x8102)|])
                              | None -> ());
                             x8101))|])
    let (findIndex :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x8117 : 'tags this) ->
        fun
          ~predicate:(x8110 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x8111 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x8119 = this_to_js Obj.magic x8117 in
                 Ojs.call (Ojs.get_prop_ascii x8119 "findIndex") "apply"
                   [|x8119;((let x8112 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8112 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8114 : Ojs.t) ->
                                          fun (x8115 : Ojs.t) ->
                                            fun (x8116 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8110
                                                   ~value:(bigint_of_js x8114)
                                                   ~index:(Ojs.float_of_js
                                                             x8115)
                                                   ~array:(t_of_js x8116))))|]);
                             (match x8111 with
                              | Some x8113 ->
                                  ignore
                                    (Ojs.call x8112 "push"
                                       [|(any_to_js x8113)|])
                              | None -> ());
                             x8112))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:bigint -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x8127 : 'tags this) ->
        fun
          ~callbackfn:(x8120 :
                        value:bigint -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x8121 : any option) ->
            fun () ->
              ignore
                (let x8129 = this_to_js Obj.magic x8127 in
                 Ojs.call (Ojs.get_prop_ascii x8129 "forEach") "apply"
                   [|x8129;((let x8122 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8122 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8124 : Ojs.t) ->
                                          fun (x8125 : Ojs.t) ->
                                            fun (x8126 : Ojs.t) ->
                                              x8120
                                                ~value:(bigint_of_js x8124)
                                                ~index:(Ojs.float_of_js x8125)
                                                ~array:(t_of_js x8126)))|]);
                             (match x8121 with
                              | Some x8123 ->
                                  ignore
                                    (Ojs.call x8122 "push"
                                       [|(any_to_js x8123)|])
                              | None -> ());
                             x8122))|])
    let (includes :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> bool)
      =
      fun (x8134 : 'tags this) ->
        fun ~searchElement:(x8130 : bigint) ->
          fun ?fromIndex:(x8131 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8136 = this_to_js Obj.magic x8134 in
                 Ojs.call (Ojs.get_prop_ascii x8136 "includes") "apply"
                   [|x8136;((let x8132 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8132 "push"
                                  [|(bigint_to_js x8130)|]);
                             (match x8131 with
                              | Some x8133 ->
                                  ignore
                                    (Ojs.call x8132 "push"
                                       [|(Ojs.float_to_js x8133)|])
                              | None -> ());
                             x8132))|])
    let (indexOf :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> float)
      =
      fun (x8141 : 'tags this) ->
        fun ~searchElement:(x8137 : bigint) ->
          fun ?fromIndex:(x8138 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x8143 = this_to_js Obj.magic x8141 in
                 Ojs.call (Ojs.get_prop_ascii x8143 "indexOf") "apply"
                   [|x8143;((let x8139 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8139 "push"
                                  [|(bigint_to_js x8137)|]);
                             (match x8138 with
                              | Some x8140 ->
                                  ignore
                                    (Ojs.call x8139 "push"
                                       [|(Ojs.float_to_js x8140)|])
                              | None -> ());
                             x8139))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x8147 : 'tags this) ->
        fun ?separator:(x8144 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x8149 = this_to_js Obj.magic x8147 in
               Ojs.call (Ojs.get_prop_ascii x8149 "join") "apply"
                 [|x8149;((let x8145 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8144 with
                            | Some x8146 ->
                                ignore
                                  (Ojs.call x8145 "push"
                                     [|(Ojs.string_to_js x8146)|])
                            | None -> ());
                           x8145))|])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x8150 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x8150) "keys" [||])
    let (lastIndexOf :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> float)
      =
      fun (x8157 : 'tags this) ->
        fun ~searchElement:(x8153 : bigint) ->
          fun ?fromIndex:(x8154 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x8159 = this_to_js Obj.magic x8157 in
                 Ojs.call (Ojs.get_prop_ascii x8159 "lastIndexOf") "apply"
                   [|x8159;((let x8155 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8155 "push"
                                  [|(bigint_to_js x8153)|]);
                             (match x8154 with
                              | Some x8156 ->
                                  ignore
                                    (Ojs.call x8155 "push"
                                       [|(Ojs.float_to_js x8156)|])
                              | None -> ());
                             x8155))|])
    let (get_length : 'tags this -> float) =
      fun (x8160 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8160) "length")
    let (map :
      'tags this ->
        callbackfn:(value:bigint -> index:float -> array:t -> bigint) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x8169 : 'tags this) ->
        fun
          ~callbackfn:(x8162 :
                        value:bigint -> index:float -> array:t -> bigint)
          ->
          fun ?thisArg:(x8163 : any option) ->
            fun () ->
              t_of_js
                (let x8171 = this_to_js Obj.magic x8169 in
                 Ojs.call (Ojs.get_prop_ascii x8171 "map") "apply"
                   [|x8171;((let x8164 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8164 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8166 : Ojs.t) ->
                                          fun (x8167 : Ojs.t) ->
                                            fun (x8168 : Ojs.t) ->
                                              bigint_to_js
                                                (x8162
                                                   ~value:(bigint_of_js x8166)
                                                   ~index:(Ojs.float_of_js
                                                             x8167)
                                                   ~array:(t_of_js x8168))))|]);
                             (match x8163 with
                              | Some x8165 ->
                                  ignore
                                    (Ojs.call x8164 "push"
                                       [|(any_to_js x8165)|])
                              | None -> ());
                             x8164))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:bigint ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> bigint)
          -> bigint)
      =
      fun (x8177 : 'tags this) ->
        fun
          ~callbackfn:(x8172 :
                        previousValue:bigint ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> bigint)
          ->
          bigint_of_js
            (Ojs.call (this_to_js Obj.magic x8177) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x8173 : Ojs.t) ->
                       fun (x8174 : Ojs.t) ->
                         fun (x8175 : Ojs.t) ->
                           fun (x8176 : Ojs.t) ->
                             bigint_to_js
                               (x8172 ~previousValue:(bigint_of_js x8173)
                                  ~currentValue:(bigint_of_js x8174)
                                  ~currentIndex:(Ojs.float_of_js x8175)
                                  ~array:(t_of_js x8176))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x8185 : 'tags this) ->
        fun
          ~callbackfn:(x8179 :
                        previousValue:'U ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x8184 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x8185) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x8180 : Ojs.t) ->
                         fun (x8181 : Ojs.t) ->
                           fun (x8182 : Ojs.t) ->
                             fun (x8183 : Ojs.t) ->
                               Obj.magic
                                 (x8179 ~previousValue:(Obj.magic x8180)
                                    ~currentValue:(bigint_of_js x8181)
                                    ~currentIndex:(Ojs.float_of_js x8182)
                                    ~array:(t_of_js x8183))));(Obj.magic
                                                                 x8184)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:bigint ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> bigint)
          -> bigint)
      =
      fun (x8192 : 'tags this) ->
        fun
          ~callbackfn:(x8187 :
                        previousValue:bigint ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> bigint)
          ->
          bigint_of_js
            (Ojs.call (this_to_js Obj.magic x8192) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x8188 : Ojs.t) ->
                       fun (x8189 : Ojs.t) ->
                         fun (x8190 : Ojs.t) ->
                           fun (x8191 : Ojs.t) ->
                             bigint_to_js
                               (x8187 ~previousValue:(bigint_of_js x8188)
                                  ~currentValue:(bigint_of_js x8189)
                                  ~currentIndex:(Ojs.float_of_js x8190)
                                  ~array:(t_of_js x8191))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x8200 : 'tags this) ->
        fun
          ~callbackfn:(x8194 :
                        previousValue:'U ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x8199 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x8200) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x8195 : Ojs.t) ->
                         fun (x8196 : Ojs.t) ->
                           fun (x8197 : Ojs.t) ->
                             fun (x8198 : Ojs.t) ->
                               Obj.magic
                                 (x8194 ~previousValue:(Obj.magic x8195)
                                    ~currentValue:(bigint_of_js x8196)
                                    ~currentIndex:(Ojs.float_of_js x8197)
                                    ~array:(t_of_js x8198))));(Obj.magic
                                                                 x8199)|])
    let (reverse : 'tags this -> 'tags this) =
      fun (x8202 : 'tags this) ->
        this_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic x8202) "reverse" [||])
    let (set_ :
      'tags this -> array:bigint ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x8210 : 'tags this) ->
        fun ~array:(x8205 : bigint ArrayLike.t) ->
          fun ?offset:(x8206 : float option) ->
            fun () ->
              ignore
                (let x8212 = this_to_js Obj.magic x8210 in
                 Ojs.call (Ojs.get_prop_ascii x8212 "set") "apply"
                   [|x8212;((let x8207 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8207 "push"
                                  [|(ArrayLike.t_to_js bigint_to_js x8205)|]);
                             (match x8206 with
                              | Some x8208 ->
                                  ignore
                                    (Ojs.call x8207 "push"
                                       [|(Ojs.float_to_js x8208)|])
                              | None -> ());
                             x8207))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x8218 : 'tags this) ->
        fun ?start:(x8213 : float option) ->
          fun ?end_:(x8214 : float option) ->
            fun () ->
              t_of_js
                (let x8220 = this_to_js Obj.magic x8218 in
                 Ojs.call (Ojs.get_prop_ascii x8220 "slice") "apply"
                   [|x8220;((let x8215 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8213 with
                              | Some x8217 ->
                                  ignore
                                    (Ojs.call x8215 "push"
                                       [|(Ojs.float_to_js x8217)|])
                              | None -> ());
                             (match x8214 with
                              | Some x8216 ->
                                  ignore
                                    (Ojs.call x8215 "push"
                                       [|(Ojs.float_to_js x8216)|])
                              | None -> ());
                             x8215))|])
    let (some :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x8228 : 'tags this) ->
        fun
          ~predicate:(x8221 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x8222 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8230 = this_to_js Obj.magic x8228 in
                 Ojs.call (Ojs.get_prop_ascii x8230 "some") "apply"
                   [|x8230;((let x8223 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8223 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8225 : Ojs.t) ->
                                          fun (x8226 : Ojs.t) ->
                                            fun (x8227 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8221
                                                   ~value:(bigint_of_js x8225)
                                                   ~index:(Ojs.float_of_js
                                                             x8226)
                                                   ~array:(t_of_js x8227))))|]);
                             (match x8222 with
                              | Some x8224 ->
                                  ignore
                                    (Ojs.call x8223 "push"
                                       [|(any_to_js x8224)|])
                              | None -> ());
                             x8223))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:bigint -> b:bigint -> bigint or_number) ->
          unit -> 'tags this)
      =
      fun (x8237 : 'tags this) ->
        fun
          ?compareFn:(x8231 :
                       (a:bigint -> b:bigint -> bigint or_number) option)
          ->
          fun () ->
            this_of_js Obj.magic
              (let x8239 = this_to_js Obj.magic x8237 in
               Ojs.call (Ojs.get_prop_ascii x8239 "sort") "apply"
                 [|x8239;((let x8232 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8231 with
                            | Some x8233 ->
                                ignore
                                  (Ojs.call x8232 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x8234 : Ojs.t) ->
                                             fun (x8235 : Ojs.t) ->
                                               or_number_to_js bigint_to_js
                                                 (x8233
                                                    ~a:(bigint_of_js x8234)
                                                    ~b:(bigint_of_js x8235))))|])
                            | None -> ());
                           x8232))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x8246 : 'tags this) ->
        fun ?begin_:(x8241 : float option) ->
          fun ?end_:(x8242 : float option) ->
            fun () ->
              t_of_js
                (let x8248 = this_to_js Obj.magic x8246 in
                 Ojs.call (Ojs.get_prop_ascii x8248 "subarray") "apply"
                   [|x8248;((let x8243 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8241 with
                              | Some x8245 ->
                                  ignore
                                    (Ojs.call x8243 "push"
                                       [|(Ojs.float_to_js x8245)|])
                              | None -> ());
                             (match x8242 with
                              | Some x8244 ->
                                  ignore
                                    (Ojs.call x8243 "push"
                                       [|(Ojs.float_to_js x8244)|])
                              | None -> ());
                             x8243))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x8249 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8249) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x8251 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8251) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x8253 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x8253) "valueOf" [||])
    let (values : 'tags this -> bigint IterableIterator.t) =
      fun (x8255 : 'tags this) ->
        IterableIterator.t_of_js bigint_of_js
          (Ojs.call (this_to_js Obj.magic x8255) "values" [||])
    let (get : 'tags this -> float -> bigint) =
      fun (x8258 : 'tags this) ->
        fun (x8260 : float) ->
          bigint_of_js
            (Ojs.get_prop (this_to_js Obj.magic x8258)
               (Ojs.float_to_js x8260))
    let (set : 'tags this -> float -> bigint -> unit) =
      fun (x8261 : 'tags this) ->
        fun (x8263 : float) ->
          fun (x8264 : bigint) ->
            Ojs.set_prop (this_to_js Obj.magic x8261) (Ojs.float_to_js x8263)
              (bigint_to_js x8264)
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "BigInt64Array")
             "prototype")
    let (create : ?length:float -> unit -> t) =
      fun ?length:(x8265 : float option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "BigInt64Array")
               (let x8266 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x8265 with
                 | Some x8267 ->
                     ignore
                       (Ojs.call x8266 "push" [|(Ojs.float_to_js x8267)|])
                 | None -> ());
                x8266))
    let (create' : bigint Iterable.t -> t) =
      fun (x8268 : bigint Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "BigInt64Array")
             [|(Iterable.t_to_js bigint_to_js x8268)|])
    let (create'' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x8270 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x8271 : float option) ->
          fun ?length:(x8272 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "BigInt64Array")
                   (let x8273 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x8273 "push"
                         [|(ArrayBufferLike.t_to_js x8270)|]);
                    (match x8271 with
                     | Some x8275 ->
                         ignore
                           (Ojs.call x8273 "push" [|(Ojs.float_to_js x8275)|])
                     | None -> ());
                    (match x8272 with
                     | Some x8274 ->
                         ignore
                           (Ojs.call x8273 "push" [|(Ojs.float_to_js x8274)|])
                     | None -> ());
                    x8273))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "BigInt64Array")
             "BYTES_PER_ELEMENT")
    let (of_ : bigint list -> t) =
      fun (x8276 : bigint list) ->
        t_of_js
          (let x8279 = Ojs.get_prop_ascii Ojs.global "BigInt64Array" in
           Ojs.call (Ojs.get_prop_ascii x8279 "of") "apply"
             [|x8279;((let x8277 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x8278 : bigint) ->
                            ignore
                              (Ojs.call x8277 "push" [|(bigint_to_js x8278)|]))
                         x8276;
                       x8277))|])
    let (from : bigint ArrayLike.t -> t) =
      fun (x8280 : bigint ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "BigInt64Array") "from"
             [|(ArrayLike.t_to_js bigint_to_js x8280)|])
    let (from' :
      arrayLike:'U ArrayLike.t ->
        mapfn:(v:'U -> k:float -> bigint) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x8282 : 'U ArrayLike.t) ->
        fun ~mapfn:(x8283 : v:'U -> k:float -> bigint) ->
          fun ?thisArg:(x8284 : any option) ->
            fun () ->
              t_of_js
                (let x8290 = Ojs.get_prop_ascii Ojs.global "BigInt64Array" in
                 Ojs.call (Ojs.get_prop_ascii x8290 "from") "apply"
                   [|x8290;((let x8285 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8285 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x8282)|]);
                             ignore
                               (Ojs.call x8285 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x8287 : Ojs.t) ->
                                          fun (x8288 : Ojs.t) ->
                                            bigint_to_js
                                              (x8283 ~v:(Obj.magic x8287)
                                                 ~k:(Ojs.float_of_js x8288))))|]);
                             (match x8284 with
                              | Some x8286 ->
                                  ignore
                                    (Ojs.call x8285 "push"
                                       [|(any_to_js x8286)|])
                              | None -> ());
                             x8285))|])
    let cast_from = Obj.magic
  end
module Atomics =
  struct
    let (add :
      typedArray:(Int16Array.t, Int32Array.t, Int8Array.t, Uint16Array.t,
        Uint32Array.t, Uint8Array.t) union6 ->
        index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x8291 :
                      (Int16Array.t, Int32Array.t, Int8Array.t,
                        Uint16Array.t, Uint32Array.t, Uint8Array.t) union6)
        ->
        fun ~index:(x8298 : float) ->
          fun ~value:(x8299 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "add"
                 [|(union6_to_js Int16Array.t_to_js Int32Array.t_to_js
                      Int8Array.t_to_js Uint16Array.t_to_js
                      Uint32Array.t_to_js Uint8Array.t_to_js x8291);(
                   Ojs.float_to_js x8298);(Ojs.float_to_js x8299)|])
    let (and_ :
      typedArray:(Int16Array.t, Int32Array.t, Int8Array.t, Uint16Array.t,
        Uint32Array.t, Uint8Array.t) union6 ->
        index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x8300 :
                      (Int16Array.t, Int32Array.t, Int8Array.t,
                        Uint16Array.t, Uint32Array.t, Uint8Array.t) union6)
        ->
        fun ~index:(x8307 : float) ->
          fun ~value:(x8308 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "and"
                 [|(union6_to_js Int16Array.t_to_js Int32Array.t_to_js
                      Int8Array.t_to_js Uint16Array.t_to_js
                      Uint32Array.t_to_js Uint8Array.t_to_js x8300);(
                   Ojs.float_to_js x8307);(Ojs.float_to_js x8308)|])
    let (compareExchange :
      typedArray:(Int16Array.t, Int32Array.t, Int8Array.t, Uint16Array.t,
        Uint32Array.t, Uint8Array.t) union6 ->
        index:float -> expectedValue:float -> replacementValue:float -> float)
      =
      fun
        ~typedArray:(x8309 :
                      (Int16Array.t, Int32Array.t, Int8Array.t,
                        Uint16Array.t, Uint32Array.t, Uint8Array.t) union6)
        ->
        fun ~index:(x8316 : float) ->
          fun ~expectedValue:(x8317 : float) ->
            fun ~replacementValue:(x8318 : float) ->
              Ojs.float_of_js
                (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics")
                   "compareExchange"
                   [|(union6_to_js Int16Array.t_to_js Int32Array.t_to_js
                        Int8Array.t_to_js Uint16Array.t_to_js
                        Uint32Array.t_to_js Uint8Array.t_to_js x8309);(
                     Ojs.float_to_js x8316);(Ojs.float_to_js x8317);(
                     Ojs.float_to_js x8318)|])
    let (exchange :
      typedArray:(Int16Array.t, Int32Array.t, Int8Array.t, Uint16Array.t,
        Uint32Array.t, Uint8Array.t) union6 ->
        index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x8319 :
                      (Int16Array.t, Int32Array.t, Int8Array.t,
                        Uint16Array.t, Uint32Array.t, Uint8Array.t) union6)
        ->
        fun ~index:(x8326 : float) ->
          fun ~value:(x8327 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "exchange"
                 [|(union6_to_js Int16Array.t_to_js Int32Array.t_to_js
                      Int8Array.t_to_js Uint16Array.t_to_js
                      Uint32Array.t_to_js Uint8Array.t_to_js x8319);(
                   Ojs.float_to_js x8326);(Ojs.float_to_js x8327)|])
    let (isLockFree : float -> bool) =
      fun (x8328 : float) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "isLockFree"
             [|(Ojs.float_to_js x8328)|])
    let (load :
      typedArray:(Int16Array.t, Int32Array.t, Int8Array.t, Uint16Array.t,
        Uint32Array.t, Uint8Array.t) union6 -> index:float -> float)
      =
      fun
        ~typedArray:(x8329 :
                      (Int16Array.t, Int32Array.t, Int8Array.t,
                        Uint16Array.t, Uint32Array.t, Uint8Array.t) union6)
        ->
        fun ~index:(x8336 : float) ->
          Ojs.float_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "load"
               [|(union6_to_js Int16Array.t_to_js Int32Array.t_to_js
                    Int8Array.t_to_js Uint16Array.t_to_js Uint32Array.t_to_js
                    Uint8Array.t_to_js x8329);(Ojs.float_to_js x8336)|])
    let (or_ :
      typedArray:(Int16Array.t, Int32Array.t, Int8Array.t, Uint16Array.t,
        Uint32Array.t, Uint8Array.t) union6 ->
        index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x8337 :
                      (Int16Array.t, Int32Array.t, Int8Array.t,
                        Uint16Array.t, Uint32Array.t, Uint8Array.t) union6)
        ->
        fun ~index:(x8344 : float) ->
          fun ~value:(x8345 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "or"
                 [|(union6_to_js Int16Array.t_to_js Int32Array.t_to_js
                      Int8Array.t_to_js Uint16Array.t_to_js
                      Uint32Array.t_to_js Uint8Array.t_to_js x8337);(
                   Ojs.float_to_js x8344);(Ojs.float_to_js x8345)|])
    let (store :
      typedArray:(Int16Array.t, Int32Array.t, Int8Array.t, Uint16Array.t,
        Uint32Array.t, Uint8Array.t) union6 ->
        index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x8346 :
                      (Int16Array.t, Int32Array.t, Int8Array.t,
                        Uint16Array.t, Uint32Array.t, Uint8Array.t) union6)
        ->
        fun ~index:(x8353 : float) ->
          fun ~value:(x8354 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "store"
                 [|(union6_to_js Int16Array.t_to_js Int32Array.t_to_js
                      Int8Array.t_to_js Uint16Array.t_to_js
                      Uint32Array.t_to_js Uint8Array.t_to_js x8346);(
                   Ojs.float_to_js x8353);(Ojs.float_to_js x8354)|])
    let (sub :
      typedArray:(Int16Array.t, Int32Array.t, Int8Array.t, Uint16Array.t,
        Uint32Array.t, Uint8Array.t) union6 ->
        index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x8355 :
                      (Int16Array.t, Int32Array.t, Int8Array.t,
                        Uint16Array.t, Uint32Array.t, Uint8Array.t) union6)
        ->
        fun ~index:(x8362 : float) ->
          fun ~value:(x8363 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "sub"
                 [|(union6_to_js Int16Array.t_to_js Int32Array.t_to_js
                      Int8Array.t_to_js Uint16Array.t_to_js
                      Uint32Array.t_to_js Uint8Array.t_to_js x8355);(
                   Ojs.float_to_js x8362);(Ojs.float_to_js x8363)|])
    let (wait :
      typedArray:Int32Array.t ->
        index:float ->
          value:float ->
            ?timeout:float ->
              unit -> [ `L_s70_not_equal  | `L_s73_ok  | `L_s93_timed_out ])
      =
      fun ~typedArray:(x8364 : Int32Array.t) ->
        fun ~index:(x8365 : float) ->
          fun ~value:(x8366 : float) ->
            fun ?timeout:(x8367 : float option) ->
              fun () ->
                let x8371 =
                  let x8370 = Ojs.get_prop_ascii Ojs.global "Atomics" in
                  Ojs.call (Ojs.get_prop_ascii x8370 "wait") "apply"
                    [|x8370;((let x8368 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x8368 "push"
                                   [|(Int32Array.t_to_js x8364)|]);
                              ignore
                                (Ojs.call x8368 "push"
                                   [|(Ojs.float_to_js x8365)|]);
                              ignore
                                (Ojs.call x8368 "push"
                                   [|(Ojs.float_to_js x8366)|]);
                              (match x8367 with
                               | Some x8369 ->
                                   ignore
                                     (Ojs.call x8368 "push"
                                        [|(Ojs.float_to_js x8369)|])
                               | None -> ());
                              x8368))|] in
                match Ojs.string_of_js x8371 with
                | "not-equal" -> `L_s70_not_equal
                | "ok" -> `L_s73_ok
                | "timed-out" -> `L_s93_timed_out
                | _ -> assert false
    let (notify :
      typedArray:Int32Array.t -> index:float -> ?count:float -> unit -> float)
      =
      fun ~typedArray:(x8372 : Int32Array.t) ->
        fun ~index:(x8373 : float) ->
          fun ?count:(x8374 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x8377 = Ojs.get_prop_ascii Ojs.global "Atomics" in
                 Ojs.call (Ojs.get_prop_ascii x8377 "notify") "apply"
                   [|x8377;((let x8375 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8375 "push"
                                  [|(Int32Array.t_to_js x8372)|]);
                             ignore
                               (Ojs.call x8375 "push"
                                  [|(Ojs.float_to_js x8373)|]);
                             (match x8374 with
                              | Some x8376 ->
                                  ignore
                                    (Ojs.call x8375 "push"
                                       [|(Ojs.float_to_js x8376)|])
                              | None -> ());
                             x8375))|])
    let (xor :
      typedArray:(Int16Array.t, Int32Array.t, Int8Array.t, Uint16Array.t,
        Uint32Array.t, Uint8Array.t) union6 ->
        index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x8378 :
                      (Int16Array.t, Int32Array.t, Int8Array.t,
                        Uint16Array.t, Uint32Array.t, Uint8Array.t) union6)
        ->
        fun ~index:(x8385 : float) ->
          fun ~value:(x8386 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "xor"
                 [|(union6_to_js Int16Array.t_to_js Int32Array.t_to_js
                      Int8Array.t_to_js Uint16Array.t_to_js
                      Uint32Array.t_to_js Uint8Array.t_to_js x8378);(
                   Ojs.float_to_js x8385);(Ojs.float_to_js x8386)|])
    let (add' :
      typedArray:(BigInt64Array.t, BigUint64Array.t) union2 ->
        index:float -> value:bigint -> bigint)
      =
      fun ~typedArray:(x8387 : (BigInt64Array.t, BigUint64Array.t) union2) ->
        fun ~index:(x8390 : float) ->
          fun ~value:(x8391 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "add"
                 [|(union2_to_js BigInt64Array.t_to_js BigUint64Array.t_to_js
                      x8387);(Ojs.float_to_js x8390);(bigint_to_js x8391)|])
    let (and_' :
      typedArray:(BigInt64Array.t, BigUint64Array.t) union2 ->
        index:float -> value:bigint -> bigint)
      =
      fun ~typedArray:(x8392 : (BigInt64Array.t, BigUint64Array.t) union2) ->
        fun ~index:(x8395 : float) ->
          fun ~value:(x8396 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "and"
                 [|(union2_to_js BigInt64Array.t_to_js BigUint64Array.t_to_js
                      x8392);(Ojs.float_to_js x8395);(bigint_to_js x8396)|])
    let (compareExchange' :
      typedArray:(BigInt64Array.t, BigUint64Array.t) union2 ->
        index:float ->
          expectedValue:bigint -> replacementValue:bigint -> bigint)
      =
      fun ~typedArray:(x8397 : (BigInt64Array.t, BigUint64Array.t) union2) ->
        fun ~index:(x8400 : float) ->
          fun ~expectedValue:(x8401 : bigint) ->
            fun ~replacementValue:(x8402 : bigint) ->
              bigint_of_js
                (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics")
                   "compareExchange"
                   [|(union2_to_js BigInt64Array.t_to_js
                        BigUint64Array.t_to_js x8397);(Ojs.float_to_js x8400);(
                     bigint_to_js x8401);(bigint_to_js x8402)|])
    let (exchange' :
      typedArray:(BigInt64Array.t, BigUint64Array.t) union2 ->
        index:float -> value:bigint -> bigint)
      =
      fun ~typedArray:(x8403 : (BigInt64Array.t, BigUint64Array.t) union2) ->
        fun ~index:(x8406 : float) ->
          fun ~value:(x8407 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "exchange"
                 [|(union2_to_js BigInt64Array.t_to_js BigUint64Array.t_to_js
                      x8403);(Ojs.float_to_js x8406);(bigint_to_js x8407)|])
    let (load' :
      typedArray:(BigInt64Array.t, BigUint64Array.t) union2 ->
        index:float -> bigint)
      =
      fun ~typedArray:(x8408 : (BigInt64Array.t, BigUint64Array.t) union2) ->
        fun ~index:(x8411 : float) ->
          bigint_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "load"
               [|(union2_to_js BigInt64Array.t_to_js BigUint64Array.t_to_js
                    x8408);(Ojs.float_to_js x8411)|])
    let (or_' :
      typedArray:(BigInt64Array.t, BigUint64Array.t) union2 ->
        index:float -> value:bigint -> bigint)
      =
      fun ~typedArray:(x8412 : (BigInt64Array.t, BigUint64Array.t) union2) ->
        fun ~index:(x8415 : float) ->
          fun ~value:(x8416 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "or"
                 [|(union2_to_js BigInt64Array.t_to_js BigUint64Array.t_to_js
                      x8412);(Ojs.float_to_js x8415);(bigint_to_js x8416)|])
    let (store' :
      typedArray:(BigInt64Array.t, BigUint64Array.t) union2 ->
        index:float -> value:bigint -> bigint)
      =
      fun ~typedArray:(x8417 : (BigInt64Array.t, BigUint64Array.t) union2) ->
        fun ~index:(x8420 : float) ->
          fun ~value:(x8421 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "store"
                 [|(union2_to_js BigInt64Array.t_to_js BigUint64Array.t_to_js
                      x8417);(Ojs.float_to_js x8420);(bigint_to_js x8421)|])
    let (sub' :
      typedArray:(BigInt64Array.t, BigUint64Array.t) union2 ->
        index:float -> value:bigint -> bigint)
      =
      fun ~typedArray:(x8422 : (BigInt64Array.t, BigUint64Array.t) union2) ->
        fun ~index:(x8425 : float) ->
          fun ~value:(x8426 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "sub"
                 [|(union2_to_js BigInt64Array.t_to_js BigUint64Array.t_to_js
                      x8422);(Ojs.float_to_js x8425);(bigint_to_js x8426)|])
    let (wait' :
      typedArray:BigInt64Array.t ->
        index:float ->
          value:bigint ->
            ?timeout:float ->
              unit -> [ `L_s70_not_equal  | `L_s73_ok  | `L_s93_timed_out ])
      =
      fun ~typedArray:(x8427 : BigInt64Array.t) ->
        fun ~index:(x8428 : float) ->
          fun ~value:(x8429 : bigint) ->
            fun ?timeout:(x8430 : float option) ->
              fun () ->
                let x8434 =
                  let x8433 = Ojs.get_prop_ascii Ojs.global "Atomics" in
                  Ojs.call (Ojs.get_prop_ascii x8433 "wait") "apply"
                    [|x8433;((let x8431 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x8431 "push"
                                   [|(BigInt64Array.t_to_js x8427)|]);
                              ignore
                                (Ojs.call x8431 "push"
                                   [|(Ojs.float_to_js x8428)|]);
                              ignore
                                (Ojs.call x8431 "push"
                                   [|(bigint_to_js x8429)|]);
                              (match x8430 with
                               | Some x8432 ->
                                   ignore
                                     (Ojs.call x8431 "push"
                                        [|(Ojs.float_to_js x8432)|])
                               | None -> ());
                              x8431))|] in
                match Ojs.string_of_js x8434 with
                | "not-equal" -> `L_s70_not_equal
                | "ok" -> `L_s73_ok
                | "timed-out" -> `L_s93_timed_out
                | _ -> assert false
    let (notify' :
      typedArray:BigInt64Array.t ->
        index:float -> ?count:float -> unit -> float)
      =
      fun ~typedArray:(x8435 : BigInt64Array.t) ->
        fun ~index:(x8436 : float) ->
          fun ?count:(x8437 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x8440 = Ojs.get_prop_ascii Ojs.global "Atomics" in
                 Ojs.call (Ojs.get_prop_ascii x8440 "notify") "apply"
                   [|x8440;((let x8438 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8438 "push"
                                  [|(BigInt64Array.t_to_js x8435)|]);
                             ignore
                               (Ojs.call x8438 "push"
                                  [|(Ojs.float_to_js x8436)|]);
                             (match x8437 with
                              | Some x8439 ->
                                  ignore
                                    (Ojs.call x8438 "push"
                                       [|(Ojs.float_to_js x8439)|])
                              | None -> ());
                             x8438))|])
    let (xor' :
      typedArray:(BigInt64Array.t, BigUint64Array.t) union2 ->
        index:float -> value:bigint -> bigint)
      =
      fun ~typedArray:(x8441 : (BigInt64Array.t, BigUint64Array.t) union2) ->
        fun ~index:(x8444 : float) ->
          fun ~value:(x8445 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "xor"
                 [|(union2_to_js BigInt64Array.t_to_js BigUint64Array.t_to_js
                      x8441);(Ojs.float_to_js x8444);(bigint_to_js x8445)|])
  end
module PromiseRejectedResult =
  struct
    type t = [ `PromiseRejectedResult ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8447 : Ojs.t) -> t_of_js x8447
    and t_0_to_js : t_0 -> Ojs.t = fun (x8446 : t) -> t_to_js x8446
    type tags = [ `PromiseRejectedResult ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `PromiseRejectedResult ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x8450 : Ojs.t) -> intf_of_js __tags_of_js x8450
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x8448 : __tags intf) -> intf_to_js __tags_to_js x8448
    let (get_status : 'tags this -> [ `L_s83_rejected ]) =
      fun (x8452 : 'tags this) ->
        let x8454 = Ojs.get_prop_ascii (this_to_js Obj.magic x8452) "status" in
        match Ojs.string_of_js x8454 with
        | "rejected" -> `L_s83_rejected
        | _ -> assert false
    let (set_status : 'tags this -> [ `L_s83_rejected ] -> unit) =
      fun (x8455 : 'tags this) ->
        fun (x8456 : [ `L_s83_rejected ]) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x8455) "status"
            (match x8456 with
             | `L_s83_rejected -> Ojs.string_to_js "rejected")
    let (get_reason : 'tags this -> any) =
      fun (x8458 : 'tags this) ->
        any_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x8458) "reason")
    let (set_reason : 'tags this -> any -> unit) =
      fun (x8460 : 'tags this) ->
        fun (x8461 : any) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x8460) "reason"
            (any_to_js x8461)
    let (create : status:[ `L_s83_rejected ] -> reason:any -> unit -> t) =
      fun ~status:(x8463 : [ `L_s83_rejected ]) ->
        fun ~reason:(x8464 : any) ->
          fun () ->
            let x8465 = Ojs.empty_obj () in
            Ojs.set_prop_ascii x8465 "status"
              (match x8463 with
               | `L_s83_rejected -> Ojs.string_to_js "rejected");
            Ojs.set_prop_ascii x8465 "reason" (any_to_js x8464);
            t_of_js x8465
    let cast_from = Obj.magic
  end
module PromiseFulfilledResult =
  struct
    type 'T t = [ `PromiseFulfilledResult of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x8468 : Ojs.t) -> t_of_js __T_of_js x8468
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x8466 : __T t) -> t_to_js __T_to_js x8466
    type 'T tags = [ `PromiseFulfilledResult of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `PromiseFulfilledResult of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x8472 : Ojs.t) -> intf_of_js __tags_of_js x8472
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x8470 : __tags intf) -> intf_to_js __tags_to_js x8470
    let (get_status : ('tags, 'T) this -> [ `L_s42_fulfilled ]) =
      fun (x8474 : ('tags, 'T) this) ->
        let x8477 =
          Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x8474) "status" in
        match Ojs.string_of_js x8477 with
        | "fulfilled" -> `L_s42_fulfilled
        | _ -> assert false
    let (set_status : ('tags, 'T) this -> [ `L_s42_fulfilled ] -> unit) =
      fun (x8478 : ('tags, 'T) this) ->
        fun (x8479 : [ `L_s42_fulfilled ]) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x8478) "status"
            (match x8479 with
             | `L_s42_fulfilled -> Ojs.string_to_js "fulfilled")
    let (get_value : ('tags, 'T) this -> 'T) =
      fun (x8482 : ('tags, 'T) this) ->
        Obj.magic
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x8482) "value")
    let (set_value : ('tags, 'T) this -> 'T -> unit) =
      fun (x8485 : ('tags, 'T) this) ->
        fun (x8486 : 'T) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x8485) "value"
            (Obj.magic x8486)
    let (create : status:[ `L_s42_fulfilled ] -> value:'T -> unit -> 'T t) =
      fun ~status:(x8489 : [ `L_s42_fulfilled ]) ->
        fun ~value:(x8490 : 'T) ->
          fun () ->
            let x8491 = Ojs.empty_obj () in
            Ojs.set_prop_ascii x8491 "status"
              (match x8489 with
               | `L_s42_fulfilled -> Ojs.string_to_js "fulfilled");
            Ojs.set_prop_ascii x8491 "value" (Obj.magic x8490);
            t_of_js Obj.magic x8491
    let cast_from = Obj.magic
  end
module PromiseSettledResult =
  struct
    type 'T t =
      [ `U_s42_fulfilled of 'T PromiseFulfilledResult.t 
      | `U_s83_rejected of PromiseRejectedResult.t ]
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x8497 : Ojs.t) ->
          let x8498 = x8497 in
          match Ojs.string_of_js (Ojs.get_prop_ascii x8498 "status") with
          | "fulfilled" ->
              `U_s42_fulfilled
                (PromiseFulfilledResult.t_of_js __T_of_js x8498)
          | "rejected" ->
              `U_s83_rejected (PromiseRejectedResult.t_of_js x8498)
          | _ -> assert false
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun
          (x8493 :
            [ `U_s42_fulfilled of __T PromiseFulfilledResult.t 
            | `U_s83_rejected of PromiseRejectedResult.t ])
          ->
          match x8493 with
          | `U_s42_fulfilled x8494 ->
              PromiseFulfilledResult.t_to_js __T_to_js x8494
          | `U_s83_rejected x8496 -> PromiseRejectedResult.t_to_js x8496
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x8502 : Ojs.t) -> t_of_js __T_of_js x8502
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x8500 : __T t) -> t_to_js __T_to_js x8500
  end
module Awaited =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x8505 : Ojs.t) -> any_of_js x8505
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x8504 : any) -> any_to_js x8504
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x8508 : Ojs.t) -> t_of_js __T_of_js x8508
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x8506 : __T t) -> t_to_js __T_to_js x8506
  end
module Promise =
  struct
    type 'T t = [ `Promise of 'T  | 'T PromiseLike.tags_1] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x8512 : Ojs.t) -> t_of_js __T_of_js x8512
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x8510 : __T t) -> t_to_js __T_to_js x8510
    type 'T tags = [ `Promise of 'T  | 'T PromiseLike.tags_1]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this = 'tags intf constraint 'tags = [> `Promise of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x8516 : Ojs.t) -> intf_of_js __tags_of_js x8516
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x8514 : __tags intf) -> intf_to_js __tags_to_js x8514
    let (finally :
      ('tags, 'T) this ->
        ?onfinally:(unit -> unit) or_null_or_undefined -> unit -> 'T t)
      =
      fun (x8522 : ('tags, 'T) this) ->
        fun ?onfinally:(x8518 : (unit -> unit) or_null_or_undefined option)
          ->
          fun () ->
            t_of_js Obj.magic
              (let x8525 = this_to_js Obj.magic Obj.magic x8522 in
               Ojs.call (Ojs.get_prop_ascii x8525 "finally") "apply"
                 [|x8525;((let x8519 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8518 with
                            | Some x8520 ->
                                ignore
                                  (Ojs.call x8519 "push"
                                     [|(or_null_or_undefined_to_js
                                          (fun (x8521 : unit -> unit) ->
                                             Ojs.fun_to_js 1
                                               (fun _ -> x8521 ())) x8520)|])
                            | None -> ());
                           x8519))|])
    let (then_ :
      ('tags, 'T) this ->
        ?onfulfilled:('T -> ('TResult1, 'TResult1 PromiseLike.t) union2)
          or_null_or_undefined ->
          ?onrejected:(any -> ('TResult2, 'TResult2 PromiseLike.t) union2)
            or_null_or_undefined -> unit -> ('TResult1, 'TResult2) union2 t)
      =
      fun (x8542 : ('tags, 'T) this) ->
        fun
          ?onfulfilled:(x8527 :
                         ('T -> ('TResult1, 'TResult1 PromiseLike.t) union2)
                           or_null_or_undefined option)
          ->
          fun
            ?onrejected:(x8528 :
                          (any -> ('TResult2, 'TResult2 PromiseLike.t) union2)
                            or_null_or_undefined option)
            ->
            fun () ->
              t_of_js
                (fun (x8546 : Ojs.t) ->
                   union2_of_js Obj.magic Obj.magic x8546)
                (let x8545 = this_to_js Obj.magic Obj.magic x8542 in
                 Ojs.call (Ojs.get_prop_ascii x8545 "then") "apply"
                   [|x8545;((let x8529 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8527 with
                              | Some x8536 ->
                                  ignore
                                    (Ojs.call x8529 "push"
                                       [|(or_null_or_undefined_to_js
                                            (fun
                                               (x8537 :
                                                 'T ->
                                                   ('TResult1,
                                                     'TResult1 PromiseLike.t)
                                                     union2)
                                               ->
                                               Ojs.fun_to_js 1
                                                 (fun (x8538 : Ojs.t) ->
                                                    union2_to_js Obj.magic
                                                      (fun
                                                         (x8540 :
                                                           'TResult1
                                                             PromiseLike.t)
                                                         ->
                                                         PromiseLike.t_to_js
                                                           Obj.magic x8540)
                                                      (x8537
                                                         (Obj.magic x8538))))
                                            x8536)|])
                              | None -> ());
                             (match x8528 with
                              | Some x8530 ->
                                  ignore
                                    (Ojs.call x8529 "push"
                                       [|(or_null_or_undefined_to_js
                                            (fun
                                               (x8531 :
                                                 any ->
                                                   ('TResult2,
                                                     'TResult2 PromiseLike.t)
                                                     union2)
                                               ->
                                               Ojs.fun_to_js 1
                                                 (fun (x8532 : Ojs.t) ->
                                                    union2_to_js Obj.magic
                                                      (fun
                                                         (x8534 :
                                                           'TResult2
                                                             PromiseLike.t)
                                                         ->
                                                         PromiseLike.t_to_js
                                                           Obj.magic x8534)
                                                      (x8531
                                                         (any_of_js x8532))))
                                            x8530)|])
                              | None -> ());
                             x8529))|])
    let (catch :
      ('tags, 'T) this ->
        ?onrejected:(any -> ('TResult, 'TResult PromiseLike.t) union2)
          or_null_or_undefined -> unit -> ('T, 'TResult) union2 t)
      =
      fun (x8557 : ('tags, 'T) this) ->
        fun
          ?onrejected:(x8549 :
                        (any -> ('TResult, 'TResult PromiseLike.t) union2)
                          or_null_or_undefined option)
          ->
          fun () ->
            t_of_js
              (fun (x8561 : Ojs.t) -> union2_of_js Obj.magic Obj.magic x8561)
              (let x8560 = this_to_js Obj.magic Obj.magic x8557 in
               Ojs.call (Ojs.get_prop_ascii x8560 "catch") "apply"
                 [|x8560;((let x8550 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8549 with
                            | Some x8551 ->
                                ignore
                                  (Ojs.call x8550 "push"
                                     [|(or_null_or_undefined_to_js
                                          (fun
                                             (x8552 :
                                               any ->
                                                 ('TResult,
                                                   'TResult PromiseLike.t)
                                                   union2)
                                             ->
                                             Ojs.fun_to_js 1
                                               (fun (x8553 : Ojs.t) ->
                                                  union2_to_js Obj.magic
                                                    (fun
                                                       (x8555 :
                                                         'TResult
                                                           PromiseLike.t)
                                                       ->
                                                       PromiseLike.t_to_js
                                                         Obj.magic x8555)
                                                    (x8552 (any_of_js x8553))))
                                          x8551)|])
                            | None -> ());
                           x8550))|])
    let (any :
      (('T, 'T PromiseLike.t) union2 Iterable.t,
        ('T, 'T PromiseLike.t) union2) or_array -> 'T t)
      =
      fun
        (x8564 :
          (('T, 'T PromiseLike.t) union2 Iterable.t,
            ('T, 'T PromiseLike.t) union2) or_array)
        ->
        t_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "any"
             [|(or_array_to_js
                  (fun (x8565 : ('T, 'T PromiseLike.t) union2 Iterable.t) ->
                     Iterable.t_to_js
                       (fun (x8566 : ('T, 'T PromiseLike.t) union2) ->
                          union2_to_js Obj.magic
                            (fun (x8568 : 'T PromiseLike.t) ->
                               PromiseLike.t_to_js Obj.magic x8568) x8566)
                       x8565)
                  (fun (x8570 : ('T, 'T PromiseLike.t) union2) ->
                     union2_to_js Obj.magic
                       (fun (x8572 : 'T PromiseLike.t) ->
                          PromiseLike.t_to_js Obj.magic x8572) x8570) x8564)|])
    let (allSettled : 'T -> any t) =
      fun (x8575 : 'T) ->
        t_of_js any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "allSettled"
             [|(Obj.magic x8575)|])
    let (allSettled' :
      ('T, 'T PromiseLike.t) union2 Iterable.t ->
        'T Awaited.t PromiseSettledResult.t list t)
      =
      fun (x8577 : ('T, 'T PromiseLike.t) union2 Iterable.t) ->
        t_of_js
          (fun (x8582 : Ojs.t) ->
             Ojs.list_of_js
               (fun (x8583 : Ojs.t) ->
                  PromiseSettledResult.t_of_js
                    (fun (x8584 : Ojs.t) -> Awaited.t_of_js Obj.magic x8584)
                    x8583) x8582)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "allSettled"
             [|(Iterable.t_to_js
                  (fun (x8578 : ('T, 'T PromiseLike.t) union2) ->
                     union2_to_js Obj.magic
                       (fun (x8580 : 'T PromiseLike.t) ->
                          PromiseLike.t_to_js Obj.magic x8580) x8578) x8577)|])
    let (any' : 'T -> any Awaited.t t) =
      fun (x8586 : 'T) ->
        t_of_js (fun (x8587 : Ojs.t) -> Awaited.t_of_js any_of_js x8587)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "any"
             [|(Obj.magic x8586)|])
    let (any'' : ('T, 'T PromiseLike.t) union2 Iterable.t -> 'T Awaited.t t)
      =
      fun (x8589 : ('T, 'T PromiseLike.t) union2 Iterable.t) ->
        t_of_js (fun (x8594 : Ojs.t) -> Awaited.t_of_js Obj.magic x8594)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "any"
             [|(Iterable.t_to_js
                  (fun (x8590 : ('T, 'T PromiseLike.t) union2) ->
                     union2_to_js Obj.magic
                       (fun (x8592 : 'T PromiseLike.t) ->
                          PromiseLike.t_to_js Obj.magic x8592) x8590) x8589)|])
    let (prototype : unit -> any t) =
      fun () ->
        t_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Promise")
             "prototype")
    let (create :
      (resolve:(('T, 'T PromiseLike.t) union2 -> unit) ->
         reject:(?reason:any -> unit -> unit) -> unit)
        -> 'T t)
      =
      fun
        (x8597 :
          resolve:(('T, 'T PromiseLike.t) union2 -> unit) ->
            reject:(?reason:any -> unit -> unit) -> unit)
        ->
        t_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Promise")
             [|(Ojs.fun_to_js 2
                  (fun (x8598 : Ojs.t) ->
                     fun (x8603 : Ojs.t) ->
                       x8597
                         ~resolve:(fun
                                     (x8599 : ('T, 'T PromiseLike.t) union2)
                                     ->
                                     ignore
                                       (Ojs.apply x8598
                                          [|(union2_to_js Obj.magic
                                               (fun
                                                  (x8601 : 'T PromiseLike.t)
                                                  ->
                                                  PromiseLike.t_to_js
                                                    Obj.magic x8601) x8599)|]))
                         ~reject:(fun ?reason:(x8604 : any option) ->
                                    fun () ->
                                      ignore
                                        (Ojs.call x8603 "apply"
                                           [|Ojs.null;((let x8605 =
                                                          Ojs.new_obj
                                                            (Ojs.get_prop_ascii
                                                               Ojs.global
                                                               "Array") 
                                                            [||] in
                                                        (match x8604 with
                                                         | Some x8606 ->
                                                             ignore
                                                               (Ojs.call
                                                                  x8605
                                                                  "push"
                                                                  [|(
                                                                    any_to_js
                                                                    x8606)|])
                                                         | None -> ());
                                                        x8605))|]))))|])
    let (all : 'T -> any t) =
      fun (x8608 : 'T) ->
        t_of_js any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "all"
             [|(Obj.magic x8608)|])
    let (race : 'T -> any Awaited.t t) =
      fun (x8610 : 'T) ->
        t_of_js (fun (x8611 : Ojs.t) -> Awaited.t_of_js any_of_js x8611)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "race"
             [|(Obj.magic x8610)|])
    let (reject : ?reason:any -> unit -> 'T t) =
      fun ?reason:(x8613 : any option) ->
        fun () ->
          t_of_js Obj.magic
            (let x8616 = Ojs.get_prop_ascii Ojs.global "Promise" in
             Ojs.call (Ojs.get_prop_ascii x8616 "reject") "apply"
               [|x8616;((let x8614 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         (match x8613 with
                          | Some x8615 ->
                              ignore
                                (Ojs.call x8614 "push" [|(any_to_js x8615)|])
                          | None -> ());
                         x8614))|])
    let (resolve : unit -> unit t) =
      fun () ->
        t_of_js Ojs.unit_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "resolve" [||])
    let (resolve' : ('T, 'T PromiseLike.t) union2 -> 'T t) =
      fun (x8619 : ('T, 'T PromiseLike.t) union2) ->
        t_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "resolve"
             [|(union2_to_js Obj.magic
                  (fun (x8621 : 'T PromiseLike.t) ->
                     PromiseLike.t_to_js Obj.magic x8621) x8619)|])
    let (all' :
      ('T, 'T PromiseLike.t) union2 Iterable.t -> 'T Awaited.t list t) =
      fun (x8624 : ('T, 'T PromiseLike.t) union2 Iterable.t) ->
        t_of_js
          (fun (x8629 : Ojs.t) ->
             Ojs.list_of_js
               (fun (x8630 : Ojs.t) -> Awaited.t_of_js Obj.magic x8630) x8629)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "all"
             [|(Iterable.t_to_js
                  (fun (x8625 : ('T, 'T PromiseLike.t) union2) ->
                     union2_to_js Obj.magic
                       (fun (x8627 : 'T PromiseLike.t) ->
                          PromiseLike.t_to_js Obj.magic x8627) x8625) x8624)|])
    let (race' : ('T, 'T PromiseLike.t) union2 Iterable.t -> 'T Awaited.t t)
      =
      fun (x8632 : ('T, 'T PromiseLike.t) union2 Iterable.t) ->
        t_of_js (fun (x8637 : Ojs.t) -> Awaited.t_of_js Obj.magic x8637)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "race"
             [|(Iterable.t_to_js
                  (fun (x8633 : ('T, 'T PromiseLike.t) union2) ->
                     union2_to_js Obj.magic
                       (fun (x8635 : 'T PromiseLike.t) ->
                          PromiseLike.t_to_js Obj.magic x8635) x8633) x8632)|])
    let cast_from = Obj.magic
  end
module AsyncIterator =
  struct
    type ('T, 'TReturn, 'TNext) t =
      [ `AsyncIterator of ('T * 'TReturn * 'TNext) ] intf
    let rec t_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    and t_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t -> Ojs.t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    type ('T, 'TReturn, 'TNext) t_3 = ('T, 'TReturn, 'TNext) t
    let rec t_3_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t_3
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (__TNext_of_js : Ojs.t -> __TNext) ->
            fun (x8643 : Ojs.t) ->
              t_of_js __T_of_js __TReturn_of_js __TNext_of_js x8643
    and t_3_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t_3 -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (__TNext_to_js : __TNext -> Ojs.t) ->
            fun (x8639 : (__T, __TReturn, __TNext) t) ->
              t_to_js __T_to_js __TReturn_to_js __TNext_to_js x8639
    type ('T, 'TReturn) t_2 = ('T, 'TReturn, never or_undefined) t
    let rec t_2_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t_2
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (x8652 : Ojs.t) ->
            t_of_js __T_of_js __TReturn_of_js
              (fun (x8655 : Ojs.t) -> or_undefined_of_js never_of_js x8655)
              x8652
    and t_2_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t_2 -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (x8647 : (__T, __TReturn, never or_undefined) t) ->
            t_to_js __T_to_js __TReturn_to_js
              (fun (x8650 : never or_undefined) ->
                 or_undefined_to_js never_to_js x8650) x8647
    type 'T t_1 = ('T, any, never or_undefined) t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x8662 : Ojs.t) ->
          t_of_js __T_of_js any_of_js
            (fun (x8665 : Ojs.t) -> or_undefined_of_js never_of_js x8665)
            x8662
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x8657 : (__T, any, never or_undefined) t) ->
          t_to_js __T_to_js any_to_js
            (fun (x8660 : never or_undefined) ->
               or_undefined_to_js never_to_js x8660) x8657
    type ('T, 'TReturn, 'TNext) tags =
      [ `AsyncIterator of ('T * 'TReturn * 'TNext) ]
    type ('T, 'TReturn, 'TNext) tags_3 = ('T, 'TReturn, 'TNext) tags
    type ('T, 'TReturn) tags_2 = ('T, 'TReturn, never or_undefined) tags
    type 'T tags_1 = ('T, any, never or_undefined) tags
    type ('tags, 'T, 'TReturn, 'TNext) this =
      'tags intf constraint 'tags =
                  [> `AsyncIterator of ('T * 'TReturn * 'TNext) ]
    let rec this_of_js :
      'tags 'T 'TReturn 'TNext .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'T) ->
            (Ojs.t -> 'TReturn) ->
              (Ojs.t -> 'TNext) ->
                Ojs.t -> ('tags, 'T, 'TReturn, 'TNext) this
      = fun (type __tags) -> fun (type __T) -> fun (type __TReturn) -> fun
      (type __TNext) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
            fun (__TNext_of_js : Ojs.t -> __TNext) ->
              fun (x8669 : Ojs.t) -> intf_of_js __tags_of_js x8669
    and this_to_js :
      'tags 'T 'TReturn 'TNext .
        ('tags -> Ojs.t) ->
          ('T -> Ojs.t) ->
            ('TReturn -> Ojs.t) ->
              ('TNext -> Ojs.t) ->
                ('tags, 'T, 'TReturn, 'TNext) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) -> fun (type __TReturn) -> fun
      (type __TNext) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
            fun (__TNext_to_js : __TNext -> Ojs.t) ->
              fun (x8667 : __tags intf) -> intf_to_js __tags_to_js x8667
    let (next :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        args:any list -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x8674 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~args:(x8671 : any list) ->
          Promise.t_of_js
            (fun (x8680 : Ojs.t) ->
               IteratorResult.t_of_js Obj.magic Obj.magic x8680)
            (let x8679 =
               this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x8674 in
             Ojs.call (Ojs.get_prop_ascii x8679 "next") "apply"
               [|x8679;((let x8672 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x8673 : any) ->
                              ignore
                                (Ojs.call x8672 "push" [|(any_to_js x8673)|]))
                           x8671;
                         x8672))|])
    let (return :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        ?value:('TReturn, 'TReturn PromiseLike.t) union2 ->
          unit -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x8689 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ?value:(x8683 : ('TReturn, 'TReturn PromiseLike.t) union2 option)
          ->
          fun () ->
            Promise.t_of_js
              (fun (x8695 : Ojs.t) ->
                 IteratorResult.t_of_js Obj.magic Obj.magic x8695)
              (let x8694 =
                 this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x8689 in
               Ojs.call (Ojs.get_prop_ascii x8694 "return") "apply"
                 [|x8694;((let x8684 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8683 with
                            | Some x8685 ->
                                ignore
                                  (Ojs.call x8684 "push"
                                     [|(union2_to_js Obj.magic
                                          (fun
                                             (x8687 : 'TReturn PromiseLike.t)
                                             ->
                                             PromiseLike.t_to_js Obj.magic
                                               x8687) x8685)|])
                            | None -> ());
                           x8684))|])
    let (throw :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        ?e:any -> unit -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x8701 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ?e:(x8698 : any option) ->
          fun () ->
            Promise.t_of_js
              (fun (x8707 : Ojs.t) ->
                 IteratorResult.t_of_js Obj.magic Obj.magic x8707)
              (let x8706 =
                 this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x8701 in
               Ojs.call (Ojs.get_prop_ascii x8706 "throw") "apply"
                 [|x8706;((let x8699 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8698 with
                            | Some x8700 ->
                                ignore
                                  (Ojs.call x8699 "push"
                                     [|(any_to_js x8700)|])
                            | None -> ());
                           x8699))|])
    let cast_from = Obj.magic
  end
module AsyncIterableIterator =
  struct
    type 'T t =
      [ `AsyncIterableIterator of 'T 
      | `AsyncIterator of ('T * any * never or_undefined) ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x8712 : Ojs.t) -> t_of_js __T_of_js x8712
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x8710 : __T t) -> t_to_js __T_to_js x8710
    type 'T tags =
      [ `AsyncIterableIterator of 'T 
      | `AsyncIterator of ('T * any * never or_undefined) ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `AsyncIterableIterator of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x8716 : Ojs.t) -> intf_of_js __tags_of_js x8716
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x8714 : __tags intf) -> intf_to_js __tags_to_js x8714
    let cast_from = Obj.magic
  end
module AsyncIterable =
  struct
    type 'T t = [ `AsyncIterable of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x8720 : Ojs.t) -> t_of_js __T_of_js x8720
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x8718 : __T t) -> t_to_js __T_to_js x8718
    type 'T tags = [ `AsyncIterable of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `AsyncIterable of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x8724 : Ojs.t) -> intf_of_js __tags_of_js x8724
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x8722 : __tags intf) -> intf_to_js __tags_to_js x8722
    let cast_from = Obj.magic
  end
module AsyncGenerator =
  struct
    type ('T, 'TReturn, 'TNext) t =
      [ `AsyncGenerator of ('T * 'TReturn * 'TNext) 
      | `AsyncIterator of ('T * 'TReturn * 'TNext) ] intf
    let rec t_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    and t_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t -> Ojs.t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    type ('T, 'TReturn, 'TNext) t_3 = ('T, 'TReturn, 'TNext) t
    let rec t_3_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t_3
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (__TNext_of_js : Ojs.t -> __TNext) ->
            fun (x8730 : Ojs.t) ->
              t_of_js __T_of_js __TReturn_of_js __TNext_of_js x8730
    and t_3_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t_3 -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (__TNext_to_js : __TNext -> Ojs.t) ->
            fun (x8726 : (__T, __TReturn, __TNext) t) ->
              t_to_js __T_to_js __TReturn_to_js __TNext_to_js x8726
    type ('T, 'TReturn) t_2 = ('T, 'TReturn, unknown) t
    let rec t_2_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t_2
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (x8738 : Ojs.t) ->
            t_of_js __T_of_js __TReturn_of_js unknown_of_js x8738
    and t_2_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t_2 -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (x8734 : (__T, __TReturn, unknown) t) ->
            t_to_js __T_to_js __TReturn_to_js unknown_to_js x8734
    type 'T t_1 = ('T, any, unknown) t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x8746 : Ojs.t) ->
          t_of_js __T_of_js any_of_js unknown_of_js x8746
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x8742 : (__T, any, unknown) t) ->
          t_to_js __T_to_js any_to_js unknown_to_js x8742
    type t_0 = (unknown, any, unknown) t
    let rec t_0_of_js : Ojs.t -> t_0 =
      fun (x8754 : Ojs.t) ->
        t_of_js unknown_of_js any_of_js unknown_of_js x8754
    and t_0_to_js : t_0 -> Ojs.t =
      fun (x8750 : (unknown, any, unknown) t) ->
        t_to_js unknown_to_js any_to_js unknown_to_js x8750
    type ('T, 'TReturn, 'TNext) tags =
      [ `AsyncGenerator of ('T * 'TReturn * 'TNext) 
      | `AsyncIterator of ('T * 'TReturn * 'TNext) ]
    type ('T, 'TReturn, 'TNext) tags_3 = ('T, 'TReturn, 'TNext) tags
    type ('T, 'TReturn) tags_2 = ('T, 'TReturn, unknown) tags
    type 'T tags_1 = ('T, any, unknown) tags
    type tags_0 = (unknown, any, unknown) tags
    type ('tags, 'T, 'TReturn, 'TNext) this =
      'tags intf constraint 'tags =
                  [> `AsyncGenerator of ('T * 'TReturn * 'TNext) ]
    let rec this_of_js :
      'tags 'T 'TReturn 'TNext .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'T) ->
            (Ojs.t -> 'TReturn) ->
              (Ojs.t -> 'TNext) ->
                Ojs.t -> ('tags, 'T, 'TReturn, 'TNext) this
      = fun (type __tags) -> fun (type __T) -> fun (type __TReturn) -> fun
      (type __TNext) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
            fun (__TNext_of_js : Ojs.t -> __TNext) ->
              fun (x8760 : Ojs.t) -> intf_of_js __tags_of_js x8760
    and this_to_js :
      'tags 'T 'TReturn 'TNext .
        ('tags -> Ojs.t) ->
          ('T -> Ojs.t) ->
            ('TReturn -> Ojs.t) ->
              ('TNext -> Ojs.t) ->
                ('tags, 'T, 'TReturn, 'TNext) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) -> fun (type __TReturn) -> fun
      (type __TNext) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
            fun (__TNext_to_js : __TNext -> Ojs.t) ->
              fun (x8758 : __tags intf) -> intf_to_js __tags_to_js x8758
    let (next :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        args:any list -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x8765 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~args:(x8762 : any list) ->
          Promise.t_of_js
            (fun (x8771 : Ojs.t) ->
               IteratorResult.t_of_js Obj.magic Obj.magic x8771)
            (let x8770 =
               this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x8765 in
             Ojs.call (Ojs.get_prop_ascii x8770 "next") "apply"
               [|x8770;((let x8763 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x8764 : any) ->
                              ignore
                                (Ojs.call x8763 "push" [|(any_to_js x8764)|]))
                           x8762;
                         x8763))|])
    let (return :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        value:('TReturn, 'TReturn PromiseLike.t) union2 ->
          ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x8778 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~value:(x8774 : ('TReturn, 'TReturn PromiseLike.t) union2) ->
          Promise.t_of_js
            (fun (x8783 : Ojs.t) ->
               IteratorResult.t_of_js Obj.magic Obj.magic x8783)
            (Ojs.call
               (this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x8778)
               "return"
               [|(union2_to_js Obj.magic
                    (fun (x8776 : 'TReturn PromiseLike.t) ->
                       PromiseLike.t_to_js Obj.magic x8776) x8774)|])
    let (throw :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        e:any -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x8787 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~e:(x8786 : any) ->
          Promise.t_of_js
            (fun (x8792 : Ojs.t) ->
               IteratorResult.t_of_js Obj.magic Obj.magic x8792)
            (Ojs.call
               (this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x8787)
               "throw" [|(any_to_js x8786)|])
    let cast_from = Obj.magic
  end
module AsyncGeneratorFunction =
  struct
    type t = [ `AsyncGeneratorFunction ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8796 : Ojs.t) -> t_of_js x8796
    and t_0_to_js : t_0 -> Ojs.t = fun (x8795 : t) -> t_to_js x8795
    type tags = [ `AsyncGeneratorFunction ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `AsyncGeneratorFunction ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x8799 : Ojs.t) -> intf_of_js __tags_of_js x8799
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x8797 : __tags intf) -> intf_to_js __tags_to_js x8797
    let (create : 'tags this -> args:any list -> AsyncGenerator.t_0) =
      fun (x8804 : 'tags this) ->
        fun ~args:(x8801 : any list) ->
          AsyncGenerator.t_0_of_js
            (Ojs.new_obj_arr (this_to_js Obj.magic x8804)
               (let x8802 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                List.iter
                  (fun (x8803 : any) ->
                     ignore (Ojs.call x8802 "push" [|(any_to_js x8803)|]))
                  x8801;
                x8802))
    let (apply : 'tags this -> args:any list -> AsyncGenerator.t_0) =
      fun (x8809 : 'tags this) ->
        fun ~args:(x8806 : any list) ->
          AsyncGenerator.t_0_of_js
            (Ojs.call (this_to_js Obj.magic x8809) "apply"
               [|Ojs.null;((let x8807 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            List.iter
                              (fun (x8808 : any) ->
                                 ignore
                                   (Ojs.call x8807 "push"
                                      [|(any_to_js x8808)|])) x8806;
                            x8807))|])
    let (get_length : 'tags this -> float) =
      fun (x8811 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8811) "length")
    let (get_name : 'tags this -> string) =
      fun (x8813 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8813) "name")
    let (get_prototype : 'tags this -> AsyncGenerator.t_0) =
      fun (x8815 : 'tags this) ->
        AsyncGenerator.t_0_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8815) "prototype")
    let cast_from = Obj.magic
  end
module AsyncGeneratorFunctionConstructor =
  struct
    type t = [ `AsyncGeneratorFunctionConstructor ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8818 : Ojs.t) -> t_of_js x8818
    and t_0_to_js : t_0 -> Ojs.t = fun (x8817 : t) -> t_to_js x8817
    type tags = [ `AsyncGeneratorFunctionConstructor ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `AsyncGeneratorFunctionConstructor ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x8821 : Ojs.t) -> intf_of_js __tags_of_js x8821
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x8819 : __tags intf) -> intf_to_js __tags_to_js x8819
    let (create : 'tags this -> args:string list -> AsyncGeneratorFunction.t)
      =
      fun (x8826 : 'tags this) ->
        fun ~args:(x8823 : string list) ->
          AsyncGeneratorFunction.t_of_js
            (Ojs.new_obj_arr (this_to_js Obj.magic x8826)
               (let x8824 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                List.iter
                  (fun (x8825 : string) ->
                     ignore
                       (Ojs.call x8824 "push" [|(Ojs.string_to_js x8825)|]))
                  x8823;
                x8824))
    let (apply : 'tags this -> args:string list -> AsyncGeneratorFunction.t)
      =
      fun (x8831 : 'tags this) ->
        fun ~args:(x8828 : string list) ->
          AsyncGeneratorFunction.t_of_js
            (Ojs.call (this_to_js Obj.magic x8831) "apply"
               [|Ojs.null;((let x8829 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            List.iter
                              (fun (x8830 : string) ->
                                 ignore
                                   (Ojs.call x8829 "push"
                                      [|(Ojs.string_to_js x8830)|])) x8828;
                            x8829))|])
    let (get_length : 'tags this -> float) =
      fun (x8833 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8833) "length")
    let (get_name : 'tags this -> string) =
      fun (x8835 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8835) "name")
    let (get_prototype : 'tags this -> AsyncGeneratorFunction.t) =
      fun (x8837 : 'tags this) ->
        AsyncGeneratorFunction.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8837) "prototype")
    let cast_from = Obj.magic
  end
module ArrayBufferView =
  struct
    type t = [ `ArrayBufferView ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8840 : Ojs.t) -> t_of_js x8840
    and t_0_to_js : t_0 -> Ojs.t = fun (x8839 : t) -> t_to_js x8839
    type tags = [ `ArrayBufferView ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ArrayBufferView ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x8843 : Ojs.t) -> intf_of_js __tags_of_js x8843
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x8841 : __tags intf) -> intf_to_js __tags_to_js x8841
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x8845 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8845) "buffer")
    let (set_buffer : 'tags this -> ArrayBufferLike.t -> unit) =
      fun (x8847 : 'tags this) ->
        fun (x8848 : ArrayBufferLike.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x8847) "buffer"
            (ArrayBufferLike.t_to_js x8848)
    let (get_byteLength : 'tags this -> float) =
      fun (x8850 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8850) "byteLength")
    let (set_byteLength : 'tags this -> float -> unit) =
      fun (x8852 : 'tags this) ->
        fun (x8853 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x8852) "byteLength"
            (Ojs.float_to_js x8853)
    let (get_byteOffset : 'tags this -> float) =
      fun (x8855 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8855) "byteOffset")
    let (set_byteOffset : 'tags this -> float -> unit) =
      fun (x8857 : 'tags this) ->
        fun (x8858 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x8857) "byteOffset"
            (Ojs.float_to_js x8858)
    let (create :
      buffer:ArrayBufferLike.t ->
        byteLength:float -> byteOffset:float -> unit -> t)
      =
      fun ~buffer:(x8860 : ArrayBufferLike.t) ->
        fun ~byteLength:(x8861 : float) ->
          fun ~byteOffset:(x8862 : float) ->
            fun () ->
              let x8863 = Ojs.empty_obj () in
              Ojs.set_prop_ascii x8863 "buffer"
                (ArrayBufferLike.t_to_js x8860);
              Ojs.set_prop_ascii x8863 "byteLength" (Ojs.float_to_js x8861);
              Ojs.set_prop_ascii x8863 "byteOffset" (Ojs.float_to_js x8862);
              t_of_js x8863
    let cast_from = Obj.magic
  end
module ArrayBufferTypes =
  struct
    type t = [ `ArrayBufferTypes ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8865 : Ojs.t) -> t_of_js x8865
    and t_0_to_js : t_0 -> Ojs.t = fun (x8864 : t) -> t_to_js x8864
    type tags = [ `ArrayBufferTypes ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ArrayBufferTypes ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x8868 : Ojs.t) -> intf_of_js __tags_of_js x8868
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x8866 : __tags intf) -> intf_to_js __tags_to_js x8866
    let (get_SharedArrayBuffer : 'tags this -> SharedArrayBuffer.t) =
      fun (x8870 : 'tags this) ->
        SharedArrayBuffer.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8870)
             "SharedArrayBuffer")
    let (set_SharedArrayBuffer : 'tags this -> SharedArrayBuffer.t -> unit) =
      fun (x8872 : 'tags this) ->
        fun (x8873 : SharedArrayBuffer.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x8872) "SharedArrayBuffer"
            (SharedArrayBuffer.t_to_js x8873)
    let (get_ArrayBuffer : 'tags this -> ArrayBuffer.t) =
      fun (x8875 : 'tags this) ->
        ArrayBuffer.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8875) "ArrayBuffer")
    let (set_ArrayBuffer : 'tags this -> ArrayBuffer.t -> unit) =
      fun (x8877 : 'tags this) ->
        fun (x8878 : ArrayBuffer.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x8877) "ArrayBuffer"
            (ArrayBuffer.t_to_js x8878)
    let (create :
      sharedArrayBuffer:SharedArrayBuffer.t ->
        arrayBuffer:ArrayBuffer.t -> unit -> t)
      =
      fun ~sharedArrayBuffer:(x8880 : SharedArrayBuffer.t) ->
        fun ~arrayBuffer:(x8881 : ArrayBuffer.t) ->
          fun () ->
            let x8882 = Ojs.empty_obj () in
            Ojs.set_prop_ascii x8882 "SharedArrayBuffer"
              (SharedArrayBuffer.t_to_js x8880);
            Ojs.set_prop_ascii x8882 "ArrayBuffer"
              (ArrayBuffer.t_to_js x8881);
            t_of_js x8882
    let cast_from = Obj.magic
  end
module AggregateError =
  struct
    type t = [ `AggregateError  | `Error ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8884 : Ojs.t) -> t_of_js x8884
    and t_0_to_js : t_0 -> Ojs.t = fun (x8883 : t) -> t_to_js x8883
    type tags = [ `AggregateError  | `Error ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `AggregateError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x8887 : Ojs.t) -> intf_of_js __tags_of_js x8887
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x8885 : __tags intf) -> intf_to_js __tags_to_js x8885
    let (get_errors : 'tags this -> any list) =
      fun (x8889 : 'tags this) ->
        Ojs.list_of_js any_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8889) "errors")
    let (set_errors : 'tags this -> any list -> unit) =
      fun (x8892 : 'tags this) ->
        fun (x8893 : any list) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x8892) "errors"
            (Ojs.list_to_js any_to_js x8893)
    let (get_errors' : 'tags this -> any list) =
      fun (x8896 : 'tags this) ->
        Ojs.list_of_js any_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8896) "errors")
    let (set_errors' : 'tags this -> any list -> unit) =
      fun (x8899 : 'tags this) ->
        fun (x8900 : any list) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x8899) "errors"
            (Ojs.list_to_js any_to_js x8900)
    let (create : errors:any Iterable.t -> ?message:string -> unit -> t) =
      fun ~errors:(x8903 : any Iterable.t) ->
        fun ?message:(x8904 : string option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr
                 (Ojs.get_prop_ascii Ojs.global "AggregateError")
                 (let x8905 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore
                    (Ojs.call x8905 "push"
                       [|(Iterable.t_to_js any_to_js x8903)|]);
                  (match x8904 with
                   | Some x8906 ->
                       ignore
                         (Ojs.call x8905 "push" [|(Ojs.string_to_js x8906)|])
                   | None -> ());
                  x8905))
    let (invoke : errors:any Iterable.t -> ?message:string -> unit -> t) =
      fun ~errors:(x8908 : any Iterable.t) ->
        fun ?message:(x8909 : string option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "AggregateError")
                 "apply"
                 [|Ojs.null;((let x8910 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x8910 "push"
                                   [|(Iterable.t_to_js any_to_js x8908)|]);
                              (match x8909 with
                               | Some x8911 ->
                                   ignore
                                     (Ojs.call x8910 "push"
                                        [|(Ojs.string_to_js x8911)|])
                               | None -> ());
                              x8910))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "AggregateError") "prototype")
    let (create' : errors:any Iterable.t -> ?message:string -> unit -> t) =
      fun ~errors:(x8913 : any Iterable.t) ->
        fun ?message:(x8914 : string option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr
                 (Ojs.get_prop_ascii Ojs.global "AggregateError")
                 (let x8915 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore
                    (Ojs.call x8915 "push"
                       [|(Iterable.t_to_js any_to_js x8913)|]);
                  (match x8914 with
                   | Some x8916 ->
                       ignore
                         (Ojs.call x8915 "push" [|(Ojs.string_to_js x8916)|])
                   | None -> ());
                  x8915))
    let (invoke' : errors:any Iterable.t -> ?message:string -> unit -> t) =
      fun ~errors:(x8918 : any Iterable.t) ->
        fun ?message:(x8919 : string option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "AggregateError")
                 "apply"
                 [|Ojs.null;((let x8920 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x8920 "push"
                                   [|(Iterable.t_to_js any_to_js x8918)|]);
                              (match x8919 with
                               | Some x8921 ->
                                   ignore
                                     (Ojs.call x8920 "push"
                                        [|(Ojs.string_to_js x8921)|])
                               | None -> ());
                              x8920))|])
    let (prototype' : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "AggregateError") "prototype")
    let (create'' : errors:any list -> errors:any list -> unit -> t) =
      fun ~errors:(x8923 : any list) ->
        fun ~errors:(x8924 : any list) ->
          fun () ->
            let x8925 = Ojs.empty_obj () in
            Ojs.set_prop_ascii x8925 "errors"
              (Ojs.list_to_js any_to_js x8923);
            Ojs.set_prop_ascii x8925 "errors"
              (Ojs.list_to_js any_to_js x8924);
            t_of_js x8925
    let cast_from = Obj.magic
  end
let (nan : unit -> float) =
  fun () -> Ojs.float_of_js (Ojs.get_prop_ascii Ojs.global "NaN")
let (infinity : unit -> float) =
  fun () -> Ojs.float_of_js (Ojs.get_prop_ascii Ojs.global "Infinity")
let (eval : string -> any) =
  fun (x8928 : string) ->
    any_of_js (Ojs.call Ojs.global "eval" [|(Ojs.string_to_js x8928)|])
let (parseInt : string:string -> ?radix:float -> unit -> float) =
  fun ~string:(x8929 : string) ->
    fun ?radix:(x8930 : float option) ->
      fun () ->
        Ojs.float_of_js
          (let x8933 = Ojs.global in
           Ojs.call (Ojs.get_prop_ascii x8933 "parseInt") "apply"
             [|x8933;((let x8931 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       ignore
                         (Ojs.call x8931 "push" [|(Ojs.string_to_js x8929)|]);
                       (match x8930 with
                        | Some x8932 ->
                            ignore
                              (Ojs.call x8931 "push"
                                 [|(Ojs.float_to_js x8932)|])
                        | None -> ());
                       x8931))|])
let (parseFloat : string -> float) =
  fun (x8934 : string) ->
    Ojs.float_of_js
      (Ojs.call Ojs.global "parseFloat" [|(Ojs.string_to_js x8934)|])
let (isNaN : float -> bool) =
  fun (x8935 : float) ->
    Ojs.bool_of_js (Ojs.call Ojs.global "isNaN" [|(Ojs.float_to_js x8935)|])
let (isFinite : float -> bool) =
  fun (x8936 : float) ->
    Ojs.bool_of_js
      (Ojs.call Ojs.global "isFinite" [|(Ojs.float_to_js x8936)|])
let (decodeURI : string -> string) =
  fun (x8937 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "decodeURI" [|(Ojs.string_to_js x8937)|])
let (decodeURIComponent : string -> string) =
  fun (x8938 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "decodeURIComponent" [|(Ojs.string_to_js x8938)|])
let (encodeURI : string -> string) =
  fun (x8939 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "encodeURI" [|(Ojs.string_to_js x8939)|])
let (encodeURIComponent : bool or_string or_number -> string) =
  fun (x8940 : bool or_string or_number) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "encodeURIComponent"
         [|(or_number_to_js
              (fun (x8941 : bool or_string) ->
                 or_string_to_js Ojs.bool_to_js x8941) x8940)|])
let (escape : string -> string) =
  fun (x8943 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "escape" [|(Ojs.string_to_js x8943)|])
let (unescape : string -> string) =
  fun (x8944 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "unescape" [|(Ojs.string_to_js x8944)|])
let (proxy : unit -> ProxyConstructor.t) =
  fun () -> ProxyConstructor.t_of_js (Ojs.get_prop_ascii Ojs.global "Proxy")
