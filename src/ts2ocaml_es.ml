[@@@js.dummy "!! This code has been generated by gen_js_api !!"]
[@@@ocaml.warning "-7-32-39"]
[@@@ocaml.warning "-7-11-32-33-39"]
open Ts2ocaml_min
module IteratorYieldResult =
  struct
    type 'TYield t = [ `IteratorYieldResult of 'TYield ] intf
    let rec t_of_js : 'TYield . (Ojs.t -> 'TYield) -> Ojs.t -> 'TYield t =
      fun _TYield -> Obj.magic
    and t_to_js : 'TYield . ('TYield -> Ojs.t) -> 'TYield t -> Ojs.t =
      fun _TYield -> Obj.magic
    type 'TYield t_1 = 'TYield t
    let rec t_1_of_js : 'TYield . (Ojs.t -> 'TYield) -> Ojs.t -> 'TYield t_1
      = fun (type __TYield) ->
      fun (__TYield_of_js : Ojs.t -> __TYield) ->
        fun (x3 : Ojs.t) -> t_of_js __TYield_of_js x3
    and t_1_to_js : 'TYield . ('TYield -> Ojs.t) -> 'TYield t_1 -> Ojs.t =
      fun (type __TYield) ->
      fun (__TYield_to_js : __TYield -> Ojs.t) ->
        fun (x1 : __TYield t) -> t_to_js __TYield_to_js x1
    type 'TYield tags = [ `IteratorYieldResult of 'TYield ]
    type 'TYield tags_1 = 'TYield tags
    type ('tags, 'TYield) this =
      'tags intf constraint 'tags = [> `IteratorYieldResult of 'TYield ]
    let rec this_of_js :
      'tags 'TYield .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'TYield) -> Ojs.t -> ('tags, 'TYield) this
      = fun (type __tags) -> fun (type __TYield) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__TYield_of_js : Ojs.t -> __TYield) ->
          fun (x7 : Ojs.t) -> intf_of_js __tags_of_js x7
    and this_to_js :
      'tags 'TYield .
        ('tags -> Ojs.t) ->
          ('TYield -> Ojs.t) -> ('tags, 'TYield) this -> Ojs.t
      = fun (type __tags) -> fun (type __TYield) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__TYield_to_js : __TYield -> Ojs.t) ->
          fun (x5 : __tags intf) -> intf_to_js __tags_to_js x5
    let (get_done : ('tags, 'TYield) this -> [ `L_b_false ]) =
      fun (x9 : ('tags, 'TYield) this) ->
        let x12 =
          Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x9) "done" in
        match Ojs.bool_of_js x12 with
        | false -> `L_b_false
        | _ -> assert false
    let (set_done : ('tags, 'TYield) this -> [ `L_b_false ] -> unit) =
      fun (x13 : ('tags, 'TYield) this) ->
        fun (x14 : [ `L_b_false ]) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x13) "done"
            (match x14 with | `L_b_false -> Ojs.bool_to_js false)
    let (get_value : ('tags, 'TYield) this -> 'TYield) =
      fun (x17 : ('tags, 'TYield) this) ->
        Obj.magic
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x17) "value")
    let (set_value : ('tags, 'TYield) this -> 'TYield -> unit) =
      fun (x20 : ('tags, 'TYield) this) ->
        fun (x21 : 'TYield) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x20) "value"
            (Obj.magic x21)
    let cast_from = Obj.magic
  end
module IteratorReturnResult =
  struct
    type 'TReturn t = [ `IteratorReturnResult of 'TReturn ] intf
    let rec t_of_js : 'TReturn . (Ojs.t -> 'TReturn) -> Ojs.t -> 'TReturn t =
      fun _TReturn -> Obj.magic
    and t_to_js : 'TReturn . ('TReturn -> Ojs.t) -> 'TReturn t -> Ojs.t =
      fun _TReturn -> Obj.magic
    type 'TReturn t_1 = 'TReturn t
    let rec t_1_of_js :
      'TReturn . (Ojs.t -> 'TReturn) -> Ojs.t -> 'TReturn t_1 = fun (type
      __TReturn) ->
      fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
        fun (x26 : Ojs.t) -> t_of_js __TReturn_of_js x26
    and t_1_to_js : 'TReturn . ('TReturn -> Ojs.t) -> 'TReturn t_1 -> Ojs.t =
      fun (type __TReturn) ->
      fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
        fun (x24 : __TReturn t) -> t_to_js __TReturn_to_js x24
    type 'TReturn tags = [ `IteratorReturnResult of 'TReturn ]
    type 'TReturn tags_1 = 'TReturn tags
    type ('tags, 'TReturn) this =
      'tags intf constraint 'tags = [> `IteratorReturnResult of 'TReturn ]
    let rec this_of_js :
      'tags 'TReturn .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'TReturn) -> Ojs.t -> ('tags, 'TReturn) this
      = fun (type __tags) -> fun (type __TReturn) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (x30 : Ojs.t) -> intf_of_js __tags_of_js x30
    and this_to_js :
      'tags 'TReturn .
        ('tags -> Ojs.t) ->
          ('TReturn -> Ojs.t) -> ('tags, 'TReturn) this -> Ojs.t
      = fun (type __tags) -> fun (type __TReturn) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (x28 : __tags intf) -> intf_to_js __tags_to_js x28
    let (get_done : ('tags, 'TReturn) this -> [ `L_b_true ]) =
      fun (x32 : ('tags, 'TReturn) this) ->
        let x35 =
          Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x32) "done" in
        match Ojs.bool_of_js x35 with | true -> `L_b_true | _ -> assert false
    let (set_done : ('tags, 'TReturn) this -> [ `L_b_true ] -> unit) =
      fun (x36 : ('tags, 'TReturn) this) ->
        fun (x37 : [ `L_b_true ]) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x36) "done"
            (match x37 with | `L_b_true -> Ojs.bool_to_js true)
    let (get_value : ('tags, 'TReturn) this -> 'TReturn) =
      fun (x40 : ('tags, 'TReturn) this) ->
        Obj.magic
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x40) "value")
    let (set_value : ('tags, 'TReturn) this -> 'TReturn -> unit) =
      fun (x43 : ('tags, 'TReturn) this) ->
        fun (x44 : 'TReturn) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x43) "value"
            (Obj.magic x44)
    let cast_from = Obj.magic
  end
module IteratorResult =
  struct
    type ('T, 'TReturn) t =
      [ `U_b_false of 'T IteratorYieldResult.t 
      | `U_b_true of 'TReturn IteratorReturnResult.t ]
    let rec t_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (x52 : Ojs.t) ->
            let x53 = x52 in
            match Ojs.bool_of_js (Ojs.get_prop_ascii x53 "done") with
            | false -> `U_b_false (IteratorYieldResult.t_of_js __T_of_js x53)
            | true ->
                `U_b_true (IteratorReturnResult.t_of_js __TReturn_of_js x53)
    and t_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun
            (x47 :
              [ `U_b_false of __T IteratorYieldResult.t 
              | `U_b_true of __TReturn IteratorReturnResult.t ])
            ->
            match x47 with
            | `U_b_false x48 -> IteratorYieldResult.t_to_js __T_to_js x48
            | `U_b_true x50 ->
                IteratorReturnResult.t_to_js __TReturn_to_js x50
    type ('T, 'TReturn) t_2 = ('T, 'TReturn) t
    let rec t_2_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t_2
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (x59 : Ojs.t) -> t_of_js __T_of_js __TReturn_of_js x59
    and t_2_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t_2 -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (x56 : (__T, __TReturn) t) ->
            t_to_js __T_to_js __TReturn_to_js x56
    type 'T t_1 = ('T, any) t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x65 : Ojs.t) -> t_of_js __T_of_js any_of_js x65
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x62 : (__T, any) t) -> t_to_js __T_to_js any_to_js x62
  end
module Iterator =
  struct
    type ('T, 'TReturn, 'TNext) t =
      [ `Iterator of ('T * 'TReturn * 'TNext) ] intf
    let rec t_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    and t_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t -> Ojs.t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    type ('T, 'TReturn, 'TNext) t_3 = ('T, 'TReturn, 'TNext) t
    let rec t_3_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t_3
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (__TNext_of_js : Ojs.t -> __TNext) ->
            fun (x72 : Ojs.t) ->
              t_of_js __T_of_js __TReturn_of_js __TNext_of_js x72
    and t_3_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t_3 -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (__TNext_to_js : __TNext -> Ojs.t) ->
            fun (x68 : (__T, __TReturn, __TNext) t) ->
              t_to_js __T_to_js __TReturn_to_js __TNext_to_js x68
    type ('T, 'TReturn) t_2 = ('T, 'TReturn, never or_undefined) t
    let rec t_2_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t_2
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (x81 : Ojs.t) ->
            t_of_js __T_of_js __TReturn_of_js
              (fun (x84 : Ojs.t) -> or_undefined_of_js never_of_js x84) x81
    and t_2_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t_2 -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (x76 : (__T, __TReturn, never or_undefined) t) ->
            t_to_js __T_to_js __TReturn_to_js
              (fun (x79 : never or_undefined) ->
                 or_undefined_to_js never_to_js x79) x76
    type 'T t_1 = ('T, any, never or_undefined) t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x91 : Ojs.t) ->
          t_of_js __T_of_js any_of_js
            (fun (x94 : Ojs.t) -> or_undefined_of_js never_of_js x94) x91
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x86 : (__T, any, never or_undefined) t) ->
          t_to_js __T_to_js any_to_js
            (fun (x89 : never or_undefined) ->
               or_undefined_to_js never_to_js x89) x86
    type ('T, 'TReturn, 'TNext) tags =
      [ `Iterator of ('T * 'TReturn * 'TNext) ]
    type ('T, 'TReturn, 'TNext) tags_3 = ('T, 'TReturn, 'TNext) tags
    type ('T, 'TReturn) tags_2 = ('T, 'TReturn, never or_undefined) tags
    type 'T tags_1 = ('T, any, never or_undefined) tags
    type ('tags, 'T, 'TReturn, 'TNext) this =
      'tags intf constraint 'tags =
                  [> `Iterator of ('T * 'TReturn * 'TNext) ]
    let rec this_of_js :
      'tags 'T 'TReturn 'TNext .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'T) ->
            (Ojs.t -> 'TReturn) ->
              (Ojs.t -> 'TNext) ->
                Ojs.t -> ('tags, 'T, 'TReturn, 'TNext) this
      = fun (type __tags) -> fun (type __T) -> fun (type __TReturn) -> fun
      (type __TNext) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
            fun (__TNext_of_js : Ojs.t -> __TNext) ->
              fun (x98 : Ojs.t) -> intf_of_js __tags_of_js x98
    and this_to_js :
      'tags 'T 'TReturn 'TNext .
        ('tags -> Ojs.t) ->
          ('T -> Ojs.t) ->
            ('TReturn -> Ojs.t) ->
              ('TNext -> Ojs.t) ->
                ('tags, 'T, 'TReturn, 'TNext) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) -> fun (type __TReturn) -> fun
      (type __TNext) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
            fun (__TNext_to_js : __TNext -> Ojs.t) ->
              fun (x96 : __tags intf) -> intf_to_js __tags_to_js x96
    let (next :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        args:any list -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x103 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~args:(x100 : any list) ->
          IteratorResult.t_of_js Obj.magic Obj.magic
            (let x108 =
               this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x103 in
             Ojs.call (Ojs.get_prop_ascii x108 "next") "apply"
               [|x108;((let x101 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x102 : any) ->
                             ignore
                               (Ojs.call x101 "push" [|(any_to_js x102)|]))
                          x100;
                        x101))|])
    let (return :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        ?value:'TReturn -> unit -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x114 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ?value:(x111 : 'TReturn option) ->
          fun () ->
            IteratorResult.t_of_js Obj.magic Obj.magic
              (let x119 =
                 this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x114 in
               Ojs.call (Ojs.get_prop_ascii x119 "return") "apply"
                 [|x119;((let x112 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x111 with
                           | Some x113 ->
                               ignore
                                 (Ojs.call x112 "push" [|(Obj.magic x113)|])
                           | None -> ());
                          x112))|])
    let (throw :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        ?e:any -> unit -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x125 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ?e:(x122 : any option) ->
          fun () ->
            IteratorResult.t_of_js Obj.magic Obj.magic
              (let x130 =
                 this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x125 in
               Ojs.call (Ojs.get_prop_ascii x130 "throw") "apply"
                 [|x130;((let x123 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x122 with
                           | Some x124 ->
                               ignore
                                 (Ojs.call x123 "push" [|(any_to_js x124)|])
                           | None -> ());
                          x123))|])
    let cast_from = Obj.magic
  end
module Iterable =
  struct
    type 'T t = [ `Iterable of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x135 : Ojs.t) -> t_of_js __T_of_js x135
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x133 : __T t) -> t_to_js __T_to_js x133
    type 'T tags = [ `Iterable of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `Iterable of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x139 : Ojs.t) -> intf_of_js __tags_of_js x139
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x137 : __tags intf) -> intf_to_js __tags_to_js x137
    let cast_from = Obj.magic
  end
module WeakSet =
  struct
    type 'T t = [ `WeakSet of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x143 : Ojs.t) -> t_of_js __T_of_js x143
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x141 : __T t) -> t_to_js __T_to_js x141
    type 'T tags = [ `WeakSet of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this = 'tags intf constraint 'tags = [> `WeakSet of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x147 : Ojs.t) -> intf_of_js __tags_of_js x147
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x145 : __tags intf) -> intf_to_js __tags_to_js x145
    let (add : ('tags, 'T) this -> value:'T -> ('tags, 'T) this) =
      fun (x150 : ('tags, 'T) this) ->
        fun ~value:(x149 : 'T) ->
          this_of_js Obj.magic Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x150) "add"
               [|(Obj.magic x149)|])
    let (delete : ('tags, 'T) this -> value:'T -> bool) =
      fun (x156 : ('tags, 'T) this) ->
        fun ~value:(x155 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x156) "delete"
               [|(Obj.magic x155)|])
    let (has : ('tags, 'T) this -> value:'T -> bool) =
      fun (x160 : ('tags, 'T) this) ->
        fun ~value:(x159 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x160) "has"
               [|(Obj.magic x159)|])
    let (create : ?values:'T list or_null -> unit -> 'T t) =
      fun ?values:(x163 : 'T list or_null option) ->
        fun () ->
          t_of_js Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "WeakSet")
               (let x164 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x163 with
                 | Some x165 ->
                     ignore
                       (Ojs.call x164 "push"
                          [|(or_null_to_js
                               (fun (x166 : 'T list) ->
                                  Ojs.list_to_js Obj.magic x166) x165)|])
                 | None -> ());
                x164))
    let (prototype : unit -> untyped_object t) =
      fun () ->
        t_of_js untyped_object_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakSet")
             "prototype")
    let (create' : 'T Iterable.t -> 'T t) =
      fun (x170 : 'T Iterable.t) ->
        t_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WeakSet")
             [|(Iterable.t_to_js Obj.magic x170)|])
    let cast_from = Obj.magic
  end
module WeakRef =
  struct
    type 'T t = [ `WeakRef of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x175 : Ojs.t) -> t_of_js __T_of_js x175
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x173 : __T t) -> t_to_js __T_to_js x173
    type 'T tags = [ `WeakRef of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this = 'tags intf constraint 'tags = [> `WeakRef of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x179 : Ojs.t) -> intf_of_js __tags_of_js x179
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x177 : __tags intf) -> intf_to_js __tags_to_js x177
    let (deref : ('tags, 'T) this -> 'T or_undefined) =
      fun (x181 : ('tags, 'T) this) ->
        or_undefined_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x181) "deref" [||])
    let (deref' : ('tags, 'T) this -> 'T or_undefined) =
      fun (x185 : ('tags, 'T) this) ->
        or_undefined_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x185) "deref" [||])
    let (prototype : unit -> any t) =
      fun () ->
        t_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakRef")
             "prototype")
    let (create : ?target:'T -> unit -> 'T t) =
      fun ?target:(x190 : 'T option) ->
        fun () ->
          t_of_js Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "WeakRef")
               (let x191 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x190 with
                 | Some x192 ->
                     ignore (Ojs.call x191 "push" [|(Obj.magic x192)|])
                 | None -> ());
                x191))
    let (prototype' : unit -> any t) =
      fun () ->
        t_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakRef")
             "prototype")
    let (create' : 'T -> 'T t) =
      fun (x195 : 'T) ->
        t_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WeakRef")
             [|(Obj.magic x195)|])
    let cast_from = Obj.magic
  end
module WeakMap =
  struct
    type ('K, 'V) t = [ `WeakMap of ('K * 'V) ] intf
    let rec t_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) t =
      fun _K -> fun _V -> Obj.magic
    and t_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) t -> Ojs.t =
      fun _K -> fun _V -> Obj.magic
    type ('K, 'V) t_2 = ('K, 'V) t
    let rec t_2_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) t_2 = fun
      (type __K) -> fun (type __V) ->
      fun (__K_of_js : Ojs.t -> __K) ->
        fun (__V_of_js : Ojs.t -> __V) ->
          fun (x200 : Ojs.t) -> t_of_js __K_of_js __V_of_js x200
    and t_2_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) t_2 -> Ojs.t = fun
      (type __K) -> fun (type __V) ->
      fun (__K_to_js : __K -> Ojs.t) ->
        fun (__V_to_js : __V -> Ojs.t) ->
          fun (x197 : (__K, __V) t) -> t_to_js __K_to_js __V_to_js x197
    type ('K, 'V) tags = [ `WeakMap of ('K * 'V) ]
    type ('K, 'V) tags_2 = ('K, 'V) tags
    type ('tags, 'K, 'V) this =
      'tags intf constraint 'tags = [> `WeakMap of ('K * 'V) ]
    let rec this_of_js :
      'tags 'K 'V .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('tags, 'K, 'V) this
      = fun (type __tags) -> fun (type __K) -> fun (type __V) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__K_of_js : Ojs.t -> __K) ->
          fun (__V_of_js : Ojs.t -> __V) ->
            fun (x205 : Ojs.t) -> intf_of_js __tags_of_js x205
    and this_to_js :
      'tags 'K 'V .
        ('tags -> Ojs.t) ->
          ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('tags, 'K, 'V) this -> Ojs.t
      = fun (type __tags) -> fun (type __K) -> fun (type __V) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__K_to_js : __K -> Ojs.t) ->
          fun (__V_to_js : __V -> Ojs.t) ->
            fun (x203 : __tags intf) -> intf_to_js __tags_to_js x203
    let (delete : ('tags, 'K, 'V) this -> key:'K -> bool) =
      fun (x208 : ('tags, 'K, 'V) this) ->
        fun ~key:(x207 : 'K) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x208)
               "delete" [|(Obj.magic x207)|])
    let (get_ : ('tags, 'K, 'V) this -> key:'K -> 'V or_undefined) =
      fun (x213 : ('tags, 'K, 'V) this) ->
        fun ~key:(x212 : 'K) ->
          or_undefined_of_js Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x213) "get"
               [|(Obj.magic x212)|])
    let (has : ('tags, 'K, 'V) this -> key:'K -> bool) =
      fun (x219 : ('tags, 'K, 'V) this) ->
        fun ~key:(x218 : 'K) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x219) "has"
               [|(Obj.magic x218)|])
    let (set_ :
      ('tags, 'K, 'V) this -> key:'K -> value:'V -> ('tags, 'K, 'V) this) =
      fun (x225 : ('tags, 'K, 'V) this) ->
        fun ~key:(x223 : 'K) ->
          fun ~value:(x224 : 'V) ->
            this_of_js Obj.magic Obj.magic Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x225) "set"
                 [|(Obj.magic x223);(Obj.magic x224)|])
    let (create : ?entries:('K * 'V) list or_null -> unit -> ('K, 'V) t) =
      fun ?entries:(x232 : ('K * 'V) list or_null option) ->
        fun () ->
          t_of_js Obj.magic Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "WeakMap")
               (let x233 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x232 with
                 | Some x234 ->
                     ignore
                       (Ojs.call x233 "push"
                          [|(or_null_to_js
                               (fun (x235 : ('K * 'V) list) ->
                                  Ojs.list_to_js
                                    (fun (x236 : ('K * 'V)) ->
                                       let (x237, x238) = x236 in
                                       let x239 = Ojs.array_make 2 in
                                       Ojs.array_set x239 0 (Obj.magic x237);
                                       Ojs.array_set x239 1 (Obj.magic x238);
                                       x239) x235) x234)|])
                 | None -> ());
                x233))
    let (prototype : unit -> (untyped_object, any) t) =
      fun () ->
        t_of_js untyped_object_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakMap")
             "prototype")
    let (create' : ('K * 'V) Iterable.t -> ('K, 'V) t) =
      fun (x244 : ('K * 'V) Iterable.t) ->
        t_of_js Obj.magic Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WeakMap")
             [|(Iterable.t_to_js
                  (fun (x245 : ('K * 'V)) ->
                     let (x246, x247) = x245 in
                     let x248 = Ojs.array_make 2 in
                     Ojs.array_set x248 0 (Obj.magic x246);
                     Ojs.array_set x248 1 (Obj.magic x247);
                     x248) x244)|])
    let cast_from = Obj.magic
  end
module Uppercase =
  struct
    type 'S t = Ojs.t
    let rec t_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t = fun (type __S) ->
      fun (__S_of_js : Ojs.t -> __S) -> fun (x252 : Ojs.t) -> x252
    and t_to_js : 'S . ('S -> Ojs.t) -> 'S t -> Ojs.t = fun (type __S) ->
      fun (__S_to_js : __S -> Ojs.t) -> fun (x251 : Ojs.t) -> x251
    type 'S t_1 = 'S t
    let rec t_1_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t_1 = fun (type
      __S) ->
      fun (__S_of_js : Ojs.t -> __S) ->
        fun (x255 : Ojs.t) -> t_of_js __S_of_js x255
    and t_1_to_js : 'S . ('S -> Ojs.t) -> 'S t_1 -> Ojs.t = fun (type __S) ->
      fun (__S_to_js : __S -> Ojs.t) ->
        fun (x253 : __S t) -> t_to_js __S_to_js x253
  end
module Uncapitalize =
  struct
    type 'S t = Ojs.t
    let rec t_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t = fun (type __S) ->
      fun (__S_of_js : Ojs.t -> __S) -> fun (x258 : Ojs.t) -> x258
    and t_to_js : 'S . ('S -> Ojs.t) -> 'S t -> Ojs.t = fun (type __S) ->
      fun (__S_to_js : __S -> Ojs.t) -> fun (x257 : Ojs.t) -> x257
    type 'S t_1 = 'S t
    let rec t_1_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t_1 = fun (type
      __S) ->
      fun (__S_of_js : Ojs.t -> __S) ->
        fun (x261 : Ojs.t) -> t_of_js __S_of_js x261
    and t_1_to_js : 'S . ('S -> Ojs.t) -> 'S t_1 -> Ojs.t = fun (type __S) ->
      fun (__S_to_js : __S -> Ojs.t) ->
        fun (x259 : __S t) -> t_to_js __S_to_js x259
  end
module SharedArrayBuffer =
  struct
    type t = [ `SharedArrayBuffer ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x264 : Ojs.t) -> t_of_js x264
    and t_0_to_js : t_0 -> Ojs.t = fun (x263 : t) -> t_to_js x263
    type tags = [ `SharedArrayBuffer ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `SharedArrayBuffer ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x267 : Ojs.t) -> intf_of_js __tags_of_js x267
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x265 : __tags intf) -> intf_to_js __tags_to_js x265
    let (get_byteLength : 'tags this -> float) =
      fun (x269 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x269) "byteLength")
    let (slice : 'tags this -> begin_:float -> ?end_:float -> unit -> t) =
      fun (x275 : 'tags this) ->
        fun ~begin_:(x271 : float) ->
          fun ?end_:(x272 : float option) ->
            fun () ->
              t_of_js
                (let x277 = this_to_js Obj.magic x275 in
                 Ojs.call (Ojs.get_prop_ascii x277 "slice") "apply"
                   [|x277;((let x273 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x273 "push"
                                 [|(Ojs.float_to_js x271)|]);
                            (match x272 with
                             | Some x274 ->
                                 ignore
                                   (Ojs.call x273 "push"
                                      [|(Ojs.float_to_js x274)|])
                             | None -> ());
                            x273))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "SharedArrayBuffer") "prototype")
    let (create : float -> t) =
      fun (x278 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "SharedArrayBuffer")
             [|(Ojs.float_to_js x278)|])
    let cast_from = Obj.magic
  end
module ArrayBuffer =
  struct
    type t = [ `ArrayBuffer ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x280 : Ojs.t) -> t_of_js x280
    and t_0_to_js : t_0 -> Ojs.t = fun (x279 : t) -> t_to_js x279
    type tags = [ `ArrayBuffer ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ArrayBuffer ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x283 : Ojs.t) -> intf_of_js __tags_of_js x283
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x281 : __tags intf) -> intf_to_js __tags_to_js x281
    let (get_byteLength : 'tags this -> float) =
      fun (x285 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x285) "byteLength")
    let (slice : 'tags this -> begin_:float -> ?end_:float -> unit -> t) =
      fun (x291 : 'tags this) ->
        fun ~begin_:(x287 : float) ->
          fun ?end_:(x288 : float option) ->
            fun () ->
              t_of_js
                (let x293 = this_to_js Obj.magic x291 in
                 Ojs.call (Ojs.get_prop_ascii x293 "slice") "apply"
                   [|x293;((let x289 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x289 "push"
                                 [|(Ojs.float_to_js x287)|]);
                            (match x288 with
                             | Some x290 ->
                                 ignore
                                   (Ojs.call x289 "push"
                                      [|(Ojs.float_to_js x290)|])
                             | None -> ());
                            x289))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "ArrayBuffer")
             "prototype")
    let (create : float -> t) =
      fun (x294 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "ArrayBuffer")
             [|(Ojs.float_to_js x294)|])
    let (isView : any -> bool) =
      fun (x295 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "ArrayBuffer") "isView"
             [|(any_to_js x295)|])
    let cast_from = Obj.magic
  end
module ArrayBufferLike =
  struct
    type t = (ArrayBuffer.t, SharedArrayBuffer.t) union2
    let rec t_of_js : Ojs.t -> t =
      fun (x299 : Ojs.t) ->
        union2_of_js ArrayBuffer.t_of_js SharedArrayBuffer.t_of_js x299
    and t_to_js : t -> Ojs.t =
      fun (x296 : (ArrayBuffer.t, SharedArrayBuffer.t) union2) ->
        union2_to_js ArrayBuffer.t_to_js SharedArrayBuffer.t_to_js x296
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x303 : Ojs.t) -> t_of_js x303
    and t_0_to_js : t_0 -> Ojs.t = fun (x302 : t) -> t_to_js x302
  end
module IterableIterator =
  struct
    type 'T t =
      [ `IterableIterator of 'T 
      | `Iterator of ('T * any * never or_undefined) ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x306 : Ojs.t) -> t_of_js __T_of_js x306
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x304 : __T t) -> t_to_js __T_to_js x304
    type 'T tags =
      [ `IterableIterator of 'T 
      | `Iterator of ('T * any * never or_undefined) ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `IterableIterator of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x310 : Ojs.t) -> intf_of_js __tags_of_js x310
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x308 : __tags intf) -> intf_to_js __tags_to_js x308
    let cast_from = Obj.magic
  end
module ArrayLike =
  struct
    type 'T t = [ `ArrayLike of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x314 : Ojs.t) -> t_of_js __T_of_js x314
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x312 : __T t) -> t_to_js __T_to_js x312
    type 'T tags = [ `ArrayLike of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ArrayLike of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x318 : Ojs.t) -> intf_of_js __tags_of_js x318
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x316 : __tags intf) -> intf_to_js __tags_to_js x316
    let (get_length : ('tags, 'T) this -> float) =
      fun (x320 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x320) "length")
    let (get : ('tags, 'T) this -> float -> 'T) =
      fun (x323 : ('tags, 'T) this) ->
        fun (x326 : float) ->
          Obj.magic
            (Ojs.get_prop (this_to_js Obj.magic Obj.magic x323)
               (Ojs.float_to_js x326))
    let cast_from = Obj.magic
  end
module Uint8ClampedArray =
  struct
    type t =
      [ `ArrayLike of float  | `IterableIterator of float 
      | `Iterator of (float * any * never or_undefined) 
      | `Uint8ClampedArray ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x328 : Ojs.t) -> t_of_js x328
    and t_0_to_js : t_0 -> Ojs.t = fun (x327 : t) -> t_to_js x327
    type tags =
      [ `ArrayLike of float  | `IterableIterator of float 
      | `Iterator of (float * any * never or_undefined) 
      | `Uint8ClampedArray ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Uint8ClampedArray ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x331 : Ojs.t) -> intf_of_js __tags_of_js x331
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x329 : __tags intf) -> intf_to_js __tags_to_js x329
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x337 : 'tags this) ->
        fun ~searchElement:(x333 : float) ->
          fun ?fromIndex:(x334 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x339 = this_to_js Obj.magic x337 in
                 Ojs.call (Ojs.get_prop_ascii x339 "includes") "apply"
                   [|x339;((let x335 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x335 "push"
                                 [|(Ojs.float_to_js x333)|]);
                            (match x334 with
                             | Some x336 ->
                                 ignore
                                   (Ojs.call x335 "push"
                                      [|(Ojs.float_to_js x336)|])
                             | None -> ());
                            x335))|])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x340 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x340) "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x342 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x342) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x344 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x344) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x346 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x346) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x353 : 'tags this) ->
        fun ~target:(x348 : float) ->
          fun ~start:(x349 : float) ->
            fun ?end_:(x350 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x355 = this_to_js Obj.magic x353 in
                   Ojs.call (Ojs.get_prop_ascii x355 "copyWithin") "apply"
                     [|x355;((let x351 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x351 "push"
                                   [|(Ojs.float_to_js x348)|]);
                              ignore
                                (Ojs.call x351 "push"
                                   [|(Ojs.float_to_js x349)|]);
                              (match x350 with
                               | Some x352 ->
                                   ignore
                                     (Ojs.call x351 "push"
                                        [|(Ojs.float_to_js x352)|])
                               | None -> ());
                              x351))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x364 : 'tags this) ->
        fun
          ~predicate:(x357 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x358 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x366 = this_to_js Obj.magic x364 in
                 Ojs.call (Ojs.get_prop_ascii x366 "every") "apply"
                   [|x366;((let x359 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x359 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x361 : Ojs.t) ->
                                         fun (x362 : Ojs.t) ->
                                           fun (x363 : Ojs.t) ->
                                             unknown_to_js
                                               (x357
                                                  ~value:(Ojs.float_of_js
                                                            x361)
                                                  ~index:(Ojs.float_of_js
                                                            x362)
                                                  ~array:(t_of_js x363))))|]);
                            (match x358 with
                             | Some x360 ->
                                 ignore
                                   (Ojs.call x359 "push" [|(any_to_js x360)|])
                             | None -> ());
                            x359))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x373 : 'tags this) ->
        fun ~value:(x367 : float) ->
          fun ?start:(x368 : float option) ->
            fun ?end_:(x369 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x375 = this_to_js Obj.magic x373 in
                   Ojs.call (Ojs.get_prop_ascii x375 "fill") "apply"
                     [|x375;((let x370 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x370 "push"
                                   [|(Ojs.float_to_js x367)|]);
                              (match x368 with
                               | Some x372 ->
                                   ignore
                                     (Ojs.call x370 "push"
                                        [|(Ojs.float_to_js x372)|])
                               | None -> ());
                              (match x369 with
                               | Some x371 ->
                                   ignore
                                     (Ojs.call x370 "push"
                                        [|(Ojs.float_to_js x371)|])
                               | None -> ());
                              x370))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x384 : 'tags this) ->
        fun ~predicate:(x377 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x378 : any option) ->
            fun () ->
              t_of_js
                (let x386 = this_to_js Obj.magic x384 in
                 Ojs.call (Ojs.get_prop_ascii x386 "filter") "apply"
                   [|x386;((let x379 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x379 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x381 : Ojs.t) ->
                                         fun (x382 : Ojs.t) ->
                                           fun (x383 : Ojs.t) ->
                                             any_to_js
                                               (x377
                                                  ~value:(Ojs.float_of_js
                                                            x381)
                                                  ~index:(Ojs.float_of_js
                                                            x382)
                                                  ~array:(t_of_js x383))))|]);
                            (match x378 with
                             | Some x380 ->
                                 ignore
                                   (Ojs.call x379 "push" [|(any_to_js x380)|])
                             | None -> ());
                            x379))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x394 : 'tags this) ->
        fun ~predicate:(x387 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x388 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x396 = this_to_js Obj.magic x394 in
                 Ojs.call (Ojs.get_prop_ascii x396 "find") "apply"
                   [|x396;((let x389 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x389 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x391 : Ojs.t) ->
                                         fun (x392 : Ojs.t) ->
                                           fun (x393 : Ojs.t) ->
                                             Ojs.bool_to_js
                                               (x387
                                                  ~value:(Ojs.float_of_js
                                                            x391)
                                                  ~index:(Ojs.float_of_js
                                                            x392)
                                                  ~obj:(t_of_js x393))))|]);
                            (match x388 with
                             | Some x390 ->
                                 ignore
                                   (Ojs.call x389 "push" [|(any_to_js x390)|])
                             | None -> ());
                            x389))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x405 : 'tags this) ->
        fun ~predicate:(x398 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x399 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x407 = this_to_js Obj.magic x405 in
                 Ojs.call (Ojs.get_prop_ascii x407 "findIndex") "apply"
                   [|x407;((let x400 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x400 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x402 : Ojs.t) ->
                                         fun (x403 : Ojs.t) ->
                                           fun (x404 : Ojs.t) ->
                                             Ojs.bool_to_js
                                               (x398
                                                  ~value:(Ojs.float_of_js
                                                            x402)
                                                  ~index:(Ojs.float_of_js
                                                            x403)
                                                  ~obj:(t_of_js x404))))|]);
                            (match x399 with
                             | Some x401 ->
                                 ignore
                                   (Ojs.call x400 "push" [|(any_to_js x401)|])
                             | None -> ());
                            x400))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x415 : 'tags this) ->
        fun
          ~callbackfn:(x408 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x409 : any option) ->
            fun () ->
              ignore
                (let x417 = this_to_js Obj.magic x415 in
                 Ojs.call (Ojs.get_prop_ascii x417 "forEach") "apply"
                   [|x417;((let x410 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x410 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x412 : Ojs.t) ->
                                         fun (x413 : Ojs.t) ->
                                           fun (x414 : Ojs.t) ->
                                             x408
                                               ~value:(Ojs.float_of_js x412)
                                               ~index:(Ojs.float_of_js x413)
                                               ~array:(t_of_js x414)))|]);
                            (match x409 with
                             | Some x411 ->
                                 ignore
                                   (Ojs.call x410 "push" [|(any_to_js x411)|])
                             | None -> ());
                            x410))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x422 : 'tags this) ->
        fun ~searchElement:(x418 : float) ->
          fun ?fromIndex:(x419 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x424 = this_to_js Obj.magic x422 in
                 Ojs.call (Ojs.get_prop_ascii x424 "indexOf") "apply"
                   [|x424;((let x420 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x420 "push"
                                 [|(Ojs.float_to_js x418)|]);
                            (match x419 with
                             | Some x421 ->
                                 ignore
                                   (Ojs.call x420 "push"
                                      [|(Ojs.float_to_js x421)|])
                             | None -> ());
                            x420))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x428 : 'tags this) ->
        fun ?separator:(x425 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x430 = this_to_js Obj.magic x428 in
               Ojs.call (Ojs.get_prop_ascii x430 "join") "apply"
                 [|x430;((let x426 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x425 with
                           | Some x427 ->
                               ignore
                                 (Ojs.call x426 "push"
                                    [|(Ojs.string_to_js x427)|])
                           | None -> ());
                          x426))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x435 : 'tags this) ->
        fun ~searchElement:(x431 : float) ->
          fun ?fromIndex:(x432 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x437 = this_to_js Obj.magic x435 in
                 Ojs.call (Ojs.get_prop_ascii x437 "lastIndexOf") "apply"
                   [|x437;((let x433 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x433 "push"
                                 [|(Ojs.float_to_js x431)|]);
                            (match x432 with
                             | Some x434 ->
                                 ignore
                                   (Ojs.call x433 "push"
                                      [|(Ojs.float_to_js x434)|])
                             | None -> ());
                            x433))|])
    let (get_length : 'tags this -> float) =
      fun (x438 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x438) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x447 : 'tags this) ->
        fun
          ~callbackfn:(x440 : value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x441 : any option) ->
            fun () ->
              t_of_js
                (let x449 = this_to_js Obj.magic x447 in
                 Ojs.call (Ojs.get_prop_ascii x449 "map") "apply"
                   [|x449;((let x442 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x442 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x444 : Ojs.t) ->
                                         fun (x445 : Ojs.t) ->
                                           fun (x446 : Ojs.t) ->
                                             Ojs.float_to_js
                                               (x440
                                                  ~value:(Ojs.float_of_js
                                                            x444)
                                                  ~index:(Ojs.float_of_js
                                                            x445)
                                                  ~array:(t_of_js x446))))|]);
                            (match x441 with
                             | Some x443 ->
                                 ignore
                                   (Ojs.call x442 "push" [|(any_to_js x443)|])
                             | None -> ());
                            x442))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x455 : 'tags this) ->
        fun
          ~callbackfn:(x450 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x455) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x451 : Ojs.t) ->
                       fun (x452 : Ojs.t) ->
                         fun (x453 : Ojs.t) ->
                           fun (x454 : Ojs.t) ->
                             Ojs.float_to_js
                               (x450 ~previousValue:(Ojs.float_of_js x451)
                                  ~currentValue:(Ojs.float_of_js x452)
                                  ~currentIndex:(Ojs.float_of_js x453)
                                  ~array:(t_of_js x454))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x463 : 'tags this) ->
        fun
          ~callbackfn:(x457 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x462 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x463) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x458 : Ojs.t) ->
                         fun (x459 : Ojs.t) ->
                           fun (x460 : Ojs.t) ->
                             fun (x461 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x457 ~previousValue:(Ojs.float_of_js x458)
                                    ~currentValue:(Ojs.float_of_js x459)
                                    ~currentIndex:(Ojs.float_of_js x460)
                                    ~array:(t_of_js x461))));(Ojs.float_to_js
                                                                x462)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x471 : 'tags this) ->
        fun
          ~callbackfn:(x465 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x470 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x471) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x466 : Ojs.t) ->
                         fun (x467 : Ojs.t) ->
                           fun (x468 : Ojs.t) ->
                             fun (x469 : Ojs.t) ->
                               Obj.magic
                                 (x465 ~previousValue:(Obj.magic x466)
                                    ~currentValue:(Ojs.float_of_js x467)
                                    ~currentIndex:(Ojs.float_of_js x468)
                                    ~array:(t_of_js x469))));(Obj.magic x470)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x478 : 'tags this) ->
        fun
          ~callbackfn:(x473 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x478) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x474 : Ojs.t) ->
                       fun (x475 : Ojs.t) ->
                         fun (x476 : Ojs.t) ->
                           fun (x477 : Ojs.t) ->
                             Ojs.float_to_js
                               (x473 ~previousValue:(Ojs.float_of_js x474)
                                  ~currentValue:(Ojs.float_of_js x475)
                                  ~currentIndex:(Ojs.float_of_js x476)
                                  ~array:(t_of_js x477))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x486 : 'tags this) ->
        fun
          ~callbackfn:(x480 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x485 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x486) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x481 : Ojs.t) ->
                         fun (x482 : Ojs.t) ->
                           fun (x483 : Ojs.t) ->
                             fun (x484 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x480 ~previousValue:(Ojs.float_of_js x481)
                                    ~currentValue:(Ojs.float_of_js x482)
                                    ~currentIndex:(Ojs.float_of_js x483)
                                    ~array:(t_of_js x484))));(Ojs.float_to_js
                                                                x485)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x494 : 'tags this) ->
        fun
          ~callbackfn:(x488 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x493 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x494) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x489 : Ojs.t) ->
                         fun (x490 : Ojs.t) ->
                           fun (x491 : Ojs.t) ->
                             fun (x492 : Ojs.t) ->
                               Obj.magic
                                 (x488 ~previousValue:(Obj.magic x489)
                                    ~currentValue:(Ojs.float_of_js x490)
                                    ~currentIndex:(Ojs.float_of_js x491)
                                    ~array:(t_of_js x492))));(Obj.magic x493)|])
    let (reverse : 'tags this -> t) =
      fun (x496 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x496) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x503 : 'tags this) ->
        fun ~array:(x498 : float ArrayLike.t) ->
          fun ?offset:(x499 : float option) ->
            fun () ->
              ignore
                (let x505 = this_to_js Obj.magic x503 in
                 Ojs.call (Ojs.get_prop_ascii x505 "set") "apply"
                   [|x505;((let x500 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x500 "push"
                                 [|(ArrayLike.t_to_js Ojs.float_to_js x498)|]);
                            (match x499 with
                             | Some x501 ->
                                 ignore
                                   (Ojs.call x500 "push"
                                      [|(Ojs.float_to_js x501)|])
                             | None -> ());
                            x500))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x511 : 'tags this) ->
        fun ?start:(x506 : float option) ->
          fun ?end_:(x507 : float option) ->
            fun () ->
              t_of_js
                (let x513 = this_to_js Obj.magic x511 in
                 Ojs.call (Ojs.get_prop_ascii x513 "slice") "apply"
                   [|x513;((let x508 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x506 with
                             | Some x510 ->
                                 ignore
                                   (Ojs.call x508 "push"
                                      [|(Ojs.float_to_js x510)|])
                             | None -> ());
                            (match x507 with
                             | Some x509 ->
                                 ignore
                                   (Ojs.call x508 "push"
                                      [|(Ojs.float_to_js x509)|])
                             | None -> ());
                            x508))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x521 : 'tags this) ->
        fun
          ~predicate:(x514 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x515 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x523 = this_to_js Obj.magic x521 in
                 Ojs.call (Ojs.get_prop_ascii x523 "some") "apply"
                   [|x523;((let x516 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x516 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x518 : Ojs.t) ->
                                         fun (x519 : Ojs.t) ->
                                           fun (x520 : Ojs.t) ->
                                             unknown_to_js
                                               (x514
                                                  ~value:(Ojs.float_of_js
                                                            x518)
                                                  ~index:(Ojs.float_of_js
                                                            x519)
                                                  ~array:(t_of_js x520))))|]);
                            (match x515 with
                             | Some x517 ->
                                 ignore
                                   (Ojs.call x516 "push" [|(any_to_js x517)|])
                             | None -> ());
                            x516))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x529 : 'tags this) ->
        fun ?compareFn:(x524 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x531 = this_to_js Obj.magic x529 in
               Ojs.call (Ojs.get_prop_ascii x531 "sort") "apply"
                 [|x531;((let x525 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x524 with
                           | Some x526 ->
                               ignore
                                 (Ojs.call x525 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x527 : Ojs.t) ->
                                            fun (x528 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x526
                                                   ~a:(Ojs.float_of_js x527)
                                                   ~b:(Ojs.float_of_js x528))))|])
                           | None -> ());
                          x525))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x538 : 'tags this) ->
        fun ?begin_:(x533 : float option) ->
          fun ?end_:(x534 : float option) ->
            fun () ->
              t_of_js
                (let x540 = this_to_js Obj.magic x538 in
                 Ojs.call (Ojs.get_prop_ascii x540 "subarray") "apply"
                   [|x540;((let x535 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x533 with
                             | Some x537 ->
                                 ignore
                                   (Ojs.call x535 "push"
                                      [|(Ojs.float_to_js x537)|])
                             | None -> ());
                            (match x534 with
                             | Some x536 ->
                                 ignore
                                   (Ojs.call x535 "push"
                                      [|(Ojs.float_to_js x536)|])
                             | None -> ());
                            x535))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x541 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x541) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x543 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x543) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x545 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x545) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x547 : 'tags this) ->
        fun (x549 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x547) (Ojs.float_to_js x549))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x550 : 'tags this) ->
        fun (x552 : float) ->
          fun (x553 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x550) (Ojs.float_to_js x552)
              (Ojs.float_to_js x553)
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x554 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x556 : Ojs.t) ->
             let x557 = x556 in
             ((Ojs.float_of_js (Ojs.array_get x557 0)),
               (Ojs.float_of_js (Ojs.array_get x557 1))))
          (Ojs.call (this_to_js Obj.magic x554) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x558 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x558) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x561 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x561) "values" [||])
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             [||])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray") "prototype")
    let (create' : float -> t) =
      fun (x564 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             [|(Ojs.float_to_js x564)|])
    let (create'' : (ArrayBufferLike.t, float ArrayLike.t) union2 -> t) =
      fun (x565 : (ArrayBufferLike.t, float ArrayLike.t) union2) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             [|(union2_to_js ArrayBufferLike.t_to_js
                  (fun (x567 : float ArrayLike.t) ->
                     ArrayLike.t_to_js Ojs.float_to_js x567) x565)|])
    let (create''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x569 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x570 : float option) ->
          fun ?length:(x571 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
                   (let x572 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x572 "push"
                         [|(ArrayBufferLike.t_to_js x569)|]);
                    (match x570 with
                     | Some x574 ->
                         ignore
                           (Ojs.call x572 "push" [|(Ojs.float_to_js x574)|])
                     | None -> ());
                    (match x571 with
                     | Some x573 ->
                         ignore
                           (Ojs.call x572 "push" [|(Ojs.float_to_js x573)|])
                     | None -> ());
                    x572))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x575 : float list) ->
        t_of_js
          (let x578 = Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray" in
           Ojs.call (Ojs.get_prop_ascii x578 "of") "apply"
             [|x578;((let x576 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      List.iter
                        (fun (x577 : float) ->
                           ignore
                             (Ojs.call x576 "push" [|(Ojs.float_to_js x577)|]))
                        x575;
                      x576))|])
    let (from : float ArrayLike.t -> t) =
      fun (x579 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             "from" [|(ArrayLike.t_to_js Ojs.float_to_js x579)|])
    let (from' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x581 : 'T ArrayLike.t) ->
        fun ~mapfn:(x582 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x583 : any option) ->
            fun () ->
              t_of_js
                (let x589 = Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray" in
                 Ojs.call (Ojs.get_prop_ascii x589 "from") "apply"
                   [|x589;((let x584 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x584 "push"
                                 [|(ArrayLike.t_to_js Obj.magic x581)|]);
                            ignore
                              (Ojs.call x584 "push"
                                 [|(Ojs.fun_to_js 2
                                      (fun (x586 : Ojs.t) ->
                                         fun (x587 : Ojs.t) ->
                                           Ojs.float_to_js
                                             (x582 ~v:(Obj.magic x586)
                                                ~k:(Ojs.float_of_js x587))))|]);
                            (match x583 with
                             | Some x585 ->
                                 ignore
                                   (Ojs.call x584 "push" [|(any_to_js x585)|])
                             | None -> ());
                            x584))|])
    let (create'''' : float Iterable.t -> t) =
      fun (x590 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             [|(Iterable.t_to_js Ojs.float_to_js x590)|])
    let (from'' :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x592 : float Iterable.t) ->
        fun ?mapfn:(x593 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x594 : any option) ->
            fun () ->
              t_of_js
                (let x601 = Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray" in
                 Ojs.call (Ojs.get_prop_ascii x601 "from") "apply"
                   [|x601;((let x595 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x595 "push"
                                 [|(Iterable.t_to_js Ojs.float_to_js x592)|]);
                            (match x593 with
                             | Some x597 ->
                                 ignore
                                   (Ojs.call x595 "push"
                                      [|(Ojs.fun_to_js 2
                                           (fun (x598 : Ojs.t) ->
                                              fun (x599 : Ojs.t) ->
                                                Ojs.float_to_js
                                                  (x597
                                                     ~v:(Ojs.float_of_js x598)
                                                     ~k:(Ojs.float_of_js x599))))|])
                             | None -> ());
                            (match x594 with
                             | Some x596 ->
                                 ignore
                                   (Ojs.call x595 "push" [|(any_to_js x596)|])
                             | None -> ());
                            x595))|])
    let cast_from = Obj.magic
  end
module Error =
  struct
    type t = [ `Error ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x603 : Ojs.t) -> t_of_js x603
    and t_0_to_js : t_0 -> Ojs.t = fun (x602 : t) -> t_to_js x602
    type tags = [ `Error ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Error ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x606 : Ojs.t) -> intf_of_js __tags_of_js x606
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x604 : __tags intf) -> intf_to_js __tags_to_js x604
    let (get_name : 'tags this -> string) =
      fun (x608 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x608) "name")
    let (set_name : 'tags this -> string -> unit) =
      fun (x610 : 'tags this) ->
        fun (x611 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x610) "name"
            (Ojs.string_to_js x611)
    let (get_message : 'tags this -> string) =
      fun (x613 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x613) "message")
    let (set_message : 'tags this -> string -> unit) =
      fun (x615 : 'tags this) ->
        fun (x616 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x615) "message"
            (Ojs.string_to_js x616)
    let (get_stack : 'tags this -> string) =
      fun (x618 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x618) "stack")
    let (set_stack : 'tags this -> string -> unit) =
      fun (x620 : 'tags this) ->
        fun (x621 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x620) "stack"
            (Ojs.string_to_js x621)
    let (create : ?message:string -> unit -> t) =
      fun ?message:(x623 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Error")
               (let x624 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x623 with
                 | Some x625 ->
                     ignore
                       (Ojs.call x624 "push" [|(Ojs.string_to_js x625)|])
                 | None -> ());
                x624))
    let (invoke : ?message:string -> unit -> t) =
      fun ?message:(x626 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Error") "apply"
               [|Ojs.null;((let x627 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x626 with
                             | Some x628 ->
                                 ignore
                                   (Ojs.call x627 "push"
                                      [|(Ojs.string_to_js x628)|])
                             | None -> ());
                            x627))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Error")
             "prototype")
    let cast_from = Obj.magic
  end
module URIError =
  struct
    type t = [ `Error  | `URIError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x630 : Ojs.t) -> t_of_js x630
    and t_0_to_js : t_0 -> Ojs.t = fun (x629 : t) -> t_to_js x629
    type tags = [ `Error  | `URIError ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `URIError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x633 : Ojs.t) -> intf_of_js __tags_of_js x633
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x631 : __tags intf) -> intf_to_js __tags_to_js x631
    let (create : ?message:string -> unit -> t) =
      fun ?message:(x635 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "URIError")
               (let x636 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x635 with
                 | Some x637 ->
                     ignore
                       (Ojs.call x636 "push" [|(Ojs.string_to_js x637)|])
                 | None -> ());
                x636))
    let (invoke : ?message:string -> unit -> t) =
      fun ?message:(x638 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "URIError") "apply"
               [|Ojs.null;((let x639 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x638 with
                             | Some x640 ->
                                 ignore
                                   (Ojs.call x639 "push"
                                      [|(Ojs.string_to_js x640)|])
                             | None -> ());
                            x639))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "URIError")
             "prototype")
    let cast_from = Obj.magic
  end
module TypeError =
  struct
    type t = [ `Error  | `TypeError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x642 : Ojs.t) -> t_of_js x642
    and t_0_to_js : t_0 -> Ojs.t = fun (x641 : t) -> t_to_js x641
    type tags = [ `Error  | `TypeError ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `TypeError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x645 : Ojs.t) -> intf_of_js __tags_of_js x645
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x643 : __tags intf) -> intf_to_js __tags_to_js x643
    let (create : ?message:string -> unit -> t) =
      fun ?message:(x647 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "TypeError")
               (let x648 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x647 with
                 | Some x649 ->
                     ignore
                       (Ojs.call x648 "push" [|(Ojs.string_to_js x649)|])
                 | None -> ());
                x648))
    let (invoke : ?message:string -> unit -> t) =
      fun ?message:(x650 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "TypeError") "apply"
               [|Ojs.null;((let x651 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x650 with
                             | Some x652 ->
                                 ignore
                                   (Ojs.call x651 "push"
                                      [|(Ojs.string_to_js x652)|])
                             | None -> ());
                            x651))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "TypeError")
             "prototype")
    let cast_from = Obj.magic
  end
module FlatArray =
  struct
    type ('Arr, 'Depth) t = any
    let rec t_of_js :
      'Arr 'Depth .
        (Ojs.t -> 'Arr) -> (Ojs.t -> 'Depth) -> Ojs.t -> ('Arr, 'Depth) t
      = fun (type __Arr) -> fun (type __Depth) ->
      fun (__Arr_of_js : Ojs.t -> __Arr) ->
        fun (__Depth_of_js : Ojs.t -> __Depth) ->
          fun (x654 : Ojs.t) -> any_of_js x654
    and t_to_js :
      'Arr 'Depth .
        ('Arr -> Ojs.t) -> ('Depth -> Ojs.t) -> ('Arr, 'Depth) t -> Ojs.t
      = fun (type __Arr) -> fun (type __Depth) ->
      fun (__Arr_to_js : __Arr -> Ojs.t) ->
        fun (__Depth_to_js : __Depth -> Ojs.t) ->
          fun (x653 : any) -> any_to_js x653
    type ('Arr, 'Depth) t_2 = ('Arr, 'Depth) t
    let rec t_2_of_js :
      'Arr 'Depth .
        (Ojs.t -> 'Arr) -> (Ojs.t -> 'Depth) -> Ojs.t -> ('Arr, 'Depth) t_2
      = fun (type __Arr) -> fun (type __Depth) ->
      fun (__Arr_of_js : Ojs.t -> __Arr) ->
        fun (__Depth_of_js : Ojs.t -> __Depth) ->
          fun (x658 : Ojs.t) -> t_of_js __Arr_of_js __Depth_of_js x658
    and t_2_to_js :
      'Arr 'Depth .
        ('Arr -> Ojs.t) -> ('Depth -> Ojs.t) -> ('Arr, 'Depth) t_2 -> Ojs.t
      = fun (type __Arr) -> fun (type __Depth) ->
      fun (__Arr_to_js : __Arr -> Ojs.t) ->
        fun (__Depth_to_js : __Depth -> Ojs.t) ->
          fun (x655 : (__Arr, __Depth) t) ->
            t_to_js __Arr_to_js __Depth_to_js x655
  end
module ConcatArray =
  struct
    type 'T t = [ `ArrayLike of 'T  | `ConcatArray of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x663 : Ojs.t) -> t_of_js __T_of_js x663
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x661 : __T t) -> t_to_js __T_to_js x661
    type 'T tags = [ `ArrayLike of 'T  | `ConcatArray of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ConcatArray of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x667 : Ojs.t) -> intf_of_js __tags_of_js x667
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x665 : __tags intf) -> intf_to_js __tags_to_js x665
    let (get_length : ('tags, 'T) this -> float) =
      fun (x669 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x669) "length")
    let (get : ('tags, 'T) this -> float -> 'T) =
      fun (x672 : ('tags, 'T) this) ->
        fun (x675 : float) ->
          Obj.magic
            (Ojs.get_prop (this_to_js Obj.magic Obj.magic x672)
               (Ojs.float_to_js x675))
    let (join : ('tags, 'T) this -> ?separator:string -> unit -> string) =
      fun (x679 : ('tags, 'T) this) ->
        fun ?separator:(x676 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x682 = this_to_js Obj.magic Obj.magic x679 in
               Ojs.call (Ojs.get_prop_ascii x682 "join") "apply"
                 [|x682;((let x677 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x676 with
                           | Some x678 ->
                               ignore
                                 (Ojs.call x677 "push"
                                    [|(Ojs.string_to_js x678)|])
                           | None -> ());
                          x677))|])
    let (slice :
      ('tags, 'T) this -> ?start:float -> ?end_:float -> unit -> 'T list) =
      fun (x688 : ('tags, 'T) this) ->
        fun ?start:(x683 : float option) ->
          fun ?end_:(x684 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x691 = this_to_js Obj.magic Obj.magic x688 in
                 Ojs.call (Ojs.get_prop_ascii x691 "slice") "apply"
                   [|x691;((let x685 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x683 with
                             | Some x687 ->
                                 ignore
                                   (Ojs.call x685 "push"
                                      [|(Ojs.float_to_js x687)|])
                             | None -> ());
                            (match x684 with
                             | Some x686 ->
                                 ignore
                                   (Ojs.call x685 "push"
                                      [|(Ojs.float_to_js x686)|])
                             | None -> ());
                            x685))|])
    let cast_from = Obj.magic
  end
module ReadonlyArray =
  struct
    type 'T t =
      [ `ArrayLike of 'T  | `IterableIterator of 'T 
      | `Iterator of ('T * any * never or_undefined) 
      | `ReadonlyArray of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x695 : Ojs.t) -> t_of_js __T_of_js x695
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x693 : __T t) -> t_to_js __T_to_js x693
    type 'T tags =
      [ `ArrayLike of 'T  | `IterableIterator of 'T 
      | `Iterator of ('T * any * never or_undefined) 
      | `ReadonlyArray of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ReadonlyArray of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x699 : Ojs.t) -> intf_of_js __tags_of_js x699
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x697 : __tags intf) -> intf_to_js __tags_to_js x697
    let (find :
      ('tags, 'T) this ->
        predicate:(this:unit ->
                     value:'T -> index:float -> obj:'T list -> bool)
          -> ?thisArg:any -> unit -> 'S or_undefined)
      =
      fun (x710 : ('tags, 'T) this) ->
        fun
          ~predicate:(x701 :
                       this:unit ->
                         value:'T -> index:float -> obj:'T list -> bool)
          ->
          fun ?thisArg:(x702 : any option) ->
            fun () ->
              or_undefined_of_js Obj.magic
                (let x713 = this_to_js Obj.magic Obj.magic x710 in
                 Ojs.call (Ojs.get_prop_ascii x713 "find") "apply"
                   [|x713;((let x703 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x703 "push"
                                 [|(Ojs.fun_to_js 4
                                      (fun (x705 : Ojs.t) ->
                                         fun (x706 : Ojs.t) ->
                                           fun (x707 : Ojs.t) ->
                                             fun (x708 : Ojs.t) ->
                                               Ojs.bool_to_js
                                                 (x701
                                                    ~this:(Ojs.unit_of_js
                                                             x705)
                                                    ~value:(Obj.magic x706)
                                                    ~index:(Ojs.float_of_js
                                                              x707)
                                                    ~obj:(Ojs.list_of_js
                                                            Obj.magic x708))))|]);
                            (match x702 with
                             | Some x704 ->
                                 ignore
                                   (Ojs.call x703 "push" [|(any_to_js x704)|])
                             | None -> ());
                            x703))|])
    let (find' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> obj:'T list -> unknown) ->
          ?thisArg:any -> unit -> 'T or_undefined)
      =
      fun (x723 : ('tags, 'T) this) ->
        fun
          ~predicate:(x715 :
                       value:'T -> index:float -> obj:'T list -> unknown)
          ->
          fun ?thisArg:(x716 : any option) ->
            fun () ->
              or_undefined_of_js Obj.magic
                (let x726 = this_to_js Obj.magic Obj.magic x723 in
                 Ojs.call (Ojs.get_prop_ascii x726 "find") "apply"
                   [|x726;((let x717 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x717 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x719 : Ojs.t) ->
                                         fun (x720 : Ojs.t) ->
                                           fun (x721 : Ojs.t) ->
                                             unknown_to_js
                                               (x715 ~value:(Obj.magic x719)
                                                  ~index:(Ojs.float_of_js
                                                            x720)
                                                  ~obj:(Ojs.list_of_js
                                                          Obj.magic x721))))|]);
                            (match x716 with
                             | Some x718 ->
                                 ignore
                                   (Ojs.call x717 "push" [|(any_to_js x718)|])
                             | None -> ());
                            x717))|])
    let (findIndex :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> obj:'T list -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x736 : ('tags, 'T) this) ->
        fun
          ~predicate:(x728 :
                       value:'T -> index:float -> obj:'T list -> unknown)
          ->
          fun ?thisArg:(x729 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x739 = this_to_js Obj.magic Obj.magic x736 in
                 Ojs.call (Ojs.get_prop_ascii x739 "findIndex") "apply"
                   [|x739;((let x730 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x730 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x732 : Ojs.t) ->
                                         fun (x733 : Ojs.t) ->
                                           fun (x734 : Ojs.t) ->
                                             unknown_to_js
                                               (x728 ~value:(Obj.magic x732)
                                                  ~index:(Ojs.float_of_js
                                                            x733)
                                                  ~obj:(Ojs.list_of_js
                                                          Obj.magic x734))))|]);
                            (match x729 with
                             | Some x731 ->
                                 ignore
                                   (Ojs.call x730 "push" [|(any_to_js x731)|])
                             | None -> ());
                            x730))|])
    let (includes :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> bool)
      =
      fun (x744 : ('tags, 'T) this) ->
        fun ~searchElement:(x740 : 'T) ->
          fun ?fromIndex:(x741 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x747 = this_to_js Obj.magic Obj.magic x744 in
                 Ojs.call (Ojs.get_prop_ascii x747 "includes") "apply"
                   [|x747;((let x742 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x742 "push" [|(Obj.magic x740)|]);
                            (match x741 with
                             | Some x743 ->
                                 ignore
                                   (Ojs.call x742 "push"
                                      [|(Ojs.float_to_js x743)|])
                             | None -> ());
                            x742))|])
    let (get_length : ('tags, 'T) this -> float) =
      fun (x748 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x748) "length")
    let (toString : ('tags, 'T) this -> string) =
      fun (x751 : ('tags, 'T) this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x751) "toString" [||])
    let (toLocaleString : ('tags, 'T) this -> string) =
      fun (x754 : ('tags, 'T) this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x754) "toLocaleString"
             [||])
    let (concat : ('tags, 'T) this -> items:'T ConcatArray.t list -> 'T list)
      =
      fun (x761 : ('tags, 'T) this) ->
        fun ~items:(x757 : 'T ConcatArray.t list) ->
          Ojs.list_of_js Obj.magic
            (let x764 = this_to_js Obj.magic Obj.magic x761 in
             Ojs.call (Ojs.get_prop_ascii x764 "concat") "apply"
               [|x764;((let x758 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x759 : 'T ConcatArray.t) ->
                             ignore
                               (Ojs.call x758 "push"
                                  [|(ConcatArray.t_to_js Obj.magic x759)|]))
                          x757;
                        x758))|])
    let (concat' :
      ('tags, 'T) this -> items:('T, 'T ConcatArray.t) union2 list -> 'T list)
      =
      fun (x772 : ('tags, 'T) this) ->
        fun ~items:(x766 : ('T, 'T ConcatArray.t) union2 list) ->
          Ojs.list_of_js Obj.magic
            (let x775 = this_to_js Obj.magic Obj.magic x772 in
             Ojs.call (Ojs.get_prop_ascii x775 "concat") "apply"
               [|x775;((let x767 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x768 : ('T, 'T ConcatArray.t) union2) ->
                             ignore
                               (Ojs.call x767 "push"
                                  [|(union2_to_js Obj.magic
                                       (fun (x770 : 'T ConcatArray.t) ->
                                          ConcatArray.t_to_js Obj.magic x770)
                                       x768)|])) x766;
                        x767))|])
    let (join : ('tags, 'T) this -> ?separator:string -> unit -> string) =
      fun (x780 : ('tags, 'T) this) ->
        fun ?separator:(x777 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x783 = this_to_js Obj.magic Obj.magic x780 in
               Ojs.call (Ojs.get_prop_ascii x783 "join") "apply"
                 [|x783;((let x778 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x777 with
                           | Some x779 ->
                               ignore
                                 (Ojs.call x778 "push"
                                    [|(Ojs.string_to_js x779)|])
                           | None -> ());
                          x778))|])
    let (slice :
      ('tags, 'T) this -> ?start:float -> ?end_:float -> unit -> 'T list) =
      fun (x789 : ('tags, 'T) this) ->
        fun ?start:(x784 : float option) ->
          fun ?end_:(x785 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x792 = this_to_js Obj.magic Obj.magic x789 in
                 Ojs.call (Ojs.get_prop_ascii x792 "slice") "apply"
                   [|x792;((let x786 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x784 with
                             | Some x788 ->
                                 ignore
                                   (Ojs.call x786 "push"
                                      [|(Ojs.float_to_js x788)|])
                             | None -> ());
                            (match x785 with
                             | Some x787 ->
                                 ignore
                                   (Ojs.call x786 "push"
                                      [|(Ojs.float_to_js x787)|])
                             | None -> ());
                            x786))|])
    let (indexOf :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> float)
      =
      fun (x798 : ('tags, 'T) this) ->
        fun ~searchElement:(x794 : 'T) ->
          fun ?fromIndex:(x795 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x801 = this_to_js Obj.magic Obj.magic x798 in
                 Ojs.call (Ojs.get_prop_ascii x801 "indexOf") "apply"
                   [|x801;((let x796 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x796 "push" [|(Obj.magic x794)|]);
                            (match x795 with
                             | Some x797 ->
                                 ignore
                                   (Ojs.call x796 "push"
                                      [|(Ojs.float_to_js x797)|])
                             | None -> ());
                            x796))|])
    let (lastIndexOf :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> float)
      =
      fun (x806 : ('tags, 'T) this) ->
        fun ~searchElement:(x802 : 'T) ->
          fun ?fromIndex:(x803 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x809 = this_to_js Obj.magic Obj.magic x806 in
                 Ojs.call (Ojs.get_prop_ascii x809 "lastIndexOf") "apply"
                   [|x809;((let x804 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x804 "push" [|(Obj.magic x802)|]);
                            (match x803 with
                             | Some x805 ->
                                 ignore
                                   (Ojs.call x804 "push"
                                      [|(Ojs.float_to_js x805)|])
                             | None -> ());
                            x804))|])
    let (every :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x818 : ('tags, 'T) this) ->
        fun
          ~predicate:(x810 :
                       value:'T -> index:float -> array:'T list -> bool)
          ->
          fun ?thisArg:(x811 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x821 = this_to_js Obj.magic Obj.magic x818 in
                 Ojs.call (Ojs.get_prop_ascii x821 "every") "apply"
                   [|x821;((let x812 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x812 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x814 : Ojs.t) ->
                                         fun (x815 : Ojs.t) ->
                                           fun (x816 : Ojs.t) ->
                                             Ojs.bool_to_js
                                               (x810 ~value:(Obj.magic x814)
                                                  ~index:(Ojs.float_of_js
                                                            x815)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x816))))|]);
                            (match x811 with
                             | Some x813 ->
                                 ignore
                                   (Ojs.call x812 "push" [|(any_to_js x813)|])
                             | None -> ());
                            x812))|])
    let (every' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x830 : ('tags, 'T) this) ->
        fun
          ~predicate:(x822 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x823 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x833 = this_to_js Obj.magic Obj.magic x830 in
                 Ojs.call (Ojs.get_prop_ascii x833 "every") "apply"
                   [|x833;((let x824 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x824 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x826 : Ojs.t) ->
                                         fun (x827 : Ojs.t) ->
                                           fun (x828 : Ojs.t) ->
                                             unknown_to_js
                                               (x822 ~value:(Obj.magic x826)
                                                  ~index:(Ojs.float_of_js
                                                            x827)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x828))))|]);
                            (match x823 with
                             | Some x825 ->
                                 ignore
                                   (Ojs.call x824 "push" [|(any_to_js x825)|])
                             | None -> ());
                            x824))|])
    let (some :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x842 : ('tags, 'T) this) ->
        fun
          ~predicate:(x834 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x835 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x845 = this_to_js Obj.magic Obj.magic x842 in
                 Ojs.call (Ojs.get_prop_ascii x845 "some") "apply"
                   [|x845;((let x836 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x836 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x838 : Ojs.t) ->
                                         fun (x839 : Ojs.t) ->
                                           fun (x840 : Ojs.t) ->
                                             unknown_to_js
                                               (x834 ~value:(Obj.magic x838)
                                                  ~index:(Ojs.float_of_js
                                                            x839)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x840))))|]);
                            (match x835 with
                             | Some x837 ->
                                 ignore
                                   (Ojs.call x836 "push" [|(any_to_js x837)|])
                             | None -> ());
                            x836))|])
    let (forEach :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> index:float -> array:'T list -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x854 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x846 :
                        value:'T -> index:float -> array:'T list -> unit)
          ->
          fun ?thisArg:(x847 : any option) ->
            fun () ->
              ignore
                (let x857 = this_to_js Obj.magic Obj.magic x854 in
                 Ojs.call (Ojs.get_prop_ascii x857 "forEach") "apply"
                   [|x857;((let x848 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x848 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x850 : Ojs.t) ->
                                         fun (x851 : Ojs.t) ->
                                           fun (x852 : Ojs.t) ->
                                             x846 ~value:(Obj.magic x850)
                                               ~index:(Ojs.float_of_js x851)
                                               ~array:(Ojs.list_of_js
                                                         Obj.magic x852)))|]);
                            (match x847 with
                             | Some x849 ->
                                 ignore
                                   (Ojs.call x848 "push" [|(any_to_js x849)|])
                             | None -> ());
                            x848))|])
    let (map :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> index:float -> array:'T list -> 'U) ->
          ?thisArg:any -> unit -> 'U list)
      =
      fun (x866 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x858 : value:'T -> index:float -> array:'T list -> 'U)
          ->
          fun ?thisArg:(x859 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x869 = this_to_js Obj.magic Obj.magic x866 in
                 Ojs.call (Ojs.get_prop_ascii x869 "map") "apply"
                   [|x869;((let x860 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x860 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x862 : Ojs.t) ->
                                         fun (x863 : Ojs.t) ->
                                           fun (x864 : Ojs.t) ->
                                             Obj.magic
                                               (x858 ~value:(Obj.magic x862)
                                                  ~index:(Ojs.float_of_js
                                                            x863)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x864))))|]);
                            (match x859 with
                             | Some x861 ->
                                 ignore
                                   (Ojs.call x860 "push" [|(any_to_js x861)|])
                             | None -> ());
                            x860))|])
    let (filter :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> 'S list)
      =
      fun (x879 : ('tags, 'T) this) ->
        fun
          ~predicate:(x871 :
                       value:'T -> index:float -> array:'T list -> bool)
          ->
          fun ?thisArg:(x872 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x882 = this_to_js Obj.magic Obj.magic x879 in
                 Ojs.call (Ojs.get_prop_ascii x882 "filter") "apply"
                   [|x882;((let x873 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x873 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x875 : Ojs.t) ->
                                         fun (x876 : Ojs.t) ->
                                           fun (x877 : Ojs.t) ->
                                             Ojs.bool_to_js
                                               (x871 ~value:(Obj.magic x875)
                                                  ~index:(Ojs.float_of_js
                                                            x876)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x877))))|]);
                            (match x872 with
                             | Some x874 ->
                                 ignore
                                   (Ojs.call x873 "push" [|(any_to_js x874)|])
                             | None -> ());
                            x873))|])
    let (filter' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> 'T list)
      =
      fun (x892 : ('tags, 'T) this) ->
        fun
          ~predicate:(x884 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x885 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x895 = this_to_js Obj.magic Obj.magic x892 in
                 Ojs.call (Ojs.get_prop_ascii x895 "filter") "apply"
                   [|x895;((let x886 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x886 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x888 : Ojs.t) ->
                                         fun (x889 : Ojs.t) ->
                                           fun (x890 : Ojs.t) ->
                                             unknown_to_js
                                               (x884 ~value:(Obj.magic x888)
                                                  ~index:(Ojs.float_of_js
                                                            x889)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x890))))|]);
                            (match x885 with
                             | Some x887 ->
                                 ignore
                                   (Ojs.call x886 "push" [|(any_to_js x887)|])
                             | None -> ());
                            x886))|])
    let (reduce :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> 'T)
      =
      fun (x903 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x897 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x903) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x898 : Ojs.t) ->
                       fun (x899 : Ojs.t) ->
                         fun (x900 : Ojs.t) ->
                           fun (x901 : Ojs.t) ->
                             Obj.magic
                               (x897 ~previousValue:(Obj.magic x898)
                                  ~currentValue:(Obj.magic x899)
                                  ~currentIndex:(Ojs.float_of_js x900)
                                  ~array:(Ojs.list_of_js Obj.magic x901))))|])
    let (reduce' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> initialValue:'T -> 'T)
      =
      fun (x913 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x906 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          fun ~initialValue:(x912 : 'T) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x913) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x907 : Ojs.t) ->
                         fun (x908 : Ojs.t) ->
                           fun (x909 : Ojs.t) ->
                             fun (x910 : Ojs.t) ->
                               Obj.magic
                                 (x906 ~previousValue:(Obj.magic x907)
                                    ~currentValue:(Obj.magic x908)
                                    ~currentIndex:(Ojs.float_of_js x909)
                                    ~array:(Ojs.list_of_js Obj.magic x910))));(
                   Obj.magic x912)|])
    let (reduce'' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'U ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x923 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x916 :
                        previousValue:'U ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'U)
          ->
          fun ~initialValue:(x922 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x923) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x917 : Ojs.t) ->
                         fun (x918 : Ojs.t) ->
                           fun (x919 : Ojs.t) ->
                             fun (x920 : Ojs.t) ->
                               Obj.magic
                                 (x916 ~previousValue:(Obj.magic x917)
                                    ~currentValue:(Obj.magic x918)
                                    ~currentIndex:(Ojs.float_of_js x919)
                                    ~array:(Ojs.list_of_js Obj.magic x920))));(
                   Obj.magic x922)|])
    let (reduceRight :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> 'T)
      =
      fun (x932 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x926 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x932) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x927 : Ojs.t) ->
                       fun (x928 : Ojs.t) ->
                         fun (x929 : Ojs.t) ->
                           fun (x930 : Ojs.t) ->
                             Obj.magic
                               (x926 ~previousValue:(Obj.magic x927)
                                  ~currentValue:(Obj.magic x928)
                                  ~currentIndex:(Ojs.float_of_js x929)
                                  ~array:(Ojs.list_of_js Obj.magic x930))))|])
    let (reduceRight' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> initialValue:'T -> 'T)
      =
      fun (x942 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x935 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          fun ~initialValue:(x941 : 'T) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x942) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x936 : Ojs.t) ->
                         fun (x937 : Ojs.t) ->
                           fun (x938 : Ojs.t) ->
                             fun (x939 : Ojs.t) ->
                               Obj.magic
                                 (x935 ~previousValue:(Obj.magic x936)
                                    ~currentValue:(Obj.magic x937)
                                    ~currentIndex:(Ojs.float_of_js x938)
                                    ~array:(Ojs.list_of_js Obj.magic x939))));(
                   Obj.magic x941)|])
    let (reduceRight'' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'U ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x952 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x945 :
                        previousValue:'U ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'U)
          ->
          fun ~initialValue:(x951 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x952) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x946 : Ojs.t) ->
                         fun (x947 : Ojs.t) ->
                           fun (x948 : Ojs.t) ->
                             fun (x949 : Ojs.t) ->
                               Obj.magic
                                 (x945 ~previousValue:(Obj.magic x946)
                                    ~currentValue:(Obj.magic x947)
                                    ~currentIndex:(Ojs.float_of_js x948)
                                    ~array:(Ojs.list_of_js Obj.magic x949))));(
                   Obj.magic x951)|])
    let (get : ('tags, 'T) this -> float -> 'T) =
      fun (x955 : ('tags, 'T) this) ->
        fun (x958 : float) ->
          Obj.magic
            (Ojs.get_prop (this_to_js Obj.magic Obj.magic x955)
               (Ojs.float_to_js x958))
    let (flatMap :
      ('tags, 'T) this ->
        callback:(this:'This ->
                    value:'T ->
                      index:float -> array:'T list -> ('U, 'U t) union2)
          -> ?thisArg:'This -> unit -> 'U list)
      =
      fun (x971 : ('tags, 'T) this) ->
        fun
          ~callback:(x959 :
                      this:'This ->
                        value:'T ->
                          index:float -> array:'T list -> ('U, 'U t) union2)
          ->
          fun ?thisArg:(x960 : 'This option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x974 = this_to_js Obj.magic Obj.magic x971 in
                 Ojs.call (Ojs.get_prop_ascii x974 "flatMap") "apply"
                   [|x974;((let x961 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x961 "push"
                                 [|(Ojs.fun_to_js 4
                                      (fun (x963 : Ojs.t) ->
                                         fun (x964 : Ojs.t) ->
                                           fun (x965 : Ojs.t) ->
                                             fun (x966 : Ojs.t) ->
                                               union2_to_js Obj.magic
                                                 (fun (x969 : 'U t) ->
                                                    t_to_js Obj.magic x969)
                                                 (x959 ~this:(Obj.magic x963)
                                                    ~value:(Obj.magic x964)
                                                    ~index:(Ojs.float_of_js
                                                              x965)
                                                    ~array:(Ojs.list_of_js
                                                              Obj.magic x966))))|]);
                            (match x960 with
                             | Some x962 ->
                                 ignore
                                   (Ojs.call x961 "push" [|(Obj.magic x962)|])
                             | None -> ());
                            x961))|])
    let (flat :
      ('tags, 'T) this ->
        this:'A -> ?depth:'D -> unit -> ('A, 'D) FlatArray.t list)
      =
      fun (x980 : ('tags, 'T) this) ->
        fun ~this:(x976 : 'A) ->
          fun ?depth:(x977 : 'D option) ->
            fun () ->
              Ojs.list_of_js
                (fun (x984 : Ojs.t) ->
                   FlatArray.t_of_js Obj.magic Obj.magic x984)
                (let x983 = this_to_js Obj.magic Obj.magic x980 in
                 Ojs.call (Ojs.get_prop_ascii x983 "flat") "apply"
                   [|x983;((let x978 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x978 "push" [|(Obj.magic x976)|]);
                            (match x977 with
                             | Some x979 ->
                                 ignore
                                   (Ojs.call x978 "push" [|(Obj.magic x979)|])
                             | None -> ());
                            x978))|])
    let (entries : ('tags, 'T) this -> (float * 'T) IterableIterator.t) =
      fun (x987 : ('tags, 'T) this) ->
        IterableIterator.t_of_js
          (fun (x990 : Ojs.t) ->
             let x991 = x990 in
             ((Ojs.float_of_js (Ojs.array_get x991 0)),
               (Obj.magic (Ojs.array_get x991 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic x987) "entries" [||])
    let (keys : ('tags, 'T) this -> float IterableIterator.t) =
      fun (x992 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x992) "keys" [||])
    let (values : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x996 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x996) "values" [||])
    let cast_from = Obj.magic
    let (to_ml : 'T t -> 'T list) =
      fun (x1000 : 'T t) ->
        Ojs.list_of_js Obj.magic (t_to_js Obj.magic x1000)
    let (of_ml : 'T list -> 'T t) =
      fun (x1003 : 'T list) ->
        t_of_js Obj.magic (Ojs.list_to_js Obj.magic x1003)
  end
module TemplateStringsArray =
  struct
    type t =
      [ `ArrayLike of string  | `IterableIterator of string 
      | `Iterator of (string * any * never or_undefined) 
      | `ReadonlyArray of string  | `ReadonlyArray of string 
      | `TemplateStringsArray ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1007 : Ojs.t) -> t_of_js x1007
    and t_0_to_js : t_0 -> Ojs.t = fun (x1006 : t) -> t_to_js x1006
    type tags =
      [ `ArrayLike of string  | `IterableIterator of string 
      | `Iterator of (string * any * never or_undefined) 
      | `ReadonlyArray of string  | `ReadonlyArray of string 
      | `TemplateStringsArray ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `TemplateStringsArray ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x1010 : Ojs.t) -> intf_of_js __tags_of_js x1010
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x1008 : __tags intf) -> intf_to_js __tags_to_js x1008
    let (get_raw : 'tags this -> string list) =
      fun (x1012 : 'tags this) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1012) "raw")
    let cast_from = Obj.magic
  end
module SyntaxError =
  struct
    type t = [ `Error  | `SyntaxError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1016 : Ojs.t) -> t_of_js x1016
    and t_0_to_js : t_0 -> Ojs.t = fun (x1015 : t) -> t_to_js x1015
    type tags = [ `Error  | `SyntaxError ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `SyntaxError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x1019 : Ojs.t) -> intf_of_js __tags_of_js x1019
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x1017 : __tags intf) -> intf_to_js __tags_to_js x1017
    let (create : ?message:string -> unit -> t) =
      fun ?message:(x1021 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "SyntaxError")
               (let x1022 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x1021 with
                 | Some x1023 ->
                     ignore
                       (Ojs.call x1022 "push" [|(Ojs.string_to_js x1023)|])
                 | None -> ());
                x1022))
    let (invoke : ?message:string -> unit -> t) =
      fun ?message:(x1024 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "SyntaxError") "apply"
               [|Ojs.null;((let x1025 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x1024 with
                             | Some x1026 ->
                                 ignore
                                   (Ojs.call x1025 "push"
                                      [|(Ojs.string_to_js x1026)|])
                             | None -> ());
                            x1025))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "SyntaxError")
             "prototype")
    let cast_from = Obj.magic
  end
module Symbol =
  struct
    type t = [ `Symbol ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1028 : Ojs.t) -> t_of_js x1028
    and t_0_to_js : t_0 -> Ojs.t = fun (x1027 : t) -> t_to_js x1027
    type tags = [ `Symbol ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Symbol ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x1031 : Ojs.t) -> intf_of_js __tags_of_js x1031
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x1029 : __tags intf) -> intf_to_js __tags_to_js x1029
    let (get_description : 'tags this -> string or_undefined) =
      fun (x1033 : 'tags this) ->
        or_undefined_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1033) "description")
    let (toString : 'tags this -> string) =
      fun (x1036 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1036) "toString" [||])
    let (valueOf : 'tags this -> symbol) =
      fun (x1038 : 'tags this) ->
        symbol_of_js (Ojs.call (this_to_js Obj.magic x1038) "valueOf" [||])
    let (asyncIterator : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "asyncIterator")
    let (matchAll : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "matchAll")
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "prototype")
    let (invoke : ?description:string or_number -> unit -> symbol) =
      fun ?description:(x1040 : string or_number option) ->
        fun () ->
          symbol_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Symbol") "apply"
               [|Ojs.null;((let x1041 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x1040 with
                             | Some x1042 ->
                                 ignore
                                   (Ojs.call x1041 "push"
                                      [|(or_number_to_js Ojs.string_to_js
                                           x1042)|])
                             | None -> ());
                            x1041))|])
    let (for_ : string -> symbol) =
      fun (x1044 : string) ->
        symbol_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Symbol") "for"
             [|(Ojs.string_to_js x1044)|])
    let (keyFor : symbol -> string or_undefined) =
      fun (x1045 : symbol) ->
        or_undefined_of_js Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Symbol") "keyFor"
             [|(symbol_to_js x1045)|])
    let (hasInstance : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "hasInstance")
    let (isConcatSpreadable : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "isConcatSpreadable")
    let (match_ : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "match")
    let (replace : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "replace")
    let (search : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "search")
    let (species : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "species")
    let (split : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "split")
    let (toPrimitive : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "toPrimitive")
    let (toStringTag : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "toStringTag")
    let (unscopables : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "unscopables")
    let (iterator : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "iterator")
    let cast_from = Obj.magic
  end
module AnonymousInterface1 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x1048 : Ojs.t) -> x1048
    and t_to_js : t -> Ojs.t = fun (x1047 : Ojs.t) -> x1047
    let (get_copyWithin : t -> bool) =
      fun (x1049 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1049) "copyWithin")
    let (set_copyWithin : t -> bool -> unit) =
      fun (x1050 : t) ->
        fun (x1051 : bool) ->
          Ojs.set_prop_ascii (t_to_js x1050) "copyWithin"
            (Ojs.bool_to_js x1051)
    let (get_entries : t -> bool) =
      fun (x1052 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1052) "entries")
    let (set_entries : t -> bool -> unit) =
      fun (x1053 : t) ->
        fun (x1054 : bool) ->
          Ojs.set_prop_ascii (t_to_js x1053) "entries" (Ojs.bool_to_js x1054)
    let (get_fill : t -> bool) =
      fun (x1055 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1055) "fill")
    let (set_fill : t -> bool -> unit) =
      fun (x1056 : t) ->
        fun (x1057 : bool) ->
          Ojs.set_prop_ascii (t_to_js x1056) "fill" (Ojs.bool_to_js x1057)
    let (get_find : t -> bool) =
      fun (x1058 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1058) "find")
    let (set_find : t -> bool -> unit) =
      fun (x1059 : t) ->
        fun (x1060 : bool) ->
          Ojs.set_prop_ascii (t_to_js x1059) "find" (Ojs.bool_to_js x1060)
    let (get_findIndex : t -> bool) =
      fun (x1061 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1061) "findIndex")
    let (set_findIndex : t -> bool -> unit) =
      fun (x1062 : t) ->
        fun (x1063 : bool) ->
          Ojs.set_prop_ascii (t_to_js x1062) "findIndex"
            (Ojs.bool_to_js x1063)
    let (get_keys : t -> bool) =
      fun (x1064 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1064) "keys")
    let (set_keys : t -> bool -> unit) =
      fun (x1065 : t) ->
        fun (x1066 : bool) ->
          Ojs.set_prop_ascii (t_to_js x1065) "keys" (Ojs.bool_to_js x1066)
    let (get_values : t -> bool) =
      fun (x1067 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1067) "values")
    let (set_values : t -> bool -> unit) =
      fun (x1068 : t) ->
        fun (x1069 : bool) ->
          Ojs.set_prop_ascii (t_to_js x1068) "values" (Ojs.bool_to_js x1069)
  end
module Array =
  struct
    type 'T t =
      [ `Array of 'T  | `ArrayLike of 'T  | `IterableIterator of 'T 
      | `Iterator of ('T * any * never or_undefined) ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x1072 : Ojs.t) -> t_of_js __T_of_js x1072
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x1070 : __T t) -> t_to_js __T_to_js x1070
    type 'T tags =
      [ `Array of 'T  | `ArrayLike of 'T  | `IterableIterator of 'T 
      | `Iterator of ('T * any * never or_undefined) ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this = 'tags intf constraint 'tags = [> `Array of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x1076 : Ojs.t) -> intf_of_js __tags_of_js x1076
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x1074 : __tags intf) -> intf_to_js __tags_to_js x1074
    let (find :
      ('tags, 'T) this ->
        predicate:(this:unit ->
                     value:'T -> index:float -> obj:'T list -> bool)
          -> ?thisArg:any -> unit -> 'S or_undefined)
      =
      fun (x1087 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1078 :
                       this:unit ->
                         value:'T -> index:float -> obj:'T list -> bool)
          ->
          fun ?thisArg:(x1079 : any option) ->
            fun () ->
              or_undefined_of_js Obj.magic
                (let x1090 = this_to_js Obj.magic Obj.magic x1087 in
                 Ojs.call (Ojs.get_prop_ascii x1090 "find") "apply"
                   [|x1090;((let x1080 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1080 "push"
                                  [|(Ojs.fun_to_js 4
                                       (fun (x1082 : Ojs.t) ->
                                          fun (x1083 : Ojs.t) ->
                                            fun (x1084 : Ojs.t) ->
                                              fun (x1085 : Ojs.t) ->
                                                Ojs.bool_to_js
                                                  (x1078
                                                     ~this:(Ojs.unit_of_js
                                                              x1082)
                                                     ~value:(Obj.magic x1083)
                                                     ~index:(Ojs.float_of_js
                                                               x1084)
                                                     ~obj:(Ojs.list_of_js
                                                             Obj.magic x1085))))|]);
                             (match x1079 with
                              | Some x1081 ->
                                  ignore
                                    (Ojs.call x1080 "push"
                                       [|(any_to_js x1081)|])
                              | None -> ());
                             x1080))|])
    let (find' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> obj:'T list -> unknown) ->
          ?thisArg:any -> unit -> 'T or_undefined)
      =
      fun (x1100 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1092 :
                       value:'T -> index:float -> obj:'T list -> unknown)
          ->
          fun ?thisArg:(x1093 : any option) ->
            fun () ->
              or_undefined_of_js Obj.magic
                (let x1103 = this_to_js Obj.magic Obj.magic x1100 in
                 Ojs.call (Ojs.get_prop_ascii x1103 "find") "apply"
                   [|x1103;((let x1094 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1094 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1096 : Ojs.t) ->
                                          fun (x1097 : Ojs.t) ->
                                            fun (x1098 : Ojs.t) ->
                                              unknown_to_js
                                                (x1092
                                                   ~value:(Obj.magic x1096)
                                                   ~index:(Ojs.float_of_js
                                                             x1097)
                                                   ~obj:(Ojs.list_of_js
                                                           Obj.magic x1098))))|]);
                             (match x1093 with
                              | Some x1095 ->
                                  ignore
                                    (Ojs.call x1094 "push"
                                       [|(any_to_js x1095)|])
                              | None -> ());
                             x1094))|])
    let (findIndex :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> obj:'T list -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x1113 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1105 :
                       value:'T -> index:float -> obj:'T list -> unknown)
          ->
          fun ?thisArg:(x1106 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x1116 = this_to_js Obj.magic Obj.magic x1113 in
                 Ojs.call (Ojs.get_prop_ascii x1116 "findIndex") "apply"
                   [|x1116;((let x1107 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1107 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1109 : Ojs.t) ->
                                          fun (x1110 : Ojs.t) ->
                                            fun (x1111 : Ojs.t) ->
                                              unknown_to_js
                                                (x1105
                                                   ~value:(Obj.magic x1109)
                                                   ~index:(Ojs.float_of_js
                                                             x1110)
                                                   ~obj:(Ojs.list_of_js
                                                           Obj.magic x1111))))|]);
                             (match x1106 with
                              | Some x1108 ->
                                  ignore
                                    (Ojs.call x1107 "push"
                                       [|(any_to_js x1108)|])
                              | None -> ());
                             x1107))|])
    let (fill :
      ('tags, 'T) this ->
        value:'T -> ?start:float -> ?end_:float -> unit -> ('tags, 'T) this)
      =
      fun (x1123 : ('tags, 'T) this) ->
        fun ~value:(x1117 : 'T) ->
          fun ?start:(x1118 : float option) ->
            fun ?end_:(x1119 : float option) ->
              fun () ->
                this_of_js Obj.magic Obj.magic
                  (let x1126 = this_to_js Obj.magic Obj.magic x1123 in
                   Ojs.call (Ojs.get_prop_ascii x1126 "fill") "apply"
                     [|x1126;((let x1120 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1120 "push" [|(Obj.magic x1117)|]);
                               (match x1118 with
                                | Some x1122 ->
                                    ignore
                                      (Ojs.call x1120 "push"
                                         [|(Ojs.float_to_js x1122)|])
                                | None -> ());
                               (match x1119 with
                                | Some x1121 ->
                                    ignore
                                      (Ojs.call x1120 "push"
                                         [|(Ojs.float_to_js x1121)|])
                                | None -> ());
                               x1120))|])
    let (copyWithin :
      ('tags, 'T) this ->
        target:float ->
          start:float -> ?end_:float -> unit -> ('tags, 'T) this)
      =
      fun (x1134 : ('tags, 'T) this) ->
        fun ~target:(x1129 : float) ->
          fun ~start:(x1130 : float) ->
            fun ?end_:(x1131 : float option) ->
              fun () ->
                this_of_js Obj.magic Obj.magic
                  (let x1137 = this_to_js Obj.magic Obj.magic x1134 in
                   Ojs.call (Ojs.get_prop_ascii x1137 "copyWithin") "apply"
                     [|x1137;((let x1132 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1132 "push"
                                    [|(Ojs.float_to_js x1129)|]);
                               ignore
                                 (Ojs.call x1132 "push"
                                    [|(Ojs.float_to_js x1130)|]);
                               (match x1131 with
                                | Some x1133 ->
                                    ignore
                                      (Ojs.call x1132 "push"
                                         [|(Ojs.float_to_js x1133)|])
                                | None -> ());
                               x1132))|])
    let (includes :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> bool)
      =
      fun (x1144 : ('tags, 'T) this) ->
        fun ~searchElement:(x1140 : 'T) ->
          fun ?fromIndex:(x1141 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1147 = this_to_js Obj.magic Obj.magic x1144 in
                 Ojs.call (Ojs.get_prop_ascii x1147 "includes") "apply"
                   [|x1147;((let x1142 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1142 "push" [|(Obj.magic x1140)|]);
                             (match x1141 with
                              | Some x1143 ->
                                  ignore
                                    (Ojs.call x1142 "push"
                                       [|(Ojs.float_to_js x1143)|])
                              | None -> ());
                             x1142))|])
    let (get_length : ('tags, 'T) this -> float) =
      fun (x1148 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x1148) "length")
    let (set_length : ('tags, 'T) this -> float -> unit) =
      fun (x1151 : ('tags, 'T) this) ->
        fun (x1152 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x1151) "length"
            (Ojs.float_to_js x1152)
    let (toString : ('tags, 'T) this -> string) =
      fun (x1155 : ('tags, 'T) this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x1155) "toString" [||])
    let (toLocaleString : ('tags, 'T) this -> string) =
      fun (x1158 : ('tags, 'T) this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x1158) "toLocaleString"
             [||])
    let (pop : ('tags, 'T) this -> 'T or_undefined) =
      fun (x1161 : ('tags, 'T) this) ->
        or_undefined_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x1161) "pop" [||])
    let (push : ('tags, 'T) this -> items:'T list -> float) =
      fun (x1168 : ('tags, 'T) this) ->
        fun ~items:(x1165 : 'T list) ->
          Ojs.float_of_js
            (let x1171 = this_to_js Obj.magic Obj.magic x1168 in
             Ojs.call (Ojs.get_prop_ascii x1171 "push") "apply"
               [|x1171;((let x1166 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x1167 : 'T) ->
                              ignore
                                (Ojs.call x1166 "push" [|(Obj.magic x1167)|]))
                           x1165;
                         x1166))|])
    let (concat : ('tags, 'T) this -> items:'T ConcatArray.t list -> 'T list)
      =
      fun (x1176 : ('tags, 'T) this) ->
        fun ~items:(x1172 : 'T ConcatArray.t list) ->
          Ojs.list_of_js Obj.magic
            (let x1179 = this_to_js Obj.magic Obj.magic x1176 in
             Ojs.call (Ojs.get_prop_ascii x1179 "concat") "apply"
               [|x1179;((let x1173 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x1174 : 'T ConcatArray.t) ->
                              ignore
                                (Ojs.call x1173 "push"
                                   [|(ConcatArray.t_to_js Obj.magic x1174)|]))
                           x1172;
                         x1173))|])
    let (concat' :
      ('tags, 'T) this -> items:('T, 'T ConcatArray.t) union2 list -> 'T list)
      =
      fun (x1187 : ('tags, 'T) this) ->
        fun ~items:(x1181 : ('T, 'T ConcatArray.t) union2 list) ->
          Ojs.list_of_js Obj.magic
            (let x1190 = this_to_js Obj.magic Obj.magic x1187 in
             Ojs.call (Ojs.get_prop_ascii x1190 "concat") "apply"
               [|x1190;((let x1182 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x1183 : ('T, 'T ConcatArray.t) union2) ->
                              ignore
                                (Ojs.call x1182 "push"
                                   [|(union2_to_js Obj.magic
                                        (fun (x1185 : 'T ConcatArray.t) ->
                                           ConcatArray.t_to_js Obj.magic
                                             x1185) x1183)|])) x1181;
                         x1182))|])
    let (join : ('tags, 'T) this -> ?separator:string -> unit -> string) =
      fun (x1195 : ('tags, 'T) this) ->
        fun ?separator:(x1192 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x1198 = this_to_js Obj.magic Obj.magic x1195 in
               Ojs.call (Ojs.get_prop_ascii x1198 "join") "apply"
                 [|x1198;((let x1193 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x1192 with
                            | Some x1194 ->
                                ignore
                                  (Ojs.call x1193 "push"
                                     [|(Ojs.string_to_js x1194)|])
                            | None -> ());
                           x1193))|])
    let (reverse : ('tags, 'T) this -> 'T list) =
      fun (x1199 : ('tags, 'T) this) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x1199) "reverse" [||])
    let (shift : ('tags, 'T) this -> 'T or_undefined) =
      fun (x1203 : ('tags, 'T) this) ->
        or_undefined_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x1203) "shift" [||])
    let (slice :
      ('tags, 'T) this -> ?start:float -> ?end_:float -> unit -> 'T list) =
      fun (x1212 : ('tags, 'T) this) ->
        fun ?start:(x1207 : float option) ->
          fun ?end_:(x1208 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1215 = this_to_js Obj.magic Obj.magic x1212 in
                 Ojs.call (Ojs.get_prop_ascii x1215 "slice") "apply"
                   [|x1215;((let x1209 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1207 with
                              | Some x1211 ->
                                  ignore
                                    (Ojs.call x1209 "push"
                                       [|(Ojs.float_to_js x1211)|])
                              | None -> ());
                             (match x1208 with
                              | Some x1210 ->
                                  ignore
                                    (Ojs.call x1209 "push"
                                       [|(Ojs.float_to_js x1210)|])
                              | None -> ());
                             x1209))|])
    let (sort :
      ('tags, 'T) this ->
        ?compareFn:(a:'T -> b:'T -> float) -> unit -> ('tags, 'T) this)
      =
      fun (x1222 : ('tags, 'T) this) ->
        fun ?compareFn:(x1217 : (a:'T -> b:'T -> float) option) ->
          fun () ->
            this_of_js Obj.magic Obj.magic
              (let x1225 = this_to_js Obj.magic Obj.magic x1222 in
               Ojs.call (Ojs.get_prop_ascii x1225 "sort") "apply"
                 [|x1225;((let x1218 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x1217 with
                            | Some x1219 ->
                                ignore
                                  (Ojs.call x1218 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x1220 : Ojs.t) ->
                                             fun (x1221 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x1219 ~a:(Obj.magic x1220)
                                                    ~b:(Obj.magic x1221))))|])
                            | None -> ());
                           x1218))|])
    let (splice :
      ('tags, 'T) this ->
        start:float -> ?deleteCount:float -> unit -> 'T list)
      =
      fun (x1232 : ('tags, 'T) this) ->
        fun ~start:(x1228 : float) ->
          fun ?deleteCount:(x1229 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1235 = this_to_js Obj.magic Obj.magic x1232 in
                 Ojs.call (Ojs.get_prop_ascii x1235 "splice") "apply"
                   [|x1235;((let x1230 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1230 "push"
                                  [|(Ojs.float_to_js x1228)|]);
                             (match x1229 with
                              | Some x1231 ->
                                  ignore
                                    (Ojs.call x1230 "push"
                                       [|(Ojs.float_to_js x1231)|])
                              | None -> ());
                             x1230))|])
    let (splice' :
      ('tags, 'T) this ->
        start:float -> deleteCount:float -> items:'T list -> 'T list)
      =
      fun (x1242 : ('tags, 'T) this) ->
        fun ~start:(x1237 : float) ->
          fun ~deleteCount:(x1238 : float) ->
            fun ~items:(x1239 : 'T list) ->
              Ojs.list_of_js Obj.magic
                (let x1245 = this_to_js Obj.magic Obj.magic x1242 in
                 Ojs.call (Ojs.get_prop_ascii x1245 "splice") "apply"
                   [|x1245;((let x1240 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1240 "push"
                                  [|(Ojs.float_to_js x1237)|]);
                             ignore
                               (Ojs.call x1240 "push"
                                  [|(Ojs.float_to_js x1238)|]);
                             List.iter
                               (fun (x1241 : 'T) ->
                                  ignore
                                    (Ojs.call x1240 "push"
                                       [|(Obj.magic x1241)|])) x1239;
                             x1240))|])
    let (unshift : ('tags, 'T) this -> items:'T list -> float) =
      fun (x1250 : ('tags, 'T) this) ->
        fun ~items:(x1247 : 'T list) ->
          Ojs.float_of_js
            (let x1253 = this_to_js Obj.magic Obj.magic x1250 in
             Ojs.call (Ojs.get_prop_ascii x1253 "unshift") "apply"
               [|x1253;((let x1248 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x1249 : 'T) ->
                              ignore
                                (Ojs.call x1248 "push" [|(Obj.magic x1249)|]))
                           x1247;
                         x1248))|])
    let (indexOf :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> float)
      =
      fun (x1258 : ('tags, 'T) this) ->
        fun ~searchElement:(x1254 : 'T) ->
          fun ?fromIndex:(x1255 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1261 = this_to_js Obj.magic Obj.magic x1258 in
                 Ojs.call (Ojs.get_prop_ascii x1261 "indexOf") "apply"
                   [|x1261;((let x1256 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1256 "push" [|(Obj.magic x1254)|]);
                             (match x1255 with
                              | Some x1257 ->
                                  ignore
                                    (Ojs.call x1256 "push"
                                       [|(Ojs.float_to_js x1257)|])
                              | None -> ());
                             x1256))|])
    let (lastIndexOf :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> float)
      =
      fun (x1266 : ('tags, 'T) this) ->
        fun ~searchElement:(x1262 : 'T) ->
          fun ?fromIndex:(x1263 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1269 = this_to_js Obj.magic Obj.magic x1266 in
                 Ojs.call (Ojs.get_prop_ascii x1269 "lastIndexOf") "apply"
                   [|x1269;((let x1264 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1264 "push" [|(Obj.magic x1262)|]);
                             (match x1263 with
                              | Some x1265 ->
                                  ignore
                                    (Ojs.call x1264 "push"
                                       [|(Ojs.float_to_js x1265)|])
                              | None -> ());
                             x1264))|])
    let (every :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x1278 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1270 :
                       value:'T -> index:float -> array:'T list -> bool)
          ->
          fun ?thisArg:(x1271 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1281 = this_to_js Obj.magic Obj.magic x1278 in
                 Ojs.call (Ojs.get_prop_ascii x1281 "every") "apply"
                   [|x1281;((let x1272 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1272 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1274 : Ojs.t) ->
                                          fun (x1275 : Ojs.t) ->
                                            fun (x1276 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x1270
                                                   ~value:(Obj.magic x1274)
                                                   ~index:(Ojs.float_of_js
                                                             x1275)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1276))))|]);
                             (match x1271 with
                              | Some x1273 ->
                                  ignore
                                    (Ojs.call x1272 "push"
                                       [|(any_to_js x1273)|])
                              | None -> ());
                             x1272))|])
    let (every' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x1290 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1282 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x1283 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1293 = this_to_js Obj.magic Obj.magic x1290 in
                 Ojs.call (Ojs.get_prop_ascii x1293 "every") "apply"
                   [|x1293;((let x1284 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1284 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1286 : Ojs.t) ->
                                          fun (x1287 : Ojs.t) ->
                                            fun (x1288 : Ojs.t) ->
                                              unknown_to_js
                                                (x1282
                                                   ~value:(Obj.magic x1286)
                                                   ~index:(Ojs.float_of_js
                                                             x1287)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1288))))|]);
                             (match x1283 with
                              | Some x1285 ->
                                  ignore
                                    (Ojs.call x1284 "push"
                                       [|(any_to_js x1285)|])
                              | None -> ());
                             x1284))|])
    let (some :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x1302 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1294 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x1295 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1305 = this_to_js Obj.magic Obj.magic x1302 in
                 Ojs.call (Ojs.get_prop_ascii x1305 "some") "apply"
                   [|x1305;((let x1296 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1296 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1298 : Ojs.t) ->
                                          fun (x1299 : Ojs.t) ->
                                            fun (x1300 : Ojs.t) ->
                                              unknown_to_js
                                                (x1294
                                                   ~value:(Obj.magic x1298)
                                                   ~index:(Ojs.float_of_js
                                                             x1299)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1300))))|]);
                             (match x1295 with
                              | Some x1297 ->
                                  ignore
                                    (Ojs.call x1296 "push"
                                       [|(any_to_js x1297)|])
                              | None -> ());
                             x1296))|])
    let (forEach :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> index:float -> array:'T list -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x1314 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1306 :
                        value:'T -> index:float -> array:'T list -> unit)
          ->
          fun ?thisArg:(x1307 : any option) ->
            fun () ->
              ignore
                (let x1317 = this_to_js Obj.magic Obj.magic x1314 in
                 Ojs.call (Ojs.get_prop_ascii x1317 "forEach") "apply"
                   [|x1317;((let x1308 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1308 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1310 : Ojs.t) ->
                                          fun (x1311 : Ojs.t) ->
                                            fun (x1312 : Ojs.t) ->
                                              x1306 ~value:(Obj.magic x1310)
                                                ~index:(Ojs.float_of_js x1311)
                                                ~array:(Ojs.list_of_js
                                                          Obj.magic x1312)))|]);
                             (match x1307 with
                              | Some x1309 ->
                                  ignore
                                    (Ojs.call x1308 "push"
                                       [|(any_to_js x1309)|])
                              | None -> ());
                             x1308))|])
    let (map :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> index:float -> array:'T list -> 'U) ->
          ?thisArg:any -> unit -> 'U list)
      =
      fun (x1326 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1318 :
                        value:'T -> index:float -> array:'T list -> 'U)
          ->
          fun ?thisArg:(x1319 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1329 = this_to_js Obj.magic Obj.magic x1326 in
                 Ojs.call (Ojs.get_prop_ascii x1329 "map") "apply"
                   [|x1329;((let x1320 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1320 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1322 : Ojs.t) ->
                                          fun (x1323 : Ojs.t) ->
                                            fun (x1324 : Ojs.t) ->
                                              Obj.magic
                                                (x1318
                                                   ~value:(Obj.magic x1322)
                                                   ~index:(Ojs.float_of_js
                                                             x1323)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1324))))|]);
                             (match x1319 with
                              | Some x1321 ->
                                  ignore
                                    (Ojs.call x1320 "push"
                                       [|(any_to_js x1321)|])
                              | None -> ());
                             x1320))|])
    let (filter :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> 'S list)
      =
      fun (x1339 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1331 :
                       value:'T -> index:float -> array:'T list -> bool)
          ->
          fun ?thisArg:(x1332 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1342 = this_to_js Obj.magic Obj.magic x1339 in
                 Ojs.call (Ojs.get_prop_ascii x1342 "filter") "apply"
                   [|x1342;((let x1333 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1333 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1335 : Ojs.t) ->
                                          fun (x1336 : Ojs.t) ->
                                            fun (x1337 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x1331
                                                   ~value:(Obj.magic x1335)
                                                   ~index:(Ojs.float_of_js
                                                             x1336)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1337))))|]);
                             (match x1332 with
                              | Some x1334 ->
                                  ignore
                                    (Ojs.call x1333 "push"
                                       [|(any_to_js x1334)|])
                              | None -> ());
                             x1333))|])
    let (filter' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> 'T list)
      =
      fun (x1352 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1344 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x1345 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1355 = this_to_js Obj.magic Obj.magic x1352 in
                 Ojs.call (Ojs.get_prop_ascii x1355 "filter") "apply"
                   [|x1355;((let x1346 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1346 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1348 : Ojs.t) ->
                                          fun (x1349 : Ojs.t) ->
                                            fun (x1350 : Ojs.t) ->
                                              unknown_to_js
                                                (x1344
                                                   ~value:(Obj.magic x1348)
                                                   ~index:(Ojs.float_of_js
                                                             x1349)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1350))))|]);
                             (match x1345 with
                              | Some x1347 ->
                                  ignore
                                    (Ojs.call x1346 "push"
                                       [|(any_to_js x1347)|])
                              | None -> ());
                             x1346))|])
    let (reduce :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> 'T)
      =
      fun (x1363 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1357 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x1363) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x1358 : Ojs.t) ->
                       fun (x1359 : Ojs.t) ->
                         fun (x1360 : Ojs.t) ->
                           fun (x1361 : Ojs.t) ->
                             Obj.magic
                               (x1357 ~previousValue:(Obj.magic x1358)
                                  ~currentValue:(Obj.magic x1359)
                                  ~currentIndex:(Ojs.float_of_js x1360)
                                  ~array:(Ojs.list_of_js Obj.magic x1361))))|])
    let (reduce' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> initialValue:'T -> 'T)
      =
      fun (x1373 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1366 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          fun ~initialValue:(x1372 : 'T) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1373) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x1367 : Ojs.t) ->
                         fun (x1368 : Ojs.t) ->
                           fun (x1369 : Ojs.t) ->
                             fun (x1370 : Ojs.t) ->
                               Obj.magic
                                 (x1366 ~previousValue:(Obj.magic x1367)
                                    ~currentValue:(Obj.magic x1368)
                                    ~currentIndex:(Ojs.float_of_js x1369)
                                    ~array:(Ojs.list_of_js Obj.magic x1370))));(
                   Obj.magic x1372)|])
    let (reduce'' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'U ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x1383 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1376 :
                        previousValue:'U ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'U)
          ->
          fun ~initialValue:(x1382 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1383) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x1377 : Ojs.t) ->
                         fun (x1378 : Ojs.t) ->
                           fun (x1379 : Ojs.t) ->
                             fun (x1380 : Ojs.t) ->
                               Obj.magic
                                 (x1376 ~previousValue:(Obj.magic x1377)
                                    ~currentValue:(Obj.magic x1378)
                                    ~currentIndex:(Ojs.float_of_js x1379)
                                    ~array:(Ojs.list_of_js Obj.magic x1380))));(
                   Obj.magic x1382)|])
    let (reduceRight :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> 'T)
      =
      fun (x1392 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1386 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x1392) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x1387 : Ojs.t) ->
                       fun (x1388 : Ojs.t) ->
                         fun (x1389 : Ojs.t) ->
                           fun (x1390 : Ojs.t) ->
                             Obj.magic
                               (x1386 ~previousValue:(Obj.magic x1387)
                                  ~currentValue:(Obj.magic x1388)
                                  ~currentIndex:(Ojs.float_of_js x1389)
                                  ~array:(Ojs.list_of_js Obj.magic x1390))))|])
    let (reduceRight' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> initialValue:'T -> 'T)
      =
      fun (x1402 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1395 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          fun ~initialValue:(x1401 : 'T) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1402) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x1396 : Ojs.t) ->
                         fun (x1397 : Ojs.t) ->
                           fun (x1398 : Ojs.t) ->
                             fun (x1399 : Ojs.t) ->
                               Obj.magic
                                 (x1395 ~previousValue:(Obj.magic x1396)
                                    ~currentValue:(Obj.magic x1397)
                                    ~currentIndex:(Ojs.float_of_js x1398)
                                    ~array:(Ojs.list_of_js Obj.magic x1399))));(
                   Obj.magic x1401)|])
    let (reduceRight'' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'U ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x1412 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1405 :
                        previousValue:'U ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'U)
          ->
          fun ~initialValue:(x1411 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1412) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x1406 : Ojs.t) ->
                         fun (x1407 : Ojs.t) ->
                           fun (x1408 : Ojs.t) ->
                             fun (x1409 : Ojs.t) ->
                               Obj.magic
                                 (x1405 ~previousValue:(Obj.magic x1406)
                                    ~currentValue:(Obj.magic x1407)
                                    ~currentIndex:(Ojs.float_of_js x1408)
                                    ~array:(Ojs.list_of_js Obj.magic x1409))));(
                   Obj.magic x1411)|])
    let (get : ('tags, 'T) this -> float -> 'T) =
      fun (x1415 : ('tags, 'T) this) ->
        fun (x1418 : float) ->
          Obj.magic
            (Ojs.get_prop (this_to_js Obj.magic Obj.magic x1415)
               (Ojs.float_to_js x1418))
    let (set : ('tags, 'T) this -> float -> 'T -> unit) =
      fun (x1419 : ('tags, 'T) this) ->
        fun (x1422 : float) ->
          fun (x1423 : 'T) ->
            Ojs.set_prop (this_to_js Obj.magic Obj.magic x1419)
              (Ojs.float_to_js x1422) (Obj.magic x1423)
    let (flatMap :
      ('tags, 'T) this ->
        callback:(this:'This ->
                    value:'T ->
                      index:float ->
                        array:'T list -> ('U, 'U ReadonlyArray.t) union2)
          -> ?thisArg:'This -> unit -> 'U list)
      =
      fun (x1436 : ('tags, 'T) this) ->
        fun
          ~callback:(x1424 :
                      this:'This ->
                        value:'T ->
                          index:float ->
                            array:'T list -> ('U, 'U ReadonlyArray.t) union2)
          ->
          fun ?thisArg:(x1425 : 'This option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1439 = this_to_js Obj.magic Obj.magic x1436 in
                 Ojs.call (Ojs.get_prop_ascii x1439 "flatMap") "apply"
                   [|x1439;((let x1426 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1426 "push"
                                  [|(Ojs.fun_to_js 4
                                       (fun (x1428 : Ojs.t) ->
                                          fun (x1429 : Ojs.t) ->
                                            fun (x1430 : Ojs.t) ->
                                              fun (x1431 : Ojs.t) ->
                                                union2_to_js Obj.magic
                                                  (fun
                                                     (x1434 :
                                                       'U ReadonlyArray.t)
                                                     ->
                                                     ReadonlyArray.t_to_js
                                                       Obj.magic x1434)
                                                  (x1424
                                                     ~this:(Obj.magic x1428)
                                                     ~value:(Obj.magic x1429)
                                                     ~index:(Ojs.float_of_js
                                                               x1430)
                                                     ~array:(Ojs.list_of_js
                                                               Obj.magic
                                                               x1431))))|]);
                             (match x1425 with
                              | Some x1427 ->
                                  ignore
                                    (Ojs.call x1426 "push"
                                       [|(Obj.magic x1427)|])
                              | None -> ());
                             x1426))|])
    let (flat :
      ('tags, 'T) this ->
        this:'A -> ?depth:'D -> unit -> ('A, 'D) FlatArray.t list)
      =
      fun (x1445 : ('tags, 'T) this) ->
        fun ~this:(x1441 : 'A) ->
          fun ?depth:(x1442 : 'D option) ->
            fun () ->
              Ojs.list_of_js
                (fun (x1449 : Ojs.t) ->
                   FlatArray.t_of_js Obj.magic Obj.magic x1449)
                (let x1448 = this_to_js Obj.magic Obj.magic x1445 in
                 Ojs.call (Ojs.get_prop_ascii x1448 "flat") "apply"
                   [|x1448;((let x1443 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1443 "push" [|(Obj.magic x1441)|]);
                             (match x1442 with
                              | Some x1444 ->
                                  ignore
                                    (Ojs.call x1443 "push"
                                       [|(Obj.magic x1444)|])
                              | None -> ());
                             x1443))|])
    let (entries : ('tags, 'T) this -> (float * 'T) IterableIterator.t) =
      fun (x1452 : ('tags, 'T) this) ->
        IterableIterator.t_of_js
          (fun (x1455 : Ojs.t) ->
             let x1456 = x1455 in
             ((Ojs.float_of_js (Ojs.array_get x1456 0)),
               (Obj.magic (Ojs.array_get x1456 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic x1452) "entries" [||])
    let (keys : ('tags, 'T) this -> float IterableIterator.t) =
      fun (x1457 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x1457) "keys" [||])
    let (values : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x1461 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x1461) "values" [||])
    let (from : 'T ArrayLike.t -> 'T list) =
      fun (x1465 : 'T ArrayLike.t) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "from"
             [|(ArrayLike.t_to_js Obj.magic x1465)|])
    let (from' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> 'U) -> ?thisArg:any -> unit -> 'U list)
      =
      fun ~arrayLike:(x1468 : 'T ArrayLike.t) ->
        fun ~mapfn:(x1469 : v:'T -> k:float -> 'U) ->
          fun ?thisArg:(x1470 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1476 = Ojs.get_prop_ascii Ojs.global "Array" in
                 Ojs.call (Ojs.get_prop_ascii x1476 "from") "apply"
                   [|x1476;((let x1471 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1471 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x1468)|]);
                             ignore
                               (Ojs.call x1471 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x1473 : Ojs.t) ->
                                          fun (x1474 : Ojs.t) ->
                                            Obj.magic
                                              (x1469 ~v:(Obj.magic x1473)
                                                 ~k:(Ojs.float_of_js x1474))))|]);
                             (match x1470 with
                              | Some x1472 ->
                                  ignore
                                    (Ojs.call x1471 "push"
                                       [|(any_to_js x1472)|])
                              | None -> ());
                             x1471))|])
    let (of_ : 'T list -> 'T list) =
      fun (x1478 : 'T list) ->
        Ojs.list_of_js Obj.magic
          (let x1481 = Ojs.get_prop_ascii Ojs.global "Array" in
           Ojs.call (Ojs.get_prop_ascii x1481 "of") "apply"
             [|x1481;((let x1479 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x1480 : 'T) ->
                            ignore
                              (Ojs.call x1479 "push" [|(Obj.magic x1480)|]))
                         x1478;
                       x1479))|])
    let (create : ?arrayLength:float -> unit -> any list) =
      fun ?arrayLength:(x1483 : float option) ->
        fun () ->
          Ojs.list_of_js any_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Array")
               (let x1484 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x1483 with
                 | Some x1485 ->
                     ignore
                       (Ojs.call x1484 "push" [|(Ojs.float_to_js x1485)|])
                 | None -> ());
                x1484))
    let (create' : float -> 'T list) =
      fun (x1487 : float) ->
        Ojs.list_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
             [|(Ojs.float_to_js x1487)|])
    let (create'' : 'T list -> 'T list) =
      fun (x1489 : 'T list) ->
        Ojs.list_of_js Obj.magic
          (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Array")
             (let x1490 =
                Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
              List.iter
                (fun (x1491 : 'T) ->
                   ignore (Ojs.call x1490 "push" [|(Obj.magic x1491)|]))
                x1489;
              x1490))
    let (invoke : ?arrayLength:float -> unit -> any list) =
      fun ?arrayLength:(x1493 : float option) ->
        fun () ->
          Ojs.list_of_js any_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "apply"
               [|Ojs.null;((let x1494 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x1493 with
                             | Some x1495 ->
                                 ignore
                                   (Ojs.call x1494 "push"
                                      [|(Ojs.float_to_js x1495)|])
                             | None -> ());
                            x1494))|])
    let (invoke' : float -> 'T list) =
      fun (x1497 : float) ->
        Ojs.list_of_js Obj.magic
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "Array")
             [|(Ojs.float_to_js x1497)|])
    let (invoke'' : 'T list -> 'T list) =
      fun (x1499 : 'T list) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "apply"
             [|Ojs.null;((let x1500 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x1501 : 'T) ->
                               ignore
                                 (Ojs.call x1500 "push" [|(Obj.magic x1501)|]))
                            x1499;
                          x1500))|])
    let (isArray : any -> bool) =
      fun (x1503 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "isArray"
             [|(any_to_js x1503)|])
    let (prototype : unit -> any list) =
      fun () ->
        Ojs.list_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Array")
             "prototype")
    let (from'' : ('T ArrayLike.t, 'T Iterable.t) union2 -> 'T list) =
      fun (x1505 : ('T ArrayLike.t, 'T Iterable.t) union2) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "from"
             [|(union2_to_js
                  (fun (x1506 : 'T ArrayLike.t) ->
                     ArrayLike.t_to_js Obj.magic x1506)
                  (fun (x1508 : 'T Iterable.t) ->
                     Iterable.t_to_js Obj.magic x1508) x1505)|])
    let (from''' :
      iterable:('T ArrayLike.t, 'T Iterable.t) union2 ->
        mapfn:(v:'T -> k:float -> 'U) -> ?thisArg:any -> unit -> 'U list)
      =
      fun ~iterable:(x1511 : ('T ArrayLike.t, 'T Iterable.t) union2) ->
        fun ~mapfn:(x1512 : v:'T -> k:float -> 'U) ->
          fun ?thisArg:(x1513 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1522 = Ojs.get_prop_ascii Ojs.global "Array" in
                 Ojs.call (Ojs.get_prop_ascii x1522 "from") "apply"
                   [|x1522;((let x1514 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1514 "push"
                                  [|(union2_to_js
                                       (fun (x1518 : 'T ArrayLike.t) ->
                                          ArrayLike.t_to_js Obj.magic x1518)
                                       (fun (x1520 : 'T Iterable.t) ->
                                          Iterable.t_to_js Obj.magic x1520)
                                       x1511)|]);
                             ignore
                               (Ojs.call x1514 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x1516 : Ojs.t) ->
                                          fun (x1517 : Ojs.t) ->
                                            Obj.magic
                                              (x1512 ~v:(Obj.magic x1516)
                                                 ~k:(Ojs.float_of_js x1517))))|]);
                             (match x1513 with
                              | Some x1515 ->
                                  ignore
                                    (Ojs.call x1514 "push"
                                       [|(any_to_js x1515)|])
                              | None -> ());
                             x1514))|])
    let cast_from = Obj.magic
    let (to_ml : 'T t -> 'T list) =
      fun (x1524 : 'T t) ->
        Ojs.list_of_js Obj.magic (t_to_js Obj.magic x1524)
    let (of_ml : 'T list -> 'T t) =
      fun (x1527 : 'T list) ->
        t_of_js Obj.magic (Ojs.list_to_js Obj.magic x1527)
  end
module AnonymousInterface3 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x1531 : Ojs.t) -> x1531
    and t_to_js : t -> Ojs.t = fun (x1530 : Ojs.t) -> x1530
    let (get : t -> string -> string) =
      fun (x1532 : t) ->
        fun (x1533 : string) ->
          Ojs.string_of_js
            (Ojs.get_prop (t_to_js x1532) (Ojs.string_to_js x1533))
    let (set : t -> string -> string -> unit) =
      fun (x1534 : t) ->
        fun (x1535 : string) ->
          fun (x1536 : string) ->
            Ojs.set_prop (t_to_js x1534) (Ojs.string_to_js x1535)
              (Ojs.string_to_js x1536)
  end
module RegExpExecArray =
  struct
    type t =
      [ `Array of string  | `Array of string  | `ArrayLike of string 
      | `IterableIterator of string 
      | `Iterator of (string * any * never or_undefined) 
      | `RegExpExecArray ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1538 : Ojs.t) -> t_of_js x1538
    and t_0_to_js : t_0 -> Ojs.t = fun (x1537 : t) -> t_to_js x1537
    type tags =
      [ `Array of string  | `Array of string  | `ArrayLike of string 
      | `IterableIterator of string 
      | `Iterator of (string * any * never or_undefined) 
      | `RegExpExecArray ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `RegExpExecArray ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x1541 : Ojs.t) -> intf_of_js __tags_of_js x1541
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x1539 : __tags intf) -> intf_to_js __tags_to_js x1539
    let (get_groups : 'tags this -> AnonymousInterface3.t) =
      fun (x1543 : 'tags this) ->
        AnonymousInterface3.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1543) "groups")
    let (set_groups : 'tags this -> AnonymousInterface3.t -> unit) =
      fun (x1545 : 'tags this) ->
        fun (x1546 : AnonymousInterface3.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1545) "groups"
            (AnonymousInterface3.t_to_js x1546)
    let (get_index : 'tags this -> float) =
      fun (x1548 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1548) "index")
    let (set_index : 'tags this -> float -> unit) =
      fun (x1550 : 'tags this) ->
        fun (x1551 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1550) "index"
            (Ojs.float_to_js x1551)
    let (get_input : 'tags this -> string) =
      fun (x1553 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1553) "input")
    let (set_input : 'tags this -> string -> unit) =
      fun (x1555 : 'tags this) ->
        fun (x1556 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1555) "input"
            (Ojs.string_to_js x1556)
    let cast_from = Obj.magic
  end
module RegExpMatchArray =
  struct
    type t =
      [ `Array of string  | `Array of string  | `ArrayLike of string 
      | `IterableIterator of string 
      | `Iterator of (string * any * never or_undefined) 
      | `RegExpMatchArray ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1559 : Ojs.t) -> t_of_js x1559
    and t_0_to_js : t_0 -> Ojs.t = fun (x1558 : t) -> t_to_js x1558
    type tags =
      [ `Array of string  | `Array of string  | `ArrayLike of string 
      | `IterableIterator of string 
      | `Iterator of (string * any * never or_undefined) 
      | `RegExpMatchArray ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `RegExpMatchArray ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x1562 : Ojs.t) -> intf_of_js __tags_of_js x1562
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x1560 : __tags intf) -> intf_to_js __tags_to_js x1560
    let (get_groups : 'tags this -> AnonymousInterface3.t) =
      fun (x1564 : 'tags this) ->
        AnonymousInterface3.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1564) "groups")
    let (set_groups : 'tags this -> AnonymousInterface3.t -> unit) =
      fun (x1566 : 'tags this) ->
        fun (x1567 : AnonymousInterface3.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1566) "groups"
            (AnonymousInterface3.t_to_js x1567)
    let (get_index : 'tags this -> float) =
      fun (x1569 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1569) "index")
    let (set_index : 'tags this -> float -> unit) =
      fun (x1571 : 'tags this) ->
        fun (x1572 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1571) "index"
            (Ojs.float_to_js x1572)
    let (get_input : 'tags this -> string) =
      fun (x1574 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1574) "input")
    let (set_input : 'tags this -> string -> unit) =
      fun (x1576 : 'tags this) ->
        fun (x1577 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1576) "input"
            (Ojs.string_to_js x1577)
    let cast_from = Obj.magic
  end
module RegExp =
  struct
    type t = [ `RegExp ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1580 : Ojs.t) -> t_of_js x1580
    and t_0_to_js : t_0 -> Ojs.t = fun (x1579 : t) -> t_to_js x1579
    type tags = [ `RegExp ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `RegExp ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x1583 : Ojs.t) -> intf_of_js __tags_of_js x1583
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x1581 : __tags intf) -> intf_to_js __tags_to_js x1581
    let (get_flags : 'tags this -> string) =
      fun (x1585 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1585) "flags")
    let (get_sticky : 'tags this -> bool) =
      fun (x1587 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1587) "sticky")
    let (get_unicode : 'tags this -> bool) =
      fun (x1589 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1589) "unicode")
    let (get_dotAll : 'tags this -> bool) =
      fun (x1591 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1591) "dotAll")
    let (exec : 'tags this -> string:string -> RegExpExecArray.t or_null) =
      fun (x1594 : 'tags this) ->
        fun ~string:(x1593 : string) ->
          or_null_of_js RegExpExecArray.t_of_js
            (Ojs.call (this_to_js Obj.magic x1594) "exec"
               [|(Ojs.string_to_js x1593)|])
    let (test : 'tags this -> string:string -> bool) =
      fun (x1598 : 'tags this) ->
        fun ~string:(x1597 : string) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic x1598) "test"
               [|(Ojs.string_to_js x1597)|])
    let (get_source : 'tags this -> string) =
      fun (x1600 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1600) "source")
    let (get_global : 'tags this -> bool) =
      fun (x1602 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1602) "global")
    let (get_ignoreCase : 'tags this -> bool) =
      fun (x1604 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1604) "ignoreCase")
    let (get_multiline : 'tags this -> bool) =
      fun (x1606 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1606) "multiline")
    let (get_lastIndex : 'tags this -> float) =
      fun (x1608 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1608) "lastIndex")
    let (set_lastIndex : 'tags this -> float -> unit) =
      fun (x1610 : 'tags this) ->
        fun (x1611 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1610) "lastIndex"
            (Ojs.float_to_js x1611)
    let (compile : 'tags this -> 'tags this) =
      fun (x1613 : 'tags this) ->
        this_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic x1613) "compile" [||])
    let (create : pattern:t or_string -> ?flags:string -> unit -> t) =
      fun ~pattern:(x1616 : t or_string) ->
        fun ?flags:(x1617 : string option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "RegExp")
                 (let x1618 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore
                    (Ojs.call x1618 "push"
                       [|(or_string_to_js t_to_js x1616)|]);
                  (match x1617 with
                   | Some x1619 ->
                       ignore
                         (Ojs.call x1618 "push" [|(Ojs.string_to_js x1619)|])
                   | None -> ());
                  x1618))
    let (invoke : pattern:t or_string -> ?flags:string -> unit -> t) =
      fun ~pattern:(x1621 : t or_string) ->
        fun ?flags:(x1622 : string option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "apply"
                 [|Ojs.null;((let x1623 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x1623 "push"
                                   [|(or_string_to_js t_to_js x1621)|]);
                              (match x1622 with
                               | Some x1624 ->
                                   ignore
                                     (Ojs.call x1623 "push"
                                        [|(Ojs.string_to_js x1624)|])
                               | None -> ());
                              x1623))|])
    let (create' : t or_string -> t) =
      fun (x1626 : t or_string) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "RegExp")
             [|(or_string_to_js t_to_js x1626)|])
    let (create'' : pattern:string -> ?flags:string -> unit -> t) =
      fun ~pattern:(x1628 : string) ->
        fun ?flags:(x1629 : string option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "RegExp")
                 (let x1630 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore (Ojs.call x1630 "push" [|(Ojs.string_to_js x1628)|]);
                  (match x1629 with
                   | Some x1631 ->
                       ignore
                         (Ojs.call x1630 "push" [|(Ojs.string_to_js x1631)|])
                   | None -> ());
                  x1630))
    let (invoke' : t or_string -> t) =
      fun (x1632 : t or_string) ->
        t_of_js
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "RegExp")
             [|(or_string_to_js t_to_js x1632)|])
    let (invoke'' : pattern:string -> ?flags:string -> unit -> t) =
      fun ~pattern:(x1634 : string) ->
        fun ?flags:(x1635 : string option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "apply"
                 [|Ojs.null;((let x1636 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x1636 "push"
                                   [|(Ojs.string_to_js x1634)|]);
                              (match x1635 with
                               | Some x1637 ->
                                   ignore
                                     (Ojs.call x1636 "push"
                                        [|(Ojs.string_to_js x1637)|])
                               | None -> ());
                              x1636))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "prototype")
    let (_1 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$1")
    let (_2 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$2")
    let (_3 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$3")
    let (_4 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$4")
    let (_5 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$5")
    let (_6 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$6")
    let (_7 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$7")
    let (_8 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$8")
    let (_9 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$9")
    let (lastMatch : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "lastMatch")
    let cast_from = Obj.magic
  end
module AnonymousInterface9 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x1639 : Ojs.t) -> x1639
    and t_to_js : t -> Ojs.t = fun (x1638 : Ojs.t) -> x1638
  end
module AnonymousInterface2 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x1641 : Ojs.t) -> x1641
    and t_to_js : t -> Ojs.t = fun (x1640 : Ojs.t) -> x1640
    let (get_raw : t -> (string ArrayLike.t, string list) union2) =
      fun (x1642 : t) ->
        union2_of_js
          (fun (x1643 : Ojs.t) -> ArrayLike.t_of_js Ojs.string_of_js x1643)
          (fun (x1645 : Ojs.t) -> Ojs.list_of_js Ojs.string_of_js x1645)
          (Ojs.get_prop_ascii (t_to_js x1642) "raw")
    let (set_raw : t -> (string ArrayLike.t, string list) union2 -> unit) =
      fun (x1647 : t) ->
        fun (x1648 : (string ArrayLike.t, string list) union2) ->
          Ojs.set_prop_ascii (t_to_js x1647) "raw"
            (union2_to_js
               (fun (x1649 : string ArrayLike.t) ->
                  ArrayLike.t_to_js Ojs.string_to_js x1649)
               (fun (x1651 : string list) ->
                  Ojs.list_to_js Ojs.string_to_js x1651) x1648)
  end
module rec
  AnonymousInterface16:sig
                         type t = private Ojs.t
                         val t_to_js : t -> Ojs.t
                         val t_of_js : Ojs.t -> t
                         val create :
                           t ->
                             ?locales:(Intl.UnicodeBCP47LocaleIdentifier.t,
                               Intl.UnicodeBCP47LocaleIdentifier.t) or_array
                               ->
                               ?options:Intl.RelativeTimeFormatOptions.t ->
                                 unit -> Intl.RelativeTimeFormat.t
                         val supportedLocalesOf :
                           t ->
                             ?locales:(Intl.UnicodeBCP47LocaleIdentifier.t,
                               Intl.UnicodeBCP47LocaleIdentifier.t) or_array
                               ->
                               ?options:Intl.RelativeTimeFormatOptions.t ->
                                 unit ->
                                   Intl.UnicodeBCP47LocaleIdentifier.t list
                       end =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x1654 : Ojs.t) -> x1654
    and t_to_js : t -> Ojs.t = fun (x1653 : Ojs.t) -> x1653
    let (create :
      t ->
        ?locales:(Intl.UnicodeBCP47LocaleIdentifier.t,
          Intl.UnicodeBCP47LocaleIdentifier.t) or_array ->
          ?options:Intl.RelativeTimeFormatOptions.t ->
            unit -> Intl.RelativeTimeFormat.t)
      =
      fun (x1662 : t) ->
        fun
          ?locales:(x1655 :
                     (Intl.UnicodeBCP47LocaleIdentifier.t,
                       Intl.UnicodeBCP47LocaleIdentifier.t) or_array option)
          ->
          fun ?options:(x1656 : Intl.RelativeTimeFormatOptions.t option) ->
            fun () ->
              Intl.RelativeTimeFormat.t_of_js
                (Ojs.new_obj_arr (t_to_js x1662)
                   (let x1657 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    (match x1655 with
                     | Some x1659 ->
                         ignore
                           (Ojs.call x1657 "push"
                              [|(or_array_to_js
                                   Intl.UnicodeBCP47LocaleIdentifier.t_to_js
                                   Intl.UnicodeBCP47LocaleIdentifier.t_to_js
                                   x1659)|])
                     | None -> ());
                    (match x1656 with
                     | Some x1658 ->
                         ignore
                           (Ojs.call x1657 "push"
                              [|(Intl.RelativeTimeFormatOptions.t_to_js x1658)|])
                     | None -> ());
                    x1657))
    let (supportedLocalesOf :
      t ->
        ?locales:(Intl.UnicodeBCP47LocaleIdentifier.t,
          Intl.UnicodeBCP47LocaleIdentifier.t) or_array ->
          ?options:Intl.RelativeTimeFormatOptions.t ->
            unit -> Intl.UnicodeBCP47LocaleIdentifier.t list)
      =
      fun (x1670 : t) ->
        fun
          ?locales:(x1663 :
                     (Intl.UnicodeBCP47LocaleIdentifier.t,
                       Intl.UnicodeBCP47LocaleIdentifier.t) or_array option)
          ->
          fun ?options:(x1664 : Intl.RelativeTimeFormatOptions.t option) ->
            fun () ->
              Ojs.list_of_js Intl.UnicodeBCP47LocaleIdentifier.t_of_js
                (let x1671 = t_to_js x1670 in
                 Ojs.call (Ojs.get_prop_ascii x1671 "supportedLocalesOf")
                   "apply"
                   [|x1671;((let x1665 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1663 with
                              | Some x1667 ->
                                  ignore
                                    (Ojs.call x1665 "push"
                                       [|(or_array_to_js
                                            Intl.UnicodeBCP47LocaleIdentifier.t_to_js
                                            Intl.UnicodeBCP47LocaleIdentifier.t_to_js
                                            x1667)|])
                              | None -> ());
                             (match x1664 with
                              | Some x1666 ->
                                  ignore
                                    (Ojs.call x1665 "push"
                                       [|(Intl.RelativeTimeFormatOptions.t_to_js
                                            x1666)|])
                              | None -> ());
                             x1665))|])
  end
 and
  AnonymousInterface5:sig
                        type t = private Ojs.t
                        val t_to_js : t -> Ojs.t
                        val t_of_js : Ojs.t -> t
                        val create :
                          t ->
                            ?locales:string list or_string ->
                              ?options:Intl.CollatorOptions.t ->
                                unit -> Intl.Collator.t
                        val apply :
                          t ->
                            ?locales:string list or_string ->
                              ?options:Intl.CollatorOptions.t ->
                                unit -> Intl.Collator.t
                        val supportedLocalesOf :
                          t ->
                            locales:string list or_string ->
                              ?options:Intl.CollatorOptions.t ->
                                unit -> string list
                      end =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x1674 : Ojs.t) -> x1674
    and t_to_js : t -> Ojs.t = fun (x1673 : Ojs.t) -> x1673
    let (create :
      t ->
        ?locales:string list or_string ->
          ?options:Intl.CollatorOptions.t -> unit -> Intl.Collator.t)
      =
      fun (x1682 : t) ->
        fun ?locales:(x1675 : string list or_string option) ->
          fun ?options:(x1676 : Intl.CollatorOptions.t option) ->
            fun () ->
              Intl.Collator.t_of_js
                (Ojs.new_obj_arr (t_to_js x1682)
                   (let x1677 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    (match x1675 with
                     | Some x1679 ->
                         ignore
                           (Ojs.call x1677 "push"
                              [|(or_string_to_js
                                   (fun (x1680 : string list) ->
                                      Ojs.list_to_js Ojs.string_to_js x1680)
                                   x1679)|])
                     | None -> ());
                    (match x1676 with
                     | Some x1678 ->
                         ignore
                           (Ojs.call x1677 "push"
                              [|(Intl.CollatorOptions.t_to_js x1678)|])
                     | None -> ());
                    x1677))
    let (apply :
      t ->
        ?locales:string list or_string ->
          ?options:Intl.CollatorOptions.t -> unit -> Intl.Collator.t)
      =
      fun (x1690 : t) ->
        fun ?locales:(x1683 : string list or_string option) ->
          fun ?options:(x1684 : Intl.CollatorOptions.t option) ->
            fun () ->
              Intl.Collator.t_of_js
                (Ojs.call (t_to_js x1690) "apply"
                   [|Ojs.null;((let x1685 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                (match x1683 with
                                 | Some x1687 ->
                                     ignore
                                       (Ojs.call x1685 "push"
                                          [|(or_string_to_js
                                               (fun (x1688 : string list) ->
                                                  Ojs.list_to_js
                                                    Ojs.string_to_js x1688)
                                               x1687)|])
                                 | None -> ());
                                (match x1684 with
                                 | Some x1686 ->
                                     ignore
                                       (Ojs.call x1685 "push"
                                          [|(Intl.CollatorOptions.t_to_js
                                               x1686)|])
                                 | None -> ());
                                x1685))|])
    let (supportedLocalesOf :
      t ->
        locales:string list or_string ->
          ?options:Intl.CollatorOptions.t -> unit -> string list)
      =
      fun (x1697 : t) ->
        fun ~locales:(x1691 : string list or_string) ->
          fun ?options:(x1692 : Intl.CollatorOptions.t option) ->
            fun () ->
              Ojs.list_of_js Ojs.string_of_js
                (let x1698 = t_to_js x1697 in
                 Ojs.call (Ojs.get_prop_ascii x1698 "supportedLocalesOf")
                   "apply"
                   [|x1698;((let x1693 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1693 "push"
                                  [|(or_string_to_js
                                       (fun (x1695 : string list) ->
                                          Ojs.list_to_js Ojs.string_to_js
                                            x1695) x1691)|]);
                             (match x1692 with
                              | Some x1694 ->
                                  ignore
                                    (Ojs.call x1693 "push"
                                       [|(Intl.CollatorOptions.t_to_js x1694)|])
                              | None -> ());
                             x1693))|])
  end and
       AnonymousInterface6:sig
                             type t = private Ojs.t
                             val t_to_js : t -> Ojs.t
                             val t_of_js : Ojs.t -> t
                             val create :
                               t ->
                                 ?locales:string list or_string ->
                                   ?options:Intl.DateTimeFormatOptions.t ->
                                     unit -> Intl.DateTimeFormat.t
                             val apply :
                               t ->
                                 ?locales:string list or_string ->
                                   ?options:Intl.DateTimeFormatOptions.t ->
                                     unit -> Intl.DateTimeFormat.t
                             val supportedLocalesOf :
                               t ->
                                 locales:string list or_string ->
                                   ?options:Intl.DateTimeFormatOptions.t ->
                                     unit -> string list
                           end =
       struct
         type t = Ojs.t
         let rec t_of_js : Ojs.t -> t = fun (x1701 : Ojs.t) -> x1701
         and t_to_js : t -> Ojs.t = fun (x1700 : Ojs.t) -> x1700
         let (create :
           t ->
             ?locales:string list or_string ->
               ?options:Intl.DateTimeFormatOptions.t ->
                 unit -> Intl.DateTimeFormat.t)
           =
           fun (x1709 : t) ->
             fun ?locales:(x1702 : string list or_string option) ->
               fun ?options:(x1703 : Intl.DateTimeFormatOptions.t option) ->
                 fun () ->
                   Intl.DateTimeFormat.t_of_js
                     (Ojs.new_obj_arr (t_to_js x1709)
                        (let x1704 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         (match x1702 with
                          | Some x1706 ->
                              ignore
                                (Ojs.call x1704 "push"
                                   [|(or_string_to_js
                                        (fun (x1707 : string list) ->
                                           Ojs.list_to_js Ojs.string_to_js
                                             x1707) x1706)|])
                          | None -> ());
                         (match x1703 with
                          | Some x1705 ->
                              ignore
                                (Ojs.call x1704 "push"
                                   [|(Intl.DateTimeFormatOptions.t_to_js
                                        x1705)|])
                          | None -> ());
                         x1704))
         let (apply :
           t ->
             ?locales:string list or_string ->
               ?options:Intl.DateTimeFormatOptions.t ->
                 unit -> Intl.DateTimeFormat.t)
           =
           fun (x1717 : t) ->
             fun ?locales:(x1710 : string list or_string option) ->
               fun ?options:(x1711 : Intl.DateTimeFormatOptions.t option) ->
                 fun () ->
                   Intl.DateTimeFormat.t_of_js
                     (Ojs.call (t_to_js x1717) "apply"
                        [|Ojs.null;((let x1712 =
                                       Ojs.new_obj
                                         (Ojs.get_prop_ascii Ojs.global
                                            "Array") [||] in
                                     (match x1710 with
                                      | Some x1714 ->
                                          ignore
                                            (Ojs.call x1712 "push"
                                               [|(or_string_to_js
                                                    (fun
                                                       (x1715 : string list)
                                                       ->
                                                       Ojs.list_to_js
                                                         Ojs.string_to_js
                                                         x1715) x1714)|])
                                      | None -> ());
                                     (match x1711 with
                                      | Some x1713 ->
                                          ignore
                                            (Ojs.call x1712 "push"
                                               [|(Intl.DateTimeFormatOptions.t_to_js
                                                    x1713)|])
                                      | None -> ());
                                     x1712))|])
         let (supportedLocalesOf :
           t ->
             locales:string list or_string ->
               ?options:Intl.DateTimeFormatOptions.t -> unit -> string list)
           =
           fun (x1724 : t) ->
             fun ~locales:(x1718 : string list or_string) ->
               fun ?options:(x1719 : Intl.DateTimeFormatOptions.t option) ->
                 fun () ->
                   Ojs.list_of_js Ojs.string_of_js
                     (let x1725 = t_to_js x1724 in
                      Ojs.call
                        (Ojs.get_prop_ascii x1725 "supportedLocalesOf")
                        "apply"
                        [|x1725;((let x1720 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  ignore
                                    (Ojs.call x1720 "push"
                                       [|(or_string_to_js
                                            (fun (x1722 : string list) ->
                                               Ojs.list_to_js
                                                 Ojs.string_to_js x1722)
                                            x1718)|]);
                                  (match x1719 with
                                   | Some x1721 ->
                                       ignore
                                         (Ojs.call x1720 "push"
                                            [|(Intl.DateTimeFormatOptions.t_to_js
                                                 x1721)|])
                                   | None -> ());
                                  x1720))|])
       end and
            AnonymousInterface7:sig
                                  type t = private Ojs.t
                                  val t_to_js : t -> Ojs.t
                                  val t_of_js : Ojs.t -> t
                                  val create :
                                    t ->
                                      ?locales:string list or_string ->
                                        ?options:Intl.NumberFormatOptions.t
                                          -> unit -> Intl.NumberFormat.t
                                  val apply :
                                    t ->
                                      ?locales:string list or_string ->
                                        ?options:Intl.NumberFormatOptions.t
                                          -> unit -> Intl.NumberFormat.t
                                  val supportedLocalesOf :
                                    t ->
                                      locales:string list or_string ->
                                        ?options:Intl.NumberFormatOptions.t
                                          -> unit -> string list
                                end =
            struct
              type t = Ojs.t
              let rec t_of_js : Ojs.t -> t = fun (x1728 : Ojs.t) -> x1728
              and t_to_js : t -> Ojs.t = fun (x1727 : Ojs.t) -> x1727
              let (create :
                t ->
                  ?locales:string list or_string ->
                    ?options:Intl.NumberFormatOptions.t ->
                      unit -> Intl.NumberFormat.t)
                =
                fun (x1736 : t) ->
                  fun ?locales:(x1729 : string list or_string option) ->
                    fun ?options:(x1730 : Intl.NumberFormatOptions.t option)
                      ->
                      fun () ->
                        Intl.NumberFormat.t_of_js
                          (Ojs.new_obj_arr (t_to_js x1736)
                             (let x1731 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x1729 with
                               | Some x1733 ->
                                   ignore
                                     (Ojs.call x1731 "push"
                                        [|(or_string_to_js
                                             (fun (x1734 : string list) ->
                                                Ojs.list_to_js
                                                  Ojs.string_to_js x1734)
                                             x1733)|])
                               | None -> ());
                              (match x1730 with
                               | Some x1732 ->
                                   ignore
                                     (Ojs.call x1731 "push"
                                        [|(Intl.NumberFormatOptions.t_to_js
                                             x1732)|])
                               | None -> ());
                              x1731))
              let (apply :
                t ->
                  ?locales:string list or_string ->
                    ?options:Intl.NumberFormatOptions.t ->
                      unit -> Intl.NumberFormat.t)
                =
                fun (x1744 : t) ->
                  fun ?locales:(x1737 : string list or_string option) ->
                    fun ?options:(x1738 : Intl.NumberFormatOptions.t option)
                      ->
                      fun () ->
                        Intl.NumberFormat.t_of_js
                          (Ojs.call (t_to_js x1744) "apply"
                             [|Ojs.null;((let x1739 =
                                            Ojs.new_obj
                                              (Ojs.get_prop_ascii Ojs.global
                                                 "Array") [||] in
                                          (match x1737 with
                                           | Some x1741 ->
                                               ignore
                                                 (Ojs.call x1739 "push"
                                                    [|(or_string_to_js
                                                         (fun
                                                            (x1742 :
                                                              string list)
                                                            ->
                                                            Ojs.list_to_js
                                                              Ojs.string_to_js
                                                              x1742) x1741)|])
                                           | None -> ());
                                          (match x1738 with
                                           | Some x1740 ->
                                               ignore
                                                 (Ojs.call x1739 "push"
                                                    [|(Intl.NumberFormatOptions.t_to_js
                                                         x1740)|])
                                           | None -> ());
                                          x1739))|])
              let (supportedLocalesOf :
                t ->
                  locales:string list or_string ->
                    ?options:Intl.NumberFormatOptions.t ->
                      unit -> string list)
                =
                fun (x1751 : t) ->
                  fun ~locales:(x1745 : string list or_string) ->
                    fun ?options:(x1746 : Intl.NumberFormatOptions.t option)
                      ->
                      fun () ->
                        Ojs.list_of_js Ojs.string_of_js
                          (let x1752 = t_to_js x1751 in
                           Ojs.call
                             (Ojs.get_prop_ascii x1752 "supportedLocalesOf")
                             "apply"
                             [|x1752;((let x1747 =
                                         Ojs.new_obj
                                           (Ojs.get_prop_ascii Ojs.global
                                              "Array") [||] in
                                       ignore
                                         (Ojs.call x1747 "push"
                                            [|(or_string_to_js
                                                 (fun (x1749 : string list)
                                                    ->
                                                    Ojs.list_to_js
                                                      Ojs.string_to_js x1749)
                                                 x1745)|]);
                                       (match x1746 with
                                        | Some x1748 ->
                                            ignore
                                              (Ojs.call x1747 "push"
                                                 [|(Intl.NumberFormatOptions.t_to_js
                                                      x1748)|])
                                        | None -> ());
                                       x1747))|])
            end and
                 AnonymousInterface8:sig
                                       type t = private Ojs.t
                                       val t_to_js : t -> Ojs.t
                                       val t_of_js : Ojs.t -> t
                                       val create :
                                         t ->
                                           ?locales:string list or_string ->
                                             ?options:Intl.PluralRulesOptions.t
                                               -> unit -> Intl.PluralRules.t
                                       val apply :
                                         t ->
                                           ?locales:string list or_string ->
                                             ?options:Intl.PluralRulesOptions.t
                                               -> unit -> Intl.PluralRules.t
                                       val supportedLocalesOf :
                                         t ->
                                           locales:string list or_string ->
                                             ?options:Intl.PluralRulesOptions.t
                                               -> unit -> string list
                                     end =
                 struct
                   type t = Ojs.t
                   let rec t_of_js : Ojs.t -> t =
                     fun (x1755 : Ojs.t) -> x1755
                   and t_to_js : t -> Ojs.t = fun (x1754 : Ojs.t) -> x1754
                   let (create :
                     t ->
                       ?locales:string list or_string ->
                         ?options:Intl.PluralRulesOptions.t ->
                           unit -> Intl.PluralRules.t)
                     =
                     fun (x1763 : t) ->
                       fun ?locales:(x1756 : string list or_string option) ->
                         fun
                           ?options:(x1757 :
                                      Intl.PluralRulesOptions.t option)
                           ->
                           fun () ->
                             Intl.PluralRules.t_of_js
                               (Ojs.new_obj_arr (t_to_js x1763)
                                  (let x1758 =
                                     Ojs.new_obj
                                       (Ojs.get_prop_ascii Ojs.global "Array")
                                       [||] in
                                   (match x1756 with
                                    | Some x1760 ->
                                        ignore
                                          (Ojs.call x1758 "push"
                                             [|(or_string_to_js
                                                  (fun (x1761 : string list)
                                                     ->
                                                     Ojs.list_to_js
                                                       Ojs.string_to_js x1761)
                                                  x1760)|])
                                    | None -> ());
                                   (match x1757 with
                                    | Some x1759 ->
                                        ignore
                                          (Ojs.call x1758 "push"
                                             [|(Intl.PluralRulesOptions.t_to_js
                                                  x1759)|])
                                    | None -> ());
                                   x1758))
                   let (apply :
                     t ->
                       ?locales:string list or_string ->
                         ?options:Intl.PluralRulesOptions.t ->
                           unit -> Intl.PluralRules.t)
                     =
                     fun (x1771 : t) ->
                       fun ?locales:(x1764 : string list or_string option) ->
                         fun
                           ?options:(x1765 :
                                      Intl.PluralRulesOptions.t option)
                           ->
                           fun () ->
                             Intl.PluralRules.t_of_js
                               (Ojs.call (t_to_js x1771) "apply"
                                  [|Ojs.null;((let x1766 =
                                                 Ojs.new_obj
                                                   (Ojs.get_prop_ascii
                                                      Ojs.global "Array")
                                                   [||] in
                                               (match x1764 with
                                                | Some x1768 ->
                                                    ignore
                                                      (Ojs.call x1766 "push"
                                                         [|(or_string_to_js
                                                              (fun
                                                                 (x1769 :
                                                                   string
                                                                    list)
                                                                 ->
                                                                 Ojs.list_to_js
                                                                   Ojs.string_to_js
                                                                   x1769)
                                                              x1768)|])
                                                | None -> ());
                                               (match x1765 with
                                                | Some x1767 ->
                                                    ignore
                                                      (Ojs.call x1766 "push"
                                                         [|(Intl.PluralRulesOptions.t_to_js
                                                              x1767)|])
                                                | None -> ());
                                               x1766))|])
                   let (supportedLocalesOf :
                     t ->
                       locales:string list or_string ->
                         ?options:Intl.PluralRulesOptions.t ->
                           unit -> string list)
                     =
                     fun (x1778 : t) ->
                       fun ~locales:(x1772 : string list or_string) ->
                         fun
                           ?options:(x1773 :
                                      Intl.PluralRulesOptions.t option)
                           ->
                           fun () ->
                             Ojs.list_of_js Ojs.string_of_js
                               (let x1779 = t_to_js x1778 in
                                Ojs.call
                                  (Ojs.get_prop_ascii x1779
                                     "supportedLocalesOf") "apply"
                                  [|x1779;((let x1774 =
                                              Ojs.new_obj
                                                (Ojs.get_prop_ascii
                                                   Ojs.global "Array") 
                                                [||] in
                                            ignore
                                              (Ojs.call x1774 "push"
                                                 [|(or_string_to_js
                                                      (fun
                                                         (x1776 :
                                                           string list)
                                                         ->
                                                         Ojs.list_to_js
                                                           Ojs.string_to_js
                                                           x1776) x1772)|]);
                                            (match x1773 with
                                             | Some x1775 ->
                                                 ignore
                                                   (Ojs.call x1774 "push"
                                                      [|(Intl.PluralRulesOptions.t_to_js
                                                           x1775)|])
                                             | None -> ());
                                            x1774))|])
                 end and
                      Date:sig
                             type t = [ `Date ] intf
                             type t_0 = t
                             [@@@js.stop ]
                             type tags = [ `Date ]
                             type tags_0 = tags
                             [@@@js.start ]
                             [@@@js.implem
                               type tags = [ `Date ]
                               type tags_0 = tags]
                             type 'tags this =
                               'tags intf constraint 'tags = [> `Date ]
                             val t_to_js : t -> Ojs.t
                             val t_of_js : Ojs.t -> t
                             val t_0_to_js : t_0 -> Ojs.t
                             val t_0_of_js : Ojs.t -> t_0
                             val toLocaleString :
                               'tags this ->
                                 ?locales:string list or_string ->
                                   ?options:Intl.DateTimeFormatOptions.t ->
                                     unit -> string
                             val toLocaleDateString :
                               'tags this ->
                                 ?locales:string list or_string ->
                                   ?options:Intl.DateTimeFormatOptions.t ->
                                     unit -> string
                             val toLocaleTimeString :
                               'tags this ->
                                 ?locales:string list or_string ->
                                   ?options:Intl.DateTimeFormatOptions.t ->
                                     unit -> string
                             val toString : 'tags this -> string
                             val toDateString : 'tags this -> string
                             val toTimeString : 'tags this -> string
                             val toLocaleString' : 'tags this -> string
                             val toLocaleDateString' : 'tags this -> string
                             val toLocaleTimeString' : 'tags this -> string
                             val valueOf : 'tags this -> float
                             val getTime : 'tags this -> float
                             val getFullYear : 'tags this -> float
                             val getUTCFullYear : 'tags this -> float
                             val getMonth : 'tags this -> float
                             val getUTCMonth : 'tags this -> float
                             val getDate : 'tags this -> float
                             val getUTCDate : 'tags this -> float
                             val getDay : 'tags this -> float
                             val getUTCDay : 'tags this -> float
                             val getHours : 'tags this -> float
                             val getUTCHours : 'tags this -> float
                             val getMinutes : 'tags this -> float
                             val getUTCMinutes : 'tags this -> float
                             val getSeconds : 'tags this -> float
                             val getUTCSeconds : 'tags this -> float
                             val getMilliseconds : 'tags this -> float
                             val getUTCMilliseconds : 'tags this -> float
                             val getTimezoneOffset : 'tags this -> float
                             val setTime : 'tags this -> time:float -> float
                             val setMilliseconds :
                               'tags this -> ms:float -> float
                             val setUTCMilliseconds :
                               'tags this -> ms:float -> float
                             val setSeconds :
                               'tags this ->
                                 sec:float -> ?ms:float -> unit -> float
                             val setUTCSeconds :
                               'tags this ->
                                 sec:float -> ?ms:float -> unit -> float
                             val setMinutes :
                               'tags this ->
                                 min:float ->
                                   ?sec:float -> ?ms:float -> unit -> float
                             val setUTCMinutes :
                               'tags this ->
                                 min:float ->
                                   ?sec:float -> ?ms:float -> unit -> float
                             val setHours :
                               'tags this ->
                                 hours:float ->
                                   ?min:float ->
                                     ?sec:float -> ?ms:float -> unit -> float
                             val setUTCHours :
                               'tags this ->
                                 hours:float ->
                                   ?min:float ->
                                     ?sec:float -> ?ms:float -> unit -> float
                             val setDate : 'tags this -> date:float -> float
                             val setUTCDate :
                               'tags this -> date:float -> float
                             val setMonth :
                               'tags this ->
                                 month:float -> ?date:float -> unit -> float
                             val setUTCMonth :
                               'tags this ->
                                 month:float -> ?date:float -> unit -> float
                             val setFullYear :
                               'tags this ->
                                 year:float ->
                                   ?month:float ->
                                     ?date:float -> unit -> float
                             val setUTCFullYear :
                               'tags this ->
                                 year:float ->
                                   ?month:float ->
                                     ?date:float -> unit -> float
                             val toUTCString : 'tags this -> string
                             val toISOString : 'tags this -> string
                             val toJSON :
                               'tags this -> ?key:any -> unit -> string
                             val create : t or_string or_number -> t
                             val create' : unit -> t
                             val create'' : string or_number -> t
                             val create''' :
                               year:float ->
                                 month:float ->
                                   ?date:float ->
                                     ?hours:float ->
                                       ?minutes:float ->
                                         ?seconds:float ->
                                           ?ms:float -> unit -> t
                             val invoke : unit -> string
                             val prototype : unit -> t
                             val parse : string -> float
                             val utc :
                               year:float ->
                                 month:float ->
                                   ?date:float ->
                                     ?hours:float ->
                                       ?minutes:float ->
                                         ?seconds:float ->
                                           ?ms:float -> unit -> float
                             val now : unit -> float
                             val cast_from : 'tags this -> t
                           end =
                      struct
                        type t = [ `Date ] intf
                        let rec t_of_js : Ojs.t -> t = Obj.magic
                        and t_to_js : t -> Ojs.t = Obj.magic
                        type t_0 = t
                        let rec t_0_of_js : Ojs.t -> t_0 =
                          fun (x1782 : Ojs.t) -> t_of_js x1782
                        and t_0_to_js : t_0 -> Ojs.t =
                          fun (x1781 : t) -> t_to_js x1781
                        type tags = [ `Date ]
                        type tags_0 = tags
                        type 'tags this =
                          'tags intf constraint 'tags = [> `Date ]
                        let rec this_of_js :
                          'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
                          fun (type __tags) ->
                          fun (__tags_of_js : Ojs.t -> __tags) ->
                            fun (x1785 : Ojs.t) ->
                              intf_of_js __tags_of_js x1785
                        and this_to_js :
                          'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
                          fun (type __tags) ->
                          fun (__tags_to_js : __tags -> Ojs.t) ->
                            fun (x1783 : __tags intf) ->
                              intf_to_js __tags_to_js x1783
                        let (toLocaleString :
                          'tags this ->
                            ?locales:string list or_string ->
                              ?options:Intl.DateTimeFormatOptions.t ->
                                unit -> string)
                          =
                          fun (x1794 : 'tags this) ->
                            fun
                              ?locales:(x1787 : string list or_string option)
                              ->
                              fun
                                ?options:(x1788 :
                                           Intl.DateTimeFormatOptions.t
                                             option)
                                ->
                                fun () ->
                                  Ojs.string_of_js
                                    (let x1796 = this_to_js Obj.magic x1794 in
                                     Ojs.call
                                       (Ojs.get_prop_ascii x1796
                                          "toLocaleString") "apply"
                                       [|x1796;((let x1789 =
                                                   Ojs.new_obj
                                                     (Ojs.get_prop_ascii
                                                        Ojs.global "Array")
                                                     [||] in
                                                 (match x1787 with
                                                  | Some x1791 ->
                                                      ignore
                                                        (Ojs.call x1789
                                                           "push"
                                                           [|(or_string_to_js
                                                                (fun
                                                                   (x1792 :
                                                                    string
                                                                    list)
                                                                   ->
                                                                   Ojs.list_to_js
                                                                    Ojs.string_to_js
                                                                    x1792)
                                                                x1791)|])
                                                  | None -> ());
                                                 (match x1788 with
                                                  | Some x1790 ->
                                                      ignore
                                                        (Ojs.call x1789
                                                           "push"
                                                           [|(Intl.DateTimeFormatOptions.t_to_js
                                                                x1790)|])
                                                  | None -> ());
                                                 x1789))|])
                        let (toLocaleDateString :
                          'tags this ->
                            ?locales:string list or_string ->
                              ?options:Intl.DateTimeFormatOptions.t ->
                                unit -> string)
                          =
                          fun (x1804 : 'tags this) ->
                            fun
                              ?locales:(x1797 : string list or_string option)
                              ->
                              fun
                                ?options:(x1798 :
                                           Intl.DateTimeFormatOptions.t
                                             option)
                                ->
                                fun () ->
                                  Ojs.string_of_js
                                    (let x1806 = this_to_js Obj.magic x1804 in
                                     Ojs.call
                                       (Ojs.get_prop_ascii x1806
                                          "toLocaleDateString") "apply"
                                       [|x1806;((let x1799 =
                                                   Ojs.new_obj
                                                     (Ojs.get_prop_ascii
                                                        Ojs.global "Array")
                                                     [||] in
                                                 (match x1797 with
                                                  | Some x1801 ->
                                                      ignore
                                                        (Ojs.call x1799
                                                           "push"
                                                           [|(or_string_to_js
                                                                (fun
                                                                   (x1802 :
                                                                    string
                                                                    list)
                                                                   ->
                                                                   Ojs.list_to_js
                                                                    Ojs.string_to_js
                                                                    x1802)
                                                                x1801)|])
                                                  | None -> ());
                                                 (match x1798 with
                                                  | Some x1800 ->
                                                      ignore
                                                        (Ojs.call x1799
                                                           "push"
                                                           [|(Intl.DateTimeFormatOptions.t_to_js
                                                                x1800)|])
                                                  | None -> ());
                                                 x1799))|])
                        let (toLocaleTimeString :
                          'tags this ->
                            ?locales:string list or_string ->
                              ?options:Intl.DateTimeFormatOptions.t ->
                                unit -> string)
                          =
                          fun (x1814 : 'tags this) ->
                            fun
                              ?locales:(x1807 : string list or_string option)
                              ->
                              fun
                                ?options:(x1808 :
                                           Intl.DateTimeFormatOptions.t
                                             option)
                                ->
                                fun () ->
                                  Ojs.string_of_js
                                    (let x1816 = this_to_js Obj.magic x1814 in
                                     Ojs.call
                                       (Ojs.get_prop_ascii x1816
                                          "toLocaleTimeString") "apply"
                                       [|x1816;((let x1809 =
                                                   Ojs.new_obj
                                                     (Ojs.get_prop_ascii
                                                        Ojs.global "Array")
                                                     [||] in
                                                 (match x1807 with
                                                  | Some x1811 ->
                                                      ignore
                                                        (Ojs.call x1809
                                                           "push"
                                                           [|(or_string_to_js
                                                                (fun
                                                                   (x1812 :
                                                                    string
                                                                    list)
                                                                   ->
                                                                   Ojs.list_to_js
                                                                    Ojs.string_to_js
                                                                    x1812)
                                                                x1811)|])
                                                  | None -> ());
                                                 (match x1808 with
                                                  | Some x1810 ->
                                                      ignore
                                                        (Ojs.call x1809
                                                           "push"
                                                           [|(Intl.DateTimeFormatOptions.t_to_js
                                                                x1810)|])
                                                  | None -> ());
                                                 x1809))|])
                        let (toString : 'tags this -> string) =
                          fun (x1817 : 'tags this) ->
                            Ojs.string_of_js
                              (Ojs.call (this_to_js Obj.magic x1817)
                                 "toString" [||])
                        let (toDateString : 'tags this -> string) =
                          fun (x1819 : 'tags this) ->
                            Ojs.string_of_js
                              (Ojs.call (this_to_js Obj.magic x1819)
                                 "toDateString" [||])
                        let (toTimeString : 'tags this -> string) =
                          fun (x1821 : 'tags this) ->
                            Ojs.string_of_js
                              (Ojs.call (this_to_js Obj.magic x1821)
                                 "toTimeString" [||])
                        let (toLocaleString' : 'tags this -> string) =
                          fun (x1823 : 'tags this) ->
                            Ojs.string_of_js
                              (Ojs.call (this_to_js Obj.magic x1823)
                                 "toLocaleString" [||])
                        let (toLocaleDateString' : 'tags this -> string) =
                          fun (x1825 : 'tags this) ->
                            Ojs.string_of_js
                              (Ojs.call (this_to_js Obj.magic x1825)
                                 "toLocaleDateString" [||])
                        let (toLocaleTimeString' : 'tags this -> string) =
                          fun (x1827 : 'tags this) ->
                            Ojs.string_of_js
                              (Ojs.call (this_to_js Obj.magic x1827)
                                 "toLocaleTimeString" [||])
                        let (valueOf : 'tags this -> float) =
                          fun (x1829 : 'tags this) ->
                            Ojs.float_of_js
                              (Ojs.call (this_to_js Obj.magic x1829)
                                 "valueOf" [||])
                        let (getTime : 'tags this -> float) =
                          fun (x1831 : 'tags this) ->
                            Ojs.float_of_js
                              (Ojs.call (this_to_js Obj.magic x1831)
                                 "getTime" [||])
                        let (getFullYear : 'tags this -> float) =
                          fun (x1833 : 'tags this) ->
                            Ojs.float_of_js
                              (Ojs.call (this_to_js Obj.magic x1833)
                                 "getFullYear" [||])
                        let (getUTCFullYear : 'tags this -> float) =
                          fun (x1835 : 'tags this) ->
                            Ojs.float_of_js
                              (Ojs.call (this_to_js Obj.magic x1835)
                                 "getUTCFullYear" [||])
                        let (getMonth : 'tags this -> float) =
                          fun (x1837 : 'tags this) ->
                            Ojs.float_of_js
                              (Ojs.call (this_to_js Obj.magic x1837)
                                 "getMonth" [||])
                        let (getUTCMonth : 'tags this -> float) =
                          fun (x1839 : 'tags this) ->
                            Ojs.float_of_js
                              (Ojs.call (this_to_js Obj.magic x1839)
                                 "getUTCMonth" [||])
                        let (getDate : 'tags this -> float) =
                          fun (x1841 : 'tags this) ->
                            Ojs.float_of_js
                              (Ojs.call (this_to_js Obj.magic x1841)
                                 "getDate" [||])
                        let (getUTCDate : 'tags this -> float) =
                          fun (x1843 : 'tags this) ->
                            Ojs.float_of_js
                              (Ojs.call (this_to_js Obj.magic x1843)
                                 "getUTCDate" [||])
                        let (getDay : 'tags this -> float) =
                          fun (x1845 : 'tags this) ->
                            Ojs.float_of_js
                              (Ojs.call (this_to_js Obj.magic x1845) "getDay"
                                 [||])
                        let (getUTCDay : 'tags this -> float) =
                          fun (x1847 : 'tags this) ->
                            Ojs.float_of_js
                              (Ojs.call (this_to_js Obj.magic x1847)
                                 "getUTCDay" [||])
                        let (getHours : 'tags this -> float) =
                          fun (x1849 : 'tags this) ->
                            Ojs.float_of_js
                              (Ojs.call (this_to_js Obj.magic x1849)
                                 "getHours" [||])
                        let (getUTCHours : 'tags this -> float) =
                          fun (x1851 : 'tags this) ->
                            Ojs.float_of_js
                              (Ojs.call (this_to_js Obj.magic x1851)
                                 "getUTCHours" [||])
                        let (getMinutes : 'tags this -> float) =
                          fun (x1853 : 'tags this) ->
                            Ojs.float_of_js
                              (Ojs.call (this_to_js Obj.magic x1853)
                                 "getMinutes" [||])
                        let (getUTCMinutes : 'tags this -> float) =
                          fun (x1855 : 'tags this) ->
                            Ojs.float_of_js
                              (Ojs.call (this_to_js Obj.magic x1855)
                                 "getUTCMinutes" [||])
                        let (getSeconds : 'tags this -> float) =
                          fun (x1857 : 'tags this) ->
                            Ojs.float_of_js
                              (Ojs.call (this_to_js Obj.magic x1857)
                                 "getSeconds" [||])
                        let (getUTCSeconds : 'tags this -> float) =
                          fun (x1859 : 'tags this) ->
                            Ojs.float_of_js
                              (Ojs.call (this_to_js Obj.magic x1859)
                                 "getUTCSeconds" [||])
                        let (getMilliseconds : 'tags this -> float) =
                          fun (x1861 : 'tags this) ->
                            Ojs.float_of_js
                              (Ojs.call (this_to_js Obj.magic x1861)
                                 "getMilliseconds" [||])
                        let (getUTCMilliseconds : 'tags this -> float) =
                          fun (x1863 : 'tags this) ->
                            Ojs.float_of_js
                              (Ojs.call (this_to_js Obj.magic x1863)
                                 "getUTCMilliseconds" [||])
                        let (getTimezoneOffset : 'tags this -> float) =
                          fun (x1865 : 'tags this) ->
                            Ojs.float_of_js
                              (Ojs.call (this_to_js Obj.magic x1865)
                                 "getTimezoneOffset" [||])
                        let (setTime : 'tags this -> time:float -> float) =
                          fun (x1868 : 'tags this) ->
                            fun ~time:(x1867 : float) ->
                              Ojs.float_of_js
                                (Ojs.call (this_to_js Obj.magic x1868)
                                   "setTime" [|(Ojs.float_to_js x1867)|])
                        let (setMilliseconds :
                          'tags this -> ms:float -> float) =
                          fun (x1871 : 'tags this) ->
                            fun ~ms:(x1870 : float) ->
                              Ojs.float_of_js
                                (Ojs.call (this_to_js Obj.magic x1871)
                                   "setMilliseconds"
                                   [|(Ojs.float_to_js x1870)|])
                        let (setUTCMilliseconds :
                          'tags this -> ms:float -> float) =
                          fun (x1874 : 'tags this) ->
                            fun ~ms:(x1873 : float) ->
                              Ojs.float_of_js
                                (Ojs.call (this_to_js Obj.magic x1874)
                                   "setUTCMilliseconds"
                                   [|(Ojs.float_to_js x1873)|])
                        let (setSeconds :
                          'tags this ->
                            sec:float -> ?ms:float -> unit -> float)
                          =
                          fun (x1880 : 'tags this) ->
                            fun ~sec:(x1876 : float) ->
                              fun ?ms:(x1877 : float option) ->
                                fun () ->
                                  Ojs.float_of_js
                                    (let x1882 = this_to_js Obj.magic x1880 in
                                     Ojs.call
                                       (Ojs.get_prop_ascii x1882 "setSeconds")
                                       "apply"
                                       [|x1882;((let x1878 =
                                                   Ojs.new_obj
                                                     (Ojs.get_prop_ascii
                                                        Ojs.global "Array")
                                                     [||] in
                                                 ignore
                                                   (Ojs.call x1878 "push"
                                                      [|(Ojs.float_to_js
                                                           x1876)|]);
                                                 (match x1877 with
                                                  | Some x1879 ->
                                                      ignore
                                                        (Ojs.call x1878
                                                           "push"
                                                           [|(Ojs.float_to_js
                                                                x1879)|])
                                                  | None -> ());
                                                 x1878))|])
                        let (setUTCSeconds :
                          'tags this ->
                            sec:float -> ?ms:float -> unit -> float)
                          =
                          fun (x1887 : 'tags this) ->
                            fun ~sec:(x1883 : float) ->
                              fun ?ms:(x1884 : float option) ->
                                fun () ->
                                  Ojs.float_of_js
                                    (let x1889 = this_to_js Obj.magic x1887 in
                                     Ojs.call
                                       (Ojs.get_prop_ascii x1889
                                          "setUTCSeconds") "apply"
                                       [|x1889;((let x1885 =
                                                   Ojs.new_obj
                                                     (Ojs.get_prop_ascii
                                                        Ojs.global "Array")
                                                     [||] in
                                                 ignore
                                                   (Ojs.call x1885 "push"
                                                      [|(Ojs.float_to_js
                                                           x1883)|]);
                                                 (match x1884 with
                                                  | Some x1886 ->
                                                      ignore
                                                        (Ojs.call x1885
                                                           "push"
                                                           [|(Ojs.float_to_js
                                                                x1886)|])
                                                  | None -> ());
                                                 x1885))|])
                        let (setMinutes :
                          'tags this ->
                            min:float ->
                              ?sec:float -> ?ms:float -> unit -> float)
                          =
                          fun (x1896 : 'tags this) ->
                            fun ~min:(x1890 : float) ->
                              fun ?sec:(x1891 : float option) ->
                                fun ?ms:(x1892 : float option) ->
                                  fun () ->
                                    Ojs.float_of_js
                                      (let x1898 = this_to_js Obj.magic x1896 in
                                       Ojs.call
                                         (Ojs.get_prop_ascii x1898
                                            "setMinutes") "apply"
                                         [|x1898;((let x1893 =
                                                     Ojs.new_obj
                                                       (Ojs.get_prop_ascii
                                                          Ojs.global "Array")
                                                       [||] in
                                                   ignore
                                                     (Ojs.call x1893 "push"
                                                        [|(Ojs.float_to_js
                                                             x1890)|]);
                                                   (match x1891 with
                                                    | Some x1895 ->
                                                        ignore
                                                          (Ojs.call x1893
                                                             "push"
                                                             [|(Ojs.float_to_js
                                                                  x1895)|])
                                                    | None -> ());
                                                   (match x1892 with
                                                    | Some x1894 ->
                                                        ignore
                                                          (Ojs.call x1893
                                                             "push"
                                                             [|(Ojs.float_to_js
                                                                  x1894)|])
                                                    | None -> ());
                                                   x1893))|])
                        let (setUTCMinutes :
                          'tags this ->
                            min:float ->
                              ?sec:float -> ?ms:float -> unit -> float)
                          =
                          fun (x1905 : 'tags this) ->
                            fun ~min:(x1899 : float) ->
                              fun ?sec:(x1900 : float option) ->
                                fun ?ms:(x1901 : float option) ->
                                  fun () ->
                                    Ojs.float_of_js
                                      (let x1907 = this_to_js Obj.magic x1905 in
                                       Ojs.call
                                         (Ojs.get_prop_ascii x1907
                                            "setUTCMinutes") "apply"
                                         [|x1907;((let x1902 =
                                                     Ojs.new_obj
                                                       (Ojs.get_prop_ascii
                                                          Ojs.global "Array")
                                                       [||] in
                                                   ignore
                                                     (Ojs.call x1902 "push"
                                                        [|(Ojs.float_to_js
                                                             x1899)|]);
                                                   (match x1900 with
                                                    | Some x1904 ->
                                                        ignore
                                                          (Ojs.call x1902
                                                             "push"
                                                             [|(Ojs.float_to_js
                                                                  x1904)|])
                                                    | None -> ());
                                                   (match x1901 with
                                                    | Some x1903 ->
                                                        ignore
                                                          (Ojs.call x1902
                                                             "push"
                                                             [|(Ojs.float_to_js
                                                                  x1903)|])
                                                    | None -> ());
                                                   x1902))|])
                        let (setHours :
                          'tags this ->
                            hours:float ->
                              ?min:float ->
                                ?sec:float -> ?ms:float -> unit -> float)
                          =
                          fun (x1916 : 'tags this) ->
                            fun ~hours:(x1908 : float) ->
                              fun ?min:(x1909 : float option) ->
                                fun ?sec:(x1910 : float option) ->
                                  fun ?ms:(x1911 : float option) ->
                                    fun () ->
                                      Ojs.float_of_js
                                        (let x1918 =
                                           this_to_js Obj.magic x1916 in
                                         Ojs.call
                                           (Ojs.get_prop_ascii x1918
                                              "setHours") "apply"
                                           [|x1918;((let x1912 =
                                                       Ojs.new_obj
                                                         (Ojs.get_prop_ascii
                                                            Ojs.global
                                                            "Array") 
                                                         [||] in
                                                     ignore
                                                       (Ojs.call x1912 "push"
                                                          [|(Ojs.float_to_js
                                                               x1908)|]);
                                                     (match x1909 with
                                                      | Some x1915 ->
                                                          ignore
                                                            (Ojs.call x1912
                                                               "push"
                                                               [|(Ojs.float_to_js
                                                                    x1915)|])
                                                      | None -> ());
                                                     (match x1910 with
                                                      | Some x1914 ->
                                                          ignore
                                                            (Ojs.call x1912
                                                               "push"
                                                               [|(Ojs.float_to_js
                                                                    x1914)|])
                                                      | None -> ());
                                                     (match x1911 with
                                                      | Some x1913 ->
                                                          ignore
                                                            (Ojs.call x1912
                                                               "push"
                                                               [|(Ojs.float_to_js
                                                                    x1913)|])
                                                      | None -> ());
                                                     x1912))|])
                        let (setUTCHours :
                          'tags this ->
                            hours:float ->
                              ?min:float ->
                                ?sec:float -> ?ms:float -> unit -> float)
                          =
                          fun (x1927 : 'tags this) ->
                            fun ~hours:(x1919 : float) ->
                              fun ?min:(x1920 : float option) ->
                                fun ?sec:(x1921 : float option) ->
                                  fun ?ms:(x1922 : float option) ->
                                    fun () ->
                                      Ojs.float_of_js
                                        (let x1929 =
                                           this_to_js Obj.magic x1927 in
                                         Ojs.call
                                           (Ojs.get_prop_ascii x1929
                                              "setUTCHours") "apply"
                                           [|x1929;((let x1923 =
                                                       Ojs.new_obj
                                                         (Ojs.get_prop_ascii
                                                            Ojs.global
                                                            "Array") 
                                                         [||] in
                                                     ignore
                                                       (Ojs.call x1923 "push"
                                                          [|(Ojs.float_to_js
                                                               x1919)|]);
                                                     (match x1920 with
                                                      | Some x1926 ->
                                                          ignore
                                                            (Ojs.call x1923
                                                               "push"
                                                               [|(Ojs.float_to_js
                                                                    x1926)|])
                                                      | None -> ());
                                                     (match x1921 with
                                                      | Some x1925 ->
                                                          ignore
                                                            (Ojs.call x1923
                                                               "push"
                                                               [|(Ojs.float_to_js
                                                                    x1925)|])
                                                      | None -> ());
                                                     (match x1922 with
                                                      | Some x1924 ->
                                                          ignore
                                                            (Ojs.call x1923
                                                               "push"
                                                               [|(Ojs.float_to_js
                                                                    x1924)|])
                                                      | None -> ());
                                                     x1923))|])
                        let (setDate : 'tags this -> date:float -> float) =
                          fun (x1931 : 'tags this) ->
                            fun ~date:(x1930 : float) ->
                              Ojs.float_of_js
                                (Ojs.call (this_to_js Obj.magic x1931)
                                   "setDate" [|(Ojs.float_to_js x1930)|])
                        let (setUTCDate : 'tags this -> date:float -> float)
                          =
                          fun (x1934 : 'tags this) ->
                            fun ~date:(x1933 : float) ->
                              Ojs.float_of_js
                                (Ojs.call (this_to_js Obj.magic x1934)
                                   "setUTCDate" [|(Ojs.float_to_js x1933)|])
                        let (setMonth :
                          'tags this ->
                            month:float -> ?date:float -> unit -> float)
                          =
                          fun (x1940 : 'tags this) ->
                            fun ~month:(x1936 : float) ->
                              fun ?date:(x1937 : float option) ->
                                fun () ->
                                  Ojs.float_of_js
                                    (let x1942 = this_to_js Obj.magic x1940 in
                                     Ojs.call
                                       (Ojs.get_prop_ascii x1942 "setMonth")
                                       "apply"
                                       [|x1942;((let x1938 =
                                                   Ojs.new_obj
                                                     (Ojs.get_prop_ascii
                                                        Ojs.global "Array")
                                                     [||] in
                                                 ignore
                                                   (Ojs.call x1938 "push"
                                                      [|(Ojs.float_to_js
                                                           x1936)|]);
                                                 (match x1937 with
                                                  | Some x1939 ->
                                                      ignore
                                                        (Ojs.call x1938
                                                           "push"
                                                           [|(Ojs.float_to_js
                                                                x1939)|])
                                                  | None -> ());
                                                 x1938))|])
                        let (setUTCMonth :
                          'tags this ->
                            month:float -> ?date:float -> unit -> float)
                          =
                          fun (x1947 : 'tags this) ->
                            fun ~month:(x1943 : float) ->
                              fun ?date:(x1944 : float option) ->
                                fun () ->
                                  Ojs.float_of_js
                                    (let x1949 = this_to_js Obj.magic x1947 in
                                     Ojs.call
                                       (Ojs.get_prop_ascii x1949
                                          "setUTCMonth") "apply"
                                       [|x1949;((let x1945 =
                                                   Ojs.new_obj
                                                     (Ojs.get_prop_ascii
                                                        Ojs.global "Array")
                                                     [||] in
                                                 ignore
                                                   (Ojs.call x1945 "push"
                                                      [|(Ojs.float_to_js
                                                           x1943)|]);
                                                 (match x1944 with
                                                  | Some x1946 ->
                                                      ignore
                                                        (Ojs.call x1945
                                                           "push"
                                                           [|(Ojs.float_to_js
                                                                x1946)|])
                                                  | None -> ());
                                                 x1945))|])
                        let (setFullYear :
                          'tags this ->
                            year:float ->
                              ?month:float -> ?date:float -> unit -> float)
                          =
                          fun (x1956 : 'tags this) ->
                            fun ~year:(x1950 : float) ->
                              fun ?month:(x1951 : float option) ->
                                fun ?date:(x1952 : float option) ->
                                  fun () ->
                                    Ojs.float_of_js
                                      (let x1958 = this_to_js Obj.magic x1956 in
                                       Ojs.call
                                         (Ojs.get_prop_ascii x1958
                                            "setFullYear") "apply"
                                         [|x1958;((let x1953 =
                                                     Ojs.new_obj
                                                       (Ojs.get_prop_ascii
                                                          Ojs.global "Array")
                                                       [||] in
                                                   ignore
                                                     (Ojs.call x1953 "push"
                                                        [|(Ojs.float_to_js
                                                             x1950)|]);
                                                   (match x1951 with
                                                    | Some x1955 ->
                                                        ignore
                                                          (Ojs.call x1953
                                                             "push"
                                                             [|(Ojs.float_to_js
                                                                  x1955)|])
                                                    | None -> ());
                                                   (match x1952 with
                                                    | Some x1954 ->
                                                        ignore
                                                          (Ojs.call x1953
                                                             "push"
                                                             [|(Ojs.float_to_js
                                                                  x1954)|])
                                                    | None -> ());
                                                   x1953))|])
                        let (setUTCFullYear :
                          'tags this ->
                            year:float ->
                              ?month:float -> ?date:float -> unit -> float)
                          =
                          fun (x1965 : 'tags this) ->
                            fun ~year:(x1959 : float) ->
                              fun ?month:(x1960 : float option) ->
                                fun ?date:(x1961 : float option) ->
                                  fun () ->
                                    Ojs.float_of_js
                                      (let x1967 = this_to_js Obj.magic x1965 in
                                       Ojs.call
                                         (Ojs.get_prop_ascii x1967
                                            "setUTCFullYear") "apply"
                                         [|x1967;((let x1962 =
                                                     Ojs.new_obj
                                                       (Ojs.get_prop_ascii
                                                          Ojs.global "Array")
                                                       [||] in
                                                   ignore
                                                     (Ojs.call x1962 "push"
                                                        [|(Ojs.float_to_js
                                                             x1959)|]);
                                                   (match x1960 with
                                                    | Some x1964 ->
                                                        ignore
                                                          (Ojs.call x1962
                                                             "push"
                                                             [|(Ojs.float_to_js
                                                                  x1964)|])
                                                    | None -> ());
                                                   (match x1961 with
                                                    | Some x1963 ->
                                                        ignore
                                                          (Ojs.call x1962
                                                             "push"
                                                             [|(Ojs.float_to_js
                                                                  x1963)|])
                                                    | None -> ());
                                                   x1962))|])
                        let (toUTCString : 'tags this -> string) =
                          fun (x1968 : 'tags this) ->
                            Ojs.string_of_js
                              (Ojs.call (this_to_js Obj.magic x1968)
                                 "toUTCString" [||])
                        let (toISOString : 'tags this -> string) =
                          fun (x1970 : 'tags this) ->
                            Ojs.string_of_js
                              (Ojs.call (this_to_js Obj.magic x1970)
                                 "toISOString" [||])
                        let (toJSON :
                          'tags this -> ?key:any -> unit -> string) =
                          fun (x1975 : 'tags this) ->
                            fun ?key:(x1972 : any option) ->
                              fun () ->
                                Ojs.string_of_js
                                  (let x1977 = this_to_js Obj.magic x1975 in
                                   Ojs.call
                                     (Ojs.get_prop_ascii x1977 "toJSON")
                                     "apply"
                                     [|x1977;((let x1973 =
                                                 Ojs.new_obj
                                                   (Ojs.get_prop_ascii
                                                      Ojs.global "Array")
                                                   [||] in
                                               (match x1972 with
                                                | Some x1974 ->
                                                    ignore
                                                      (Ojs.call x1973 "push"
                                                         [|(any_to_js x1974)|])
                                                | None -> ());
                                               x1973))|])
                        let (create : t or_string or_number -> t) =
                          fun (x1978 : t or_string or_number) ->
                            t_of_js
                              (Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Date")
                                 [|(or_number_to_js
                                      (fun (x1979 : t or_string) ->
                                         or_string_to_js t_to_js x1979) x1978)|])
                        let (create' : unit -> t) =
                          fun () ->
                            t_of_js
                              (Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Date") 
                                 [||])
                        let (create'' : string or_number -> t) =
                          fun (x1981 : string or_number) ->
                            t_of_js
                              (Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Date")
                                 [|(or_number_to_js Ojs.string_to_js x1981)|])
                        let (create''' :
                          year:float ->
                            month:float ->
                              ?date:float ->
                                ?hours:float ->
                                  ?minutes:float ->
                                    ?seconds:float -> ?ms:float -> unit -> t)
                          =
                          fun ~year:(x1983 : float) ->
                            fun ~month:(x1984 : float) ->
                              fun ?date:(x1985 : float option) ->
                                fun ?hours:(x1986 : float option) ->
                                  fun ?minutes:(x1987 : float option) ->
                                    fun ?seconds:(x1988 : float option) ->
                                      fun ?ms:(x1989 : float option) ->
                                        fun () ->
                                          t_of_js
                                            (Ojs.new_obj_arr
                                               (Ojs.get_prop_ascii Ojs.global
                                                  "Date")
                                               (let x1990 =
                                                  Ojs.new_obj
                                                    (Ojs.get_prop_ascii
                                                       Ojs.global "Array")
                                                    [||] in
                                                ignore
                                                  (Ojs.call x1990 "push"
                                                     [|(Ojs.float_to_js x1983)|]);
                                                ignore
                                                  (Ojs.call x1990 "push"
                                                     [|(Ojs.float_to_js x1984)|]);
                                                (match x1985 with
                                                 | Some x1995 ->
                                                     ignore
                                                       (Ojs.call x1990 "push"
                                                          [|(Ojs.float_to_js
                                                               x1995)|])
                                                 | None -> ());
                                                (match x1986 with
                                                 | Some x1994 ->
                                                     ignore
                                                       (Ojs.call x1990 "push"
                                                          [|(Ojs.float_to_js
                                                               x1994)|])
                                                 | None -> ());
                                                (match x1987 with
                                                 | Some x1993 ->
                                                     ignore
                                                       (Ojs.call x1990 "push"
                                                          [|(Ojs.float_to_js
                                                               x1993)|])
                                                 | None -> ());
                                                (match x1988 with
                                                 | Some x1992 ->
                                                     ignore
                                                       (Ojs.call x1990 "push"
                                                          [|(Ojs.float_to_js
                                                               x1992)|])
                                                 | None -> ());
                                                (match x1989 with
                                                 | Some x1991 ->
                                                     ignore
                                                       (Ojs.call x1990 "push"
                                                          [|(Ojs.float_to_js
                                                               x1991)|])
                                                 | None -> ());
                                                x1990))
                        let (invoke : unit -> string) =
                          fun () ->
                            Ojs.string_of_js
                              (Ojs.apply
                                 (Ojs.get_prop_ascii Ojs.global "Date") 
                                 [||])
                        let (prototype : unit -> t) =
                          fun () ->
                            t_of_js
                              (Ojs.get_prop_ascii
                                 (Ojs.get_prop_ascii Ojs.global "Date")
                                 "prototype")
                        let (parse : string -> float) =
                          fun (x1996 : string) ->
                            Ojs.float_of_js
                              (Ojs.call
                                 (Ojs.get_prop_ascii Ojs.global "Date")
                                 "parse" [|(Ojs.string_to_js x1996)|])
                        let (utc :
                          year:float ->
                            month:float ->
                              ?date:float ->
                                ?hours:float ->
                                  ?minutes:float ->
                                    ?seconds:float ->
                                      ?ms:float -> unit -> float)
                          =
                          fun ~year:(x1997 : float) ->
                            fun ~month:(x1998 : float) ->
                              fun ?date:(x1999 : float option) ->
                                fun ?hours:(x2000 : float option) ->
                                  fun ?minutes:(x2001 : float option) ->
                                    fun ?seconds:(x2002 : float option) ->
                                      fun ?ms:(x2003 : float option) ->
                                        fun () ->
                                          Ojs.float_of_js
                                            (let x2010 =
                                               Ojs.get_prop_ascii Ojs.global
                                                 "Date" in
                                             Ojs.call
                                               (Ojs.get_prop_ascii x2010
                                                  "UTC") "apply"
                                               [|x2010;((let x2004 =
                                                           Ojs.new_obj
                                                             (Ojs.get_prop_ascii
                                                                Ojs.global
                                                                "Array") 
                                                             [||] in
                                                         ignore
                                                           (Ojs.call x2004
                                                              "push"
                                                              [|(Ojs.float_to_js
                                                                   x1997)|]);
                                                         ignore
                                                           (Ojs.call x2004
                                                              "push"
                                                              [|(Ojs.float_to_js
                                                                   x1998)|]);
                                                         (match x1999 with
                                                          | Some x2009 ->
                                                              ignore
                                                                (Ojs.call
                                                                   x2004
                                                                   "push"
                                                                   [|(
                                                                    Ojs.float_to_js
                                                                    x2009)|])
                                                          | None -> ());
                                                         (match x2000 with
                                                          | Some x2008 ->
                                                              ignore
                                                                (Ojs.call
                                                                   x2004
                                                                   "push"
                                                                   [|(
                                                                    Ojs.float_to_js
                                                                    x2008)|])
                                                          | None -> ());
                                                         (match x2001 with
                                                          | Some x2007 ->
                                                              ignore
                                                                (Ojs.call
                                                                   x2004
                                                                   "push"
                                                                   [|(
                                                                    Ojs.float_to_js
                                                                    x2007)|])
                                                          | None -> ());
                                                         (match x2002 with
                                                          | Some x2006 ->
                                                              ignore
                                                                (Ojs.call
                                                                   x2004
                                                                   "push"
                                                                   [|(
                                                                    Ojs.float_to_js
                                                                    x2006)|])
                                                          | None -> ());
                                                         (match x2003 with
                                                          | Some x2005 ->
                                                              ignore
                                                                (Ojs.call
                                                                   x2004
                                                                   "push"
                                                                   [|(
                                                                    Ojs.float_to_js
                                                                    x2005)|])
                                                          | None -> ());
                                                         x2004))|])
                        let (now : unit -> float) =
                          fun () ->
                            Ojs.float_of_js
                              (Ojs.call
                                 (Ojs.get_prop_ascii Ojs.global "Date") "now"
                                 [||])
                        let cast_from = Obj.magic
                      end and
                           Intl:sig
                                  module UnicodeBCP47LocaleIdentifier :
                                  sig
                                    type t = string
                                    type t_0 = t
                                    val t_to_js : t -> Ojs.t
                                    val t_of_js : Ojs.t -> t
                                    val t_0_to_js : t_0 -> Ojs.t
                                    val t_0_of_js : Ojs.t -> t_0
                                  end
                                  module RelativeTimeFormatStyle :
                                  sig
                                    type t =
                                      [ `L_s51_long  | `L_s61_narrow 
                                      | `L_s76_short ]
                                    type t_0 = t
                                    val t_to_js : t -> Ojs.t
                                    val t_of_js : Ojs.t -> t
                                    val t_0_to_js : t_0 -> Ojs.t
                                    val t_0_of_js : Ojs.t -> t_0
                                  end
                                  module RelativeTimeFormatNumeric :
                                  sig
                                    type t = [ `L_s21_always  | `L_s22_auto ]
                                    type t_0 = t
                                    val t_to_js : t -> Ojs.t
                                    val t_of_js : Ojs.t -> t
                                    val t_0_to_js : t_0 -> Ojs.t
                                    val t_0_of_js : Ojs.t -> t_0
                                  end
                                  module ResolvedRelativeTimeFormatOptions :
                                  sig
                                    type t =
                                      [
                                        `Intl_ResolvedRelativeTimeFormatOptions
                                          ]
                                        intf
                                    type t_0 = t
                                    [@@@js.stop ]
                                    type tags =
                                      [
                                        `Intl_ResolvedRelativeTimeFormatOptions
                                          ]
                                    type tags_0 = tags
                                    [@@@js.start ]
                                    [@@@js.implem
                                      type tags =
                                        [
                                          `Intl_ResolvedRelativeTimeFormatOptions
                                            ]
                                      type tags_0 = tags]
                                    type 'tags this =
                                      'tags intf constraint 'tags =
                                                  [>
                                                    `Intl_ResolvedRelativeTimeFormatOptions
                                                      ]
                                    val t_to_js : t -> Ojs.t
                                    val t_of_js : Ojs.t -> t
                                    val t_0_to_js : t_0 -> Ojs.t
                                    val t_0_of_js : Ojs.t -> t_0
                                    val get_locale :
                                      'tags this ->
                                        UnicodeBCP47LocaleIdentifier.t
                                    val set_locale :
                                      'tags this ->
                                        UnicodeBCP47LocaleIdentifier.t ->
                                          unit
                                    val get_style :
                                      'tags this -> RelativeTimeFormatStyle.t
                                    val set_style :
                                      'tags this ->
                                        RelativeTimeFormatStyle.t -> unit
                                    val get_numeric :
                                      'tags this ->
                                        RelativeTimeFormatNumeric.t
                                    val set_numeric :
                                      'tags this ->
                                        RelativeTimeFormatNumeric.t -> unit
                                    val get_numberingSystem :
                                      'tags this -> string
                                    val set_numberingSystem :
                                      'tags this -> string -> unit
                                    val cast_from : 'tags this -> t
                                  end
                                  module RelativeTimeFormatUnit :
                                  sig
                                    type t =
                                      [ `L_s28_day  | `L_s30_days 
                                      | `L_s46_hour  | `L_s47_hours 
                                      | `L_s56_minute  | `L_s57_minutes 
                                      | `L_s58_month  | `L_s59_months 
                                      | `L_s71_quarter  | `L_s72_quarters 
                                      | `L_s74_second  | `L_s75_seconds 
                                      | `L_s83_week  | `L_s85_weeks 
                                      | `L_s86_year  | `L_s87_years ]
                                    type t_0 = t
                                    val t_to_js : t -> Ojs.t
                                    val t_of_js : Ojs.t -> t
                                    val t_0_to_js : t_0 -> Ojs.t
                                    val t_0_of_js : Ojs.t -> t_0
                                  end
                                  module RelativeTimeFormatPart :
                                  sig
                                    type t =
                                      [ `Intl_RelativeTimeFormatPart ] intf
                                    type t_0 = t
                                    [@@@js.stop ]
                                    type tags =
                                      [ `Intl_RelativeTimeFormatPart ]
                                    type tags_0 = tags
                                    [@@@js.start ]
                                    [@@@js.implem
                                      type tags =
                                        [ `Intl_RelativeTimeFormatPart ]
                                      type tags_0 = tags]
                                    type 'tags this =
                                      'tags intf constraint 'tags =
                                                  [>
                                                    `Intl_RelativeTimeFormatPart
                                                      ]
                                    val t_to_js : t -> Ojs.t
                                    val t_of_js : Ojs.t -> t
                                    val t_0_to_js : t_0 -> Ojs.t
                                    val t_0_of_js : Ojs.t -> t_0
                                    val get_type : 'tags this -> string
                                    val set_type :
                                      'tags this -> string -> unit
                                    val get_value : 'tags this -> string
                                    val set_value :
                                      'tags this -> string -> unit
                                    val get_unit :
                                      'tags this -> RelativeTimeFormatUnit.t
                                    val set_unit :
                                      'tags this ->
                                        RelativeTimeFormatUnit.t -> unit
                                    val cast_from : 'tags this -> t
                                  end
                                  module RelativeTimeFormatLocaleMatcher :
                                  sig
                                    type t =
                                      [ `L_s24_best_fit  | `L_s52_lookup ]
                                    type t_0 = t
                                    val t_to_js : t -> Ojs.t
                                    val t_of_js : Ojs.t -> t
                                    val t_0_to_js : t_0 -> Ojs.t
                                    val t_0_of_js : Ojs.t -> t_0
                                  end
                                  module RelativeTimeFormatOptions :
                                  sig
                                    type t =
                                      [ `Intl_RelativeTimeFormatOptions ]
                                        intf
                                    type t_0 = t
                                    [@@@js.stop ]
                                    type tags =
                                      [ `Intl_RelativeTimeFormatOptions ]
                                    type tags_0 = tags
                                    [@@@js.start ]
                                    [@@@js.implem
                                      type tags =
                                        [ `Intl_RelativeTimeFormatOptions ]
                                      type tags_0 = tags]
                                    type 'tags this =
                                      'tags intf constraint 'tags =
                                                  [>
                                                    `Intl_RelativeTimeFormatOptions
                                                      ]
                                    val t_to_js : t -> Ojs.t
                                    val t_of_js : Ojs.t -> t
                                    val t_0_to_js : t_0 -> Ojs.t
                                    val t_0_of_js : Ojs.t -> t_0
                                    val get_localeMatcher :
                                      'tags this ->
                                        RelativeTimeFormatLocaleMatcher.t
                                    val set_localeMatcher :
                                      'tags this ->
                                        RelativeTimeFormatLocaleMatcher.t ->
                                          unit
                                    val get_numeric :
                                      'tags this ->
                                        RelativeTimeFormatNumeric.t
                                    val set_numeric :
                                      'tags this ->
                                        RelativeTimeFormatNumeric.t -> unit
                                    val get_style :
                                      'tags this -> RelativeTimeFormatStyle.t
                                    val set_style :
                                      'tags this ->
                                        RelativeTimeFormatStyle.t -> unit
                                    val cast_from : 'tags this -> t
                                  end
                                  module RelativeTimeFormat :
                                  sig
                                    type t =
                                      [ `Intl_RelativeTimeFormat ] intf
                                    type t_0 = t
                                    [@@@js.stop ]
                                    type tags = [ `Intl_RelativeTimeFormat ]
                                    type tags_0 = tags
                                    [@@@js.start ]
                                    [@@@js.implem
                                      type tags =
                                        [ `Intl_RelativeTimeFormat ]
                                      type tags_0 = tags]
                                    type 'tags this =
                                      'tags intf constraint 'tags =
                                                  [>
                                                    `Intl_RelativeTimeFormat ]
                                    val t_to_js : t -> Ojs.t
                                    val t_of_js : Ojs.t -> t
                                    val t_0_to_js : t_0 -> Ojs.t
                                    val t_0_of_js : Ojs.t -> t_0
                                    val format :
                                      'tags this ->
                                        value:float ->
                                          unit:RelativeTimeFormatUnit.t ->
                                            string
                                    val formatToParts :
                                      'tags this ->
                                        value:float ->
                                          unit:RelativeTimeFormatUnit.t ->
                                            RelativeTimeFormatPart.t list
                                    val resolvedOptions :
                                      'tags this ->
                                        ResolvedRelativeTimeFormatOptions.t
                                    val cast_from : 'tags this -> t
                                    val create :
                                      ?locales:(UnicodeBCP47LocaleIdentifier.t,
                                        UnicodeBCP47LocaleIdentifier.t)
                                        or_array ->
                                        ?options:RelativeTimeFormatOptions.t
                                          -> unit -> t
                                    val supportedLocalesOf :
                                      ?locales:(UnicodeBCP47LocaleIdentifier.t,
                                        UnicodeBCP47LocaleIdentifier.t)
                                        or_array ->
                                        ?options:RelativeTimeFormatOptions.t
                                          ->
                                          unit ->
                                            UnicodeBCP47LocaleIdentifier.t
                                              list
                                  end
                                  module PluralRuleType :
                                  sig
                                    type t =
                                      [ `L_s25_cardinal  | `L_s67_ordinal ]
                                    type t_0 = t
                                    val t_to_js : t -> Ojs.t
                                    val t_of_js : Ojs.t -> t
                                    val t_0_to_js : t_0 -> Ojs.t
                                    val t_0_of_js : Ojs.t -> t_0
                                  end
                                  module LDMLPluralRule :
                                  sig
                                    type t =
                                      [ `L_s37_few  | `L_s53_many 
                                      | `L_s66_one  | `L_s68_other 
                                      | `L_s80_two  | `L_s88_zero ]
                                    type t_0 = t
                                    val t_to_js : t -> Ojs.t
                                    val t_of_js : Ojs.t -> t
                                    val t_0_to_js : t_0 -> Ojs.t
                                    val t_0_of_js : Ojs.t -> t_0
                                  end
                                  module ResolvedPluralRulesOptions :
                                  sig
                                    type t =
                                      [ `Intl_ResolvedPluralRulesOptions ]
                                        intf
                                    type t_0 = t
                                    [@@@js.stop ]
                                    type tags =
                                      [ `Intl_ResolvedPluralRulesOptions ]
                                    type tags_0 = tags
                                    [@@@js.start ]
                                    [@@@js.implem
                                      type tags =
                                        [ `Intl_ResolvedPluralRulesOptions ]
                                      type tags_0 = tags]
                                    type 'tags this =
                                      'tags intf constraint 'tags =
                                                  [>
                                                    `Intl_ResolvedPluralRulesOptions
                                                      ]
                                    val t_to_js : t -> Ojs.t
                                    val t_of_js : Ojs.t -> t
                                    val t_0_to_js : t_0 -> Ojs.t
                                    val t_0_of_js : Ojs.t -> t_0
                                    val get_locale : 'tags this -> string
                                    val set_locale :
                                      'tags this -> string -> unit
                                    val get_pluralCategories :
                                      'tags this -> LDMLPluralRule.t list
                                    val set_pluralCategories :
                                      'tags this ->
                                        LDMLPluralRule.t list -> unit
                                    val get_type :
                                      'tags this -> PluralRuleType.t
                                    val set_type :
                                      'tags this -> PluralRuleType.t -> unit
                                    val get_minimumIntegerDigits :
                                      'tags this -> float
                                    val set_minimumIntegerDigits :
                                      'tags this -> float -> unit
                                    val get_minimumFractionDigits :
                                      'tags this -> float
                                    val set_minimumFractionDigits :
                                      'tags this -> float -> unit
                                    val get_maximumFractionDigits :
                                      'tags this -> float
                                    val set_maximumFractionDigits :
                                      'tags this -> float -> unit
                                    val get_minimumSignificantDigits :
                                      'tags this -> float
                                    val set_minimumSignificantDigits :
                                      'tags this -> float -> unit
                                    val get_maximumSignificantDigits :
                                      'tags this -> float
                                    val set_maximumSignificantDigits :
                                      'tags this -> float -> unit
                                    val cast_from : 'tags this -> t
                                  end
                                  module PluralRulesOptions :
                                  sig
                                    type t =
                                      [ `Intl_PluralRulesOptions ] intf
                                    type t_0 = t
                                    [@@@js.stop ]
                                    type tags = [ `Intl_PluralRulesOptions ]
                                    type tags_0 = tags
                                    [@@@js.start ]
                                    [@@@js.implem
                                      type tags =
                                        [ `Intl_PluralRulesOptions ]
                                      type tags_0 = tags]
                                    type 'tags this =
                                      'tags intf constraint 'tags =
                                                  [>
                                                    `Intl_PluralRulesOptions ]
                                    val t_to_js : t -> Ojs.t
                                    val t_of_js : Ojs.t -> t
                                    val t_0_to_js : t_0 -> Ojs.t
                                    val t_0_of_js : Ojs.t -> t_0
                                    val get_localeMatcher :
                                      'tags this ->
                                        [ `L_s24_best_fit  | `L_s52_lookup ]
                                    val set_localeMatcher :
                                      'tags this ->
                                        [ `L_s24_best_fit  | `L_s52_lookup ]
                                          -> unit
                                    val get_type :
                                      'tags this -> PluralRuleType.t
                                    val set_type :
                                      'tags this -> PluralRuleType.t -> unit
                                    val get_minimumIntegerDigits :
                                      'tags this -> float
                                    val set_minimumIntegerDigits :
                                      'tags this -> float -> unit
                                    val get_minimumFractionDigits :
                                      'tags this -> float
                                    val set_minimumFractionDigits :
                                      'tags this -> float -> unit
                                    val get_maximumFractionDigits :
                                      'tags this -> float
                                    val set_maximumFractionDigits :
                                      'tags this -> float -> unit
                                    val get_minimumSignificantDigits :
                                      'tags this -> float
                                    val set_minimumSignificantDigits :
                                      'tags this -> float -> unit
                                    val get_maximumSignificantDigits :
                                      'tags this -> float
                                    val set_maximumSignificantDigits :
                                      'tags this -> float -> unit
                                    val cast_from : 'tags this -> t
                                  end
                                  module PluralRules :
                                  sig
                                    type t = [ `Intl_PluralRules ] intf
                                    type t_0 = t
                                    [@@@js.stop ]
                                    type tags = [ `Intl_PluralRules ]
                                    type tags_0 = tags
                                    [@@@js.start ]
                                    [@@@js.implem
                                      type tags = [ `Intl_PluralRules ]
                                      type tags_0 = tags]
                                    type 'tags this =
                                      'tags intf constraint 'tags =
                                                  [> `Intl_PluralRules ]
                                    val t_to_js : t -> Ojs.t
                                    val t_of_js : Ojs.t -> t
                                    val t_0_to_js : t_0 -> Ojs.t
                                    val t_0_of_js : Ojs.t -> t_0
                                    val resolvedOptions :
                                      'tags this ->
                                        ResolvedPluralRulesOptions.t
                                    val select :
                                      'tags this ->
                                        n:float -> LDMLPluralRule.t
                                    val cast_from : 'tags this -> t
                                    val create :
                                      ?locales:string list or_string ->
                                        ?options:PluralRulesOptions.t ->
                                          unit -> t
                                    val invoke :
                                      ?locales:string list or_string ->
                                        ?options:PluralRulesOptions.t ->
                                          unit -> t
                                    val supportedLocalesOf :
                                      locales:string list or_string ->
                                        ?options:PluralRulesOptions.t ->
                                          unit -> string list
                                  end
                                  module ResolvedNumberFormatOptions :
                                  sig
                                    type t =
                                      [ `Intl_ResolvedNumberFormatOptions ]
                                        intf
                                    type t_0 = t
                                    [@@@js.stop ]
                                    type tags =
                                      [ `Intl_ResolvedNumberFormatOptions ]
                                    type tags_0 = tags
                                    [@@@js.start ]
                                    [@@@js.implem
                                      type tags =
                                        [ `Intl_ResolvedNumberFormatOptions ]
                                      type tags_0 = tags]
                                    type 'tags this =
                                      'tags intf constraint 'tags =
                                                  [>
                                                    `Intl_ResolvedNumberFormatOptions
                                                      ]
                                    val t_to_js : t -> Ojs.t
                                    val t_of_js : Ojs.t -> t
                                    val t_0_to_js : t_0 -> Ojs.t
                                    val t_0_of_js : Ojs.t -> t_0
                                    val get_compactDisplay :
                                      'tags this -> string
                                    val set_compactDisplay :
                                      'tags this -> string -> unit
                                    val get_notation : 'tags this -> string
                                    val set_notation :
                                      'tags this -> string -> unit
                                    val get_signDisplay :
                                      'tags this -> string
                                    val set_signDisplay :
                                      'tags this -> string -> unit
                                    val get_unit : 'tags this -> string
                                    val set_unit :
                                      'tags this -> string -> unit
                                    val get_unitDisplay :
                                      'tags this -> string
                                    val set_unitDisplay :
                                      'tags this -> string -> unit
                                    val get_locale : 'tags this -> string
                                    val set_locale :
                                      'tags this -> string -> unit
                                    val get_numberingSystem :
                                      'tags this -> string
                                    val set_numberingSystem :
                                      'tags this -> string -> unit
                                    val get_style : 'tags this -> string
                                    val set_style :
                                      'tags this -> string -> unit
                                    val get_currency : 'tags this -> string
                                    val set_currency :
                                      'tags this -> string -> unit
                                    val get_currencyDisplay :
                                      'tags this -> string
                                    val set_currencyDisplay :
                                      'tags this -> string -> unit
                                    val get_minimumIntegerDigits :
                                      'tags this -> float
                                    val set_minimumIntegerDigits :
                                      'tags this -> float -> unit
                                    val get_minimumFractionDigits :
                                      'tags this -> float
                                    val set_minimumFractionDigits :
                                      'tags this -> float -> unit
                                    val get_maximumFractionDigits :
                                      'tags this -> float
                                    val set_maximumFractionDigits :
                                      'tags this -> float -> unit
                                    val get_minimumSignificantDigits :
                                      'tags this -> float
                                    val set_minimumSignificantDigits :
                                      'tags this -> float -> unit
                                    val get_maximumSignificantDigits :
                                      'tags this -> float
                                    val set_maximumSignificantDigits :
                                      'tags this -> float -> unit
                                    val get_useGrouping : 'tags this -> bool
                                    val set_useGrouping :
                                      'tags this -> bool -> unit
                                    val cast_from : 'tags this -> t
                                  end
                                  module NumberFormatPartTypes :
                                  sig
                                    type t =
                                      [ `L_s26_compact  | `L_s27_currency 
                                      | `L_s31_decimal 
                                      | `L_s34_exponentInteger 
                                      | `L_s35_exponentMinusSign 
                                      | `L_s36_exponentSeparator 
                                      | `L_s38_fraction  | `L_s41_group 
                                      | `L_s48_infinity  | `L_s49_integer 
                                      | `L_s50_literal  | `L_s55_minusSign 
                                      | `L_s60_nan  | `L_s69_percentSign 
                                      | `L_s70_plusSign  | `L_s81_unit 
                                      | `L_s82_unknown ]
                                    type t_0 = t
                                    val t_to_js : t -> Ojs.t
                                    val t_of_js : Ojs.t -> t
                                    val t_0_to_js : t_0 -> Ojs.t
                                    val t_0_of_js : Ojs.t -> t_0
                                  end
                                  module NumberFormatPart :
                                  sig
                                    type t = [ `Intl_NumberFormatPart ] intf
                                    type t_0 = t
                                    [@@@js.stop ]
                                    type tags = [ `Intl_NumberFormatPart ]
                                    type tags_0 = tags
                                    [@@@js.start ]
                                    [@@@js.implem
                                      type tags = [ `Intl_NumberFormatPart ]
                                      type tags_0 = tags]
                                    type 'tags this =
                                      'tags intf constraint 'tags =
                                                  [> `Intl_NumberFormatPart ]
                                    val t_to_js : t -> Ojs.t
                                    val t_of_js : Ojs.t -> t
                                    val t_0_to_js : t_0 -> Ojs.t
                                    val t_0_of_js : Ojs.t -> t_0
                                    val get_type :
                                      'tags this -> NumberFormatPartTypes.t
                                    val set_type :
                                      'tags this ->
                                        NumberFormatPartTypes.t -> unit
                                    val get_value : 'tags this -> string
                                    val set_value :
                                      'tags this -> string -> unit
                                    val cast_from : 'tags this -> t
                                  end
                                  module NumberFormatOptions :
                                  sig
                                    type t =
                                      [ `Intl_NumberFormatOptions ] intf
                                    type t_0 = t
                                    [@@@js.stop ]
                                    type tags = [ `Intl_NumberFormatOptions ]
                                    type tags_0 = tags
                                    [@@@js.start ]
                                    [@@@js.implem
                                      type tags =
                                        [ `Intl_NumberFormatOptions ]
                                      type tags_0 = tags]
                                    type 'tags this =
                                      'tags intf constraint 'tags =
                                                  [>
                                                    `Intl_NumberFormatOptions ]
                                    val t_to_js : t -> Ojs.t
                                    val t_of_js : Ojs.t -> t
                                    val t_0_to_js : t_0 -> Ojs.t
                                    val t_0_of_js : Ojs.t -> t_0
                                    val get_compactDisplay :
                                      'tags this -> string
                                    val set_compactDisplay :
                                      'tags this -> string -> unit
                                    val get_notation : 'tags this -> string
                                    val set_notation :
                                      'tags this -> string -> unit
                                    val get_signDisplay :
                                      'tags this -> string
                                    val set_signDisplay :
                                      'tags this -> string -> unit
                                    val get_unit : 'tags this -> string
                                    val set_unit :
                                      'tags this -> string -> unit
                                    val get_unitDisplay :
                                      'tags this -> string
                                    val set_unitDisplay :
                                      'tags this -> string -> unit
                                    val get_localeMatcher :
                                      'tags this -> string
                                    val set_localeMatcher :
                                      'tags this -> string -> unit
                                    val get_style : 'tags this -> string
                                    val set_style :
                                      'tags this -> string -> unit
                                    val get_currency : 'tags this -> string
                                    val set_currency :
                                      'tags this -> string -> unit
                                    val get_currencyDisplay :
                                      'tags this -> string
                                    val set_currencyDisplay :
                                      'tags this -> string -> unit
                                    val get_currencySign :
                                      'tags this -> string
                                    val set_currencySign :
                                      'tags this -> string -> unit
                                    val get_useGrouping : 'tags this -> bool
                                    val set_useGrouping :
                                      'tags this -> bool -> unit
                                    val get_minimumIntegerDigits :
                                      'tags this -> float
                                    val set_minimumIntegerDigits :
                                      'tags this -> float -> unit
                                    val get_minimumFractionDigits :
                                      'tags this -> float
                                    val set_minimumFractionDigits :
                                      'tags this -> float -> unit
                                    val get_maximumFractionDigits :
                                      'tags this -> float
                                    val set_maximumFractionDigits :
                                      'tags this -> float -> unit
                                    val get_minimumSignificantDigits :
                                      'tags this -> float
                                    val set_minimumSignificantDigits :
                                      'tags this -> float -> unit
                                    val get_maximumSignificantDigits :
                                      'tags this -> float
                                    val set_maximumSignificantDigits :
                                      'tags this -> float -> unit
                                    val cast_from : 'tags this -> t
                                  end
                                  module NumberFormat :
                                  sig
                                    type t = [ `Intl_NumberFormat ] intf
                                    type t_0 = t
                                    [@@@js.stop ]
                                    type tags = [ `Intl_NumberFormat ]
                                    type tags_0 = tags
                                    [@@@js.start ]
                                    [@@@js.implem
                                      type tags = [ `Intl_NumberFormat ]
                                      type tags_0 = tags]
                                    type 'tags this =
                                      'tags intf constraint 'tags =
                                                  [> `Intl_NumberFormat ]
                                    val t_to_js : t -> Ojs.t
                                    val t_of_js : Ojs.t -> t
                                    val t_0_to_js : t_0 -> Ojs.t
                                    val t_0_of_js : Ojs.t -> t_0
                                    val format :
                                      'tags this ->
                                        value:bigint or_number -> string
                                    val resolvedOptions :
                                      'tags this ->
                                        ResolvedNumberFormatOptions.t
                                    val formatToParts :
                                      'tags this ->
                                        ?number:bigint or_number ->
                                          unit -> NumberFormatPart.t list
                                    val format' :
                                      'tags this -> value:float -> string
                                    val resolvedOptions' :
                                      'tags this ->
                                        ResolvedNumberFormatOptions.t
                                    val cast_from : 'tags this -> t
                                    val create :
                                      ?locales:string list or_string ->
                                        ?options:NumberFormatOptions.t ->
                                          unit -> t
                                    val invoke :
                                      ?locales:string list or_string ->
                                        ?options:NumberFormatOptions.t ->
                                          unit -> t
                                    val supportedLocalesOf :
                                      locales:string list or_string ->
                                        ?options:NumberFormatOptions.t ->
                                          unit -> string list
                                  end
                                  module ResolvedDateTimeFormatOptions :
                                  sig
                                    type t =
                                      [ `Intl_ResolvedDateTimeFormatOptions ]
                                        intf
                                    type t_0 = t
                                    [@@@js.stop ]
                                    type tags =
                                      [ `Intl_ResolvedDateTimeFormatOptions ]
                                    type tags_0 = tags
                                    [@@@js.start ]
                                    [@@@js.implem
                                      type tags =
                                        [
                                          `Intl_ResolvedDateTimeFormatOptions ]
                                      type tags_0 = tags]
                                    type 'tags this =
                                      'tags intf constraint 'tags =
                                                  [>
                                                    `Intl_ResolvedDateTimeFormatOptions
                                                      ]
                                    val t_to_js : t -> Ojs.t
                                    val t_of_js : Ojs.t -> t
                                    val t_0_to_js : t_0 -> Ojs.t
                                    val t_0_of_js : Ojs.t -> t_0
                                    val get_locale : 'tags this -> string
                                    val set_locale :
                                      'tags this -> string -> unit
                                    val get_calendar : 'tags this -> string
                                    val set_calendar :
                                      'tags this -> string -> unit
                                    val get_numberingSystem :
                                      'tags this -> string
                                    val set_numberingSystem :
                                      'tags this -> string -> unit
                                    val get_timeZone : 'tags this -> string
                                    val set_timeZone :
                                      'tags this -> string -> unit
                                    val get_hour12 : 'tags this -> bool
                                    val set_hour12 :
                                      'tags this -> bool -> unit
                                    val get_weekday : 'tags this -> string
                                    val set_weekday :
                                      'tags this -> string -> unit
                                    val get_era : 'tags this -> string
                                    val set_era :
                                      'tags this -> string -> unit
                                    val get_year : 'tags this -> string
                                    val set_year :
                                      'tags this -> string -> unit
                                    val get_month : 'tags this -> string
                                    val set_month :
                                      'tags this -> string -> unit
                                    val get_day : 'tags this -> string
                                    val set_day :
                                      'tags this -> string -> unit
                                    val get_hour : 'tags this -> string
                                    val set_hour :
                                      'tags this -> string -> unit
                                    val get_minute : 'tags this -> string
                                    val set_minute :
                                      'tags this -> string -> unit
                                    val get_second : 'tags this -> string
                                    val set_second :
                                      'tags this -> string -> unit
                                    val get_timeZoneName :
                                      'tags this -> string
                                    val set_timeZoneName :
                                      'tags this -> string -> unit
                                    val cast_from : 'tags this -> t
                                  end
                                  module DateTimeFormatPartTypes :
                                  sig
                                    type t =
                                      [ `L_s28_day  | `L_s29_dayPeriod 
                                      | `L_s33_era  | `L_s46_hour 
                                      | `L_s50_literal  | `L_s56_minute 
                                      | `L_s58_month  | `L_s74_second 
                                      | `L_s78_timeZoneName 
                                      | `L_s84_weekday  | `L_s86_year ]
                                    type t_0 = t
                                    val t_to_js : t -> Ojs.t
                                    val t_of_js : Ojs.t -> t
                                    val t_0_to_js : t_0 -> Ojs.t
                                    val t_0_of_js : Ojs.t -> t_0
                                  end
                                  module DateTimeFormatPart :
                                  sig
                                    type t =
                                      [ `Intl_DateTimeFormatPart ] intf
                                    type t_0 = t
                                    [@@@js.stop ]
                                    type tags = [ `Intl_DateTimeFormatPart ]
                                    type tags_0 = tags
                                    [@@@js.start ]
                                    [@@@js.implem
                                      type tags =
                                        [ `Intl_DateTimeFormatPart ]
                                      type tags_0 = tags]
                                    type 'tags this =
                                      'tags intf constraint 'tags =
                                                  [>
                                                    `Intl_DateTimeFormatPart ]
                                    val t_to_js : t -> Ojs.t
                                    val t_of_js : Ojs.t -> t
                                    val t_0_to_js : t_0 -> Ojs.t
                                    val t_0_of_js : Ojs.t -> t_0
                                    val get_type :
                                      'tags this -> DateTimeFormatPartTypes.t
                                    val set_type :
                                      'tags this ->
                                        DateTimeFormatPartTypes.t -> unit
                                    val get_value : 'tags this -> string
                                    val set_value :
                                      'tags this -> string -> unit
                                    val cast_from : 'tags this -> t
                                  end
                                  module DateTimeFormatOptions :
                                  sig
                                    type t =
                                      [ `Intl_DateTimeFormatOptions ] intf
                                    type t_0 = t
                                    [@@@js.stop ]
                                    type tags =
                                      [ `Intl_DateTimeFormatOptions ]
                                    type tags_0 = tags
                                    [@@@js.start ]
                                    [@@@js.implem
                                      type tags =
                                        [ `Intl_DateTimeFormatOptions ]
                                      type tags_0 = tags]
                                    type 'tags this =
                                      'tags intf constraint 'tags =
                                                  [>
                                                    `Intl_DateTimeFormatOptions
                                                      ]
                                    val t_to_js : t -> Ojs.t
                                    val t_of_js : Ojs.t -> t
                                    val t_0_to_js : t_0 -> Ojs.t
                                    val t_0_of_js : Ojs.t -> t_0
                                    val get_dateStyle :
                                      'tags this ->
                                        [ `L_s40_full  | `L_s51_long 
                                        | `L_s54_medium  | `L_s76_short ]
                                    val set_dateStyle :
                                      'tags this ->
                                        [ `L_s40_full  | `L_s51_long 
                                        | `L_s54_medium  | `L_s76_short ] ->
                                          unit
                                    val get_timeStyle :
                                      'tags this ->
                                        [ `L_s40_full  | `L_s51_long 
                                        | `L_s54_medium  | `L_s76_short ]
                                    val set_timeStyle :
                                      'tags this ->
                                        [ `L_s40_full  | `L_s51_long 
                                        | `L_s54_medium  | `L_s76_short ] ->
                                          unit
                                    val get_calendar : 'tags this -> string
                                    val set_calendar :
                                      'tags this -> string -> unit
                                    val get_dayPeriod :
                                      'tags this ->
                                        [ `L_s51_long  | `L_s61_narrow 
                                        | `L_s76_short ]
                                    val set_dayPeriod :
                                      'tags this ->
                                        [ `L_s51_long  | `L_s61_narrow 
                                        | `L_s76_short ] -> unit
                                    val get_numberingSystem :
                                      'tags this -> string
                                    val set_numberingSystem :
                                      'tags this -> string -> unit
                                    val get_hourCycle :
                                      'tags this ->
                                        [ `L_s42_h11  | `L_s43_h12 
                                        | `L_s44_h23  | `L_s45_h24 ]
                                    val set_hourCycle :
                                      'tags this ->
                                        [ `L_s42_h11  | `L_s43_h12 
                                        | `L_s44_h23  | `L_s45_h24 ] -> 
                                          unit
                                    val get_fractionalSecondDigits :
                                      'tags this ->
                                        [ `L_n_0  | `L_n_1  | `L_n_2 
                                        | `L_n_3 ]
                                    val set_fractionalSecondDigits :
                                      'tags this ->
                                        [ `L_n_0  | `L_n_1  | `L_n_2 
                                        | `L_n_3 ] -> unit
                                    val get_localeMatcher :
                                      'tags this ->
                                        [ `L_s24_best_fit  | `L_s52_lookup ]
                                    val set_localeMatcher :
                                      'tags this ->
                                        [ `L_s24_best_fit  | `L_s52_lookup ]
                                          -> unit
                                    val get_weekday :
                                      'tags this ->
                                        [ `L_s51_long  | `L_s61_narrow 
                                        | `L_s76_short ]
                                    val set_weekday :
                                      'tags this ->
                                        [ `L_s51_long  | `L_s61_narrow 
                                        | `L_s76_short ] -> unit
                                    val get_era :
                                      'tags this ->
                                        [ `L_s51_long  | `L_s61_narrow 
                                        | `L_s76_short ]
                                    val set_era :
                                      'tags this ->
                                        [ `L_s51_long  | `L_s61_narrow 
                                        | `L_s76_short ] -> unit
                                    val get_year :
                                      'tags this ->
                                        [ `L_s0_2_digit  | `L_s64_numeric ]
                                    val set_year :
                                      'tags this ->
                                        [ `L_s0_2_digit  | `L_s64_numeric ]
                                          -> unit
                                    val get_month :
                                      'tags this ->
                                        [ `L_s0_2_digit  | `L_s51_long 
                                        | `L_s61_narrow  | `L_s64_numeric 
                                        | `L_s76_short ]
                                    val set_month :
                                      'tags this ->
                                        [ `L_s0_2_digit  | `L_s51_long 
                                        | `L_s61_narrow  | `L_s64_numeric 
                                        | `L_s76_short ] -> unit
                                    val get_day :
                                      'tags this ->
                                        [ `L_s0_2_digit  | `L_s64_numeric ]
                                    val set_day :
                                      'tags this ->
                                        [ `L_s0_2_digit  | `L_s64_numeric ]
                                          -> unit
                                    val get_hour :
                                      'tags this ->
                                        [ `L_s0_2_digit  | `L_s64_numeric ]
                                    val set_hour :
                                      'tags this ->
                                        [ `L_s0_2_digit  | `L_s64_numeric ]
                                          -> unit
                                    val get_minute :
                                      'tags this ->
                                        [ `L_s0_2_digit  | `L_s64_numeric ]
                                    val set_minute :
                                      'tags this ->
                                        [ `L_s0_2_digit  | `L_s64_numeric ]
                                          -> unit
                                    val get_second :
                                      'tags this ->
                                        [ `L_s0_2_digit  | `L_s64_numeric ]
                                    val set_second :
                                      'tags this ->
                                        [ `L_s0_2_digit  | `L_s64_numeric ]
                                          -> unit
                                    val get_timeZoneName :
                                      'tags this ->
                                        [ `L_s51_long  | `L_s76_short ]
                                    val set_timeZoneName :
                                      'tags this ->
                                        [ `L_s51_long  | `L_s76_short ] ->
                                          unit
                                    val get_formatMatcher :
                                      'tags this ->
                                        [ `L_s23_basic  | `L_s24_best_fit ]
                                    val set_formatMatcher :
                                      'tags this ->
                                        [ `L_s23_basic  | `L_s24_best_fit ]
                                          -> unit
                                    val get_hour12 : 'tags this -> bool
                                    val set_hour12 :
                                      'tags this -> bool -> unit
                                    val get_timeZone : 'tags this -> string
                                    val set_timeZone :
                                      'tags this -> string -> unit
                                    val cast_from : 'tags this -> t
                                  end
                                  module DateTimeFormat :
                                  sig
                                    type t = [ `Intl_DateTimeFormat ] intf
                                    type t_0 = t
                                    [@@@js.stop ]
                                    type tags = [ `Intl_DateTimeFormat ]
                                    type tags_0 = tags
                                    [@@@js.start ]
                                    [@@@js.implem
                                      type tags = [ `Intl_DateTimeFormat ]
                                      type tags_0 = tags]
                                    type 'tags this =
                                      'tags intf constraint 'tags =
                                                  [> `Intl_DateTimeFormat ]
                                    val t_to_js : t -> Ojs.t
                                    val t_of_js : Ojs.t -> t
                                    val t_0_to_js : t_0 -> Ojs.t
                                    val t_0_of_js : Ojs.t -> t_0
                                    val formatToParts :
                                      'tags this ->
                                        ?date:Date.t or_number ->
                                          unit -> DateTimeFormatPart.t list
                                    val format :
                                      'tags this ->
                                        ?date:Date.t or_number ->
                                          unit -> string
                                    val resolvedOptions :
                                      'tags this ->
                                        ResolvedDateTimeFormatOptions.t
                                    val cast_from : 'tags this -> t
                                    val create :
                                      ?locales:string list or_string ->
                                        ?options:DateTimeFormatOptions.t ->
                                          unit -> t
                                    val invoke :
                                      ?locales:string list or_string ->
                                        ?options:DateTimeFormatOptions.t ->
                                          unit -> t
                                    val supportedLocalesOf :
                                      locales:string list or_string ->
                                        ?options:DateTimeFormatOptions.t ->
                                          unit -> string list
                                  end
                                  module ResolvedCollatorOptions :
                                  sig
                                    type t =
                                      [ `Intl_ResolvedCollatorOptions ] intf
                                    type t_0 = t
                                    [@@@js.stop ]
                                    type tags =
                                      [ `Intl_ResolvedCollatorOptions ]
                                    type tags_0 = tags
                                    [@@@js.start ]
                                    [@@@js.implem
                                      type tags =
                                        [ `Intl_ResolvedCollatorOptions ]
                                      type tags_0 = tags]
                                    type 'tags this =
                                      'tags intf constraint 'tags =
                                                  [>
                                                    `Intl_ResolvedCollatorOptions
                                                      ]
                                    val t_to_js : t -> Ojs.t
                                    val t_of_js : Ojs.t -> t
                                    val t_0_to_js : t_0 -> Ojs.t
                                    val t_0_of_js : Ojs.t -> t_0
                                    val get_locale : 'tags this -> string
                                    val set_locale :
                                      'tags this -> string -> unit
                                    val get_usage : 'tags this -> string
                                    val set_usage :
                                      'tags this -> string -> unit
                                    val get_sensitivity :
                                      'tags this -> string
                                    val set_sensitivity :
                                      'tags this -> string -> unit
                                    val get_ignorePunctuation :
                                      'tags this -> bool
                                    val set_ignorePunctuation :
                                      'tags this -> bool -> unit
                                    val get_collation : 'tags this -> string
                                    val set_collation :
                                      'tags this -> string -> unit
                                    val get_caseFirst : 'tags this -> string
                                    val set_caseFirst :
                                      'tags this -> string -> unit
                                    val get_numeric : 'tags this -> bool
                                    val set_numeric :
                                      'tags this -> bool -> unit
                                    val cast_from : 'tags this -> t
                                  end
                                  module CollatorOptions :
                                  sig
                                    type t = [ `Intl_CollatorOptions ] intf
                                    type t_0 = t
                                    [@@@js.stop ]
                                    type tags = [ `Intl_CollatorOptions ]
                                    type tags_0 = tags
                                    [@@@js.start ]
                                    [@@@js.implem
                                      type tags = [ `Intl_CollatorOptions ]
                                      type tags_0 = tags]
                                    type 'tags this =
                                      'tags intf constraint 'tags =
                                                  [> `Intl_CollatorOptions ]
                                    val t_to_js : t -> Ojs.t
                                    val t_of_js : Ojs.t -> t
                                    val t_0_to_js : t_0 -> Ojs.t
                                    val t_0_of_js : Ojs.t -> t_0
                                    val get_usage : 'tags this -> string
                                    val set_usage :
                                      'tags this -> string -> unit
                                    val get_localeMatcher :
                                      'tags this -> string
                                    val set_localeMatcher :
                                      'tags this -> string -> unit
                                    val get_numeric : 'tags this -> bool
                                    val set_numeric :
                                      'tags this -> bool -> unit
                                    val get_caseFirst : 'tags this -> string
                                    val set_caseFirst :
                                      'tags this -> string -> unit
                                    val get_sensitivity :
                                      'tags this -> string
                                    val set_sensitivity :
                                      'tags this -> string -> unit
                                    val get_ignorePunctuation :
                                      'tags this -> bool
                                    val set_ignorePunctuation :
                                      'tags this -> bool -> unit
                                    val cast_from : 'tags this -> t
                                  end
                                  module Collator :
                                  sig
                                    type t = [ `Intl_Collator ] intf
                                    type t_0 = t
                                    [@@@js.stop ]
                                    type tags = [ `Intl_Collator ]
                                    type tags_0 = tags
                                    [@@@js.start ]
                                    [@@@js.implem
                                      type tags = [ `Intl_Collator ]
                                      type tags_0 = tags]
                                    type 'tags this =
                                      'tags intf constraint 'tags =
                                                  [> `Intl_Collator ]
                                    val t_to_js : t -> Ojs.t
                                    val t_of_js : Ojs.t -> t
                                    val t_0_to_js : t_0 -> Ojs.t
                                    val t_0_of_js : Ojs.t -> t_0
                                    val compare :
                                      'tags this ->
                                        x:string -> y:string -> float
                                    val resolvedOptions :
                                      'tags this -> ResolvedCollatorOptions.t
                                    val cast_from : 'tags this -> t
                                    val create :
                                      ?locales:string list or_string ->
                                        ?options:CollatorOptions.t ->
                                          unit -> t
                                    val invoke :
                                      ?locales:string list or_string ->
                                        ?options:CollatorOptions.t ->
                                          unit -> t
                                    val supportedLocalesOf :
                                      locales:string list or_string ->
                                        ?options:CollatorOptions.t ->
                                          unit -> string list
                                  end
                                  val pluralRules :
                                    unit -> AnonymousInterface8.t
                                  val collator :
                                    unit -> AnonymousInterface5.t
                                  val numberFormat :
                                    unit -> AnonymousInterface7.t
                                  val dateTimeFormat :
                                    unit -> AnonymousInterface6.t
                                  val relativeTimeFormat :
                                    unit -> AnonymousInterface16.t
                                end =
                           struct
                             module UnicodeBCP47LocaleIdentifier =
                               struct
                                 type t = string
                                 let rec t_of_js : Ojs.t -> t =
                                   fun (x2012 : Ojs.t) ->
                                     Ojs.string_of_js x2012
                                 and t_to_js : t -> Ojs.t =
                                   fun (x2011 : string) ->
                                     Ojs.string_to_js x2011
                                 type t_0 = t
                                 let rec t_0_of_js : Ojs.t -> t_0 =
                                   fun (x2014 : Ojs.t) -> t_of_js x2014
                                 and t_0_to_js : t_0 -> Ojs.t =
                                   fun (x2013 : t) -> t_to_js x2013
                               end
                             module RelativeTimeFormatStyle =
                               struct
                                 type t =
                                   [ `L_s51_long  | `L_s61_narrow 
                                   | `L_s76_short ]
                                 let rec t_of_js : Ojs.t -> t =
                                   fun (x2016 : Ojs.t) ->
                                     let x2017 = x2016 in
                                     match Ojs.string_of_js x2017 with
                                     | "long" -> `L_s51_long
                                     | "narrow" -> `L_s61_narrow
                                     | "short" -> `L_s76_short
                                     | _ -> assert false
                                 and t_to_js : t -> Ojs.t =
                                   fun
                                     (x2015 :
                                       [ `L_s51_long  | `L_s61_narrow 
                                       | `L_s76_short ])
                                     ->
                                     match x2015 with
                                     | `L_s51_long -> Ojs.string_to_js "long"
                                     | `L_s61_narrow ->
                                         Ojs.string_to_js "narrow"
                                     | `L_s76_short ->
                                         Ojs.string_to_js "short"
                                 type t_0 = t
                                 let rec t_0_of_js : Ojs.t -> t_0 =
                                   fun (x2019 : Ojs.t) -> t_of_js x2019
                                 and t_0_to_js : t_0 -> Ojs.t =
                                   fun (x2018 : t) -> t_to_js x2018
                               end
                             module RelativeTimeFormatNumeric =
                               struct
                                 type t = [ `L_s21_always  | `L_s22_auto ]
                                 let rec t_of_js : Ojs.t -> t =
                                   fun (x2021 : Ojs.t) ->
                                     let x2022 = x2021 in
                                     match Ojs.string_of_js x2022 with
                                     | "always" -> `L_s21_always
                                     | "auto" -> `L_s22_auto
                                     | _ -> assert false
                                 and t_to_js : t -> Ojs.t =
                                   fun
                                     (x2020 :
                                       [ `L_s21_always  | `L_s22_auto ])
                                     ->
                                     match x2020 with
                                     | `L_s21_always ->
                                         Ojs.string_to_js "always"
                                     | `L_s22_auto -> Ojs.string_to_js "auto"
                                 type t_0 = t
                                 let rec t_0_of_js : Ojs.t -> t_0 =
                                   fun (x2024 : Ojs.t) -> t_of_js x2024
                                 and t_0_to_js : t_0 -> Ojs.t =
                                   fun (x2023 : t) -> t_to_js x2023
                               end
                             module ResolvedRelativeTimeFormatOptions =
                               struct
                                 type t =
                                   [
                                     `Intl_ResolvedRelativeTimeFormatOptions ]
                                     intf
                                 let rec t_of_js : Ojs.t -> t = Obj.magic
                                 and t_to_js : t -> Ojs.t = Obj.magic
                                 type t_0 = t
                                 let rec t_0_of_js : Ojs.t -> t_0 =
                                   fun (x2026 : Ojs.t) -> t_of_js x2026
                                 and t_0_to_js : t_0 -> Ojs.t =
                                   fun (x2025 : t) -> t_to_js x2025
                                 type tags =
                                   [
                                     `Intl_ResolvedRelativeTimeFormatOptions ]
                                 type tags_0 = tags
                                 type 'tags this =
                                   'tags intf constraint 'tags =
                                               [>
                                                 `Intl_ResolvedRelativeTimeFormatOptions
                                                   ]
                                 let rec this_of_js :
                                   'tags .
                                     (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
                                   = fun (type __tags) ->
                                   fun (__tags_of_js : Ojs.t -> __tags) ->
                                     fun (x2029 : Ojs.t) ->
                                       intf_of_js __tags_of_js x2029
                                 and this_to_js :
                                   'tags .
                                     ('tags -> Ojs.t) -> 'tags this -> Ojs.t
                                   = fun (type __tags) ->
                                   fun (__tags_to_js : __tags -> Ojs.t) ->
                                     fun (x2027 : __tags intf) ->
                                       intf_to_js __tags_to_js x2027
                                 let (get_locale :
                                   'tags this ->
                                     UnicodeBCP47LocaleIdentifier.t)
                                   =
                                   fun (x2031 : 'tags this) ->
                                     UnicodeBCP47LocaleIdentifier.t_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2031)
                                          "locale")
                                 let (set_locale :
                                   'tags this ->
                                     UnicodeBCP47LocaleIdentifier.t -> unit)
                                   =
                                   fun (x2033 : 'tags this) ->
                                     fun
                                       (x2034 :
                                         UnicodeBCP47LocaleIdentifier.t)
                                       ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2033)
                                         "locale"
                                         (UnicodeBCP47LocaleIdentifier.t_to_js
                                            x2034)
                                 let (get_style :
                                   'tags this -> RelativeTimeFormatStyle.t) =
                                   fun (x2036 : 'tags this) ->
                                     RelativeTimeFormatStyle.t_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2036)
                                          "style")
                                 let (set_style :
                                   'tags this ->
                                     RelativeTimeFormatStyle.t -> unit)
                                   =
                                   fun (x2038 : 'tags this) ->
                                     fun (x2039 : RelativeTimeFormatStyle.t)
                                       ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2038) "style"
                                         (RelativeTimeFormatStyle.t_to_js
                                            x2039)
                                 let (get_numeric :
                                   'tags this -> RelativeTimeFormatNumeric.t)
                                   =
                                   fun (x2041 : 'tags this) ->
                                     RelativeTimeFormatNumeric.t_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2041)
                                          "numeric")
                                 let (set_numeric :
                                   'tags this ->
                                     RelativeTimeFormatNumeric.t -> unit)
                                   =
                                   fun (x2043 : 'tags this) ->
                                     fun
                                       (x2044 : RelativeTimeFormatNumeric.t)
                                       ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2043)
                                         "numeric"
                                         (RelativeTimeFormatNumeric.t_to_js
                                            x2044)
                                 let (get_numberingSystem :
                                   'tags this -> string) =
                                   fun (x2046 : 'tags this) ->
                                     Ojs.string_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2046)
                                          "numberingSystem")
                                 let (set_numberingSystem :
                                   'tags this -> string -> unit) =
                                   fun (x2048 : 'tags this) ->
                                     fun (x2049 : string) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2048)
                                         "numberingSystem"
                                         (Ojs.string_to_js x2049)
                                 let cast_from = Obj.magic
                               end
                             module RelativeTimeFormatUnit =
                               struct
                                 type t =
                                   [ `L_s28_day  | `L_s30_days 
                                   | `L_s46_hour  | `L_s47_hours 
                                   | `L_s56_minute  | `L_s57_minutes 
                                   | `L_s58_month  | `L_s59_months 
                                   | `L_s71_quarter  | `L_s72_quarters 
                                   | `L_s74_second  | `L_s75_seconds 
                                   | `L_s83_week  | `L_s85_weeks 
                                   | `L_s86_year  | `L_s87_years ]
                                 let rec t_of_js : Ojs.t -> t =
                                   fun (x2052 : Ojs.t) ->
                                     let x2053 = x2052 in
                                     match Ojs.string_of_js x2053 with
                                     | "day" -> `L_s28_day
                                     | "days" -> `L_s30_days
                                     | "hour" -> `L_s46_hour
                                     | "hours" -> `L_s47_hours
                                     | "minute" -> `L_s56_minute
                                     | "minutes" -> `L_s57_minutes
                                     | "month" -> `L_s58_month
                                     | "months" -> `L_s59_months
                                     | "quarter" -> `L_s71_quarter
                                     | "quarters" -> `L_s72_quarters
                                     | "second" -> `L_s74_second
                                     | "seconds" -> `L_s75_seconds
                                     | "week" -> `L_s83_week
                                     | "weeks" -> `L_s85_weeks
                                     | "year" -> `L_s86_year
                                     | "years" -> `L_s87_years
                                     | _ -> assert false
                                 and t_to_js : t -> Ojs.t =
                                   fun
                                     (x2051 :
                                       [ `L_s28_day  | `L_s30_days 
                                       | `L_s46_hour  | `L_s47_hours 
                                       | `L_s56_minute  | `L_s57_minutes 
                                       | `L_s58_month  | `L_s59_months 
                                       | `L_s71_quarter  | `L_s72_quarters 
                                       | `L_s74_second  | `L_s75_seconds 
                                       | `L_s83_week  | `L_s85_weeks 
                                       | `L_s86_year  | `L_s87_years ])
                                     ->
                                     match x2051 with
                                     | `L_s28_day -> Ojs.string_to_js "day"
                                     | `L_s30_days -> Ojs.string_to_js "days"
                                     | `L_s46_hour -> Ojs.string_to_js "hour"
                                     | `L_s47_hours ->
                                         Ojs.string_to_js "hours"
                                     | `L_s56_minute ->
                                         Ojs.string_to_js "minute"
                                     | `L_s57_minutes ->
                                         Ojs.string_to_js "minutes"
                                     | `L_s58_month ->
                                         Ojs.string_to_js "month"
                                     | `L_s59_months ->
                                         Ojs.string_to_js "months"
                                     | `L_s71_quarter ->
                                         Ojs.string_to_js "quarter"
                                     | `L_s72_quarters ->
                                         Ojs.string_to_js "quarters"
                                     | `L_s74_second ->
                                         Ojs.string_to_js "second"
                                     | `L_s75_seconds ->
                                         Ojs.string_to_js "seconds"
                                     | `L_s83_week -> Ojs.string_to_js "week"
                                     | `L_s85_weeks ->
                                         Ojs.string_to_js "weeks"
                                     | `L_s86_year -> Ojs.string_to_js "year"
                                     | `L_s87_years ->
                                         Ojs.string_to_js "years"
                                 type t_0 = t
                                 let rec t_0_of_js : Ojs.t -> t_0 =
                                   fun (x2055 : Ojs.t) -> t_of_js x2055
                                 and t_0_to_js : t_0 -> Ojs.t =
                                   fun (x2054 : t) -> t_to_js x2054
                               end
                             module RelativeTimeFormatPart =
                               struct
                                 type t =
                                   [ `Intl_RelativeTimeFormatPart ] intf
                                 let rec t_of_js : Ojs.t -> t = Obj.magic
                                 and t_to_js : t -> Ojs.t = Obj.magic
                                 type t_0 = t
                                 let rec t_0_of_js : Ojs.t -> t_0 =
                                   fun (x2057 : Ojs.t) -> t_of_js x2057
                                 and t_0_to_js : t_0 -> Ojs.t =
                                   fun (x2056 : t) -> t_to_js x2056
                                 type tags = [ `Intl_RelativeTimeFormatPart ]
                                 type tags_0 = tags
                                 type 'tags this =
                                   'tags intf constraint 'tags =
                                               [>
                                                 `Intl_RelativeTimeFormatPart ]
                                 let rec this_of_js :
                                   'tags .
                                     (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
                                   = fun (type __tags) ->
                                   fun (__tags_of_js : Ojs.t -> __tags) ->
                                     fun (x2060 : Ojs.t) ->
                                       intf_of_js __tags_of_js x2060
                                 and this_to_js :
                                   'tags .
                                     ('tags -> Ojs.t) -> 'tags this -> Ojs.t
                                   = fun (type __tags) ->
                                   fun (__tags_to_js : __tags -> Ojs.t) ->
                                     fun (x2058 : __tags intf) ->
                                       intf_to_js __tags_to_js x2058
                                 let (get_type : 'tags this -> string) =
                                   fun (x2062 : 'tags this) ->
                                     Ojs.string_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2062) "type")
                                 let (set_type :
                                   'tags this -> string -> unit) =
                                   fun (x2064 : 'tags this) ->
                                     fun (x2065 : string) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2064) "type"
                                         (Ojs.string_to_js x2065)
                                 let (get_value : 'tags this -> string) =
                                   fun (x2067 : 'tags this) ->
                                     Ojs.string_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2067)
                                          "value")
                                 let (set_value :
                                   'tags this -> string -> unit) =
                                   fun (x2069 : 'tags this) ->
                                     fun (x2070 : string) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2069) "value"
                                         (Ojs.string_to_js x2070)
                                 let (get_unit :
                                   'tags this -> RelativeTimeFormatUnit.t) =
                                   fun (x2072 : 'tags this) ->
                                     RelativeTimeFormatUnit.t_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2072) "unit")
                                 let (set_unit :
                                   'tags this ->
                                     RelativeTimeFormatUnit.t -> unit)
                                   =
                                   fun (x2074 : 'tags this) ->
                                     fun (x2075 : RelativeTimeFormatUnit.t)
                                       ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2074) "unit"
                                         (RelativeTimeFormatUnit.t_to_js
                                            x2075)
                                 let cast_from = Obj.magic
                               end
                             module RelativeTimeFormatLocaleMatcher =
                               struct
                                 type t =
                                   [ `L_s24_best_fit  | `L_s52_lookup ]
                                 let rec t_of_js : Ojs.t -> t =
                                   fun (x2078 : Ojs.t) ->
                                     let x2079 = x2078 in
                                     match Ojs.string_of_js x2079 with
                                     | "best fit" -> `L_s24_best_fit
                                     | "lookup" -> `L_s52_lookup
                                     | _ -> assert false
                                 and t_to_js : t -> Ojs.t =
                                   fun
                                     (x2077 :
                                       [ `L_s24_best_fit  | `L_s52_lookup ])
                                     ->
                                     match x2077 with
                                     | `L_s24_best_fit ->
                                         Ojs.string_to_js "best fit"
                                     | `L_s52_lookup ->
                                         Ojs.string_to_js "lookup"
                                 type t_0 = t
                                 let rec t_0_of_js : Ojs.t -> t_0 =
                                   fun (x2081 : Ojs.t) -> t_of_js x2081
                                 and t_0_to_js : t_0 -> Ojs.t =
                                   fun (x2080 : t) -> t_to_js x2080
                               end
                             module RelativeTimeFormatOptions =
                               struct
                                 type t =
                                   [ `Intl_RelativeTimeFormatOptions ] intf
                                 let rec t_of_js : Ojs.t -> t = Obj.magic
                                 and t_to_js : t -> Ojs.t = Obj.magic
                                 type t_0 = t
                                 let rec t_0_of_js : Ojs.t -> t_0 =
                                   fun (x2083 : Ojs.t) -> t_of_js x2083
                                 and t_0_to_js : t_0 -> Ojs.t =
                                   fun (x2082 : t) -> t_to_js x2082
                                 type tags =
                                   [ `Intl_RelativeTimeFormatOptions ]
                                 type tags_0 = tags
                                 type 'tags this =
                                   'tags intf constraint 'tags =
                                               [>
                                                 `Intl_RelativeTimeFormatOptions
                                                   ]
                                 let rec this_of_js :
                                   'tags .
                                     (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
                                   = fun (type __tags) ->
                                   fun (__tags_of_js : Ojs.t -> __tags) ->
                                     fun (x2086 : Ojs.t) ->
                                       intf_of_js __tags_of_js x2086
                                 and this_to_js :
                                   'tags .
                                     ('tags -> Ojs.t) -> 'tags this -> Ojs.t
                                   = fun (type __tags) ->
                                   fun (__tags_to_js : __tags -> Ojs.t) ->
                                     fun (x2084 : __tags intf) ->
                                       intf_to_js __tags_to_js x2084
                                 let (get_localeMatcher :
                                   'tags this ->
                                     RelativeTimeFormatLocaleMatcher.t)
                                   =
                                   fun (x2088 : 'tags this) ->
                                     RelativeTimeFormatLocaleMatcher.t_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2088)
                                          "localeMatcher")
                                 let (set_localeMatcher :
                                   'tags this ->
                                     RelativeTimeFormatLocaleMatcher.t ->
                                       unit)
                                   =
                                   fun (x2090 : 'tags this) ->
                                     fun
                                       (x2091 :
                                         RelativeTimeFormatLocaleMatcher.t)
                                       ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2090)
                                         "localeMatcher"
                                         (RelativeTimeFormatLocaleMatcher.t_to_js
                                            x2091)
                                 let (get_numeric :
                                   'tags this -> RelativeTimeFormatNumeric.t)
                                   =
                                   fun (x2093 : 'tags this) ->
                                     RelativeTimeFormatNumeric.t_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2093)
                                          "numeric")
                                 let (set_numeric :
                                   'tags this ->
                                     RelativeTimeFormatNumeric.t -> unit)
                                   =
                                   fun (x2095 : 'tags this) ->
                                     fun
                                       (x2096 : RelativeTimeFormatNumeric.t)
                                       ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2095)
                                         "numeric"
                                         (RelativeTimeFormatNumeric.t_to_js
                                            x2096)
                                 let (get_style :
                                   'tags this -> RelativeTimeFormatStyle.t) =
                                   fun (x2098 : 'tags this) ->
                                     RelativeTimeFormatStyle.t_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2098)
                                          "style")
                                 let (set_style :
                                   'tags this ->
                                     RelativeTimeFormatStyle.t -> unit)
                                   =
                                   fun (x2100 : 'tags this) ->
                                     fun (x2101 : RelativeTimeFormatStyle.t)
                                       ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2100) "style"
                                         (RelativeTimeFormatStyle.t_to_js
                                            x2101)
                                 let cast_from = Obj.magic
                               end
                             module RelativeTimeFormat =
                               struct
                                 type t = [ `Intl_RelativeTimeFormat ] intf
                                 let rec t_of_js : Ojs.t -> t = Obj.magic
                                 and t_to_js : t -> Ojs.t = Obj.magic
                                 type t_0 = t
                                 let rec t_0_of_js : Ojs.t -> t_0 =
                                   fun (x2104 : Ojs.t) -> t_of_js x2104
                                 and t_0_to_js : t_0 -> Ojs.t =
                                   fun (x2103 : t) -> t_to_js x2103
                                 type tags = [ `Intl_RelativeTimeFormat ]
                                 type tags_0 = tags
                                 type 'tags this =
                                   'tags intf constraint 'tags =
                                               [> `Intl_RelativeTimeFormat ]
                                 let rec this_of_js :
                                   'tags .
                                     (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
                                   = fun (type __tags) ->
                                   fun (__tags_of_js : Ojs.t -> __tags) ->
                                     fun (x2107 : Ojs.t) ->
                                       intf_of_js __tags_of_js x2107
                                 and this_to_js :
                                   'tags .
                                     ('tags -> Ojs.t) -> 'tags this -> Ojs.t
                                   = fun (type __tags) ->
                                   fun (__tags_to_js : __tags -> Ojs.t) ->
                                     fun (x2105 : __tags intf) ->
                                       intf_to_js __tags_to_js x2105
                                 let (format :
                                   'tags this ->
                                     value:float ->
                                       unit:RelativeTimeFormatUnit.t ->
                                         string)
                                   =
                                   fun (x2111 : 'tags this) ->
                                     fun ~value:(x2109 : float) ->
                                       fun
                                         ~unit:(x2110 :
                                                 RelativeTimeFormatUnit.t)
                                         ->
                                         Ojs.string_of_js
                                           (Ojs.call
                                              (this_to_js Obj.magic x2111)
                                              "format"
                                              [|(Ojs.float_to_js x2109);(
                                                RelativeTimeFormatUnit.t_to_js
                                                  x2110)|])
                                 let (formatToParts :
                                   'tags this ->
                                     value:float ->
                                       unit:RelativeTimeFormatUnit.t ->
                                         RelativeTimeFormatPart.t list)
                                   =
                                   fun (x2115 : 'tags this) ->
                                     fun ~value:(x2113 : float) ->
                                       fun
                                         ~unit:(x2114 :
                                                 RelativeTimeFormatUnit.t)
                                         ->
                                         Ojs.list_of_js
                                           RelativeTimeFormatPart.t_of_js
                                           (Ojs.call
                                              (this_to_js Obj.magic x2115)
                                              "formatToParts"
                                              [|(Ojs.float_to_js x2113);(
                                                RelativeTimeFormatUnit.t_to_js
                                                  x2114)|])
                                 let (resolvedOptions :
                                   'tags this ->
                                     ResolvedRelativeTimeFormatOptions.t)
                                   =
                                   fun (x2118 : 'tags this) ->
                                     ResolvedRelativeTimeFormatOptions.t_of_js
                                       (Ojs.call (this_to_js Obj.magic x2118)
                                          "resolvedOptions" [||])
                                 let cast_from = Obj.magic
                                 let (create :
                                   ?locales:(UnicodeBCP47LocaleIdentifier.t,
                                     UnicodeBCP47LocaleIdentifier.t) or_array
                                     ->
                                     ?options:RelativeTimeFormatOptions.t ->
                                       unit -> t)
                                   =
                                   fun
                                     ?locales:(x2120 :
                                                (UnicodeBCP47LocaleIdentifier.t,
                                                  UnicodeBCP47LocaleIdentifier.t)
                                                  or_array option)
                                     ->
                                     fun
                                       ?options:(x2121 :
                                                  RelativeTimeFormatOptions.t
                                                    option)
                                       ->
                                       fun () ->
                                         t_of_js
                                           (Ojs.new_obj_arr
                                              (Ojs.get_prop_ascii
                                                 (Ojs.get_prop_ascii
                                                    Ojs.global "Intl")
                                                 "RelativeTimeFormat")
                                              (let x2122 =
                                                 Ojs.new_obj
                                                   (Ojs.get_prop_ascii
                                                      Ojs.global "Array")
                                                   [||] in
                                               (match x2120 with
                                                | Some x2124 ->
                                                    ignore
                                                      (Ojs.call x2122 "push"
                                                         [|(or_array_to_js
                                                              UnicodeBCP47LocaleIdentifier.t_to_js
                                                              UnicodeBCP47LocaleIdentifier.t_to_js
                                                              x2124)|])
                                                | None -> ());
                                               (match x2121 with
                                                | Some x2123 ->
                                                    ignore
                                                      (Ojs.call x2122 "push"
                                                         [|(RelativeTimeFormatOptions.t_to_js
                                                              x2123)|])
                                                | None -> ());
                                               x2122))
                                 let (supportedLocalesOf :
                                   ?locales:(UnicodeBCP47LocaleIdentifier.t,
                                     UnicodeBCP47LocaleIdentifier.t) or_array
                                     ->
                                     ?options:RelativeTimeFormatOptions.t ->
                                       unit ->
                                         UnicodeBCP47LocaleIdentifier.t list)
                                   =
                                   fun
                                     ?locales:(x2127 :
                                                (UnicodeBCP47LocaleIdentifier.t,
                                                  UnicodeBCP47LocaleIdentifier.t)
                                                  or_array option)
                                     ->
                                     fun
                                       ?options:(x2128 :
                                                  RelativeTimeFormatOptions.t
                                                    option)
                                       ->
                                       fun () ->
                                         Ojs.list_of_js
                                           UnicodeBCP47LocaleIdentifier.t_of_js
                                           (let x2134 =
                                              Ojs.get_prop_ascii
                                                (Ojs.get_prop_ascii
                                                   Ojs.global "Intl")
                                                "RelativeTimeFormat" in
                                            Ojs.call
                                              (Ojs.get_prop_ascii x2134
                                                 "supportedLocalesOf")
                                              "apply"
                                              [|x2134;((let x2129 =
                                                          Ojs.new_obj
                                                            (Ojs.get_prop_ascii
                                                               Ojs.global
                                                               "Array") 
                                                            [||] in
                                                        (match x2127 with
                                                         | Some x2131 ->
                                                             ignore
                                                               (Ojs.call
                                                                  x2129
                                                                  "push"
                                                                  [|(
                                                                    or_array_to_js
                                                                    UnicodeBCP47LocaleIdentifier.t_to_js
                                                                    UnicodeBCP47LocaleIdentifier.t_to_js
                                                                    x2131)|])
                                                         | None -> ());
                                                        (match x2128 with
                                                         | Some x2130 ->
                                                             ignore
                                                               (Ojs.call
                                                                  x2129
                                                                  "push"
                                                                  [|(
                                                                    RelativeTimeFormatOptions.t_to_js
                                                                    x2130)|])
                                                         | None -> ());
                                                        x2129))|])
                               end
                             module PluralRuleType =
                               struct
                                 type t =
                                   [ `L_s25_cardinal  | `L_s67_ordinal ]
                                 let rec t_of_js : Ojs.t -> t =
                                   fun (x2137 : Ojs.t) ->
                                     let x2138 = x2137 in
                                     match Ojs.string_of_js x2138 with
                                     | "cardinal" -> `L_s25_cardinal
                                     | "ordinal" -> `L_s67_ordinal
                                     | _ -> assert false
                                 and t_to_js : t -> Ojs.t =
                                   fun
                                     (x2136 :
                                       [ `L_s25_cardinal  | `L_s67_ordinal ])
                                     ->
                                     match x2136 with
                                     | `L_s25_cardinal ->
                                         Ojs.string_to_js "cardinal"
                                     | `L_s67_ordinal ->
                                         Ojs.string_to_js "ordinal"
                                 type t_0 = t
                                 let rec t_0_of_js : Ojs.t -> t_0 =
                                   fun (x2140 : Ojs.t) -> t_of_js x2140
                                 and t_0_to_js : t_0 -> Ojs.t =
                                   fun (x2139 : t) -> t_to_js x2139
                               end
                             module LDMLPluralRule =
                               struct
                                 type t =
                                   [ `L_s37_few  | `L_s53_many  | `L_s66_one 
                                   | `L_s68_other  | `L_s80_two 
                                   | `L_s88_zero ]
                                 let rec t_of_js : Ojs.t -> t =
                                   fun (x2142 : Ojs.t) ->
                                     let x2143 = x2142 in
                                     match Ojs.string_of_js x2143 with
                                     | "few" -> `L_s37_few
                                     | "many" -> `L_s53_many
                                     | "one" -> `L_s66_one
                                     | "other" -> `L_s68_other
                                     | "two" -> `L_s80_two
                                     | "zero" -> `L_s88_zero
                                     | _ -> assert false
                                 and t_to_js : t -> Ojs.t =
                                   fun
                                     (x2141 :
                                       [ `L_s37_few  | `L_s53_many 
                                       | `L_s66_one  | `L_s68_other 
                                       | `L_s80_two  | `L_s88_zero ])
                                     ->
                                     match x2141 with
                                     | `L_s37_few -> Ojs.string_to_js "few"
                                     | `L_s53_many -> Ojs.string_to_js "many"
                                     | `L_s66_one -> Ojs.string_to_js "one"
                                     | `L_s68_other ->
                                         Ojs.string_to_js "other"
                                     | `L_s80_two -> Ojs.string_to_js "two"
                                     | `L_s88_zero -> Ojs.string_to_js "zero"
                                 type t_0 = t
                                 let rec t_0_of_js : Ojs.t -> t_0 =
                                   fun (x2145 : Ojs.t) -> t_of_js x2145
                                 and t_0_to_js : t_0 -> Ojs.t =
                                   fun (x2144 : t) -> t_to_js x2144
                               end
                             module ResolvedPluralRulesOptions =
                               struct
                                 type t =
                                   [ `Intl_ResolvedPluralRulesOptions ] intf
                                 let rec t_of_js : Ojs.t -> t = Obj.magic
                                 and t_to_js : t -> Ojs.t = Obj.magic
                                 type t_0 = t
                                 let rec t_0_of_js : Ojs.t -> t_0 =
                                   fun (x2147 : Ojs.t) -> t_of_js x2147
                                 and t_0_to_js : t_0 -> Ojs.t =
                                   fun (x2146 : t) -> t_to_js x2146
                                 type tags =
                                   [ `Intl_ResolvedPluralRulesOptions ]
                                 type tags_0 = tags
                                 type 'tags this =
                                   'tags intf constraint 'tags =
                                               [>
                                                 `Intl_ResolvedPluralRulesOptions
                                                   ]
                                 let rec this_of_js :
                                   'tags .
                                     (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
                                   = fun (type __tags) ->
                                   fun (__tags_of_js : Ojs.t -> __tags) ->
                                     fun (x2150 : Ojs.t) ->
                                       intf_of_js __tags_of_js x2150
                                 and this_to_js :
                                   'tags .
                                     ('tags -> Ojs.t) -> 'tags this -> Ojs.t
                                   = fun (type __tags) ->
                                   fun (__tags_to_js : __tags -> Ojs.t) ->
                                     fun (x2148 : __tags intf) ->
                                       intf_to_js __tags_to_js x2148
                                 let (get_locale : 'tags this -> string) =
                                   fun (x2152 : 'tags this) ->
                                     Ojs.string_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2152)
                                          "locale")
                                 let (set_locale :
                                   'tags this -> string -> unit) =
                                   fun (x2154 : 'tags this) ->
                                     fun (x2155 : string) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2154)
                                         "locale" (Ojs.string_to_js x2155)
                                 let (get_pluralCategories :
                                   'tags this -> LDMLPluralRule.t list) =
                                   fun (x2157 : 'tags this) ->
                                     Ojs.list_of_js LDMLPluralRule.t_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2157)
                                          "pluralCategories")
                                 let (set_pluralCategories :
                                   'tags this ->
                                     LDMLPluralRule.t list -> unit)
                                   =
                                   fun (x2160 : 'tags this) ->
                                     fun (x2161 : LDMLPluralRule.t list) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2160)
                                         "pluralCategories"
                                         (Ojs.list_to_js
                                            LDMLPluralRule.t_to_js x2161)
                                 let (get_type :
                                   'tags this -> PluralRuleType.t) =
                                   fun (x2164 : 'tags this) ->
                                     PluralRuleType.t_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2164) "type")
                                 let (set_type :
                                   'tags this -> PluralRuleType.t -> unit) =
                                   fun (x2166 : 'tags this) ->
                                     fun (x2167 : PluralRuleType.t) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2166) "type"
                                         (PluralRuleType.t_to_js x2167)
                                 let (get_minimumIntegerDigits :
                                   'tags this -> float) =
                                   fun (x2169 : 'tags this) ->
                                     Ojs.float_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2169)
                                          "minimumIntegerDigits")
                                 let (set_minimumIntegerDigits :
                                   'tags this -> float -> unit) =
                                   fun (x2171 : 'tags this) ->
                                     fun (x2172 : float) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2171)
                                         "minimumIntegerDigits"
                                         (Ojs.float_to_js x2172)
                                 let (get_minimumFractionDigits :
                                   'tags this -> float) =
                                   fun (x2174 : 'tags this) ->
                                     Ojs.float_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2174)
                                          "minimumFractionDigits")
                                 let (set_minimumFractionDigits :
                                   'tags this -> float -> unit) =
                                   fun (x2176 : 'tags this) ->
                                     fun (x2177 : float) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2176)
                                         "minimumFractionDigits"
                                         (Ojs.float_to_js x2177)
                                 let (get_maximumFractionDigits :
                                   'tags this -> float) =
                                   fun (x2179 : 'tags this) ->
                                     Ojs.float_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2179)
                                          "maximumFractionDigits")
                                 let (set_maximumFractionDigits :
                                   'tags this -> float -> unit) =
                                   fun (x2181 : 'tags this) ->
                                     fun (x2182 : float) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2181)
                                         "maximumFractionDigits"
                                         (Ojs.float_to_js x2182)
                                 let (get_minimumSignificantDigits :
                                   'tags this -> float) =
                                   fun (x2184 : 'tags this) ->
                                     Ojs.float_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2184)
                                          "minimumSignificantDigits")
                                 let (set_minimumSignificantDigits :
                                   'tags this -> float -> unit) =
                                   fun (x2186 : 'tags this) ->
                                     fun (x2187 : float) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2186)
                                         "minimumSignificantDigits"
                                         (Ojs.float_to_js x2187)
                                 let (get_maximumSignificantDigits :
                                   'tags this -> float) =
                                   fun (x2189 : 'tags this) ->
                                     Ojs.float_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2189)
                                          "maximumSignificantDigits")
                                 let (set_maximumSignificantDigits :
                                   'tags this -> float -> unit) =
                                   fun (x2191 : 'tags this) ->
                                     fun (x2192 : float) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2191)
                                         "maximumSignificantDigits"
                                         (Ojs.float_to_js x2192)
                                 let cast_from = Obj.magic
                               end
                             module PluralRulesOptions =
                               struct
                                 type t = [ `Intl_PluralRulesOptions ] intf
                                 let rec t_of_js : Ojs.t -> t = Obj.magic
                                 and t_to_js : t -> Ojs.t = Obj.magic
                                 type t_0 = t
                                 let rec t_0_of_js : Ojs.t -> t_0 =
                                   fun (x2195 : Ojs.t) -> t_of_js x2195
                                 and t_0_to_js : t_0 -> Ojs.t =
                                   fun (x2194 : t) -> t_to_js x2194
                                 type tags = [ `Intl_PluralRulesOptions ]
                                 type tags_0 = tags
                                 type 'tags this =
                                   'tags intf constraint 'tags =
                                               [> `Intl_PluralRulesOptions ]
                                 let rec this_of_js :
                                   'tags .
                                     (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
                                   = fun (type __tags) ->
                                   fun (__tags_of_js : Ojs.t -> __tags) ->
                                     fun (x2198 : Ojs.t) ->
                                       intf_of_js __tags_of_js x2198
                                 and this_to_js :
                                   'tags .
                                     ('tags -> Ojs.t) -> 'tags this -> Ojs.t
                                   = fun (type __tags) ->
                                   fun (__tags_to_js : __tags -> Ojs.t) ->
                                     fun (x2196 : __tags intf) ->
                                       intf_to_js __tags_to_js x2196
                                 let (get_localeMatcher :
                                   'tags this ->
                                     [ `L_s24_best_fit  | `L_s52_lookup ])
                                   =
                                   fun (x2200 : 'tags this) ->
                                     let x2202 =
                                       Ojs.get_prop_ascii
                                         (this_to_js Obj.magic x2200)
                                         "localeMatcher" in
                                     match Ojs.string_of_js x2202 with
                                     | "best fit" -> `L_s24_best_fit
                                     | "lookup" -> `L_s52_lookup
                                     | _ -> assert false
                                 let (set_localeMatcher :
                                   'tags this ->
                                     [ `L_s24_best_fit  | `L_s52_lookup ] ->
                                       unit)
                                   =
                                   fun (x2203 : 'tags this) ->
                                     fun
                                       (x2204 :
                                         [ `L_s24_best_fit  | `L_s52_lookup ])
                                       ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2203)
                                         "localeMatcher"
                                         (match x2204 with
                                          | `L_s24_best_fit ->
                                              Ojs.string_to_js "best fit"
                                          | `L_s52_lookup ->
                                              Ojs.string_to_js "lookup")
                                 let (get_type :
                                   'tags this -> PluralRuleType.t) =
                                   fun (x2206 : 'tags this) ->
                                     PluralRuleType.t_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2206) "type")
                                 let (set_type :
                                   'tags this -> PluralRuleType.t -> unit) =
                                   fun (x2208 : 'tags this) ->
                                     fun (x2209 : PluralRuleType.t) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2208) "type"
                                         (PluralRuleType.t_to_js x2209)
                                 let (get_minimumIntegerDigits :
                                   'tags this -> float) =
                                   fun (x2211 : 'tags this) ->
                                     Ojs.float_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2211)
                                          "minimumIntegerDigits")
                                 let (set_minimumIntegerDigits :
                                   'tags this -> float -> unit) =
                                   fun (x2213 : 'tags this) ->
                                     fun (x2214 : float) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2213)
                                         "minimumIntegerDigits"
                                         (Ojs.float_to_js x2214)
                                 let (get_minimumFractionDigits :
                                   'tags this -> float) =
                                   fun (x2216 : 'tags this) ->
                                     Ojs.float_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2216)
                                          "minimumFractionDigits")
                                 let (set_minimumFractionDigits :
                                   'tags this -> float -> unit) =
                                   fun (x2218 : 'tags this) ->
                                     fun (x2219 : float) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2218)
                                         "minimumFractionDigits"
                                         (Ojs.float_to_js x2219)
                                 let (get_maximumFractionDigits :
                                   'tags this -> float) =
                                   fun (x2221 : 'tags this) ->
                                     Ojs.float_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2221)
                                          "maximumFractionDigits")
                                 let (set_maximumFractionDigits :
                                   'tags this -> float -> unit) =
                                   fun (x2223 : 'tags this) ->
                                     fun (x2224 : float) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2223)
                                         "maximumFractionDigits"
                                         (Ojs.float_to_js x2224)
                                 let (get_minimumSignificantDigits :
                                   'tags this -> float) =
                                   fun (x2226 : 'tags this) ->
                                     Ojs.float_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2226)
                                          "minimumSignificantDigits")
                                 let (set_minimumSignificantDigits :
                                   'tags this -> float -> unit) =
                                   fun (x2228 : 'tags this) ->
                                     fun (x2229 : float) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2228)
                                         "minimumSignificantDigits"
                                         (Ojs.float_to_js x2229)
                                 let (get_maximumSignificantDigits :
                                   'tags this -> float) =
                                   fun (x2231 : 'tags this) ->
                                     Ojs.float_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2231)
                                          "maximumSignificantDigits")
                                 let (set_maximumSignificantDigits :
                                   'tags this -> float -> unit) =
                                   fun (x2233 : 'tags this) ->
                                     fun (x2234 : float) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2233)
                                         "maximumSignificantDigits"
                                         (Ojs.float_to_js x2234)
                                 let cast_from = Obj.magic
                               end
                             module PluralRules =
                               struct
                                 type t = [ `Intl_PluralRules ] intf
                                 let rec t_of_js : Ojs.t -> t = Obj.magic
                                 and t_to_js : t -> Ojs.t = Obj.magic
                                 type t_0 = t
                                 let rec t_0_of_js : Ojs.t -> t_0 =
                                   fun (x2237 : Ojs.t) -> t_of_js x2237
                                 and t_0_to_js : t_0 -> Ojs.t =
                                   fun (x2236 : t) -> t_to_js x2236
                                 type tags = [ `Intl_PluralRules ]
                                 type tags_0 = tags
                                 type 'tags this =
                                   'tags intf constraint 'tags =
                                               [> `Intl_PluralRules ]
                                 let rec this_of_js :
                                   'tags .
                                     (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
                                   = fun (type __tags) ->
                                   fun (__tags_of_js : Ojs.t -> __tags) ->
                                     fun (x2240 : Ojs.t) ->
                                       intf_of_js __tags_of_js x2240
                                 and this_to_js :
                                   'tags .
                                     ('tags -> Ojs.t) -> 'tags this -> Ojs.t
                                   = fun (type __tags) ->
                                   fun (__tags_to_js : __tags -> Ojs.t) ->
                                     fun (x2238 : __tags intf) ->
                                       intf_to_js __tags_to_js x2238
                                 let (resolvedOptions :
                                   'tags this -> ResolvedPluralRulesOptions.t)
                                   =
                                   fun (x2242 : 'tags this) ->
                                     ResolvedPluralRulesOptions.t_of_js
                                       (Ojs.call (this_to_js Obj.magic x2242)
                                          "resolvedOptions" [||])
                                 let (select :
                                   'tags this -> n:float -> LDMLPluralRule.t)
                                   =
                                   fun (x2245 : 'tags this) ->
                                     fun ~n:(x2244 : float) ->
                                       LDMLPluralRule.t_of_js
                                         (Ojs.call
                                            (this_to_js Obj.magic x2245)
                                            "select"
                                            [|(Ojs.float_to_js x2244)|])
                                 let cast_from = Obj.magic
                                 let (create :
                                   ?locales:string list or_string ->
                                     ?options:PluralRulesOptions.t ->
                                       unit -> t)
                                   =
                                   fun
                                     ?locales:(x2247 :
                                                string list or_string option)
                                     ->
                                     fun
                                       ?options:(x2248 :
                                                  PluralRulesOptions.t option)
                                       ->
                                       fun () ->
                                         t_of_js
                                           (Ojs.new_obj_arr
                                              (Ojs.get_prop_ascii
                                                 (Ojs.get_prop_ascii
                                                    Ojs.global "Intl")
                                                 "PluralRules")
                                              (let x2249 =
                                                 Ojs.new_obj
                                                   (Ojs.get_prop_ascii
                                                      Ojs.global "Array")
                                                   [||] in
                                               (match x2247 with
                                                | Some x2251 ->
                                                    ignore
                                                      (Ojs.call x2249 "push"
                                                         [|(or_string_to_js
                                                              (fun
                                                                 (x2252 :
                                                                   string
                                                                    list)
                                                                 ->
                                                                 Ojs.list_to_js
                                                                   Ojs.string_to_js
                                                                   x2252)
                                                              x2251)|])
                                                | None -> ());
                                               (match x2248 with
                                                | Some x2250 ->
                                                    ignore
                                                      (Ojs.call x2249 "push"
                                                         [|(PluralRulesOptions.t_to_js
                                                              x2250)|])
                                                | None -> ());
                                               x2249))
                                 let (invoke :
                                   ?locales:string list or_string ->
                                     ?options:PluralRulesOptions.t ->
                                       unit -> t)
                                   =
                                   fun
                                     ?locales:(x2254 :
                                                string list or_string option)
                                     ->
                                     fun
                                       ?options:(x2255 :
                                                  PluralRulesOptions.t option)
                                       ->
                                       fun () ->
                                         t_of_js
                                           (Ojs.call
                                              (Ojs.get_prop_ascii
                                                 (Ojs.get_prop_ascii
                                                    Ojs.global "Intl")
                                                 "PluralRules") "apply"
                                              [|Ojs.null;((let x2256 =
                                                             Ojs.new_obj
                                                               (Ojs.get_prop_ascii
                                                                  Ojs.global
                                                                  "Array")
                                                               [||] in
                                                           (match x2254 with
                                                            | Some x2258 ->
                                                                ignore
                                                                  (Ojs.call
                                                                    x2256
                                                                    "push"
                                                                    [|(
                                                                    or_string_to_js
                                                                    (fun
                                                                    (x2259 :
                                                                    string
                                                                    list) ->
                                                                    Ojs.list_to_js
                                                                    Ojs.string_to_js
                                                                    x2259)
                                                                    x2258)|])
                                                            | None -> ());
                                                           (match x2255 with
                                                            | Some x2257 ->
                                                                ignore
                                                                  (Ojs.call
                                                                    x2256
                                                                    "push"
                                                                    [|(
                                                                    PluralRulesOptions.t_to_js
                                                                    x2257)|])
                                                            | None -> ());
                                                           x2256))|])
                                 let (supportedLocalesOf :
                                   locales:string list or_string ->
                                     ?options:PluralRulesOptions.t ->
                                       unit -> string list)
                                   =
                                   fun
                                     ~locales:(x2261 : string list or_string)
                                     ->
                                     fun
                                       ?options:(x2262 :
                                                  PluralRulesOptions.t option)
                                       ->
                                       fun () ->
                                         Ojs.list_of_js Ojs.string_of_js
                                           (let x2267 =
                                              Ojs.get_prop_ascii
                                                (Ojs.get_prop_ascii
                                                   Ojs.global "Intl")
                                                "PluralRules" in
                                            Ojs.call
                                              (Ojs.get_prop_ascii x2267
                                                 "supportedLocalesOf")
                                              "apply"
                                              [|x2267;((let x2263 =
                                                          Ojs.new_obj
                                                            (Ojs.get_prop_ascii
                                                               Ojs.global
                                                               "Array") 
                                                            [||] in
                                                        ignore
                                                          (Ojs.call x2263
                                                             "push"
                                                             [|(or_string_to_js
                                                                  (fun
                                                                    (x2265 :
                                                                    string
                                                                    list) ->
                                                                    Ojs.list_to_js
                                                                    Ojs.string_to_js
                                                                    x2265)
                                                                  x2261)|]);
                                                        (match x2262 with
                                                         | Some x2264 ->
                                                             ignore
                                                               (Ojs.call
                                                                  x2263
                                                                  "push"
                                                                  [|(
                                                                    PluralRulesOptions.t_to_js
                                                                    x2264)|])
                                                         | None -> ());
                                                        x2263))|])
                               end
                             module ResolvedNumberFormatOptions =
                               struct
                                 type t =
                                   [ `Intl_ResolvedNumberFormatOptions ] intf
                                 let rec t_of_js : Ojs.t -> t = Obj.magic
                                 and t_to_js : t -> Ojs.t = Obj.magic
                                 type t_0 = t
                                 let rec t_0_of_js : Ojs.t -> t_0 =
                                   fun (x2270 : Ojs.t) -> t_of_js x2270
                                 and t_0_to_js : t_0 -> Ojs.t =
                                   fun (x2269 : t) -> t_to_js x2269
                                 type tags =
                                   [ `Intl_ResolvedNumberFormatOptions ]
                                 type tags_0 = tags
                                 type 'tags this =
                                   'tags intf constraint 'tags =
                                               [>
                                                 `Intl_ResolvedNumberFormatOptions
                                                   ]
                                 let rec this_of_js :
                                   'tags .
                                     (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
                                   = fun (type __tags) ->
                                   fun (__tags_of_js : Ojs.t -> __tags) ->
                                     fun (x2273 : Ojs.t) ->
                                       intf_of_js __tags_of_js x2273
                                 and this_to_js :
                                   'tags .
                                     ('tags -> Ojs.t) -> 'tags this -> Ojs.t
                                   = fun (type __tags) ->
                                   fun (__tags_to_js : __tags -> Ojs.t) ->
                                     fun (x2271 : __tags intf) ->
                                       intf_to_js __tags_to_js x2271
                                 let (get_compactDisplay :
                                   'tags this -> string) =
                                   fun (x2275 : 'tags this) ->
                                     Ojs.string_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2275)
                                          "compactDisplay")
                                 let (set_compactDisplay :
                                   'tags this -> string -> unit) =
                                   fun (x2277 : 'tags this) ->
                                     fun (x2278 : string) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2277)
                                         "compactDisplay"
                                         (Ojs.string_to_js x2278)
                                 let (get_notation : 'tags this -> string) =
                                   fun (x2280 : 'tags this) ->
                                     Ojs.string_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2280)
                                          "notation")
                                 let (set_notation :
                                   'tags this -> string -> unit) =
                                   fun (x2282 : 'tags this) ->
                                     fun (x2283 : string) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2282)
                                         "notation" (Ojs.string_to_js x2283)
                                 let (get_signDisplay : 'tags this -> string)
                                   =
                                   fun (x2285 : 'tags this) ->
                                     Ojs.string_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2285)
                                          "signDisplay")
                                 let (set_signDisplay :
                                   'tags this -> string -> unit) =
                                   fun (x2287 : 'tags this) ->
                                     fun (x2288 : string) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2287)
                                         "signDisplay"
                                         (Ojs.string_to_js x2288)
                                 let (get_unit : 'tags this -> string) =
                                   fun (x2290 : 'tags this) ->
                                     Ojs.string_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2290) "unit")
                                 let (set_unit :
                                   'tags this -> string -> unit) =
                                   fun (x2292 : 'tags this) ->
                                     fun (x2293 : string) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2292) "unit"
                                         (Ojs.string_to_js x2293)
                                 let (get_unitDisplay : 'tags this -> string)
                                   =
                                   fun (x2295 : 'tags this) ->
                                     Ojs.string_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2295)
                                          "unitDisplay")
                                 let (set_unitDisplay :
                                   'tags this -> string -> unit) =
                                   fun (x2297 : 'tags this) ->
                                     fun (x2298 : string) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2297)
                                         "unitDisplay"
                                         (Ojs.string_to_js x2298)
                                 let (get_locale : 'tags this -> string) =
                                   fun (x2300 : 'tags this) ->
                                     Ojs.string_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2300)
                                          "locale")
                                 let (set_locale :
                                   'tags this -> string -> unit) =
                                   fun (x2302 : 'tags this) ->
                                     fun (x2303 : string) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2302)
                                         "locale" (Ojs.string_to_js x2303)
                                 let (get_numberingSystem :
                                   'tags this -> string) =
                                   fun (x2305 : 'tags this) ->
                                     Ojs.string_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2305)
                                          "numberingSystem")
                                 let (set_numberingSystem :
                                   'tags this -> string -> unit) =
                                   fun (x2307 : 'tags this) ->
                                     fun (x2308 : string) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2307)
                                         "numberingSystem"
                                         (Ojs.string_to_js x2308)
                                 let (get_style : 'tags this -> string) =
                                   fun (x2310 : 'tags this) ->
                                     Ojs.string_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2310)
                                          "style")
                                 let (set_style :
                                   'tags this -> string -> unit) =
                                   fun (x2312 : 'tags this) ->
                                     fun (x2313 : string) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2312) "style"
                                         (Ojs.string_to_js x2313)
                                 let (get_currency : 'tags this -> string) =
                                   fun (x2315 : 'tags this) ->
                                     Ojs.string_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2315)
                                          "currency")
                                 let (set_currency :
                                   'tags this -> string -> unit) =
                                   fun (x2317 : 'tags this) ->
                                     fun (x2318 : string) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2317)
                                         "currency" (Ojs.string_to_js x2318)
                                 let (get_currencyDisplay :
                                   'tags this -> string) =
                                   fun (x2320 : 'tags this) ->
                                     Ojs.string_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2320)
                                          "currencyDisplay")
                                 let (set_currencyDisplay :
                                   'tags this -> string -> unit) =
                                   fun (x2322 : 'tags this) ->
                                     fun (x2323 : string) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2322)
                                         "currencyDisplay"
                                         (Ojs.string_to_js x2323)
                                 let (get_minimumIntegerDigits :
                                   'tags this -> float) =
                                   fun (x2325 : 'tags this) ->
                                     Ojs.float_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2325)
                                          "minimumIntegerDigits")
                                 let (set_minimumIntegerDigits :
                                   'tags this -> float -> unit) =
                                   fun (x2327 : 'tags this) ->
                                     fun (x2328 : float) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2327)
                                         "minimumIntegerDigits"
                                         (Ojs.float_to_js x2328)
                                 let (get_minimumFractionDigits :
                                   'tags this -> float) =
                                   fun (x2330 : 'tags this) ->
                                     Ojs.float_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2330)
                                          "minimumFractionDigits")
                                 let (set_minimumFractionDigits :
                                   'tags this -> float -> unit) =
                                   fun (x2332 : 'tags this) ->
                                     fun (x2333 : float) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2332)
                                         "minimumFractionDigits"
                                         (Ojs.float_to_js x2333)
                                 let (get_maximumFractionDigits :
                                   'tags this -> float) =
                                   fun (x2335 : 'tags this) ->
                                     Ojs.float_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2335)
                                          "maximumFractionDigits")
                                 let (set_maximumFractionDigits :
                                   'tags this -> float -> unit) =
                                   fun (x2337 : 'tags this) ->
                                     fun (x2338 : float) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2337)
                                         "maximumFractionDigits"
                                         (Ojs.float_to_js x2338)
                                 let (get_minimumSignificantDigits :
                                   'tags this -> float) =
                                   fun (x2340 : 'tags this) ->
                                     Ojs.float_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2340)
                                          "minimumSignificantDigits")
                                 let (set_minimumSignificantDigits :
                                   'tags this -> float -> unit) =
                                   fun (x2342 : 'tags this) ->
                                     fun (x2343 : float) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2342)
                                         "minimumSignificantDigits"
                                         (Ojs.float_to_js x2343)
                                 let (get_maximumSignificantDigits :
                                   'tags this -> float) =
                                   fun (x2345 : 'tags this) ->
                                     Ojs.float_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2345)
                                          "maximumSignificantDigits")
                                 let (set_maximumSignificantDigits :
                                   'tags this -> float -> unit) =
                                   fun (x2347 : 'tags this) ->
                                     fun (x2348 : float) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2347)
                                         "maximumSignificantDigits"
                                         (Ojs.float_to_js x2348)
                                 let (get_useGrouping : 'tags this -> bool) =
                                   fun (x2350 : 'tags this) ->
                                     Ojs.bool_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2350)
                                          "useGrouping")
                                 let (set_useGrouping :
                                   'tags this -> bool -> unit) =
                                   fun (x2352 : 'tags this) ->
                                     fun (x2353 : bool) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2352)
                                         "useGrouping" (Ojs.bool_to_js x2353)
                                 let cast_from = Obj.magic
                               end
                             module NumberFormatPartTypes =
                               struct
                                 type t =
                                   [ `L_s26_compact  | `L_s27_currency 
                                   | `L_s31_decimal 
                                   | `L_s34_exponentInteger 
                                   | `L_s35_exponentMinusSign 
                                   | `L_s36_exponentSeparator 
                                   | `L_s38_fraction  | `L_s41_group 
                                   | `L_s48_infinity  | `L_s49_integer 
                                   | `L_s50_literal  | `L_s55_minusSign 
                                   | `L_s60_nan  | `L_s69_percentSign 
                                   | `L_s70_plusSign  | `L_s81_unit 
                                   | `L_s82_unknown ]
                                 let rec t_of_js : Ojs.t -> t =
                                   fun (x2356 : Ojs.t) ->
                                     let x2357 = x2356 in
                                     match Ojs.string_of_js x2357 with
                                     | "compact" -> `L_s26_compact
                                     | "currency" -> `L_s27_currency
                                     | "decimal" -> `L_s31_decimal
                                     | "exponentInteger" ->
                                         `L_s34_exponentInteger
                                     | "exponentMinusSign" ->
                                         `L_s35_exponentMinusSign
                                     | "exponentSeparator" ->
                                         `L_s36_exponentSeparator
                                     | "fraction" -> `L_s38_fraction
                                     | "group" -> `L_s41_group
                                     | "infinity" -> `L_s48_infinity
                                     | "integer" -> `L_s49_integer
                                     | "literal" -> `L_s50_literal
                                     | "minusSign" -> `L_s55_minusSign
                                     | "nan" -> `L_s60_nan
                                     | "percentSign" -> `L_s69_percentSign
                                     | "plusSign" -> `L_s70_plusSign
                                     | "unit" -> `L_s81_unit
                                     | "unknown" -> `L_s82_unknown
                                     | _ -> assert false
                                 and t_to_js : t -> Ojs.t =
                                   fun
                                     (x2355 :
                                       [ `L_s26_compact  | `L_s27_currency 
                                       | `L_s31_decimal 
                                       | `L_s34_exponentInteger 
                                       | `L_s35_exponentMinusSign 
                                       | `L_s36_exponentSeparator 
                                       | `L_s38_fraction  | `L_s41_group 
                                       | `L_s48_infinity  | `L_s49_integer 
                                       | `L_s50_literal  | `L_s55_minusSign 
                                       | `L_s60_nan  | `L_s69_percentSign 
                                       | `L_s70_plusSign  | `L_s81_unit 
                                       | `L_s82_unknown ])
                                     ->
                                     match x2355 with
                                     | `L_s26_compact ->
                                         Ojs.string_to_js "compact"
                                     | `L_s27_currency ->
                                         Ojs.string_to_js "currency"
                                     | `L_s31_decimal ->
                                         Ojs.string_to_js "decimal"
                                     | `L_s34_exponentInteger ->
                                         Ojs.string_to_js "exponentInteger"
                                     | `L_s35_exponentMinusSign ->
                                         Ojs.string_to_js "exponentMinusSign"
                                     | `L_s36_exponentSeparator ->
                                         Ojs.string_to_js "exponentSeparator"
                                     | `L_s38_fraction ->
                                         Ojs.string_to_js "fraction"
                                     | `L_s41_group ->
                                         Ojs.string_to_js "group"
                                     | `L_s48_infinity ->
                                         Ojs.string_to_js "infinity"
                                     | `L_s49_integer ->
                                         Ojs.string_to_js "integer"
                                     | `L_s50_literal ->
                                         Ojs.string_to_js "literal"
                                     | `L_s55_minusSign ->
                                         Ojs.string_to_js "minusSign"
                                     | `L_s60_nan -> Ojs.string_to_js "nan"
                                     | `L_s69_percentSign ->
                                         Ojs.string_to_js "percentSign"
                                     | `L_s70_plusSign ->
                                         Ojs.string_to_js "plusSign"
                                     | `L_s81_unit -> Ojs.string_to_js "unit"
                                     | `L_s82_unknown ->
                                         Ojs.string_to_js "unknown"
                                 type t_0 = t
                                 let rec t_0_of_js : Ojs.t -> t_0 =
                                   fun (x2359 : Ojs.t) -> t_of_js x2359
                                 and t_0_to_js : t_0 -> Ojs.t =
                                   fun (x2358 : t) -> t_to_js x2358
                               end
                             module NumberFormatPart =
                               struct
                                 type t = [ `Intl_NumberFormatPart ] intf
                                 let rec t_of_js : Ojs.t -> t = Obj.magic
                                 and t_to_js : t -> Ojs.t = Obj.magic
                                 type t_0 = t
                                 let rec t_0_of_js : Ojs.t -> t_0 =
                                   fun (x2361 : Ojs.t) -> t_of_js x2361
                                 and t_0_to_js : t_0 -> Ojs.t =
                                   fun (x2360 : t) -> t_to_js x2360
                                 type tags = [ `Intl_NumberFormatPart ]
                                 type tags_0 = tags
                                 type 'tags this =
                                   'tags intf constraint 'tags =
                                               [> `Intl_NumberFormatPart ]
                                 let rec this_of_js :
                                   'tags .
                                     (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
                                   = fun (type __tags) ->
                                   fun (__tags_of_js : Ojs.t -> __tags) ->
                                     fun (x2364 : Ojs.t) ->
                                       intf_of_js __tags_of_js x2364
                                 and this_to_js :
                                   'tags .
                                     ('tags -> Ojs.t) -> 'tags this -> Ojs.t
                                   = fun (type __tags) ->
                                   fun (__tags_to_js : __tags -> Ojs.t) ->
                                     fun (x2362 : __tags intf) ->
                                       intf_to_js __tags_to_js x2362
                                 let (get_type :
                                   'tags this -> NumberFormatPartTypes.t) =
                                   fun (x2366 : 'tags this) ->
                                     NumberFormatPartTypes.t_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2366) "type")
                                 let (set_type :
                                   'tags this ->
                                     NumberFormatPartTypes.t -> unit)
                                   =
                                   fun (x2368 : 'tags this) ->
                                     fun (x2369 : NumberFormatPartTypes.t) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2368) "type"
                                         (NumberFormatPartTypes.t_to_js x2369)
                                 let (get_value : 'tags this -> string) =
                                   fun (x2371 : 'tags this) ->
                                     Ojs.string_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2371)
                                          "value")
                                 let (set_value :
                                   'tags this -> string -> unit) =
                                   fun (x2373 : 'tags this) ->
                                     fun (x2374 : string) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2373) "value"
                                         (Ojs.string_to_js x2374)
                                 let cast_from = Obj.magic
                               end
                             module NumberFormatOptions =
                               struct
                                 type t = [ `Intl_NumberFormatOptions ] intf
                                 let rec t_of_js : Ojs.t -> t = Obj.magic
                                 and t_to_js : t -> Ojs.t = Obj.magic
                                 type t_0 = t
                                 let rec t_0_of_js : Ojs.t -> t_0 =
                                   fun (x2377 : Ojs.t) -> t_of_js x2377
                                 and t_0_to_js : t_0 -> Ojs.t =
                                   fun (x2376 : t) -> t_to_js x2376
                                 type tags = [ `Intl_NumberFormatOptions ]
                                 type tags_0 = tags
                                 type 'tags this =
                                   'tags intf constraint 'tags =
                                               [> `Intl_NumberFormatOptions ]
                                 let rec this_of_js :
                                   'tags .
                                     (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
                                   = fun (type __tags) ->
                                   fun (__tags_of_js : Ojs.t -> __tags) ->
                                     fun (x2380 : Ojs.t) ->
                                       intf_of_js __tags_of_js x2380
                                 and this_to_js :
                                   'tags .
                                     ('tags -> Ojs.t) -> 'tags this -> Ojs.t
                                   = fun (type __tags) ->
                                   fun (__tags_to_js : __tags -> Ojs.t) ->
                                     fun (x2378 : __tags intf) ->
                                       intf_to_js __tags_to_js x2378
                                 let (get_compactDisplay :
                                   'tags this -> string) =
                                   fun (x2382 : 'tags this) ->
                                     Ojs.string_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2382)
                                          "compactDisplay")
                                 let (set_compactDisplay :
                                   'tags this -> string -> unit) =
                                   fun (x2384 : 'tags this) ->
                                     fun (x2385 : string) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2384)
                                         "compactDisplay"
                                         (Ojs.string_to_js x2385)
                                 let (get_notation : 'tags this -> string) =
                                   fun (x2387 : 'tags this) ->
                                     Ojs.string_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2387)
                                          "notation")
                                 let (set_notation :
                                   'tags this -> string -> unit) =
                                   fun (x2389 : 'tags this) ->
                                     fun (x2390 : string) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2389)
                                         "notation" (Ojs.string_to_js x2390)
                                 let (get_signDisplay : 'tags this -> string)
                                   =
                                   fun (x2392 : 'tags this) ->
                                     Ojs.string_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2392)
                                          "signDisplay")
                                 let (set_signDisplay :
                                   'tags this -> string -> unit) =
                                   fun (x2394 : 'tags this) ->
                                     fun (x2395 : string) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2394)
                                         "signDisplay"
                                         (Ojs.string_to_js x2395)
                                 let (get_unit : 'tags this -> string) =
                                   fun (x2397 : 'tags this) ->
                                     Ojs.string_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2397) "unit")
                                 let (set_unit :
                                   'tags this -> string -> unit) =
                                   fun (x2399 : 'tags this) ->
                                     fun (x2400 : string) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2399) "unit"
                                         (Ojs.string_to_js x2400)
                                 let (get_unitDisplay : 'tags this -> string)
                                   =
                                   fun (x2402 : 'tags this) ->
                                     Ojs.string_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2402)
                                          "unitDisplay")
                                 let (set_unitDisplay :
                                   'tags this -> string -> unit) =
                                   fun (x2404 : 'tags this) ->
                                     fun (x2405 : string) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2404)
                                         "unitDisplay"
                                         (Ojs.string_to_js x2405)
                                 let (get_localeMatcher :
                                   'tags this -> string) =
                                   fun (x2407 : 'tags this) ->
                                     Ojs.string_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2407)
                                          "localeMatcher")
                                 let (set_localeMatcher :
                                   'tags this -> string -> unit) =
                                   fun (x2409 : 'tags this) ->
                                     fun (x2410 : string) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2409)
                                         "localeMatcher"
                                         (Ojs.string_to_js x2410)
                                 let (get_style : 'tags this -> string) =
                                   fun (x2412 : 'tags this) ->
                                     Ojs.string_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2412)
                                          "style")
                                 let (set_style :
                                   'tags this -> string -> unit) =
                                   fun (x2414 : 'tags this) ->
                                     fun (x2415 : string) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2414) "style"
                                         (Ojs.string_to_js x2415)
                                 let (get_currency : 'tags this -> string) =
                                   fun (x2417 : 'tags this) ->
                                     Ojs.string_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2417)
                                          "currency")
                                 let (set_currency :
                                   'tags this -> string -> unit) =
                                   fun (x2419 : 'tags this) ->
                                     fun (x2420 : string) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2419)
                                         "currency" (Ojs.string_to_js x2420)
                                 let (get_currencyDisplay :
                                   'tags this -> string) =
                                   fun (x2422 : 'tags this) ->
                                     Ojs.string_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2422)
                                          "currencyDisplay")
                                 let (set_currencyDisplay :
                                   'tags this -> string -> unit) =
                                   fun (x2424 : 'tags this) ->
                                     fun (x2425 : string) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2424)
                                         "currencyDisplay"
                                         (Ojs.string_to_js x2425)
                                 let (get_currencySign :
                                   'tags this -> string) =
                                   fun (x2427 : 'tags this) ->
                                     Ojs.string_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2427)
                                          "currencySign")
                                 let (set_currencySign :
                                   'tags this -> string -> unit) =
                                   fun (x2429 : 'tags this) ->
                                     fun (x2430 : string) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2429)
                                         "currencySign"
                                         (Ojs.string_to_js x2430)
                                 let (get_useGrouping : 'tags this -> bool) =
                                   fun (x2432 : 'tags this) ->
                                     Ojs.bool_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2432)
                                          "useGrouping")
                                 let (set_useGrouping :
                                   'tags this -> bool -> unit) =
                                   fun (x2434 : 'tags this) ->
                                     fun (x2435 : bool) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2434)
                                         "useGrouping" (Ojs.bool_to_js x2435)
                                 let (get_minimumIntegerDigits :
                                   'tags this -> float) =
                                   fun (x2437 : 'tags this) ->
                                     Ojs.float_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2437)
                                          "minimumIntegerDigits")
                                 let (set_minimumIntegerDigits :
                                   'tags this -> float -> unit) =
                                   fun (x2439 : 'tags this) ->
                                     fun (x2440 : float) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2439)
                                         "minimumIntegerDigits"
                                         (Ojs.float_to_js x2440)
                                 let (get_minimumFractionDigits :
                                   'tags this -> float) =
                                   fun (x2442 : 'tags this) ->
                                     Ojs.float_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2442)
                                          "minimumFractionDigits")
                                 let (set_minimumFractionDigits :
                                   'tags this -> float -> unit) =
                                   fun (x2444 : 'tags this) ->
                                     fun (x2445 : float) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2444)
                                         "minimumFractionDigits"
                                         (Ojs.float_to_js x2445)
                                 let (get_maximumFractionDigits :
                                   'tags this -> float) =
                                   fun (x2447 : 'tags this) ->
                                     Ojs.float_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2447)
                                          "maximumFractionDigits")
                                 let (set_maximumFractionDigits :
                                   'tags this -> float -> unit) =
                                   fun (x2449 : 'tags this) ->
                                     fun (x2450 : float) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2449)
                                         "maximumFractionDigits"
                                         (Ojs.float_to_js x2450)
                                 let (get_minimumSignificantDigits :
                                   'tags this -> float) =
                                   fun (x2452 : 'tags this) ->
                                     Ojs.float_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2452)
                                          "minimumSignificantDigits")
                                 let (set_minimumSignificantDigits :
                                   'tags this -> float -> unit) =
                                   fun (x2454 : 'tags this) ->
                                     fun (x2455 : float) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2454)
                                         "minimumSignificantDigits"
                                         (Ojs.float_to_js x2455)
                                 let (get_maximumSignificantDigits :
                                   'tags this -> float) =
                                   fun (x2457 : 'tags this) ->
                                     Ojs.float_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2457)
                                          "maximumSignificantDigits")
                                 let (set_maximumSignificantDigits :
                                   'tags this -> float -> unit) =
                                   fun (x2459 : 'tags this) ->
                                     fun (x2460 : float) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2459)
                                         "maximumSignificantDigits"
                                         (Ojs.float_to_js x2460)
                                 let cast_from = Obj.magic
                               end
                             module NumberFormat =
                               struct
                                 type t = [ `Intl_NumberFormat ] intf
                                 let rec t_of_js : Ojs.t -> t = Obj.magic
                                 and t_to_js : t -> Ojs.t = Obj.magic
                                 type t_0 = t
                                 let rec t_0_of_js : Ojs.t -> t_0 =
                                   fun (x2463 : Ojs.t) -> t_of_js x2463
                                 and t_0_to_js : t_0 -> Ojs.t =
                                   fun (x2462 : t) -> t_to_js x2462
                                 type tags = [ `Intl_NumberFormat ]
                                 type tags_0 = tags
                                 type 'tags this =
                                   'tags intf constraint 'tags =
                                               [> `Intl_NumberFormat ]
                                 let rec this_of_js :
                                   'tags .
                                     (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
                                   = fun (type __tags) ->
                                   fun (__tags_of_js : Ojs.t -> __tags) ->
                                     fun (x2466 : Ojs.t) ->
                                       intf_of_js __tags_of_js x2466
                                 and this_to_js :
                                   'tags .
                                     ('tags -> Ojs.t) -> 'tags this -> Ojs.t
                                   = fun (type __tags) ->
                                   fun (__tags_to_js : __tags -> Ojs.t) ->
                                     fun (x2464 : __tags intf) ->
                                       intf_to_js __tags_to_js x2464
                                 let (format :
                                   'tags this ->
                                     value:bigint or_number -> string)
                                   =
                                   fun (x2470 : 'tags this) ->
                                     fun ~value:(x2468 : bigint or_number) ->
                                       Ojs.string_of_js
                                         (Ojs.call
                                            (this_to_js Obj.magic x2470)
                                            "format"
                                            [|(or_number_to_js bigint_to_js
                                                 x2468)|])
                                 let (resolvedOptions :
                                   'tags this ->
                                     ResolvedNumberFormatOptions.t)
                                   =
                                   fun (x2472 : 'tags this) ->
                                     ResolvedNumberFormatOptions.t_of_js
                                       (Ojs.call (this_to_js Obj.magic x2472)
                                          "resolvedOptions" [||])
                                 let (formatToParts :
                                   'tags this ->
                                     ?number:bigint or_number ->
                                       unit -> NumberFormatPart.t list)
                                   =
                                   fun (x2478 : 'tags this) ->
                                     fun
                                       ?number:(x2474 :
                                                 bigint or_number option)
                                       ->
                                       fun () ->
                                         Ojs.list_of_js
                                           NumberFormatPart.t_of_js
                                           (let x2480 =
                                              this_to_js Obj.magic x2478 in
                                            Ojs.call
                                              (Ojs.get_prop_ascii x2480
                                                 "formatToParts") "apply"
                                              [|x2480;((let x2475 =
                                                          Ojs.new_obj
                                                            (Ojs.get_prop_ascii
                                                               Ojs.global
                                                               "Array") 
                                                            [||] in
                                                        (match x2474 with
                                                         | Some x2476 ->
                                                             ignore
                                                               (Ojs.call
                                                                  x2475
                                                                  "push"
                                                                  [|(
                                                                    or_number_to_js
                                                                    bigint_to_js
                                                                    x2476)|])
                                                         | None -> ());
                                                        x2475))|])
                                 let (format' :
                                   'tags this -> value:float -> string) =
                                   fun (x2483 : 'tags this) ->
                                     fun ~value:(x2482 : float) ->
                                       Ojs.string_of_js
                                         (Ojs.call
                                            (this_to_js Obj.magic x2483)
                                            "format"
                                            [|(Ojs.float_to_js x2482)|])
                                 let (resolvedOptions' :
                                   'tags this ->
                                     ResolvedNumberFormatOptions.t)
                                   =
                                   fun (x2485 : 'tags this) ->
                                     ResolvedNumberFormatOptions.t_of_js
                                       (Ojs.call (this_to_js Obj.magic x2485)
                                          "resolvedOptions" [||])
                                 let cast_from = Obj.magic
                                 let (create :
                                   ?locales:string list or_string ->
                                     ?options:NumberFormatOptions.t ->
                                       unit -> t)
                                   =
                                   fun
                                     ?locales:(x2487 :
                                                string list or_string option)
                                     ->
                                     fun
                                       ?options:(x2488 :
                                                  NumberFormatOptions.t
                                                    option)
                                       ->
                                       fun () ->
                                         t_of_js
                                           (Ojs.new_obj_arr
                                              (Ojs.get_prop_ascii
                                                 (Ojs.get_prop_ascii
                                                    Ojs.global "Intl")
                                                 "NumberFormat")
                                              (let x2489 =
                                                 Ojs.new_obj
                                                   (Ojs.get_prop_ascii
                                                      Ojs.global "Array")
                                                   [||] in
                                               (match x2487 with
                                                | Some x2491 ->
                                                    ignore
                                                      (Ojs.call x2489 "push"
                                                         [|(or_string_to_js
                                                              (fun
                                                                 (x2492 :
                                                                   string
                                                                    list)
                                                                 ->
                                                                 Ojs.list_to_js
                                                                   Ojs.string_to_js
                                                                   x2492)
                                                              x2491)|])
                                                | None -> ());
                                               (match x2488 with
                                                | Some x2490 ->
                                                    ignore
                                                      (Ojs.call x2489 "push"
                                                         [|(NumberFormatOptions.t_to_js
                                                              x2490)|])
                                                | None -> ());
                                               x2489))
                                 let (invoke :
                                   ?locales:string list or_string ->
                                     ?options:NumberFormatOptions.t ->
                                       unit -> t)
                                   =
                                   fun
                                     ?locales:(x2494 :
                                                string list or_string option)
                                     ->
                                     fun
                                       ?options:(x2495 :
                                                  NumberFormatOptions.t
                                                    option)
                                       ->
                                       fun () ->
                                         t_of_js
                                           (Ojs.call
                                              (Ojs.get_prop_ascii
                                                 (Ojs.get_prop_ascii
                                                    Ojs.global "Intl")
                                                 "NumberFormat") "apply"
                                              [|Ojs.null;((let x2496 =
                                                             Ojs.new_obj
                                                               (Ojs.get_prop_ascii
                                                                  Ojs.global
                                                                  "Array")
                                                               [||] in
                                                           (match x2494 with
                                                            | Some x2498 ->
                                                                ignore
                                                                  (Ojs.call
                                                                    x2496
                                                                    "push"
                                                                    [|(
                                                                    or_string_to_js
                                                                    (fun
                                                                    (x2499 :
                                                                    string
                                                                    list) ->
                                                                    Ojs.list_to_js
                                                                    Ojs.string_to_js
                                                                    x2499)
                                                                    x2498)|])
                                                            | None -> ());
                                                           (match x2495 with
                                                            | Some x2497 ->
                                                                ignore
                                                                  (Ojs.call
                                                                    x2496
                                                                    "push"
                                                                    [|(
                                                                    NumberFormatOptions.t_to_js
                                                                    x2497)|])
                                                            | None -> ());
                                                           x2496))|])
                                 let (supportedLocalesOf :
                                   locales:string list or_string ->
                                     ?options:NumberFormatOptions.t ->
                                       unit -> string list)
                                   =
                                   fun
                                     ~locales:(x2501 : string list or_string)
                                     ->
                                     fun
                                       ?options:(x2502 :
                                                  NumberFormatOptions.t
                                                    option)
                                       ->
                                       fun () ->
                                         Ojs.list_of_js Ojs.string_of_js
                                           (let x2507 =
                                              Ojs.get_prop_ascii
                                                (Ojs.get_prop_ascii
                                                   Ojs.global "Intl")
                                                "NumberFormat" in
                                            Ojs.call
                                              (Ojs.get_prop_ascii x2507
                                                 "supportedLocalesOf")
                                              "apply"
                                              [|x2507;((let x2503 =
                                                          Ojs.new_obj
                                                            (Ojs.get_prop_ascii
                                                               Ojs.global
                                                               "Array") 
                                                            [||] in
                                                        ignore
                                                          (Ojs.call x2503
                                                             "push"
                                                             [|(or_string_to_js
                                                                  (fun
                                                                    (x2505 :
                                                                    string
                                                                    list) ->
                                                                    Ojs.list_to_js
                                                                    Ojs.string_to_js
                                                                    x2505)
                                                                  x2501)|]);
                                                        (match x2502 with
                                                         | Some x2504 ->
                                                             ignore
                                                               (Ojs.call
                                                                  x2503
                                                                  "push"
                                                                  [|(
                                                                    NumberFormatOptions.t_to_js
                                                                    x2504)|])
                                                         | None -> ());
                                                        x2503))|])
                               end
                             module ResolvedDateTimeFormatOptions =
                               struct
                                 type t =
                                   [ `Intl_ResolvedDateTimeFormatOptions ]
                                     intf
                                 let rec t_of_js : Ojs.t -> t = Obj.magic
                                 and t_to_js : t -> Ojs.t = Obj.magic
                                 type t_0 = t
                                 let rec t_0_of_js : Ojs.t -> t_0 =
                                   fun (x2510 : Ojs.t) -> t_of_js x2510
                                 and t_0_to_js : t_0 -> Ojs.t =
                                   fun (x2509 : t) -> t_to_js x2509
                                 type tags =
                                   [ `Intl_ResolvedDateTimeFormatOptions ]
                                 type tags_0 = tags
                                 type 'tags this =
                                   'tags intf constraint 'tags =
                                               [>
                                                 `Intl_ResolvedDateTimeFormatOptions
                                                   ]
                                 let rec this_of_js :
                                   'tags .
                                     (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
                                   = fun (type __tags) ->
                                   fun (__tags_of_js : Ojs.t -> __tags) ->
                                     fun (x2513 : Ojs.t) ->
                                       intf_of_js __tags_of_js x2513
                                 and this_to_js :
                                   'tags .
                                     ('tags -> Ojs.t) -> 'tags this -> Ojs.t
                                   = fun (type __tags) ->
                                   fun (__tags_to_js : __tags -> Ojs.t) ->
                                     fun (x2511 : __tags intf) ->
                                       intf_to_js __tags_to_js x2511
                                 let (get_locale : 'tags this -> string) =
                                   fun (x2515 : 'tags this) ->
                                     Ojs.string_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2515)
                                          "locale")
                                 let (set_locale :
                                   'tags this -> string -> unit) =
                                   fun (x2517 : 'tags this) ->
                                     fun (x2518 : string) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2517)
                                         "locale" (Ojs.string_to_js x2518)
                                 let (get_calendar : 'tags this -> string) =
                                   fun (x2520 : 'tags this) ->
                                     Ojs.string_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2520)
                                          "calendar")
                                 let (set_calendar :
                                   'tags this -> string -> unit) =
                                   fun (x2522 : 'tags this) ->
                                     fun (x2523 : string) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2522)
                                         "calendar" (Ojs.string_to_js x2523)
                                 let (get_numberingSystem :
                                   'tags this -> string) =
                                   fun (x2525 : 'tags this) ->
                                     Ojs.string_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2525)
                                          "numberingSystem")
                                 let (set_numberingSystem :
                                   'tags this -> string -> unit) =
                                   fun (x2527 : 'tags this) ->
                                     fun (x2528 : string) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2527)
                                         "numberingSystem"
                                         (Ojs.string_to_js x2528)
                                 let (get_timeZone : 'tags this -> string) =
                                   fun (x2530 : 'tags this) ->
                                     Ojs.string_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2530)
                                          "timeZone")
                                 let (set_timeZone :
                                   'tags this -> string -> unit) =
                                   fun (x2532 : 'tags this) ->
                                     fun (x2533 : string) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2532)
                                         "timeZone" (Ojs.string_to_js x2533)
                                 let (get_hour12 : 'tags this -> bool) =
                                   fun (x2535 : 'tags this) ->
                                     Ojs.bool_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2535)
                                          "hour12")
                                 let (set_hour12 :
                                   'tags this -> bool -> unit) =
                                   fun (x2537 : 'tags this) ->
                                     fun (x2538 : bool) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2537)
                                         "hour12" (Ojs.bool_to_js x2538)
                                 let (get_weekday : 'tags this -> string) =
                                   fun (x2540 : 'tags this) ->
                                     Ojs.string_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2540)
                                          "weekday")
                                 let (set_weekday :
                                   'tags this -> string -> unit) =
                                   fun (x2542 : 'tags this) ->
                                     fun (x2543 : string) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2542)
                                         "weekday" (Ojs.string_to_js x2543)
                                 let (get_era : 'tags this -> string) =
                                   fun (x2545 : 'tags this) ->
                                     Ojs.string_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2545) "era")
                                 let (set_era : 'tags this -> string -> unit)
                                   =
                                   fun (x2547 : 'tags this) ->
                                     fun (x2548 : string) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2547) "era"
                                         (Ojs.string_to_js x2548)
                                 let (get_year : 'tags this -> string) =
                                   fun (x2550 : 'tags this) ->
                                     Ojs.string_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2550) "year")
                                 let (set_year :
                                   'tags this -> string -> unit) =
                                   fun (x2552 : 'tags this) ->
                                     fun (x2553 : string) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2552) "year"
                                         (Ojs.string_to_js x2553)
                                 let (get_month : 'tags this -> string) =
                                   fun (x2555 : 'tags this) ->
                                     Ojs.string_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2555)
                                          "month")
                                 let (set_month :
                                   'tags this -> string -> unit) =
                                   fun (x2557 : 'tags this) ->
                                     fun (x2558 : string) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2557) "month"
                                         (Ojs.string_to_js x2558)
                                 let (get_day : 'tags this -> string) =
                                   fun (x2560 : 'tags this) ->
                                     Ojs.string_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2560) "day")
                                 let (set_day : 'tags this -> string -> unit)
                                   =
                                   fun (x2562 : 'tags this) ->
                                     fun (x2563 : string) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2562) "day"
                                         (Ojs.string_to_js x2563)
                                 let (get_hour : 'tags this -> string) =
                                   fun (x2565 : 'tags this) ->
                                     Ojs.string_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2565) "hour")
                                 let (set_hour :
                                   'tags this -> string -> unit) =
                                   fun (x2567 : 'tags this) ->
                                     fun (x2568 : string) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2567) "hour"
                                         (Ojs.string_to_js x2568)
                                 let (get_minute : 'tags this -> string) =
                                   fun (x2570 : 'tags this) ->
                                     Ojs.string_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2570)
                                          "minute")
                                 let (set_minute :
                                   'tags this -> string -> unit) =
                                   fun (x2572 : 'tags this) ->
                                     fun (x2573 : string) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2572)
                                         "minute" (Ojs.string_to_js x2573)
                                 let (get_second : 'tags this -> string) =
                                   fun (x2575 : 'tags this) ->
                                     Ojs.string_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2575)
                                          "second")
                                 let (set_second :
                                   'tags this -> string -> unit) =
                                   fun (x2577 : 'tags this) ->
                                     fun (x2578 : string) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2577)
                                         "second" (Ojs.string_to_js x2578)
                                 let (get_timeZoneName :
                                   'tags this -> string) =
                                   fun (x2580 : 'tags this) ->
                                     Ojs.string_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2580)
                                          "timeZoneName")
                                 let (set_timeZoneName :
                                   'tags this -> string -> unit) =
                                   fun (x2582 : 'tags this) ->
                                     fun (x2583 : string) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2582)
                                         "timeZoneName"
                                         (Ojs.string_to_js x2583)
                                 let cast_from = Obj.magic
                               end
                             module DateTimeFormatPartTypes =
                               struct
                                 type t =
                                   [ `L_s28_day  | `L_s29_dayPeriod 
                                   | `L_s33_era  | `L_s46_hour 
                                   | `L_s50_literal  | `L_s56_minute 
                                   | `L_s58_month  | `L_s74_second 
                                   | `L_s78_timeZoneName  | `L_s84_weekday 
                                   | `L_s86_year ]
                                 let rec t_of_js : Ojs.t -> t =
                                   fun (x2586 : Ojs.t) ->
                                     let x2587 = x2586 in
                                     match Ojs.string_of_js x2587 with
                                     | "day" -> `L_s28_day
                                     | "dayPeriod" -> `L_s29_dayPeriod
                                     | "era" -> `L_s33_era
                                     | "hour" -> `L_s46_hour
                                     | "literal" -> `L_s50_literal
                                     | "minute" -> `L_s56_minute
                                     | "month" -> `L_s58_month
                                     | "second" -> `L_s74_second
                                     | "timeZoneName" -> `L_s78_timeZoneName
                                     | "weekday" -> `L_s84_weekday
                                     | "year" -> `L_s86_year
                                     | _ -> assert false
                                 and t_to_js : t -> Ojs.t =
                                   fun
                                     (x2585 :
                                       [ `L_s28_day  | `L_s29_dayPeriod 
                                       | `L_s33_era  | `L_s46_hour 
                                       | `L_s50_literal  | `L_s56_minute 
                                       | `L_s58_month  | `L_s74_second 
                                       | `L_s78_timeZoneName 
                                       | `L_s84_weekday  | `L_s86_year ])
                                     ->
                                     match x2585 with
                                     | `L_s28_day -> Ojs.string_to_js "day"
                                     | `L_s29_dayPeriod ->
                                         Ojs.string_to_js "dayPeriod"
                                     | `L_s33_era -> Ojs.string_to_js "era"
                                     | `L_s46_hour -> Ojs.string_to_js "hour"
                                     | `L_s50_literal ->
                                         Ojs.string_to_js "literal"
                                     | `L_s56_minute ->
                                         Ojs.string_to_js "minute"
                                     | `L_s58_month ->
                                         Ojs.string_to_js "month"
                                     | `L_s74_second ->
                                         Ojs.string_to_js "second"
                                     | `L_s78_timeZoneName ->
                                         Ojs.string_to_js "timeZoneName"
                                     | `L_s84_weekday ->
                                         Ojs.string_to_js "weekday"
                                     | `L_s86_year -> Ojs.string_to_js "year"
                                 type t_0 = t
                                 let rec t_0_of_js : Ojs.t -> t_0 =
                                   fun (x2589 : Ojs.t) -> t_of_js x2589
                                 and t_0_to_js : t_0 -> Ojs.t =
                                   fun (x2588 : t) -> t_to_js x2588
                               end
                             module DateTimeFormatPart =
                               struct
                                 type t = [ `Intl_DateTimeFormatPart ] intf
                                 let rec t_of_js : Ojs.t -> t = Obj.magic
                                 and t_to_js : t -> Ojs.t = Obj.magic
                                 type t_0 = t
                                 let rec t_0_of_js : Ojs.t -> t_0 =
                                   fun (x2591 : Ojs.t) -> t_of_js x2591
                                 and t_0_to_js : t_0 -> Ojs.t =
                                   fun (x2590 : t) -> t_to_js x2590
                                 type tags = [ `Intl_DateTimeFormatPart ]
                                 type tags_0 = tags
                                 type 'tags this =
                                   'tags intf constraint 'tags =
                                               [> `Intl_DateTimeFormatPart ]
                                 let rec this_of_js :
                                   'tags .
                                     (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
                                   = fun (type __tags) ->
                                   fun (__tags_of_js : Ojs.t -> __tags) ->
                                     fun (x2594 : Ojs.t) ->
                                       intf_of_js __tags_of_js x2594
                                 and this_to_js :
                                   'tags .
                                     ('tags -> Ojs.t) -> 'tags this -> Ojs.t
                                   = fun (type __tags) ->
                                   fun (__tags_to_js : __tags -> Ojs.t) ->
                                     fun (x2592 : __tags intf) ->
                                       intf_to_js __tags_to_js x2592
                                 let (get_type :
                                   'tags this -> DateTimeFormatPartTypes.t) =
                                   fun (x2596 : 'tags this) ->
                                     DateTimeFormatPartTypes.t_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2596) "type")
                                 let (set_type :
                                   'tags this ->
                                     DateTimeFormatPartTypes.t -> unit)
                                   =
                                   fun (x2598 : 'tags this) ->
                                     fun (x2599 : DateTimeFormatPartTypes.t)
                                       ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2598) "type"
                                         (DateTimeFormatPartTypes.t_to_js
                                            x2599)
                                 let (get_value : 'tags this -> string) =
                                   fun (x2601 : 'tags this) ->
                                     Ojs.string_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2601)
                                          "value")
                                 let (set_value :
                                   'tags this -> string -> unit) =
                                   fun (x2603 : 'tags this) ->
                                     fun (x2604 : string) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2603) "value"
                                         (Ojs.string_to_js x2604)
                                 let cast_from = Obj.magic
                               end
                             module DateTimeFormatOptions =
                               struct
                                 type t =
                                   [ `Intl_DateTimeFormatOptions ] intf
                                 let rec t_of_js : Ojs.t -> t = Obj.magic
                                 and t_to_js : t -> Ojs.t = Obj.magic
                                 type t_0 = t
                                 let rec t_0_of_js : Ojs.t -> t_0 =
                                   fun (x2607 : Ojs.t) -> t_of_js x2607
                                 and t_0_to_js : t_0 -> Ojs.t =
                                   fun (x2606 : t) -> t_to_js x2606
                                 type tags = [ `Intl_DateTimeFormatOptions ]
                                 type tags_0 = tags
                                 type 'tags this =
                                   'tags intf constraint 'tags =
                                               [>
                                                 `Intl_DateTimeFormatOptions ]
                                 let rec this_of_js :
                                   'tags .
                                     (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
                                   = fun (type __tags) ->
                                   fun (__tags_of_js : Ojs.t -> __tags) ->
                                     fun (x2610 : Ojs.t) ->
                                       intf_of_js __tags_of_js x2610
                                 and this_to_js :
                                   'tags .
                                     ('tags -> Ojs.t) -> 'tags this -> Ojs.t
                                   = fun (type __tags) ->
                                   fun (__tags_to_js : __tags -> Ojs.t) ->
                                     fun (x2608 : __tags intf) ->
                                       intf_to_js __tags_to_js x2608
                                 let (get_dateStyle :
                                   'tags this ->
                                     [ `L_s40_full  | `L_s51_long 
                                     | `L_s54_medium  | `L_s76_short ])
                                   =
                                   fun (x2612 : 'tags this) ->
                                     let x2614 =
                                       Ojs.get_prop_ascii
                                         (this_to_js Obj.magic x2612)
                                         "dateStyle" in
                                     match Ojs.string_of_js x2614 with
                                     | "full" -> `L_s40_full
                                     | "long" -> `L_s51_long
                                     | "medium" -> `L_s54_medium
                                     | "short" -> `L_s76_short
                                     | _ -> assert false
                                 let (set_dateStyle :
                                   'tags this ->
                                     [ `L_s40_full  | `L_s51_long 
                                     | `L_s54_medium  | `L_s76_short ] ->
                                       unit)
                                   =
                                   fun (x2615 : 'tags this) ->
                                     fun
                                       (x2616 :
                                         [ `L_s40_full  | `L_s51_long 
                                         | `L_s54_medium  | `L_s76_short ])
                                       ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2615)
                                         "dateStyle"
                                         (match x2616 with
                                          | `L_s40_full ->
                                              Ojs.string_to_js "full"
                                          | `L_s51_long ->
                                              Ojs.string_to_js "long"
                                          | `L_s54_medium ->
                                              Ojs.string_to_js "medium"
                                          | `L_s76_short ->
                                              Ojs.string_to_js "short")
                                 let (get_timeStyle :
                                   'tags this ->
                                     [ `L_s40_full  | `L_s51_long 
                                     | `L_s54_medium  | `L_s76_short ])
                                   =
                                   fun (x2618 : 'tags this) ->
                                     let x2620 =
                                       Ojs.get_prop_ascii
                                         (this_to_js Obj.magic x2618)
                                         "timeStyle" in
                                     match Ojs.string_of_js x2620 with
                                     | "full" -> `L_s40_full
                                     | "long" -> `L_s51_long
                                     | "medium" -> `L_s54_medium
                                     | "short" -> `L_s76_short
                                     | _ -> assert false
                                 let (set_timeStyle :
                                   'tags this ->
                                     [ `L_s40_full  | `L_s51_long 
                                     | `L_s54_medium  | `L_s76_short ] ->
                                       unit)
                                   =
                                   fun (x2621 : 'tags this) ->
                                     fun
                                       (x2622 :
                                         [ `L_s40_full  | `L_s51_long 
                                         | `L_s54_medium  | `L_s76_short ])
                                       ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2621)
                                         "timeStyle"
                                         (match x2622 with
                                          | `L_s40_full ->
                                              Ojs.string_to_js "full"
                                          | `L_s51_long ->
                                              Ojs.string_to_js "long"
                                          | `L_s54_medium ->
                                              Ojs.string_to_js "medium"
                                          | `L_s76_short ->
                                              Ojs.string_to_js "short")
                                 let (get_calendar : 'tags this -> string) =
                                   fun (x2624 : 'tags this) ->
                                     Ojs.string_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2624)
                                          "calendar")
                                 let (set_calendar :
                                   'tags this -> string -> unit) =
                                   fun (x2626 : 'tags this) ->
                                     fun (x2627 : string) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2626)
                                         "calendar" (Ojs.string_to_js x2627)
                                 let (get_dayPeriod :
                                   'tags this ->
                                     [ `L_s51_long  | `L_s61_narrow 
                                     | `L_s76_short ])
                                   =
                                   fun (x2629 : 'tags this) ->
                                     let x2631 =
                                       Ojs.get_prop_ascii
                                         (this_to_js Obj.magic x2629)
                                         "dayPeriod" in
                                     match Ojs.string_of_js x2631 with
                                     | "long" -> `L_s51_long
                                     | "narrow" -> `L_s61_narrow
                                     | "short" -> `L_s76_short
                                     | _ -> assert false
                                 let (set_dayPeriod :
                                   'tags this ->
                                     [ `L_s51_long  | `L_s61_narrow 
                                     | `L_s76_short ] -> unit)
                                   =
                                   fun (x2632 : 'tags this) ->
                                     fun
                                       (x2633 :
                                         [ `L_s51_long  | `L_s61_narrow 
                                         | `L_s76_short ])
                                       ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2632)
                                         "dayPeriod"
                                         (match x2633 with
                                          | `L_s51_long ->
                                              Ojs.string_to_js "long"
                                          | `L_s61_narrow ->
                                              Ojs.string_to_js "narrow"
                                          | `L_s76_short ->
                                              Ojs.string_to_js "short")
                                 let (get_numberingSystem :
                                   'tags this -> string) =
                                   fun (x2635 : 'tags this) ->
                                     Ojs.string_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2635)
                                          "numberingSystem")
                                 let (set_numberingSystem :
                                   'tags this -> string -> unit) =
                                   fun (x2637 : 'tags this) ->
                                     fun (x2638 : string) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2637)
                                         "numberingSystem"
                                         (Ojs.string_to_js x2638)
                                 let (get_hourCycle :
                                   'tags this ->
                                     [ `L_s42_h11  | `L_s43_h12 
                                     | `L_s44_h23  | `L_s45_h24 ])
                                   =
                                   fun (x2640 : 'tags this) ->
                                     let x2642 =
                                       Ojs.get_prop_ascii
                                         (this_to_js Obj.magic x2640)
                                         "hourCycle" in
                                     match Ojs.string_of_js x2642 with
                                     | "h11" -> `L_s42_h11
                                     | "h12" -> `L_s43_h12
                                     | "h23" -> `L_s44_h23
                                     | "h24" -> `L_s45_h24
                                     | _ -> assert false
                                 let (set_hourCycle :
                                   'tags this ->
                                     [ `L_s42_h11  | `L_s43_h12 
                                     | `L_s44_h23  | `L_s45_h24 ] -> 
                                       unit)
                                   =
                                   fun (x2643 : 'tags this) ->
                                     fun
                                       (x2644 :
                                         [ `L_s42_h11  | `L_s43_h12 
                                         | `L_s44_h23  | `L_s45_h24 ])
                                       ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2643)
                                         "hourCycle"
                                         (match x2644 with
                                          | `L_s42_h11 ->
                                              Ojs.string_to_js "h11"
                                          | `L_s43_h12 ->
                                              Ojs.string_to_js "h12"
                                          | `L_s44_h23 ->
                                              Ojs.string_to_js "h23"
                                          | `L_s45_h24 ->
                                              Ojs.string_to_js "h24")
                                 let (get_fractionalSecondDigits :
                                   'tags this ->
                                     [ `L_n_0  | `L_n_1  | `L_n_2  | `L_n_3 ])
                                   =
                                   fun (x2646 : 'tags this) ->
                                     let x2648 =
                                       Ojs.get_prop_ascii
                                         (this_to_js Obj.magic x2646)
                                         "fractionalSecondDigits" in
                                     match Ojs.int_of_js x2648 with
                                     | 0 -> `L_n_0
                                     | 1 -> `L_n_1
                                     | 2 -> `L_n_2
                                     | 3 -> `L_n_3
                                     | _ -> assert false
                                 let (set_fractionalSecondDigits :
                                   'tags this ->
                                     [ `L_n_0  | `L_n_1  | `L_n_2  | `L_n_3 ]
                                       -> unit)
                                   =
                                   fun (x2649 : 'tags this) ->
                                     fun
                                       (x2650 :
                                         [ `L_n_0  | `L_n_1  | `L_n_2 
                                         | `L_n_3 ])
                                       ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2649)
                                         "fractionalSecondDigits"
                                         (match x2650 with
                                          | `L_n_0 -> Ojs.int_to_js 0
                                          | `L_n_1 -> Ojs.int_to_js 1
                                          | `L_n_2 -> Ojs.int_to_js 2
                                          | `L_n_3 -> Ojs.int_to_js 3)
                                 let (get_localeMatcher :
                                   'tags this ->
                                     [ `L_s24_best_fit  | `L_s52_lookup ])
                                   =
                                   fun (x2652 : 'tags this) ->
                                     let x2654 =
                                       Ojs.get_prop_ascii
                                         (this_to_js Obj.magic x2652)
                                         "localeMatcher" in
                                     match Ojs.string_of_js x2654 with
                                     | "best fit" -> `L_s24_best_fit
                                     | "lookup" -> `L_s52_lookup
                                     | _ -> assert false
                                 let (set_localeMatcher :
                                   'tags this ->
                                     [ `L_s24_best_fit  | `L_s52_lookup ] ->
                                       unit)
                                   =
                                   fun (x2655 : 'tags this) ->
                                     fun
                                       (x2656 :
                                         [ `L_s24_best_fit  | `L_s52_lookup ])
                                       ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2655)
                                         "localeMatcher"
                                         (match x2656 with
                                          | `L_s24_best_fit ->
                                              Ojs.string_to_js "best fit"
                                          | `L_s52_lookup ->
                                              Ojs.string_to_js "lookup")
                                 let (get_weekday :
                                   'tags this ->
                                     [ `L_s51_long  | `L_s61_narrow 
                                     | `L_s76_short ])
                                   =
                                   fun (x2658 : 'tags this) ->
                                     let x2660 =
                                       Ojs.get_prop_ascii
                                         (this_to_js Obj.magic x2658)
                                         "weekday" in
                                     match Ojs.string_of_js x2660 with
                                     | "long" -> `L_s51_long
                                     | "narrow" -> `L_s61_narrow
                                     | "short" -> `L_s76_short
                                     | _ -> assert false
                                 let (set_weekday :
                                   'tags this ->
                                     [ `L_s51_long  | `L_s61_narrow 
                                     | `L_s76_short ] -> unit)
                                   =
                                   fun (x2661 : 'tags this) ->
                                     fun
                                       (x2662 :
                                         [ `L_s51_long  | `L_s61_narrow 
                                         | `L_s76_short ])
                                       ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2661)
                                         "weekday"
                                         (match x2662 with
                                          | `L_s51_long ->
                                              Ojs.string_to_js "long"
                                          | `L_s61_narrow ->
                                              Ojs.string_to_js "narrow"
                                          | `L_s76_short ->
                                              Ojs.string_to_js "short")
                                 let (get_era :
                                   'tags this ->
                                     [ `L_s51_long  | `L_s61_narrow 
                                     | `L_s76_short ])
                                   =
                                   fun (x2664 : 'tags this) ->
                                     let x2666 =
                                       Ojs.get_prop_ascii
                                         (this_to_js Obj.magic x2664) "era" in
                                     match Ojs.string_of_js x2666 with
                                     | "long" -> `L_s51_long
                                     | "narrow" -> `L_s61_narrow
                                     | "short" -> `L_s76_short
                                     | _ -> assert false
                                 let (set_era :
                                   'tags this ->
                                     [ `L_s51_long  | `L_s61_narrow 
                                     | `L_s76_short ] -> unit)
                                   =
                                   fun (x2667 : 'tags this) ->
                                     fun
                                       (x2668 :
                                         [ `L_s51_long  | `L_s61_narrow 
                                         | `L_s76_short ])
                                       ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2667) "era"
                                         (match x2668 with
                                          | `L_s51_long ->
                                              Ojs.string_to_js "long"
                                          | `L_s61_narrow ->
                                              Ojs.string_to_js "narrow"
                                          | `L_s76_short ->
                                              Ojs.string_to_js "short")
                                 let (get_year :
                                   'tags this ->
                                     [ `L_s0_2_digit  | `L_s64_numeric ])
                                   =
                                   fun (x2670 : 'tags this) ->
                                     let x2672 =
                                       Ojs.get_prop_ascii
                                         (this_to_js Obj.magic x2670) "year" in
                                     match Ojs.string_of_js x2672 with
                                     | "2-digit" -> `L_s0_2_digit
                                     | "numeric" -> `L_s64_numeric
                                     | _ -> assert false
                                 let (set_year :
                                   'tags this ->
                                     [ `L_s0_2_digit  | `L_s64_numeric ] ->
                                       unit)
                                   =
                                   fun (x2673 : 'tags this) ->
                                     fun
                                       (x2674 :
                                         [ `L_s0_2_digit  | `L_s64_numeric ])
                                       ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2673) "year"
                                         (match x2674 with
                                          | `L_s0_2_digit ->
                                              Ojs.string_to_js "2-digit"
                                          | `L_s64_numeric ->
                                              Ojs.string_to_js "numeric")
                                 let (get_month :
                                   'tags this ->
                                     [ `L_s0_2_digit  | `L_s51_long 
                                     | `L_s61_narrow  | `L_s64_numeric 
                                     | `L_s76_short ])
                                   =
                                   fun (x2676 : 'tags this) ->
                                     let x2678 =
                                       Ojs.get_prop_ascii
                                         (this_to_js Obj.magic x2676) "month" in
                                     match Ojs.string_of_js x2678 with
                                     | "2-digit" -> `L_s0_2_digit
                                     | "long" -> `L_s51_long
                                     | "narrow" -> `L_s61_narrow
                                     | "numeric" -> `L_s64_numeric
                                     | "short" -> `L_s76_short
                                     | _ -> assert false
                                 let (set_month :
                                   'tags this ->
                                     [ `L_s0_2_digit  | `L_s51_long 
                                     | `L_s61_narrow  | `L_s64_numeric 
                                     | `L_s76_short ] -> unit)
                                   =
                                   fun (x2679 : 'tags this) ->
                                     fun
                                       (x2680 :
                                         [ `L_s0_2_digit  | `L_s51_long 
                                         | `L_s61_narrow  | `L_s64_numeric 
                                         | `L_s76_short ])
                                       ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2679) "month"
                                         (match x2680 with
                                          | `L_s0_2_digit ->
                                              Ojs.string_to_js "2-digit"
                                          | `L_s51_long ->
                                              Ojs.string_to_js "long"
                                          | `L_s61_narrow ->
                                              Ojs.string_to_js "narrow"
                                          | `L_s64_numeric ->
                                              Ojs.string_to_js "numeric"
                                          | `L_s76_short ->
                                              Ojs.string_to_js "short")
                                 let (get_day :
                                   'tags this ->
                                     [ `L_s0_2_digit  | `L_s64_numeric ])
                                   =
                                   fun (x2682 : 'tags this) ->
                                     let x2684 =
                                       Ojs.get_prop_ascii
                                         (this_to_js Obj.magic x2682) "day" in
                                     match Ojs.string_of_js x2684 with
                                     | "2-digit" -> `L_s0_2_digit
                                     | "numeric" -> `L_s64_numeric
                                     | _ -> assert false
                                 let (set_day :
                                   'tags this ->
                                     [ `L_s0_2_digit  | `L_s64_numeric ] ->
                                       unit)
                                   =
                                   fun (x2685 : 'tags this) ->
                                     fun
                                       (x2686 :
                                         [ `L_s0_2_digit  | `L_s64_numeric ])
                                       ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2685) "day"
                                         (match x2686 with
                                          | `L_s0_2_digit ->
                                              Ojs.string_to_js "2-digit"
                                          | `L_s64_numeric ->
                                              Ojs.string_to_js "numeric")
                                 let (get_hour :
                                   'tags this ->
                                     [ `L_s0_2_digit  | `L_s64_numeric ])
                                   =
                                   fun (x2688 : 'tags this) ->
                                     let x2690 =
                                       Ojs.get_prop_ascii
                                         (this_to_js Obj.magic x2688) "hour" in
                                     match Ojs.string_of_js x2690 with
                                     | "2-digit" -> `L_s0_2_digit
                                     | "numeric" -> `L_s64_numeric
                                     | _ -> assert false
                                 let (set_hour :
                                   'tags this ->
                                     [ `L_s0_2_digit  | `L_s64_numeric ] ->
                                       unit)
                                   =
                                   fun (x2691 : 'tags this) ->
                                     fun
                                       (x2692 :
                                         [ `L_s0_2_digit  | `L_s64_numeric ])
                                       ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2691) "hour"
                                         (match x2692 with
                                          | `L_s0_2_digit ->
                                              Ojs.string_to_js "2-digit"
                                          | `L_s64_numeric ->
                                              Ojs.string_to_js "numeric")
                                 let (get_minute :
                                   'tags this ->
                                     [ `L_s0_2_digit  | `L_s64_numeric ])
                                   =
                                   fun (x2694 : 'tags this) ->
                                     let x2696 =
                                       Ojs.get_prop_ascii
                                         (this_to_js Obj.magic x2694)
                                         "minute" in
                                     match Ojs.string_of_js x2696 with
                                     | "2-digit" -> `L_s0_2_digit
                                     | "numeric" -> `L_s64_numeric
                                     | _ -> assert false
                                 let (set_minute :
                                   'tags this ->
                                     [ `L_s0_2_digit  | `L_s64_numeric ] ->
                                       unit)
                                   =
                                   fun (x2697 : 'tags this) ->
                                     fun
                                       (x2698 :
                                         [ `L_s0_2_digit  | `L_s64_numeric ])
                                       ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2697)
                                         "minute"
                                         (match x2698 with
                                          | `L_s0_2_digit ->
                                              Ojs.string_to_js "2-digit"
                                          | `L_s64_numeric ->
                                              Ojs.string_to_js "numeric")
                                 let (get_second :
                                   'tags this ->
                                     [ `L_s0_2_digit  | `L_s64_numeric ])
                                   =
                                   fun (x2700 : 'tags this) ->
                                     let x2702 =
                                       Ojs.get_prop_ascii
                                         (this_to_js Obj.magic x2700)
                                         "second" in
                                     match Ojs.string_of_js x2702 with
                                     | "2-digit" -> `L_s0_2_digit
                                     | "numeric" -> `L_s64_numeric
                                     | _ -> assert false
                                 let (set_second :
                                   'tags this ->
                                     [ `L_s0_2_digit  | `L_s64_numeric ] ->
                                       unit)
                                   =
                                   fun (x2703 : 'tags this) ->
                                     fun
                                       (x2704 :
                                         [ `L_s0_2_digit  | `L_s64_numeric ])
                                       ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2703)
                                         "second"
                                         (match x2704 with
                                          | `L_s0_2_digit ->
                                              Ojs.string_to_js "2-digit"
                                          | `L_s64_numeric ->
                                              Ojs.string_to_js "numeric")
                                 let (get_timeZoneName :
                                   'tags this ->
                                     [ `L_s51_long  | `L_s76_short ])
                                   =
                                   fun (x2706 : 'tags this) ->
                                     let x2708 =
                                       Ojs.get_prop_ascii
                                         (this_to_js Obj.magic x2706)
                                         "timeZoneName" in
                                     match Ojs.string_of_js x2708 with
                                     | "long" -> `L_s51_long
                                     | "short" -> `L_s76_short
                                     | _ -> assert false
                                 let (set_timeZoneName :
                                   'tags this ->
                                     [ `L_s51_long  | `L_s76_short ] -> unit)
                                   =
                                   fun (x2709 : 'tags this) ->
                                     fun
                                       (x2710 :
                                         [ `L_s51_long  | `L_s76_short ])
                                       ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2709)
                                         "timeZoneName"
                                         (match x2710 with
                                          | `L_s51_long ->
                                              Ojs.string_to_js "long"
                                          | `L_s76_short ->
                                              Ojs.string_to_js "short")
                                 let (get_formatMatcher :
                                   'tags this ->
                                     [ `L_s23_basic  | `L_s24_best_fit ])
                                   =
                                   fun (x2712 : 'tags this) ->
                                     let x2714 =
                                       Ojs.get_prop_ascii
                                         (this_to_js Obj.magic x2712)
                                         "formatMatcher" in
                                     match Ojs.string_of_js x2714 with
                                     | "basic" -> `L_s23_basic
                                     | "best fit" -> `L_s24_best_fit
                                     | _ -> assert false
                                 let (set_formatMatcher :
                                   'tags this ->
                                     [ `L_s23_basic  | `L_s24_best_fit ] ->
                                       unit)
                                   =
                                   fun (x2715 : 'tags this) ->
                                     fun
                                       (x2716 :
                                         [ `L_s23_basic  | `L_s24_best_fit ])
                                       ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2715)
                                         "formatMatcher"
                                         (match x2716 with
                                          | `L_s23_basic ->
                                              Ojs.string_to_js "basic"
                                          | `L_s24_best_fit ->
                                              Ojs.string_to_js "best fit")
                                 let (get_hour12 : 'tags this -> bool) =
                                   fun (x2718 : 'tags this) ->
                                     Ojs.bool_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2718)
                                          "hour12")
                                 let (set_hour12 :
                                   'tags this -> bool -> unit) =
                                   fun (x2720 : 'tags this) ->
                                     fun (x2721 : bool) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2720)
                                         "hour12" (Ojs.bool_to_js x2721)
                                 let (get_timeZone : 'tags this -> string) =
                                   fun (x2723 : 'tags this) ->
                                     Ojs.string_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2723)
                                          "timeZone")
                                 let (set_timeZone :
                                   'tags this -> string -> unit) =
                                   fun (x2725 : 'tags this) ->
                                     fun (x2726 : string) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2725)
                                         "timeZone" (Ojs.string_to_js x2726)
                                 let cast_from = Obj.magic
                               end
                             module DateTimeFormat =
                               struct
                                 type t = [ `Intl_DateTimeFormat ] intf
                                 let rec t_of_js : Ojs.t -> t = Obj.magic
                                 and t_to_js : t -> Ojs.t = Obj.magic
                                 type t_0 = t
                                 let rec t_0_of_js : Ojs.t -> t_0 =
                                   fun (x2729 : Ojs.t) -> t_of_js x2729
                                 and t_0_to_js : t_0 -> Ojs.t =
                                   fun (x2728 : t) -> t_to_js x2728
                                 type tags = [ `Intl_DateTimeFormat ]
                                 type tags_0 = tags
                                 type 'tags this =
                                   'tags intf constraint 'tags =
                                               [> `Intl_DateTimeFormat ]
                                 let rec this_of_js :
                                   'tags .
                                     (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
                                   = fun (type __tags) ->
                                   fun (__tags_of_js : Ojs.t -> __tags) ->
                                     fun (x2732 : Ojs.t) ->
                                       intf_of_js __tags_of_js x2732
                                 and this_to_js :
                                   'tags .
                                     ('tags -> Ojs.t) -> 'tags this -> Ojs.t
                                   = fun (type __tags) ->
                                   fun (__tags_to_js : __tags -> Ojs.t) ->
                                     fun (x2730 : __tags intf) ->
                                       intf_to_js __tags_to_js x2730
                                 let (formatToParts :
                                   'tags this ->
                                     ?date:Date.t or_number ->
                                       unit -> DateTimeFormatPart.t list)
                                   =
                                   fun (x2738 : 'tags this) ->
                                     fun
                                       ?date:(x2734 :
                                               Date.t or_number option)
                                       ->
                                       fun () ->
                                         Ojs.list_of_js
                                           DateTimeFormatPart.t_of_js
                                           (let x2740 =
                                              this_to_js Obj.magic x2738 in
                                            Ojs.call
                                              (Ojs.get_prop_ascii x2740
                                                 "formatToParts") "apply"
                                              [|x2740;((let x2735 =
                                                          Ojs.new_obj
                                                            (Ojs.get_prop_ascii
                                                               Ojs.global
                                                               "Array") 
                                                            [||] in
                                                        (match x2734 with
                                                         | Some x2736 ->
                                                             ignore
                                                               (Ojs.call
                                                                  x2735
                                                                  "push"
                                                                  [|(
                                                                    or_number_to_js
                                                                    Date.t_to_js
                                                                    x2736)|])
                                                         | None -> ());
                                                        x2735))|])
                                 let (format :
                                   'tags this ->
                                     ?date:Date.t or_number -> unit -> string)
                                   =
                                   fun (x2746 : 'tags this) ->
                                     fun
                                       ?date:(x2742 :
                                               Date.t or_number option)
                                       ->
                                       fun () ->
                                         Ojs.string_of_js
                                           (let x2748 =
                                              this_to_js Obj.magic x2746 in
                                            Ojs.call
                                              (Ojs.get_prop_ascii x2748
                                                 "format") "apply"
                                              [|x2748;((let x2743 =
                                                          Ojs.new_obj
                                                            (Ojs.get_prop_ascii
                                                               Ojs.global
                                                               "Array") 
                                                            [||] in
                                                        (match x2742 with
                                                         | Some x2744 ->
                                                             ignore
                                                               (Ojs.call
                                                                  x2743
                                                                  "push"
                                                                  [|(
                                                                    or_number_to_js
                                                                    Date.t_to_js
                                                                    x2744)|])
                                                         | None -> ());
                                                        x2743))|])
                                 let (resolvedOptions :
                                   'tags this ->
                                     ResolvedDateTimeFormatOptions.t)
                                   =
                                   fun (x2749 : 'tags this) ->
                                     ResolvedDateTimeFormatOptions.t_of_js
                                       (Ojs.call (this_to_js Obj.magic x2749)
                                          "resolvedOptions" [||])
                                 let cast_from = Obj.magic
                                 let (create :
                                   ?locales:string list or_string ->
                                     ?options:DateTimeFormatOptions.t ->
                                       unit -> t)
                                   =
                                   fun
                                     ?locales:(x2751 :
                                                string list or_string option)
                                     ->
                                     fun
                                       ?options:(x2752 :
                                                  DateTimeFormatOptions.t
                                                    option)
                                       ->
                                       fun () ->
                                         t_of_js
                                           (Ojs.new_obj_arr
                                              (Ojs.get_prop_ascii
                                                 (Ojs.get_prop_ascii
                                                    Ojs.global "Intl")
                                                 "DateTimeFormat")
                                              (let x2753 =
                                                 Ojs.new_obj
                                                   (Ojs.get_prop_ascii
                                                      Ojs.global "Array")
                                                   [||] in
                                               (match x2751 with
                                                | Some x2755 ->
                                                    ignore
                                                      (Ojs.call x2753 "push"
                                                         [|(or_string_to_js
                                                              (fun
                                                                 (x2756 :
                                                                   string
                                                                    list)
                                                                 ->
                                                                 Ojs.list_to_js
                                                                   Ojs.string_to_js
                                                                   x2756)
                                                              x2755)|])
                                                | None -> ());
                                               (match x2752 with
                                                | Some x2754 ->
                                                    ignore
                                                      (Ojs.call x2753 "push"
                                                         [|(DateTimeFormatOptions.t_to_js
                                                              x2754)|])
                                                | None -> ());
                                               x2753))
                                 let (invoke :
                                   ?locales:string list or_string ->
                                     ?options:DateTimeFormatOptions.t ->
                                       unit -> t)
                                   =
                                   fun
                                     ?locales:(x2758 :
                                                string list or_string option)
                                     ->
                                     fun
                                       ?options:(x2759 :
                                                  DateTimeFormatOptions.t
                                                    option)
                                       ->
                                       fun () ->
                                         t_of_js
                                           (Ojs.call
                                              (Ojs.get_prop_ascii
                                                 (Ojs.get_prop_ascii
                                                    Ojs.global "Intl")
                                                 "DateTimeFormat") "apply"
                                              [|Ojs.null;((let x2760 =
                                                             Ojs.new_obj
                                                               (Ojs.get_prop_ascii
                                                                  Ojs.global
                                                                  "Array")
                                                               [||] in
                                                           (match x2758 with
                                                            | Some x2762 ->
                                                                ignore
                                                                  (Ojs.call
                                                                    x2760
                                                                    "push"
                                                                    [|(
                                                                    or_string_to_js
                                                                    (fun
                                                                    (x2763 :
                                                                    string
                                                                    list) ->
                                                                    Ojs.list_to_js
                                                                    Ojs.string_to_js
                                                                    x2763)
                                                                    x2762)|])
                                                            | None -> ());
                                                           (match x2759 with
                                                            | Some x2761 ->
                                                                ignore
                                                                  (Ojs.call
                                                                    x2760
                                                                    "push"
                                                                    [|(
                                                                    DateTimeFormatOptions.t_to_js
                                                                    x2761)|])
                                                            | None -> ());
                                                           x2760))|])
                                 let (supportedLocalesOf :
                                   locales:string list or_string ->
                                     ?options:DateTimeFormatOptions.t ->
                                       unit -> string list)
                                   =
                                   fun
                                     ~locales:(x2765 : string list or_string)
                                     ->
                                     fun
                                       ?options:(x2766 :
                                                  DateTimeFormatOptions.t
                                                    option)
                                       ->
                                       fun () ->
                                         Ojs.list_of_js Ojs.string_of_js
                                           (let x2771 =
                                              Ojs.get_prop_ascii
                                                (Ojs.get_prop_ascii
                                                   Ojs.global "Intl")
                                                "DateTimeFormat" in
                                            Ojs.call
                                              (Ojs.get_prop_ascii x2771
                                                 "supportedLocalesOf")
                                              "apply"
                                              [|x2771;((let x2767 =
                                                          Ojs.new_obj
                                                            (Ojs.get_prop_ascii
                                                               Ojs.global
                                                               "Array") 
                                                            [||] in
                                                        ignore
                                                          (Ojs.call x2767
                                                             "push"
                                                             [|(or_string_to_js
                                                                  (fun
                                                                    (x2769 :
                                                                    string
                                                                    list) ->
                                                                    Ojs.list_to_js
                                                                    Ojs.string_to_js
                                                                    x2769)
                                                                  x2765)|]);
                                                        (match x2766 with
                                                         | Some x2768 ->
                                                             ignore
                                                               (Ojs.call
                                                                  x2767
                                                                  "push"
                                                                  [|(
                                                                    DateTimeFormatOptions.t_to_js
                                                                    x2768)|])
                                                         | None -> ());
                                                        x2767))|])
                               end
                             module ResolvedCollatorOptions =
                               struct
                                 type t =
                                   [ `Intl_ResolvedCollatorOptions ] intf
                                 let rec t_of_js : Ojs.t -> t = Obj.magic
                                 and t_to_js : t -> Ojs.t = Obj.magic
                                 type t_0 = t
                                 let rec t_0_of_js : Ojs.t -> t_0 =
                                   fun (x2774 : Ojs.t) -> t_of_js x2774
                                 and t_0_to_js : t_0 -> Ojs.t =
                                   fun (x2773 : t) -> t_to_js x2773
                                 type tags =
                                   [ `Intl_ResolvedCollatorOptions ]
                                 type tags_0 = tags
                                 type 'tags this =
                                   'tags intf constraint 'tags =
                                               [>
                                                 `Intl_ResolvedCollatorOptions
                                                   ]
                                 let rec this_of_js :
                                   'tags .
                                     (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
                                   = fun (type __tags) ->
                                   fun (__tags_of_js : Ojs.t -> __tags) ->
                                     fun (x2777 : Ojs.t) ->
                                       intf_of_js __tags_of_js x2777
                                 and this_to_js :
                                   'tags .
                                     ('tags -> Ojs.t) -> 'tags this -> Ojs.t
                                   = fun (type __tags) ->
                                   fun (__tags_to_js : __tags -> Ojs.t) ->
                                     fun (x2775 : __tags intf) ->
                                       intf_to_js __tags_to_js x2775
                                 let (get_locale : 'tags this -> string) =
                                   fun (x2779 : 'tags this) ->
                                     Ojs.string_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2779)
                                          "locale")
                                 let (set_locale :
                                   'tags this -> string -> unit) =
                                   fun (x2781 : 'tags this) ->
                                     fun (x2782 : string) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2781)
                                         "locale" (Ojs.string_to_js x2782)
                                 let (get_usage : 'tags this -> string) =
                                   fun (x2784 : 'tags this) ->
                                     Ojs.string_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2784)
                                          "usage")
                                 let (set_usage :
                                   'tags this -> string -> unit) =
                                   fun (x2786 : 'tags this) ->
                                     fun (x2787 : string) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2786) "usage"
                                         (Ojs.string_to_js x2787)
                                 let (get_sensitivity : 'tags this -> string)
                                   =
                                   fun (x2789 : 'tags this) ->
                                     Ojs.string_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2789)
                                          "sensitivity")
                                 let (set_sensitivity :
                                   'tags this -> string -> unit) =
                                   fun (x2791 : 'tags this) ->
                                     fun (x2792 : string) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2791)
                                         "sensitivity"
                                         (Ojs.string_to_js x2792)
                                 let (get_ignorePunctuation :
                                   'tags this -> bool) =
                                   fun (x2794 : 'tags this) ->
                                     Ojs.bool_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2794)
                                          "ignorePunctuation")
                                 let (set_ignorePunctuation :
                                   'tags this -> bool -> unit) =
                                   fun (x2796 : 'tags this) ->
                                     fun (x2797 : bool) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2796)
                                         "ignorePunctuation"
                                         (Ojs.bool_to_js x2797)
                                 let (get_collation : 'tags this -> string) =
                                   fun (x2799 : 'tags this) ->
                                     Ojs.string_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2799)
                                          "collation")
                                 let (set_collation :
                                   'tags this -> string -> unit) =
                                   fun (x2801 : 'tags this) ->
                                     fun (x2802 : string) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2801)
                                         "collation" (Ojs.string_to_js x2802)
                                 let (get_caseFirst : 'tags this -> string) =
                                   fun (x2804 : 'tags this) ->
                                     Ojs.string_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2804)
                                          "caseFirst")
                                 let (set_caseFirst :
                                   'tags this -> string -> unit) =
                                   fun (x2806 : 'tags this) ->
                                     fun (x2807 : string) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2806)
                                         "caseFirst" (Ojs.string_to_js x2807)
                                 let (get_numeric : 'tags this -> bool) =
                                   fun (x2809 : 'tags this) ->
                                     Ojs.bool_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2809)
                                          "numeric")
                                 let (set_numeric :
                                   'tags this -> bool -> unit) =
                                   fun (x2811 : 'tags this) ->
                                     fun (x2812 : bool) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2811)
                                         "numeric" (Ojs.bool_to_js x2812)
                                 let cast_from = Obj.magic
                               end
                             module CollatorOptions =
                               struct
                                 type t = [ `Intl_CollatorOptions ] intf
                                 let rec t_of_js : Ojs.t -> t = Obj.magic
                                 and t_to_js : t -> Ojs.t = Obj.magic
                                 type t_0 = t
                                 let rec t_0_of_js : Ojs.t -> t_0 =
                                   fun (x2815 : Ojs.t) -> t_of_js x2815
                                 and t_0_to_js : t_0 -> Ojs.t =
                                   fun (x2814 : t) -> t_to_js x2814
                                 type tags = [ `Intl_CollatorOptions ]
                                 type tags_0 = tags
                                 type 'tags this =
                                   'tags intf constraint 'tags =
                                               [> `Intl_CollatorOptions ]
                                 let rec this_of_js :
                                   'tags .
                                     (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
                                   = fun (type __tags) ->
                                   fun (__tags_of_js : Ojs.t -> __tags) ->
                                     fun (x2818 : Ojs.t) ->
                                       intf_of_js __tags_of_js x2818
                                 and this_to_js :
                                   'tags .
                                     ('tags -> Ojs.t) -> 'tags this -> Ojs.t
                                   = fun (type __tags) ->
                                   fun (__tags_to_js : __tags -> Ojs.t) ->
                                     fun (x2816 : __tags intf) ->
                                       intf_to_js __tags_to_js x2816
                                 let (get_usage : 'tags this -> string) =
                                   fun (x2820 : 'tags this) ->
                                     Ojs.string_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2820)
                                          "usage")
                                 let (set_usage :
                                   'tags this -> string -> unit) =
                                   fun (x2822 : 'tags this) ->
                                     fun (x2823 : string) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2822) "usage"
                                         (Ojs.string_to_js x2823)
                                 let (get_localeMatcher :
                                   'tags this -> string) =
                                   fun (x2825 : 'tags this) ->
                                     Ojs.string_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2825)
                                          "localeMatcher")
                                 let (set_localeMatcher :
                                   'tags this -> string -> unit) =
                                   fun (x2827 : 'tags this) ->
                                     fun (x2828 : string) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2827)
                                         "localeMatcher"
                                         (Ojs.string_to_js x2828)
                                 let (get_numeric : 'tags this -> bool) =
                                   fun (x2830 : 'tags this) ->
                                     Ojs.bool_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2830)
                                          "numeric")
                                 let (set_numeric :
                                   'tags this -> bool -> unit) =
                                   fun (x2832 : 'tags this) ->
                                     fun (x2833 : bool) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2832)
                                         "numeric" (Ojs.bool_to_js x2833)
                                 let (get_caseFirst : 'tags this -> string) =
                                   fun (x2835 : 'tags this) ->
                                     Ojs.string_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2835)
                                          "caseFirst")
                                 let (set_caseFirst :
                                   'tags this -> string -> unit) =
                                   fun (x2837 : 'tags this) ->
                                     fun (x2838 : string) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2837)
                                         "caseFirst" (Ojs.string_to_js x2838)
                                 let (get_sensitivity : 'tags this -> string)
                                   =
                                   fun (x2840 : 'tags this) ->
                                     Ojs.string_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2840)
                                          "sensitivity")
                                 let (set_sensitivity :
                                   'tags this -> string -> unit) =
                                   fun (x2842 : 'tags this) ->
                                     fun (x2843 : string) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2842)
                                         "sensitivity"
                                         (Ojs.string_to_js x2843)
                                 let (get_ignorePunctuation :
                                   'tags this -> bool) =
                                   fun (x2845 : 'tags this) ->
                                     Ojs.bool_of_js
                                       (Ojs.get_prop_ascii
                                          (this_to_js Obj.magic x2845)
                                          "ignorePunctuation")
                                 let (set_ignorePunctuation :
                                   'tags this -> bool -> unit) =
                                   fun (x2847 : 'tags this) ->
                                     fun (x2848 : bool) ->
                                       Ojs.set_prop_ascii
                                         (this_to_js Obj.magic x2847)
                                         "ignorePunctuation"
                                         (Ojs.bool_to_js x2848)
                                 let cast_from = Obj.magic
                               end
                             module Collator =
                               struct
                                 type t = [ `Intl_Collator ] intf
                                 let rec t_of_js : Ojs.t -> t = Obj.magic
                                 and t_to_js : t -> Ojs.t = Obj.magic
                                 type t_0 = t
                                 let rec t_0_of_js : Ojs.t -> t_0 =
                                   fun (x2851 : Ojs.t) -> t_of_js x2851
                                 and t_0_to_js : t_0 -> Ojs.t =
                                   fun (x2850 : t) -> t_to_js x2850
                                 type tags = [ `Intl_Collator ]
                                 type tags_0 = tags
                                 type 'tags this =
                                   'tags intf constraint 'tags =
                                               [> `Intl_Collator ]
                                 let rec this_of_js :
                                   'tags .
                                     (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
                                   = fun (type __tags) ->
                                   fun (__tags_of_js : Ojs.t -> __tags) ->
                                     fun (x2854 : Ojs.t) ->
                                       intf_of_js __tags_of_js x2854
                                 and this_to_js :
                                   'tags .
                                     ('tags -> Ojs.t) -> 'tags this -> Ojs.t
                                   = fun (type __tags) ->
                                   fun (__tags_to_js : __tags -> Ojs.t) ->
                                     fun (x2852 : __tags intf) ->
                                       intf_to_js __tags_to_js x2852
                                 let (compare :
                                   'tags this ->
                                     x:string -> y:string -> float)
                                   =
                                   fun (x2858 : 'tags this) ->
                                     fun ~x:(x2856 : string) ->
                                       fun ~y:(x2857 : string) ->
                                         Ojs.float_of_js
                                           (Ojs.call
                                              (this_to_js Obj.magic x2858)
                                              "compare"
                                              [|(Ojs.string_to_js x2856);(
                                                Ojs.string_to_js x2857)|])
                                 let (resolvedOptions :
                                   'tags this -> ResolvedCollatorOptions.t) =
                                   fun (x2860 : 'tags this) ->
                                     ResolvedCollatorOptions.t_of_js
                                       (Ojs.call (this_to_js Obj.magic x2860)
                                          "resolvedOptions" [||])
                                 let cast_from = Obj.magic
                                 let (create :
                                   ?locales:string list or_string ->
                                     ?options:CollatorOptions.t -> unit -> t)
                                   =
                                   fun
                                     ?locales:(x2862 :
                                                string list or_string option)
                                     ->
                                     fun
                                       ?options:(x2863 :
                                                  CollatorOptions.t option)
                                       ->
                                       fun () ->
                                         t_of_js
                                           (Ojs.new_obj_arr
                                              (Ojs.get_prop_ascii
                                                 (Ojs.get_prop_ascii
                                                    Ojs.global "Intl")
                                                 "Collator")
                                              (let x2864 =
                                                 Ojs.new_obj
                                                   (Ojs.get_prop_ascii
                                                      Ojs.global "Array")
                                                   [||] in
                                               (match x2862 with
                                                | Some x2866 ->
                                                    ignore
                                                      (Ojs.call x2864 "push"
                                                         [|(or_string_to_js
                                                              (fun
                                                                 (x2867 :
                                                                   string
                                                                    list)
                                                                 ->
                                                                 Ojs.list_to_js
                                                                   Ojs.string_to_js
                                                                   x2867)
                                                              x2866)|])
                                                | None -> ());
                                               (match x2863 with
                                                | Some x2865 ->
                                                    ignore
                                                      (Ojs.call x2864 "push"
                                                         [|(CollatorOptions.t_to_js
                                                              x2865)|])
                                                | None -> ());
                                               x2864))
                                 let (invoke :
                                   ?locales:string list or_string ->
                                     ?options:CollatorOptions.t -> unit -> t)
                                   =
                                   fun
                                     ?locales:(x2869 :
                                                string list or_string option)
                                     ->
                                     fun
                                       ?options:(x2870 :
                                                  CollatorOptions.t option)
                                       ->
                                       fun () ->
                                         t_of_js
                                           (Ojs.call
                                              (Ojs.get_prop_ascii
                                                 (Ojs.get_prop_ascii
                                                    Ojs.global "Intl")
                                                 "Collator") "apply"
                                              [|Ojs.null;((let x2871 =
                                                             Ojs.new_obj
                                                               (Ojs.get_prop_ascii
                                                                  Ojs.global
                                                                  "Array")
                                                               [||] in
                                                           (match x2869 with
                                                            | Some x2873 ->
                                                                ignore
                                                                  (Ojs.call
                                                                    x2871
                                                                    "push"
                                                                    [|(
                                                                    or_string_to_js
                                                                    (fun
                                                                    (x2874 :
                                                                    string
                                                                    list) ->
                                                                    Ojs.list_to_js
                                                                    Ojs.string_to_js
                                                                    x2874)
                                                                    x2873)|])
                                                            | None -> ());
                                                           (match x2870 with
                                                            | Some x2872 ->
                                                                ignore
                                                                  (Ojs.call
                                                                    x2871
                                                                    "push"
                                                                    [|(
                                                                    CollatorOptions.t_to_js
                                                                    x2872)|])
                                                            | None -> ());
                                                           x2871))|])
                                 let (supportedLocalesOf :
                                   locales:string list or_string ->
                                     ?options:CollatorOptions.t ->
                                       unit -> string list)
                                   =
                                   fun
                                     ~locales:(x2876 : string list or_string)
                                     ->
                                     fun
                                       ?options:(x2877 :
                                                  CollatorOptions.t option)
                                       ->
                                       fun () ->
                                         Ojs.list_of_js Ojs.string_of_js
                                           (let x2882 =
                                              Ojs.get_prop_ascii
                                                (Ojs.get_prop_ascii
                                                   Ojs.global "Intl")
                                                "Collator" in
                                            Ojs.call
                                              (Ojs.get_prop_ascii x2882
                                                 "supportedLocalesOf")
                                              "apply"
                                              [|x2882;((let x2878 =
                                                          Ojs.new_obj
                                                            (Ojs.get_prop_ascii
                                                               Ojs.global
                                                               "Array") 
                                                            [||] in
                                                        ignore
                                                          (Ojs.call x2878
                                                             "push"
                                                             [|(or_string_to_js
                                                                  (fun
                                                                    (x2880 :
                                                                    string
                                                                    list) ->
                                                                    Ojs.list_to_js
                                                                    Ojs.string_to_js
                                                                    x2880)
                                                                  x2876)|]);
                                                        (match x2877 with
                                                         | Some x2879 ->
                                                             ignore
                                                               (Ojs.call
                                                                  x2878
                                                                  "push"
                                                                  [|(
                                                                    CollatorOptions.t_to_js
                                                                    x2879)|])
                                                         | None -> ());
                                                        x2878))|])
                               end
                             let (pluralRules :
                               unit -> AnonymousInterface8.t) =
                               fun () ->
                                 AnonymousInterface8.t_of_js
                                   (Ojs.get_prop_ascii
                                      (Ojs.get_prop_ascii Ojs.global "Intl")
                                      "PluralRules")
                             let (collator : unit -> AnonymousInterface5.t) =
                               fun () ->
                                 AnonymousInterface5.t_of_js
                                   (Ojs.get_prop_ascii
                                      (Ojs.get_prop_ascii Ojs.global "Intl")
                                      "Collator")
                             let (numberFormat :
                               unit -> AnonymousInterface7.t) =
                               fun () ->
                                 AnonymousInterface7.t_of_js
                                   (Ojs.get_prop_ascii
                                      (Ojs.get_prop_ascii Ojs.global "Intl")
                                      "NumberFormat")
                             let (dateTimeFormat :
                               unit -> AnonymousInterface6.t) =
                               fun () ->
                                 AnonymousInterface6.t_of_js
                                   (Ojs.get_prop_ascii
                                      (Ojs.get_prop_ascii Ojs.global "Intl")
                                      "DateTimeFormat")
                             let (relativeTimeFormat :
                               unit -> AnonymousInterface16.t) =
                               fun () ->
                                 AnonymousInterface16.t_of_js
                                   (Ojs.get_prop_ascii
                                      (Ojs.get_prop_ascii Ojs.global "Intl")
                                      "RelativeTimeFormat")
                           end
module AnonymousInterface13 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x2885 : Ojs.t) -> x2885
    and t_to_js : t -> Ojs.t = fun (x2884 : Ojs.t) -> x2884
  end
module AnonymousInterface12 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x2887 : Ojs.t) -> x2887
    and t_to_js : t -> Ojs.t = fun (x2886 : Ojs.t) -> x2886
  end
module AnonymousInterface11 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x2889 : Ojs.t) -> x2889
    and t_to_js : t -> Ojs.t = fun (x2888 : Ojs.t) -> x2888
  end
module AnonymousInterface10 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x2891 : Ojs.t) -> x2891
    and t_to_js : t -> Ojs.t = fun (x2890 : Ojs.t) -> x2890
  end
module String =
  struct
    type t =
      [ `ArrayLike of string  | `IterableIterator of string 
      | `Iterator of (string * any * never or_undefined)  | `String ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x2893 : Ojs.t) -> t_of_js x2893
    and t_0_to_js : t_0 -> Ojs.t = fun (x2892 : t) -> t_to_js x2892
    type tags =
      [ `ArrayLike of string  | `IterableIterator of string 
      | `Iterator of (string * any * never or_undefined)  | `String ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `String ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x2896 : Ojs.t) -> intf_of_js __tags_of_js x2896
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x2894 : __tags intf) -> intf_to_js __tags_to_js x2894
    let (trimEnd : 'tags this -> string) =
      fun (x2898 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x2898) "trimEnd" [||])
    let (trimStart : 'tags this -> string) =
      fun (x2900 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x2900) "trimStart" [||])
    let (trimLeft : 'tags this -> string) =
      fun (x2902 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x2902) "trimLeft" [||])
    let (trimRight : 'tags this -> string) =
      fun (x2904 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x2904) "trimRight" [||])
    let (codePointAt : 'tags this -> pos:float -> float or_undefined) =
      fun (x2907 : 'tags this) ->
        fun ~pos:(x2906 : float) ->
          or_undefined_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x2907) "codePointAt"
               [|(Ojs.float_to_js x2906)|])
    let (includes :
      'tags this -> searchString:string -> ?position:float -> unit -> bool) =
      fun (x2914 : 'tags this) ->
        fun ~searchString:(x2910 : string) ->
          fun ?position:(x2911 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x2916 = this_to_js Obj.magic x2914 in
                 Ojs.call (Ojs.get_prop_ascii x2916 "includes") "apply"
                   [|x2916;((let x2912 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2912 "push"
                                  [|(Ojs.string_to_js x2910)|]);
                             (match x2911 with
                              | Some x2913 ->
                                  ignore
                                    (Ojs.call x2912 "push"
                                       [|(Ojs.float_to_js x2913)|])
                              | None -> ());
                             x2912))|])
    let (endsWith :
      'tags this -> searchString:string -> ?endPosition:float -> unit -> bool)
      =
      fun (x2921 : 'tags this) ->
        fun ~searchString:(x2917 : string) ->
          fun ?endPosition:(x2918 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x2923 = this_to_js Obj.magic x2921 in
                 Ojs.call (Ojs.get_prop_ascii x2923 "endsWith") "apply"
                   [|x2923;((let x2919 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2919 "push"
                                  [|(Ojs.string_to_js x2917)|]);
                             (match x2918 with
                              | Some x2920 ->
                                  ignore
                                    (Ojs.call x2919 "push"
                                       [|(Ojs.float_to_js x2920)|])
                              | None -> ());
                             x2919))|])
    let (normalize :
      'tags this ->
        form:[ `L_s11_NFC  | `L_s12_NFD  | `L_s13_NFKC  | `L_s14_NFKD ] ->
          string)
      =
      fun (x2925 : 'tags this) ->
        fun
          ~form:(x2924 :
                  [ `L_s11_NFC  | `L_s12_NFD  | `L_s13_NFKC  | `L_s14_NFKD ])
          ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x2925) "normalize"
               [|((match x2924 with
                   | `L_s11_NFC -> Ojs.string_to_js "NFC"
                   | `L_s12_NFD -> Ojs.string_to_js "NFD"
                   | `L_s13_NFKC -> Ojs.string_to_js "NFKC"
                   | `L_s14_NFKD -> Ojs.string_to_js "NFKD"))|])
    let (normalize' : 'tags this -> ?form:string -> unit -> string) =
      fun (x2930 : 'tags this) ->
        fun ?form:(x2927 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x2932 = this_to_js Obj.magic x2930 in
               Ojs.call (Ojs.get_prop_ascii x2932 "normalize") "apply"
                 [|x2932;((let x2928 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x2927 with
                            | Some x2929 ->
                                ignore
                                  (Ojs.call x2928 "push"
                                     [|(Ojs.string_to_js x2929)|])
                            | None -> ());
                           x2928))|])
    let (repeat : 'tags this -> count:float -> string) =
      fun (x2934 : 'tags this) ->
        fun ~count:(x2933 : float) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x2934) "repeat"
               [|(Ojs.float_to_js x2933)|])
    let (startsWith :
      'tags this -> searchString:string -> ?position:float -> unit -> bool) =
      fun (x2940 : 'tags this) ->
        fun ~searchString:(x2936 : string) ->
          fun ?position:(x2937 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x2942 = this_to_js Obj.magic x2940 in
                 Ojs.call (Ojs.get_prop_ascii x2942 "startsWith") "apply"
                   [|x2942;((let x2938 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x2938 "push"
                                  [|(Ojs.string_to_js x2936)|]);
                             (match x2937 with
                              | Some x2939 ->
                                  ignore
                                    (Ojs.call x2938 "push"
                                       [|(Ojs.float_to_js x2939)|])
                              | None -> ());
                             x2938))|])
    let (anchor : 'tags this -> name:string -> string) =
      fun (x2944 : 'tags this) ->
        fun ~name:(x2943 : string) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x2944) "anchor"
               [|(Ojs.string_to_js x2943)|])
    let (big : 'tags this -> string) =
      fun (x2946 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x2946) "big" [||])
    let (blink : 'tags this -> string) =
      fun (x2948 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x2948) "blink" [||])
    let (bold : 'tags this -> string) =
      fun (x2950 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x2950) "bold" [||])
    let (fixed : 'tags this -> string) =
      fun (x2952 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x2952) "fixed" [||])
    let (fontcolor : 'tags this -> color:string -> string) =
      fun (x2955 : 'tags this) ->
        fun ~color:(x2954 : string) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x2955) "fontcolor"
               [|(Ojs.string_to_js x2954)|])
    let (fontsize : 'tags this -> size:float -> string) =
      fun (x2958 : 'tags this) ->
        fun ~size:(x2957 : float) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x2958) "fontsize"
               [|(Ojs.float_to_js x2957)|])
    let (fontsize' : 'tags this -> size:string -> string) =
      fun (x2961 : 'tags this) ->
        fun ~size:(x2960 : string) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x2961) "fontsize"
               [|(Ojs.string_to_js x2960)|])
    let (italics : 'tags this -> string) =
      fun (x2963 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x2963) "italics" [||])
    let (link : 'tags this -> url:string -> string) =
      fun (x2966 : 'tags this) ->
        fun ~url:(x2965 : string) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x2966) "link"
               [|(Ojs.string_to_js x2965)|])
    let (small : 'tags this -> string) =
      fun (x2968 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x2968) "small" [||])
    let (strike : 'tags this -> string) =
      fun (x2970 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x2970) "strike" [||])
    let (sub : 'tags this -> string) =
      fun (x2972 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x2972) "sub" [||])
    let (sup : 'tags this -> string) =
      fun (x2974 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x2974) "sup" [||])
    let (localeCompare :
      'tags this ->
        that:string ->
          ?locales:string list or_string ->
            ?options:Intl.CollatorOptions.t -> unit -> float)
      =
      fun (x2984 : 'tags this) ->
        fun ~that:(x2976 : string) ->
          fun ?locales:(x2977 : string list or_string option) ->
            fun ?options:(x2978 : Intl.CollatorOptions.t option) ->
              fun () ->
                Ojs.float_of_js
                  (let x2986 = this_to_js Obj.magic x2984 in
                   Ojs.call (Ojs.get_prop_ascii x2986 "localeCompare")
                     "apply"
                     [|x2986;((let x2979 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2979 "push"
                                    [|(Ojs.string_to_js x2976)|]);
                               (match x2977 with
                                | Some x2981 ->
                                    ignore
                                      (Ojs.call x2979 "push"
                                         [|(or_string_to_js
                                              (fun (x2982 : string list) ->
                                                 Ojs.list_to_js
                                                   Ojs.string_to_js x2982)
                                              x2981)|])
                                | None -> ());
                               (match x2978 with
                                | Some x2980 ->
                                    ignore
                                      (Ojs.call x2979 "push"
                                         [|(Intl.CollatorOptions.t_to_js
                                              x2980)|])
                                | None -> ());
                               x2979))|])
    let (toString : 'tags this -> string) =
      fun (x2987 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x2987) "toString" [||])
    let (charAt : 'tags this -> pos:float -> string) =
      fun (x2990 : 'tags this) ->
        fun ~pos:(x2989 : float) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x2990) "charAt"
               [|(Ojs.float_to_js x2989)|])
    let (charCodeAt : 'tags this -> index:float -> float) =
      fun (x2993 : 'tags this) ->
        fun ~index:(x2992 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x2993) "charCodeAt"
               [|(Ojs.float_to_js x2992)|])
    let (concat : 'tags this -> strings:string list -> string) =
      fun (x2998 : 'tags this) ->
        fun ~strings:(x2995 : string list) ->
          Ojs.string_of_js
            (let x3000 = this_to_js Obj.magic x2998 in
             Ojs.call (Ojs.get_prop_ascii x3000 "concat") "apply"
               [|x3000;((let x2996 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x2997 : string) ->
                              ignore
                                (Ojs.call x2996 "push"
                                   [|(Ojs.string_to_js x2997)|])) x2995;
                         x2996))|])
    let (indexOf :
      'tags this -> searchString:string -> ?position:float -> unit -> float)
      =
      fun (x3005 : 'tags this) ->
        fun ~searchString:(x3001 : string) ->
          fun ?position:(x3002 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x3007 = this_to_js Obj.magic x3005 in
                 Ojs.call (Ojs.get_prop_ascii x3007 "indexOf") "apply"
                   [|x3007;((let x3003 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3003 "push"
                                  [|(Ojs.string_to_js x3001)|]);
                             (match x3002 with
                              | Some x3004 ->
                                  ignore
                                    (Ojs.call x3003 "push"
                                       [|(Ojs.float_to_js x3004)|])
                              | None -> ());
                             x3003))|])
    let (lastIndexOf :
      'tags this -> searchString:string -> ?position:float -> unit -> float)
      =
      fun (x3012 : 'tags this) ->
        fun ~searchString:(x3008 : string) ->
          fun ?position:(x3009 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x3014 = this_to_js Obj.magic x3012 in
                 Ojs.call (Ojs.get_prop_ascii x3014 "lastIndexOf") "apply"
                   [|x3014;((let x3010 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3010 "push"
                                  [|(Ojs.string_to_js x3008)|]);
                             (match x3009 with
                              | Some x3011 ->
                                  ignore
                                    (Ojs.call x3010 "push"
                                       [|(Ojs.float_to_js x3011)|])
                              | None -> ());
                             x3010))|])
    let (localeCompare' : 'tags this -> that:string -> float) =
      fun (x3016 : 'tags this) ->
        fun ~that:(x3015 : string) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x3016) "localeCompare"
               [|(Ojs.string_to_js x3015)|])
    let (match_ :
      'tags this -> regexp:RegExp.t or_string -> RegExpMatchArray.t or_null)
      =
      fun (x3020 : 'tags this) ->
        fun ~regexp:(x3018 : RegExp.t or_string) ->
          or_null_of_js RegExpMatchArray.t_of_js
            (Ojs.call (this_to_js Obj.magic x3020) "match"
               [|(or_string_to_js RegExp.t_to_js x3018)|])
    let (replace :
      'tags this ->
        searchValue:RegExp.t or_string -> replaceValue:string -> string)
      =
      fun (x3026 : 'tags this) ->
        fun ~searchValue:(x3023 : RegExp.t or_string) ->
          fun ~replaceValue:(x3025 : string) ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3026) "replace"
                 [|(or_string_to_js RegExp.t_to_js x3023);(Ojs.string_to_js
                                                             x3025)|])
    let (replace' :
      'tags this ->
        searchValue:RegExp.t or_string ->
          replacer:(substring:string -> args:any list -> string) -> string)
      =
      fun (x3033 : 'tags this) ->
        fun ~searchValue:(x3028 : RegExp.t or_string) ->
          fun ~replacer:(x3030 : substring:string -> args:any list -> string)
            ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3033) "replace"
                 [|(or_string_to_js RegExp.t_to_js x3028);(Ojs.fun_to_js_args
                                                             (fun (x3031 : _)
                                                                ->
                                                                Ojs.string_to_js
                                                                  (x3030
                                                                    ~substring:(
                                                                    Ojs.string_of_js
                                                                    (Ojs.array_get
                                                                    x3031 0))
                                                                    ~args:(
                                                                    Ojs.list_of_js_from
                                                                    any_of_js
                                                                    x3031 1))))|])
    let (search : 'tags this -> regexp:RegExp.t or_string -> float) =
      fun (x3037 : 'tags this) ->
        fun ~regexp:(x3035 : RegExp.t or_string) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x3037) "search"
               [|(or_string_to_js RegExp.t_to_js x3035)|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> string)
      =
      fun (x3044 : 'tags this) ->
        fun ?start:(x3039 : float option) ->
          fun ?end_:(x3040 : float option) ->
            fun () ->
              Ojs.string_of_js
                (let x3046 = this_to_js Obj.magic x3044 in
                 Ojs.call (Ojs.get_prop_ascii x3046 "slice") "apply"
                   [|x3046;((let x3041 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x3039 with
                              | Some x3043 ->
                                  ignore
                                    (Ojs.call x3041 "push"
                                       [|(Ojs.float_to_js x3043)|])
                              | None -> ());
                             (match x3040 with
                              | Some x3042 ->
                                  ignore
                                    (Ojs.call x3041 "push"
                                       [|(Ojs.float_to_js x3042)|])
                              | None -> ());
                             x3041))|])
    let (split :
      'tags this ->
        separator:RegExp.t or_string -> ?limit:float -> unit -> string list)
      =
      fun (x3052 : 'tags this) ->
        fun ~separator:(x3047 : RegExp.t or_string) ->
          fun ?limit:(x3048 : float option) ->
            fun () ->
              Ojs.list_of_js Ojs.string_of_js
                (let x3054 = this_to_js Obj.magic x3052 in
                 Ojs.call (Ojs.get_prop_ascii x3054 "split") "apply"
                   [|x3054;((let x3049 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3049 "push"
                                  [|(or_string_to_js RegExp.t_to_js x3047)|]);
                             (match x3048 with
                              | Some x3050 ->
                                  ignore
                                    (Ojs.call x3049 "push"
                                       [|(Ojs.float_to_js x3050)|])
                              | None -> ());
                             x3049))|])
    let (substring :
      'tags this -> start:float -> ?end_:float -> unit -> string) =
      fun (x3060 : 'tags this) ->
        fun ~start:(x3056 : float) ->
          fun ?end_:(x3057 : float option) ->
            fun () ->
              Ojs.string_of_js
                (let x3062 = this_to_js Obj.magic x3060 in
                 Ojs.call (Ojs.get_prop_ascii x3062 "substring") "apply"
                   [|x3062;((let x3058 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3058 "push"
                                  [|(Ojs.float_to_js x3056)|]);
                             (match x3057 with
                              | Some x3059 ->
                                  ignore
                                    (Ojs.call x3058 "push"
                                       [|(Ojs.float_to_js x3059)|])
                              | None -> ());
                             x3058))|])
    let (toLowerCase : 'tags this -> string) =
      fun (x3063 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3063) "toLowerCase" [||])
    let (toLocaleLowerCase :
      'tags this -> ?locales:string list or_string -> unit -> string) =
      fun (x3070 : 'tags this) ->
        fun ?locales:(x3065 : string list or_string option) ->
          fun () ->
            Ojs.string_of_js
              (let x3072 = this_to_js Obj.magic x3070 in
               Ojs.call (Ojs.get_prop_ascii x3072 "toLocaleLowerCase")
                 "apply"
                 [|x3072;((let x3066 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3065 with
                            | Some x3067 ->
                                ignore
                                  (Ojs.call x3066 "push"
                                     [|(or_string_to_js
                                          (fun (x3068 : string list) ->
                                             Ojs.list_to_js Ojs.string_to_js
                                               x3068) x3067)|])
                            | None -> ());
                           x3066))|])
    let (toUpperCase : 'tags this -> string) =
      fun (x3073 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3073) "toUpperCase" [||])
    let (toLocaleUpperCase :
      'tags this -> ?locales:string list or_string -> unit -> string) =
      fun (x3080 : 'tags this) ->
        fun ?locales:(x3075 : string list or_string option) ->
          fun () ->
            Ojs.string_of_js
              (let x3082 = this_to_js Obj.magic x3080 in
               Ojs.call (Ojs.get_prop_ascii x3082 "toLocaleUpperCase")
                 "apply"
                 [|x3082;((let x3076 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3075 with
                            | Some x3077 ->
                                ignore
                                  (Ojs.call x3076 "push"
                                     [|(or_string_to_js
                                          (fun (x3078 : string list) ->
                                             Ojs.list_to_js Ojs.string_to_js
                                               x3078) x3077)|])
                            | None -> ());
                           x3076))|])
    let (trim : 'tags this -> string) =
      fun (x3083 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x3083) "trim" [||])
    let (get_length : 'tags this -> float) =
      fun (x3085 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3085) "length")
    let (substr :
      'tags this -> from:float -> ?length:float -> unit -> string) =
      fun (x3091 : 'tags this) ->
        fun ~from:(x3087 : float) ->
          fun ?length:(x3088 : float option) ->
            fun () ->
              Ojs.string_of_js
                (let x3093 = this_to_js Obj.magic x3091 in
                 Ojs.call (Ojs.get_prop_ascii x3093 "substr") "apply"
                   [|x3093;((let x3089 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3089 "push"
                                  [|(Ojs.float_to_js x3087)|]);
                             (match x3088 with
                              | Some x3090 ->
                                  ignore
                                    (Ojs.call x3089 "push"
                                       [|(Ojs.float_to_js x3090)|])
                              | None -> ());
                             x3089))|])
    let (valueOf : 'tags this -> string) =
      fun (x3094 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3094) "valueOf" [||])
    let (get : 'tags this -> float -> string) =
      fun (x3096 : 'tags this) ->
        fun (x3098 : float) ->
          Ojs.string_of_js
            (Ojs.get_prop (this_to_js Obj.magic x3096)
               (Ojs.float_to_js x3098))
    let (replaceAll :
      'tags this ->
        searchValue:RegExp.t or_string -> replaceValue:string -> string)
      =
      fun (x3102 : 'tags this) ->
        fun ~searchValue:(x3099 : RegExp.t or_string) ->
          fun ~replaceValue:(x3101 : string) ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3102) "replaceAll"
                 [|(or_string_to_js RegExp.t_to_js x3099);(Ojs.string_to_js
                                                             x3101)|])
    let (replaceAll' :
      'tags this ->
        searchValue:RegExp.t or_string ->
          replacer:(substring:string -> args:any list -> string) -> string)
      =
      fun (x3109 : 'tags this) ->
        fun ~searchValue:(x3104 : RegExp.t or_string) ->
          fun ~replacer:(x3106 : substring:string -> args:any list -> string)
            ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3109) "replaceAll"
                 [|(or_string_to_js RegExp.t_to_js x3104);(Ojs.fun_to_js_args
                                                             (fun (x3107 : _)
                                                                ->
                                                                Ojs.string_to_js
                                                                  (x3106
                                                                    ~substring:(
                                                                    Ojs.string_of_js
                                                                    (Ojs.array_get
                                                                    x3107 0))
                                                                    ~args:(
                                                                    Ojs.list_of_js_from
                                                                    any_of_js
                                                                    x3107 1))))|])
    let (replaceAll'' :
      'tags this ->
        searchValue:RegExp.t or_string -> replaceValue:string -> string)
      =
      fun (x3114 : 'tags this) ->
        fun ~searchValue:(x3111 : RegExp.t or_string) ->
          fun ~replaceValue:(x3113 : string) ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3114) "replaceAll"
                 [|(or_string_to_js RegExp.t_to_js x3111);(Ojs.string_to_js
                                                             x3113)|])
    let (replaceAll''' :
      'tags this ->
        searchValue:RegExp.t or_string ->
          replacer:(substring:string -> args:any list -> string) -> string)
      =
      fun (x3121 : 'tags this) ->
        fun ~searchValue:(x3116 : RegExp.t or_string) ->
          fun ~replacer:(x3118 : substring:string -> args:any list -> string)
            ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3121) "replaceAll"
                 [|(or_string_to_js RegExp.t_to_js x3116);(Ojs.fun_to_js_args
                                                             (fun (x3119 : _)
                                                                ->
                                                                Ojs.string_to_js
                                                                  (x3118
                                                                    ~substring:(
                                                                    Ojs.string_of_js
                                                                    (Ojs.array_get
                                                                    x3119 0))
                                                                    ~args:(
                                                                    Ojs.list_of_js_from
                                                                    any_of_js
                                                                    x3119 1))))|])
    let (padStart :
      'tags this -> maxLength:float -> ?fillString:string -> unit -> string)
      =
      fun (x3127 : 'tags this) ->
        fun ~maxLength:(x3123 : float) ->
          fun ?fillString:(x3124 : string option) ->
            fun () ->
              Ojs.string_of_js
                (let x3129 = this_to_js Obj.magic x3127 in
                 Ojs.call (Ojs.get_prop_ascii x3129 "padStart") "apply"
                   [|x3129;((let x3125 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3125 "push"
                                  [|(Ojs.float_to_js x3123)|]);
                             (match x3124 with
                              | Some x3126 ->
                                  ignore
                                    (Ojs.call x3125 "push"
                                       [|(Ojs.string_to_js x3126)|])
                              | None -> ());
                             x3125))|])
    let (padEnd :
      'tags this -> maxLength:float -> ?fillString:string -> unit -> string)
      =
      fun (x3134 : 'tags this) ->
        fun ~maxLength:(x3130 : float) ->
          fun ?fillString:(x3131 : string option) ->
            fun () ->
              Ojs.string_of_js
                (let x3136 = this_to_js Obj.magic x3134 in
                 Ojs.call (Ojs.get_prop_ascii x3136 "padEnd") "apply"
                   [|x3136;((let x3132 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3132 "push"
                                  [|(Ojs.float_to_js x3130)|]);
                             (match x3131 with
                              | Some x3133 ->
                                  ignore
                                    (Ojs.call x3132 "push"
                                       [|(Ojs.string_to_js x3133)|])
                              | None -> ());
                             x3132))|])
    let (matchAll :
      'tags this -> regexp:RegExp.t -> RegExpMatchArray.t IterableIterator.t)
      =
      fun (x3138 : 'tags this) ->
        fun ~regexp:(x3137 : RegExp.t) ->
          IterableIterator.t_of_js RegExpMatchArray.t_of_js
            (Ojs.call (this_to_js Obj.magic x3138) "matchAll"
               [|(RegExp.t_to_js x3137)|])
    let (match_' :
      'tags this ->
        matcher:AnonymousInterface9.t -> RegExpMatchArray.t or_null)
      =
      fun (x3142 : 'tags this) ->
        fun ~matcher:(x3141 : AnonymousInterface9.t) ->
          or_null_of_js RegExpMatchArray.t_of_js
            (Ojs.call (this_to_js Obj.magic x3142) "match"
               [|(AnonymousInterface9.t_to_js x3141)|])
    let (replace'' :
      'tags this ->
        searchValue:AnonymousInterface10.t -> replaceValue:string -> string)
      =
      fun (x3147 : 'tags this) ->
        fun ~searchValue:(x3145 : AnonymousInterface10.t) ->
          fun ~replaceValue:(x3146 : string) ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3147) "replace"
                 [|(AnonymousInterface10.t_to_js x3145);(Ojs.string_to_js
                                                           x3146)|])
    let (replace''' :
      'tags this ->
        searchValue:AnonymousInterface11.t ->
          replacer:(substring:string -> args:any list -> string) -> string)
      =
      fun (x3153 : 'tags this) ->
        fun ~searchValue:(x3149 : AnonymousInterface11.t) ->
          fun ~replacer:(x3150 : substring:string -> args:any list -> string)
            ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3153) "replace"
                 [|(AnonymousInterface11.t_to_js x3149);(Ojs.fun_to_js_args
                                                           (fun (x3151 : _)
                                                              ->
                                                              Ojs.string_to_js
                                                                (x3150
                                                                   ~substring:(
                                                                   Ojs.string_of_js
                                                                    (Ojs.array_get
                                                                    x3151 0))
                                                                   ~args:(
                                                                   Ojs.list_of_js_from
                                                                    any_of_js
                                                                    x3151 1))))|])
    let (search' : 'tags this -> searcher:AnonymousInterface12.t -> float) =
      fun (x3156 : 'tags this) ->
        fun ~searcher:(x3155 : AnonymousInterface12.t) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x3156) "search"
               [|(AnonymousInterface12.t_to_js x3155)|])
    let (split' :
      'tags this ->
        splitter:AnonymousInterface13.t ->
          ?limit:float -> unit -> string list)
      =
      fun (x3162 : 'tags this) ->
        fun ~splitter:(x3158 : AnonymousInterface13.t) ->
          fun ?limit:(x3159 : float option) ->
            fun () ->
              Ojs.list_of_js Ojs.string_of_js
                (let x3164 = this_to_js Obj.magic x3162 in
                 Ojs.call (Ojs.get_prop_ascii x3164 "split") "apply"
                   [|x3164;((let x3160 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3160 "push"
                                  [|(AnonymousInterface13.t_to_js x3158)|]);
                             (match x3159 with
                              | Some x3161 ->
                                  ignore
                                    (Ojs.call x3160 "push"
                                       [|(Ojs.float_to_js x3161)|])
                              | None -> ());
                             x3160))|])
    let (fromCodePoint : float list -> string) =
      fun (x3166 : float list) ->
        Ojs.string_of_js
          (let x3169 = Ojs.get_prop_ascii Ojs.global "String" in
           Ojs.call (Ojs.get_prop_ascii x3169 "fromCodePoint") "apply"
             [|x3169;((let x3167 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x3168 : float) ->
                            ignore
                              (Ojs.call x3167 "push"
                                 [|(Ojs.float_to_js x3168)|])) x3166;
                       x3167))|])
    let (raw :
      template:AnonymousInterface2.t -> substitutions:any list -> string) =
      fun ~template:(x3170 : AnonymousInterface2.t) ->
        fun ~substitutions:(x3171 : any list) ->
          Ojs.string_of_js
            (let x3174 = Ojs.get_prop_ascii Ojs.global "String" in
             Ojs.call (Ojs.get_prop_ascii x3174 "raw") "apply"
               [|x3174;((let x3172 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         ignore
                           (Ojs.call x3172 "push"
                              [|(AnonymousInterface2.t_to_js x3170)|]);
                         List.iter
                           (fun (x3173 : any) ->
                              ignore
                                (Ojs.call x3172 "push" [|(any_to_js x3173)|]))
                           x3171;
                         x3172))|])
    let (create : ?value:any -> unit -> t) =
      fun ?value:(x3175 : any option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "String")
               (let x3176 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x3175 with
                 | Some x3177 ->
                     ignore (Ojs.call x3176 "push" [|(any_to_js x3177)|])
                 | None -> ());
                x3176))
    let (invoke : ?value:any -> unit -> string) =
      fun ?value:(x3178 : any option) ->
        fun () ->
          Ojs.string_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "String") "apply"
               [|Ojs.null;((let x3179 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x3178 with
                             | Some x3180 ->
                                 ignore
                                   (Ojs.call x3179 "push"
                                      [|(any_to_js x3180)|])
                             | None -> ());
                            x3179))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "String")
             "prototype")
    let (fromCharCode : float list -> string) =
      fun (x3181 : float list) ->
        Ojs.string_of_js
          (let x3184 = Ojs.get_prop_ascii Ojs.global "String" in
           Ojs.call (Ojs.get_prop_ascii x3184 "fromCharCode") "apply"
             [|x3184;((let x3182 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x3183 : float) ->
                            ignore
                              (Ojs.call x3182 "push"
                                 [|(Ojs.float_to_js x3183)|])) x3181;
                       x3182))|])
    let cast_from = Obj.magic
  end
module Set =
  struct
    type 'T t =
      [ `IterableIterator of 'T 
      | `Iterator of ('T * any * never or_undefined)  | `Set of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x3187 : Ojs.t) -> t_of_js __T_of_js x3187
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x3185 : __T t) -> t_to_js __T_to_js x3185
    type 'T tags =
      [ `IterableIterator of 'T 
      | `Iterator of ('T * any * never or_undefined)  | `Set of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this = 'tags intf constraint 'tags = [> `Set of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x3191 : Ojs.t) -> intf_of_js __tags_of_js x3191
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x3189 : __tags intf) -> intf_to_js __tags_to_js x3189
    let (add : ('tags, 'T) this -> value:'T -> ('tags, 'T) this) =
      fun (x3194 : ('tags, 'T) this) ->
        fun ~value:(x3193 : 'T) ->
          this_of_js Obj.magic Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x3194) "add"
               [|(Obj.magic x3193)|])
    let (clear : ('tags, 'T) this -> unit) =
      fun (x3199 : ('tags, 'T) this) ->
        ignore (Ojs.call (this_to_js Obj.magic Obj.magic x3199) "clear" [||])
    let (delete : ('tags, 'T) this -> value:'T -> bool) =
      fun (x3203 : ('tags, 'T) this) ->
        fun ~value:(x3202 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x3203) "delete"
               [|(Obj.magic x3202)|])
    let (forEach :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> value2:'T -> set_:'T t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x3214 : ('tags, 'T) this) ->
        fun ~callbackfn:(x3206 : value:'T -> value2:'T -> set_:'T t -> unit)
          ->
          fun ?thisArg:(x3207 : any option) ->
            fun () ->
              ignore
                (let x3217 = this_to_js Obj.magic Obj.magic x3214 in
                 Ojs.call (Ojs.get_prop_ascii x3217 "forEach") "apply"
                   [|x3217;((let x3208 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3208 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3210 : Ojs.t) ->
                                          fun (x3211 : Ojs.t) ->
                                            fun (x3212 : Ojs.t) ->
                                              x3206 ~value:(Obj.magic x3210)
                                                ~value2:(Obj.magic x3211)
                                                ~set_:(t_of_js Obj.magic
                                                         x3212)))|]);
                             (match x3207 with
                              | Some x3209 ->
                                  ignore
                                    (Ojs.call x3208 "push"
                                       [|(any_to_js x3209)|])
                              | None -> ());
                             x3208))|])
    let (has : ('tags, 'T) this -> value:'T -> bool) =
      fun (x3219 : ('tags, 'T) this) ->
        fun ~value:(x3218 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x3219) "has"
               [|(Obj.magic x3218)|])
    let (get_size : ('tags, 'T) this -> float) =
      fun (x3222 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x3222) "size")
    let (entries : ('tags, 'T) this -> ('T * 'T) IterableIterator.t) =
      fun (x3225 : ('tags, 'T) this) ->
        IterableIterator.t_of_js
          (fun (x3228 : Ojs.t) ->
             let x3229 = x3228 in
             ((Obj.magic (Ojs.array_get x3229 0)),
               (Obj.magic (Ojs.array_get x3229 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic x3225) "entries" [||])
    let (keys : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x3230 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x3230) "keys" [||])
    let (values : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x3234 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x3234) "values" [||])
    let (create : ?values:'T list or_null -> unit -> 'T t) =
      fun ?values:(x3238 : 'T list or_null option) ->
        fun () ->
          t_of_js Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Set")
               (let x3239 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x3238 with
                 | Some x3240 ->
                     ignore
                       (Ojs.call x3239 "push"
                          [|(or_null_to_js
                               (fun (x3241 : 'T list) ->
                                  Ojs.list_to_js Obj.magic x3241) x3240)|])
                 | None -> ());
                x3239))
    let (prototype : unit -> any t) =
      fun () ->
        t_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Set")
             "prototype")
    let (create' : ?iterable:'T Iterable.t or_null -> unit -> 'T t) =
      fun ?iterable:(x3245 : 'T Iterable.t or_null option) ->
        fun () ->
          t_of_js Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Set")
               (let x3246 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x3245 with
                 | Some x3247 ->
                     ignore
                       (Ojs.call x3246 "push"
                          [|(or_null_to_js
                               (fun (x3248 : 'T Iterable.t) ->
                                  Iterable.t_to_js Obj.magic x3248) x3247)|])
                 | None -> ());
                x3246))
    let cast_from = Obj.magic
  end
module ReturnType =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x3252 : Ojs.t) -> any_of_js x3252
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x3251 : any) -> any_to_js x3251
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x3255 : Ojs.t) -> t_of_js __T_of_js x3255
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x3253 : __T t) -> t_to_js __T_to_js x3253
  end
module Required =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x3258 : Ojs.t) -> any_of_js x3258
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x3257 : any) -> any_to_js x3257
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x3261 : Ojs.t) -> t_of_js __T_of_js x3261
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x3259 : __T t) -> t_to_js __T_to_js x3259
  end
module PropertyKey =
  struct
    type t = symbol or_string or_number
    let rec t_of_js : Ojs.t -> t =
      fun (x3266 : Ojs.t) ->
        or_number_of_js
          (fun (x3267 : Ojs.t) -> or_string_of_js symbol_of_js x3267) x3266
    and t_to_js : t -> Ojs.t =
      fun (x3263 : symbol or_string or_number) ->
        or_number_to_js
          (fun (x3264 : symbol or_string) ->
             or_string_to_js symbol_to_js x3264) x3263
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3270 : Ojs.t) -> t_of_js x3270
    and t_0_to_js : t_0 -> Ojs.t = fun (x3269 : t) -> t_to_js x3269
  end
module Function =
  struct
    type t = [ `Function ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3272 : Ojs.t) -> t_of_js x3272
    and t_0_to_js : t_0 -> Ojs.t = fun (x3271 : t) -> t_to_js x3271
    type tags = [ `Function ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Function ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x3275 : Ojs.t) -> intf_of_js __tags_of_js x3275
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x3273 : __tags intf) -> intf_to_js __tags_to_js x3273
    let (get_name : 'tags this -> string) =
      fun (x3277 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3277) "name")
    let (apply_ :
      'tags this -> this:t -> thisArg:any -> ?argArray:any -> unit -> any) =
      fun (x3284 : 'tags this) ->
        fun ~this:(x3279 : t) ->
          fun ~thisArg:(x3280 : any) ->
            fun ?argArray:(x3281 : any option) ->
              fun () ->
                any_of_js
                  (let x3286 = this_to_js Obj.magic x3284 in
                   Ojs.call (Ojs.get_prop_ascii x3286 "apply") "apply"
                     [|x3286;((let x3282 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3282 "push" [|(t_to_js x3279)|]);
                               ignore
                                 (Ojs.call x3282 "push" [|(any_to_js x3280)|]);
                               (match x3281 with
                                | Some x3283 ->
                                    ignore
                                      (Ojs.call x3282 "push"
                                         [|(any_to_js x3283)|])
                                | None -> ());
                               x3282))|])
    let (call :
      'tags this -> this:t -> thisArg:any -> argArray:any list -> any) =
      fun (x3292 : 'tags this) ->
        fun ~this:(x3287 : t) ->
          fun ~thisArg:(x3288 : any) ->
            fun ~argArray:(x3289 : any list) ->
              any_of_js
                (let x3294 = this_to_js Obj.magic x3292 in
                 Ojs.call (Ojs.get_prop_ascii x3294 "call") "apply"
                   [|x3294;((let x3290 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3290 "push" [|(t_to_js x3287)|]);
                             ignore
                               (Ojs.call x3290 "push" [|(any_to_js x3288)|]);
                             List.iter
                               (fun (x3291 : any) ->
                                  ignore
                                    (Ojs.call x3290 "push"
                                       [|(any_to_js x3291)|])) x3289;
                             x3290))|])
    let (bind :
      'tags this -> this:t -> thisArg:any -> argArray:any list -> any) =
      fun (x3300 : 'tags this) ->
        fun ~this:(x3295 : t) ->
          fun ~thisArg:(x3296 : any) ->
            fun ~argArray:(x3297 : any list) ->
              any_of_js
                (let x3302 = this_to_js Obj.magic x3300 in
                 Ojs.call (Ojs.get_prop_ascii x3302 "bind") "apply"
                   [|x3302;((let x3298 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3298 "push" [|(t_to_js x3295)|]);
                             ignore
                               (Ojs.call x3298 "push" [|(any_to_js x3296)|]);
                             List.iter
                               (fun (x3299 : any) ->
                                  ignore
                                    (Ojs.call x3298 "push"
                                       [|(any_to_js x3299)|])) x3297;
                             x3298))|])
    let (toString : 'tags this -> string) =
      fun (x3303 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3303) "toString" [||])
    let (get_prototype : 'tags this -> any) =
      fun (x3305 : 'tags this) ->
        any_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3305) "prototype")
    let (set_prototype : 'tags this -> any -> unit) =
      fun (x3307 : 'tags this) ->
        fun (x3308 : any) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x3307) "prototype"
            (any_to_js x3308)
    let (get_length : 'tags this -> float) =
      fun (x3310 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3310) "length")
    let (get_arguments : 'tags this -> any) =
      fun (x3312 : 'tags this) ->
        any_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3312) "arguments")
    let (set_arguments : 'tags this -> any -> unit) =
      fun (x3314 : 'tags this) ->
        fun (x3315 : any) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x3314) "arguments"
            (any_to_js x3315)
    let (get_caller : 'tags this -> t) =
      fun (x3317 : 'tags this) ->
        t_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x3317) "caller")
    let (set_caller : 'tags this -> t -> unit) =
      fun (x3319 : 'tags this) ->
        fun (x3320 : t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x3319) "caller"
            (t_to_js x3320)
    let (create : string list -> t) =
      fun (x3322 : string list) ->
        t_of_js
          (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Function")
             (let x3323 =
                Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
              List.iter
                (fun (x3324 : string) ->
                   ignore
                     (Ojs.call x3323 "push" [|(Ojs.string_to_js x3324)|]))
                x3322;
              x3323))
    let (invoke : string list -> t) =
      fun (x3325 : string list) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Function") "apply"
             [|Ojs.null;((let x3326 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x3327 : string) ->
                               ignore
                                 (Ojs.call x3326 "push"
                                    [|(Ojs.string_to_js x3327)|])) x3325;
                          x3326))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Function")
             "prototype")
    let cast_from = Obj.magic
  end
module PropertyDescriptor =
  struct
    type t = [ `PropertyDescriptor ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3329 : Ojs.t) -> t_of_js x3329
    and t_0_to_js : t_0 -> Ojs.t = fun (x3328 : t) -> t_to_js x3328
    type tags = [ `PropertyDescriptor ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `PropertyDescriptor ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x3332 : Ojs.t) -> intf_of_js __tags_of_js x3332
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x3330 : __tags intf) -> intf_to_js __tags_to_js x3330
    let (get_configurable : 'tags this -> bool) =
      fun (x3334 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3334) "configurable")
    let (set_configurable : 'tags this -> bool -> unit) =
      fun (x3336 : 'tags this) ->
        fun (x3337 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x3336) "configurable"
            (Ojs.bool_to_js x3337)
    let (get_enumerable : 'tags this -> bool) =
      fun (x3339 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3339) "enumerable")
    let (set_enumerable : 'tags this -> bool -> unit) =
      fun (x3341 : 'tags this) ->
        fun (x3342 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x3341) "enumerable"
            (Ojs.bool_to_js x3342)
    let (get_value : 'tags this -> any) =
      fun (x3344 : 'tags this) ->
        any_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x3344) "value")
    let (set_value : 'tags this -> any -> unit) =
      fun (x3346 : 'tags this) ->
        fun (x3347 : any) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x3346) "value"
            (any_to_js x3347)
    let (get_writable : 'tags this -> bool) =
      fun (x3349 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3349) "writable")
    let (set_writable : 'tags this -> bool -> unit) =
      fun (x3351 : 'tags this) ->
        fun (x3352 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x3351) "writable"
            (Ojs.bool_to_js x3352)
    let (get_ : 'tags this -> any) =
      fun (x3354 : 'tags this) ->
        any_of_js (Ojs.call (this_to_js Obj.magic x3354) "get" [||])
    let (set_ : 'tags this -> v:any -> unit) =
      fun (x3357 : 'tags this) ->
        fun ~v:(x3356 : any) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x3357) "set"
               [|(any_to_js x3356)|])
    let cast_from = Obj.magic
  end
module Reflect =
  struct
    let (apply_ :
      target:Function.t ->
        thisArgument:any -> argumentsList:any ArrayLike.t -> any)
      =
      fun ~target:(x3359 : Function.t) ->
        fun ~thisArgument:(x3360 : any) ->
          fun ~argumentsList:(x3361 : any ArrayLike.t) ->
            any_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect") "apply"
                 [|(Function.t_to_js x3359);(any_to_js x3360);(ArrayLike.t_to_js
                                                                 any_to_js
                                                                 x3361)|])
    let (construct :
      target:Function.t ->
        argumentsList:any ArrayLike.t -> ?newTarget:Function.t -> unit -> any)
      =
      fun ~target:(x3363 : Function.t) ->
        fun ~argumentsList:(x3364 : any ArrayLike.t) ->
          fun ?newTarget:(x3365 : Function.t option) ->
            fun () ->
              any_of_js
                (let x3369 = Ojs.get_prop_ascii Ojs.global "Reflect" in
                 Ojs.call (Ojs.get_prop_ascii x3369 "construct") "apply"
                   [|x3369;((let x3366 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3366 "push"
                                  [|(Function.t_to_js x3363)|]);
                             ignore
                               (Ojs.call x3366 "push"
                                  [|(ArrayLike.t_to_js any_to_js x3364)|]);
                             (match x3365 with
                              | Some x3367 ->
                                  ignore
                                    (Ojs.call x3366 "push"
                                       [|(Function.t_to_js x3367)|])
                              | None -> ());
                             x3366))|])
    let (defineProperty :
      target:untyped_object ->
        propertyKey:PropertyKey.t -> attributes:PropertyDescriptor.t -> bool)
      =
      fun ~target:(x3370 : untyped_object) ->
        fun ~propertyKey:(x3371 : PropertyKey.t) ->
          fun ~attributes:(x3372 : PropertyDescriptor.t) ->
            Ojs.bool_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
                 "defineProperty"
                 [|(untyped_object_to_js x3370);(PropertyKey.t_to_js x3371);(
                   PropertyDescriptor.t_to_js x3372)|])
    let (deleteProperty :
      target:untyped_object -> propertyKey:PropertyKey.t -> bool) =
      fun ~target:(x3373 : untyped_object) ->
        fun ~propertyKey:(x3374 : PropertyKey.t) ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
               "deleteProperty"
               [|(untyped_object_to_js x3373);(PropertyKey.t_to_js x3374)|])
    let (get_ :
      target:untyped_object ->
        propertyKey:PropertyKey.t -> ?receiver:any -> unit -> any)
      =
      fun ~target:(x3375 : untyped_object) ->
        fun ~propertyKey:(x3376 : PropertyKey.t) ->
          fun ?receiver:(x3377 : any option) ->
            fun () ->
              any_of_js
                (let x3380 = Ojs.get_prop_ascii Ojs.global "Reflect" in
                 Ojs.call (Ojs.get_prop_ascii x3380 "get") "apply"
                   [|x3380;((let x3378 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3378 "push"
                                  [|(untyped_object_to_js x3375)|]);
                             ignore
                               (Ojs.call x3378 "push"
                                  [|(PropertyKey.t_to_js x3376)|]);
                             (match x3377 with
                              | Some x3379 ->
                                  ignore
                                    (Ojs.call x3378 "push"
                                       [|(any_to_js x3379)|])
                              | None -> ());
                             x3378))|])
    let (getOwnPropertyDescriptor :
      target:untyped_object ->
        propertyKey:PropertyKey.t -> PropertyDescriptor.t or_undefined)
      =
      fun ~target:(x3381 : untyped_object) ->
        fun ~propertyKey:(x3382 : PropertyKey.t) ->
          or_undefined_of_js PropertyDescriptor.t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
               "getOwnPropertyDescriptor"
               [|(untyped_object_to_js x3381);(PropertyKey.t_to_js x3382)|])
    let (getPrototypeOf : untyped_object -> untyped_object or_null) =
      fun (x3384 : untyped_object) ->
        or_null_of_js untyped_object_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
             "getPrototypeOf" [|(untyped_object_to_js x3384)|])
    let (has : target:untyped_object -> propertyKey:PropertyKey.t -> bool) =
      fun ~target:(x3386 : untyped_object) ->
        fun ~propertyKey:(x3387 : PropertyKey.t) ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect") "has"
               [|(untyped_object_to_js x3386);(PropertyKey.t_to_js x3387)|])
    let (isExtensible : untyped_object -> bool) =
      fun (x3388 : untyped_object) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect") "isExtensible"
             [|(untyped_object_to_js x3388)|])
    let (ownKeys : untyped_object -> symbol or_string list) =
      fun (x3389 : untyped_object) ->
        Ojs.list_of_js
          (fun (x3390 : Ojs.t) -> or_string_of_js symbol_of_js x3390)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect") "ownKeys"
             [|(untyped_object_to_js x3389)|])
    let (preventExtensions : untyped_object -> bool) =
      fun (x3392 : untyped_object) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
             "preventExtensions" [|(untyped_object_to_js x3392)|])
    let (set_ :
      target:untyped_object ->
        propertyKey:PropertyKey.t ->
          value:any -> ?receiver:any -> unit -> bool)
      =
      fun ~target:(x3393 : untyped_object) ->
        fun ~propertyKey:(x3394 : PropertyKey.t) ->
          fun ~value:(x3395 : any) ->
            fun ?receiver:(x3396 : any option) ->
              fun () ->
                Ojs.bool_of_js
                  (let x3399 = Ojs.get_prop_ascii Ojs.global "Reflect" in
                   Ojs.call (Ojs.get_prop_ascii x3399 "set") "apply"
                     [|x3399;((let x3397 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3397 "push"
                                    [|(untyped_object_to_js x3393)|]);
                               ignore
                                 (Ojs.call x3397 "push"
                                    [|(PropertyKey.t_to_js x3394)|]);
                               ignore
                                 (Ojs.call x3397 "push" [|(any_to_js x3395)|]);
                               (match x3396 with
                                | Some x3398 ->
                                    ignore
                                      (Ojs.call x3397 "push"
                                         [|(any_to_js x3398)|])
                                | None -> ());
                               x3397))|])
    let (setPrototypeOf :
      target:untyped_object -> proto:untyped_object or_null -> bool) =
      fun ~target:(x3400 : untyped_object) ->
        fun ~proto:(x3401 : untyped_object or_null) ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
               "setPrototypeOf"
               [|(untyped_object_to_js x3400);(or_null_to_js
                                                 untyped_object_to_js x3401)|])
  end
module ReferenceError =
  struct
    type t = [ `Error  | `ReferenceError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3404 : Ojs.t) -> t_of_js x3404
    and t_0_to_js : t_0 -> Ojs.t = fun (x3403 : t) -> t_to_js x3403
    type tags = [ `Error  | `ReferenceError ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ReferenceError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x3407 : Ojs.t) -> intf_of_js __tags_of_js x3407
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x3405 : __tags intf) -> intf_to_js __tags_to_js x3405
    let (create : ?message:string -> unit -> t) =
      fun ?message:(x3409 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "ReferenceError")
               (let x3410 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x3409 with
                 | Some x3411 ->
                     ignore
                       (Ojs.call x3410 "push" [|(Ojs.string_to_js x3411)|])
                 | None -> ());
                x3410))
    let (invoke : ?message:string -> unit -> t) =
      fun ?message:(x3412 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "ReferenceError")
               "apply"
               [|Ojs.null;((let x3413 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x3412 with
                             | Some x3414 ->
                                 ignore
                                   (Ojs.call x3413 "push"
                                      [|(Ojs.string_to_js x3414)|])
                             | None -> ());
                            x3413))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "ReferenceError") "prototype")
    let cast_from = Obj.magic
  end
module Record =
  struct
    type ('K, 'T) t = any
    let rec t_of_js :
      'K 'T . (Ojs.t -> 'K) -> (Ojs.t -> 'T) -> Ojs.t -> ('K, 'T) t = fun
      (type __K) -> fun (type __T) ->
      fun (__K_of_js : Ojs.t -> __K) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x3416 : Ojs.t) -> any_of_js x3416
    and t_to_js :
      'K 'T . ('K -> Ojs.t) -> ('T -> Ojs.t) -> ('K, 'T) t -> Ojs.t = fun
      (type __K) -> fun (type __T) ->
      fun (__K_to_js : __K -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x3415 : any) -> any_to_js x3415
    type ('K, 'T) t_2 = ('K, 'T) t
    let rec t_2_of_js :
      'K 'T . (Ojs.t -> 'K) -> (Ojs.t -> 'T) -> Ojs.t -> ('K, 'T) t_2 = fun
      (type __K) -> fun (type __T) ->
      fun (__K_of_js : Ojs.t -> __K) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x3420 : Ojs.t) -> t_of_js __K_of_js __T_of_js x3420
    and t_2_to_js :
      'K 'T . ('K -> Ojs.t) -> ('T -> Ojs.t) -> ('K, 'T) t_2 -> Ojs.t = fun
      (type __K) -> fun (type __T) ->
      fun (__K_to_js : __K -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x3417 : (__K, __T) t) -> t_to_js __K_to_js __T_to_js x3417
  end
module ReadonlySet =
  struct
    type 'T t =
      [ `IterableIterator of 'T 
      | `Iterator of ('T * any * never or_undefined)  | `ReadonlySet of 'T ]
        intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x3425 : Ojs.t) -> t_of_js __T_of_js x3425
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x3423 : __T t) -> t_to_js __T_to_js x3423
    type 'T tags =
      [ `IterableIterator of 'T 
      | `Iterator of ('T * any * never or_undefined)  | `ReadonlySet of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ReadonlySet of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x3429 : Ojs.t) -> intf_of_js __tags_of_js x3429
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x3427 : __tags intf) -> intf_to_js __tags_to_js x3427
    let (forEach :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> value2:'T -> set_:'T t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x3439 : ('tags, 'T) this) ->
        fun ~callbackfn:(x3431 : value:'T -> value2:'T -> set_:'T t -> unit)
          ->
          fun ?thisArg:(x3432 : any option) ->
            fun () ->
              ignore
                (let x3442 = this_to_js Obj.magic Obj.magic x3439 in
                 Ojs.call (Ojs.get_prop_ascii x3442 "forEach") "apply"
                   [|x3442;((let x3433 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3433 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3435 : Ojs.t) ->
                                          fun (x3436 : Ojs.t) ->
                                            fun (x3437 : Ojs.t) ->
                                              x3431 ~value:(Obj.magic x3435)
                                                ~value2:(Obj.magic x3436)
                                                ~set_:(t_of_js Obj.magic
                                                         x3437)))|]);
                             (match x3432 with
                              | Some x3434 ->
                                  ignore
                                    (Ojs.call x3433 "push"
                                       [|(any_to_js x3434)|])
                              | None -> ());
                             x3433))|])
    let (has : ('tags, 'T) this -> value:'T -> bool) =
      fun (x3444 : ('tags, 'T) this) ->
        fun ~value:(x3443 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x3444) "has"
               [|(Obj.magic x3443)|])
    let (get_size : ('tags, 'T) this -> float) =
      fun (x3447 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x3447) "size")
    let (entries : ('tags, 'T) this -> ('T * 'T) IterableIterator.t) =
      fun (x3450 : ('tags, 'T) this) ->
        IterableIterator.t_of_js
          (fun (x3453 : Ojs.t) ->
             let x3454 = x3453 in
             ((Obj.magic (Ojs.array_get x3454 0)),
               (Obj.magic (Ojs.array_get x3454 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic x3450) "entries" [||])
    let (keys : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x3455 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x3455) "keys" [||])
    let (values : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x3459 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x3459) "values" [||])
    let cast_from = Obj.magic
  end
module ReadonlyMap =
  struct
    type ('K, 'V) t =
      [ `IterableIterator of ('K * 'V) 
      | `Iterator of (('K * 'V) * any * never or_undefined) 
      | `ReadonlyMap of ('K * 'V) ] intf
    let rec t_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) t =
      fun _K -> fun _V -> Obj.magic
    and t_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) t -> Ojs.t =
      fun _K -> fun _V -> Obj.magic
    type ('K, 'V) t_2 = ('K, 'V) t
    let rec t_2_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) t_2 = fun
      (type __K) -> fun (type __V) ->
      fun (__K_of_js : Ojs.t -> __K) ->
        fun (__V_of_js : Ojs.t -> __V) ->
          fun (x3466 : Ojs.t) -> t_of_js __K_of_js __V_of_js x3466
    and t_2_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) t_2 -> Ojs.t = fun
      (type __K) -> fun (type __V) ->
      fun (__K_to_js : __K -> Ojs.t) ->
        fun (__V_to_js : __V -> Ojs.t) ->
          fun (x3463 : (__K, __V) t) -> t_to_js __K_to_js __V_to_js x3463
    type ('K, 'V) tags =
      [ `IterableIterator of ('K * 'V) 
      | `Iterator of (('K * 'V) * any * never or_undefined) 
      | `ReadonlyMap of ('K * 'V) ]
    type ('K, 'V) tags_2 = ('K, 'V) tags
    type ('tags, 'K, 'V) this =
      'tags intf constraint 'tags = [> `ReadonlyMap of ('K * 'V) ]
    let rec this_of_js :
      'tags 'K 'V .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('tags, 'K, 'V) this
      = fun (type __tags) -> fun (type __K) -> fun (type __V) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__K_of_js : Ojs.t -> __K) ->
          fun (__V_of_js : Ojs.t -> __V) ->
            fun (x3471 : Ojs.t) -> intf_of_js __tags_of_js x3471
    and this_to_js :
      'tags 'K 'V .
        ('tags -> Ojs.t) ->
          ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('tags, 'K, 'V) this -> Ojs.t
      = fun (type __tags) -> fun (type __K) -> fun (type __V) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__K_to_js : __K -> Ojs.t) ->
          fun (__V_to_js : __V -> Ojs.t) ->
            fun (x3469 : __tags intf) -> intf_to_js __tags_to_js x3469
    let (forEach :
      ('tags, 'K, 'V) this ->
        callbackfn:(value:'V -> key:'K -> map:('K, 'V) t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x3482 : ('tags, 'K, 'V) this) ->
        fun
          ~callbackfn:(x3473 : value:'V -> key:'K -> map:('K, 'V) t -> unit)
          ->
          fun ?thisArg:(x3474 : any option) ->
            fun () ->
              ignore
                (let x3486 = this_to_js Obj.magic Obj.magic Obj.magic x3482 in
                 Ojs.call (Ojs.get_prop_ascii x3486 "forEach") "apply"
                   [|x3486;((let x3475 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3475 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3477 : Ojs.t) ->
                                          fun (x3478 : Ojs.t) ->
                                            fun (x3479 : Ojs.t) ->
                                              x3473 ~value:(Obj.magic x3477)
                                                ~key:(Obj.magic x3478)
                                                ~map:(t_of_js Obj.magic
                                                        Obj.magic x3479)))|]);
                             (match x3474 with
                              | Some x3476 ->
                                  ignore
                                    (Ojs.call x3475 "push"
                                       [|(any_to_js x3476)|])
                              | None -> ());
                             x3475))|])
    let (get_ : ('tags, 'K, 'V) this -> key:'K -> 'V or_undefined) =
      fun (x3488 : ('tags, 'K, 'V) this) ->
        fun ~key:(x3487 : 'K) ->
          or_undefined_of_js Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x3488) "get"
               [|(Obj.magic x3487)|])
    let (has : ('tags, 'K, 'V) this -> key:'K -> bool) =
      fun (x3494 : ('tags, 'K, 'V) this) ->
        fun ~key:(x3493 : 'K) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x3494) "has"
               [|(Obj.magic x3493)|])
    let (get_size : ('tags, 'K, 'V) this -> float) =
      fun (x3498 : ('tags, 'K, 'V) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii
             (this_to_js Obj.magic Obj.magic Obj.magic x3498) "size")
    let (entries : ('tags, 'K, 'V) this -> ('K * 'V) IterableIterator.t) =
      fun (x3502 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js
          (fun (x3506 : Ojs.t) ->
             let x3507 = x3506 in
             ((Obj.magic (Ojs.array_get x3507 0)),
               (Obj.magic (Ojs.array_get x3507 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x3502)
             "entries" [||])
    let (keys : ('tags, 'K, 'V) this -> 'K IterableIterator.t) =
      fun (x3508 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x3508) "keys"
             [||])
    let (values : ('tags, 'K, 'V) this -> 'V IterableIterator.t) =
      fun (x3513 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x3513) "values"
             [||])
    let cast_from = Obj.magic
  end
module RangeError =
  struct
    type t = [ `Error  | `RangeError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3519 : Ojs.t) -> t_of_js x3519
    and t_0_to_js : t_0 -> Ojs.t = fun (x3518 : t) -> t_to_js x3518
    type tags = [ `Error  | `RangeError ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `RangeError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x3522 : Ojs.t) -> intf_of_js __tags_of_js x3522
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x3520 : __tags intf) -> intf_to_js __tags_to_js x3520
    let (create : ?message:string -> unit -> t) =
      fun ?message:(x3524 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "RangeError")
               (let x3525 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x3524 with
                 | Some x3526 ->
                     ignore
                       (Ojs.call x3525 "push" [|(Ojs.string_to_js x3526)|])
                 | None -> ());
                x3525))
    let (invoke : ?message:string -> unit -> t) =
      fun ?message:(x3527 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "RangeError") "apply"
               [|Ojs.null;((let x3528 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x3527 with
                             | Some x3529 ->
                                 ignore
                                   (Ojs.call x3528 "push"
                                      [|(Ojs.string_to_js x3529)|])
                             | None -> ());
                            x3528))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RangeError")
             "prototype")
    let cast_from = Obj.magic
  end
module ProxyHandler =
  struct
    type 'T t = [ `ProxyHandler of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x3532 : Ojs.t) -> t_of_js __T_of_js x3532
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x3530 : __T t) -> t_to_js __T_to_js x3530
    type 'T tags = [ `ProxyHandler of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ProxyHandler of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x3536 : Ojs.t) -> intf_of_js __tags_of_js x3536
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x3534 : __tags intf) -> intf_to_js __tags_to_js x3534
    let (apply_ :
      ('tags, 'T) this ->
        target:'T -> thisArg:any -> argArray:any list -> any)
      =
      fun (x3542 : ('tags, 'T) this) ->
        fun ~target:(x3538 : 'T) ->
          fun ~thisArg:(x3539 : any) ->
            fun ~argArray:(x3540 : any list) ->
              any_of_js
                (Ojs.call (this_to_js Obj.magic Obj.magic x3542) "apply"
                   [|(Obj.magic x3538);(any_to_js x3539);(Ojs.list_to_js
                                                            any_to_js x3540)|])
    let (construct :
      ('tags, 'T) this ->
        target:'T ->
          argArray:any list -> newTarget:Function.t -> untyped_object)
      =
      fun (x3549 : ('tags, 'T) this) ->
        fun ~target:(x3545 : 'T) ->
          fun ~argArray:(x3546 : any list) ->
            fun ~newTarget:(x3548 : Function.t) ->
              untyped_object_of_js
                (Ojs.call (this_to_js Obj.magic Obj.magic x3549) "construct"
                   [|(Obj.magic x3545);(Ojs.list_to_js any_to_js x3546);(
                     Function.t_to_js x3548)|])
    let (defineProperty :
      ('tags, 'T) this ->
        target:'T ->
          p:symbol or_string -> attributes:PropertyDescriptor.t -> bool)
      =
      fun (x3556 : ('tags, 'T) this) ->
        fun ~target:(x3552 : 'T) ->
          fun ~p:(x3553 : symbol or_string) ->
            fun ~attributes:(x3555 : PropertyDescriptor.t) ->
              Ojs.bool_of_js
                (Ojs.call (this_to_js Obj.magic Obj.magic x3556)
                   "defineProperty"
                   [|(Obj.magic x3552);(or_string_to_js symbol_to_js x3553);(
                     PropertyDescriptor.t_to_js x3555)|])
    let (deleteProperty :
      ('tags, 'T) this -> target:'T -> p:symbol or_string -> bool) =
      fun (x3562 : ('tags, 'T) this) ->
        fun ~target:(x3559 : 'T) ->
          fun ~p:(x3560 : symbol or_string) ->
            Ojs.bool_of_js
              (Ojs.call (this_to_js Obj.magic Obj.magic x3562)
                 "deleteProperty"
                 [|(Obj.magic x3559);(or_string_to_js symbol_to_js x3560)|])
    let (get_ :
      ('tags, 'T) this ->
        target:'T -> p:symbol or_string -> receiver:any -> any)
      =
      fun (x3569 : ('tags, 'T) this) ->
        fun ~target:(x3565 : 'T) ->
          fun ~p:(x3566 : symbol or_string) ->
            fun ~receiver:(x3568 : any) ->
              any_of_js
                (Ojs.call (this_to_js Obj.magic Obj.magic x3569) "get"
                   [|(Obj.magic x3565);(or_string_to_js symbol_to_js x3566);(
                     any_to_js x3568)|])
    let (getOwnPropertyDescriptor :
      ('tags, 'T) this ->
        target:'T -> p:symbol or_string -> PropertyDescriptor.t or_undefined)
      =
      fun (x3575 : ('tags, 'T) this) ->
        fun ~target:(x3572 : 'T) ->
          fun ~p:(x3573 : symbol or_string) ->
            or_undefined_of_js PropertyDescriptor.t_of_js
              (Ojs.call (this_to_js Obj.magic Obj.magic x3575)
                 "getOwnPropertyDescriptor"
                 [|(Obj.magic x3572);(or_string_to_js symbol_to_js x3573)|])
    let (getPrototypeOf :
      ('tags, 'T) this -> target:'T -> untyped_object or_null) =
      fun (x3580 : ('tags, 'T) this) ->
        fun ~target:(x3579 : 'T) ->
          or_null_of_js untyped_object_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x3580) "getPrototypeOf"
               [|(Obj.magic x3579)|])
    let (has : ('tags, 'T) this -> target:'T -> p:symbol or_string -> bool) =
      fun (x3587 : ('tags, 'T) this) ->
        fun ~target:(x3584 : 'T) ->
          fun ~p:(x3585 : symbol or_string) ->
            Ojs.bool_of_js
              (Ojs.call (this_to_js Obj.magic Obj.magic x3587) "has"
                 [|(Obj.magic x3584);(or_string_to_js symbol_to_js x3585)|])
    let (isExtensible : ('tags, 'T) this -> target:'T -> bool) =
      fun (x3591 : ('tags, 'T) this) ->
        fun ~target:(x3590 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x3591) "isExtensible"
               [|(Obj.magic x3590)|])
    let (ownKeys :
      ('tags, 'T) this -> target:'T -> symbol or_string ArrayLike.t) =
      fun (x3595 : ('tags, 'T) this) ->
        fun ~target:(x3594 : 'T) ->
          ArrayLike.t_of_js
            (fun (x3598 : Ojs.t) -> or_string_of_js symbol_of_js x3598)
            (Ojs.call (this_to_js Obj.magic Obj.magic x3595) "ownKeys"
               [|(Obj.magic x3594)|])
    let (preventExtensions : ('tags, 'T) this -> target:'T -> bool) =
      fun (x3601 : ('tags, 'T) this) ->
        fun ~target:(x3600 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x3601)
               "preventExtensions" [|(Obj.magic x3600)|])
    let (set_ :
      ('tags, 'T) this ->
        target:'T -> p:symbol or_string -> value:any -> receiver:any -> bool)
      =
      fun (x3609 : ('tags, 'T) this) ->
        fun ~target:(x3604 : 'T) ->
          fun ~p:(x3605 : symbol or_string) ->
            fun ~value:(x3607 : any) ->
              fun ~receiver:(x3608 : any) ->
                Ojs.bool_of_js
                  (Ojs.call (this_to_js Obj.magic Obj.magic x3609) "set"
                     [|(Obj.magic x3604);(or_string_to_js symbol_to_js x3605);(
                       any_to_js x3607);(any_to_js x3608)|])
    let (setPrototypeOf :
      ('tags, 'T) this -> target:'T -> v:untyped_object or_null -> bool) =
      fun (x3615 : ('tags, 'T) this) ->
        fun ~target:(x3612 : 'T) ->
          fun ~v:(x3613 : untyped_object or_null) ->
            Ojs.bool_of_js
              (Ojs.call (this_to_js Obj.magic Obj.magic x3615)
                 "setPrototypeOf"
                 [|(Obj.magic x3612);(or_null_to_js untyped_object_to_js
                                        x3613)|])
    let cast_from = Obj.magic
  end
module AnonymousInterface24 =
  struct
    type 'T t = Ojs.t
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) -> fun (x3619 : Ojs.t) -> x3619
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x3618 : Ojs.t) -> x3618
    let (get_proxy : 'T t -> 'T) =
      fun (x3620 : 'T t) ->
        Obj.magic (Ojs.get_prop_ascii (t_to_js Obj.magic x3620) "proxy")
    let (set_proxy : 'T t -> 'T -> unit) =
      fun (x3622 : 'T t) ->
        fun (x3623 : 'T) ->
          Ojs.set_prop_ascii (t_to_js Obj.magic x3622) "proxy"
            (Obj.magic x3623)
    let (revoke : 'T t -> unit) =
      fun (x3625 : 'T t) ->
        ignore (Ojs.call (t_to_js Obj.magic x3625) "revoke" [||])
  end
module ProxyStatic =
  struct
    let (revocable :
      target:'T -> handler:'T ProxyHandler.t -> 'T AnonymousInterface24.t) =
      fun ~target:(x3627 : 'T) ->
        fun ~handler:(x3628 : 'T ProxyHandler.t) ->
          AnonymousInterface24.t_of_js Obj.magic
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Proxy") "revocable"
               [|(Obj.magic x3627);(ProxyHandler.t_to_js Obj.magic x3628)|])
    let (create : target:'T -> handler:'T ProxyHandler.t -> 'T) =
      fun ~target:(x3631 : 'T) ->
        fun ~handler:(x3632 : 'T ProxyHandler.t) ->
          Obj.magic
            (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Proxy")
               [|(Obj.magic x3631);(ProxyHandler.t_to_js Obj.magic x3632)|])
  end
module ProxyConstructor =
  struct
    type t = [ `ProxyConstructor ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3635 : Ojs.t) -> t_of_js x3635
    and t_0_to_js : t_0 -> Ojs.t = fun (x3634 : t) -> t_to_js x3634
    type tags = [ `ProxyConstructor ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ProxyConstructor ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x3638 : Ojs.t) -> intf_of_js __tags_of_js x3638
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x3636 : __tags intf) -> intf_to_js __tags_to_js x3636
    let (revocable :
      'tags this ->
        target:'T -> handler:'T ProxyHandler.t -> 'T AnonymousInterface24.t)
      =
      fun (x3643 : 'tags this) ->
        fun ~target:(x3640 : 'T) ->
          fun ~handler:(x3641 : 'T ProxyHandler.t) ->
            AnonymousInterface24.t_of_js Obj.magic
              (Ojs.call (this_to_js Obj.magic x3643) "revocable"
                 [|(Obj.magic x3640);(ProxyHandler.t_to_js Obj.magic x3641)|])
    let (create : 'tags this -> target:'T -> handler:'T ProxyHandler.t -> 'T)
      =
      fun (x3649 : 'tags this) ->
        fun ~target:(x3646 : 'T) ->
          fun ~handler:(x3647 : 'T ProxyHandler.t) ->
            Obj.magic
              (Ojs.new_obj (this_to_js Obj.magic x3649)
                 [|(Obj.magic x3646);(ProxyHandler.t_to_js Obj.magic x3647)|])
    let cast_from = Obj.magic
  end
module ThisType =
  struct
    type 'T t = [ `ThisType of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x3653 : Ojs.t) -> t_of_js __T_of_js x3653
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x3651 : __T t) -> t_to_js __T_to_js x3651
    type 'T tags = [ `ThisType of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ThisType of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x3657 : Ojs.t) -> intf_of_js __tags_of_js x3657
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x3655 : __tags intf) -> intf_to_js __tags_to_js x3655
    let cast_from = Obj.magic
  end
module Readonly =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x3660 : Ojs.t) -> any_of_js x3660
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x3659 : any) -> any_to_js x3659
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x3663 : Ojs.t) -> t_of_js __T_of_js x3663
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x3661 : __T t) -> t_to_js __T_to_js x3661
  end
module PropertyDescriptorMap =
  struct
    type t = [ `PropertyDescriptorMap ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3666 : Ojs.t) -> t_of_js x3666
    and t_0_to_js : t_0 -> Ojs.t = fun (x3665 : t) -> t_to_js x3665
    type tags = [ `PropertyDescriptorMap ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `PropertyDescriptorMap ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x3669 : Ojs.t) -> intf_of_js __tags_of_js x3669
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x3667 : __tags intf) -> intf_to_js __tags_to_js x3667
    let (get : 'tags this -> string -> PropertyDescriptor.t) =
      fun (x3671 : 'tags this) ->
        fun (x3673 : string) ->
          PropertyDescriptor.t_of_js
            (Ojs.get_prop (this_to_js Obj.magic x3671)
               (Ojs.string_to_js x3673))
    let (set : 'tags this -> string -> PropertyDescriptor.t -> unit) =
      fun (x3674 : 'tags this) ->
        fun (x3676 : string) ->
          fun (x3677 : PropertyDescriptor.t) ->
            Ojs.set_prop (this_to_js Obj.magic x3674)
              (Ojs.string_to_js x3676) (PropertyDescriptor.t_to_js x3677)
    let cast_from = Obj.magic
  end
module AnonymousInterface4 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x3679 : Ojs.t) -> x3679
    and t_to_js : t -> Ojs.t = fun (x3678 : Ojs.t) -> x3678
    let (get : t -> string -> PropertyDescriptor.t) =
      fun (x3680 : t) ->
        fun (x3681 : string) ->
          PropertyDescriptor.t_of_js
            (Ojs.get_prop (t_to_js x3680) (Ojs.string_to_js x3681))
    let (set : t -> string -> PropertyDescriptor.t -> unit) =
      fun (x3682 : t) ->
        fun (x3683 : string) ->
          fun (x3684 : PropertyDescriptor.t) ->
            Ojs.set_prop (t_to_js x3682) (Ojs.string_to_js x3683)
              (PropertyDescriptor.t_to_js x3684)
  end
module AnonymousInterface26 =
  struct
    type 'T t = Ojs.t
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) -> fun (x3686 : Ojs.t) -> x3686
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x3685 : Ojs.t) -> x3685
    let (get : 'T t -> string -> 'T) =
      fun (x3687 : 'T t) ->
        fun (x3689 : string) ->
          Obj.magic
            (Ojs.get_prop (t_to_js Obj.magic x3687) (Ojs.string_to_js x3689))
    let (set : 'T t -> string -> 'T -> unit) =
      fun (x3690 : 'T t) ->
        fun (x3692 : string) ->
          fun (x3693 : 'T) ->
            Ojs.set_prop (t_to_js Obj.magic x3690) (Ojs.string_to_js x3692)
              (Obj.magic x3693)
  end
module AnonymousInterface25 =
  struct
    type 'T t = Ojs.t
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) -> fun (x3695 : Ojs.t) -> x3695
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x3694 : Ojs.t) -> x3694
    let (get : 'T t -> string -> 'T) =
      fun (x3696 : 'T t) ->
        fun (x3698 : string) ->
          Obj.magic
            (Ojs.get_prop (t_to_js Obj.magic x3696) (Ojs.string_to_js x3698))
    let (set : 'T t -> string -> 'T -> unit) =
      fun (x3699 : 'T t) ->
        fun (x3701 : string) ->
          fun (x3702 : 'T) ->
            Ojs.set_prop (t_to_js Obj.magic x3699) (Ojs.string_to_js x3701)
              (Obj.magic x3702)
  end
module AnonymousInterface0 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x3704 : Ojs.t) -> x3704
    and t_to_js : t -> Ojs.t = fun (x3703 : Ojs.t) -> x3703
  end
module Object =
  struct
    type t = [ `Object ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3706 : Ojs.t) -> t_of_js x3706
    and t_0_to_js : t_0 -> Ojs.t = fun (x3705 : t) -> t_to_js x3705
    type tags = [ `Object ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Object ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x3709 : Ojs.t) -> intf_of_js __tags_of_js x3709
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x3707 : __tags intf) -> intf_to_js __tags_to_js x3707
    let (get_constructor : 'tags this -> Function.t) =
      fun (x3711 : 'tags this) ->
        Function.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3711) "constructor")
    let (set_constructor : 'tags this -> Function.t -> unit) =
      fun (x3713 : 'tags this) ->
        fun (x3714 : Function.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x3713) "constructor"
            (Function.t_to_js x3714)
    let (toString : 'tags this -> string) =
      fun (x3716 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3716) "toString" [||])
    let (toLocaleString : 'tags this -> string) =
      fun (x3718 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3718) "toLocaleString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x3720 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x3720) "valueOf" [||])
    let (hasOwnProperty : 'tags this -> v:PropertyKey.t -> bool) =
      fun (x3723 : 'tags this) ->
        fun ~v:(x3722 : PropertyKey.t) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic x3723) "hasOwnProperty"
               [|(PropertyKey.t_to_js x3722)|])
    let (isPrototypeOf : 'tags this -> v:t -> bool) =
      fun (x3726 : 'tags this) ->
        fun ~v:(x3725 : t) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic x3726) "isPrototypeOf"
               [|(t_to_js x3725)|])
    let (propertyIsEnumerable : 'tags this -> v:PropertyKey.t -> bool) =
      fun (x3729 : 'tags this) ->
        fun ~v:(x3728 : PropertyKey.t) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic x3729) "propertyIsEnumerable"
               [|(PropertyKey.t_to_js x3728)|])
    let (assign : target:'T -> source:'U -> ('T, 'U) intersection2) =
      fun ~target:(x3731 : 'T) ->
        fun ~source:(x3732 : 'U) ->
          intersection2_of_js Obj.magic Obj.magic
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "assign"
               [|(Obj.magic x3731);(Obj.magic x3732)|])
    let (assign' :
      target:'T -> source1:'U -> source2:'V -> ('T, 'U, 'V) intersection3) =
      fun ~target:(x3735 : 'T) ->
        fun ~source1:(x3736 : 'U) ->
          fun ~source2:(x3737 : 'V) ->
            intersection3_of_js Obj.magic Obj.magic Obj.magic
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "assign"
                 [|(Obj.magic x3735);(Obj.magic x3736);(Obj.magic x3737)|])
    let (assign'' :
      target:'T ->
        source1:'U ->
          source2:'V -> source3:'W -> ('T, 'U, 'V, 'W) intersection4)
      =
      fun ~target:(x3741 : 'T) ->
        fun ~source1:(x3742 : 'U) ->
          fun ~source2:(x3743 : 'V) ->
            fun ~source3:(x3744 : 'W) ->
              intersection4_of_js Obj.magic Obj.magic Obj.magic Obj.magic
                (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "assign"
                   [|(Obj.magic x3741);(Obj.magic x3742);(Obj.magic x3743);(
                     Obj.magic x3744)|])
    let (assign''' : target:untyped_object -> sources:any list -> any) =
      fun ~target:(x3749 : untyped_object) ->
        fun ~sources:(x3750 : any list) ->
          any_of_js
            (let x3753 = Ojs.get_prop_ascii Ojs.global "Object" in
             Ojs.call (Ojs.get_prop_ascii x3753 "assign") "apply"
               [|x3753;((let x3751 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         ignore
                           (Ojs.call x3751 "push"
                              [|(untyped_object_to_js x3749)|]);
                         List.iter
                           (fun (x3752 : any) ->
                              ignore
                                (Ojs.call x3751 "push" [|(any_to_js x3752)|]))
                           x3750;
                         x3751))|])
    let (getOwnPropertySymbols : any -> symbol list) =
      fun (x3754 : any) ->
        Ojs.list_of_js symbol_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
             "getOwnPropertySymbols" [|(any_to_js x3754)|])
    let (keys : AnonymousInterface0.t -> string list) =
      fun (x3756 : AnonymousInterface0.t) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "keys"
             [|(AnonymousInterface0.t_to_js x3756)|])
    let (is : value1:any -> value2:any -> bool) =
      fun ~value1:(x3758 : any) ->
        fun ~value2:(x3759 : any) ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "is"
               [|(any_to_js x3758);(any_to_js x3759)|])
    let (setPrototypeOf : o:any -> proto:untyped_object or_null -> any) =
      fun ~o:(x3760 : any) ->
        fun ~proto:(x3761 : untyped_object or_null) ->
          any_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
               "setPrototypeOf"
               [|(any_to_js x3760);(or_null_to_js untyped_object_to_js x3761)|])
    let (create : ?value:any -> unit -> t) =
      fun ?value:(x3763 : any option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Object")
               (let x3764 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x3763 with
                 | Some x3765 ->
                     ignore (Ojs.call x3764 "push" [|(any_to_js x3765)|])
                 | None -> ());
                x3764))
    let (invoke : unit -> any) =
      fun () ->
        any_of_js (Ojs.apply (Ojs.get_prop_ascii Ojs.global "Object") [||])
    let (invoke' : any -> any) =
      fun (x3766 : any) ->
        any_of_js
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "Object")
             [|(any_to_js x3766)|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Object")
             "prototype")
    let (getPrototypeOf : any -> any) =
      fun (x3767 : any) ->
        any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "getPrototypeOf"
             [|(any_to_js x3767)|])
    let (getOwnPropertyDescriptor :
      o:any -> p:PropertyKey.t -> PropertyDescriptor.t or_undefined) =
      fun ~o:(x3768 : any) ->
        fun ~p:(x3769 : PropertyKey.t) ->
          or_undefined_of_js PropertyDescriptor.t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
               "getOwnPropertyDescriptor"
               [|(any_to_js x3768);(PropertyKey.t_to_js x3769)|])
    let (getOwnPropertyNames : any -> string list) =
      fun (x3771 : any) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
             "getOwnPropertyNames" [|(any_to_js x3771)|])
    let (create_ : untyped_object or_null -> any) =
      fun (x3773 : untyped_object or_null) ->
        any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "create"
             [|(or_null_to_js untyped_object_to_js x3773)|])
    let (create_' :
      o:untyped_object or_null ->
        properties:(PropertyDescriptorMap.t, any ThisType.t) intersection2 ->
          any)
      =
      fun ~o:(x3775 : untyped_object or_null) ->
        fun
          ~properties:(x3777 :
                        (PropertyDescriptorMap.t, any ThisType.t)
                          intersection2)
          ->
          any_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "create"
               [|(or_null_to_js untyped_object_to_js x3775);(intersection2_to_js
                                                               PropertyDescriptorMap.t_to_js
                                                               (fun
                                                                  (x3779 :
                                                                    any
                                                                    ThisType.t)
                                                                  ->
                                                                  ThisType.t_to_js
                                                                    any_to_js
                                                                    x3779)
                                                               x3777)|])
    let (defineProperty :
      o:'T ->
        p:PropertyKey.t ->
          attributes:(PropertyDescriptor.t, any ThisType.t) intersection2 ->
            'T)
      =
      fun ~o:(x3781 : 'T) ->
        fun ~p:(x3782 : PropertyKey.t) ->
          fun
            ~attributes:(x3783 :
                          (PropertyDescriptor.t, any ThisType.t)
                            intersection2)
            ->
            Obj.magic
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
                 "defineProperty"
                 [|(Obj.magic x3781);(PropertyKey.t_to_js x3782);(intersection2_to_js
                                                                    PropertyDescriptor.t_to_js
                                                                    (
                                                                    fun
                                                                    (x3785 :
                                                                    any
                                                                    ThisType.t)
                                                                    ->
                                                                    ThisType.t_to_js
                                                                    any_to_js
                                                                    x3785)
                                                                    x3783)|])
    let (defineProperties :
      o:'T ->
        properties:(PropertyDescriptorMap.t, any ThisType.t) intersection2 ->
          'T)
      =
      fun ~o:(x3787 : 'T) ->
        fun
          ~properties:(x3788 :
                        (PropertyDescriptorMap.t, any ThisType.t)
                          intersection2)
          ->
          Obj.magic
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
               "defineProperties"
               [|(Obj.magic x3787);(intersection2_to_js
                                      PropertyDescriptorMap.t_to_js
                                      (fun (x3790 : any ThisType.t) ->
                                         ThisType.t_to_js any_to_js x3790)
                                      x3788)|])
    let (seal : 'T -> 'T) =
      fun (x3792 : 'T) ->
        Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "seal"
             [|(Obj.magic x3792)|])
    let (freeze : 'T list -> 'T list) =
      fun (x3793 : 'T list) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "freeze"
             [|(Ojs.list_to_js Obj.magic x3793)|])
    let (freeze' : 'T -> 'T) =
      fun (x3796 : 'T) ->
        Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "freeze"
             [|(Obj.magic x3796)|])
    let (freeze'' : 'T -> 'T Readonly.t) =
      fun (x3797 : 'T) ->
        Readonly.t_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "freeze"
             [|(Obj.magic x3797)|])
    let (preventExtensions : 'T -> 'T) =
      fun (x3799 : 'T) ->
        Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
             "preventExtensions" [|(Obj.magic x3799)|])
    let (isSealed : any -> bool) =
      fun (x3800 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "isSealed"
             [|(any_to_js x3800)|])
    let (isFrozen : any -> bool) =
      fun (x3801 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "isFrozen"
             [|(any_to_js x3801)|])
    let (isExtensible : any -> bool) =
      fun (x3802 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "isExtensible"
             [|(any_to_js x3802)|])
    let (keys' : untyped_object -> string list) =
      fun (x3803 : untyped_object) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "keys"
             [|(untyped_object_to_js x3803)|])
    let (values :
      ('T ArrayLike.t, 'T AnonymousInterface26.t) union2 -> 'T list) =
      fun (x3805 : ('T ArrayLike.t, 'T AnonymousInterface26.t) union2) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "values"
             [|(union2_to_js
                  (fun (x3806 : 'T ArrayLike.t) ->
                     ArrayLike.t_to_js Obj.magic x3806)
                  (fun (x3808 : 'T AnonymousInterface26.t) ->
                     AnonymousInterface26.t_to_js Obj.magic x3808) x3805)|])
    let (values' : AnonymousInterface0.t -> any list) =
      fun (x3811 : AnonymousInterface0.t) ->
        Ojs.list_of_js any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "values"
             [|(AnonymousInterface0.t_to_js x3811)|])
    let (entries :
      ('T ArrayLike.t, 'T AnonymousInterface26.t) union2 ->
        (string * 'T) list)
      =
      fun (x3813 : ('T ArrayLike.t, 'T AnonymousInterface26.t) union2) ->
        Ojs.list_of_js
          (fun (x3818 : Ojs.t) ->
             let x3819 = x3818 in
             ((Ojs.string_of_js (Ojs.array_get x3819 0)),
               (Obj.magic (Ojs.array_get x3819 1))))
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "entries"
             [|(union2_to_js
                  (fun (x3814 : 'T ArrayLike.t) ->
                     ArrayLike.t_to_js Obj.magic x3814)
                  (fun (x3816 : 'T AnonymousInterface26.t) ->
                     AnonymousInterface26.t_to_js Obj.magic x3816) x3813)|])
    let (entries' : AnonymousInterface0.t -> (string * any) list) =
      fun (x3820 : AnonymousInterface0.t) ->
        Ojs.list_of_js
          (fun (x3821 : Ojs.t) ->
             let x3822 = x3821 in
             ((Ojs.string_of_js (Ojs.array_get x3822 0)),
               (any_of_js (Ojs.array_get x3822 1))))
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "entries"
             [|(AnonymousInterface0.t_to_js x3820)|])
    let (getOwnPropertyDescriptors :
      'T -> (any, AnonymousInterface4.t) intersection2) =
      fun (x3823 : 'T) ->
        intersection2_of_js any_of_js AnonymousInterface4.t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
             "getOwnPropertyDescriptors" [|(Obj.magic x3823)|])
    let (fromEntries :
      (PropertyKey.t * 'T) Iterable.t -> 'T AnonymousInterface25.t) =
      fun (x3826 : (PropertyKey.t * 'T) Iterable.t) ->
        AnonymousInterface25.t_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "fromEntries"
             [|(Iterable.t_to_js
                  (fun (x3827 : (PropertyKey.t * 'T)) ->
                     let (x3828, x3829) = x3827 in
                     let x3830 = Ojs.array_make 2 in
                     Ojs.array_set x3830 0 (PropertyKey.t_to_js x3828);
                     Ojs.array_set x3830 1 (Obj.magic x3829);
                     x3830) x3826)|])
    let (fromEntries' : any list Iterable.t -> any) =
      fun (x3832 : any list Iterable.t) ->
        any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "fromEntries"
             [|(Iterable.t_to_js
                  (fun (x3833 : any list) -> Ojs.list_to_js any_to_js x3833)
                  x3832)|])
    let cast_from = Obj.magic
  end
module PropertyDecorator =
  struct
    type t = [ `PropertyDecorator ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3836 : Ojs.t) -> t_of_js x3836
    and t_0_to_js : t_0 -> Ojs.t = fun (x3835 : t) -> t_to_js x3835
    type tags = [ `PropertyDecorator ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `PropertyDecorator ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x3839 : Ojs.t) -> intf_of_js __tags_of_js x3839
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x3837 : __tags intf) -> intf_to_js __tags_to_js x3837
    let (apply :
      'tags this -> target:Object.t -> propertyKey:symbol or_string -> unit)
      =
      fun (x3844 : 'tags this) ->
        fun ~target:(x3841 : Object.t) ->
          fun ~propertyKey:(x3842 : symbol or_string) ->
            ignore
              (Ojs.apply (this_to_js Obj.magic x3844)
                 [|(Object.t_to_js x3841);(or_string_to_js symbol_to_js x3842)|])
    let cast_from = Obj.magic
  end
module PromiseLike =
  struct
    type 'T t = [ `PromiseLike of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x3848 : Ojs.t) -> t_of_js __T_of_js x3848
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x3846 : __T t) -> t_to_js __T_to_js x3846
    type 'T tags = [ `PromiseLike of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `PromiseLike of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x3852 : Ojs.t) -> intf_of_js __tags_of_js x3852
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x3850 : __tags intf) -> intf_to_js __tags_to_js x3850
    let (then_ :
      ('tags, 'T) this ->
        ?onfulfilled:('T -> ('TResult1, 'TResult1 t) union2)
          or_null_or_undefined ->
          ?onrejected:(any -> ('TResult2, 'TResult2 t) union2)
            or_null_or_undefined -> unit -> ('TResult1, 'TResult2) union2 t)
      =
      fun (x3869 : ('tags, 'T) this) ->
        fun
          ?onfulfilled:(x3854 :
                         ('T -> ('TResult1, 'TResult1 t) union2)
                           or_null_or_undefined option)
          ->
          fun
            ?onrejected:(x3855 :
                          (any -> ('TResult2, 'TResult2 t) union2)
                            or_null_or_undefined option)
            ->
            fun () ->
              t_of_js
                (fun (x3873 : Ojs.t) ->
                   union2_of_js Obj.magic Obj.magic x3873)
                (let x3872 = this_to_js Obj.magic Obj.magic x3869 in
                 Ojs.call (Ojs.get_prop_ascii x3872 "then") "apply"
                   [|x3872;((let x3856 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x3854 with
                              | Some x3863 ->
                                  ignore
                                    (Ojs.call x3856 "push"
                                       [|(or_null_or_undefined_to_js
                                            (fun
                                               (x3864 :
                                                 'T ->
                                                   ('TResult1, 'TResult1 t)
                                                     union2)
                                               ->
                                               Ojs.fun_to_js 1
                                                 (fun (x3865 : Ojs.t) ->
                                                    union2_to_js Obj.magic
                                                      (fun
                                                         (x3867 :
                                                           'TResult1 t)
                                                         ->
                                                         t_to_js Obj.magic
                                                           x3867)
                                                      (x3864
                                                         (Obj.magic x3865))))
                                            x3863)|])
                              | None -> ());
                             (match x3855 with
                              | Some x3857 ->
                                  ignore
                                    (Ojs.call x3856 "push"
                                       [|(or_null_or_undefined_to_js
                                            (fun
                                               (x3858 :
                                                 any ->
                                                   ('TResult2, 'TResult2 t)
                                                     union2)
                                               ->
                                               Ojs.fun_to_js 1
                                                 (fun (x3859 : Ojs.t) ->
                                                    union2_to_js Obj.magic
                                                      (fun
                                                         (x3861 :
                                                           'TResult2 t)
                                                         ->
                                                         t_to_js Obj.magic
                                                           x3861)
                                                      (x3858
                                                         (any_of_js x3859))))
                                            x3857)|])
                              | None -> ());
                             x3856))|])
    let cast_from = Obj.magic
  end
module AnonymousInterface15 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x3877 : Ojs.t) -> x3877
    and t_to_js : t -> Ojs.t = fun (x3876 : Ojs.t) -> x3876
    let (create :
      t ->
        executor:(resolve:(('T, 'T PromiseLike.t) union2 -> unit) ->
                    reject:(?reason:any -> unit -> unit) -> unit)
          -> 'T PromiseLike.t)
      =
      fun (x3888 : t) ->
        fun
          ~executor:(x3878 :
                      resolve:(('T, 'T PromiseLike.t) union2 -> unit) ->
                        reject:(?reason:any -> unit -> unit) -> unit)
          ->
          PromiseLike.t_of_js Obj.magic
            (Ojs.new_obj (t_to_js x3888)
               [|(Ojs.fun_to_js 2
                    (fun (x3879 : Ojs.t) ->
                       fun (x3884 : Ojs.t) ->
                         x3878
                           ~resolve:(fun
                                       (x3880 :
                                         ('T, 'T PromiseLike.t) union2)
                                       ->
                                       ignore
                                         (Ojs.apply x3879
                                            [|(union2_to_js Obj.magic
                                                 (fun
                                                    (x3882 :
                                                      'T PromiseLike.t)
                                                    ->
                                                    PromiseLike.t_to_js
                                                      Obj.magic x3882) x3880)|]))
                           ~reject:(fun ?reason:(x3885 : any option) ->
                                      fun () ->
                                        ignore
                                          (Ojs.call x3884 "apply"
                                             [|Ojs.null;((let x3886 =
                                                            Ojs.new_obj
                                                              (Ojs.get_prop_ascii
                                                                 Ojs.global
                                                                 "Array")
                                                              [||] in
                                                          (match x3885 with
                                                           | Some x3887 ->
                                                               ignore
                                                                 (Ojs.call
                                                                    x3886
                                                                    "push"
                                                                    [|(
                                                                    any_to_js
                                                                    x3887)|])
                                                           | None -> ());
                                                          x3886))|]))))|])
  end
module PromiseConstructorLike =
  struct
    type t = AnonymousInterface15.t
    let rec t_of_js : Ojs.t -> t =
      fun (x3891 : Ojs.t) -> AnonymousInterface15.t_of_js x3891
    and t_to_js : t -> Ojs.t =
      fun (x3890 : AnonymousInterface15.t) ->
        AnonymousInterface15.t_to_js x3890
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3893 : Ojs.t) -> t_of_js x3893
    and t_0_to_js : t_0 -> Ojs.t = fun (x3892 : t) -> t_to_js x3892
  end
module Partial =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x3895 : Ojs.t) -> any_of_js x3895
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x3894 : any) -> any_to_js x3894
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x3898 : Ojs.t) -> t_of_js __T_of_js x3898
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x3896 : __T t) -> t_to_js __T_to_js x3896
  end
module Parameters =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x3901 : Ojs.t) -> any_of_js x3901
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x3900 : any) -> any_to_js x3900
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x3904 : Ojs.t) -> t_of_js __T_of_js x3904
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x3902 : __T t) -> t_to_js __T_to_js x3902
  end
module ParameterDecorator =
  struct
    type t = [ `ParameterDecorator ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3907 : Ojs.t) -> t_of_js x3907
    and t_0_to_js : t_0 -> Ojs.t = fun (x3906 : t) -> t_to_js x3906
    type tags = [ `ParameterDecorator ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ParameterDecorator ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x3910 : Ojs.t) -> intf_of_js __tags_of_js x3910
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x3908 : __tags intf) -> intf_to_js __tags_to_js x3908
    let (apply :
      'tags this ->
        target:Object.t ->
          propertyKey:symbol or_string -> parameterIndex:float -> unit)
      =
      fun (x3916 : 'tags this) ->
        fun ~target:(x3912 : Object.t) ->
          fun ~propertyKey:(x3913 : symbol or_string) ->
            fun ~parameterIndex:(x3915 : float) ->
              ignore
                (Ojs.apply (this_to_js Obj.magic x3916)
                   [|(Object.t_to_js x3912);(or_string_to_js symbol_to_js
                                               x3913);(Ojs.float_to_js x3915)|])
    let cast_from = Obj.magic
  end
module Pick =
  struct
    type ('T, 'K) t = any
    let rec t_of_js :
      'T 'K . (Ojs.t -> 'T) -> (Ojs.t -> 'K) -> Ojs.t -> ('T, 'K) t = fun
      (type __T) -> fun (type __K) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__K_of_js : Ojs.t -> __K) ->
          fun (x3919 : Ojs.t) -> any_of_js x3919
    and t_to_js :
      'T 'K . ('T -> Ojs.t) -> ('K -> Ojs.t) -> ('T, 'K) t -> Ojs.t = fun
      (type __T) -> fun (type __K) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__K_to_js : __K -> Ojs.t) ->
          fun (x3918 : any) -> any_to_js x3918
    type ('T, 'K) t_2 = ('T, 'K) t
    let rec t_2_of_js :
      'T 'K . (Ojs.t -> 'T) -> (Ojs.t -> 'K) -> Ojs.t -> ('T, 'K) t_2 = fun
      (type __T) -> fun (type __K) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__K_of_js : Ojs.t -> __K) ->
          fun (x3923 : Ojs.t) -> t_of_js __T_of_js __K_of_js x3923
    and t_2_to_js :
      'T 'K . ('T -> Ojs.t) -> ('K -> Ojs.t) -> ('T, 'K) t_2 -> Ojs.t = fun
      (type __T) -> fun (type __K) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__K_to_js : __K -> Ojs.t) ->
          fun (x3920 : (__T, __K) t) -> t_to_js __T_to_js __K_to_js x3920
  end
module Exclude =
  struct
    type ('T, 'U) t = any
    let rec t_of_js :
      'T 'U . (Ojs.t -> 'T) -> (Ojs.t -> 'U) -> Ojs.t -> ('T, 'U) t = fun
      (type __T) -> fun (type __U) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__U_of_js : Ojs.t -> __U) ->
          fun (x3927 : Ojs.t) -> any_of_js x3927
    and t_to_js :
      'T 'U . ('T -> Ojs.t) -> ('U -> Ojs.t) -> ('T, 'U) t -> Ojs.t = fun
      (type __T) -> fun (type __U) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__U_to_js : __U -> Ojs.t) ->
          fun (x3926 : any) -> any_to_js x3926
    type ('T, 'U) t_2 = ('T, 'U) t
    let rec t_2_of_js :
      'T 'U . (Ojs.t -> 'T) -> (Ojs.t -> 'U) -> Ojs.t -> ('T, 'U) t_2 = fun
      (type __T) -> fun (type __U) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__U_of_js : Ojs.t -> __U) ->
          fun (x3931 : Ojs.t) -> t_of_js __T_of_js __U_of_js x3931
    and t_2_to_js :
      'T 'U . ('T -> Ojs.t) -> ('U -> Ojs.t) -> ('T, 'U) t_2 -> Ojs.t = fun
      (type __T) -> fun (type __U) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__U_to_js : __U -> Ojs.t) ->
          fun (x3928 : (__T, __U) t) -> t_to_js __T_to_js __U_to_js x3928
  end
module Omit =
  struct
    type ('T, 'K) t = ('T, (any, 'K) Exclude.t) Pick.t
    let rec t_of_js :
      'T 'K . (Ojs.t -> 'T) -> (Ojs.t -> 'K) -> Ojs.t -> ('T, 'K) t = fun
      (type __T) -> fun (type __K) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__K_of_js : Ojs.t -> __K) ->
          fun (x3939 : Ojs.t) ->
            Pick.t_of_js __T_of_js
              (fun (x3941 : Ojs.t) ->
                 Exclude.t_of_js any_of_js __K_of_js x3941) x3939
    and t_to_js :
      'T 'K . ('T -> Ojs.t) -> ('K -> Ojs.t) -> ('T, 'K) t -> Ojs.t = fun
      (type __T) -> fun (type __K) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__K_to_js : __K -> Ojs.t) ->
          fun (x3934 : (__T, (any, __K) Exclude.t) Pick.t) ->
            Pick.t_to_js __T_to_js
              (fun (x3936 : (any, __K) Exclude.t) ->
                 Exclude.t_to_js any_to_js __K_to_js x3936) x3934
    type ('T, 'K) t_2 = ('T, 'K) t
    let rec t_2_of_js :
      'T 'K . (Ojs.t -> 'T) -> (Ojs.t -> 'K) -> Ojs.t -> ('T, 'K) t_2 = fun
      (type __T) -> fun (type __K) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__K_of_js : Ojs.t -> __K) ->
          fun (x3947 : Ojs.t) -> t_of_js __T_of_js __K_of_js x3947
    and t_2_to_js :
      'T 'K . ('T -> Ojs.t) -> ('K -> Ojs.t) -> ('T, 'K) t_2 -> Ojs.t = fun
      (type __T) -> fun (type __K) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__K_to_js : __K -> Ojs.t) ->
          fun (x3944 : (__T, __K) t) -> t_to_js __T_to_js __K_to_js x3944
  end
module Number =
  struct
    type t = [ `Number ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3951 : Ojs.t) -> t_of_js x3951
    and t_0_to_js : t_0 -> Ojs.t = fun (x3950 : t) -> t_to_js x3950
    type tags = [ `Number ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Number ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x3954 : Ojs.t) -> intf_of_js __tags_of_js x3954
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x3952 : __tags intf) -> intf_to_js __tags_to_js x3952
    let (toLocaleString :
      'tags this ->
        ?locales:string list or_string ->
          ?options:Intl.NumberFormatOptions.t -> unit -> string)
      =
      fun (x3963 : 'tags this) ->
        fun ?locales:(x3956 : string list or_string option) ->
          fun ?options:(x3957 : Intl.NumberFormatOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x3965 = this_to_js Obj.magic x3963 in
                 Ojs.call (Ojs.get_prop_ascii x3965 "toLocaleString") "apply"
                   [|x3965;((let x3958 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x3956 with
                              | Some x3960 ->
                                  ignore
                                    (Ojs.call x3958 "push"
                                       [|(or_string_to_js
                                            (fun (x3961 : string list) ->
                                               Ojs.list_to_js
                                                 Ojs.string_to_js x3961)
                                            x3960)|])
                              | None -> ());
                             (match x3957 with
                              | Some x3959 ->
                                  ignore
                                    (Ojs.call x3958 "push"
                                       [|(Intl.NumberFormatOptions.t_to_js
                                            x3959)|])
                              | None -> ());
                             x3958))|])
    let (toString : 'tags this -> ?radix:float -> unit -> string) =
      fun (x3969 : 'tags this) ->
        fun ?radix:(x3966 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x3971 = this_to_js Obj.magic x3969 in
               Ojs.call (Ojs.get_prop_ascii x3971 "toString") "apply"
                 [|x3971;((let x3967 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3966 with
                            | Some x3968 ->
                                ignore
                                  (Ojs.call x3967 "push"
                                     [|(Ojs.float_to_js x3968)|])
                            | None -> ());
                           x3967))|])
    let (toFixed : 'tags this -> ?fractionDigits:float -> unit -> string) =
      fun (x3975 : 'tags this) ->
        fun ?fractionDigits:(x3972 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x3977 = this_to_js Obj.magic x3975 in
               Ojs.call (Ojs.get_prop_ascii x3977 "toFixed") "apply"
                 [|x3977;((let x3973 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3972 with
                            | Some x3974 ->
                                ignore
                                  (Ojs.call x3973 "push"
                                     [|(Ojs.float_to_js x3974)|])
                            | None -> ());
                           x3973))|])
    let (toExponential :
      'tags this -> ?fractionDigits:float -> unit -> string) =
      fun (x3981 : 'tags this) ->
        fun ?fractionDigits:(x3978 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x3983 = this_to_js Obj.magic x3981 in
               Ojs.call (Ojs.get_prop_ascii x3983 "toExponential") "apply"
                 [|x3983;((let x3979 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3978 with
                            | Some x3980 ->
                                ignore
                                  (Ojs.call x3979 "push"
                                     [|(Ojs.float_to_js x3980)|])
                            | None -> ());
                           x3979))|])
    let (toPrecision : 'tags this -> ?precision:float -> unit -> string) =
      fun (x3987 : 'tags this) ->
        fun ?precision:(x3984 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x3989 = this_to_js Obj.magic x3987 in
               Ojs.call (Ojs.get_prop_ascii x3989 "toPrecision") "apply"
                 [|x3989;((let x3985 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3984 with
                            | Some x3986 ->
                                ignore
                                  (Ojs.call x3985 "push"
                                     [|(Ojs.float_to_js x3986)|])
                            | None -> ());
                           x3985))|])
    let (valueOf : 'tags this -> float) =
      fun (x3990 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x3990) "valueOf" [||])
    let (epsilon : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "EPSILON")
    let (isFinite : unknown -> bool) =
      fun (x3992 : unknown) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "isFinite"
             [|(unknown_to_js x3992)|])
    let (isInteger : unknown -> bool) =
      fun (x3993 : unknown) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "isInteger"
             [|(unknown_to_js x3993)|])
    let (isNaN : unknown -> bool) =
      fun (x3994 : unknown) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "isNaN"
             [|(unknown_to_js x3994)|])
    let (isSafeInteger : unknown -> bool) =
      fun (x3995 : unknown) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "isSafeInteger"
             [|(unknown_to_js x3995)|])
    let (max_safe_integer : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "MAX_SAFE_INTEGER")
    let (min_safe_integer : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "MIN_SAFE_INTEGER")
    let (parseFloat : string -> float) =
      fun (x3996 : string) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "parseFloat"
             [|(Ojs.string_to_js x3996)|])
    let (parseInt : string:string -> ?radix:float -> unit -> float) =
      fun ~string:(x3997 : string) ->
        fun ?radix:(x3998 : float option) ->
          fun () ->
            Ojs.float_of_js
              (let x4001 = Ojs.get_prop_ascii Ojs.global "Number" in
               Ojs.call (Ojs.get_prop_ascii x4001 "parseInt") "apply"
                 [|x4001;((let x3999 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x3999 "push"
                                [|(Ojs.string_to_js x3997)|]);
                           (match x3998 with
                            | Some x4000 ->
                                ignore
                                  (Ojs.call x3999 "push"
                                     [|(Ojs.float_to_js x4000)|])
                            | None -> ());
                           x3999))|])
    let (create : ?value:any -> unit -> t) =
      fun ?value:(x4002 : any option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Number")
               (let x4003 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x4002 with
                 | Some x4004 ->
                     ignore (Ojs.call x4003 "push" [|(any_to_js x4004)|])
                 | None -> ());
                x4003))
    let (invoke : ?value:any -> unit -> float) =
      fun ?value:(x4005 : any option) ->
        fun () ->
          Ojs.float_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "apply"
               [|Ojs.null;((let x4006 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x4005 with
                             | Some x4007 ->
                                 ignore
                                   (Ojs.call x4006 "push"
                                      [|(any_to_js x4007)|])
                             | None -> ());
                            x4006))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "prototype")
    let (max_value : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "MAX_VALUE")
    let (min_value : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "MIN_VALUE")
    let (nan : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number") "NaN")
    let (negative_infinity : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "NEGATIVE_INFINITY")
    let (positive_infinity : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "POSITIVE_INFINITY")
    let cast_from = Obj.magic
  end
module NonNullable =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4009 : Ojs.t) -> any_of_js x4009
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x4008 : any) -> any_to_js x4008
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4012 : Ojs.t) -> t_of_js __T_of_js x4012
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x4010 : __T t) -> t_to_js __T_to_js x4010
  end
module AnonymousInterface27 =
  struct
    type 'T t = Ojs.t
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) -> fun (x4015 : Ojs.t) -> x4015
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x4014 : Ojs.t) -> x4014
    let (create : 'T t -> 'T) =
      fun (x4016 : 'T t) ->
        Obj.magic (Ojs.new_obj (t_to_js Obj.magic x4016) [||])
  end
module AnonymousInterface23 =
  struct
    type ('AX, 'R) t = Ojs.t
    let rec t_of_js :
      'AX 'R . (Ojs.t -> 'AX) -> (Ojs.t -> 'R) -> Ojs.t -> ('AX, 'R) t = fun
      (type __AX) -> fun (type __R) ->
      fun (__AX_of_js : Ojs.t -> __AX) ->
        fun (__R_of_js : Ojs.t -> __R) -> fun (x4019 : Ojs.t) -> x4019
    and t_to_js :
      'AX 'R . ('AX -> Ojs.t) -> ('R -> Ojs.t) -> ('AX, 'R) t -> Ojs.t = fun
      (type __AX) -> fun (type __R) ->
      fun (__AX_to_js : __AX -> Ojs.t) ->
        fun (__R_to_js : __R -> Ojs.t) -> fun (x4018 : Ojs.t) -> x4018
    let (create : ('AX, 'R) t -> args:'AX list -> 'R) =
      fun (x4023 : ('AX, 'R) t) ->
        fun ~args:(x4020 : 'AX list) ->
          Obj.magic
            (Ojs.new_obj_arr (t_to_js Obj.magic Obj.magic x4023)
               (let x4021 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                List.iter
                  (fun (x4022 : 'AX) ->
                     ignore (Ojs.call x4021 "push" [|(Obj.magic x4022)|]))
                  x4020;
                x4021))
  end
module AnonymousInterface22 =
  struct
    type ('A, 'T) t = Ojs.t
    let rec t_of_js :
      'A 'T . (Ojs.t -> 'A) -> (Ojs.t -> 'T) -> Ojs.t -> ('A, 'T) t = fun
      (type __A) -> fun (type __T) ->
      fun (__A_of_js : Ojs.t -> __A) ->
        fun (__T_of_js : Ojs.t -> __T) -> fun (x4027 : Ojs.t) -> x4027
    and t_to_js :
      'A 'T . ('A -> Ojs.t) -> ('T -> Ojs.t) -> ('A, 'T) t -> Ojs.t = fun
      (type __A) -> fun (type __T) ->
      fun (__A_to_js : __A -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) -> fun (x4026 : Ojs.t) -> x4026
    let (create : ('A, 'T) t -> args:any list -> 'T) =
      fun (x4031 : ('A, 'T) t) ->
        fun ~args:(x4028 : any list) ->
          Obj.magic
            (Ojs.new_obj_arr (t_to_js Obj.magic Obj.magic x4031)
               (let x4029 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                List.iter
                  (fun (x4030 : any) ->
                     ignore (Ojs.call x4029 "push" [|(any_to_js x4030)|]))
                  x4028;
                x4029))
  end
module AnonymousInterface21 =
  struct
    type ('A, 'R) t = Ojs.t
    let rec t_of_js :
      'A 'R . (Ojs.t -> 'A) -> (Ojs.t -> 'R) -> Ojs.t -> ('A, 'R) t = fun
      (type __A) -> fun (type __R) ->
      fun (__A_of_js : Ojs.t -> __A) ->
        fun (__R_of_js : Ojs.t -> __R) -> fun (x4035 : Ojs.t) -> x4035
    and t_to_js :
      'A 'R . ('A -> Ojs.t) -> ('R -> Ojs.t) -> ('A, 'R) t -> Ojs.t = fun
      (type __A) -> fun (type __R) ->
      fun (__A_to_js : __A -> Ojs.t) ->
        fun (__R_to_js : __R -> Ojs.t) -> fun (x4034 : Ojs.t) -> x4034
    let (create : ('A, 'R) t -> args:any list -> 'R) =
      fun (x4039 : ('A, 'R) t) ->
        fun ~args:(x4036 : any list) ->
          Obj.magic
            (Ojs.new_obj_arr (t_to_js Obj.magic Obj.magic x4039)
               (let x4037 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                List.iter
                  (fun (x4038 : any) ->
                     ignore (Ojs.call x4037 "push" [|(any_to_js x4038)|]))
                  x4036;
                x4037))
  end
module AnonymousInterface20 =
  struct
    type ('A, 'A0, 'R) t = Ojs.t
    let rec t_of_js :
      'A 'A0 'R .
        (Ojs.t -> 'A) ->
          (Ojs.t -> 'A0) -> (Ojs.t -> 'R) -> Ojs.t -> ('A, 'A0, 'R) t
      = fun (type __A) -> fun (type __A0) -> fun (type __R) ->
      fun (__A_of_js : Ojs.t -> __A) ->
        fun (__A0_of_js : Ojs.t -> __A0) ->
          fun (__R_of_js : Ojs.t -> __R) -> fun (x4043 : Ojs.t) -> x4043
    and t_to_js :
      'A 'A0 'R .
        ('A -> Ojs.t) ->
          ('A0 -> Ojs.t) -> ('R -> Ojs.t) -> ('A, 'A0, 'R) t -> Ojs.t
      = fun (type __A) -> fun (type __A0) -> fun (type __R) ->
      fun (__A_to_js : __A -> Ojs.t) ->
        fun (__A0_to_js : __A0 -> Ojs.t) ->
          fun (__R_to_js : __R -> Ojs.t) -> fun (x4042 : Ojs.t) -> x4042
    let (create : ('A, 'A0, 'R) t -> arg0:'A0 -> args:any list -> 'R) =
      fun (x4048 : ('A, 'A0, 'R) t) ->
        fun ~arg0:(x4044 : 'A0) ->
          fun ~args:(x4045 : any list) ->
            Obj.magic
              (Ojs.new_obj_arr (t_to_js Obj.magic Obj.magic Obj.magic x4048)
                 (let x4046 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore (Ojs.call x4046 "push" [|(Obj.magic x4044)|]);
                  List.iter
                    (fun (x4047 : any) ->
                       ignore (Ojs.call x4046 "push" [|(any_to_js x4047)|]))
                    x4045;
                  x4046))
  end
module AnonymousInterface19 =
  struct
    type ('A, 'A0, 'A1, 'R) t = Ojs.t
    let rec t_of_js :
      'A 'A0 'A1 'R .
        (Ojs.t -> 'A) ->
          (Ojs.t -> 'A0) ->
            (Ojs.t -> 'A1) -> (Ojs.t -> 'R) -> Ojs.t -> ('A, 'A0, 'A1, 'R) t
      = fun (type __A) -> fun (type __A0) -> fun (type __A1) -> fun (type
      __R) ->
      fun (__A_of_js : Ojs.t -> __A) ->
        fun (__A0_of_js : Ojs.t -> __A0) ->
          fun (__A1_of_js : Ojs.t -> __A1) ->
            fun (__R_of_js : Ojs.t -> __R) -> fun (x4053 : Ojs.t) -> x4053
    and t_to_js :
      'A 'A0 'A1 'R .
        ('A -> Ojs.t) ->
          ('A0 -> Ojs.t) ->
            ('A1 -> Ojs.t) -> ('R -> Ojs.t) -> ('A, 'A0, 'A1, 'R) t -> Ojs.t
      = fun (type __A) -> fun (type __A0) -> fun (type __A1) -> fun (type
      __R) ->
      fun (__A_to_js : __A -> Ojs.t) ->
        fun (__A0_to_js : __A0 -> Ojs.t) ->
          fun (__A1_to_js : __A1 -> Ojs.t) ->
            fun (__R_to_js : __R -> Ojs.t) -> fun (x4052 : Ojs.t) -> x4052
    let (create :
      ('A, 'A0, 'A1, 'R) t -> arg0:'A0 -> arg1:'A1 -> args:any list -> 'R) =
      fun (x4059 : ('A, 'A0, 'A1, 'R) t) ->
        fun ~arg0:(x4054 : 'A0) ->
          fun ~arg1:(x4055 : 'A1) ->
            fun ~args:(x4056 : any list) ->
              Obj.magic
                (Ojs.new_obj_arr
                   (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic x4059)
                   (let x4057 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore (Ojs.call x4057 "push" [|(Obj.magic x4054)|]);
                    ignore (Ojs.call x4057 "push" [|(Obj.magic x4055)|]);
                    List.iter
                      (fun (x4058 : any) ->
                         ignore (Ojs.call x4057 "push" [|(any_to_js x4058)|]))
                      x4056;
                    x4057))
  end
module AnonymousInterface18 =
  struct
    type ('A, 'A0, 'A1, 'A2, 'R) t = Ojs.t
    let rec t_of_js :
      'A 'A0 'A1 'A2 'R .
        (Ojs.t -> 'A) ->
          (Ojs.t -> 'A0) ->
            (Ojs.t -> 'A1) ->
              (Ojs.t -> 'A2) ->
                (Ojs.t -> 'R) -> Ojs.t -> ('A, 'A0, 'A1, 'A2, 'R) t
      = fun (type __A) -> fun (type __A0) -> fun (type __A1) -> fun (type
      __A2) -> fun (type __R) ->
      fun (__A_of_js : Ojs.t -> __A) ->
        fun (__A0_of_js : Ojs.t -> __A0) ->
          fun (__A1_of_js : Ojs.t -> __A1) ->
            fun (__A2_of_js : Ojs.t -> __A2) ->
              fun (__R_of_js : Ojs.t -> __R) -> fun (x4065 : Ojs.t) -> x4065
    and t_to_js :
      'A 'A0 'A1 'A2 'R .
        ('A -> Ojs.t) ->
          ('A0 -> Ojs.t) ->
            ('A1 -> Ojs.t) ->
              ('A2 -> Ojs.t) ->
                ('R -> Ojs.t) -> ('A, 'A0, 'A1, 'A2, 'R) t -> Ojs.t
      = fun (type __A) -> fun (type __A0) -> fun (type __A1) -> fun (type
      __A2) -> fun (type __R) ->
      fun (__A_to_js : __A -> Ojs.t) ->
        fun (__A0_to_js : __A0 -> Ojs.t) ->
          fun (__A1_to_js : __A1 -> Ojs.t) ->
            fun (__A2_to_js : __A2 -> Ojs.t) ->
              fun (__R_to_js : __R -> Ojs.t) -> fun (x4064 : Ojs.t) -> x4064
    let (create :
      ('A, 'A0, 'A1, 'A2, 'R) t ->
        arg0:'A0 -> arg1:'A1 -> arg2:'A2 -> args:any list -> 'R)
      =
      fun (x4072 : ('A, 'A0, 'A1, 'A2, 'R) t) ->
        fun ~arg0:(x4066 : 'A0) ->
          fun ~arg1:(x4067 : 'A1) ->
            fun ~arg2:(x4068 : 'A2) ->
              fun ~args:(x4069 : any list) ->
                Obj.magic
                  (Ojs.new_obj_arr
                     (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic
                        Obj.magic x4072)
                     (let x4070 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore (Ojs.call x4070 "push" [|(Obj.magic x4066)|]);
                      ignore (Ojs.call x4070 "push" [|(Obj.magic x4067)|]);
                      ignore (Ojs.call x4070 "push" [|(Obj.magic x4068)|]);
                      List.iter
                        (fun (x4071 : any) ->
                           ignore
                             (Ojs.call x4070 "push" [|(any_to_js x4071)|]))
                        x4069;
                      x4070))
  end
module AnonymousInterface17 =
  struct
    type ('A, 'A0, 'A1, 'A2, 'A3, 'R) t = Ojs.t
    let rec t_of_js :
      'A 'A0 'A1 'A2 'A3 'R .
        (Ojs.t -> 'A) ->
          (Ojs.t -> 'A0) ->
            (Ojs.t -> 'A1) ->
              (Ojs.t -> 'A2) ->
                (Ojs.t -> 'A3) ->
                  (Ojs.t -> 'R) -> Ojs.t -> ('A, 'A0, 'A1, 'A2, 'A3, 'R) t
      = fun (type __A) -> fun (type __A0) -> fun (type __A1) -> fun (type
      __A2) -> fun (type __A3) -> fun (type __R) ->
      fun (__A_of_js : Ojs.t -> __A) ->
        fun (__A0_of_js : Ojs.t -> __A0) ->
          fun (__A1_of_js : Ojs.t -> __A1) ->
            fun (__A2_of_js : Ojs.t -> __A2) ->
              fun (__A3_of_js : Ojs.t -> __A3) ->
                fun (__R_of_js : Ojs.t -> __R) ->
                  fun (x4079 : Ojs.t) -> x4079
    and t_to_js :
      'A 'A0 'A1 'A2 'A3 'R .
        ('A -> Ojs.t) ->
          ('A0 -> Ojs.t) ->
            ('A1 -> Ojs.t) ->
              ('A2 -> Ojs.t) ->
                ('A3 -> Ojs.t) ->
                  ('R -> Ojs.t) -> ('A, 'A0, 'A1, 'A2, 'A3, 'R) t -> Ojs.t
      = fun (type __A) -> fun (type __A0) -> fun (type __A1) -> fun (type
      __A2) -> fun (type __A3) -> fun (type __R) ->
      fun (__A_to_js : __A -> Ojs.t) ->
        fun (__A0_to_js : __A0 -> Ojs.t) ->
          fun (__A1_to_js : __A1 -> Ojs.t) ->
            fun (__A2_to_js : __A2 -> Ojs.t) ->
              fun (__A3_to_js : __A3 -> Ojs.t) ->
                fun (__R_to_js : __R -> Ojs.t) ->
                  fun (x4078 : Ojs.t) -> x4078
    let (create :
      ('A, 'A0, 'A1, 'A2, 'A3, 'R) t ->
        arg0:'A0 -> arg1:'A1 -> arg2:'A2 -> arg3:'A3 -> args:any list -> 'R)
      =
      fun (x4087 : ('A, 'A0, 'A1, 'A2, 'A3, 'R) t) ->
        fun ~arg0:(x4080 : 'A0) ->
          fun ~arg1:(x4081 : 'A1) ->
            fun ~arg2:(x4082 : 'A2) ->
              fun ~arg3:(x4083 : 'A3) ->
                fun ~args:(x4084 : any list) ->
                  Obj.magic
                    (Ojs.new_obj_arr
                       (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic
                          Obj.magic Obj.magic x4087)
                       (let x4085 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        ignore (Ojs.call x4085 "push" [|(Obj.magic x4080)|]);
                        ignore (Ojs.call x4085 "push" [|(Obj.magic x4081)|]);
                        ignore (Ojs.call x4085 "push" [|(Obj.magic x4082)|]);
                        ignore (Ojs.call x4085 "push" [|(Obj.magic x4083)|]);
                        List.iter
                          (fun (x4086 : any) ->
                             ignore
                               (Ojs.call x4085 "push" [|(any_to_js x4086)|]))
                          x4084;
                        x4085))
  end
module NewableFunction =
  struct
    type t = [ `Function  | `Function  | `NewableFunction ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4095 : Ojs.t) -> t_of_js x4095
    and t_0_to_js : t_0 -> Ojs.t = fun (x4094 : t) -> t_to_js x4094
    type tags = [ `Function  | `Function  | `NewableFunction ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `NewableFunction ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4098 : Ojs.t) -> intf_of_js __tags_of_js x4098
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4096 : __tags intf) -> intf_to_js __tags_to_js x4096
    let (apply_ :
      'tags this -> this:'T AnonymousInterface27.t -> thisArg:'T -> unit) =
      fun (x4103 : 'tags this) ->
        fun ~this:(x4100 : 'T AnonymousInterface27.t) ->
          fun ~thisArg:(x4102 : 'T) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x4103) "apply"
                 [|(AnonymousInterface27.t_to_js Obj.magic x4100);(Obj.magic
                                                                    x4102)|])
    let (apply_' :
      'tags this ->
        this:('A, 'T) AnonymousInterface22.t -> thisArg:'T -> args:'A -> unit)
      =
      fun (x4110 : 'tags this) ->
        fun ~this:(x4105 : ('A, 'T) AnonymousInterface22.t) ->
          fun ~thisArg:(x4108 : 'T) ->
            fun ~args:(x4109 : 'A) ->
              ignore
                (Ojs.call (this_to_js Obj.magic x4110) "apply"
                   [|(AnonymousInterface22.t_to_js Obj.magic Obj.magic x4105);(
                     Obj.magic x4108);(Obj.magic x4109)|])
    let (call :
      'tags this ->
        this:('A, 'T) AnonymousInterface22.t ->
          thisArg:'T -> args:any list -> unit)
      =
      fun (x4119 : 'tags this) ->
        fun ~this:(x4112 : ('A, 'T) AnonymousInterface22.t) ->
          fun ~thisArg:(x4113 : 'T) ->
            fun ~args:(x4114 : any list) ->
              ignore
                (let x4121 = this_to_js Obj.magic x4119 in
                 Ojs.call (Ojs.get_prop_ascii x4121 "call") "apply"
                   [|x4121;((let x4115 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4115 "push"
                                  [|(AnonymousInterface22.t_to_js Obj.magic
                                       Obj.magic x4112)|]);
                             ignore
                               (Ojs.call x4115 "push" [|(Obj.magic x4113)|]);
                             List.iter
                               (fun (x4116 : any) ->
                                  ignore
                                    (Ojs.call x4115 "push"
                                       [|(any_to_js x4116)|])) x4114;
                             x4115))|])
    let (bind : 'tags this -> this:'T -> thisArg:any -> 'T) =
      fun (x4124 : 'tags this) ->
        fun ~this:(x4122 : 'T) ->
          fun ~thisArg:(x4123 : any) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x4124) "bind"
                 [|(Obj.magic x4122);(any_to_js x4123)|])
    let (bind' :
      'tags this ->
        this:('A, 'A0, 'R) AnonymousInterface20.t ->
          thisArg:any -> arg0:'A0 -> ('A, 'R) AnonymousInterface21.t)
      =
      fun (x4132 : 'tags this) ->
        fun ~this:(x4126 : ('A, 'A0, 'R) AnonymousInterface20.t) ->
          fun ~thisArg:(x4130 : any) ->
            fun ~arg0:(x4131 : 'A0) ->
              AnonymousInterface21.t_of_js Obj.magic Obj.magic
                (Ojs.call (this_to_js Obj.magic x4132) "bind"
                   [|(AnonymousInterface20.t_to_js Obj.magic Obj.magic
                        Obj.magic x4126);(any_to_js x4130);(Obj.magic x4131)|])
    let (bind'' :
      'tags this ->
        this:('A, 'A0, 'A1, 'R) AnonymousInterface19.t ->
          thisArg:any ->
            arg0:'A0 -> arg1:'A1 -> ('A, 'R) AnonymousInterface21.t)
      =
      fun (x4144 : 'tags this) ->
        fun ~this:(x4136 : ('A, 'A0, 'A1, 'R) AnonymousInterface19.t) ->
          fun ~thisArg:(x4141 : any) ->
            fun ~arg0:(x4142 : 'A0) ->
              fun ~arg1:(x4143 : 'A1) ->
                AnonymousInterface21.t_of_js Obj.magic Obj.magic
                  (Ojs.call (this_to_js Obj.magic x4144) "bind"
                     [|(AnonymousInterface19.t_to_js Obj.magic Obj.magic
                          Obj.magic Obj.magic x4136);(any_to_js x4141);(
                       Obj.magic x4142);(Obj.magic x4143)|])
    let (bind''' :
      'tags this ->
        this:('A, 'A0, 'A1, 'A2, 'R) AnonymousInterface18.t ->
          thisArg:any ->
            arg0:'A0 ->
              arg1:'A1 -> arg2:'A2 -> ('A, 'R) AnonymousInterface21.t)
      =
      fun (x4158 : 'tags this) ->
        fun ~this:(x4148 : ('A, 'A0, 'A1, 'A2, 'R) AnonymousInterface18.t) ->
          fun ~thisArg:(x4154 : any) ->
            fun ~arg0:(x4155 : 'A0) ->
              fun ~arg1:(x4156 : 'A1) ->
                fun ~arg2:(x4157 : 'A2) ->
                  AnonymousInterface21.t_of_js Obj.magic Obj.magic
                    (Ojs.call (this_to_js Obj.magic x4158) "bind"
                       [|(AnonymousInterface18.t_to_js Obj.magic Obj.magic
                            Obj.magic Obj.magic Obj.magic x4148);(any_to_js
                                                                    x4154);(
                         Obj.magic x4155);(Obj.magic x4156);(Obj.magic x4157)|])
    let (bind'''' :
      'tags this ->
        this:('A, 'A0, 'A1, 'A2, 'A3, 'R) AnonymousInterface17.t ->
          thisArg:any ->
            arg0:'A0 ->
              arg1:'A1 ->
                arg2:'A2 -> arg3:'A3 -> ('A, 'R) AnonymousInterface21.t)
      =
      fun (x4174 : 'tags this) ->
        fun
          ~this:(x4162 : ('A, 'A0, 'A1, 'A2, 'A3, 'R) AnonymousInterface17.t)
          ->
          fun ~thisArg:(x4169 : any) ->
            fun ~arg0:(x4170 : 'A0) ->
              fun ~arg1:(x4171 : 'A1) ->
                fun ~arg2:(x4172 : 'A2) ->
                  fun ~arg3:(x4173 : 'A3) ->
                    AnonymousInterface21.t_of_js Obj.magic Obj.magic
                      (Ojs.call (this_to_js Obj.magic x4174) "bind"
                         [|(AnonymousInterface17.t_to_js Obj.magic Obj.magic
                              Obj.magic Obj.magic Obj.magic Obj.magic x4162);(
                           any_to_js x4169);(Obj.magic x4170);(Obj.magic
                                                                 x4171);(
                           Obj.magic x4172);(Obj.magic x4173)|])
    let (bind''''' :
      'tags this ->
        this:('AX, 'R) AnonymousInterface23.t ->
          thisArg:any -> args:'AX list -> ('AX, 'R) AnonymousInterface23.t)
      =
      fun (x4185 : 'tags this) ->
        fun ~this:(x4178 : ('AX, 'R) AnonymousInterface23.t) ->
          fun ~thisArg:(x4179 : any) ->
            fun ~args:(x4180 : 'AX list) ->
              AnonymousInterface23.t_of_js Obj.magic Obj.magic
                (let x4187 = this_to_js Obj.magic x4185 in
                 Ojs.call (Ojs.get_prop_ascii x4187 "bind") "apply"
                   [|x4187;((let x4181 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4181 "push"
                                  [|(AnonymousInterface23.t_to_js Obj.magic
                                       Obj.magic x4178)|]);
                             ignore
                               (Ojs.call x4181 "push" [|(any_to_js x4179)|]);
                             List.iter
                               (fun (x4182 : 'AX) ->
                                  ignore
                                    (Ojs.call x4181 "push"
                                       [|(Obj.magic x4182)|])) x4180;
                             x4181))|])
    let cast_from = Obj.magic
  end
module TypedPropertyDescriptor =
  struct
    type 'T t = [ `TypedPropertyDescriptor of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4192 : Ojs.t) -> t_of_js __T_of_js x4192
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x4190 : __T t) -> t_to_js __T_to_js x4190
    type 'T tags = [ `TypedPropertyDescriptor of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `TypedPropertyDescriptor of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4196 : Ojs.t) -> intf_of_js __tags_of_js x4196
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4194 : __tags intf) -> intf_to_js __tags_to_js x4194
    let (get_enumerable : ('tags, 'T) this -> bool) =
      fun (x4198 : ('tags, 'T) this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x4198)
             "enumerable")
    let (set_enumerable : ('tags, 'T) this -> bool -> unit) =
      fun (x4201 : ('tags, 'T) this) ->
        fun (x4202 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x4201)
            "enumerable" (Ojs.bool_to_js x4202)
    let (get_configurable : ('tags, 'T) this -> bool) =
      fun (x4205 : ('tags, 'T) this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x4205)
             "configurable")
    let (set_configurable : ('tags, 'T) this -> bool -> unit) =
      fun (x4208 : ('tags, 'T) this) ->
        fun (x4209 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x4208)
            "configurable" (Ojs.bool_to_js x4209)
    let (get_writable : ('tags, 'T) this -> bool) =
      fun (x4212 : ('tags, 'T) this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x4212)
             "writable")
    let (set_writable : ('tags, 'T) this -> bool -> unit) =
      fun (x4215 : ('tags, 'T) this) ->
        fun (x4216 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x4215)
            "writable" (Ojs.bool_to_js x4216)
    let (get_value : ('tags, 'T) this -> 'T) =
      fun (x4219 : ('tags, 'T) this) ->
        Obj.magic
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x4219) "value")
    let (set_value : ('tags, 'T) this -> 'T -> unit) =
      fun (x4222 : ('tags, 'T) this) ->
        fun (x4223 : 'T) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x4222) "value"
            (Obj.magic x4223)
    let (get_ : ('tags, 'T) this -> 'T) =
      fun (x4226 : ('tags, 'T) this) ->
        Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x4226) "get" [||])
    let (set_ : ('tags, 'T) this -> value:'T -> unit) =
      fun (x4230 : ('tags, 'T) this) ->
        fun ~value:(x4229 : 'T) ->
          ignore
            (Ojs.call (this_to_js Obj.magic Obj.magic x4230) "set"
               [|(Obj.magic x4229)|])
    let cast_from = Obj.magic
  end
module MethodDecorator =
  struct
    type t = [ `MethodDecorator ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4234 : Ojs.t) -> t_of_js x4234
    and t_0_to_js : t_0 -> Ojs.t = fun (x4233 : t) -> t_to_js x4233
    type tags = [ `MethodDecorator ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `MethodDecorator ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4237 : Ojs.t) -> intf_of_js __tags_of_js x4237
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4235 : __tags intf) -> intf_to_js __tags_to_js x4235
    let (apply :
      'tags this ->
        target:Object.t ->
          propertyKey:symbol or_string ->
            descriptor:'T TypedPropertyDescriptor.t ->
              (unit, 'T TypedPropertyDescriptor.t) union2)
      =
      fun (x4244 : 'tags this) ->
        fun ~target:(x4239 : Object.t) ->
          fun ~propertyKey:(x4240 : symbol or_string) ->
            fun ~descriptor:(x4242 : 'T TypedPropertyDescriptor.t) ->
              union2_of_js Ojs.unit_of_js
                (fun (x4247 : Ojs.t) ->
                   TypedPropertyDescriptor.t_of_js Obj.magic x4247)
                (Ojs.apply (this_to_js Obj.magic x4244)
                   [|(Object.t_to_js x4239);(or_string_to_js symbol_to_js
                                               x4240);(TypedPropertyDescriptor.t_to_js
                                                         Obj.magic x4242)|])
    let cast_from = Obj.magic
  end
module Math =
  struct
    let (clz32 : float -> float) =
      fun (x4249 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "clz32"
             [|(Ojs.float_to_js x4249)|])
    let (imul : x:float -> y:float -> float) =
      fun ~x:(x4250 : float) ->
        fun ~y:(x4251 : float) ->
          Ojs.float_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "imul"
               [|(Ojs.float_to_js x4250);(Ojs.float_to_js x4251)|])
    let (sign : float -> float) =
      fun (x4252 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "sign"
             [|(Ojs.float_to_js x4252)|])
    let (log10 : float -> float) =
      fun (x4253 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "log10"
             [|(Ojs.float_to_js x4253)|])
    let (log2 : float -> float) =
      fun (x4254 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "log2"
             [|(Ojs.float_to_js x4254)|])
    let (log1p : float -> float) =
      fun (x4255 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "log1p"
             [|(Ojs.float_to_js x4255)|])
    let (expm1 : float -> float) =
      fun (x4256 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "expm1"
             [|(Ojs.float_to_js x4256)|])
    let (cosh : float -> float) =
      fun (x4257 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "cosh"
             [|(Ojs.float_to_js x4257)|])
    let (sinh : float -> float) =
      fun (x4258 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "sinh"
             [|(Ojs.float_to_js x4258)|])
    let (tanh : float -> float) =
      fun (x4259 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "tanh"
             [|(Ojs.float_to_js x4259)|])
    let (acosh : float -> float) =
      fun (x4260 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "acosh"
             [|(Ojs.float_to_js x4260)|])
    let (asinh : float -> float) =
      fun (x4261 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "asinh"
             [|(Ojs.float_to_js x4261)|])
    let (atanh : float -> float) =
      fun (x4262 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "atanh"
             [|(Ojs.float_to_js x4262)|])
    let (hypot : float list -> float) =
      fun (x4263 : float list) ->
        Ojs.float_of_js
          (let x4266 = Ojs.get_prop_ascii Ojs.global "Math" in
           Ojs.call (Ojs.get_prop_ascii x4266 "hypot") "apply"
             [|x4266;((let x4264 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x4265 : float) ->
                            ignore
                              (Ojs.call x4264 "push"
                                 [|(Ojs.float_to_js x4265)|])) x4263;
                       x4264))|])
    let (trunc : float -> float) =
      fun (x4267 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "trunc"
             [|(Ojs.float_to_js x4267)|])
    let (fround : float -> float) =
      fun (x4268 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "fround"
             [|(Ojs.float_to_js x4268)|])
    let (cbrt : float -> float) =
      fun (x4269 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "cbrt"
             [|(Ojs.float_to_js x4269)|])
    let (e : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "E")
    let (ln10 : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "LN10")
    let (ln2 : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "LN2")
    let (log2e : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "LOG2E")
    let (log10e : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "LOG10E")
    let (pi : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "PI")
    let (sqrt1_2 : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math")
             "SQRT1_2")
    let (sqrt2 : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "SQRT2")
    let (abs : float -> float) =
      fun (x4270 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "abs"
             [|(Ojs.float_to_js x4270)|])
    let (acos : float -> float) =
      fun (x4271 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "acos"
             [|(Ojs.float_to_js x4271)|])
    let (asin : float -> float) =
      fun (x4272 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "asin"
             [|(Ojs.float_to_js x4272)|])
    let (atan : float -> float) =
      fun (x4273 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "atan"
             [|(Ojs.float_to_js x4273)|])
    let (atan2 : y:float -> x:float -> float) =
      fun ~y:(x4274 : float) ->
        fun ~x:(x4275 : float) ->
          Ojs.float_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "atan2"
               [|(Ojs.float_to_js x4274);(Ojs.float_to_js x4275)|])
    let (ceil : float -> float) =
      fun (x4276 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "ceil"
             [|(Ojs.float_to_js x4276)|])
    let (cos : float -> float) =
      fun (x4277 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "cos"
             [|(Ojs.float_to_js x4277)|])
    let (exp : float -> float) =
      fun (x4278 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "exp"
             [|(Ojs.float_to_js x4278)|])
    let (floor : float -> float) =
      fun (x4279 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "floor"
             [|(Ojs.float_to_js x4279)|])
    let (log : float -> float) =
      fun (x4280 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "log"
             [|(Ojs.float_to_js x4280)|])
    let (max : float list -> float) =
      fun (x4281 : float list) ->
        Ojs.float_of_js
          (let x4284 = Ojs.get_prop_ascii Ojs.global "Math" in
           Ojs.call (Ojs.get_prop_ascii x4284 "max") "apply"
             [|x4284;((let x4282 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x4283 : float) ->
                            ignore
                              (Ojs.call x4282 "push"
                                 [|(Ojs.float_to_js x4283)|])) x4281;
                       x4282))|])
    let (min : float list -> float) =
      fun (x4285 : float list) ->
        Ojs.float_of_js
          (let x4288 = Ojs.get_prop_ascii Ojs.global "Math" in
           Ojs.call (Ojs.get_prop_ascii x4288 "min") "apply"
             [|x4288;((let x4286 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x4287 : float) ->
                            ignore
                              (Ojs.call x4286 "push"
                                 [|(Ojs.float_to_js x4287)|])) x4285;
                       x4286))|])
    let (pow : x:float -> y:float -> float) =
      fun ~x:(x4289 : float) ->
        fun ~y:(x4290 : float) ->
          Ojs.float_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "pow"
               [|(Ojs.float_to_js x4289);(Ojs.float_to_js x4290)|])
    let (random : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "random" [||])
    let (round : float -> float) =
      fun (x4291 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "round"
             [|(Ojs.float_to_js x4291)|])
    let (sin : float -> float) =
      fun (x4292 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "sin"
             [|(Ojs.float_to_js x4292)|])
    let (sqrt : float -> float) =
      fun (x4293 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "sqrt"
             [|(Ojs.float_to_js x4293)|])
    let (tan : float -> float) =
      fun (x4294 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "tan"
             [|(Ojs.float_to_js x4294)|])
  end
module Map =
  struct
    type ('K, 'V) t =
      [ `IterableIterator of ('K * 'V) 
      | `Iterator of (('K * 'V) * any * never or_undefined) 
      | `Map of ('K * 'V) ] intf
    let rec t_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) t =
      fun _K -> fun _V -> Obj.magic
    and t_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) t -> Ojs.t =
      fun _K -> fun _V -> Obj.magic
    type ('K, 'V) t_2 = ('K, 'V) t
    let rec t_2_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) t_2 = fun
      (type __K) -> fun (type __V) ->
      fun (__K_of_js : Ojs.t -> __K) ->
        fun (__V_of_js : Ojs.t -> __V) ->
          fun (x4298 : Ojs.t) -> t_of_js __K_of_js __V_of_js x4298
    and t_2_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) t_2 -> Ojs.t = fun
      (type __K) -> fun (type __V) ->
      fun (__K_to_js : __K -> Ojs.t) ->
        fun (__V_to_js : __V -> Ojs.t) ->
          fun (x4295 : (__K, __V) t) -> t_to_js __K_to_js __V_to_js x4295
    type ('K, 'V) tags =
      [ `IterableIterator of ('K * 'V) 
      | `Iterator of (('K * 'V) * any * never or_undefined) 
      | `Map of ('K * 'V) ]
    type ('K, 'V) tags_2 = ('K, 'V) tags
    type ('tags, 'K, 'V) this =
      'tags intf constraint 'tags = [> `Map of ('K * 'V) ]
    let rec this_of_js :
      'tags 'K 'V .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('tags, 'K, 'V) this
      = fun (type __tags) -> fun (type __K) -> fun (type __V) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__K_of_js : Ojs.t -> __K) ->
          fun (__V_of_js : Ojs.t -> __V) ->
            fun (x4303 : Ojs.t) -> intf_of_js __tags_of_js x4303
    and this_to_js :
      'tags 'K 'V .
        ('tags -> Ojs.t) ->
          ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('tags, 'K, 'V) this -> Ojs.t
      = fun (type __tags) -> fun (type __K) -> fun (type __V) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__K_to_js : __K -> Ojs.t) ->
          fun (__V_to_js : __V -> Ojs.t) ->
            fun (x4301 : __tags intf) -> intf_to_js __tags_to_js x4301
    let (clear : ('tags, 'K, 'V) this -> unit) =
      fun (x4305 : ('tags, 'K, 'V) this) ->
        ignore
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4305) "clear"
             [||])
    let (delete : ('tags, 'K, 'V) this -> key:'K -> bool) =
      fun (x4310 : ('tags, 'K, 'V) this) ->
        fun ~key:(x4309 : 'K) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4310)
               "delete" [|(Obj.magic x4309)|])
    let (forEach :
      ('tags, 'K, 'V) this ->
        callbackfn:(value:'V -> key:'K -> map:('K, 'V) t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x4323 : ('tags, 'K, 'V) this) ->
        fun
          ~callbackfn:(x4314 : value:'V -> key:'K -> map:('K, 'V) t -> unit)
          ->
          fun ?thisArg:(x4315 : any option) ->
            fun () ->
              ignore
                (let x4327 = this_to_js Obj.magic Obj.magic Obj.magic x4323 in
                 Ojs.call (Ojs.get_prop_ascii x4327 "forEach") "apply"
                   [|x4327;((let x4316 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4316 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4318 : Ojs.t) ->
                                          fun (x4319 : Ojs.t) ->
                                            fun (x4320 : Ojs.t) ->
                                              x4314 ~value:(Obj.magic x4318)
                                                ~key:(Obj.magic x4319)
                                                ~map:(t_of_js Obj.magic
                                                        Obj.magic x4320)))|]);
                             (match x4315 with
                              | Some x4317 ->
                                  ignore
                                    (Ojs.call x4316 "push"
                                       [|(any_to_js x4317)|])
                              | None -> ());
                             x4316))|])
    let (get_ : ('tags, 'K, 'V) this -> key:'K -> 'V or_undefined) =
      fun (x4329 : ('tags, 'K, 'V) this) ->
        fun ~key:(x4328 : 'K) ->
          or_undefined_of_js Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4329) "get"
               [|(Obj.magic x4328)|])
    let (has : ('tags, 'K, 'V) this -> key:'K -> bool) =
      fun (x4335 : ('tags, 'K, 'V) this) ->
        fun ~key:(x4334 : 'K) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4335) "has"
               [|(Obj.magic x4334)|])
    let (set_ :
      ('tags, 'K, 'V) this -> key:'K -> value:'V -> ('tags, 'K, 'V) this) =
      fun (x4341 : ('tags, 'K, 'V) this) ->
        fun ~key:(x4339 : 'K) ->
          fun ~value:(x4340 : 'V) ->
            this_of_js Obj.magic Obj.magic Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4341)
                 "set" [|(Obj.magic x4339);(Obj.magic x4340)|])
    let (get_size : ('tags, 'K, 'V) this -> float) =
      fun (x4348 : ('tags, 'K, 'V) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii
             (this_to_js Obj.magic Obj.magic Obj.magic x4348) "size")
    let (entries : ('tags, 'K, 'V) this -> ('K * 'V) IterableIterator.t) =
      fun (x4352 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js
          (fun (x4356 : Ojs.t) ->
             let x4357 = x4356 in
             ((Obj.magic (Ojs.array_get x4357 0)),
               (Obj.magic (Ojs.array_get x4357 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4352)
             "entries" [||])
    let (keys : ('tags, 'K, 'V) this -> 'K IterableIterator.t) =
      fun (x4358 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4358) "keys"
             [||])
    let (values : ('tags, 'K, 'V) this -> 'V IterableIterator.t) =
      fun (x4363 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4363) "values"
             [||])
    let (create : unit -> (any, any) t) =
      fun () ->
        t_of_js any_of_js any_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Map") [||])
    let (create' : ?entries:('K * 'V) list or_null -> unit -> ('K, 'V) t) =
      fun ?entries:(x4370 : ('K * 'V) list or_null option) ->
        fun () ->
          t_of_js Obj.magic Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Map")
               (let x4371 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x4370 with
                 | Some x4372 ->
                     ignore
                       (Ojs.call x4371 "push"
                          [|(or_null_to_js
                               (fun (x4373 : ('K * 'V) list) ->
                                  Ojs.list_to_js
                                    (fun (x4374 : ('K * 'V)) ->
                                       let (x4375, x4376) = x4374 in
                                       let x4377 = Ojs.array_make 2 in
                                       Ojs.array_set x4377 0
                                         (Obj.magic x4375);
                                       Ojs.array_set x4377 1
                                         (Obj.magic x4376);
                                       x4377) x4373) x4372)|])
                 | None -> ());
                x4371))
    let (prototype : unit -> (any, any) t) =
      fun () ->
        t_of_js any_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Map")
             "prototype")
    let (create'' : ('K * 'V) Iterable.t -> ('K, 'V) t) =
      fun (x4382 : ('K * 'V) Iterable.t) ->
        t_of_js Obj.magic Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Map")
             [|(Iterable.t_to_js
                  (fun (x4383 : ('K * 'V)) ->
                     let (x4384, x4385) = x4383 in
                     let x4386 = Ojs.array_make 2 in
                     Ojs.array_set x4386 0 (Obj.magic x4384);
                     Ojs.array_set x4386 1 (Obj.magic x4385);
                     x4386) x4382)|])
    let cast_from = Obj.magic
  end
module Lowercase =
  struct
    type 'S t = Ojs.t
    let rec t_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t = fun (type __S) ->
      fun (__S_of_js : Ojs.t -> __S) -> fun (x4390 : Ojs.t) -> x4390
    and t_to_js : 'S . ('S -> Ojs.t) -> 'S t -> Ojs.t = fun (type __S) ->
      fun (__S_to_js : __S -> Ojs.t) -> fun (x4389 : Ojs.t) -> x4389
    type 'S t_1 = 'S t
    let rec t_1_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t_1 = fun (type
      __S) ->
      fun (__S_of_js : Ojs.t -> __S) ->
        fun (x4393 : Ojs.t) -> t_of_js __S_of_js x4393
    and t_1_to_js : 'S . ('S -> Ojs.t) -> 'S t_1 -> Ojs.t = fun (type __S) ->
      fun (__S_to_js : __S -> Ojs.t) ->
        fun (x4391 : __S t) -> t_to_js __S_to_js x4391
  end
module JSON =
  struct
    let (parse :
      text:string ->
        ?reviver:(this:any -> key:string -> value:any -> any) -> unit -> any)
      =
      fun ~text:(x4395 : string) ->
        fun
          ?reviver:(x4396 :
                     (this:any -> key:string -> value:any -> any) option)
          ->
          fun () ->
            any_of_js
              (let x4402 = Ojs.get_prop_ascii Ojs.global "JSON" in
               Ojs.call (Ojs.get_prop_ascii x4402 "parse") "apply"
                 [|x4402;((let x4397 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x4397 "push"
                                [|(Ojs.string_to_js x4395)|]);
                           (match x4396 with
                            | Some x4398 ->
                                ignore
                                  (Ojs.call x4397 "push"
                                     [|(Ojs.fun_to_js 3
                                          (fun (x4399 : Ojs.t) ->
                                             fun (x4400 : Ojs.t) ->
                                               fun (x4401 : Ojs.t) ->
                                                 any_to_js
                                                   (x4398
                                                      ~this:(any_of_js x4399)
                                                      ~key:(Ojs.string_of_js
                                                              x4400)
                                                      ~value:(any_of_js x4401))))|])
                            | None -> ());
                           x4397))|])
    let (stringify :
      value:any ->
        ?replacer:(this:any -> key:string -> value:any -> any) ->
          ?space:string or_number -> unit -> string)
      =
      fun ~value:(x4403 : any) ->
        fun
          ?replacer:(x4404 :
                      (this:any -> key:string -> value:any -> any) option)
          ->
          fun ?space:(x4405 : string or_number option) ->
            fun () ->
              Ojs.string_of_js
                (let x4413 = Ojs.get_prop_ascii Ojs.global "JSON" in
                 Ojs.call (Ojs.get_prop_ascii x4413 "stringify") "apply"
                   [|x4413;((let x4406 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4406 "push" [|(any_to_js x4403)|]);
                             (match x4404 with
                              | Some x4409 ->
                                  ignore
                                    (Ojs.call x4406 "push"
                                       [|(Ojs.fun_to_js 3
                                            (fun (x4410 : Ojs.t) ->
                                               fun (x4411 : Ojs.t) ->
                                                 fun (x4412 : Ojs.t) ->
                                                   any_to_js
                                                     (x4409
                                                        ~this:(any_of_js
                                                                 x4410)
                                                        ~key:(Ojs.string_of_js
                                                                x4411)
                                                        ~value:(any_of_js
                                                                  x4412))))|])
                              | None -> ());
                             (match x4405 with
                              | Some x4407 ->
                                  ignore
                                    (Ojs.call x4406 "push"
                                       [|(or_number_to_js Ojs.string_to_js
                                            x4407)|])
                              | None -> ());
                             x4406))|])
    let (stringify' :
      value:any ->
        ?replacer:string or_number list or_null ->
          ?space:string or_number -> unit -> string)
      =
      fun ~value:(x4414 : any) ->
        fun ?replacer:(x4415 : string or_number list or_null option) ->
          fun ?space:(x4416 : string or_number option) ->
            fun () ->
              Ojs.string_of_js
                (let x4424 = Ojs.get_prop_ascii Ojs.global "JSON" in
                 Ojs.call (Ojs.get_prop_ascii x4424 "stringify") "apply"
                   [|x4424;((let x4417 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4417 "push" [|(any_to_js x4414)|]);
                             (match x4415 with
                              | Some x4420 ->
                                  ignore
                                    (Ojs.call x4417 "push"
                                       [|(or_null_to_js
                                            (fun
                                               (x4421 :
                                                 string or_number list)
                                               ->
                                               Ojs.list_to_js
                                                 (fun
                                                    (x4422 :
                                                      string or_number)
                                                    ->
                                                    or_number_to_js
                                                      Ojs.string_to_js x4422)
                                                 x4421) x4420)|])
                              | None -> ());
                             (match x4416 with
                              | Some x4418 ->
                                  ignore
                                    (Ojs.call x4417 "push"
                                       [|(or_number_to_js Ojs.string_to_js
                                            x4418)|])
                              | None -> ());
                             x4417))|])
  end
module AnonymousInterface14 =
  struct
    type t = Ojs.t
    let rec t_of_js : Ojs.t -> t = fun (x4426 : Ojs.t) -> x4426
    and t_to_js : t -> Ojs.t = fun (x4425 : Ojs.t) -> x4425
    let (create : t -> args:any list -> any) =
      fun (x4430 : t) ->
        fun ~args:(x4427 : any list) ->
          any_of_js
            (Ojs.new_obj_arr (t_to_js x4430)
               (let x4428 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                List.iter
                  (fun (x4429 : any) ->
                     ignore (Ojs.call x4428 "push" [|(any_to_js x4429)|]))
                  x4427;
                x4428))
  end
module InstanceType =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4432 : Ojs.t) -> any_of_js x4432
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x4431 : any) -> any_to_js x4431
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4435 : Ojs.t) -> t_of_js __T_of_js x4435
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x4433 : __T t) -> t_to_js __T_to_js x4433
  end
module ImportMeta =
  struct
    type t = [ `ImportMeta ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4438 : Ojs.t) -> t_of_js x4438
    and t_0_to_js : t_0 -> Ojs.t = fun (x4437 : t) -> t_to_js x4437
    type tags = [ `ImportMeta ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ImportMeta ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4441 : Ojs.t) -> intf_of_js __tags_of_js x4441
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4439 : __tags intf) -> intf_to_js __tags_to_js x4439
    let cast_from = Obj.magic
  end
module IArguments =
  struct
    type t =
      [ `ArrayLike of any  | `IArguments  | `IterableIterator of any 
      | `Iterator of (any * any * never or_undefined) ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4444 : Ojs.t) -> t_of_js x4444
    and t_0_to_js : t_0 -> Ojs.t = fun (x4443 : t) -> t_to_js x4443
    type tags =
      [ `ArrayLike of any  | `IArguments  | `IterableIterator of any 
      | `Iterator of (any * any * never or_undefined) ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `IArguments ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4447 : Ojs.t) -> intf_of_js __tags_of_js x4447
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4445 : __tags intf) -> intf_to_js __tags_to_js x4445
    let (get : 'tags this -> float -> any) =
      fun (x4449 : 'tags this) ->
        fun (x4451 : float) ->
          any_of_js
            (Ojs.get_prop (this_to_js Obj.magic x4449)
               (Ojs.float_to_js x4451))
    let (set : 'tags this -> float -> any -> unit) =
      fun (x4452 : 'tags this) ->
        fun (x4454 : float) ->
          fun (x4455 : any) ->
            Ojs.set_prop (this_to_js Obj.magic x4452) (Ojs.float_to_js x4454)
              (any_to_js x4455)
    let (get_length : 'tags this -> float) =
      fun (x4456 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4456) "length")
    let (set_length : 'tags this -> float -> unit) =
      fun (x4458 : 'tags this) ->
        fun (x4459 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4458) "length"
            (Ojs.float_to_js x4459)
    let (get_callee : 'tags this -> Function.t) =
      fun (x4461 : 'tags this) ->
        Function.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4461) "callee")
    let (set_callee : 'tags this -> Function.t -> unit) =
      fun (x4463 : 'tags this) ->
        fun (x4464 : Function.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4463) "callee"
            (Function.t_to_js x4464)
    let cast_from = Obj.magic
  end
module Generator =
  struct
    type ('T, 'TReturn, 'TNext) t =
      [ `Generator of ('T * 'TReturn * 'TNext) 
      | `Iterator of ('T * 'TReturn * 'TNext) ] intf
    let rec t_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    and t_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t -> Ojs.t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    type ('T, 'TReturn, 'TNext) t_3 = ('T, 'TReturn, 'TNext) t
    let rec t_3_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t_3
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (__TNext_of_js : Ojs.t -> __TNext) ->
            fun (x4470 : Ojs.t) ->
              t_of_js __T_of_js __TReturn_of_js __TNext_of_js x4470
    and t_3_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t_3 -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (__TNext_to_js : __TNext -> Ojs.t) ->
            fun (x4466 : (__T, __TReturn, __TNext) t) ->
              t_to_js __T_to_js __TReturn_to_js __TNext_to_js x4466
    type ('T, 'TReturn) t_2 = ('T, 'TReturn, unknown) t
    let rec t_2_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t_2
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (x4478 : Ojs.t) ->
            t_of_js __T_of_js __TReturn_of_js unknown_of_js x4478
    and t_2_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t_2 -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (x4474 : (__T, __TReturn, unknown) t) ->
            t_to_js __T_to_js __TReturn_to_js unknown_to_js x4474
    type 'T t_1 = ('T, any, unknown) t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4486 : Ojs.t) ->
          t_of_js __T_of_js any_of_js unknown_of_js x4486
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x4482 : (__T, any, unknown) t) ->
          t_to_js __T_to_js any_to_js unknown_to_js x4482
    type t_0 = (unknown, any, unknown) t
    let rec t_0_of_js : Ojs.t -> t_0 =
      fun (x4494 : Ojs.t) ->
        t_of_js unknown_of_js any_of_js unknown_of_js x4494
    and t_0_to_js : t_0 -> Ojs.t =
      fun (x4490 : (unknown, any, unknown) t) ->
        t_to_js unknown_to_js any_to_js unknown_to_js x4490
    type ('T, 'TReturn, 'TNext) tags =
      [ `Generator of ('T * 'TReturn * 'TNext) 
      | `Iterator of ('T * 'TReturn * 'TNext) ]
    type ('T, 'TReturn, 'TNext) tags_3 = ('T, 'TReturn, 'TNext) tags
    type ('T, 'TReturn) tags_2 = ('T, 'TReturn, unknown) tags
    type 'T tags_1 = ('T, any, unknown) tags
    type tags_0 = (unknown, any, unknown) tags
    type ('tags, 'T, 'TReturn, 'TNext) this =
      'tags intf constraint 'tags =
                  [> `Generator of ('T * 'TReturn * 'TNext) ]
    let rec this_of_js :
      'tags 'T 'TReturn 'TNext .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'T) ->
            (Ojs.t -> 'TReturn) ->
              (Ojs.t -> 'TNext) ->
                Ojs.t -> ('tags, 'T, 'TReturn, 'TNext) this
      = fun (type __tags) -> fun (type __T) -> fun (type __TReturn) -> fun
      (type __TNext) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
            fun (__TNext_of_js : Ojs.t -> __TNext) ->
              fun (x4500 : Ojs.t) -> intf_of_js __tags_of_js x4500
    and this_to_js :
      'tags 'T 'TReturn 'TNext .
        ('tags -> Ojs.t) ->
          ('T -> Ojs.t) ->
            ('TReturn -> Ojs.t) ->
              ('TNext -> Ojs.t) ->
                ('tags, 'T, 'TReturn, 'TNext) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) -> fun (type __TReturn) -> fun
      (type __TNext) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
            fun (__TNext_to_js : __TNext -> Ojs.t) ->
              fun (x4498 : __tags intf) -> intf_to_js __tags_to_js x4498
    let (next :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        args:any list -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x4505 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~args:(x4502 : any list) ->
          IteratorResult.t_of_js Obj.magic Obj.magic
            (let x4510 =
               this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x4505 in
             Ojs.call (Ojs.get_prop_ascii x4510 "next") "apply"
               [|x4510;((let x4503 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x4504 : any) ->
                              ignore
                                (Ojs.call x4503 "push" [|(any_to_js x4504)|]))
                           x4502;
                         x4503))|])
    let (return :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        value:'TReturn -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x4514 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~value:(x4513 : 'TReturn) ->
          IteratorResult.t_of_js Obj.magic Obj.magic
            (Ojs.call
               (this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x4514)
               "return" [|(Obj.magic x4513)|])
    let (throw :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        e:any -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x4522 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~e:(x4521 : any) ->
          IteratorResult.t_of_js Obj.magic Obj.magic
            (Ojs.call
               (this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x4522)
               "throw" [|(any_to_js x4521)|])
    let cast_from = Obj.magic
  end
module GeneratorFunction =
  struct
    type t = [ `GeneratorFunction ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4530 : Ojs.t) -> t_of_js x4530
    and t_0_to_js : t_0 -> Ojs.t = fun (x4529 : t) -> t_to_js x4529
    type tags = [ `GeneratorFunction ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `GeneratorFunction ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4533 : Ojs.t) -> intf_of_js __tags_of_js x4533
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4531 : __tags intf) -> intf_to_js __tags_to_js x4531
    let (create : 'tags this -> args:any list -> Generator.t_0) =
      fun (x4538 : 'tags this) ->
        fun ~args:(x4535 : any list) ->
          Generator.t_0_of_js
            (Ojs.new_obj_arr (this_to_js Obj.magic x4538)
               (let x4536 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                List.iter
                  (fun (x4537 : any) ->
                     ignore (Ojs.call x4536 "push" [|(any_to_js x4537)|]))
                  x4535;
                x4536))
    let (apply : 'tags this -> args:any list -> Generator.t_0) =
      fun (x4543 : 'tags this) ->
        fun ~args:(x4540 : any list) ->
          Generator.t_0_of_js
            (Ojs.call (this_to_js Obj.magic x4543) "apply"
               [|Ojs.null;((let x4541 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            List.iter
                              (fun (x4542 : any) ->
                                 ignore
                                   (Ojs.call x4541 "push"
                                      [|(any_to_js x4542)|])) x4540;
                            x4541))|])
    let (get_length : 'tags this -> float) =
      fun (x4545 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4545) "length")
    let (get_name : 'tags this -> string) =
      fun (x4547 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4547) "name")
    let (get_prototype : 'tags this -> Generator.t_0) =
      fun (x4549 : 'tags this) ->
        Generator.t_0_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4549) "prototype")
    let cast_from = Obj.magic
  end
module GeneratorFunctionConstructor =
  struct
    type t = [ `GeneratorFunctionConstructor ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4552 : Ojs.t) -> t_of_js x4552
    and t_0_to_js : t_0 -> Ojs.t = fun (x4551 : t) -> t_to_js x4551
    type tags = [ `GeneratorFunctionConstructor ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `GeneratorFunctionConstructor ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4555 : Ojs.t) -> intf_of_js __tags_of_js x4555
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4553 : __tags intf) -> intf_to_js __tags_to_js x4553
    let (create : 'tags this -> args:string list -> GeneratorFunction.t) =
      fun (x4560 : 'tags this) ->
        fun ~args:(x4557 : string list) ->
          GeneratorFunction.t_of_js
            (Ojs.new_obj_arr (this_to_js Obj.magic x4560)
               (let x4558 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                List.iter
                  (fun (x4559 : string) ->
                     ignore
                       (Ojs.call x4558 "push" [|(Ojs.string_to_js x4559)|]))
                  x4557;
                x4558))
    let (apply : 'tags this -> args:string list -> GeneratorFunction.t) =
      fun (x4565 : 'tags this) ->
        fun ~args:(x4562 : string list) ->
          GeneratorFunction.t_of_js
            (Ojs.call (this_to_js Obj.magic x4565) "apply"
               [|Ojs.null;((let x4563 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            List.iter
                              (fun (x4564 : string) ->
                                 ignore
                                   (Ojs.call x4563 "push"
                                      [|(Ojs.string_to_js x4564)|])) x4562;
                            x4563))|])
    let (get_length : 'tags this -> float) =
      fun (x4567 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4567) "length")
    let (get_name : 'tags this -> string) =
      fun (x4569 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4569) "name")
    let (get_prototype : 'tags this -> GeneratorFunction.t) =
      fun (x4571 : 'tags this) ->
        GeneratorFunction.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4571) "prototype")
    let cast_from = Obj.magic
  end
module Float64Array =
  struct
    type t =
      [ `ArrayLike of float  | `Float64Array  | `IterableIterator of float 
      | `Iterator of (float * any * never or_undefined) ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4574 : Ojs.t) -> t_of_js x4574
    and t_0_to_js : t_0 -> Ojs.t = fun (x4573 : t) -> t_to_js x4573
    type tags =
      [ `ArrayLike of float  | `Float64Array  | `IterableIterator of float 
      | `Iterator of (float * any * never or_undefined) ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Float64Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4577 : Ojs.t) -> intf_of_js __tags_of_js x4577
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4575 : __tags intf) -> intf_to_js __tags_to_js x4575
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x4583 : 'tags this) ->
        fun ~searchElement:(x4579 : float) ->
          fun ?fromIndex:(x4580 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x4585 = this_to_js Obj.magic x4583 in
                 Ojs.call (Ojs.get_prop_ascii x4585 "includes") "apply"
                   [|x4585;((let x4581 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4581 "push"
                                  [|(Ojs.float_to_js x4579)|]);
                             (match x4580 with
                              | Some x4582 ->
                                  ignore
                                    (Ojs.call x4581 "push"
                                       [|(Ojs.float_to_js x4582)|])
                              | None -> ());
                             x4581))|])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x4586 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4586)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x4588 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4588) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x4590 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4590) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x4592 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4592) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x4599 : 'tags this) ->
        fun ~target:(x4594 : float) ->
          fun ~start:(x4595 : float) ->
            fun ?end_:(x4596 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x4601 = this_to_js Obj.magic x4599 in
                   Ojs.call (Ojs.get_prop_ascii x4601 "copyWithin") "apply"
                     [|x4601;((let x4597 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4597 "push"
                                    [|(Ojs.float_to_js x4594)|]);
                               ignore
                                 (Ojs.call x4597 "push"
                                    [|(Ojs.float_to_js x4595)|]);
                               (match x4596 with
                                | Some x4598 ->
                                    ignore
                                      (Ojs.call x4597 "push"
                                         [|(Ojs.float_to_js x4598)|])
                                | None -> ());
                               x4597))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x4610 : 'tags this) ->
        fun
          ~predicate:(x4603 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x4604 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x4612 = this_to_js Obj.magic x4610 in
                 Ojs.call (Ojs.get_prop_ascii x4612 "every") "apply"
                   [|x4612;((let x4605 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4605 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4607 : Ojs.t) ->
                                          fun (x4608 : Ojs.t) ->
                                            fun (x4609 : Ojs.t) ->
                                              unknown_to_js
                                                (x4603
                                                   ~value:(Ojs.float_of_js
                                                             x4607)
                                                   ~index:(Ojs.float_of_js
                                                             x4608)
                                                   ~array:(t_of_js x4609))))|]);
                             (match x4604 with
                              | Some x4606 ->
                                  ignore
                                    (Ojs.call x4605 "push"
                                       [|(any_to_js x4606)|])
                              | None -> ());
                             x4605))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x4619 : 'tags this) ->
        fun ~value:(x4613 : float) ->
          fun ?start:(x4614 : float option) ->
            fun ?end_:(x4615 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x4621 = this_to_js Obj.magic x4619 in
                   Ojs.call (Ojs.get_prop_ascii x4621 "fill") "apply"
                     [|x4621;((let x4616 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4616 "push"
                                    [|(Ojs.float_to_js x4613)|]);
                               (match x4614 with
                                | Some x4618 ->
                                    ignore
                                      (Ojs.call x4616 "push"
                                         [|(Ojs.float_to_js x4618)|])
                                | None -> ());
                               (match x4615 with
                                | Some x4617 ->
                                    ignore
                                      (Ojs.call x4616 "push"
                                         [|(Ojs.float_to_js x4617)|])
                                | None -> ());
                               x4616))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x4630 : 'tags this) ->
        fun ~predicate:(x4623 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x4624 : any option) ->
            fun () ->
              t_of_js
                (let x4632 = this_to_js Obj.magic x4630 in
                 Ojs.call (Ojs.get_prop_ascii x4632 "filter") "apply"
                   [|x4632;((let x4625 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4625 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4627 : Ojs.t) ->
                                          fun (x4628 : Ojs.t) ->
                                            fun (x4629 : Ojs.t) ->
                                              any_to_js
                                                (x4623
                                                   ~value:(Ojs.float_of_js
                                                             x4627)
                                                   ~index:(Ojs.float_of_js
                                                             x4628)
                                                   ~array:(t_of_js x4629))))|]);
                             (match x4624 with
                              | Some x4626 ->
                                  ignore
                                    (Ojs.call x4625 "push"
                                       [|(any_to_js x4626)|])
                              | None -> ());
                             x4625))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x4640 : 'tags this) ->
        fun ~predicate:(x4633 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x4634 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x4642 = this_to_js Obj.magic x4640 in
                 Ojs.call (Ojs.get_prop_ascii x4642 "find") "apply"
                   [|x4642;((let x4635 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4635 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4637 : Ojs.t) ->
                                          fun (x4638 : Ojs.t) ->
                                            fun (x4639 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x4633
                                                   ~value:(Ojs.float_of_js
                                                             x4637)
                                                   ~index:(Ojs.float_of_js
                                                             x4638)
                                                   ~obj:(t_of_js x4639))))|]);
                             (match x4634 with
                              | Some x4636 ->
                                  ignore
                                    (Ojs.call x4635 "push"
                                       [|(any_to_js x4636)|])
                              | None -> ());
                             x4635))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x4651 : 'tags this) ->
        fun ~predicate:(x4644 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x4645 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x4653 = this_to_js Obj.magic x4651 in
                 Ojs.call (Ojs.get_prop_ascii x4653 "findIndex") "apply"
                   [|x4653;((let x4646 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4646 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4648 : Ojs.t) ->
                                          fun (x4649 : Ojs.t) ->
                                            fun (x4650 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x4644
                                                   ~value:(Ojs.float_of_js
                                                             x4648)
                                                   ~index:(Ojs.float_of_js
                                                             x4649)
                                                   ~obj:(t_of_js x4650))))|]);
                             (match x4645 with
                              | Some x4647 ->
                                  ignore
                                    (Ojs.call x4646 "push"
                                       [|(any_to_js x4647)|])
                              | None -> ());
                             x4646))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x4661 : 'tags this) ->
        fun
          ~callbackfn:(x4654 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x4655 : any option) ->
            fun () ->
              ignore
                (let x4663 = this_to_js Obj.magic x4661 in
                 Ojs.call (Ojs.get_prop_ascii x4663 "forEach") "apply"
                   [|x4663;((let x4656 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4656 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4658 : Ojs.t) ->
                                          fun (x4659 : Ojs.t) ->
                                            fun (x4660 : Ojs.t) ->
                                              x4654
                                                ~value:(Ojs.float_of_js x4658)
                                                ~index:(Ojs.float_of_js x4659)
                                                ~array:(t_of_js x4660)))|]);
                             (match x4655 with
                              | Some x4657 ->
                                  ignore
                                    (Ojs.call x4656 "push"
                                       [|(any_to_js x4657)|])
                              | None -> ());
                             x4656))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x4668 : 'tags this) ->
        fun ~searchElement:(x4664 : float) ->
          fun ?fromIndex:(x4665 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x4670 = this_to_js Obj.magic x4668 in
                 Ojs.call (Ojs.get_prop_ascii x4670 "indexOf") "apply"
                   [|x4670;((let x4666 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4666 "push"
                                  [|(Ojs.float_to_js x4664)|]);
                             (match x4665 with
                              | Some x4667 ->
                                  ignore
                                    (Ojs.call x4666 "push"
                                       [|(Ojs.float_to_js x4667)|])
                              | None -> ());
                             x4666))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x4674 : 'tags this) ->
        fun ?separator:(x4671 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x4676 = this_to_js Obj.magic x4674 in
               Ojs.call (Ojs.get_prop_ascii x4676 "join") "apply"
                 [|x4676;((let x4672 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x4671 with
                            | Some x4673 ->
                                ignore
                                  (Ojs.call x4672 "push"
                                     [|(Ojs.string_to_js x4673)|])
                            | None -> ());
                           x4672))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x4681 : 'tags this) ->
        fun ~searchElement:(x4677 : float) ->
          fun ?fromIndex:(x4678 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x4683 = this_to_js Obj.magic x4681 in
                 Ojs.call (Ojs.get_prop_ascii x4683 "lastIndexOf") "apply"
                   [|x4683;((let x4679 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4679 "push"
                                  [|(Ojs.float_to_js x4677)|]);
                             (match x4678 with
                              | Some x4680 ->
                                  ignore
                                    (Ojs.call x4679 "push"
                                       [|(Ojs.float_to_js x4680)|])
                              | None -> ());
                             x4679))|])
    let (get_length : 'tags this -> float) =
      fun (x4684 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4684) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x4693 : 'tags this) ->
        fun
          ~callbackfn:(x4686 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x4687 : any option) ->
            fun () ->
              t_of_js
                (let x4695 = this_to_js Obj.magic x4693 in
                 Ojs.call (Ojs.get_prop_ascii x4695 "map") "apply"
                   [|x4695;((let x4688 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4688 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4690 : Ojs.t) ->
                                          fun (x4691 : Ojs.t) ->
                                            fun (x4692 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x4686
                                                   ~value:(Ojs.float_of_js
                                                             x4690)
                                                   ~index:(Ojs.float_of_js
                                                             x4691)
                                                   ~array:(t_of_js x4692))))|]);
                             (match x4687 with
                              | Some x4689 ->
                                  ignore
                                    (Ojs.call x4688 "push"
                                       [|(any_to_js x4689)|])
                              | None -> ());
                             x4688))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x4701 : 'tags this) ->
        fun
          ~callbackfn:(x4696 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x4701) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x4697 : Ojs.t) ->
                       fun (x4698 : Ojs.t) ->
                         fun (x4699 : Ojs.t) ->
                           fun (x4700 : Ojs.t) ->
                             Ojs.float_to_js
                               (x4696 ~previousValue:(Ojs.float_of_js x4697)
                                  ~currentValue:(Ojs.float_of_js x4698)
                                  ~currentIndex:(Ojs.float_of_js x4699)
                                  ~array:(t_of_js x4700))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x4709 : 'tags this) ->
        fun
          ~callbackfn:(x4703 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x4708 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x4709) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x4704 : Ojs.t) ->
                         fun (x4705 : Ojs.t) ->
                           fun (x4706 : Ojs.t) ->
                             fun (x4707 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x4703
                                    ~previousValue:(Ojs.float_of_js x4704)
                                    ~currentValue:(Ojs.float_of_js x4705)
                                    ~currentIndex:(Ojs.float_of_js x4706)
                                    ~array:(t_of_js x4707))));(Ojs.float_to_js
                                                                 x4708)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x4717 : 'tags this) ->
        fun
          ~callbackfn:(x4711 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x4716 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x4717) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x4712 : Ojs.t) ->
                         fun (x4713 : Ojs.t) ->
                           fun (x4714 : Ojs.t) ->
                             fun (x4715 : Ojs.t) ->
                               Obj.magic
                                 (x4711 ~previousValue:(Obj.magic x4712)
                                    ~currentValue:(Ojs.float_of_js x4713)
                                    ~currentIndex:(Ojs.float_of_js x4714)
                                    ~array:(t_of_js x4715))));(Obj.magic
                                                                 x4716)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x4724 : 'tags this) ->
        fun
          ~callbackfn:(x4719 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x4724) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x4720 : Ojs.t) ->
                       fun (x4721 : Ojs.t) ->
                         fun (x4722 : Ojs.t) ->
                           fun (x4723 : Ojs.t) ->
                             Ojs.float_to_js
                               (x4719 ~previousValue:(Ojs.float_of_js x4720)
                                  ~currentValue:(Ojs.float_of_js x4721)
                                  ~currentIndex:(Ojs.float_of_js x4722)
                                  ~array:(t_of_js x4723))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x4732 : 'tags this) ->
        fun
          ~callbackfn:(x4726 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x4731 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x4732) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x4727 : Ojs.t) ->
                         fun (x4728 : Ojs.t) ->
                           fun (x4729 : Ojs.t) ->
                             fun (x4730 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x4726
                                    ~previousValue:(Ojs.float_of_js x4727)
                                    ~currentValue:(Ojs.float_of_js x4728)
                                    ~currentIndex:(Ojs.float_of_js x4729)
                                    ~array:(t_of_js x4730))));(Ojs.float_to_js
                                                                 x4731)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x4740 : 'tags this) ->
        fun
          ~callbackfn:(x4734 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x4739 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x4740) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x4735 : Ojs.t) ->
                         fun (x4736 : Ojs.t) ->
                           fun (x4737 : Ojs.t) ->
                             fun (x4738 : Ojs.t) ->
                               Obj.magic
                                 (x4734 ~previousValue:(Obj.magic x4735)
                                    ~currentValue:(Ojs.float_of_js x4736)
                                    ~currentIndex:(Ojs.float_of_js x4737)
                                    ~array:(t_of_js x4738))));(Obj.magic
                                                                 x4739)|])
    let (reverse : 'tags this -> t) =
      fun (x4742 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x4742) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x4749 : 'tags this) ->
        fun ~array:(x4744 : float ArrayLike.t) ->
          fun ?offset:(x4745 : float option) ->
            fun () ->
              ignore
                (let x4751 = this_to_js Obj.magic x4749 in
                 Ojs.call (Ojs.get_prop_ascii x4751 "set") "apply"
                   [|x4751;((let x4746 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4746 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x4744)|]);
                             (match x4745 with
                              | Some x4747 ->
                                  ignore
                                    (Ojs.call x4746 "push"
                                       [|(Ojs.float_to_js x4747)|])
                              | None -> ());
                             x4746))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x4757 : 'tags this) ->
        fun ?start:(x4752 : float option) ->
          fun ?end_:(x4753 : float option) ->
            fun () ->
              t_of_js
                (let x4759 = this_to_js Obj.magic x4757 in
                 Ojs.call (Ojs.get_prop_ascii x4759 "slice") "apply"
                   [|x4759;((let x4754 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x4752 with
                              | Some x4756 ->
                                  ignore
                                    (Ojs.call x4754 "push"
                                       [|(Ojs.float_to_js x4756)|])
                              | None -> ());
                             (match x4753 with
                              | Some x4755 ->
                                  ignore
                                    (Ojs.call x4754 "push"
                                       [|(Ojs.float_to_js x4755)|])
                              | None -> ());
                             x4754))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x4767 : 'tags this) ->
        fun
          ~predicate:(x4760 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x4761 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x4769 = this_to_js Obj.magic x4767 in
                 Ojs.call (Ojs.get_prop_ascii x4769 "some") "apply"
                   [|x4769;((let x4762 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4762 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4764 : Ojs.t) ->
                                          fun (x4765 : Ojs.t) ->
                                            fun (x4766 : Ojs.t) ->
                                              unknown_to_js
                                                (x4760
                                                   ~value:(Ojs.float_of_js
                                                             x4764)
                                                   ~index:(Ojs.float_of_js
                                                             x4765)
                                                   ~array:(t_of_js x4766))))|]);
                             (match x4761 with
                              | Some x4763 ->
                                  ignore
                                    (Ojs.call x4762 "push"
                                       [|(any_to_js x4763)|])
                              | None -> ());
                             x4762))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x4775 : 'tags this) ->
        fun ?compareFn:(x4770 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x4777 = this_to_js Obj.magic x4775 in
               Ojs.call (Ojs.get_prop_ascii x4777 "sort") "apply"
                 [|x4777;((let x4771 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x4770 with
                            | Some x4772 ->
                                ignore
                                  (Ojs.call x4771 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x4773 : Ojs.t) ->
                                             fun (x4774 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x4772
                                                    ~a:(Ojs.float_of_js x4773)
                                                    ~b:(Ojs.float_of_js x4774))))|])
                            | None -> ());
                           x4771))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x4784 : 'tags this) ->
        fun ?begin_:(x4779 : float option) ->
          fun ?end_:(x4780 : float option) ->
            fun () ->
              t_of_js
                (let x4786 = this_to_js Obj.magic x4784 in
                 Ojs.call (Ojs.get_prop_ascii x4786 "subarray") "apply"
                   [|x4786;((let x4781 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x4779 with
                              | Some x4783 ->
                                  ignore
                                    (Ojs.call x4781 "push"
                                       [|(Ojs.float_to_js x4783)|])
                              | None -> ());
                             (match x4780 with
                              | Some x4782 ->
                                  ignore
                                    (Ojs.call x4781 "push"
                                       [|(Ojs.float_to_js x4782)|])
                              | None -> ());
                             x4781))|])
    let (toString : 'tags this -> string) =
      fun (x4787 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x4787) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x4789 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x4789) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x4791 : 'tags this) ->
        fun (x4793 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x4791)
               (Ojs.float_to_js x4793))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x4794 : 'tags this) ->
        fun (x4796 : float) ->
          fun (x4797 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x4794) (Ojs.float_to_js x4796)
              (Ojs.float_to_js x4797)
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x4798 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x4800 : Ojs.t) ->
             let x4801 = x4800 in
             ((Ojs.float_of_js (Ojs.array_get x4801 0)),
               (Ojs.float_of_js (Ojs.array_get x4801 1))))
          (Ojs.call (this_to_js Obj.magic x4798) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x4802 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x4802) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x4805 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x4805) "values" [||])
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float64Array") [||])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Float64Array")
             "prototype")
    let (create' : float -> t) =
      fun (x4808 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float64Array")
             [|(Ojs.float_to_js x4808)|])
    let (create'' : (ArrayBufferLike.t, float ArrayLike.t) union2 -> t) =
      fun (x4809 : (ArrayBufferLike.t, float ArrayLike.t) union2) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float64Array")
             [|(union2_to_js ArrayBufferLike.t_to_js
                  (fun (x4811 : float ArrayLike.t) ->
                     ArrayLike.t_to_js Ojs.float_to_js x4811) x4809)|])
    let (create''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x4813 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x4814 : float option) ->
          fun ?length:(x4815 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Float64Array")
                   (let x4816 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x4816 "push"
                         [|(ArrayBufferLike.t_to_js x4813)|]);
                    (match x4814 with
                     | Some x4818 ->
                         ignore
                           (Ojs.call x4816 "push" [|(Ojs.float_to_js x4818)|])
                     | None -> ());
                    (match x4815 with
                     | Some x4817 ->
                         ignore
                           (Ojs.call x4816 "push" [|(Ojs.float_to_js x4817)|])
                     | None -> ());
                    x4816))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Float64Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x4819 : float list) ->
        t_of_js
          (let x4822 = Ojs.get_prop_ascii Ojs.global "Float64Array" in
           Ojs.call (Ojs.get_prop_ascii x4822 "of") "apply"
             [|x4822;((let x4820 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x4821 : float) ->
                            ignore
                              (Ojs.call x4820 "push"
                                 [|(Ojs.float_to_js x4821)|])) x4819;
                       x4820))|])
    let (from : float ArrayLike.t -> t) =
      fun (x4823 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Float64Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x4823)|])
    let (from' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x4825 : 'T ArrayLike.t) ->
        fun ~mapfn:(x4826 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x4827 : any option) ->
            fun () ->
              t_of_js
                (let x4833 = Ojs.get_prop_ascii Ojs.global "Float64Array" in
                 Ojs.call (Ojs.get_prop_ascii x4833 "from") "apply"
                   [|x4833;((let x4828 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4828 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x4825)|]);
                             ignore
                               (Ojs.call x4828 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x4830 : Ojs.t) ->
                                          fun (x4831 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x4826 ~v:(Obj.magic x4830)
                                                 ~k:(Ojs.float_of_js x4831))))|]);
                             (match x4827 with
                              | Some x4829 ->
                                  ignore
                                    (Ojs.call x4828 "push"
                                       [|(any_to_js x4829)|])
                              | None -> ());
                             x4828))|])
    let (create'''' : float Iterable.t -> t) =
      fun (x4834 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float64Array")
             [|(Iterable.t_to_js Ojs.float_to_js x4834)|])
    let (from'' :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x4836 : float Iterable.t) ->
        fun ?mapfn:(x4837 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x4838 : any option) ->
            fun () ->
              t_of_js
                (let x4845 = Ojs.get_prop_ascii Ojs.global "Float64Array" in
                 Ojs.call (Ojs.get_prop_ascii x4845 "from") "apply"
                   [|x4845;((let x4839 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4839 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x4836)|]);
                             (match x4837 with
                              | Some x4841 ->
                                  ignore
                                    (Ojs.call x4839 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x4842 : Ojs.t) ->
                                               fun (x4843 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x4841
                                                      ~v:(Ojs.float_of_js
                                                            x4842)
                                                      ~k:(Ojs.float_of_js
                                                            x4843))))|])
                              | None -> ());
                             (match x4838 with
                              | Some x4840 ->
                                  ignore
                                    (Ojs.call x4839 "push"
                                       [|(any_to_js x4840)|])
                              | None -> ());
                             x4839))|])
    let cast_from = Obj.magic
  end
module Float32Array =
  struct
    type t =
      [ `ArrayLike of float  | `Float32Array  | `IterableIterator of float 
      | `Iterator of (float * any * never or_undefined) ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4847 : Ojs.t) -> t_of_js x4847
    and t_0_to_js : t_0 -> Ojs.t = fun (x4846 : t) -> t_to_js x4846
    type tags =
      [ `ArrayLike of float  | `Float32Array  | `IterableIterator of float 
      | `Iterator of (float * any * never or_undefined) ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Float32Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4850 : Ojs.t) -> intf_of_js __tags_of_js x4850
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4848 : __tags intf) -> intf_to_js __tags_to_js x4848
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x4856 : 'tags this) ->
        fun ~searchElement:(x4852 : float) ->
          fun ?fromIndex:(x4853 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x4858 = this_to_js Obj.magic x4856 in
                 Ojs.call (Ojs.get_prop_ascii x4858 "includes") "apply"
                   [|x4858;((let x4854 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4854 "push"
                                  [|(Ojs.float_to_js x4852)|]);
                             (match x4853 with
                              | Some x4855 ->
                                  ignore
                                    (Ojs.call x4854 "push"
                                       [|(Ojs.float_to_js x4855)|])
                              | None -> ());
                             x4854))|])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x4859 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4859)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x4861 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4861) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x4863 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4863) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x4865 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4865) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x4872 : 'tags this) ->
        fun ~target:(x4867 : float) ->
          fun ~start:(x4868 : float) ->
            fun ?end_:(x4869 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x4874 = this_to_js Obj.magic x4872 in
                   Ojs.call (Ojs.get_prop_ascii x4874 "copyWithin") "apply"
                     [|x4874;((let x4870 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4870 "push"
                                    [|(Ojs.float_to_js x4867)|]);
                               ignore
                                 (Ojs.call x4870 "push"
                                    [|(Ojs.float_to_js x4868)|]);
                               (match x4869 with
                                | Some x4871 ->
                                    ignore
                                      (Ojs.call x4870 "push"
                                         [|(Ojs.float_to_js x4871)|])
                                | None -> ());
                               x4870))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x4883 : 'tags this) ->
        fun
          ~predicate:(x4876 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x4877 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x4885 = this_to_js Obj.magic x4883 in
                 Ojs.call (Ojs.get_prop_ascii x4885 "every") "apply"
                   [|x4885;((let x4878 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4878 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4880 : Ojs.t) ->
                                          fun (x4881 : Ojs.t) ->
                                            fun (x4882 : Ojs.t) ->
                                              unknown_to_js
                                                (x4876
                                                   ~value:(Ojs.float_of_js
                                                             x4880)
                                                   ~index:(Ojs.float_of_js
                                                             x4881)
                                                   ~array:(t_of_js x4882))))|]);
                             (match x4877 with
                              | Some x4879 ->
                                  ignore
                                    (Ojs.call x4878 "push"
                                       [|(any_to_js x4879)|])
                              | None -> ());
                             x4878))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x4892 : 'tags this) ->
        fun ~value:(x4886 : float) ->
          fun ?start:(x4887 : float option) ->
            fun ?end_:(x4888 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x4894 = this_to_js Obj.magic x4892 in
                   Ojs.call (Ojs.get_prop_ascii x4894 "fill") "apply"
                     [|x4894;((let x4889 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4889 "push"
                                    [|(Ojs.float_to_js x4886)|]);
                               (match x4887 with
                                | Some x4891 ->
                                    ignore
                                      (Ojs.call x4889 "push"
                                         [|(Ojs.float_to_js x4891)|])
                                | None -> ());
                               (match x4888 with
                                | Some x4890 ->
                                    ignore
                                      (Ojs.call x4889 "push"
                                         [|(Ojs.float_to_js x4890)|])
                                | None -> ());
                               x4889))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x4903 : 'tags this) ->
        fun ~predicate:(x4896 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x4897 : any option) ->
            fun () ->
              t_of_js
                (let x4905 = this_to_js Obj.magic x4903 in
                 Ojs.call (Ojs.get_prop_ascii x4905 "filter") "apply"
                   [|x4905;((let x4898 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4898 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4900 : Ojs.t) ->
                                          fun (x4901 : Ojs.t) ->
                                            fun (x4902 : Ojs.t) ->
                                              any_to_js
                                                (x4896
                                                   ~value:(Ojs.float_of_js
                                                             x4900)
                                                   ~index:(Ojs.float_of_js
                                                             x4901)
                                                   ~array:(t_of_js x4902))))|]);
                             (match x4897 with
                              | Some x4899 ->
                                  ignore
                                    (Ojs.call x4898 "push"
                                       [|(any_to_js x4899)|])
                              | None -> ());
                             x4898))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x4913 : 'tags this) ->
        fun ~predicate:(x4906 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x4907 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x4915 = this_to_js Obj.magic x4913 in
                 Ojs.call (Ojs.get_prop_ascii x4915 "find") "apply"
                   [|x4915;((let x4908 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4908 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4910 : Ojs.t) ->
                                          fun (x4911 : Ojs.t) ->
                                            fun (x4912 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x4906
                                                   ~value:(Ojs.float_of_js
                                                             x4910)
                                                   ~index:(Ojs.float_of_js
                                                             x4911)
                                                   ~obj:(t_of_js x4912))))|]);
                             (match x4907 with
                              | Some x4909 ->
                                  ignore
                                    (Ojs.call x4908 "push"
                                       [|(any_to_js x4909)|])
                              | None -> ());
                             x4908))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x4924 : 'tags this) ->
        fun ~predicate:(x4917 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x4918 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x4926 = this_to_js Obj.magic x4924 in
                 Ojs.call (Ojs.get_prop_ascii x4926 "findIndex") "apply"
                   [|x4926;((let x4919 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4919 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4921 : Ojs.t) ->
                                          fun (x4922 : Ojs.t) ->
                                            fun (x4923 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x4917
                                                   ~value:(Ojs.float_of_js
                                                             x4921)
                                                   ~index:(Ojs.float_of_js
                                                             x4922)
                                                   ~obj:(t_of_js x4923))))|]);
                             (match x4918 with
                              | Some x4920 ->
                                  ignore
                                    (Ojs.call x4919 "push"
                                       [|(any_to_js x4920)|])
                              | None -> ());
                             x4919))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x4934 : 'tags this) ->
        fun
          ~callbackfn:(x4927 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x4928 : any option) ->
            fun () ->
              ignore
                (let x4936 = this_to_js Obj.magic x4934 in
                 Ojs.call (Ojs.get_prop_ascii x4936 "forEach") "apply"
                   [|x4936;((let x4929 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4929 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4931 : Ojs.t) ->
                                          fun (x4932 : Ojs.t) ->
                                            fun (x4933 : Ojs.t) ->
                                              x4927
                                                ~value:(Ojs.float_of_js x4931)
                                                ~index:(Ojs.float_of_js x4932)
                                                ~array:(t_of_js x4933)))|]);
                             (match x4928 with
                              | Some x4930 ->
                                  ignore
                                    (Ojs.call x4929 "push"
                                       [|(any_to_js x4930)|])
                              | None -> ());
                             x4929))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x4941 : 'tags this) ->
        fun ~searchElement:(x4937 : float) ->
          fun ?fromIndex:(x4938 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x4943 = this_to_js Obj.magic x4941 in
                 Ojs.call (Ojs.get_prop_ascii x4943 "indexOf") "apply"
                   [|x4943;((let x4939 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4939 "push"
                                  [|(Ojs.float_to_js x4937)|]);
                             (match x4938 with
                              | Some x4940 ->
                                  ignore
                                    (Ojs.call x4939 "push"
                                       [|(Ojs.float_to_js x4940)|])
                              | None -> ());
                             x4939))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x4947 : 'tags this) ->
        fun ?separator:(x4944 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x4949 = this_to_js Obj.magic x4947 in
               Ojs.call (Ojs.get_prop_ascii x4949 "join") "apply"
                 [|x4949;((let x4945 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x4944 with
                            | Some x4946 ->
                                ignore
                                  (Ojs.call x4945 "push"
                                     [|(Ojs.string_to_js x4946)|])
                            | None -> ());
                           x4945))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x4954 : 'tags this) ->
        fun ~searchElement:(x4950 : float) ->
          fun ?fromIndex:(x4951 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x4956 = this_to_js Obj.magic x4954 in
                 Ojs.call (Ojs.get_prop_ascii x4956 "lastIndexOf") "apply"
                   [|x4956;((let x4952 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4952 "push"
                                  [|(Ojs.float_to_js x4950)|]);
                             (match x4951 with
                              | Some x4953 ->
                                  ignore
                                    (Ojs.call x4952 "push"
                                       [|(Ojs.float_to_js x4953)|])
                              | None -> ());
                             x4952))|])
    let (get_length : 'tags this -> float) =
      fun (x4957 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4957) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x4966 : 'tags this) ->
        fun
          ~callbackfn:(x4959 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x4960 : any option) ->
            fun () ->
              t_of_js
                (let x4968 = this_to_js Obj.magic x4966 in
                 Ojs.call (Ojs.get_prop_ascii x4968 "map") "apply"
                   [|x4968;((let x4961 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4961 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4963 : Ojs.t) ->
                                          fun (x4964 : Ojs.t) ->
                                            fun (x4965 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x4959
                                                   ~value:(Ojs.float_of_js
                                                             x4963)
                                                   ~index:(Ojs.float_of_js
                                                             x4964)
                                                   ~array:(t_of_js x4965))))|]);
                             (match x4960 with
                              | Some x4962 ->
                                  ignore
                                    (Ojs.call x4961 "push"
                                       [|(any_to_js x4962)|])
                              | None -> ());
                             x4961))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x4974 : 'tags this) ->
        fun
          ~callbackfn:(x4969 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x4974) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x4970 : Ojs.t) ->
                       fun (x4971 : Ojs.t) ->
                         fun (x4972 : Ojs.t) ->
                           fun (x4973 : Ojs.t) ->
                             Ojs.float_to_js
                               (x4969 ~previousValue:(Ojs.float_of_js x4970)
                                  ~currentValue:(Ojs.float_of_js x4971)
                                  ~currentIndex:(Ojs.float_of_js x4972)
                                  ~array:(t_of_js x4973))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x4982 : 'tags this) ->
        fun
          ~callbackfn:(x4976 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x4981 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x4982) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x4977 : Ojs.t) ->
                         fun (x4978 : Ojs.t) ->
                           fun (x4979 : Ojs.t) ->
                             fun (x4980 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x4976
                                    ~previousValue:(Ojs.float_of_js x4977)
                                    ~currentValue:(Ojs.float_of_js x4978)
                                    ~currentIndex:(Ojs.float_of_js x4979)
                                    ~array:(t_of_js x4980))));(Ojs.float_to_js
                                                                 x4981)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x4990 : 'tags this) ->
        fun
          ~callbackfn:(x4984 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x4989 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x4990) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x4985 : Ojs.t) ->
                         fun (x4986 : Ojs.t) ->
                           fun (x4987 : Ojs.t) ->
                             fun (x4988 : Ojs.t) ->
                               Obj.magic
                                 (x4984 ~previousValue:(Obj.magic x4985)
                                    ~currentValue:(Ojs.float_of_js x4986)
                                    ~currentIndex:(Ojs.float_of_js x4987)
                                    ~array:(t_of_js x4988))));(Obj.magic
                                                                 x4989)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x4997 : 'tags this) ->
        fun
          ~callbackfn:(x4992 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x4997) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x4993 : Ojs.t) ->
                       fun (x4994 : Ojs.t) ->
                         fun (x4995 : Ojs.t) ->
                           fun (x4996 : Ojs.t) ->
                             Ojs.float_to_js
                               (x4992 ~previousValue:(Ojs.float_of_js x4993)
                                  ~currentValue:(Ojs.float_of_js x4994)
                                  ~currentIndex:(Ojs.float_of_js x4995)
                                  ~array:(t_of_js x4996))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x5005 : 'tags this) ->
        fun
          ~callbackfn:(x4999 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x5004 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x5005) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x5000 : Ojs.t) ->
                         fun (x5001 : Ojs.t) ->
                           fun (x5002 : Ojs.t) ->
                             fun (x5003 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x4999
                                    ~previousValue:(Ojs.float_of_js x5000)
                                    ~currentValue:(Ojs.float_of_js x5001)
                                    ~currentIndex:(Ojs.float_of_js x5002)
                                    ~array:(t_of_js x5003))));(Ojs.float_to_js
                                                                 x5004)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x5013 : 'tags this) ->
        fun
          ~callbackfn:(x5007 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x5012 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x5013) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x5008 : Ojs.t) ->
                         fun (x5009 : Ojs.t) ->
                           fun (x5010 : Ojs.t) ->
                             fun (x5011 : Ojs.t) ->
                               Obj.magic
                                 (x5007 ~previousValue:(Obj.magic x5008)
                                    ~currentValue:(Ojs.float_of_js x5009)
                                    ~currentIndex:(Ojs.float_of_js x5010)
                                    ~array:(t_of_js x5011))));(Obj.magic
                                                                 x5012)|])
    let (reverse : 'tags this -> t) =
      fun (x5015 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x5015) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x5022 : 'tags this) ->
        fun ~array:(x5017 : float ArrayLike.t) ->
          fun ?offset:(x5018 : float option) ->
            fun () ->
              ignore
                (let x5024 = this_to_js Obj.magic x5022 in
                 Ojs.call (Ojs.get_prop_ascii x5024 "set") "apply"
                   [|x5024;((let x5019 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5019 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x5017)|]);
                             (match x5018 with
                              | Some x5020 ->
                                  ignore
                                    (Ojs.call x5019 "push"
                                       [|(Ojs.float_to_js x5020)|])
                              | None -> ());
                             x5019))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x5030 : 'tags this) ->
        fun ?start:(x5025 : float option) ->
          fun ?end_:(x5026 : float option) ->
            fun () ->
              t_of_js
                (let x5032 = this_to_js Obj.magic x5030 in
                 Ojs.call (Ojs.get_prop_ascii x5032 "slice") "apply"
                   [|x5032;((let x5027 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x5025 with
                              | Some x5029 ->
                                  ignore
                                    (Ojs.call x5027 "push"
                                       [|(Ojs.float_to_js x5029)|])
                              | None -> ());
                             (match x5026 with
                              | Some x5028 ->
                                  ignore
                                    (Ojs.call x5027 "push"
                                       [|(Ojs.float_to_js x5028)|])
                              | None -> ());
                             x5027))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x5040 : 'tags this) ->
        fun
          ~predicate:(x5033 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x5034 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x5042 = this_to_js Obj.magic x5040 in
                 Ojs.call (Ojs.get_prop_ascii x5042 "some") "apply"
                   [|x5042;((let x5035 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5035 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5037 : Ojs.t) ->
                                          fun (x5038 : Ojs.t) ->
                                            fun (x5039 : Ojs.t) ->
                                              unknown_to_js
                                                (x5033
                                                   ~value:(Ojs.float_of_js
                                                             x5037)
                                                   ~index:(Ojs.float_of_js
                                                             x5038)
                                                   ~array:(t_of_js x5039))))|]);
                             (match x5034 with
                              | Some x5036 ->
                                  ignore
                                    (Ojs.call x5035 "push"
                                       [|(any_to_js x5036)|])
                              | None -> ());
                             x5035))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x5048 : 'tags this) ->
        fun ?compareFn:(x5043 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x5050 = this_to_js Obj.magic x5048 in
               Ojs.call (Ojs.get_prop_ascii x5050 "sort") "apply"
                 [|x5050;((let x5044 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x5043 with
                            | Some x5045 ->
                                ignore
                                  (Ojs.call x5044 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x5046 : Ojs.t) ->
                                             fun (x5047 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x5045
                                                    ~a:(Ojs.float_of_js x5046)
                                                    ~b:(Ojs.float_of_js x5047))))|])
                            | None -> ());
                           x5044))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x5057 : 'tags this) ->
        fun ?begin_:(x5052 : float option) ->
          fun ?end_:(x5053 : float option) ->
            fun () ->
              t_of_js
                (let x5059 = this_to_js Obj.magic x5057 in
                 Ojs.call (Ojs.get_prop_ascii x5059 "subarray") "apply"
                   [|x5059;((let x5054 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x5052 with
                              | Some x5056 ->
                                  ignore
                                    (Ojs.call x5054 "push"
                                       [|(Ojs.float_to_js x5056)|])
                              | None -> ());
                             (match x5053 with
                              | Some x5055 ->
                                  ignore
                                    (Ojs.call x5054 "push"
                                       [|(Ojs.float_to_js x5055)|])
                              | None -> ());
                             x5054))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x5060 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x5060) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x5062 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x5062) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x5064 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x5064) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x5066 : 'tags this) ->
        fun (x5068 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x5066)
               (Ojs.float_to_js x5068))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x5069 : 'tags this) ->
        fun (x5071 : float) ->
          fun (x5072 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x5069) (Ojs.float_to_js x5071)
              (Ojs.float_to_js x5072)
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x5073 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x5075 : Ojs.t) ->
             let x5076 = x5075 in
             ((Ojs.float_of_js (Ojs.array_get x5076 0)),
               (Ojs.float_of_js (Ojs.array_get x5076 1))))
          (Ojs.call (this_to_js Obj.magic x5073) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x5077 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x5077) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x5080 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x5080) "values" [||])
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float32Array") [||])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Float32Array")
             "prototype")
    let (create' : float -> t) =
      fun (x5083 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float32Array")
             [|(Ojs.float_to_js x5083)|])
    let (create'' : (ArrayBufferLike.t, float ArrayLike.t) union2 -> t) =
      fun (x5084 : (ArrayBufferLike.t, float ArrayLike.t) union2) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float32Array")
             [|(union2_to_js ArrayBufferLike.t_to_js
                  (fun (x5086 : float ArrayLike.t) ->
                     ArrayLike.t_to_js Ojs.float_to_js x5086) x5084)|])
    let (create''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x5088 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x5089 : float option) ->
          fun ?length:(x5090 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Float32Array")
                   (let x5091 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x5091 "push"
                         [|(ArrayBufferLike.t_to_js x5088)|]);
                    (match x5089 with
                     | Some x5093 ->
                         ignore
                           (Ojs.call x5091 "push" [|(Ojs.float_to_js x5093)|])
                     | None -> ());
                    (match x5090 with
                     | Some x5092 ->
                         ignore
                           (Ojs.call x5091 "push" [|(Ojs.float_to_js x5092)|])
                     | None -> ());
                    x5091))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Float32Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x5094 : float list) ->
        t_of_js
          (let x5097 = Ojs.get_prop_ascii Ojs.global "Float32Array" in
           Ojs.call (Ojs.get_prop_ascii x5097 "of") "apply"
             [|x5097;((let x5095 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x5096 : float) ->
                            ignore
                              (Ojs.call x5095 "push"
                                 [|(Ojs.float_to_js x5096)|])) x5094;
                       x5095))|])
    let (from : float ArrayLike.t -> t) =
      fun (x5098 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Float32Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x5098)|])
    let (from' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x5100 : 'T ArrayLike.t) ->
        fun ~mapfn:(x5101 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x5102 : any option) ->
            fun () ->
              t_of_js
                (let x5108 = Ojs.get_prop_ascii Ojs.global "Float32Array" in
                 Ojs.call (Ojs.get_prop_ascii x5108 "from") "apply"
                   [|x5108;((let x5103 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5103 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x5100)|]);
                             ignore
                               (Ojs.call x5103 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x5105 : Ojs.t) ->
                                          fun (x5106 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x5101 ~v:(Obj.magic x5105)
                                                 ~k:(Ojs.float_of_js x5106))))|]);
                             (match x5102 with
                              | Some x5104 ->
                                  ignore
                                    (Ojs.call x5103 "push"
                                       [|(any_to_js x5104)|])
                              | None -> ());
                             x5103))|])
    let (create'''' : float Iterable.t -> t) =
      fun (x5109 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float32Array")
             [|(Iterable.t_to_js Ojs.float_to_js x5109)|])
    let (from'' :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x5111 : float Iterable.t) ->
        fun ?mapfn:(x5112 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x5113 : any option) ->
            fun () ->
              t_of_js
                (let x5120 = Ojs.get_prop_ascii Ojs.global "Float32Array" in
                 Ojs.call (Ojs.get_prop_ascii x5120 "from") "apply"
                   [|x5120;((let x5114 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5114 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x5111)|]);
                             (match x5112 with
                              | Some x5116 ->
                                  ignore
                                    (Ojs.call x5114 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x5117 : Ojs.t) ->
                                               fun (x5118 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x5116
                                                      ~v:(Ojs.float_of_js
                                                            x5117)
                                                      ~k:(Ojs.float_of_js
                                                            x5118))))|])
                              | None -> ());
                             (match x5113 with
                              | Some x5115 ->
                                  ignore
                                    (Ojs.call x5114 "push"
                                       [|(any_to_js x5115)|])
                              | None -> ());
                             x5114))|])
    let cast_from = Obj.magic
  end
module FinalizationRegistry =
  struct
    type 'T t = [ `FinalizationRegistry of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x5123 : Ojs.t) -> t_of_js __T_of_js x5123
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x5121 : __T t) -> t_to_js __T_to_js x5121
    type t_0 = any t
    let rec t_0_of_js : Ojs.t -> t_0 =
      fun (x5127 : Ojs.t) -> t_of_js any_of_js x5127
    and t_0_to_js : t_0 -> Ojs.t =
      fun (x5125 : any t) -> t_to_js any_to_js x5125
    type 'T tags = [ `FinalizationRegistry of 'T ]
    type 'T tags_1 = 'T tags
    type tags_0 = any tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `FinalizationRegistry of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x5131 : Ojs.t) -> intf_of_js __tags_of_js x5131
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x5129 : __tags intf) -> intf_to_js __tags_to_js x5129
    let (register :
      ('tags, 'T) this ->
        target:untyped_object ->
          heldValue:any -> ?unregisterToken:untyped_object -> unit -> unit)
      =
      fun (x5138 : ('tags, 'T) this) ->
        fun ~target:(x5133 : untyped_object) ->
          fun ~heldValue:(x5134 : any) ->
            fun ?unregisterToken:(x5135 : untyped_object option) ->
              fun () ->
                ignore
                  (let x5141 = this_to_js Obj.magic Obj.magic x5138 in
                   Ojs.call (Ojs.get_prop_ascii x5141 "register") "apply"
                     [|x5141;((let x5136 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5136 "push"
                                    [|(untyped_object_to_js x5133)|]);
                               ignore
                                 (Ojs.call x5136 "push" [|(any_to_js x5134)|]);
                               (match x5135 with
                                | Some x5137 ->
                                    ignore
                                      (Ojs.call x5136 "push"
                                         [|(untyped_object_to_js x5137)|])
                                | None -> ());
                               x5136))|])
    let (unregister :
      ('tags, 'T) this -> unregisterToken:untyped_object -> unit) =
      fun (x5143 : ('tags, 'T) this) ->
        fun ~unregisterToken:(x5142 : untyped_object) ->
          ignore
            (Ojs.call (this_to_js Obj.magic Obj.magic x5143) "unregister"
               [|(untyped_object_to_js x5142)|])
    let (register' :
      ('tags, 'T) this ->
        target:untyped_object ->
          heldValue:'T -> ?unregisterToken:untyped_object -> unit -> unit)
      =
      fun (x5151 : ('tags, 'T) this) ->
        fun ~target:(x5146 : untyped_object) ->
          fun ~heldValue:(x5147 : 'T) ->
            fun ?unregisterToken:(x5148 : untyped_object option) ->
              fun () ->
                ignore
                  (let x5154 = this_to_js Obj.magic Obj.magic x5151 in
                   Ojs.call (Ojs.get_prop_ascii x5154 "register") "apply"
                     [|x5154;((let x5149 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5149 "push"
                                    [|(untyped_object_to_js x5146)|]);
                               ignore
                                 (Ojs.call x5149 "push" [|(Obj.magic x5147)|]);
                               (match x5148 with
                                | Some x5150 ->
                                    ignore
                                      (Ojs.call x5149 "push"
                                         [|(untyped_object_to_js x5150)|])
                                | None -> ());
                               x5149))|])
    let (unregister' :
      ('tags, 'T) this -> unregisterToken:untyped_object -> unit) =
      fun (x5156 : ('tags, 'T) this) ->
        fun ~unregisterToken:(x5155 : untyped_object) ->
          ignore
            (Ojs.call (this_to_js Obj.magic Obj.magic x5156) "unregister"
               [|(untyped_object_to_js x5155)|])
    let (prototype : unit -> t_0) =
      fun () ->
        t_0_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             "prototype")
    let (create : (any -> unit) -> t_0) =
      fun (x5159 : any -> unit) ->
        t_0_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             [|(Ojs.fun_to_js 1
                  (fun (x5160 : Ojs.t) -> x5159 (any_of_js x5160)))|])
    let (prototype' : unit -> any t) =
      fun () ->
        t_of_js any_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             "prototype")
    let (create' : ('T -> unit) -> 'T t) =
      fun (x5162 : 'T -> unit) ->
        t_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             [|(Ojs.fun_to_js 1
                  (fun (x5163 : Ojs.t) -> x5162 (Obj.magic x5163)))|])
    let cast_from = Obj.magic
  end
module Extract =
  struct
    type ('T, 'U) t = any
    let rec t_of_js :
      'T 'U . (Ojs.t -> 'T) -> (Ojs.t -> 'U) -> Ojs.t -> ('T, 'U) t = fun
      (type __T) -> fun (type __U) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__U_of_js : Ojs.t -> __U) ->
          fun (x5166 : Ojs.t) -> any_of_js x5166
    and t_to_js :
      'T 'U . ('T -> Ojs.t) -> ('U -> Ojs.t) -> ('T, 'U) t -> Ojs.t = fun
      (type __T) -> fun (type __U) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__U_to_js : __U -> Ojs.t) ->
          fun (x5165 : any) -> any_to_js x5165
    type ('T, 'U) t_2 = ('T, 'U) t
    let rec t_2_of_js :
      'T 'U . (Ojs.t -> 'T) -> (Ojs.t -> 'U) -> Ojs.t -> ('T, 'U) t_2 = fun
      (type __T) -> fun (type __U) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__U_of_js : Ojs.t -> __U) ->
          fun (x5170 : Ojs.t) -> t_of_js __T_of_js __U_of_js x5170
    and t_2_to_js :
      'T 'U . ('T -> Ojs.t) -> ('U -> Ojs.t) -> ('T, 'U) t_2 -> Ojs.t = fun
      (type __T) -> fun (type __U) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__U_to_js : __U -> Ojs.t) ->
          fun (x5167 : (__T, __U) t) -> t_to_js __T_to_js __U_to_js x5167
  end
module EvalError =
  struct
    type t = [ `Error  | `EvalError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5174 : Ojs.t) -> t_of_js x5174
    and t_0_to_js : t_0 -> Ojs.t = fun (x5173 : t) -> t_to_js x5173
    type tags = [ `Error  | `EvalError ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `EvalError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5177 : Ojs.t) -> intf_of_js __tags_of_js x5177
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5175 : __tags intf) -> intf_to_js __tags_to_js x5175
    let (create : ?message:string -> unit -> t) =
      fun ?message:(x5179 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "EvalError")
               (let x5180 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x5179 with
                 | Some x5181 ->
                     ignore
                       (Ojs.call x5180 "push" [|(Ojs.string_to_js x5181)|])
                 | None -> ());
                x5180))
    let (invoke : ?message:string -> unit -> t) =
      fun ?message:(x5182 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "EvalError") "apply"
               [|Ojs.null;((let x5183 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x5182 with
                             | Some x5184 ->
                                 ignore
                                   (Ojs.call x5183 "push"
                                      [|(Ojs.string_to_js x5184)|])
                             | None -> ());
                            x5183))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "EvalError")
             "prototype")
    let cast_from = Obj.magic
  end
module DataView =
  struct
    type t = [ `DataView ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5186 : Ojs.t) -> t_of_js x5186
    and t_0_to_js : t_0 -> Ojs.t = fun (x5185 : t) -> t_to_js x5185
    type tags = [ `DataView ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `DataView ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5189 : Ojs.t) -> intf_of_js __tags_of_js x5189
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5187 : __tags intf) -> intf_to_js __tags_to_js x5187
    let (getBigInt64 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> bigint)
      =
      fun (x5195 : 'tags this) ->
        fun ~byteOffset:(x5191 : float) ->
          fun ?littleEndian:(x5192 : bool option) ->
            fun () ->
              bigint_of_js
                (let x5197 = this_to_js Obj.magic x5195 in
                 Ojs.call (Ojs.get_prop_ascii x5197 "getBigInt64") "apply"
                   [|x5197;((let x5193 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5193 "push"
                                  [|(Ojs.float_to_js x5191)|]);
                             (match x5192 with
                              | Some x5194 ->
                                  ignore
                                    (Ojs.call x5193 "push"
                                       [|(Ojs.bool_to_js x5194)|])
                              | None -> ());
                             x5193))|])
    let (getBigUint64 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> bigint)
      =
      fun (x5202 : 'tags this) ->
        fun ~byteOffset:(x5198 : float) ->
          fun ?littleEndian:(x5199 : bool option) ->
            fun () ->
              bigint_of_js
                (let x5204 = this_to_js Obj.magic x5202 in
                 Ojs.call (Ojs.get_prop_ascii x5204 "getBigUint64") "apply"
                   [|x5204;((let x5200 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5200 "push"
                                  [|(Ojs.float_to_js x5198)|]);
                             (match x5199 with
                              | Some x5201 ->
                                  ignore
                                    (Ojs.call x5200 "push"
                                       [|(Ojs.bool_to_js x5201)|])
                              | None -> ());
                             x5200))|])
    let (setBigInt64 :
      'tags this ->
        byteOffset:float ->
          value:bigint -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x5210 : 'tags this) ->
        fun ~byteOffset:(x5205 : float) ->
          fun ~value:(x5206 : bigint) ->
            fun ?littleEndian:(x5207 : bool option) ->
              fun () ->
                ignore
                  (let x5212 = this_to_js Obj.magic x5210 in
                   Ojs.call (Ojs.get_prop_ascii x5212 "setBigInt64") "apply"
                     [|x5212;((let x5208 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5208 "push"
                                    [|(Ojs.float_to_js x5205)|]);
                               ignore
                                 (Ojs.call x5208 "push"
                                    [|(bigint_to_js x5206)|]);
                               (match x5207 with
                                | Some x5209 ->
                                    ignore
                                      (Ojs.call x5208 "push"
                                         [|(Ojs.bool_to_js x5209)|])
                                | None -> ());
                               x5208))|])
    let (setBigUint64 :
      'tags this ->
        byteOffset:float ->
          value:bigint -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x5218 : 'tags this) ->
        fun ~byteOffset:(x5213 : float) ->
          fun ~value:(x5214 : bigint) ->
            fun ?littleEndian:(x5215 : bool option) ->
              fun () ->
                ignore
                  (let x5220 = this_to_js Obj.magic x5218 in
                   Ojs.call (Ojs.get_prop_ascii x5220 "setBigUint64") "apply"
                     [|x5220;((let x5216 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5216 "push"
                                    [|(Ojs.float_to_js x5213)|]);
                               ignore
                                 (Ojs.call x5216 "push"
                                    [|(bigint_to_js x5214)|]);
                               (match x5215 with
                                | Some x5217 ->
                                    ignore
                                      (Ojs.call x5216 "push"
                                         [|(Ojs.bool_to_js x5217)|])
                                | None -> ());
                               x5216))|])
    let (get_buffer : 'tags this -> ArrayBuffer.t) =
      fun (x5221 : 'tags this) ->
        ArrayBuffer.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5221) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x5223 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5223) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x5225 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5225) "byteOffset")
    let (getFloat32 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x5231 : 'tags this) ->
        fun ~byteOffset:(x5227 : float) ->
          fun ?littleEndian:(x5228 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x5233 = this_to_js Obj.magic x5231 in
                 Ojs.call (Ojs.get_prop_ascii x5233 "getFloat32") "apply"
                   [|x5233;((let x5229 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5229 "push"
                                  [|(Ojs.float_to_js x5227)|]);
                             (match x5228 with
                              | Some x5230 ->
                                  ignore
                                    (Ojs.call x5229 "push"
                                       [|(Ojs.bool_to_js x5230)|])
                              | None -> ());
                             x5229))|])
    let (getFloat64 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x5238 : 'tags this) ->
        fun ~byteOffset:(x5234 : float) ->
          fun ?littleEndian:(x5235 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x5240 = this_to_js Obj.magic x5238 in
                 Ojs.call (Ojs.get_prop_ascii x5240 "getFloat64") "apply"
                   [|x5240;((let x5236 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5236 "push"
                                  [|(Ojs.float_to_js x5234)|]);
                             (match x5235 with
                              | Some x5237 ->
                                  ignore
                                    (Ojs.call x5236 "push"
                                       [|(Ojs.bool_to_js x5237)|])
                              | None -> ());
                             x5236))|])
    let (getInt8 : 'tags this -> byteOffset:float -> float) =
      fun (x5242 : 'tags this) ->
        fun ~byteOffset:(x5241 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x5242) "getInt8"
               [|(Ojs.float_to_js x5241)|])
    let (getInt16 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x5248 : 'tags this) ->
        fun ~byteOffset:(x5244 : float) ->
          fun ?littleEndian:(x5245 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x5250 = this_to_js Obj.magic x5248 in
                 Ojs.call (Ojs.get_prop_ascii x5250 "getInt16") "apply"
                   [|x5250;((let x5246 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5246 "push"
                                  [|(Ojs.float_to_js x5244)|]);
                             (match x5245 with
                              | Some x5247 ->
                                  ignore
                                    (Ojs.call x5246 "push"
                                       [|(Ojs.bool_to_js x5247)|])
                              | None -> ());
                             x5246))|])
    let (getInt32 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x5255 : 'tags this) ->
        fun ~byteOffset:(x5251 : float) ->
          fun ?littleEndian:(x5252 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x5257 = this_to_js Obj.magic x5255 in
                 Ojs.call (Ojs.get_prop_ascii x5257 "getInt32") "apply"
                   [|x5257;((let x5253 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5253 "push"
                                  [|(Ojs.float_to_js x5251)|]);
                             (match x5252 with
                              | Some x5254 ->
                                  ignore
                                    (Ojs.call x5253 "push"
                                       [|(Ojs.bool_to_js x5254)|])
                              | None -> ());
                             x5253))|])
    let (getUint8 : 'tags this -> byteOffset:float -> float) =
      fun (x5259 : 'tags this) ->
        fun ~byteOffset:(x5258 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x5259) "getUint8"
               [|(Ojs.float_to_js x5258)|])
    let (getUint16 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x5265 : 'tags this) ->
        fun ~byteOffset:(x5261 : float) ->
          fun ?littleEndian:(x5262 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x5267 = this_to_js Obj.magic x5265 in
                 Ojs.call (Ojs.get_prop_ascii x5267 "getUint16") "apply"
                   [|x5267;((let x5263 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5263 "push"
                                  [|(Ojs.float_to_js x5261)|]);
                             (match x5262 with
                              | Some x5264 ->
                                  ignore
                                    (Ojs.call x5263 "push"
                                       [|(Ojs.bool_to_js x5264)|])
                              | None -> ());
                             x5263))|])
    let (getUint32 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x5272 : 'tags this) ->
        fun ~byteOffset:(x5268 : float) ->
          fun ?littleEndian:(x5269 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x5274 = this_to_js Obj.magic x5272 in
                 Ojs.call (Ojs.get_prop_ascii x5274 "getUint32") "apply"
                   [|x5274;((let x5270 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5270 "push"
                                  [|(Ojs.float_to_js x5268)|]);
                             (match x5269 with
                              | Some x5271 ->
                                  ignore
                                    (Ojs.call x5270 "push"
                                       [|(Ojs.bool_to_js x5271)|])
                              | None -> ());
                             x5270))|])
    let (setFloat32 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x5280 : 'tags this) ->
        fun ~byteOffset:(x5275 : float) ->
          fun ~value:(x5276 : float) ->
            fun ?littleEndian:(x5277 : bool option) ->
              fun () ->
                ignore
                  (let x5282 = this_to_js Obj.magic x5280 in
                   Ojs.call (Ojs.get_prop_ascii x5282 "setFloat32") "apply"
                     [|x5282;((let x5278 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5278 "push"
                                    [|(Ojs.float_to_js x5275)|]);
                               ignore
                                 (Ojs.call x5278 "push"
                                    [|(Ojs.float_to_js x5276)|]);
                               (match x5277 with
                                | Some x5279 ->
                                    ignore
                                      (Ojs.call x5278 "push"
                                         [|(Ojs.bool_to_js x5279)|])
                                | None -> ());
                               x5278))|])
    let (setFloat64 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x5288 : 'tags this) ->
        fun ~byteOffset:(x5283 : float) ->
          fun ~value:(x5284 : float) ->
            fun ?littleEndian:(x5285 : bool option) ->
              fun () ->
                ignore
                  (let x5290 = this_to_js Obj.magic x5288 in
                   Ojs.call (Ojs.get_prop_ascii x5290 "setFloat64") "apply"
                     [|x5290;((let x5286 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5286 "push"
                                    [|(Ojs.float_to_js x5283)|]);
                               ignore
                                 (Ojs.call x5286 "push"
                                    [|(Ojs.float_to_js x5284)|]);
                               (match x5285 with
                                | Some x5287 ->
                                    ignore
                                      (Ojs.call x5286 "push"
                                         [|(Ojs.bool_to_js x5287)|])
                                | None -> ());
                               x5286))|])
    let (setInt8 : 'tags this -> byteOffset:float -> value:float -> unit) =
      fun (x5293 : 'tags this) ->
        fun ~byteOffset:(x5291 : float) ->
          fun ~value:(x5292 : float) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x5293) "setInt8"
                 [|(Ojs.float_to_js x5291);(Ojs.float_to_js x5292)|])
    let (setInt16 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x5300 : 'tags this) ->
        fun ~byteOffset:(x5295 : float) ->
          fun ~value:(x5296 : float) ->
            fun ?littleEndian:(x5297 : bool option) ->
              fun () ->
                ignore
                  (let x5302 = this_to_js Obj.magic x5300 in
                   Ojs.call (Ojs.get_prop_ascii x5302 "setInt16") "apply"
                     [|x5302;((let x5298 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5298 "push"
                                    [|(Ojs.float_to_js x5295)|]);
                               ignore
                                 (Ojs.call x5298 "push"
                                    [|(Ojs.float_to_js x5296)|]);
                               (match x5297 with
                                | Some x5299 ->
                                    ignore
                                      (Ojs.call x5298 "push"
                                         [|(Ojs.bool_to_js x5299)|])
                                | None -> ());
                               x5298))|])
    let (setInt32 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x5308 : 'tags this) ->
        fun ~byteOffset:(x5303 : float) ->
          fun ~value:(x5304 : float) ->
            fun ?littleEndian:(x5305 : bool option) ->
              fun () ->
                ignore
                  (let x5310 = this_to_js Obj.magic x5308 in
                   Ojs.call (Ojs.get_prop_ascii x5310 "setInt32") "apply"
                     [|x5310;((let x5306 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5306 "push"
                                    [|(Ojs.float_to_js x5303)|]);
                               ignore
                                 (Ojs.call x5306 "push"
                                    [|(Ojs.float_to_js x5304)|]);
                               (match x5305 with
                                | Some x5307 ->
                                    ignore
                                      (Ojs.call x5306 "push"
                                         [|(Ojs.bool_to_js x5307)|])
                                | None -> ());
                               x5306))|])
    let (setUint8 : 'tags this -> byteOffset:float -> value:float -> unit) =
      fun (x5313 : 'tags this) ->
        fun ~byteOffset:(x5311 : float) ->
          fun ~value:(x5312 : float) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x5313) "setUint8"
                 [|(Ojs.float_to_js x5311);(Ojs.float_to_js x5312)|])
    let (setUint16 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x5320 : 'tags this) ->
        fun ~byteOffset:(x5315 : float) ->
          fun ~value:(x5316 : float) ->
            fun ?littleEndian:(x5317 : bool option) ->
              fun () ->
                ignore
                  (let x5322 = this_to_js Obj.magic x5320 in
                   Ojs.call (Ojs.get_prop_ascii x5322 "setUint16") "apply"
                     [|x5322;((let x5318 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5318 "push"
                                    [|(Ojs.float_to_js x5315)|]);
                               ignore
                                 (Ojs.call x5318 "push"
                                    [|(Ojs.float_to_js x5316)|]);
                               (match x5317 with
                                | Some x5319 ->
                                    ignore
                                      (Ojs.call x5318 "push"
                                         [|(Ojs.bool_to_js x5319)|])
                                | None -> ());
                               x5318))|])
    let (setUint32 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x5328 : 'tags this) ->
        fun ~byteOffset:(x5323 : float) ->
          fun ~value:(x5324 : float) ->
            fun ?littleEndian:(x5325 : bool option) ->
              fun () ->
                ignore
                  (let x5330 = this_to_js Obj.magic x5328 in
                   Ojs.call (Ojs.get_prop_ascii x5330 "setUint32") "apply"
                     [|x5330;((let x5326 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5326 "push"
                                    [|(Ojs.float_to_js x5323)|]);
                               ignore
                                 (Ojs.call x5326 "push"
                                    [|(Ojs.float_to_js x5324)|]);
                               (match x5325 with
                                | Some x5327 ->
                                    ignore
                                      (Ojs.call x5326 "push"
                                         [|(Ojs.bool_to_js x5327)|])
                                | None -> ());
                               x5326))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "DataView")
             "prototype")
    let (create :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?byteLength:float -> unit -> t)
      =
      fun ~buffer:(x5331 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x5332 : float option) ->
          fun ?byteLength:(x5333 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "DataView")
                   (let x5334 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x5334 "push"
                         [|(ArrayBufferLike.t_to_js x5331)|]);
                    (match x5332 with
                     | Some x5336 ->
                         ignore
                           (Ojs.call x5334 "push" [|(Ojs.float_to_js x5336)|])
                     | None -> ());
                    (match x5333 with
                     | Some x5335 ->
                         ignore
                           (Ojs.call x5334 "push" [|(Ojs.float_to_js x5335)|])
                     | None -> ());
                    x5334))
    let cast_from = Obj.magic
  end
module ConstructorParameters =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x5338 : Ojs.t) -> any_of_js x5338
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x5337 : any) -> any_to_js x5337
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x5341 : Ojs.t) -> t_of_js __T_of_js x5341
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x5339 : __T t) -> t_to_js __T_to_js x5339
  end
module ClassDecorator =
  struct
    type t = [ `ClassDecorator ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5344 : Ojs.t) -> t_of_js x5344
    and t_0_to_js : t_0 -> Ojs.t = fun (x5343 : t) -> t_to_js x5343
    type tags = [ `ClassDecorator ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ClassDecorator ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5347 : Ojs.t) -> intf_of_js __tags_of_js x5347
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5345 : __tags intf) -> intf_to_js __tags_to_js x5345
    let (apply :
      'tags this -> target:'TFunction -> ('TFunction, unit) union2) =
      fun (x5350 : 'tags this) ->
        fun ~target:(x5349 : 'TFunction) ->
          union2_of_js Obj.magic Ojs.unit_of_js
            (Ojs.apply (this_to_js Obj.magic x5350) [|(Obj.magic x5349)|])
    let cast_from = Obj.magic
  end
module Capitalize =
  struct
    type 'S t = Ojs.t
    let rec t_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t = fun (type __S) ->
      fun (__S_of_js : Ojs.t -> __S) -> fun (x5355 : Ojs.t) -> x5355
    and t_to_js : 'S . ('S -> Ojs.t) -> 'S t -> Ojs.t = fun (type __S) ->
      fun (__S_to_js : __S -> Ojs.t) -> fun (x5354 : Ojs.t) -> x5354
    type 'S t_1 = 'S t
    let rec t_1_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t_1 = fun (type
      __S) ->
      fun (__S_of_js : Ojs.t -> __S) ->
        fun (x5358 : Ojs.t) -> t_of_js __S_of_js x5358
    and t_1_to_js : 'S . ('S -> Ojs.t) -> 'S t_1 -> Ojs.t = fun (type __S) ->
      fun (__S_to_js : __S -> Ojs.t) ->
        fun (x5356 : __S t) -> t_to_js __S_to_js x5356
  end
module ThisParameterType =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x5361 : Ojs.t) -> any_of_js x5361
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x5360 : any) -> any_to_js x5360
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x5364 : Ojs.t) -> t_of_js __T_of_js x5364
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x5362 : __T t) -> t_to_js __T_to_js x5362
  end
module OmitThisParameter =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x5367 : Ojs.t) -> any_of_js x5367
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x5366 : any) -> any_to_js x5366
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x5370 : Ojs.t) -> t_of_js __T_of_js x5370
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x5368 : __T t) -> t_to_js __T_to_js x5368
  end
module CallableFunction =
  struct
    type t = [ `CallableFunction  | `Function  | `Function ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5373 : Ojs.t) -> t_of_js x5373
    and t_0_to_js : t_0 -> Ojs.t = fun (x5372 : t) -> t_to_js x5372
    type tags = [ `CallableFunction  | `Function  | `Function ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `CallableFunction ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5376 : Ojs.t) -> intf_of_js __tags_of_js x5376
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5374 : __tags intf) -> intf_to_js __tags_to_js x5374
    let (apply_ : 'tags this -> this:('T -> 'R) -> thisArg:'T -> 'R) =
      fun (x5381 : 'tags this) ->
        fun ~this:(x5378 : 'T -> 'R) ->
          fun ~thisArg:(x5380 : 'T) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x5381) "apply"
                 [|(Ojs.fun_to_js 1
                      (fun (x5379 : Ojs.t) ->
                         Obj.magic (x5378 (Obj.magic x5379))));(Obj.magic
                                                                  x5380)|])
    let (apply_' :
      'tags this ->
        this:(this:'T -> args:any list -> 'R) -> thisArg:'T -> args:'A -> 'R)
      =
      fun (x5388 : 'tags this) ->
        fun ~this:(x5383 : this:'T -> args:any list -> 'R) ->
          fun ~thisArg:(x5386 : 'T) ->
            fun ~args:(x5387 : 'A) ->
              Obj.magic
                (Ojs.call (this_to_js Obj.magic x5388) "apply"
                   [|(Ojs.fun_to_js_args
                        (fun (x5384 : _) ->
                           Obj.magic
                             (x5383 ~this:(Obj.magic (Ojs.array_get x5384 0))
                                ~args:(Ojs.list_of_js_from any_of_js x5384 1))));(
                     Obj.magic x5386);(Obj.magic x5387)|])
    let (call :
      'tags this ->
        this:(this:'T -> args:any list -> 'R) ->
          thisArg:'T -> args:any list -> 'R)
      =
      fun (x5397 : 'tags this) ->
        fun ~this:(x5390 : this:'T -> args:any list -> 'R) ->
          fun ~thisArg:(x5391 : 'T) ->
            fun ~args:(x5392 : any list) ->
              Obj.magic
                (let x5399 = this_to_js Obj.magic x5397 in
                 Ojs.call (Ojs.get_prop_ascii x5399 "call") "apply"
                   [|x5399;((let x5393 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5393 "push"
                                  [|(Ojs.fun_to_js_args
                                       (fun (x5395 : _) ->
                                          Obj.magic
                                            (x5390
                                               ~this:(Obj.magic
                                                        (Ojs.array_get x5395
                                                           0))
                                               ~args:(Ojs.list_of_js_from
                                                        any_of_js x5395 1))))|]);
                             ignore
                               (Ojs.call x5393 "push" [|(Obj.magic x5391)|]);
                             List.iter
                               (fun (x5394 : any) ->
                                  ignore
                                    (Ojs.call x5393 "push"
                                       [|(any_to_js x5394)|])) x5392;
                             x5393))|])
    let (bind :
      'tags this ->
        this:'T -> thisArg:'T ThisParameterType.t -> 'T OmitThisParameter.t)
      =
      fun (x5403 : 'tags this) ->
        fun ~this:(x5400 : 'T) ->
          fun ~thisArg:(x5401 : 'T ThisParameterType.t) ->
            OmitThisParameter.t_of_js Obj.magic
              (Ojs.call (this_to_js Obj.magic x5403) "bind"
                 [|(Obj.magic x5400);(ThisParameterType.t_to_js Obj.magic
                                        x5401)|])
    let (bind' :
      'tags this ->
        this:(this:'T -> arg0:'A0 -> args:any list -> 'R) ->
          thisArg:'T -> arg0:'A0 -> any list -> 'R)
      =
      fun (x5411 : 'tags this) ->
        fun ~this:(x5406 : this:'T -> arg0:'A0 -> args:any list -> 'R) ->
          fun ~thisArg:(x5409 : 'T) ->
            fun ~arg0:(x5410 : 'A0) ->
              fun (x5413 : any list) ->
                Obj.magic
                  (Ojs.call
                     (Ojs.call (this_to_js Obj.magic x5411) "bind"
                        [|(Ojs.fun_to_js_args
                             (fun (x5407 : _) ->
                                Obj.magic
                                  (x5406
                                     ~this:(Obj.magic (Ojs.array_get x5407 0))
                                     ~arg0:(Obj.magic (Ojs.array_get x5407 1))
                                     ~args:(Ojs.list_of_js_from any_of_js
                                              x5407 2))));(Obj.magic x5409);(
                          Obj.magic x5410)|]) "apply"
                     [|Ojs.null;((let x5414 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  List.iter
                                    (fun (x5415 : any) ->
                                       ignore
                                         (Ojs.call x5414 "push"
                                            [|(any_to_js x5415)|])) x5413;
                                  x5414))|])
    let (bind'' :
      'tags this ->
        this:(this:'T -> arg0:'A0 -> arg1:'A1 -> args:any list -> 'R) ->
          thisArg:'T -> arg0:'A0 -> arg1:'A1 -> any list -> 'R)
      =
      fun (x5422 : 'tags this) ->
        fun
          ~this:(x5416 :
                  this:'T -> arg0:'A0 -> arg1:'A1 -> args:any list -> 'R)
          ->
          fun ~thisArg:(x5419 : 'T) ->
            fun ~arg0:(x5420 : 'A0) ->
              fun ~arg1:(x5421 : 'A1) ->
                fun (x5424 : any list) ->
                  Obj.magic
                    (Ojs.call
                       (Ojs.call (this_to_js Obj.magic x5422) "bind"
                          [|(Ojs.fun_to_js_args
                               (fun (x5417 : _) ->
                                  Obj.magic
                                    (x5416
                                       ~this:(Obj.magic
                                                (Ojs.array_get x5417 0))
                                       ~arg0:(Obj.magic
                                                (Ojs.array_get x5417 1))
                                       ~arg1:(Obj.magic
                                                (Ojs.array_get x5417 2))
                                       ~args:(Ojs.list_of_js_from any_of_js
                                                x5417 3))));(Obj.magic x5419);(
                            Obj.magic x5420);(Obj.magic x5421)|]) "apply"
                       [|Ojs.null;((let x5425 =
                                      Ojs.new_obj
                                        (Ojs.get_prop_ascii Ojs.global
                                           "Array") [||] in
                                    List.iter
                                      (fun (x5426 : any) ->
                                         ignore
                                           (Ojs.call x5425 "push"
                                              [|(any_to_js x5426)|])) x5424;
                                    x5425))|])
    let (bind''' :
      'tags this ->
        this:(this:'T ->
                arg0:'A0 -> arg1:'A1 -> arg2:'A2 -> args:any list -> 'R)
          -> thisArg:'T -> arg0:'A0 -> arg1:'A1 -> arg2:'A2 -> any list -> 'R)
      =
      fun (x5434 : 'tags this) ->
        fun
          ~this:(x5427 :
                  this:'T ->
                    arg0:'A0 -> arg1:'A1 -> arg2:'A2 -> args:any list -> 'R)
          ->
          fun ~thisArg:(x5430 : 'T) ->
            fun ~arg0:(x5431 : 'A0) ->
              fun ~arg1:(x5432 : 'A1) ->
                fun ~arg2:(x5433 : 'A2) ->
                  fun (x5436 : any list) ->
                    Obj.magic
                      (Ojs.call
                         (Ojs.call (this_to_js Obj.magic x5434) "bind"
                            [|(Ojs.fun_to_js_args
                                 (fun (x5428 : _) ->
                                    Obj.magic
                                      (x5427
                                         ~this:(Obj.magic
                                                  (Ojs.array_get x5428 0))
                                         ~arg0:(Obj.magic
                                                  (Ojs.array_get x5428 1))
                                         ~arg1:(Obj.magic
                                                  (Ojs.array_get x5428 2))
                                         ~arg2:(Obj.magic
                                                  (Ojs.array_get x5428 3))
                                         ~args:(Ojs.list_of_js_from any_of_js
                                                  x5428 4))));(Obj.magic
                                                                 x5430);(
                              Obj.magic x5431);(Obj.magic x5432);(Obj.magic
                                                                    x5433)|])
                         "apply"
                         [|Ojs.null;((let x5437 =
                                        Ojs.new_obj
                                          (Ojs.get_prop_ascii Ojs.global
                                             "Array") [||] in
                                      List.iter
                                        (fun (x5438 : any) ->
                                           ignore
                                             (Ojs.call x5437 "push"
                                                [|(any_to_js x5438)|])) x5436;
                                      x5437))|])
    let (bind'''' :
      'tags this ->
        this:(this:'T ->
                arg0:'A0 ->
                  arg1:'A1 -> arg2:'A2 -> arg3:'A3 -> args:any list -> 'R)
          ->
          thisArg:'T ->
            arg0:'A0 -> arg1:'A1 -> arg2:'A2 -> arg3:'A3 -> any list -> 'R)
      =
      fun (x5447 : 'tags this) ->
        fun
          ~this:(x5439 :
                  this:'T ->
                    arg0:'A0 ->
                      arg1:'A1 -> arg2:'A2 -> arg3:'A3 -> args:any list -> 'R)
          ->
          fun ~thisArg:(x5442 : 'T) ->
            fun ~arg0:(x5443 : 'A0) ->
              fun ~arg1:(x5444 : 'A1) ->
                fun ~arg2:(x5445 : 'A2) ->
                  fun ~arg3:(x5446 : 'A3) ->
                    fun (x5449 : any list) ->
                      Obj.magic
                        (Ojs.call
                           (Ojs.call (this_to_js Obj.magic x5447) "bind"
                              [|(Ojs.fun_to_js_args
                                   (fun (x5440 : _) ->
                                      Obj.magic
                                        (x5439
                                           ~this:(Obj.magic
                                                    (Ojs.array_get x5440 0))
                                           ~arg0:(Obj.magic
                                                    (Ojs.array_get x5440 1))
                                           ~arg1:(Obj.magic
                                                    (Ojs.array_get x5440 2))
                                           ~arg2:(Obj.magic
                                                    (Ojs.array_get x5440 3))
                                           ~arg3:(Obj.magic
                                                    (Ojs.array_get x5440 4))
                                           ~args:(Ojs.list_of_js_from
                                                    any_of_js x5440 5))));(
                                Obj.magic x5442);(Obj.magic x5443);(Obj.magic
                                                                    x5444);(
                                Obj.magic x5445);(Obj.magic x5446)|]) "apply"
                           [|Ojs.null;((let x5450 =
                                          Ojs.new_obj
                                            (Ojs.get_prop_ascii Ojs.global
                                               "Array") [||] in
                                        List.iter
                                          (fun (x5451 : any) ->
                                             ignore
                                               (Ojs.call x5450 "push"
                                                  [|(any_to_js x5451)|]))
                                          x5449;
                                        x5450))|])
    let (bind''''' :
      'tags this ->
        this:(this:'T -> args:'AX list -> 'R) ->
          thisArg:'T -> args:'AX list -> 'AX list -> 'R)
      =
      fun (x5459 : 'tags this) ->
        fun ~this:(x5452 : this:'T -> args:'AX list -> 'R) ->
          fun ~thisArg:(x5453 : 'T) ->
            fun ~args:(x5454 : 'AX list) ->
              fun (x5462 : 'AX list) ->
                Obj.magic
                  (Ojs.call
                     (let x5461 = this_to_js Obj.magic x5459 in
                      Ojs.call (Ojs.get_prop_ascii x5461 "bind") "apply"
                        [|x5461;((let x5455 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  ignore
                                    (Ojs.call x5455 "push"
                                       [|(Ojs.fun_to_js_args
                                            (fun (x5457 : _) ->
                                               Obj.magic
                                                 (x5452
                                                    ~this:(Obj.magic
                                                             (Ojs.array_get
                                                                x5457 0))
                                                    ~args:(Ojs.list_of_js_from
                                                             Obj.magic x5457
                                                             1))))|]);
                                  ignore
                                    (Ojs.call x5455 "push"
                                       [|(Obj.magic x5453)|]);
                                  List.iter
                                    (fun (x5456 : 'AX) ->
                                       ignore
                                         (Ojs.call x5455 "push"
                                            [|(Obj.magic x5456)|])) x5454;
                                  x5455))|]) "apply"
                     [|Ojs.null;((let x5463 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  List.iter
                                    (fun (x5464 : 'AX) ->
                                       ignore
                                         (Ojs.call x5463 "push"
                                            [|(Obj.magic x5464)|])) x5462;
                                  x5463))|])
    let cast_from = Obj.magic
  end
module Boolean =
  struct
    type t = [ `Boolean ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5466 : Ojs.t) -> t_of_js x5466
    and t_0_to_js : t_0 -> Ojs.t = fun (x5465 : t) -> t_to_js x5465
    type tags = [ `Boolean ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Boolean ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5469 : Ojs.t) -> intf_of_js __tags_of_js x5469
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5467 : __tags intf) -> intf_to_js __tags_to_js x5467
    let (valueOf : 'tags this -> bool) =
      fun (x5471 : 'tags this) ->
        Ojs.bool_of_js (Ojs.call (this_to_js Obj.magic x5471) "valueOf" [||])
    let (create : ?value:any -> unit -> t) =
      fun ?value:(x5473 : any option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Boolean")
               (let x5474 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x5473 with
                 | Some x5475 ->
                     ignore (Ojs.call x5474 "push" [|(any_to_js x5475)|])
                 | None -> ());
                x5474))
    let (invoke : ?value:'T -> unit -> bool) =
      fun ?value:(x5476 : 'T option) ->
        fun () ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Boolean") "apply"
               [|Ojs.null;((let x5477 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x5476 with
                             | Some x5478 ->
                                 ignore
                                   (Ojs.call x5477 "push"
                                      [|(Obj.magic x5478)|])
                             | None -> ());
                            x5477))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Boolean")
             "prototype")
    let cast_from = Obj.magic
  end
module BigIntToLocaleStringOptions =
  struct
    type t = [ `BigIntToLocaleStringOptions ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5480 : Ojs.t) -> t_of_js x5480
    and t_0_to_js : t_0 -> Ojs.t = fun (x5479 : t) -> t_to_js x5479
    type tags = [ `BigIntToLocaleStringOptions ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `BigIntToLocaleStringOptions ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5483 : Ojs.t) -> intf_of_js __tags_of_js x5483
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5481 : __tags intf) -> intf_to_js __tags_to_js x5481
    let (get_localeMatcher : 'tags this -> string) =
      fun (x5485 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5485) "localeMatcher")
    let (set_localeMatcher : 'tags this -> string -> unit) =
      fun (x5487 : 'tags this) ->
        fun (x5488 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5487) "localeMatcher"
            (Ojs.string_to_js x5488)
    let (get_style : 'tags this -> string) =
      fun (x5490 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5490) "style")
    let (set_style : 'tags this -> string -> unit) =
      fun (x5492 : 'tags this) ->
        fun (x5493 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5492) "style"
            (Ojs.string_to_js x5493)
    let (get_numberingSystem : 'tags this -> string) =
      fun (x5495 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5495) "numberingSystem")
    let (set_numberingSystem : 'tags this -> string -> unit) =
      fun (x5497 : 'tags this) ->
        fun (x5498 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5497) "numberingSystem"
            (Ojs.string_to_js x5498)
    let (get_unit : 'tags this -> string) =
      fun (x5500 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5500) "unit")
    let (set_unit : 'tags this -> string -> unit) =
      fun (x5502 : 'tags this) ->
        fun (x5503 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5502) "unit"
            (Ojs.string_to_js x5503)
    let (get_unitDisplay : 'tags this -> string) =
      fun (x5505 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5505) "unitDisplay")
    let (set_unitDisplay : 'tags this -> string -> unit) =
      fun (x5507 : 'tags this) ->
        fun (x5508 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5507) "unitDisplay"
            (Ojs.string_to_js x5508)
    let (get_currency : 'tags this -> string) =
      fun (x5510 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5510) "currency")
    let (set_currency : 'tags this -> string -> unit) =
      fun (x5512 : 'tags this) ->
        fun (x5513 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5512) "currency"
            (Ojs.string_to_js x5513)
    let (get_currencyDisplay : 'tags this -> string) =
      fun (x5515 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5515) "currencyDisplay")
    let (set_currencyDisplay : 'tags this -> string -> unit) =
      fun (x5517 : 'tags this) ->
        fun (x5518 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5517) "currencyDisplay"
            (Ojs.string_to_js x5518)
    let (get_useGrouping : 'tags this -> bool) =
      fun (x5520 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5520) "useGrouping")
    let (set_useGrouping : 'tags this -> bool -> unit) =
      fun (x5522 : 'tags this) ->
        fun (x5523 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5522) "useGrouping"
            (Ojs.bool_to_js x5523)
    let (get_minimumIntegerDigits :
      'tags this ->
        [ `L_n_1  | `L_n_2  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6  | 
          `L_n_7 
        | `L_n_8  | `L_n_9  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13 
        | `L_n_14  | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19 
        | `L_n_20  | `L_n_21 ])
      =
      fun (x5525 : 'tags this) ->
        let x5527 =
          Ojs.get_prop_ascii (this_to_js Obj.magic x5525)
            "minimumIntegerDigits" in
        match Ojs.int_of_js x5527 with
        | 1 -> `L_n_1
        | 2 -> `L_n_2
        | 3 -> `L_n_3
        | 4 -> `L_n_4
        | 5 -> `L_n_5
        | 6 -> `L_n_6
        | 7 -> `L_n_7
        | 8 -> `L_n_8
        | 9 -> `L_n_9
        | 10 -> `L_n_10
        | 11 -> `L_n_11
        | 12 -> `L_n_12
        | 13 -> `L_n_13
        | 14 -> `L_n_14
        | 15 -> `L_n_15
        | 16 -> `L_n_16
        | 17 -> `L_n_17
        | 18 -> `L_n_18
        | 19 -> `L_n_19
        | 20 -> `L_n_20
        | 21 -> `L_n_21
        | _ -> assert false
    let (set_minimumIntegerDigits :
      'tags this ->
        [ `L_n_1  | `L_n_2  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6  | 
          `L_n_7 
        | `L_n_8  | `L_n_9  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13 
        | `L_n_14  | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19 
        | `L_n_20  | `L_n_21 ] -> unit)
      =
      fun (x5528 : 'tags this) ->
        fun
          (x5529 :
            [ `L_n_1  | `L_n_2  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
            | `L_n_7  | `L_n_8  | `L_n_9  | `L_n_10  | `L_n_11  | `L_n_12 
            | `L_n_13  | `L_n_14  | `L_n_15  | `L_n_16  | `L_n_17  | 
              `L_n_18 
            | `L_n_19  | `L_n_20  | `L_n_21 ])
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5528)
            "minimumIntegerDigits"
            (match x5529 with
             | `L_n_1 -> Ojs.int_to_js 1
             | `L_n_2 -> Ojs.int_to_js 2
             | `L_n_3 -> Ojs.int_to_js 3
             | `L_n_4 -> Ojs.int_to_js 4
             | `L_n_5 -> Ojs.int_to_js 5
             | `L_n_6 -> Ojs.int_to_js 6
             | `L_n_7 -> Ojs.int_to_js 7
             | `L_n_8 -> Ojs.int_to_js 8
             | `L_n_9 -> Ojs.int_to_js 9
             | `L_n_10 -> Ojs.int_to_js 10
             | `L_n_11 -> Ojs.int_to_js 11
             | `L_n_12 -> Ojs.int_to_js 12
             | `L_n_13 -> Ojs.int_to_js 13
             | `L_n_14 -> Ojs.int_to_js 14
             | `L_n_15 -> Ojs.int_to_js 15
             | `L_n_16 -> Ojs.int_to_js 16
             | `L_n_17 -> Ojs.int_to_js 17
             | `L_n_18 -> Ojs.int_to_js 18
             | `L_n_19 -> Ojs.int_to_js 19
             | `L_n_20 -> Ojs.int_to_js 20
             | `L_n_21 -> Ojs.int_to_js 21)
    let (get_minimumFractionDigits :
      'tags this ->
        [ `L_n_0  | `L_n_1  | `L_n_2  | `L_n_3  | `L_n_4  | `L_n_5  | 
          `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9  | `L_n_10  | `L_n_11  | `L_n_12 
        | `L_n_13  | `L_n_14  | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18 
        | `L_n_19  | `L_n_20 ])
      =
      fun (x5531 : 'tags this) ->
        let x5533 =
          Ojs.get_prop_ascii (this_to_js Obj.magic x5531)
            "minimumFractionDigits" in
        match Ojs.int_of_js x5533 with
        | 0 -> `L_n_0
        | 1 -> `L_n_1
        | 2 -> `L_n_2
        | 3 -> `L_n_3
        | 4 -> `L_n_4
        | 5 -> `L_n_5
        | 6 -> `L_n_6
        | 7 -> `L_n_7
        | 8 -> `L_n_8
        | 9 -> `L_n_9
        | 10 -> `L_n_10
        | 11 -> `L_n_11
        | 12 -> `L_n_12
        | 13 -> `L_n_13
        | 14 -> `L_n_14
        | 15 -> `L_n_15
        | 16 -> `L_n_16
        | 17 -> `L_n_17
        | 18 -> `L_n_18
        | 19 -> `L_n_19
        | 20 -> `L_n_20
        | _ -> assert false
    let (set_minimumFractionDigits :
      'tags this ->
        [ `L_n_0  | `L_n_1  | `L_n_2  | `L_n_3  | `L_n_4  | `L_n_5  | 
          `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9  | `L_n_10  | `L_n_11  | `L_n_12 
        | `L_n_13  | `L_n_14  | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18 
        | `L_n_19  | `L_n_20 ] -> unit)
      =
      fun (x5534 : 'tags this) ->
        fun
          (x5535 :
            [ `L_n_0  | `L_n_1  | `L_n_2  | `L_n_3  | `L_n_4  | `L_n_5 
            | `L_n_6  | `L_n_7  | `L_n_8  | `L_n_9  | `L_n_10  | `L_n_11 
            | `L_n_12  | `L_n_13  | `L_n_14  | `L_n_15  | `L_n_16  | 
              `L_n_17 
            | `L_n_18  | `L_n_19  | `L_n_20 ])
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5534)
            "minimumFractionDigits"
            (match x5535 with
             | `L_n_0 -> Ojs.int_to_js 0
             | `L_n_1 -> Ojs.int_to_js 1
             | `L_n_2 -> Ojs.int_to_js 2
             | `L_n_3 -> Ojs.int_to_js 3
             | `L_n_4 -> Ojs.int_to_js 4
             | `L_n_5 -> Ojs.int_to_js 5
             | `L_n_6 -> Ojs.int_to_js 6
             | `L_n_7 -> Ojs.int_to_js 7
             | `L_n_8 -> Ojs.int_to_js 8
             | `L_n_9 -> Ojs.int_to_js 9
             | `L_n_10 -> Ojs.int_to_js 10
             | `L_n_11 -> Ojs.int_to_js 11
             | `L_n_12 -> Ojs.int_to_js 12
             | `L_n_13 -> Ojs.int_to_js 13
             | `L_n_14 -> Ojs.int_to_js 14
             | `L_n_15 -> Ojs.int_to_js 15
             | `L_n_16 -> Ojs.int_to_js 16
             | `L_n_17 -> Ojs.int_to_js 17
             | `L_n_18 -> Ojs.int_to_js 18
             | `L_n_19 -> Ojs.int_to_js 19
             | `L_n_20 -> Ojs.int_to_js 20)
    let (get_maximumFractionDigits :
      'tags this ->
        [ `L_n_0  | `L_n_1  | `L_n_2  | `L_n_3  | `L_n_4  | `L_n_5  | 
          `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9  | `L_n_10  | `L_n_11  | `L_n_12 
        | `L_n_13  | `L_n_14  | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18 
        | `L_n_19  | `L_n_20 ])
      =
      fun (x5537 : 'tags this) ->
        let x5539 =
          Ojs.get_prop_ascii (this_to_js Obj.magic x5537)
            "maximumFractionDigits" in
        match Ojs.int_of_js x5539 with
        | 0 -> `L_n_0
        | 1 -> `L_n_1
        | 2 -> `L_n_2
        | 3 -> `L_n_3
        | 4 -> `L_n_4
        | 5 -> `L_n_5
        | 6 -> `L_n_6
        | 7 -> `L_n_7
        | 8 -> `L_n_8
        | 9 -> `L_n_9
        | 10 -> `L_n_10
        | 11 -> `L_n_11
        | 12 -> `L_n_12
        | 13 -> `L_n_13
        | 14 -> `L_n_14
        | 15 -> `L_n_15
        | 16 -> `L_n_16
        | 17 -> `L_n_17
        | 18 -> `L_n_18
        | 19 -> `L_n_19
        | 20 -> `L_n_20
        | _ -> assert false
    let (set_maximumFractionDigits :
      'tags this ->
        [ `L_n_0  | `L_n_1  | `L_n_2  | `L_n_3  | `L_n_4  | `L_n_5  | 
          `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9  | `L_n_10  | `L_n_11  | `L_n_12 
        | `L_n_13  | `L_n_14  | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18 
        | `L_n_19  | `L_n_20 ] -> unit)
      =
      fun (x5540 : 'tags this) ->
        fun
          (x5541 :
            [ `L_n_0  | `L_n_1  | `L_n_2  | `L_n_3  | `L_n_4  | `L_n_5 
            | `L_n_6  | `L_n_7  | `L_n_8  | `L_n_9  | `L_n_10  | `L_n_11 
            | `L_n_12  | `L_n_13  | `L_n_14  | `L_n_15  | `L_n_16  | 
              `L_n_17 
            | `L_n_18  | `L_n_19  | `L_n_20 ])
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5540)
            "maximumFractionDigits"
            (match x5541 with
             | `L_n_0 -> Ojs.int_to_js 0
             | `L_n_1 -> Ojs.int_to_js 1
             | `L_n_2 -> Ojs.int_to_js 2
             | `L_n_3 -> Ojs.int_to_js 3
             | `L_n_4 -> Ojs.int_to_js 4
             | `L_n_5 -> Ojs.int_to_js 5
             | `L_n_6 -> Ojs.int_to_js 6
             | `L_n_7 -> Ojs.int_to_js 7
             | `L_n_8 -> Ojs.int_to_js 8
             | `L_n_9 -> Ojs.int_to_js 9
             | `L_n_10 -> Ojs.int_to_js 10
             | `L_n_11 -> Ojs.int_to_js 11
             | `L_n_12 -> Ojs.int_to_js 12
             | `L_n_13 -> Ojs.int_to_js 13
             | `L_n_14 -> Ojs.int_to_js 14
             | `L_n_15 -> Ojs.int_to_js 15
             | `L_n_16 -> Ojs.int_to_js 16
             | `L_n_17 -> Ojs.int_to_js 17
             | `L_n_18 -> Ojs.int_to_js 18
             | `L_n_19 -> Ojs.int_to_js 19
             | `L_n_20 -> Ojs.int_to_js 20)
    let (get_minimumSignificantDigits :
      'tags this ->
        [ `L_n_1  | `L_n_2  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6  | 
          `L_n_7 
        | `L_n_8  | `L_n_9  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13 
        | `L_n_14  | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19 
        | `L_n_20  | `L_n_21 ])
      =
      fun (x5543 : 'tags this) ->
        let x5545 =
          Ojs.get_prop_ascii (this_to_js Obj.magic x5543)
            "minimumSignificantDigits" in
        match Ojs.int_of_js x5545 with
        | 1 -> `L_n_1
        | 2 -> `L_n_2
        | 3 -> `L_n_3
        | 4 -> `L_n_4
        | 5 -> `L_n_5
        | 6 -> `L_n_6
        | 7 -> `L_n_7
        | 8 -> `L_n_8
        | 9 -> `L_n_9
        | 10 -> `L_n_10
        | 11 -> `L_n_11
        | 12 -> `L_n_12
        | 13 -> `L_n_13
        | 14 -> `L_n_14
        | 15 -> `L_n_15
        | 16 -> `L_n_16
        | 17 -> `L_n_17
        | 18 -> `L_n_18
        | 19 -> `L_n_19
        | 20 -> `L_n_20
        | 21 -> `L_n_21
        | _ -> assert false
    let (set_minimumSignificantDigits :
      'tags this ->
        [ `L_n_1  | `L_n_2  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6  | 
          `L_n_7 
        | `L_n_8  | `L_n_9  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13 
        | `L_n_14  | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19 
        | `L_n_20  | `L_n_21 ] -> unit)
      =
      fun (x5546 : 'tags this) ->
        fun
          (x5547 :
            [ `L_n_1  | `L_n_2  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
            | `L_n_7  | `L_n_8  | `L_n_9  | `L_n_10  | `L_n_11  | `L_n_12 
            | `L_n_13  | `L_n_14  | `L_n_15  | `L_n_16  | `L_n_17  | 
              `L_n_18 
            | `L_n_19  | `L_n_20  | `L_n_21 ])
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5546)
            "minimumSignificantDigits"
            (match x5547 with
             | `L_n_1 -> Ojs.int_to_js 1
             | `L_n_2 -> Ojs.int_to_js 2
             | `L_n_3 -> Ojs.int_to_js 3
             | `L_n_4 -> Ojs.int_to_js 4
             | `L_n_5 -> Ojs.int_to_js 5
             | `L_n_6 -> Ojs.int_to_js 6
             | `L_n_7 -> Ojs.int_to_js 7
             | `L_n_8 -> Ojs.int_to_js 8
             | `L_n_9 -> Ojs.int_to_js 9
             | `L_n_10 -> Ojs.int_to_js 10
             | `L_n_11 -> Ojs.int_to_js 11
             | `L_n_12 -> Ojs.int_to_js 12
             | `L_n_13 -> Ojs.int_to_js 13
             | `L_n_14 -> Ojs.int_to_js 14
             | `L_n_15 -> Ojs.int_to_js 15
             | `L_n_16 -> Ojs.int_to_js 16
             | `L_n_17 -> Ojs.int_to_js 17
             | `L_n_18 -> Ojs.int_to_js 18
             | `L_n_19 -> Ojs.int_to_js 19
             | `L_n_20 -> Ojs.int_to_js 20
             | `L_n_21 -> Ojs.int_to_js 21)
    let (get_maximumSignificantDigits :
      'tags this ->
        [ `L_n_1  | `L_n_2  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6  | 
          `L_n_7 
        | `L_n_8  | `L_n_9  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13 
        | `L_n_14  | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19 
        | `L_n_20  | `L_n_21 ])
      =
      fun (x5549 : 'tags this) ->
        let x5551 =
          Ojs.get_prop_ascii (this_to_js Obj.magic x5549)
            "maximumSignificantDigits" in
        match Ojs.int_of_js x5551 with
        | 1 -> `L_n_1
        | 2 -> `L_n_2
        | 3 -> `L_n_3
        | 4 -> `L_n_4
        | 5 -> `L_n_5
        | 6 -> `L_n_6
        | 7 -> `L_n_7
        | 8 -> `L_n_8
        | 9 -> `L_n_9
        | 10 -> `L_n_10
        | 11 -> `L_n_11
        | 12 -> `L_n_12
        | 13 -> `L_n_13
        | 14 -> `L_n_14
        | 15 -> `L_n_15
        | 16 -> `L_n_16
        | 17 -> `L_n_17
        | 18 -> `L_n_18
        | 19 -> `L_n_19
        | 20 -> `L_n_20
        | 21 -> `L_n_21
        | _ -> assert false
    let (set_maximumSignificantDigits :
      'tags this ->
        [ `L_n_1  | `L_n_2  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6  | 
          `L_n_7 
        | `L_n_8  | `L_n_9  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13 
        | `L_n_14  | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19 
        | `L_n_20  | `L_n_21 ] -> unit)
      =
      fun (x5552 : 'tags this) ->
        fun
          (x5553 :
            [ `L_n_1  | `L_n_2  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
            | `L_n_7  | `L_n_8  | `L_n_9  | `L_n_10  | `L_n_11  | `L_n_12 
            | `L_n_13  | `L_n_14  | `L_n_15  | `L_n_16  | `L_n_17  | 
              `L_n_18 
            | `L_n_19  | `L_n_20  | `L_n_21 ])
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5552)
            "maximumSignificantDigits"
            (match x5553 with
             | `L_n_1 -> Ojs.int_to_js 1
             | `L_n_2 -> Ojs.int_to_js 2
             | `L_n_3 -> Ojs.int_to_js 3
             | `L_n_4 -> Ojs.int_to_js 4
             | `L_n_5 -> Ojs.int_to_js 5
             | `L_n_6 -> Ojs.int_to_js 6
             | `L_n_7 -> Ojs.int_to_js 7
             | `L_n_8 -> Ojs.int_to_js 8
             | `L_n_9 -> Ojs.int_to_js 9
             | `L_n_10 -> Ojs.int_to_js 10
             | `L_n_11 -> Ojs.int_to_js 11
             | `L_n_12 -> Ojs.int_to_js 12
             | `L_n_13 -> Ojs.int_to_js 13
             | `L_n_14 -> Ojs.int_to_js 14
             | `L_n_15 -> Ojs.int_to_js 15
             | `L_n_16 -> Ojs.int_to_js 16
             | `L_n_17 -> Ojs.int_to_js 17
             | `L_n_18 -> Ojs.int_to_js 18
             | `L_n_19 -> Ojs.int_to_js 19
             | `L_n_20 -> Ojs.int_to_js 20
             | `L_n_21 -> Ojs.int_to_js 21)
    let (get_notation : 'tags this -> string) =
      fun (x5555 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5555) "notation")
    let (set_notation : 'tags this -> string -> unit) =
      fun (x5557 : 'tags this) ->
        fun (x5558 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5557) "notation"
            (Ojs.string_to_js x5558)
    let (get_compactDisplay : 'tags this -> string) =
      fun (x5560 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5560) "compactDisplay")
    let (set_compactDisplay : 'tags this -> string -> unit) =
      fun (x5562 : 'tags this) ->
        fun (x5563 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5562) "compactDisplay"
            (Ojs.string_to_js x5563)
    let cast_from = Obj.magic
  end
module BigInt =
  struct
    type t = [ `BigInt ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5566 : Ojs.t) -> t_of_js x5566
    and t_0_to_js : t_0 -> Ojs.t = fun (x5565 : t) -> t_to_js x5565
    type tags = [ `BigInt ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `BigInt ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5569 : Ojs.t) -> intf_of_js __tags_of_js x5569
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5567 : __tags intf) -> intf_to_js __tags_to_js x5567
    let (toString : 'tags this -> ?radix:float -> unit -> string) =
      fun (x5574 : 'tags this) ->
        fun ?radix:(x5571 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x5576 = this_to_js Obj.magic x5574 in
               Ojs.call (Ojs.get_prop_ascii x5576 "toString") "apply"
                 [|x5576;((let x5572 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x5571 with
                            | Some x5573 ->
                                ignore
                                  (Ojs.call x5572 "push"
                                     [|(Ojs.float_to_js x5573)|])
                            | None -> ());
                           x5572))|])
    let (toLocaleString :
      'tags this ->
        ?locales:string ->
          ?options:BigIntToLocaleStringOptions.t -> unit -> string)
      =
      fun (x5582 : 'tags this) ->
        fun ?locales:(x5577 : string option) ->
          fun ?options:(x5578 : BigIntToLocaleStringOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x5584 = this_to_js Obj.magic x5582 in
                 Ojs.call (Ojs.get_prop_ascii x5584 "toLocaleString") "apply"
                   [|x5584;((let x5579 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x5577 with
                              | Some x5581 ->
                                  ignore
                                    (Ojs.call x5579 "push"
                                       [|(Ojs.string_to_js x5581)|])
                              | None -> ());
                             (match x5578 with
                              | Some x5580 ->
                                  ignore
                                    (Ojs.call x5579 "push"
                                       [|(BigIntToLocaleStringOptions.t_to_js
                                            x5580)|])
                              | None -> ());
                             x5579))|])
    let (valueOf : 'tags this -> bigint) =
      fun (x5585 : 'tags this) ->
        bigint_of_js (Ojs.call (this_to_js Obj.magic x5585) "valueOf" [||])
    let (invoke : bigint or_boolean or_string or_number -> bigint) =
      fun (x5587 : bigint or_boolean or_string or_number) ->
        bigint_of_js
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "BigInt")
             [|(or_number_to_js
                  (fun (x5588 : bigint or_boolean or_string) ->
                     or_string_to_js
                       (fun (x5589 : bigint or_boolean) ->
                          or_boolean_to_js bigint_to_js x5589) x5588) x5587)|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "BigInt")
             "prototype")
    let (asIntN : bits:float -> int:bigint -> bigint) =
      fun ~bits:(x5591 : float) ->
        fun ~int:(x5592 : bigint) ->
          bigint_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "BigInt") "asIntN"
               [|(Ojs.float_to_js x5591);(bigint_to_js x5592)|])
    let (asUintN : bits:float -> int:bigint -> bigint) =
      fun ~bits:(x5593 : float) ->
        fun ~int:(x5594 : bigint) ->
          bigint_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "BigInt") "asUintN"
               [|(Ojs.float_to_js x5593);(bigint_to_js x5594)|])
    let cast_from = Obj.magic
  end
module Uint8Array =
  struct
    type t =
      [ `ArrayLike of float  | `IterableIterator of float 
      | `Iterator of (float * any * never or_undefined)  | `Uint8Array ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5596 : Ojs.t) -> t_of_js x5596
    and t_0_to_js : t_0 -> Ojs.t = fun (x5595 : t) -> t_to_js x5595
    type tags =
      [ `ArrayLike of float  | `IterableIterator of float 
      | `Iterator of (float * any * never or_undefined)  | `Uint8Array ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Uint8Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5599 : Ojs.t) -> intf_of_js __tags_of_js x5599
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5597 : __tags intf) -> intf_to_js __tags_to_js x5597
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x5605 : 'tags this) ->
        fun ~searchElement:(x5601 : float) ->
          fun ?fromIndex:(x5602 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x5607 = this_to_js Obj.magic x5605 in
                 Ojs.call (Ojs.get_prop_ascii x5607 "includes") "apply"
                   [|x5607;((let x5603 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5603 "push"
                                  [|(Ojs.float_to_js x5601)|]);
                             (match x5602 with
                              | Some x5604 ->
                                  ignore
                                    (Ojs.call x5603 "push"
                                       [|(Ojs.float_to_js x5604)|])
                              | None -> ());
                             x5603))|])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x5608 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5608)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x5610 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5610) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x5612 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5612) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x5614 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5614) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x5621 : 'tags this) ->
        fun ~target:(x5616 : float) ->
          fun ~start:(x5617 : float) ->
            fun ?end_:(x5618 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x5623 = this_to_js Obj.magic x5621 in
                   Ojs.call (Ojs.get_prop_ascii x5623 "copyWithin") "apply"
                     [|x5623;((let x5619 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5619 "push"
                                    [|(Ojs.float_to_js x5616)|]);
                               ignore
                                 (Ojs.call x5619 "push"
                                    [|(Ojs.float_to_js x5617)|]);
                               (match x5618 with
                                | Some x5620 ->
                                    ignore
                                      (Ojs.call x5619 "push"
                                         [|(Ojs.float_to_js x5620)|])
                                | None -> ());
                               x5619))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x5632 : 'tags this) ->
        fun
          ~predicate:(x5625 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x5626 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x5634 = this_to_js Obj.magic x5632 in
                 Ojs.call (Ojs.get_prop_ascii x5634 "every") "apply"
                   [|x5634;((let x5627 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5627 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5629 : Ojs.t) ->
                                          fun (x5630 : Ojs.t) ->
                                            fun (x5631 : Ojs.t) ->
                                              unknown_to_js
                                                (x5625
                                                   ~value:(Ojs.float_of_js
                                                             x5629)
                                                   ~index:(Ojs.float_of_js
                                                             x5630)
                                                   ~array:(t_of_js x5631))))|]);
                             (match x5626 with
                              | Some x5628 ->
                                  ignore
                                    (Ojs.call x5627 "push"
                                       [|(any_to_js x5628)|])
                              | None -> ());
                             x5627))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x5641 : 'tags this) ->
        fun ~value:(x5635 : float) ->
          fun ?start:(x5636 : float option) ->
            fun ?end_:(x5637 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x5643 = this_to_js Obj.magic x5641 in
                   Ojs.call (Ojs.get_prop_ascii x5643 "fill") "apply"
                     [|x5643;((let x5638 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5638 "push"
                                    [|(Ojs.float_to_js x5635)|]);
                               (match x5636 with
                                | Some x5640 ->
                                    ignore
                                      (Ojs.call x5638 "push"
                                         [|(Ojs.float_to_js x5640)|])
                                | None -> ());
                               (match x5637 with
                                | Some x5639 ->
                                    ignore
                                      (Ojs.call x5638 "push"
                                         [|(Ojs.float_to_js x5639)|])
                                | None -> ());
                               x5638))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x5652 : 'tags this) ->
        fun ~predicate:(x5645 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x5646 : any option) ->
            fun () ->
              t_of_js
                (let x5654 = this_to_js Obj.magic x5652 in
                 Ojs.call (Ojs.get_prop_ascii x5654 "filter") "apply"
                   [|x5654;((let x5647 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5647 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5649 : Ojs.t) ->
                                          fun (x5650 : Ojs.t) ->
                                            fun (x5651 : Ojs.t) ->
                                              any_to_js
                                                (x5645
                                                   ~value:(Ojs.float_of_js
                                                             x5649)
                                                   ~index:(Ojs.float_of_js
                                                             x5650)
                                                   ~array:(t_of_js x5651))))|]);
                             (match x5646 with
                              | Some x5648 ->
                                  ignore
                                    (Ojs.call x5647 "push"
                                       [|(any_to_js x5648)|])
                              | None -> ());
                             x5647))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x5662 : 'tags this) ->
        fun ~predicate:(x5655 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x5656 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x5664 = this_to_js Obj.magic x5662 in
                 Ojs.call (Ojs.get_prop_ascii x5664 "find") "apply"
                   [|x5664;((let x5657 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5657 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5659 : Ojs.t) ->
                                          fun (x5660 : Ojs.t) ->
                                            fun (x5661 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x5655
                                                   ~value:(Ojs.float_of_js
                                                             x5659)
                                                   ~index:(Ojs.float_of_js
                                                             x5660)
                                                   ~obj:(t_of_js x5661))))|]);
                             (match x5656 with
                              | Some x5658 ->
                                  ignore
                                    (Ojs.call x5657 "push"
                                       [|(any_to_js x5658)|])
                              | None -> ());
                             x5657))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x5673 : 'tags this) ->
        fun ~predicate:(x5666 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x5667 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x5675 = this_to_js Obj.magic x5673 in
                 Ojs.call (Ojs.get_prop_ascii x5675 "findIndex") "apply"
                   [|x5675;((let x5668 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5668 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5670 : Ojs.t) ->
                                          fun (x5671 : Ojs.t) ->
                                            fun (x5672 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x5666
                                                   ~value:(Ojs.float_of_js
                                                             x5670)
                                                   ~index:(Ojs.float_of_js
                                                             x5671)
                                                   ~obj:(t_of_js x5672))))|]);
                             (match x5667 with
                              | Some x5669 ->
                                  ignore
                                    (Ojs.call x5668 "push"
                                       [|(any_to_js x5669)|])
                              | None -> ());
                             x5668))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x5683 : 'tags this) ->
        fun
          ~callbackfn:(x5676 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x5677 : any option) ->
            fun () ->
              ignore
                (let x5685 = this_to_js Obj.magic x5683 in
                 Ojs.call (Ojs.get_prop_ascii x5685 "forEach") "apply"
                   [|x5685;((let x5678 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5678 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5680 : Ojs.t) ->
                                          fun (x5681 : Ojs.t) ->
                                            fun (x5682 : Ojs.t) ->
                                              x5676
                                                ~value:(Ojs.float_of_js x5680)
                                                ~index:(Ojs.float_of_js x5681)
                                                ~array:(t_of_js x5682)))|]);
                             (match x5677 with
                              | Some x5679 ->
                                  ignore
                                    (Ojs.call x5678 "push"
                                       [|(any_to_js x5679)|])
                              | None -> ());
                             x5678))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x5690 : 'tags this) ->
        fun ~searchElement:(x5686 : float) ->
          fun ?fromIndex:(x5687 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x5692 = this_to_js Obj.magic x5690 in
                 Ojs.call (Ojs.get_prop_ascii x5692 "indexOf") "apply"
                   [|x5692;((let x5688 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5688 "push"
                                  [|(Ojs.float_to_js x5686)|]);
                             (match x5687 with
                              | Some x5689 ->
                                  ignore
                                    (Ojs.call x5688 "push"
                                       [|(Ojs.float_to_js x5689)|])
                              | None -> ());
                             x5688))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x5696 : 'tags this) ->
        fun ?separator:(x5693 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x5698 = this_to_js Obj.magic x5696 in
               Ojs.call (Ojs.get_prop_ascii x5698 "join") "apply"
                 [|x5698;((let x5694 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x5693 with
                            | Some x5695 ->
                                ignore
                                  (Ojs.call x5694 "push"
                                     [|(Ojs.string_to_js x5695)|])
                            | None -> ());
                           x5694))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x5703 : 'tags this) ->
        fun ~searchElement:(x5699 : float) ->
          fun ?fromIndex:(x5700 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x5705 = this_to_js Obj.magic x5703 in
                 Ojs.call (Ojs.get_prop_ascii x5705 "lastIndexOf") "apply"
                   [|x5705;((let x5701 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5701 "push"
                                  [|(Ojs.float_to_js x5699)|]);
                             (match x5700 with
                              | Some x5702 ->
                                  ignore
                                    (Ojs.call x5701 "push"
                                       [|(Ojs.float_to_js x5702)|])
                              | None -> ());
                             x5701))|])
    let (get_length : 'tags this -> float) =
      fun (x5706 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5706) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x5715 : 'tags this) ->
        fun
          ~callbackfn:(x5708 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x5709 : any option) ->
            fun () ->
              t_of_js
                (let x5717 = this_to_js Obj.magic x5715 in
                 Ojs.call (Ojs.get_prop_ascii x5717 "map") "apply"
                   [|x5717;((let x5710 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5710 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5712 : Ojs.t) ->
                                          fun (x5713 : Ojs.t) ->
                                            fun (x5714 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x5708
                                                   ~value:(Ojs.float_of_js
                                                             x5712)
                                                   ~index:(Ojs.float_of_js
                                                             x5713)
                                                   ~array:(t_of_js x5714))))|]);
                             (match x5709 with
                              | Some x5711 ->
                                  ignore
                                    (Ojs.call x5710 "push"
                                       [|(any_to_js x5711)|])
                              | None -> ());
                             x5710))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x5723 : 'tags this) ->
        fun
          ~callbackfn:(x5718 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x5723) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x5719 : Ojs.t) ->
                       fun (x5720 : Ojs.t) ->
                         fun (x5721 : Ojs.t) ->
                           fun (x5722 : Ojs.t) ->
                             Ojs.float_to_js
                               (x5718 ~previousValue:(Ojs.float_of_js x5719)
                                  ~currentValue:(Ojs.float_of_js x5720)
                                  ~currentIndex:(Ojs.float_of_js x5721)
                                  ~array:(t_of_js x5722))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x5731 : 'tags this) ->
        fun
          ~callbackfn:(x5725 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x5730 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x5731) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x5726 : Ojs.t) ->
                         fun (x5727 : Ojs.t) ->
                           fun (x5728 : Ojs.t) ->
                             fun (x5729 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x5725
                                    ~previousValue:(Ojs.float_of_js x5726)
                                    ~currentValue:(Ojs.float_of_js x5727)
                                    ~currentIndex:(Ojs.float_of_js x5728)
                                    ~array:(t_of_js x5729))));(Ojs.float_to_js
                                                                 x5730)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x5739 : 'tags this) ->
        fun
          ~callbackfn:(x5733 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x5738 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x5739) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x5734 : Ojs.t) ->
                         fun (x5735 : Ojs.t) ->
                           fun (x5736 : Ojs.t) ->
                             fun (x5737 : Ojs.t) ->
                               Obj.magic
                                 (x5733 ~previousValue:(Obj.magic x5734)
                                    ~currentValue:(Ojs.float_of_js x5735)
                                    ~currentIndex:(Ojs.float_of_js x5736)
                                    ~array:(t_of_js x5737))));(Obj.magic
                                                                 x5738)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x5746 : 'tags this) ->
        fun
          ~callbackfn:(x5741 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x5746) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x5742 : Ojs.t) ->
                       fun (x5743 : Ojs.t) ->
                         fun (x5744 : Ojs.t) ->
                           fun (x5745 : Ojs.t) ->
                             Ojs.float_to_js
                               (x5741 ~previousValue:(Ojs.float_of_js x5742)
                                  ~currentValue:(Ojs.float_of_js x5743)
                                  ~currentIndex:(Ojs.float_of_js x5744)
                                  ~array:(t_of_js x5745))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x5754 : 'tags this) ->
        fun
          ~callbackfn:(x5748 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x5753 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x5754) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x5749 : Ojs.t) ->
                         fun (x5750 : Ojs.t) ->
                           fun (x5751 : Ojs.t) ->
                             fun (x5752 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x5748
                                    ~previousValue:(Ojs.float_of_js x5749)
                                    ~currentValue:(Ojs.float_of_js x5750)
                                    ~currentIndex:(Ojs.float_of_js x5751)
                                    ~array:(t_of_js x5752))));(Ojs.float_to_js
                                                                 x5753)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x5762 : 'tags this) ->
        fun
          ~callbackfn:(x5756 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x5761 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x5762) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x5757 : Ojs.t) ->
                         fun (x5758 : Ojs.t) ->
                           fun (x5759 : Ojs.t) ->
                             fun (x5760 : Ojs.t) ->
                               Obj.magic
                                 (x5756 ~previousValue:(Obj.magic x5757)
                                    ~currentValue:(Ojs.float_of_js x5758)
                                    ~currentIndex:(Ojs.float_of_js x5759)
                                    ~array:(t_of_js x5760))));(Obj.magic
                                                                 x5761)|])
    let (reverse : 'tags this -> t) =
      fun (x5764 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x5764) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x5771 : 'tags this) ->
        fun ~array:(x5766 : float ArrayLike.t) ->
          fun ?offset:(x5767 : float option) ->
            fun () ->
              ignore
                (let x5773 = this_to_js Obj.magic x5771 in
                 Ojs.call (Ojs.get_prop_ascii x5773 "set") "apply"
                   [|x5773;((let x5768 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5768 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x5766)|]);
                             (match x5767 with
                              | Some x5769 ->
                                  ignore
                                    (Ojs.call x5768 "push"
                                       [|(Ojs.float_to_js x5769)|])
                              | None -> ());
                             x5768))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x5779 : 'tags this) ->
        fun ?start:(x5774 : float option) ->
          fun ?end_:(x5775 : float option) ->
            fun () ->
              t_of_js
                (let x5781 = this_to_js Obj.magic x5779 in
                 Ojs.call (Ojs.get_prop_ascii x5781 "slice") "apply"
                   [|x5781;((let x5776 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x5774 with
                              | Some x5778 ->
                                  ignore
                                    (Ojs.call x5776 "push"
                                       [|(Ojs.float_to_js x5778)|])
                              | None -> ());
                             (match x5775 with
                              | Some x5777 ->
                                  ignore
                                    (Ojs.call x5776 "push"
                                       [|(Ojs.float_to_js x5777)|])
                              | None -> ());
                             x5776))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x5789 : 'tags this) ->
        fun
          ~predicate:(x5782 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x5783 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x5791 = this_to_js Obj.magic x5789 in
                 Ojs.call (Ojs.get_prop_ascii x5791 "some") "apply"
                   [|x5791;((let x5784 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5784 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5786 : Ojs.t) ->
                                          fun (x5787 : Ojs.t) ->
                                            fun (x5788 : Ojs.t) ->
                                              unknown_to_js
                                                (x5782
                                                   ~value:(Ojs.float_of_js
                                                             x5786)
                                                   ~index:(Ojs.float_of_js
                                                             x5787)
                                                   ~array:(t_of_js x5788))))|]);
                             (match x5783 with
                              | Some x5785 ->
                                  ignore
                                    (Ojs.call x5784 "push"
                                       [|(any_to_js x5785)|])
                              | None -> ());
                             x5784))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x5797 : 'tags this) ->
        fun ?compareFn:(x5792 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x5799 = this_to_js Obj.magic x5797 in
               Ojs.call (Ojs.get_prop_ascii x5799 "sort") "apply"
                 [|x5799;((let x5793 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x5792 with
                            | Some x5794 ->
                                ignore
                                  (Ojs.call x5793 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x5795 : Ojs.t) ->
                                             fun (x5796 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x5794
                                                    ~a:(Ojs.float_of_js x5795)
                                                    ~b:(Ojs.float_of_js x5796))))|])
                            | None -> ());
                           x5793))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x5806 : 'tags this) ->
        fun ?begin_:(x5801 : float option) ->
          fun ?end_:(x5802 : float option) ->
            fun () ->
              t_of_js
                (let x5808 = this_to_js Obj.magic x5806 in
                 Ojs.call (Ojs.get_prop_ascii x5808 "subarray") "apply"
                   [|x5808;((let x5803 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x5801 with
                              | Some x5805 ->
                                  ignore
                                    (Ojs.call x5803 "push"
                                       [|(Ojs.float_to_js x5805)|])
                              | None -> ());
                             (match x5802 with
                              | Some x5804 ->
                                  ignore
                                    (Ojs.call x5803 "push"
                                       [|(Ojs.float_to_js x5804)|])
                              | None -> ());
                             x5803))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x5809 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x5809) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x5811 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x5811) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x5813 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x5813) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x5815 : 'tags this) ->
        fun (x5817 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x5815)
               (Ojs.float_to_js x5817))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x5818 : 'tags this) ->
        fun (x5820 : float) ->
          fun (x5821 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x5818) (Ojs.float_to_js x5820)
              (Ojs.float_to_js x5821)
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x5822 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x5824 : Ojs.t) ->
             let x5825 = x5824 in
             ((Ojs.float_of_js (Ojs.array_get x5825 0)),
               (Ojs.float_of_js (Ojs.array_get x5825 1))))
          (Ojs.call (this_to_js Obj.magic x5822) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x5826 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x5826) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x5829 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x5829) "values" [||])
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8Array") [||])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             "prototype")
    let (create' : float -> t) =
      fun (x5832 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             [|(Ojs.float_to_js x5832)|])
    let (create'' : (ArrayBufferLike.t, float ArrayLike.t) union2 -> t) =
      fun (x5833 : (ArrayBufferLike.t, float ArrayLike.t) union2) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             [|(union2_to_js ArrayBufferLike.t_to_js
                  (fun (x5835 : float ArrayLike.t) ->
                     ArrayLike.t_to_js Ojs.float_to_js x5835) x5833)|])
    let (create''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x5837 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x5838 : float option) ->
          fun ?length:(x5839 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Uint8Array")
                   (let x5840 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x5840 "push"
                         [|(ArrayBufferLike.t_to_js x5837)|]);
                    (match x5838 with
                     | Some x5842 ->
                         ignore
                           (Ojs.call x5840 "push" [|(Ojs.float_to_js x5842)|])
                     | None -> ());
                    (match x5839 with
                     | Some x5841 ->
                         ignore
                           (Ojs.call x5840 "push" [|(Ojs.float_to_js x5841)|])
                     | None -> ());
                    x5840))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x5843 : float list) ->
        t_of_js
          (let x5846 = Ojs.get_prop_ascii Ojs.global "Uint8Array" in
           Ojs.call (Ojs.get_prop_ascii x5846 "of") "apply"
             [|x5846;((let x5844 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x5845 : float) ->
                            ignore
                              (Ojs.call x5844 "push"
                                 [|(Ojs.float_to_js x5845)|])) x5843;
                       x5844))|])
    let (from : float ArrayLike.t -> t) =
      fun (x5847 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Uint8Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x5847)|])
    let (from' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x5849 : 'T ArrayLike.t) ->
        fun ~mapfn:(x5850 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x5851 : any option) ->
            fun () ->
              t_of_js
                (let x5857 = Ojs.get_prop_ascii Ojs.global "Uint8Array" in
                 Ojs.call (Ojs.get_prop_ascii x5857 "from") "apply"
                   [|x5857;((let x5852 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5852 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x5849)|]);
                             ignore
                               (Ojs.call x5852 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x5854 : Ojs.t) ->
                                          fun (x5855 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x5850 ~v:(Obj.magic x5854)
                                                 ~k:(Ojs.float_of_js x5855))))|]);
                             (match x5851 with
                              | Some x5853 ->
                                  ignore
                                    (Ojs.call x5852 "push"
                                       [|(any_to_js x5853)|])
                              | None -> ());
                             x5852))|])
    let (create'''' : float Iterable.t -> t) =
      fun (x5858 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             [|(Iterable.t_to_js Ojs.float_to_js x5858)|])
    let (from'' :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x5860 : float Iterable.t) ->
        fun ?mapfn:(x5861 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x5862 : any option) ->
            fun () ->
              t_of_js
                (let x5869 = Ojs.get_prop_ascii Ojs.global "Uint8Array" in
                 Ojs.call (Ojs.get_prop_ascii x5869 "from") "apply"
                   [|x5869;((let x5863 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5863 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x5860)|]);
                             (match x5861 with
                              | Some x5865 ->
                                  ignore
                                    (Ojs.call x5863 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x5866 : Ojs.t) ->
                                               fun (x5867 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x5865
                                                      ~v:(Ojs.float_of_js
                                                            x5866)
                                                      ~k:(Ojs.float_of_js
                                                            x5867))))|])
                              | None -> ());
                             (match x5862 with
                              | Some x5864 ->
                                  ignore
                                    (Ojs.call x5863 "push"
                                       [|(any_to_js x5864)|])
                              | None -> ());
                             x5863))|])
    let cast_from = Obj.magic
  end
module Uint32Array =
  struct
    type t =
      [ `ArrayLike of float  | `IterableIterator of float 
      | `Iterator of (float * any * never or_undefined)  | `Uint32Array ]
        intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5871 : Ojs.t) -> t_of_js x5871
    and t_0_to_js : t_0 -> Ojs.t = fun (x5870 : t) -> t_to_js x5870
    type tags =
      [ `ArrayLike of float  | `IterableIterator of float 
      | `Iterator of (float * any * never or_undefined)  | `Uint32Array ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Uint32Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5874 : Ojs.t) -> intf_of_js __tags_of_js x5874
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5872 : __tags intf) -> intf_to_js __tags_to_js x5872
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x5880 : 'tags this) ->
        fun ~searchElement:(x5876 : float) ->
          fun ?fromIndex:(x5877 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x5882 = this_to_js Obj.magic x5880 in
                 Ojs.call (Ojs.get_prop_ascii x5882 "includes") "apply"
                   [|x5882;((let x5878 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5878 "push"
                                  [|(Ojs.float_to_js x5876)|]);
                             (match x5877 with
                              | Some x5879 ->
                                  ignore
                                    (Ojs.call x5878 "push"
                                       [|(Ojs.float_to_js x5879)|])
                              | None -> ());
                             x5878))|])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x5883 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5883)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x5885 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5885) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x5887 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5887) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x5889 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5889) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x5896 : 'tags this) ->
        fun ~target:(x5891 : float) ->
          fun ~start:(x5892 : float) ->
            fun ?end_:(x5893 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x5898 = this_to_js Obj.magic x5896 in
                   Ojs.call (Ojs.get_prop_ascii x5898 "copyWithin") "apply"
                     [|x5898;((let x5894 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5894 "push"
                                    [|(Ojs.float_to_js x5891)|]);
                               ignore
                                 (Ojs.call x5894 "push"
                                    [|(Ojs.float_to_js x5892)|]);
                               (match x5893 with
                                | Some x5895 ->
                                    ignore
                                      (Ojs.call x5894 "push"
                                         [|(Ojs.float_to_js x5895)|])
                                | None -> ());
                               x5894))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x5907 : 'tags this) ->
        fun
          ~predicate:(x5900 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x5901 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x5909 = this_to_js Obj.magic x5907 in
                 Ojs.call (Ojs.get_prop_ascii x5909 "every") "apply"
                   [|x5909;((let x5902 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5902 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5904 : Ojs.t) ->
                                          fun (x5905 : Ojs.t) ->
                                            fun (x5906 : Ojs.t) ->
                                              unknown_to_js
                                                (x5900
                                                   ~value:(Ojs.float_of_js
                                                             x5904)
                                                   ~index:(Ojs.float_of_js
                                                             x5905)
                                                   ~array:(t_of_js x5906))))|]);
                             (match x5901 with
                              | Some x5903 ->
                                  ignore
                                    (Ojs.call x5902 "push"
                                       [|(any_to_js x5903)|])
                              | None -> ());
                             x5902))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x5916 : 'tags this) ->
        fun ~value:(x5910 : float) ->
          fun ?start:(x5911 : float option) ->
            fun ?end_:(x5912 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x5918 = this_to_js Obj.magic x5916 in
                   Ojs.call (Ojs.get_prop_ascii x5918 "fill") "apply"
                     [|x5918;((let x5913 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5913 "push"
                                    [|(Ojs.float_to_js x5910)|]);
                               (match x5911 with
                                | Some x5915 ->
                                    ignore
                                      (Ojs.call x5913 "push"
                                         [|(Ojs.float_to_js x5915)|])
                                | None -> ());
                               (match x5912 with
                                | Some x5914 ->
                                    ignore
                                      (Ojs.call x5913 "push"
                                         [|(Ojs.float_to_js x5914)|])
                                | None -> ());
                               x5913))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x5927 : 'tags this) ->
        fun ~predicate:(x5920 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x5921 : any option) ->
            fun () ->
              t_of_js
                (let x5929 = this_to_js Obj.magic x5927 in
                 Ojs.call (Ojs.get_prop_ascii x5929 "filter") "apply"
                   [|x5929;((let x5922 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5922 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5924 : Ojs.t) ->
                                          fun (x5925 : Ojs.t) ->
                                            fun (x5926 : Ojs.t) ->
                                              any_to_js
                                                (x5920
                                                   ~value:(Ojs.float_of_js
                                                             x5924)
                                                   ~index:(Ojs.float_of_js
                                                             x5925)
                                                   ~array:(t_of_js x5926))))|]);
                             (match x5921 with
                              | Some x5923 ->
                                  ignore
                                    (Ojs.call x5922 "push"
                                       [|(any_to_js x5923)|])
                              | None -> ());
                             x5922))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x5937 : 'tags this) ->
        fun ~predicate:(x5930 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x5931 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x5939 = this_to_js Obj.magic x5937 in
                 Ojs.call (Ojs.get_prop_ascii x5939 "find") "apply"
                   [|x5939;((let x5932 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5932 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5934 : Ojs.t) ->
                                          fun (x5935 : Ojs.t) ->
                                            fun (x5936 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x5930
                                                   ~value:(Ojs.float_of_js
                                                             x5934)
                                                   ~index:(Ojs.float_of_js
                                                             x5935)
                                                   ~obj:(t_of_js x5936))))|]);
                             (match x5931 with
                              | Some x5933 ->
                                  ignore
                                    (Ojs.call x5932 "push"
                                       [|(any_to_js x5933)|])
                              | None -> ());
                             x5932))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x5948 : 'tags this) ->
        fun ~predicate:(x5941 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x5942 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x5950 = this_to_js Obj.magic x5948 in
                 Ojs.call (Ojs.get_prop_ascii x5950 "findIndex") "apply"
                   [|x5950;((let x5943 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5943 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5945 : Ojs.t) ->
                                          fun (x5946 : Ojs.t) ->
                                            fun (x5947 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x5941
                                                   ~value:(Ojs.float_of_js
                                                             x5945)
                                                   ~index:(Ojs.float_of_js
                                                             x5946)
                                                   ~obj:(t_of_js x5947))))|]);
                             (match x5942 with
                              | Some x5944 ->
                                  ignore
                                    (Ojs.call x5943 "push"
                                       [|(any_to_js x5944)|])
                              | None -> ());
                             x5943))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x5958 : 'tags this) ->
        fun
          ~callbackfn:(x5951 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x5952 : any option) ->
            fun () ->
              ignore
                (let x5960 = this_to_js Obj.magic x5958 in
                 Ojs.call (Ojs.get_prop_ascii x5960 "forEach") "apply"
                   [|x5960;((let x5953 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5953 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5955 : Ojs.t) ->
                                          fun (x5956 : Ojs.t) ->
                                            fun (x5957 : Ojs.t) ->
                                              x5951
                                                ~value:(Ojs.float_of_js x5955)
                                                ~index:(Ojs.float_of_js x5956)
                                                ~array:(t_of_js x5957)))|]);
                             (match x5952 with
                              | Some x5954 ->
                                  ignore
                                    (Ojs.call x5953 "push"
                                       [|(any_to_js x5954)|])
                              | None -> ());
                             x5953))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x5965 : 'tags this) ->
        fun ~searchElement:(x5961 : float) ->
          fun ?fromIndex:(x5962 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x5967 = this_to_js Obj.magic x5965 in
                 Ojs.call (Ojs.get_prop_ascii x5967 "indexOf") "apply"
                   [|x5967;((let x5963 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5963 "push"
                                  [|(Ojs.float_to_js x5961)|]);
                             (match x5962 with
                              | Some x5964 ->
                                  ignore
                                    (Ojs.call x5963 "push"
                                       [|(Ojs.float_to_js x5964)|])
                              | None -> ());
                             x5963))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x5971 : 'tags this) ->
        fun ?separator:(x5968 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x5973 = this_to_js Obj.magic x5971 in
               Ojs.call (Ojs.get_prop_ascii x5973 "join") "apply"
                 [|x5973;((let x5969 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x5968 with
                            | Some x5970 ->
                                ignore
                                  (Ojs.call x5969 "push"
                                     [|(Ojs.string_to_js x5970)|])
                            | None -> ());
                           x5969))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x5978 : 'tags this) ->
        fun ~searchElement:(x5974 : float) ->
          fun ?fromIndex:(x5975 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x5980 = this_to_js Obj.magic x5978 in
                 Ojs.call (Ojs.get_prop_ascii x5980 "lastIndexOf") "apply"
                   [|x5980;((let x5976 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5976 "push"
                                  [|(Ojs.float_to_js x5974)|]);
                             (match x5975 with
                              | Some x5977 ->
                                  ignore
                                    (Ojs.call x5976 "push"
                                       [|(Ojs.float_to_js x5977)|])
                              | None -> ());
                             x5976))|])
    let (get_length : 'tags this -> float) =
      fun (x5981 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5981) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x5990 : 'tags this) ->
        fun
          ~callbackfn:(x5983 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x5984 : any option) ->
            fun () ->
              t_of_js
                (let x5992 = this_to_js Obj.magic x5990 in
                 Ojs.call (Ojs.get_prop_ascii x5992 "map") "apply"
                   [|x5992;((let x5985 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5985 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5987 : Ojs.t) ->
                                          fun (x5988 : Ojs.t) ->
                                            fun (x5989 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x5983
                                                   ~value:(Ojs.float_of_js
                                                             x5987)
                                                   ~index:(Ojs.float_of_js
                                                             x5988)
                                                   ~array:(t_of_js x5989))))|]);
                             (match x5984 with
                              | Some x5986 ->
                                  ignore
                                    (Ojs.call x5985 "push"
                                       [|(any_to_js x5986)|])
                              | None -> ());
                             x5985))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x5998 : 'tags this) ->
        fun
          ~callbackfn:(x5993 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x5998) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x5994 : Ojs.t) ->
                       fun (x5995 : Ojs.t) ->
                         fun (x5996 : Ojs.t) ->
                           fun (x5997 : Ojs.t) ->
                             Ojs.float_to_js
                               (x5993 ~previousValue:(Ojs.float_of_js x5994)
                                  ~currentValue:(Ojs.float_of_js x5995)
                                  ~currentIndex:(Ojs.float_of_js x5996)
                                  ~array:(t_of_js x5997))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x6006 : 'tags this) ->
        fun
          ~callbackfn:(x6000 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x6005 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x6006) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x6001 : Ojs.t) ->
                         fun (x6002 : Ojs.t) ->
                           fun (x6003 : Ojs.t) ->
                             fun (x6004 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x6000
                                    ~previousValue:(Ojs.float_of_js x6001)
                                    ~currentValue:(Ojs.float_of_js x6002)
                                    ~currentIndex:(Ojs.float_of_js x6003)
                                    ~array:(t_of_js x6004))));(Ojs.float_to_js
                                                                 x6005)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x6014 : 'tags this) ->
        fun
          ~callbackfn:(x6008 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x6013 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x6014) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x6009 : Ojs.t) ->
                         fun (x6010 : Ojs.t) ->
                           fun (x6011 : Ojs.t) ->
                             fun (x6012 : Ojs.t) ->
                               Obj.magic
                                 (x6008 ~previousValue:(Obj.magic x6009)
                                    ~currentValue:(Ojs.float_of_js x6010)
                                    ~currentIndex:(Ojs.float_of_js x6011)
                                    ~array:(t_of_js x6012))));(Obj.magic
                                                                 x6013)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x6021 : 'tags this) ->
        fun
          ~callbackfn:(x6016 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6021) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x6017 : Ojs.t) ->
                       fun (x6018 : Ojs.t) ->
                         fun (x6019 : Ojs.t) ->
                           fun (x6020 : Ojs.t) ->
                             Ojs.float_to_js
                               (x6016 ~previousValue:(Ojs.float_of_js x6017)
                                  ~currentValue:(Ojs.float_of_js x6018)
                                  ~currentIndex:(Ojs.float_of_js x6019)
                                  ~array:(t_of_js x6020))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x6029 : 'tags this) ->
        fun
          ~callbackfn:(x6023 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x6028 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x6029) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x6024 : Ojs.t) ->
                         fun (x6025 : Ojs.t) ->
                           fun (x6026 : Ojs.t) ->
                             fun (x6027 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x6023
                                    ~previousValue:(Ojs.float_of_js x6024)
                                    ~currentValue:(Ojs.float_of_js x6025)
                                    ~currentIndex:(Ojs.float_of_js x6026)
                                    ~array:(t_of_js x6027))));(Ojs.float_to_js
                                                                 x6028)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x6037 : 'tags this) ->
        fun
          ~callbackfn:(x6031 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x6036 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x6037) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x6032 : Ojs.t) ->
                         fun (x6033 : Ojs.t) ->
                           fun (x6034 : Ojs.t) ->
                             fun (x6035 : Ojs.t) ->
                               Obj.magic
                                 (x6031 ~previousValue:(Obj.magic x6032)
                                    ~currentValue:(Ojs.float_of_js x6033)
                                    ~currentIndex:(Ojs.float_of_js x6034)
                                    ~array:(t_of_js x6035))));(Obj.magic
                                                                 x6036)|])
    let (reverse : 'tags this -> t) =
      fun (x6039 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x6039) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x6046 : 'tags this) ->
        fun ~array:(x6041 : float ArrayLike.t) ->
          fun ?offset:(x6042 : float option) ->
            fun () ->
              ignore
                (let x6048 = this_to_js Obj.magic x6046 in
                 Ojs.call (Ojs.get_prop_ascii x6048 "set") "apply"
                   [|x6048;((let x6043 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6043 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x6041)|]);
                             (match x6042 with
                              | Some x6044 ->
                                  ignore
                                    (Ojs.call x6043 "push"
                                       [|(Ojs.float_to_js x6044)|])
                              | None -> ());
                             x6043))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x6054 : 'tags this) ->
        fun ?start:(x6049 : float option) ->
          fun ?end_:(x6050 : float option) ->
            fun () ->
              t_of_js
                (let x6056 = this_to_js Obj.magic x6054 in
                 Ojs.call (Ojs.get_prop_ascii x6056 "slice") "apply"
                   [|x6056;((let x6051 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x6049 with
                              | Some x6053 ->
                                  ignore
                                    (Ojs.call x6051 "push"
                                       [|(Ojs.float_to_js x6053)|])
                              | None -> ());
                             (match x6050 with
                              | Some x6052 ->
                                  ignore
                                    (Ojs.call x6051 "push"
                                       [|(Ojs.float_to_js x6052)|])
                              | None -> ());
                             x6051))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x6064 : 'tags this) ->
        fun
          ~predicate:(x6057 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x6058 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6066 = this_to_js Obj.magic x6064 in
                 Ojs.call (Ojs.get_prop_ascii x6066 "some") "apply"
                   [|x6066;((let x6059 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6059 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6061 : Ojs.t) ->
                                          fun (x6062 : Ojs.t) ->
                                            fun (x6063 : Ojs.t) ->
                                              unknown_to_js
                                                (x6057
                                                   ~value:(Ojs.float_of_js
                                                             x6061)
                                                   ~index:(Ojs.float_of_js
                                                             x6062)
                                                   ~array:(t_of_js x6063))))|]);
                             (match x6058 with
                              | Some x6060 ->
                                  ignore
                                    (Ojs.call x6059 "push"
                                       [|(any_to_js x6060)|])
                              | None -> ());
                             x6059))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x6072 : 'tags this) ->
        fun ?compareFn:(x6067 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x6074 = this_to_js Obj.magic x6072 in
               Ojs.call (Ojs.get_prop_ascii x6074 "sort") "apply"
                 [|x6074;((let x6068 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6067 with
                            | Some x6069 ->
                                ignore
                                  (Ojs.call x6068 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x6070 : Ojs.t) ->
                                             fun (x6071 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x6069
                                                    ~a:(Ojs.float_of_js x6070)
                                                    ~b:(Ojs.float_of_js x6071))))|])
                            | None -> ());
                           x6068))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x6081 : 'tags this) ->
        fun ?begin_:(x6076 : float option) ->
          fun ?end_:(x6077 : float option) ->
            fun () ->
              t_of_js
                (let x6083 = this_to_js Obj.magic x6081 in
                 Ojs.call (Ojs.get_prop_ascii x6083 "subarray") "apply"
                   [|x6083;((let x6078 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x6076 with
                              | Some x6080 ->
                                  ignore
                                    (Ojs.call x6078 "push"
                                       [|(Ojs.float_to_js x6080)|])
                              | None -> ());
                             (match x6077 with
                              | Some x6079 ->
                                  ignore
                                    (Ojs.call x6078 "push"
                                       [|(Ojs.float_to_js x6079)|])
                              | None -> ());
                             x6078))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x6084 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x6084) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x6086 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x6086) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x6088 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x6088) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x6090 : 'tags this) ->
        fun (x6092 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x6090)
               (Ojs.float_to_js x6092))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x6093 : 'tags this) ->
        fun (x6095 : float) ->
          fun (x6096 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x6093) (Ojs.float_to_js x6095)
              (Ojs.float_to_js x6096)
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x6097 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x6099 : Ojs.t) ->
             let x6100 = x6099 in
             ((Ojs.float_of_js (Ojs.array_get x6100 0)),
               (Ojs.float_of_js (Ojs.array_get x6100 1))))
          (Ojs.call (this_to_js Obj.magic x6097) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x6101 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x6101) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x6104 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x6104) "values" [||])
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint32Array") [||])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             "prototype")
    let (create' : float -> t) =
      fun (x6107 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             [|(Ojs.float_to_js x6107)|])
    let (create'' : (ArrayBufferLike.t, float ArrayLike.t) union2 -> t) =
      fun (x6108 : (ArrayBufferLike.t, float ArrayLike.t) union2) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             [|(union2_to_js ArrayBufferLike.t_to_js
                  (fun (x6110 : float ArrayLike.t) ->
                     ArrayLike.t_to_js Ojs.float_to_js x6110) x6108)|])
    let (create''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x6112 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x6113 : float option) ->
          fun ?length:(x6114 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Uint32Array")
                   (let x6115 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x6115 "push"
                         [|(ArrayBufferLike.t_to_js x6112)|]);
                    (match x6113 with
                     | Some x6117 ->
                         ignore
                           (Ojs.call x6115 "push" [|(Ojs.float_to_js x6117)|])
                     | None -> ());
                    (match x6114 with
                     | Some x6116 ->
                         ignore
                           (Ojs.call x6115 "push" [|(Ojs.float_to_js x6116)|])
                     | None -> ());
                    x6115))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x6118 : float list) ->
        t_of_js
          (let x6121 = Ojs.get_prop_ascii Ojs.global "Uint32Array" in
           Ojs.call (Ojs.get_prop_ascii x6121 "of") "apply"
             [|x6121;((let x6119 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x6120 : float) ->
                            ignore
                              (Ojs.call x6119 "push"
                                 [|(Ojs.float_to_js x6120)|])) x6118;
                       x6119))|])
    let (from : float ArrayLike.t -> t) =
      fun (x6122 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Uint32Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x6122)|])
    let (from' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x6124 : 'T ArrayLike.t) ->
        fun ~mapfn:(x6125 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x6126 : any option) ->
            fun () ->
              t_of_js
                (let x6132 = Ojs.get_prop_ascii Ojs.global "Uint32Array" in
                 Ojs.call (Ojs.get_prop_ascii x6132 "from") "apply"
                   [|x6132;((let x6127 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6127 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x6124)|]);
                             ignore
                               (Ojs.call x6127 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x6129 : Ojs.t) ->
                                          fun (x6130 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x6125 ~v:(Obj.magic x6129)
                                                 ~k:(Ojs.float_of_js x6130))))|]);
                             (match x6126 with
                              | Some x6128 ->
                                  ignore
                                    (Ojs.call x6127 "push"
                                       [|(any_to_js x6128)|])
                              | None -> ());
                             x6127))|])
    let (create'''' : float Iterable.t -> t) =
      fun (x6133 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             [|(Iterable.t_to_js Ojs.float_to_js x6133)|])
    let (from'' :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x6135 : float Iterable.t) ->
        fun ?mapfn:(x6136 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x6137 : any option) ->
            fun () ->
              t_of_js
                (let x6144 = Ojs.get_prop_ascii Ojs.global "Uint32Array" in
                 Ojs.call (Ojs.get_prop_ascii x6144 "from") "apply"
                   [|x6144;((let x6138 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6138 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x6135)|]);
                             (match x6136 with
                              | Some x6140 ->
                                  ignore
                                    (Ojs.call x6138 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x6141 : Ojs.t) ->
                                               fun (x6142 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x6140
                                                      ~v:(Ojs.float_of_js
                                                            x6141)
                                                      ~k:(Ojs.float_of_js
                                                            x6142))))|])
                              | None -> ());
                             (match x6137 with
                              | Some x6139 ->
                                  ignore
                                    (Ojs.call x6138 "push"
                                       [|(any_to_js x6139)|])
                              | None -> ());
                             x6138))|])
    let cast_from = Obj.magic
  end
module Uint16Array =
  struct
    type t =
      [ `ArrayLike of float  | `IterableIterator of float 
      | `Iterator of (float * any * never or_undefined)  | `Uint16Array ]
        intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6146 : Ojs.t) -> t_of_js x6146
    and t_0_to_js : t_0 -> Ojs.t = fun (x6145 : t) -> t_to_js x6145
    type tags =
      [ `ArrayLike of float  | `IterableIterator of float 
      | `Iterator of (float * any * never or_undefined)  | `Uint16Array ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Uint16Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6149 : Ojs.t) -> intf_of_js __tags_of_js x6149
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6147 : __tags intf) -> intf_to_js __tags_to_js x6147
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x6155 : 'tags this) ->
        fun ~searchElement:(x6151 : float) ->
          fun ?fromIndex:(x6152 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6157 = this_to_js Obj.magic x6155 in
                 Ojs.call (Ojs.get_prop_ascii x6157 "includes") "apply"
                   [|x6157;((let x6153 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6153 "push"
                                  [|(Ojs.float_to_js x6151)|]);
                             (match x6152 with
                              | Some x6154 ->
                                  ignore
                                    (Ojs.call x6153 "push"
                                       [|(Ojs.float_to_js x6154)|])
                              | None -> ());
                             x6153))|])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x6158 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6158)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x6160 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6160) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x6162 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6162) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x6164 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6164) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x6171 : 'tags this) ->
        fun ~target:(x6166 : float) ->
          fun ~start:(x6167 : float) ->
            fun ?end_:(x6168 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x6173 = this_to_js Obj.magic x6171 in
                   Ojs.call (Ojs.get_prop_ascii x6173 "copyWithin") "apply"
                     [|x6173;((let x6169 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6169 "push"
                                    [|(Ojs.float_to_js x6166)|]);
                               ignore
                                 (Ojs.call x6169 "push"
                                    [|(Ojs.float_to_js x6167)|]);
                               (match x6168 with
                                | Some x6170 ->
                                    ignore
                                      (Ojs.call x6169 "push"
                                         [|(Ojs.float_to_js x6170)|])
                                | None -> ());
                               x6169))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x6182 : 'tags this) ->
        fun
          ~predicate:(x6175 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x6176 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6184 = this_to_js Obj.magic x6182 in
                 Ojs.call (Ojs.get_prop_ascii x6184 "every") "apply"
                   [|x6184;((let x6177 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6177 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6179 : Ojs.t) ->
                                          fun (x6180 : Ojs.t) ->
                                            fun (x6181 : Ojs.t) ->
                                              unknown_to_js
                                                (x6175
                                                   ~value:(Ojs.float_of_js
                                                             x6179)
                                                   ~index:(Ojs.float_of_js
                                                             x6180)
                                                   ~array:(t_of_js x6181))))|]);
                             (match x6176 with
                              | Some x6178 ->
                                  ignore
                                    (Ojs.call x6177 "push"
                                       [|(any_to_js x6178)|])
                              | None -> ());
                             x6177))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x6191 : 'tags this) ->
        fun ~value:(x6185 : float) ->
          fun ?start:(x6186 : float option) ->
            fun ?end_:(x6187 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x6193 = this_to_js Obj.magic x6191 in
                   Ojs.call (Ojs.get_prop_ascii x6193 "fill") "apply"
                     [|x6193;((let x6188 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6188 "push"
                                    [|(Ojs.float_to_js x6185)|]);
                               (match x6186 with
                                | Some x6190 ->
                                    ignore
                                      (Ojs.call x6188 "push"
                                         [|(Ojs.float_to_js x6190)|])
                                | None -> ());
                               (match x6187 with
                                | Some x6189 ->
                                    ignore
                                      (Ojs.call x6188 "push"
                                         [|(Ojs.float_to_js x6189)|])
                                | None -> ());
                               x6188))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x6202 : 'tags this) ->
        fun ~predicate:(x6195 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x6196 : any option) ->
            fun () ->
              t_of_js
                (let x6204 = this_to_js Obj.magic x6202 in
                 Ojs.call (Ojs.get_prop_ascii x6204 "filter") "apply"
                   [|x6204;((let x6197 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6197 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6199 : Ojs.t) ->
                                          fun (x6200 : Ojs.t) ->
                                            fun (x6201 : Ojs.t) ->
                                              any_to_js
                                                (x6195
                                                   ~value:(Ojs.float_of_js
                                                             x6199)
                                                   ~index:(Ojs.float_of_js
                                                             x6200)
                                                   ~array:(t_of_js x6201))))|]);
                             (match x6196 with
                              | Some x6198 ->
                                  ignore
                                    (Ojs.call x6197 "push"
                                       [|(any_to_js x6198)|])
                              | None -> ());
                             x6197))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x6212 : 'tags this) ->
        fun ~predicate:(x6205 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x6206 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x6214 = this_to_js Obj.magic x6212 in
                 Ojs.call (Ojs.get_prop_ascii x6214 "find") "apply"
                   [|x6214;((let x6207 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6207 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6209 : Ojs.t) ->
                                          fun (x6210 : Ojs.t) ->
                                            fun (x6211 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x6205
                                                   ~value:(Ojs.float_of_js
                                                             x6209)
                                                   ~index:(Ojs.float_of_js
                                                             x6210)
                                                   ~obj:(t_of_js x6211))))|]);
                             (match x6206 with
                              | Some x6208 ->
                                  ignore
                                    (Ojs.call x6207 "push"
                                       [|(any_to_js x6208)|])
                              | None -> ());
                             x6207))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x6223 : 'tags this) ->
        fun ~predicate:(x6216 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x6217 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x6225 = this_to_js Obj.magic x6223 in
                 Ojs.call (Ojs.get_prop_ascii x6225 "findIndex") "apply"
                   [|x6225;((let x6218 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6218 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6220 : Ojs.t) ->
                                          fun (x6221 : Ojs.t) ->
                                            fun (x6222 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x6216
                                                   ~value:(Ojs.float_of_js
                                                             x6220)
                                                   ~index:(Ojs.float_of_js
                                                             x6221)
                                                   ~obj:(t_of_js x6222))))|]);
                             (match x6217 with
                              | Some x6219 ->
                                  ignore
                                    (Ojs.call x6218 "push"
                                       [|(any_to_js x6219)|])
                              | None -> ());
                             x6218))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x6233 : 'tags this) ->
        fun
          ~callbackfn:(x6226 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x6227 : any option) ->
            fun () ->
              ignore
                (let x6235 = this_to_js Obj.magic x6233 in
                 Ojs.call (Ojs.get_prop_ascii x6235 "forEach") "apply"
                   [|x6235;((let x6228 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6228 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6230 : Ojs.t) ->
                                          fun (x6231 : Ojs.t) ->
                                            fun (x6232 : Ojs.t) ->
                                              x6226
                                                ~value:(Ojs.float_of_js x6230)
                                                ~index:(Ojs.float_of_js x6231)
                                                ~array:(t_of_js x6232)))|]);
                             (match x6227 with
                              | Some x6229 ->
                                  ignore
                                    (Ojs.call x6228 "push"
                                       [|(any_to_js x6229)|])
                              | None -> ());
                             x6228))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x6240 : 'tags this) ->
        fun ~searchElement:(x6236 : float) ->
          fun ?fromIndex:(x6237 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x6242 = this_to_js Obj.magic x6240 in
                 Ojs.call (Ojs.get_prop_ascii x6242 "indexOf") "apply"
                   [|x6242;((let x6238 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6238 "push"
                                  [|(Ojs.float_to_js x6236)|]);
                             (match x6237 with
                              | Some x6239 ->
                                  ignore
                                    (Ojs.call x6238 "push"
                                       [|(Ojs.float_to_js x6239)|])
                              | None -> ());
                             x6238))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x6246 : 'tags this) ->
        fun ?separator:(x6243 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x6248 = this_to_js Obj.magic x6246 in
               Ojs.call (Ojs.get_prop_ascii x6248 "join") "apply"
                 [|x6248;((let x6244 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6243 with
                            | Some x6245 ->
                                ignore
                                  (Ojs.call x6244 "push"
                                     [|(Ojs.string_to_js x6245)|])
                            | None -> ());
                           x6244))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x6253 : 'tags this) ->
        fun ~searchElement:(x6249 : float) ->
          fun ?fromIndex:(x6250 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x6255 = this_to_js Obj.magic x6253 in
                 Ojs.call (Ojs.get_prop_ascii x6255 "lastIndexOf") "apply"
                   [|x6255;((let x6251 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6251 "push"
                                  [|(Ojs.float_to_js x6249)|]);
                             (match x6250 with
                              | Some x6252 ->
                                  ignore
                                    (Ojs.call x6251 "push"
                                       [|(Ojs.float_to_js x6252)|])
                              | None -> ());
                             x6251))|])
    let (get_length : 'tags this -> float) =
      fun (x6256 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6256) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x6265 : 'tags this) ->
        fun
          ~callbackfn:(x6258 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x6259 : any option) ->
            fun () ->
              t_of_js
                (let x6267 = this_to_js Obj.magic x6265 in
                 Ojs.call (Ojs.get_prop_ascii x6267 "map") "apply"
                   [|x6267;((let x6260 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6260 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6262 : Ojs.t) ->
                                          fun (x6263 : Ojs.t) ->
                                            fun (x6264 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x6258
                                                   ~value:(Ojs.float_of_js
                                                             x6262)
                                                   ~index:(Ojs.float_of_js
                                                             x6263)
                                                   ~array:(t_of_js x6264))))|]);
                             (match x6259 with
                              | Some x6261 ->
                                  ignore
                                    (Ojs.call x6260 "push"
                                       [|(any_to_js x6261)|])
                              | None -> ());
                             x6260))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x6273 : 'tags this) ->
        fun
          ~callbackfn:(x6268 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6273) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x6269 : Ojs.t) ->
                       fun (x6270 : Ojs.t) ->
                         fun (x6271 : Ojs.t) ->
                           fun (x6272 : Ojs.t) ->
                             Ojs.float_to_js
                               (x6268 ~previousValue:(Ojs.float_of_js x6269)
                                  ~currentValue:(Ojs.float_of_js x6270)
                                  ~currentIndex:(Ojs.float_of_js x6271)
                                  ~array:(t_of_js x6272))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x6281 : 'tags this) ->
        fun
          ~callbackfn:(x6275 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x6280 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x6281) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x6276 : Ojs.t) ->
                         fun (x6277 : Ojs.t) ->
                           fun (x6278 : Ojs.t) ->
                             fun (x6279 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x6275
                                    ~previousValue:(Ojs.float_of_js x6276)
                                    ~currentValue:(Ojs.float_of_js x6277)
                                    ~currentIndex:(Ojs.float_of_js x6278)
                                    ~array:(t_of_js x6279))));(Ojs.float_to_js
                                                                 x6280)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x6289 : 'tags this) ->
        fun
          ~callbackfn:(x6283 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x6288 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x6289) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x6284 : Ojs.t) ->
                         fun (x6285 : Ojs.t) ->
                           fun (x6286 : Ojs.t) ->
                             fun (x6287 : Ojs.t) ->
                               Obj.magic
                                 (x6283 ~previousValue:(Obj.magic x6284)
                                    ~currentValue:(Ojs.float_of_js x6285)
                                    ~currentIndex:(Ojs.float_of_js x6286)
                                    ~array:(t_of_js x6287))));(Obj.magic
                                                                 x6288)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x6296 : 'tags this) ->
        fun
          ~callbackfn:(x6291 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6296) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x6292 : Ojs.t) ->
                       fun (x6293 : Ojs.t) ->
                         fun (x6294 : Ojs.t) ->
                           fun (x6295 : Ojs.t) ->
                             Ojs.float_to_js
                               (x6291 ~previousValue:(Ojs.float_of_js x6292)
                                  ~currentValue:(Ojs.float_of_js x6293)
                                  ~currentIndex:(Ojs.float_of_js x6294)
                                  ~array:(t_of_js x6295))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x6304 : 'tags this) ->
        fun
          ~callbackfn:(x6298 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x6303 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x6304) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x6299 : Ojs.t) ->
                         fun (x6300 : Ojs.t) ->
                           fun (x6301 : Ojs.t) ->
                             fun (x6302 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x6298
                                    ~previousValue:(Ojs.float_of_js x6299)
                                    ~currentValue:(Ojs.float_of_js x6300)
                                    ~currentIndex:(Ojs.float_of_js x6301)
                                    ~array:(t_of_js x6302))));(Ojs.float_to_js
                                                                 x6303)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x6312 : 'tags this) ->
        fun
          ~callbackfn:(x6306 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x6311 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x6312) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x6307 : Ojs.t) ->
                         fun (x6308 : Ojs.t) ->
                           fun (x6309 : Ojs.t) ->
                             fun (x6310 : Ojs.t) ->
                               Obj.magic
                                 (x6306 ~previousValue:(Obj.magic x6307)
                                    ~currentValue:(Ojs.float_of_js x6308)
                                    ~currentIndex:(Ojs.float_of_js x6309)
                                    ~array:(t_of_js x6310))));(Obj.magic
                                                                 x6311)|])
    let (reverse : 'tags this -> t) =
      fun (x6314 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x6314) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x6321 : 'tags this) ->
        fun ~array:(x6316 : float ArrayLike.t) ->
          fun ?offset:(x6317 : float option) ->
            fun () ->
              ignore
                (let x6323 = this_to_js Obj.magic x6321 in
                 Ojs.call (Ojs.get_prop_ascii x6323 "set") "apply"
                   [|x6323;((let x6318 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6318 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x6316)|]);
                             (match x6317 with
                              | Some x6319 ->
                                  ignore
                                    (Ojs.call x6318 "push"
                                       [|(Ojs.float_to_js x6319)|])
                              | None -> ());
                             x6318))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x6329 : 'tags this) ->
        fun ?start:(x6324 : float option) ->
          fun ?end_:(x6325 : float option) ->
            fun () ->
              t_of_js
                (let x6331 = this_to_js Obj.magic x6329 in
                 Ojs.call (Ojs.get_prop_ascii x6331 "slice") "apply"
                   [|x6331;((let x6326 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x6324 with
                              | Some x6328 ->
                                  ignore
                                    (Ojs.call x6326 "push"
                                       [|(Ojs.float_to_js x6328)|])
                              | None -> ());
                             (match x6325 with
                              | Some x6327 ->
                                  ignore
                                    (Ojs.call x6326 "push"
                                       [|(Ojs.float_to_js x6327)|])
                              | None -> ());
                             x6326))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x6339 : 'tags this) ->
        fun
          ~predicate:(x6332 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x6333 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6341 = this_to_js Obj.magic x6339 in
                 Ojs.call (Ojs.get_prop_ascii x6341 "some") "apply"
                   [|x6341;((let x6334 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6334 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6336 : Ojs.t) ->
                                          fun (x6337 : Ojs.t) ->
                                            fun (x6338 : Ojs.t) ->
                                              unknown_to_js
                                                (x6332
                                                   ~value:(Ojs.float_of_js
                                                             x6336)
                                                   ~index:(Ojs.float_of_js
                                                             x6337)
                                                   ~array:(t_of_js x6338))))|]);
                             (match x6333 with
                              | Some x6335 ->
                                  ignore
                                    (Ojs.call x6334 "push"
                                       [|(any_to_js x6335)|])
                              | None -> ());
                             x6334))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x6347 : 'tags this) ->
        fun ?compareFn:(x6342 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x6349 = this_to_js Obj.magic x6347 in
               Ojs.call (Ojs.get_prop_ascii x6349 "sort") "apply"
                 [|x6349;((let x6343 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6342 with
                            | Some x6344 ->
                                ignore
                                  (Ojs.call x6343 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x6345 : Ojs.t) ->
                                             fun (x6346 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x6344
                                                    ~a:(Ojs.float_of_js x6345)
                                                    ~b:(Ojs.float_of_js x6346))))|])
                            | None -> ());
                           x6343))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x6356 : 'tags this) ->
        fun ?begin_:(x6351 : float option) ->
          fun ?end_:(x6352 : float option) ->
            fun () ->
              t_of_js
                (let x6358 = this_to_js Obj.magic x6356 in
                 Ojs.call (Ojs.get_prop_ascii x6358 "subarray") "apply"
                   [|x6358;((let x6353 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x6351 with
                              | Some x6355 ->
                                  ignore
                                    (Ojs.call x6353 "push"
                                       [|(Ojs.float_to_js x6355)|])
                              | None -> ());
                             (match x6352 with
                              | Some x6354 ->
                                  ignore
                                    (Ojs.call x6353 "push"
                                       [|(Ojs.float_to_js x6354)|])
                              | None -> ());
                             x6353))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x6359 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x6359) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x6361 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x6361) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x6363 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x6363) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x6365 : 'tags this) ->
        fun (x6367 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x6365)
               (Ojs.float_to_js x6367))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x6368 : 'tags this) ->
        fun (x6370 : float) ->
          fun (x6371 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x6368) (Ojs.float_to_js x6370)
              (Ojs.float_to_js x6371)
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x6372 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x6374 : Ojs.t) ->
             let x6375 = x6374 in
             ((Ojs.float_of_js (Ojs.array_get x6375 0)),
               (Ojs.float_of_js (Ojs.array_get x6375 1))))
          (Ojs.call (this_to_js Obj.magic x6372) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x6376 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x6376) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x6379 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x6379) "values" [||])
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint16Array") [||])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             "prototype")
    let (create' : float -> t) =
      fun (x6382 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             [|(Ojs.float_to_js x6382)|])
    let (create'' : (ArrayBufferLike.t, float ArrayLike.t) union2 -> t) =
      fun (x6383 : (ArrayBufferLike.t, float ArrayLike.t) union2) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             [|(union2_to_js ArrayBufferLike.t_to_js
                  (fun (x6385 : float ArrayLike.t) ->
                     ArrayLike.t_to_js Ojs.float_to_js x6385) x6383)|])
    let (create''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x6387 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x6388 : float option) ->
          fun ?length:(x6389 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Uint16Array")
                   (let x6390 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x6390 "push"
                         [|(ArrayBufferLike.t_to_js x6387)|]);
                    (match x6388 with
                     | Some x6392 ->
                         ignore
                           (Ojs.call x6390 "push" [|(Ojs.float_to_js x6392)|])
                     | None -> ());
                    (match x6389 with
                     | Some x6391 ->
                         ignore
                           (Ojs.call x6390 "push" [|(Ojs.float_to_js x6391)|])
                     | None -> ());
                    x6390))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x6393 : float list) ->
        t_of_js
          (let x6396 = Ojs.get_prop_ascii Ojs.global "Uint16Array" in
           Ojs.call (Ojs.get_prop_ascii x6396 "of") "apply"
             [|x6396;((let x6394 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x6395 : float) ->
                            ignore
                              (Ojs.call x6394 "push"
                                 [|(Ojs.float_to_js x6395)|])) x6393;
                       x6394))|])
    let (from : float ArrayLike.t -> t) =
      fun (x6397 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Uint16Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x6397)|])
    let (from' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x6399 : 'T ArrayLike.t) ->
        fun ~mapfn:(x6400 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x6401 : any option) ->
            fun () ->
              t_of_js
                (let x6407 = Ojs.get_prop_ascii Ojs.global "Uint16Array" in
                 Ojs.call (Ojs.get_prop_ascii x6407 "from") "apply"
                   [|x6407;((let x6402 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6402 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x6399)|]);
                             ignore
                               (Ojs.call x6402 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x6404 : Ojs.t) ->
                                          fun (x6405 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x6400 ~v:(Obj.magic x6404)
                                                 ~k:(Ojs.float_of_js x6405))))|]);
                             (match x6401 with
                              | Some x6403 ->
                                  ignore
                                    (Ojs.call x6402 "push"
                                       [|(any_to_js x6403)|])
                              | None -> ());
                             x6402))|])
    let (create'''' : float Iterable.t -> t) =
      fun (x6408 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             [|(Iterable.t_to_js Ojs.float_to_js x6408)|])
    let (from'' :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x6410 : float Iterable.t) ->
        fun ?mapfn:(x6411 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x6412 : any option) ->
            fun () ->
              t_of_js
                (let x6419 = Ojs.get_prop_ascii Ojs.global "Uint16Array" in
                 Ojs.call (Ojs.get_prop_ascii x6419 "from") "apply"
                   [|x6419;((let x6413 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6413 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x6410)|]);
                             (match x6411 with
                              | Some x6415 ->
                                  ignore
                                    (Ojs.call x6413 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x6416 : Ojs.t) ->
                                               fun (x6417 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x6415
                                                      ~v:(Ojs.float_of_js
                                                            x6416)
                                                      ~k:(Ojs.float_of_js
                                                            x6417))))|])
                              | None -> ());
                             (match x6412 with
                              | Some x6414 ->
                                  ignore
                                    (Ojs.call x6413 "push"
                                       [|(any_to_js x6414)|])
                              | None -> ());
                             x6413))|])
    let cast_from = Obj.magic
  end
module Int8Array =
  struct
    type t =
      [ `ArrayLike of float  | `Int8Array  | `IterableIterator of float 
      | `Iterator of (float * any * never or_undefined) ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6421 : Ojs.t) -> t_of_js x6421
    and t_0_to_js : t_0 -> Ojs.t = fun (x6420 : t) -> t_to_js x6420
    type tags =
      [ `ArrayLike of float  | `Int8Array  | `IterableIterator of float 
      | `Iterator of (float * any * never or_undefined) ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Int8Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6424 : Ojs.t) -> intf_of_js __tags_of_js x6424
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6422 : __tags intf) -> intf_to_js __tags_to_js x6422
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x6430 : 'tags this) ->
        fun ~searchElement:(x6426 : float) ->
          fun ?fromIndex:(x6427 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6432 = this_to_js Obj.magic x6430 in
                 Ojs.call (Ojs.get_prop_ascii x6432 "includes") "apply"
                   [|x6432;((let x6428 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6428 "push"
                                  [|(Ojs.float_to_js x6426)|]);
                             (match x6427 with
                              | Some x6429 ->
                                  ignore
                                    (Ojs.call x6428 "push"
                                       [|(Ojs.float_to_js x6429)|])
                              | None -> ());
                             x6428))|])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x6433 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6433)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x6435 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6435) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x6437 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6437) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x6439 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6439) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x6446 : 'tags this) ->
        fun ~target:(x6441 : float) ->
          fun ~start:(x6442 : float) ->
            fun ?end_:(x6443 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x6448 = this_to_js Obj.magic x6446 in
                   Ojs.call (Ojs.get_prop_ascii x6448 "copyWithin") "apply"
                     [|x6448;((let x6444 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6444 "push"
                                    [|(Ojs.float_to_js x6441)|]);
                               ignore
                                 (Ojs.call x6444 "push"
                                    [|(Ojs.float_to_js x6442)|]);
                               (match x6443 with
                                | Some x6445 ->
                                    ignore
                                      (Ojs.call x6444 "push"
                                         [|(Ojs.float_to_js x6445)|])
                                | None -> ());
                               x6444))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x6457 : 'tags this) ->
        fun
          ~predicate:(x6450 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x6451 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6459 = this_to_js Obj.magic x6457 in
                 Ojs.call (Ojs.get_prop_ascii x6459 "every") "apply"
                   [|x6459;((let x6452 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6452 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6454 : Ojs.t) ->
                                          fun (x6455 : Ojs.t) ->
                                            fun (x6456 : Ojs.t) ->
                                              unknown_to_js
                                                (x6450
                                                   ~value:(Ojs.float_of_js
                                                             x6454)
                                                   ~index:(Ojs.float_of_js
                                                             x6455)
                                                   ~array:(t_of_js x6456))))|]);
                             (match x6451 with
                              | Some x6453 ->
                                  ignore
                                    (Ojs.call x6452 "push"
                                       [|(any_to_js x6453)|])
                              | None -> ());
                             x6452))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x6466 : 'tags this) ->
        fun ~value:(x6460 : float) ->
          fun ?start:(x6461 : float option) ->
            fun ?end_:(x6462 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x6468 = this_to_js Obj.magic x6466 in
                   Ojs.call (Ojs.get_prop_ascii x6468 "fill") "apply"
                     [|x6468;((let x6463 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6463 "push"
                                    [|(Ojs.float_to_js x6460)|]);
                               (match x6461 with
                                | Some x6465 ->
                                    ignore
                                      (Ojs.call x6463 "push"
                                         [|(Ojs.float_to_js x6465)|])
                                | None -> ());
                               (match x6462 with
                                | Some x6464 ->
                                    ignore
                                      (Ojs.call x6463 "push"
                                         [|(Ojs.float_to_js x6464)|])
                                | None -> ());
                               x6463))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x6477 : 'tags this) ->
        fun ~predicate:(x6470 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x6471 : any option) ->
            fun () ->
              t_of_js
                (let x6479 = this_to_js Obj.magic x6477 in
                 Ojs.call (Ojs.get_prop_ascii x6479 "filter") "apply"
                   [|x6479;((let x6472 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6472 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6474 : Ojs.t) ->
                                          fun (x6475 : Ojs.t) ->
                                            fun (x6476 : Ojs.t) ->
                                              any_to_js
                                                (x6470
                                                   ~value:(Ojs.float_of_js
                                                             x6474)
                                                   ~index:(Ojs.float_of_js
                                                             x6475)
                                                   ~array:(t_of_js x6476))))|]);
                             (match x6471 with
                              | Some x6473 ->
                                  ignore
                                    (Ojs.call x6472 "push"
                                       [|(any_to_js x6473)|])
                              | None -> ());
                             x6472))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x6487 : 'tags this) ->
        fun ~predicate:(x6480 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x6481 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x6489 = this_to_js Obj.magic x6487 in
                 Ojs.call (Ojs.get_prop_ascii x6489 "find") "apply"
                   [|x6489;((let x6482 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6482 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6484 : Ojs.t) ->
                                          fun (x6485 : Ojs.t) ->
                                            fun (x6486 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x6480
                                                   ~value:(Ojs.float_of_js
                                                             x6484)
                                                   ~index:(Ojs.float_of_js
                                                             x6485)
                                                   ~obj:(t_of_js x6486))))|]);
                             (match x6481 with
                              | Some x6483 ->
                                  ignore
                                    (Ojs.call x6482 "push"
                                       [|(any_to_js x6483)|])
                              | None -> ());
                             x6482))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x6498 : 'tags this) ->
        fun ~predicate:(x6491 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x6492 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x6500 = this_to_js Obj.magic x6498 in
                 Ojs.call (Ojs.get_prop_ascii x6500 "findIndex") "apply"
                   [|x6500;((let x6493 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6493 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6495 : Ojs.t) ->
                                          fun (x6496 : Ojs.t) ->
                                            fun (x6497 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x6491
                                                   ~value:(Ojs.float_of_js
                                                             x6495)
                                                   ~index:(Ojs.float_of_js
                                                             x6496)
                                                   ~obj:(t_of_js x6497))))|]);
                             (match x6492 with
                              | Some x6494 ->
                                  ignore
                                    (Ojs.call x6493 "push"
                                       [|(any_to_js x6494)|])
                              | None -> ());
                             x6493))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x6508 : 'tags this) ->
        fun
          ~callbackfn:(x6501 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x6502 : any option) ->
            fun () ->
              ignore
                (let x6510 = this_to_js Obj.magic x6508 in
                 Ojs.call (Ojs.get_prop_ascii x6510 "forEach") "apply"
                   [|x6510;((let x6503 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6503 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6505 : Ojs.t) ->
                                          fun (x6506 : Ojs.t) ->
                                            fun (x6507 : Ojs.t) ->
                                              x6501
                                                ~value:(Ojs.float_of_js x6505)
                                                ~index:(Ojs.float_of_js x6506)
                                                ~array:(t_of_js x6507)))|]);
                             (match x6502 with
                              | Some x6504 ->
                                  ignore
                                    (Ojs.call x6503 "push"
                                       [|(any_to_js x6504)|])
                              | None -> ());
                             x6503))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x6515 : 'tags this) ->
        fun ~searchElement:(x6511 : float) ->
          fun ?fromIndex:(x6512 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x6517 = this_to_js Obj.magic x6515 in
                 Ojs.call (Ojs.get_prop_ascii x6517 "indexOf") "apply"
                   [|x6517;((let x6513 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6513 "push"
                                  [|(Ojs.float_to_js x6511)|]);
                             (match x6512 with
                              | Some x6514 ->
                                  ignore
                                    (Ojs.call x6513 "push"
                                       [|(Ojs.float_to_js x6514)|])
                              | None -> ());
                             x6513))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x6521 : 'tags this) ->
        fun ?separator:(x6518 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x6523 = this_to_js Obj.magic x6521 in
               Ojs.call (Ojs.get_prop_ascii x6523 "join") "apply"
                 [|x6523;((let x6519 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6518 with
                            | Some x6520 ->
                                ignore
                                  (Ojs.call x6519 "push"
                                     [|(Ojs.string_to_js x6520)|])
                            | None -> ());
                           x6519))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x6528 : 'tags this) ->
        fun ~searchElement:(x6524 : float) ->
          fun ?fromIndex:(x6525 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x6530 = this_to_js Obj.magic x6528 in
                 Ojs.call (Ojs.get_prop_ascii x6530 "lastIndexOf") "apply"
                   [|x6530;((let x6526 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6526 "push"
                                  [|(Ojs.float_to_js x6524)|]);
                             (match x6525 with
                              | Some x6527 ->
                                  ignore
                                    (Ojs.call x6526 "push"
                                       [|(Ojs.float_to_js x6527)|])
                              | None -> ());
                             x6526))|])
    let (get_length : 'tags this -> float) =
      fun (x6531 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6531) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x6540 : 'tags this) ->
        fun
          ~callbackfn:(x6533 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x6534 : any option) ->
            fun () ->
              t_of_js
                (let x6542 = this_to_js Obj.magic x6540 in
                 Ojs.call (Ojs.get_prop_ascii x6542 "map") "apply"
                   [|x6542;((let x6535 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6535 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6537 : Ojs.t) ->
                                          fun (x6538 : Ojs.t) ->
                                            fun (x6539 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x6533
                                                   ~value:(Ojs.float_of_js
                                                             x6537)
                                                   ~index:(Ojs.float_of_js
                                                             x6538)
                                                   ~array:(t_of_js x6539))))|]);
                             (match x6534 with
                              | Some x6536 ->
                                  ignore
                                    (Ojs.call x6535 "push"
                                       [|(any_to_js x6536)|])
                              | None -> ());
                             x6535))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x6548 : 'tags this) ->
        fun
          ~callbackfn:(x6543 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6548) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x6544 : Ojs.t) ->
                       fun (x6545 : Ojs.t) ->
                         fun (x6546 : Ojs.t) ->
                           fun (x6547 : Ojs.t) ->
                             Ojs.float_to_js
                               (x6543 ~previousValue:(Ojs.float_of_js x6544)
                                  ~currentValue:(Ojs.float_of_js x6545)
                                  ~currentIndex:(Ojs.float_of_js x6546)
                                  ~array:(t_of_js x6547))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x6556 : 'tags this) ->
        fun
          ~callbackfn:(x6550 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x6555 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x6556) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x6551 : Ojs.t) ->
                         fun (x6552 : Ojs.t) ->
                           fun (x6553 : Ojs.t) ->
                             fun (x6554 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x6550
                                    ~previousValue:(Ojs.float_of_js x6551)
                                    ~currentValue:(Ojs.float_of_js x6552)
                                    ~currentIndex:(Ojs.float_of_js x6553)
                                    ~array:(t_of_js x6554))));(Ojs.float_to_js
                                                                 x6555)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x6564 : 'tags this) ->
        fun
          ~callbackfn:(x6558 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x6563 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x6564) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x6559 : Ojs.t) ->
                         fun (x6560 : Ojs.t) ->
                           fun (x6561 : Ojs.t) ->
                             fun (x6562 : Ojs.t) ->
                               Obj.magic
                                 (x6558 ~previousValue:(Obj.magic x6559)
                                    ~currentValue:(Ojs.float_of_js x6560)
                                    ~currentIndex:(Ojs.float_of_js x6561)
                                    ~array:(t_of_js x6562))));(Obj.magic
                                                                 x6563)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x6571 : 'tags this) ->
        fun
          ~callbackfn:(x6566 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6571) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x6567 : Ojs.t) ->
                       fun (x6568 : Ojs.t) ->
                         fun (x6569 : Ojs.t) ->
                           fun (x6570 : Ojs.t) ->
                             Ojs.float_to_js
                               (x6566 ~previousValue:(Ojs.float_of_js x6567)
                                  ~currentValue:(Ojs.float_of_js x6568)
                                  ~currentIndex:(Ojs.float_of_js x6569)
                                  ~array:(t_of_js x6570))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x6579 : 'tags this) ->
        fun
          ~callbackfn:(x6573 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x6578 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x6579) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x6574 : Ojs.t) ->
                         fun (x6575 : Ojs.t) ->
                           fun (x6576 : Ojs.t) ->
                             fun (x6577 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x6573
                                    ~previousValue:(Ojs.float_of_js x6574)
                                    ~currentValue:(Ojs.float_of_js x6575)
                                    ~currentIndex:(Ojs.float_of_js x6576)
                                    ~array:(t_of_js x6577))));(Ojs.float_to_js
                                                                 x6578)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x6587 : 'tags this) ->
        fun
          ~callbackfn:(x6581 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x6586 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x6587) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x6582 : Ojs.t) ->
                         fun (x6583 : Ojs.t) ->
                           fun (x6584 : Ojs.t) ->
                             fun (x6585 : Ojs.t) ->
                               Obj.magic
                                 (x6581 ~previousValue:(Obj.magic x6582)
                                    ~currentValue:(Ojs.float_of_js x6583)
                                    ~currentIndex:(Ojs.float_of_js x6584)
                                    ~array:(t_of_js x6585))));(Obj.magic
                                                                 x6586)|])
    let (reverse : 'tags this -> t) =
      fun (x6589 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x6589) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x6596 : 'tags this) ->
        fun ~array:(x6591 : float ArrayLike.t) ->
          fun ?offset:(x6592 : float option) ->
            fun () ->
              ignore
                (let x6598 = this_to_js Obj.magic x6596 in
                 Ojs.call (Ojs.get_prop_ascii x6598 "set") "apply"
                   [|x6598;((let x6593 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6593 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x6591)|]);
                             (match x6592 with
                              | Some x6594 ->
                                  ignore
                                    (Ojs.call x6593 "push"
                                       [|(Ojs.float_to_js x6594)|])
                              | None -> ());
                             x6593))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x6604 : 'tags this) ->
        fun ?start:(x6599 : float option) ->
          fun ?end_:(x6600 : float option) ->
            fun () ->
              t_of_js
                (let x6606 = this_to_js Obj.magic x6604 in
                 Ojs.call (Ojs.get_prop_ascii x6606 "slice") "apply"
                   [|x6606;((let x6601 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x6599 with
                              | Some x6603 ->
                                  ignore
                                    (Ojs.call x6601 "push"
                                       [|(Ojs.float_to_js x6603)|])
                              | None -> ());
                             (match x6600 with
                              | Some x6602 ->
                                  ignore
                                    (Ojs.call x6601 "push"
                                       [|(Ojs.float_to_js x6602)|])
                              | None -> ());
                             x6601))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x6614 : 'tags this) ->
        fun
          ~predicate:(x6607 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x6608 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6616 = this_to_js Obj.magic x6614 in
                 Ojs.call (Ojs.get_prop_ascii x6616 "some") "apply"
                   [|x6616;((let x6609 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6609 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6611 : Ojs.t) ->
                                          fun (x6612 : Ojs.t) ->
                                            fun (x6613 : Ojs.t) ->
                                              unknown_to_js
                                                (x6607
                                                   ~value:(Ojs.float_of_js
                                                             x6611)
                                                   ~index:(Ojs.float_of_js
                                                             x6612)
                                                   ~array:(t_of_js x6613))))|]);
                             (match x6608 with
                              | Some x6610 ->
                                  ignore
                                    (Ojs.call x6609 "push"
                                       [|(any_to_js x6610)|])
                              | None -> ());
                             x6609))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x6622 : 'tags this) ->
        fun ?compareFn:(x6617 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x6624 = this_to_js Obj.magic x6622 in
               Ojs.call (Ojs.get_prop_ascii x6624 "sort") "apply"
                 [|x6624;((let x6618 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6617 with
                            | Some x6619 ->
                                ignore
                                  (Ojs.call x6618 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x6620 : Ojs.t) ->
                                             fun (x6621 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x6619
                                                    ~a:(Ojs.float_of_js x6620)
                                                    ~b:(Ojs.float_of_js x6621))))|])
                            | None -> ());
                           x6618))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x6631 : 'tags this) ->
        fun ?begin_:(x6626 : float option) ->
          fun ?end_:(x6627 : float option) ->
            fun () ->
              t_of_js
                (let x6633 = this_to_js Obj.magic x6631 in
                 Ojs.call (Ojs.get_prop_ascii x6633 "subarray") "apply"
                   [|x6633;((let x6628 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x6626 with
                              | Some x6630 ->
                                  ignore
                                    (Ojs.call x6628 "push"
                                       [|(Ojs.float_to_js x6630)|])
                              | None -> ());
                             (match x6627 with
                              | Some x6629 ->
                                  ignore
                                    (Ojs.call x6628 "push"
                                       [|(Ojs.float_to_js x6629)|])
                              | None -> ());
                             x6628))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x6634 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x6634) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x6636 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x6636) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x6638 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x6638) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x6640 : 'tags this) ->
        fun (x6642 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x6640)
               (Ojs.float_to_js x6642))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x6643 : 'tags this) ->
        fun (x6645 : float) ->
          fun (x6646 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x6643) (Ojs.float_to_js x6645)
              (Ojs.float_to_js x6646)
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x6647 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x6649 : Ojs.t) ->
             let x6650 = x6649 in
             ((Ojs.float_of_js (Ojs.array_get x6650 0)),
               (Ojs.float_of_js (Ojs.array_get x6650 1))))
          (Ojs.call (this_to_js Obj.magic x6647) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x6651 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x6651) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x6654 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x6654) "values" [||])
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int8Array") [||])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int8Array")
             "prototype")
    let (create' : float -> t) =
      fun (x6657 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int8Array")
             [|(Ojs.float_to_js x6657)|])
    let (create'' : (ArrayBufferLike.t, float ArrayLike.t) union2 -> t) =
      fun (x6658 : (ArrayBufferLike.t, float ArrayLike.t) union2) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int8Array")
             [|(union2_to_js ArrayBufferLike.t_to_js
                  (fun (x6660 : float ArrayLike.t) ->
                     ArrayLike.t_to_js Ojs.float_to_js x6660) x6658)|])
    let (create''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x6662 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x6663 : float option) ->
          fun ?length:(x6664 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Int8Array")
                   (let x6665 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x6665 "push"
                         [|(ArrayBufferLike.t_to_js x6662)|]);
                    (match x6663 with
                     | Some x6667 ->
                         ignore
                           (Ojs.call x6665 "push" [|(Ojs.float_to_js x6667)|])
                     | None -> ());
                    (match x6664 with
                     | Some x6666 ->
                         ignore
                           (Ojs.call x6665 "push" [|(Ojs.float_to_js x6666)|])
                     | None -> ());
                    x6665))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int8Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x6668 : float list) ->
        t_of_js
          (let x6671 = Ojs.get_prop_ascii Ojs.global "Int8Array" in
           Ojs.call (Ojs.get_prop_ascii x6671 "of") "apply"
             [|x6671;((let x6669 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x6670 : float) ->
                            ignore
                              (Ojs.call x6669 "push"
                                 [|(Ojs.float_to_js x6670)|])) x6668;
                       x6669))|])
    let (from : float ArrayLike.t -> t) =
      fun (x6672 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Int8Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x6672)|])
    let (from' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x6674 : 'T ArrayLike.t) ->
        fun ~mapfn:(x6675 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x6676 : any option) ->
            fun () ->
              t_of_js
                (let x6682 = Ojs.get_prop_ascii Ojs.global "Int8Array" in
                 Ojs.call (Ojs.get_prop_ascii x6682 "from") "apply"
                   [|x6682;((let x6677 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6677 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x6674)|]);
                             ignore
                               (Ojs.call x6677 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x6679 : Ojs.t) ->
                                          fun (x6680 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x6675 ~v:(Obj.magic x6679)
                                                 ~k:(Ojs.float_of_js x6680))))|]);
                             (match x6676 with
                              | Some x6678 ->
                                  ignore
                                    (Ojs.call x6677 "push"
                                       [|(any_to_js x6678)|])
                              | None -> ());
                             x6677))|])
    let (create'''' : float Iterable.t -> t) =
      fun (x6683 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int8Array")
             [|(Iterable.t_to_js Ojs.float_to_js x6683)|])
    let (from'' :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x6685 : float Iterable.t) ->
        fun ?mapfn:(x6686 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x6687 : any option) ->
            fun () ->
              t_of_js
                (let x6694 = Ojs.get_prop_ascii Ojs.global "Int8Array" in
                 Ojs.call (Ojs.get_prop_ascii x6694 "from") "apply"
                   [|x6694;((let x6688 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6688 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x6685)|]);
                             (match x6686 with
                              | Some x6690 ->
                                  ignore
                                    (Ojs.call x6688 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x6691 : Ojs.t) ->
                                               fun (x6692 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x6690
                                                      ~v:(Ojs.float_of_js
                                                            x6691)
                                                      ~k:(Ojs.float_of_js
                                                            x6692))))|])
                              | None -> ());
                             (match x6687 with
                              | Some x6689 ->
                                  ignore
                                    (Ojs.call x6688 "push"
                                       [|(any_to_js x6689)|])
                              | None -> ());
                             x6688))|])
    let cast_from = Obj.magic
  end
module Int32Array =
  struct
    type t =
      [ `ArrayLike of float  | `Int32Array  | `IterableIterator of float 
      | `Iterator of (float * any * never or_undefined) ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6696 : Ojs.t) -> t_of_js x6696
    and t_0_to_js : t_0 -> Ojs.t = fun (x6695 : t) -> t_to_js x6695
    type tags =
      [ `ArrayLike of float  | `Int32Array  | `IterableIterator of float 
      | `Iterator of (float * any * never or_undefined) ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Int32Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6699 : Ojs.t) -> intf_of_js __tags_of_js x6699
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6697 : __tags intf) -> intf_to_js __tags_to_js x6697
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x6705 : 'tags this) ->
        fun ~searchElement:(x6701 : float) ->
          fun ?fromIndex:(x6702 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6707 = this_to_js Obj.magic x6705 in
                 Ojs.call (Ojs.get_prop_ascii x6707 "includes") "apply"
                   [|x6707;((let x6703 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6703 "push"
                                  [|(Ojs.float_to_js x6701)|]);
                             (match x6702 with
                              | Some x6704 ->
                                  ignore
                                    (Ojs.call x6703 "push"
                                       [|(Ojs.float_to_js x6704)|])
                              | None -> ());
                             x6703))|])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x6708 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6708)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x6710 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6710) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x6712 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6712) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x6714 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6714) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x6721 : 'tags this) ->
        fun ~target:(x6716 : float) ->
          fun ~start:(x6717 : float) ->
            fun ?end_:(x6718 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x6723 = this_to_js Obj.magic x6721 in
                   Ojs.call (Ojs.get_prop_ascii x6723 "copyWithin") "apply"
                     [|x6723;((let x6719 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6719 "push"
                                    [|(Ojs.float_to_js x6716)|]);
                               ignore
                                 (Ojs.call x6719 "push"
                                    [|(Ojs.float_to_js x6717)|]);
                               (match x6718 with
                                | Some x6720 ->
                                    ignore
                                      (Ojs.call x6719 "push"
                                         [|(Ojs.float_to_js x6720)|])
                                | None -> ());
                               x6719))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x6732 : 'tags this) ->
        fun
          ~predicate:(x6725 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x6726 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6734 = this_to_js Obj.magic x6732 in
                 Ojs.call (Ojs.get_prop_ascii x6734 "every") "apply"
                   [|x6734;((let x6727 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6727 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6729 : Ojs.t) ->
                                          fun (x6730 : Ojs.t) ->
                                            fun (x6731 : Ojs.t) ->
                                              unknown_to_js
                                                (x6725
                                                   ~value:(Ojs.float_of_js
                                                             x6729)
                                                   ~index:(Ojs.float_of_js
                                                             x6730)
                                                   ~array:(t_of_js x6731))))|]);
                             (match x6726 with
                              | Some x6728 ->
                                  ignore
                                    (Ojs.call x6727 "push"
                                       [|(any_to_js x6728)|])
                              | None -> ());
                             x6727))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x6741 : 'tags this) ->
        fun ~value:(x6735 : float) ->
          fun ?start:(x6736 : float option) ->
            fun ?end_:(x6737 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x6743 = this_to_js Obj.magic x6741 in
                   Ojs.call (Ojs.get_prop_ascii x6743 "fill") "apply"
                     [|x6743;((let x6738 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6738 "push"
                                    [|(Ojs.float_to_js x6735)|]);
                               (match x6736 with
                                | Some x6740 ->
                                    ignore
                                      (Ojs.call x6738 "push"
                                         [|(Ojs.float_to_js x6740)|])
                                | None -> ());
                               (match x6737 with
                                | Some x6739 ->
                                    ignore
                                      (Ojs.call x6738 "push"
                                         [|(Ojs.float_to_js x6739)|])
                                | None -> ());
                               x6738))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x6752 : 'tags this) ->
        fun ~predicate:(x6745 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x6746 : any option) ->
            fun () ->
              t_of_js
                (let x6754 = this_to_js Obj.magic x6752 in
                 Ojs.call (Ojs.get_prop_ascii x6754 "filter") "apply"
                   [|x6754;((let x6747 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6747 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6749 : Ojs.t) ->
                                          fun (x6750 : Ojs.t) ->
                                            fun (x6751 : Ojs.t) ->
                                              any_to_js
                                                (x6745
                                                   ~value:(Ojs.float_of_js
                                                             x6749)
                                                   ~index:(Ojs.float_of_js
                                                             x6750)
                                                   ~array:(t_of_js x6751))))|]);
                             (match x6746 with
                              | Some x6748 ->
                                  ignore
                                    (Ojs.call x6747 "push"
                                       [|(any_to_js x6748)|])
                              | None -> ());
                             x6747))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x6762 : 'tags this) ->
        fun ~predicate:(x6755 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x6756 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x6764 = this_to_js Obj.magic x6762 in
                 Ojs.call (Ojs.get_prop_ascii x6764 "find") "apply"
                   [|x6764;((let x6757 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6757 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6759 : Ojs.t) ->
                                          fun (x6760 : Ojs.t) ->
                                            fun (x6761 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x6755
                                                   ~value:(Ojs.float_of_js
                                                             x6759)
                                                   ~index:(Ojs.float_of_js
                                                             x6760)
                                                   ~obj:(t_of_js x6761))))|]);
                             (match x6756 with
                              | Some x6758 ->
                                  ignore
                                    (Ojs.call x6757 "push"
                                       [|(any_to_js x6758)|])
                              | None -> ());
                             x6757))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x6773 : 'tags this) ->
        fun ~predicate:(x6766 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x6767 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x6775 = this_to_js Obj.magic x6773 in
                 Ojs.call (Ojs.get_prop_ascii x6775 "findIndex") "apply"
                   [|x6775;((let x6768 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6768 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6770 : Ojs.t) ->
                                          fun (x6771 : Ojs.t) ->
                                            fun (x6772 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x6766
                                                   ~value:(Ojs.float_of_js
                                                             x6770)
                                                   ~index:(Ojs.float_of_js
                                                             x6771)
                                                   ~obj:(t_of_js x6772))))|]);
                             (match x6767 with
                              | Some x6769 ->
                                  ignore
                                    (Ojs.call x6768 "push"
                                       [|(any_to_js x6769)|])
                              | None -> ());
                             x6768))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x6783 : 'tags this) ->
        fun
          ~callbackfn:(x6776 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x6777 : any option) ->
            fun () ->
              ignore
                (let x6785 = this_to_js Obj.magic x6783 in
                 Ojs.call (Ojs.get_prop_ascii x6785 "forEach") "apply"
                   [|x6785;((let x6778 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6778 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6780 : Ojs.t) ->
                                          fun (x6781 : Ojs.t) ->
                                            fun (x6782 : Ojs.t) ->
                                              x6776
                                                ~value:(Ojs.float_of_js x6780)
                                                ~index:(Ojs.float_of_js x6781)
                                                ~array:(t_of_js x6782)))|]);
                             (match x6777 with
                              | Some x6779 ->
                                  ignore
                                    (Ojs.call x6778 "push"
                                       [|(any_to_js x6779)|])
                              | None -> ());
                             x6778))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x6790 : 'tags this) ->
        fun ~searchElement:(x6786 : float) ->
          fun ?fromIndex:(x6787 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x6792 = this_to_js Obj.magic x6790 in
                 Ojs.call (Ojs.get_prop_ascii x6792 "indexOf") "apply"
                   [|x6792;((let x6788 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6788 "push"
                                  [|(Ojs.float_to_js x6786)|]);
                             (match x6787 with
                              | Some x6789 ->
                                  ignore
                                    (Ojs.call x6788 "push"
                                       [|(Ojs.float_to_js x6789)|])
                              | None -> ());
                             x6788))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x6796 : 'tags this) ->
        fun ?separator:(x6793 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x6798 = this_to_js Obj.magic x6796 in
               Ojs.call (Ojs.get_prop_ascii x6798 "join") "apply"
                 [|x6798;((let x6794 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6793 with
                            | Some x6795 ->
                                ignore
                                  (Ojs.call x6794 "push"
                                     [|(Ojs.string_to_js x6795)|])
                            | None -> ());
                           x6794))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x6803 : 'tags this) ->
        fun ~searchElement:(x6799 : float) ->
          fun ?fromIndex:(x6800 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x6805 = this_to_js Obj.magic x6803 in
                 Ojs.call (Ojs.get_prop_ascii x6805 "lastIndexOf") "apply"
                   [|x6805;((let x6801 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6801 "push"
                                  [|(Ojs.float_to_js x6799)|]);
                             (match x6800 with
                              | Some x6802 ->
                                  ignore
                                    (Ojs.call x6801 "push"
                                       [|(Ojs.float_to_js x6802)|])
                              | None -> ());
                             x6801))|])
    let (get_length : 'tags this -> float) =
      fun (x6806 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6806) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x6815 : 'tags this) ->
        fun
          ~callbackfn:(x6808 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x6809 : any option) ->
            fun () ->
              t_of_js
                (let x6817 = this_to_js Obj.magic x6815 in
                 Ojs.call (Ojs.get_prop_ascii x6817 "map") "apply"
                   [|x6817;((let x6810 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6810 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6812 : Ojs.t) ->
                                          fun (x6813 : Ojs.t) ->
                                            fun (x6814 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x6808
                                                   ~value:(Ojs.float_of_js
                                                             x6812)
                                                   ~index:(Ojs.float_of_js
                                                             x6813)
                                                   ~array:(t_of_js x6814))))|]);
                             (match x6809 with
                              | Some x6811 ->
                                  ignore
                                    (Ojs.call x6810 "push"
                                       [|(any_to_js x6811)|])
                              | None -> ());
                             x6810))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x6823 : 'tags this) ->
        fun
          ~callbackfn:(x6818 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6823) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x6819 : Ojs.t) ->
                       fun (x6820 : Ojs.t) ->
                         fun (x6821 : Ojs.t) ->
                           fun (x6822 : Ojs.t) ->
                             Ojs.float_to_js
                               (x6818 ~previousValue:(Ojs.float_of_js x6819)
                                  ~currentValue:(Ojs.float_of_js x6820)
                                  ~currentIndex:(Ojs.float_of_js x6821)
                                  ~array:(t_of_js x6822))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x6831 : 'tags this) ->
        fun
          ~callbackfn:(x6825 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x6830 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x6831) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x6826 : Ojs.t) ->
                         fun (x6827 : Ojs.t) ->
                           fun (x6828 : Ojs.t) ->
                             fun (x6829 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x6825
                                    ~previousValue:(Ojs.float_of_js x6826)
                                    ~currentValue:(Ojs.float_of_js x6827)
                                    ~currentIndex:(Ojs.float_of_js x6828)
                                    ~array:(t_of_js x6829))));(Ojs.float_to_js
                                                                 x6830)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x6839 : 'tags this) ->
        fun
          ~callbackfn:(x6833 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x6838 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x6839) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x6834 : Ojs.t) ->
                         fun (x6835 : Ojs.t) ->
                           fun (x6836 : Ojs.t) ->
                             fun (x6837 : Ojs.t) ->
                               Obj.magic
                                 (x6833 ~previousValue:(Obj.magic x6834)
                                    ~currentValue:(Ojs.float_of_js x6835)
                                    ~currentIndex:(Ojs.float_of_js x6836)
                                    ~array:(t_of_js x6837))));(Obj.magic
                                                                 x6838)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x6846 : 'tags this) ->
        fun
          ~callbackfn:(x6841 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6846) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x6842 : Ojs.t) ->
                       fun (x6843 : Ojs.t) ->
                         fun (x6844 : Ojs.t) ->
                           fun (x6845 : Ojs.t) ->
                             Ojs.float_to_js
                               (x6841 ~previousValue:(Ojs.float_of_js x6842)
                                  ~currentValue:(Ojs.float_of_js x6843)
                                  ~currentIndex:(Ojs.float_of_js x6844)
                                  ~array:(t_of_js x6845))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x6854 : 'tags this) ->
        fun
          ~callbackfn:(x6848 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x6853 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x6854) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x6849 : Ojs.t) ->
                         fun (x6850 : Ojs.t) ->
                           fun (x6851 : Ojs.t) ->
                             fun (x6852 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x6848
                                    ~previousValue:(Ojs.float_of_js x6849)
                                    ~currentValue:(Ojs.float_of_js x6850)
                                    ~currentIndex:(Ojs.float_of_js x6851)
                                    ~array:(t_of_js x6852))));(Ojs.float_to_js
                                                                 x6853)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x6862 : 'tags this) ->
        fun
          ~callbackfn:(x6856 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x6861 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x6862) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x6857 : Ojs.t) ->
                         fun (x6858 : Ojs.t) ->
                           fun (x6859 : Ojs.t) ->
                             fun (x6860 : Ojs.t) ->
                               Obj.magic
                                 (x6856 ~previousValue:(Obj.magic x6857)
                                    ~currentValue:(Ojs.float_of_js x6858)
                                    ~currentIndex:(Ojs.float_of_js x6859)
                                    ~array:(t_of_js x6860))));(Obj.magic
                                                                 x6861)|])
    let (reverse : 'tags this -> t) =
      fun (x6864 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x6864) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x6871 : 'tags this) ->
        fun ~array:(x6866 : float ArrayLike.t) ->
          fun ?offset:(x6867 : float option) ->
            fun () ->
              ignore
                (let x6873 = this_to_js Obj.magic x6871 in
                 Ojs.call (Ojs.get_prop_ascii x6873 "set") "apply"
                   [|x6873;((let x6868 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6868 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x6866)|]);
                             (match x6867 with
                              | Some x6869 ->
                                  ignore
                                    (Ojs.call x6868 "push"
                                       [|(Ojs.float_to_js x6869)|])
                              | None -> ());
                             x6868))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x6879 : 'tags this) ->
        fun ?start:(x6874 : float option) ->
          fun ?end_:(x6875 : float option) ->
            fun () ->
              t_of_js
                (let x6881 = this_to_js Obj.magic x6879 in
                 Ojs.call (Ojs.get_prop_ascii x6881 "slice") "apply"
                   [|x6881;((let x6876 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x6874 with
                              | Some x6878 ->
                                  ignore
                                    (Ojs.call x6876 "push"
                                       [|(Ojs.float_to_js x6878)|])
                              | None -> ());
                             (match x6875 with
                              | Some x6877 ->
                                  ignore
                                    (Ojs.call x6876 "push"
                                       [|(Ojs.float_to_js x6877)|])
                              | None -> ());
                             x6876))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x6889 : 'tags this) ->
        fun
          ~predicate:(x6882 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x6883 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6891 = this_to_js Obj.magic x6889 in
                 Ojs.call (Ojs.get_prop_ascii x6891 "some") "apply"
                   [|x6891;((let x6884 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6884 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6886 : Ojs.t) ->
                                          fun (x6887 : Ojs.t) ->
                                            fun (x6888 : Ojs.t) ->
                                              unknown_to_js
                                                (x6882
                                                   ~value:(Ojs.float_of_js
                                                             x6886)
                                                   ~index:(Ojs.float_of_js
                                                             x6887)
                                                   ~array:(t_of_js x6888))))|]);
                             (match x6883 with
                              | Some x6885 ->
                                  ignore
                                    (Ojs.call x6884 "push"
                                       [|(any_to_js x6885)|])
                              | None -> ());
                             x6884))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x6897 : 'tags this) ->
        fun ?compareFn:(x6892 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x6899 = this_to_js Obj.magic x6897 in
               Ojs.call (Ojs.get_prop_ascii x6899 "sort") "apply"
                 [|x6899;((let x6893 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6892 with
                            | Some x6894 ->
                                ignore
                                  (Ojs.call x6893 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x6895 : Ojs.t) ->
                                             fun (x6896 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x6894
                                                    ~a:(Ojs.float_of_js x6895)
                                                    ~b:(Ojs.float_of_js x6896))))|])
                            | None -> ());
                           x6893))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x6906 : 'tags this) ->
        fun ?begin_:(x6901 : float option) ->
          fun ?end_:(x6902 : float option) ->
            fun () ->
              t_of_js
                (let x6908 = this_to_js Obj.magic x6906 in
                 Ojs.call (Ojs.get_prop_ascii x6908 "subarray") "apply"
                   [|x6908;((let x6903 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x6901 with
                              | Some x6905 ->
                                  ignore
                                    (Ojs.call x6903 "push"
                                       [|(Ojs.float_to_js x6905)|])
                              | None -> ());
                             (match x6902 with
                              | Some x6904 ->
                                  ignore
                                    (Ojs.call x6903 "push"
                                       [|(Ojs.float_to_js x6904)|])
                              | None -> ());
                             x6903))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x6909 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x6909) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x6911 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x6911) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x6913 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x6913) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x6915 : 'tags this) ->
        fun (x6917 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x6915)
               (Ojs.float_to_js x6917))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x6918 : 'tags this) ->
        fun (x6920 : float) ->
          fun (x6921 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x6918) (Ojs.float_to_js x6920)
              (Ojs.float_to_js x6921)
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x6922 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x6924 : Ojs.t) ->
             let x6925 = x6924 in
             ((Ojs.float_of_js (Ojs.array_get x6925 0)),
               (Ojs.float_of_js (Ojs.array_get x6925 1))))
          (Ojs.call (this_to_js Obj.magic x6922) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x6926 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x6926) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x6929 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x6929) "values" [||])
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int32Array") [||])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int32Array")
             "prototype")
    let (create' : float -> t) =
      fun (x6932 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int32Array")
             [|(Ojs.float_to_js x6932)|])
    let (create'' : (ArrayBufferLike.t, float ArrayLike.t) union2 -> t) =
      fun (x6933 : (ArrayBufferLike.t, float ArrayLike.t) union2) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int32Array")
             [|(union2_to_js ArrayBufferLike.t_to_js
                  (fun (x6935 : float ArrayLike.t) ->
                     ArrayLike.t_to_js Ojs.float_to_js x6935) x6933)|])
    let (create''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x6937 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x6938 : float option) ->
          fun ?length:(x6939 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Int32Array")
                   (let x6940 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x6940 "push"
                         [|(ArrayBufferLike.t_to_js x6937)|]);
                    (match x6938 with
                     | Some x6942 ->
                         ignore
                           (Ojs.call x6940 "push" [|(Ojs.float_to_js x6942)|])
                     | None -> ());
                    (match x6939 with
                     | Some x6941 ->
                         ignore
                           (Ojs.call x6940 "push" [|(Ojs.float_to_js x6941)|])
                     | None -> ());
                    x6940))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int32Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x6943 : float list) ->
        t_of_js
          (let x6946 = Ojs.get_prop_ascii Ojs.global "Int32Array" in
           Ojs.call (Ojs.get_prop_ascii x6946 "of") "apply"
             [|x6946;((let x6944 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x6945 : float) ->
                            ignore
                              (Ojs.call x6944 "push"
                                 [|(Ojs.float_to_js x6945)|])) x6943;
                       x6944))|])
    let (from : float ArrayLike.t -> t) =
      fun (x6947 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Int32Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x6947)|])
    let (from' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x6949 : 'T ArrayLike.t) ->
        fun ~mapfn:(x6950 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x6951 : any option) ->
            fun () ->
              t_of_js
                (let x6957 = Ojs.get_prop_ascii Ojs.global "Int32Array" in
                 Ojs.call (Ojs.get_prop_ascii x6957 "from") "apply"
                   [|x6957;((let x6952 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6952 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x6949)|]);
                             ignore
                               (Ojs.call x6952 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x6954 : Ojs.t) ->
                                          fun (x6955 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x6950 ~v:(Obj.magic x6954)
                                                 ~k:(Ojs.float_of_js x6955))))|]);
                             (match x6951 with
                              | Some x6953 ->
                                  ignore
                                    (Ojs.call x6952 "push"
                                       [|(any_to_js x6953)|])
                              | None -> ());
                             x6952))|])
    let (create'''' : float Iterable.t -> t) =
      fun (x6958 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int32Array")
             [|(Iterable.t_to_js Ojs.float_to_js x6958)|])
    let (from'' :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x6960 : float Iterable.t) ->
        fun ?mapfn:(x6961 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x6962 : any option) ->
            fun () ->
              t_of_js
                (let x6969 = Ojs.get_prop_ascii Ojs.global "Int32Array" in
                 Ojs.call (Ojs.get_prop_ascii x6969 "from") "apply"
                   [|x6969;((let x6963 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6963 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x6960)|]);
                             (match x6961 with
                              | Some x6965 ->
                                  ignore
                                    (Ojs.call x6963 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x6966 : Ojs.t) ->
                                               fun (x6967 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x6965
                                                      ~v:(Ojs.float_of_js
                                                            x6966)
                                                      ~k:(Ojs.float_of_js
                                                            x6967))))|])
                              | None -> ());
                             (match x6962 with
                              | Some x6964 ->
                                  ignore
                                    (Ojs.call x6963 "push"
                                       [|(any_to_js x6964)|])
                              | None -> ());
                             x6963))|])
    let cast_from = Obj.magic
  end
module Int16Array =
  struct
    type t =
      [ `ArrayLike of float  | `Int16Array  | `IterableIterator of float 
      | `Iterator of (float * any * never or_undefined) ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6971 : Ojs.t) -> t_of_js x6971
    and t_0_to_js : t_0 -> Ojs.t = fun (x6970 : t) -> t_to_js x6970
    type tags =
      [ `ArrayLike of float  | `Int16Array  | `IterableIterator of float 
      | `Iterator of (float * any * never or_undefined) ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Int16Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6974 : Ojs.t) -> intf_of_js __tags_of_js x6974
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6972 : __tags intf) -> intf_to_js __tags_to_js x6972
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x6980 : 'tags this) ->
        fun ~searchElement:(x6976 : float) ->
          fun ?fromIndex:(x6977 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6982 = this_to_js Obj.magic x6980 in
                 Ojs.call (Ojs.get_prop_ascii x6982 "includes") "apply"
                   [|x6982;((let x6978 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6978 "push"
                                  [|(Ojs.float_to_js x6976)|]);
                             (match x6977 with
                              | Some x6979 ->
                                  ignore
                                    (Ojs.call x6978 "push"
                                       [|(Ojs.float_to_js x6979)|])
                              | None -> ());
                             x6978))|])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x6983 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6983)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x6985 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6985) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x6987 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6987) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x6989 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6989) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x6996 : 'tags this) ->
        fun ~target:(x6991 : float) ->
          fun ~start:(x6992 : float) ->
            fun ?end_:(x6993 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x6998 = this_to_js Obj.magic x6996 in
                   Ojs.call (Ojs.get_prop_ascii x6998 "copyWithin") "apply"
                     [|x6998;((let x6994 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6994 "push"
                                    [|(Ojs.float_to_js x6991)|]);
                               ignore
                                 (Ojs.call x6994 "push"
                                    [|(Ojs.float_to_js x6992)|]);
                               (match x6993 with
                                | Some x6995 ->
                                    ignore
                                      (Ojs.call x6994 "push"
                                         [|(Ojs.float_to_js x6995)|])
                                | None -> ());
                               x6994))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7007 : 'tags this) ->
        fun
          ~predicate:(x7000 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7001 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7009 = this_to_js Obj.magic x7007 in
                 Ojs.call (Ojs.get_prop_ascii x7009 "every") "apply"
                   [|x7009;((let x7002 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7002 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7004 : Ojs.t) ->
                                          fun (x7005 : Ojs.t) ->
                                            fun (x7006 : Ojs.t) ->
                                              unknown_to_js
                                                (x7000
                                                   ~value:(Ojs.float_of_js
                                                             x7004)
                                                   ~index:(Ojs.float_of_js
                                                             x7005)
                                                   ~array:(t_of_js x7006))))|]);
                             (match x7001 with
                              | Some x7003 ->
                                  ignore
                                    (Ojs.call x7002 "push"
                                       [|(any_to_js x7003)|])
                              | None -> ());
                             x7002))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7016 : 'tags this) ->
        fun ~value:(x7010 : float) ->
          fun ?start:(x7011 : float option) ->
            fun ?end_:(x7012 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7018 = this_to_js Obj.magic x7016 in
                   Ojs.call (Ojs.get_prop_ascii x7018 "fill") "apply"
                     [|x7018;((let x7013 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7013 "push"
                                    [|(Ojs.float_to_js x7010)|]);
                               (match x7011 with
                                | Some x7015 ->
                                    ignore
                                      (Ojs.call x7013 "push"
                                         [|(Ojs.float_to_js x7015)|])
                                | None -> ());
                               (match x7012 with
                                | Some x7014 ->
                                    ignore
                                      (Ojs.call x7013 "push"
                                         [|(Ojs.float_to_js x7014)|])
                                | None -> ());
                               x7013))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7027 : 'tags this) ->
        fun ~predicate:(x7020 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x7021 : any option) ->
            fun () ->
              t_of_js
                (let x7029 = this_to_js Obj.magic x7027 in
                 Ojs.call (Ojs.get_prop_ascii x7029 "filter") "apply"
                   [|x7029;((let x7022 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7022 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7024 : Ojs.t) ->
                                          fun (x7025 : Ojs.t) ->
                                            fun (x7026 : Ojs.t) ->
                                              any_to_js
                                                (x7020
                                                   ~value:(Ojs.float_of_js
                                                             x7024)
                                                   ~index:(Ojs.float_of_js
                                                             x7025)
                                                   ~array:(t_of_js x7026))))|]);
                             (match x7021 with
                              | Some x7023 ->
                                  ignore
                                    (Ojs.call x7022 "push"
                                       [|(any_to_js x7023)|])
                              | None -> ());
                             x7022))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float or_undefined)
      =
      fun (x7037 : 'tags this) ->
        fun ~predicate:(x7030 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7031 : any option) ->
            fun () ->
              or_undefined_of_js Ojs.float_of_js
                (let x7039 = this_to_js Obj.magic x7037 in
                 Ojs.call (Ojs.get_prop_ascii x7039 "find") "apply"
                   [|x7039;((let x7032 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7032 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7034 : Ojs.t) ->
                                          fun (x7035 : Ojs.t) ->
                                            fun (x7036 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7030
                                                   ~value:(Ojs.float_of_js
                                                             x7034)
                                                   ~index:(Ojs.float_of_js
                                                             x7035)
                                                   ~obj:(t_of_js x7036))))|]);
                             (match x7031 with
                              | Some x7033 ->
                                  ignore
                                    (Ojs.call x7032 "push"
                                       [|(any_to_js x7033)|])
                              | None -> ());
                             x7032))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x7048 : 'tags this) ->
        fun ~predicate:(x7041 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7042 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x7050 = this_to_js Obj.magic x7048 in
                 Ojs.call (Ojs.get_prop_ascii x7050 "findIndex") "apply"
                   [|x7050;((let x7043 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7043 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7045 : Ojs.t) ->
                                          fun (x7046 : Ojs.t) ->
                                            fun (x7047 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7041
                                                   ~value:(Ojs.float_of_js
                                                             x7045)
                                                   ~index:(Ojs.float_of_js
                                                             x7046)
                                                   ~obj:(t_of_js x7047))))|]);
                             (match x7042 with
                              | Some x7044 ->
                                  ignore
                                    (Ojs.call x7043 "push"
                                       [|(any_to_js x7044)|])
                              | None -> ());
                             x7043))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x7058 : 'tags this) ->
        fun
          ~callbackfn:(x7051 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x7052 : any option) ->
            fun () ->
              ignore
                (let x7060 = this_to_js Obj.magic x7058 in
                 Ojs.call (Ojs.get_prop_ascii x7060 "forEach") "apply"
                   [|x7060;((let x7053 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7053 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7055 : Ojs.t) ->
                                          fun (x7056 : Ojs.t) ->
                                            fun (x7057 : Ojs.t) ->
                                              x7051
                                                ~value:(Ojs.float_of_js x7055)
                                                ~index:(Ojs.float_of_js x7056)
                                                ~array:(t_of_js x7057)))|]);
                             (match x7052 with
                              | Some x7054 ->
                                  ignore
                                    (Ojs.call x7053 "push"
                                       [|(any_to_js x7054)|])
                              | None -> ());
                             x7053))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7065 : 'tags this) ->
        fun ~searchElement:(x7061 : float) ->
          fun ?fromIndex:(x7062 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7067 = this_to_js Obj.magic x7065 in
                 Ojs.call (Ojs.get_prop_ascii x7067 "indexOf") "apply"
                   [|x7067;((let x7063 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7063 "push"
                                  [|(Ojs.float_to_js x7061)|]);
                             (match x7062 with
                              | Some x7064 ->
                                  ignore
                                    (Ojs.call x7063 "push"
                                       [|(Ojs.float_to_js x7064)|])
                              | None -> ());
                             x7063))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x7071 : 'tags this) ->
        fun ?separator:(x7068 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x7073 = this_to_js Obj.magic x7071 in
               Ojs.call (Ojs.get_prop_ascii x7073 "join") "apply"
                 [|x7073;((let x7069 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7068 with
                            | Some x7070 ->
                                ignore
                                  (Ojs.call x7069 "push"
                                     [|(Ojs.string_to_js x7070)|])
                            | None -> ());
                           x7069))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7078 : 'tags this) ->
        fun ~searchElement:(x7074 : float) ->
          fun ?fromIndex:(x7075 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7080 = this_to_js Obj.magic x7078 in
                 Ojs.call (Ojs.get_prop_ascii x7080 "lastIndexOf") "apply"
                   [|x7080;((let x7076 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7076 "push"
                                  [|(Ojs.float_to_js x7074)|]);
                             (match x7075 with
                              | Some x7077 ->
                                  ignore
                                    (Ojs.call x7076 "push"
                                       [|(Ojs.float_to_js x7077)|])
                              | None -> ());
                             x7076))|])
    let (get_length : 'tags this -> float) =
      fun (x7081 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7081) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7090 : 'tags this) ->
        fun
          ~callbackfn:(x7083 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x7084 : any option) ->
            fun () ->
              t_of_js
                (let x7092 = this_to_js Obj.magic x7090 in
                 Ojs.call (Ojs.get_prop_ascii x7092 "map") "apply"
                   [|x7092;((let x7085 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7085 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7087 : Ojs.t) ->
                                          fun (x7088 : Ojs.t) ->
                                            fun (x7089 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x7083
                                                   ~value:(Ojs.float_of_js
                                                             x7087)
                                                   ~index:(Ojs.float_of_js
                                                             x7088)
                                                   ~array:(t_of_js x7089))))|]);
                             (match x7084 with
                              | Some x7086 ->
                                  ignore
                                    (Ojs.call x7085 "push"
                                       [|(any_to_js x7086)|])
                              | None -> ());
                             x7085))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7098 : 'tags this) ->
        fun
          ~callbackfn:(x7093 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7098) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x7094 : Ojs.t) ->
                       fun (x7095 : Ojs.t) ->
                         fun (x7096 : Ojs.t) ->
                           fun (x7097 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7093 ~previousValue:(Ojs.float_of_js x7094)
                                  ~currentValue:(Ojs.float_of_js x7095)
                                  ~currentIndex:(Ojs.float_of_js x7096)
                                  ~array:(t_of_js x7097))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7106 : 'tags this) ->
        fun
          ~callbackfn:(x7100 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7105 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7106) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7101 : Ojs.t) ->
                         fun (x7102 : Ojs.t) ->
                           fun (x7103 : Ojs.t) ->
                             fun (x7104 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7100
                                    ~previousValue:(Ojs.float_of_js x7101)
                                    ~currentValue:(Ojs.float_of_js x7102)
                                    ~currentIndex:(Ojs.float_of_js x7103)
                                    ~array:(t_of_js x7104))));(Ojs.float_to_js
                                                                 x7105)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7114 : 'tags this) ->
        fun
          ~callbackfn:(x7108 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7113 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7114) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7109 : Ojs.t) ->
                         fun (x7110 : Ojs.t) ->
                           fun (x7111 : Ojs.t) ->
                             fun (x7112 : Ojs.t) ->
                               Obj.magic
                                 (x7108 ~previousValue:(Obj.magic x7109)
                                    ~currentValue:(Ojs.float_of_js x7110)
                                    ~currentIndex:(Ojs.float_of_js x7111)
                                    ~array:(t_of_js x7112))));(Obj.magic
                                                                 x7113)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7121 : 'tags this) ->
        fun
          ~callbackfn:(x7116 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7121) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x7117 : Ojs.t) ->
                       fun (x7118 : Ojs.t) ->
                         fun (x7119 : Ojs.t) ->
                           fun (x7120 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7116 ~previousValue:(Ojs.float_of_js x7117)
                                  ~currentValue:(Ojs.float_of_js x7118)
                                  ~currentIndex:(Ojs.float_of_js x7119)
                                  ~array:(t_of_js x7120))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7129 : 'tags this) ->
        fun
          ~callbackfn:(x7123 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7128 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7129) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7124 : Ojs.t) ->
                         fun (x7125 : Ojs.t) ->
                           fun (x7126 : Ojs.t) ->
                             fun (x7127 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7123
                                    ~previousValue:(Ojs.float_of_js x7124)
                                    ~currentValue:(Ojs.float_of_js x7125)
                                    ~currentIndex:(Ojs.float_of_js x7126)
                                    ~array:(t_of_js x7127))));(Ojs.float_to_js
                                                                 x7128)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7137 : 'tags this) ->
        fun
          ~callbackfn:(x7131 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7136 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7137) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7132 : Ojs.t) ->
                         fun (x7133 : Ojs.t) ->
                           fun (x7134 : Ojs.t) ->
                             fun (x7135 : Ojs.t) ->
                               Obj.magic
                                 (x7131 ~previousValue:(Obj.magic x7132)
                                    ~currentValue:(Ojs.float_of_js x7133)
                                    ~currentIndex:(Ojs.float_of_js x7134)
                                    ~array:(t_of_js x7135))));(Obj.magic
                                                                 x7136)|])
    let (reverse : 'tags this -> t) =
      fun (x7139 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7139) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x7146 : 'tags this) ->
        fun ~array:(x7141 : float ArrayLike.t) ->
          fun ?offset:(x7142 : float option) ->
            fun () ->
              ignore
                (let x7148 = this_to_js Obj.magic x7146 in
                 Ojs.call (Ojs.get_prop_ascii x7148 "set") "apply"
                   [|x7148;((let x7143 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7143 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x7141)|]);
                             (match x7142 with
                              | Some x7144 ->
                                  ignore
                                    (Ojs.call x7143 "push"
                                       [|(Ojs.float_to_js x7144)|])
                              | None -> ());
                             x7143))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x7154 : 'tags this) ->
        fun ?start:(x7149 : float option) ->
          fun ?end_:(x7150 : float option) ->
            fun () ->
              t_of_js
                (let x7156 = this_to_js Obj.magic x7154 in
                 Ojs.call (Ojs.get_prop_ascii x7156 "slice") "apply"
                   [|x7156;((let x7151 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7149 with
                              | Some x7153 ->
                                  ignore
                                    (Ojs.call x7151 "push"
                                       [|(Ojs.float_to_js x7153)|])
                              | None -> ());
                             (match x7150 with
                              | Some x7152 ->
                                  ignore
                                    (Ojs.call x7151 "push"
                                       [|(Ojs.float_to_js x7152)|])
                              | None -> ());
                             x7151))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7164 : 'tags this) ->
        fun
          ~predicate:(x7157 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7158 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7166 = this_to_js Obj.magic x7164 in
                 Ojs.call (Ojs.get_prop_ascii x7166 "some") "apply"
                   [|x7166;((let x7159 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7159 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7161 : Ojs.t) ->
                                          fun (x7162 : Ojs.t) ->
                                            fun (x7163 : Ojs.t) ->
                                              unknown_to_js
                                                (x7157
                                                   ~value:(Ojs.float_of_js
                                                             x7161)
                                                   ~index:(Ojs.float_of_js
                                                             x7162)
                                                   ~array:(t_of_js x7163))))|]);
                             (match x7158 with
                              | Some x7160 ->
                                  ignore
                                    (Ojs.call x7159 "push"
                                       [|(any_to_js x7160)|])
                              | None -> ());
                             x7159))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x7172 : 'tags this) ->
        fun ?compareFn:(x7167 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x7174 = this_to_js Obj.magic x7172 in
               Ojs.call (Ojs.get_prop_ascii x7174 "sort") "apply"
                 [|x7174;((let x7168 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7167 with
                            | Some x7169 ->
                                ignore
                                  (Ojs.call x7168 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x7170 : Ojs.t) ->
                                             fun (x7171 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x7169
                                                    ~a:(Ojs.float_of_js x7170)
                                                    ~b:(Ojs.float_of_js x7171))))|])
                            | None -> ());
                           x7168))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x7181 : 'tags this) ->
        fun ?begin_:(x7176 : float option) ->
          fun ?end_:(x7177 : float option) ->
            fun () ->
              t_of_js
                (let x7183 = this_to_js Obj.magic x7181 in
                 Ojs.call (Ojs.get_prop_ascii x7183 "subarray") "apply"
                   [|x7183;((let x7178 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7176 with
                              | Some x7180 ->
                                  ignore
                                    (Ojs.call x7178 "push"
                                       [|(Ojs.float_to_js x7180)|])
                              | None -> ());
                             (match x7177 with
                              | Some x7179 ->
                                  ignore
                                    (Ojs.call x7178 "push"
                                       [|(Ojs.float_to_js x7179)|])
                              | None -> ());
                             x7178))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x7184 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7184) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x7186 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7186) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x7188 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7188) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x7190 : 'tags this) ->
        fun (x7192 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x7190)
               (Ojs.float_to_js x7192))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x7193 : 'tags this) ->
        fun (x7195 : float) ->
          fun (x7196 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x7193) (Ojs.float_to_js x7195)
              (Ojs.float_to_js x7196)
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x7197 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x7199 : Ojs.t) ->
             let x7200 = x7199 in
             ((Ojs.float_of_js (Ojs.array_get x7200 0)),
               (Ojs.float_of_js (Ojs.array_get x7200 1))))
          (Ojs.call (this_to_js Obj.magic x7197) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x7201 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7201) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x7204 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7204) "values" [||])
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int16Array") [||])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int16Array")
             "prototype")
    let (create' : float -> t) =
      fun (x7207 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int16Array")
             [|(Ojs.float_to_js x7207)|])
    let (create'' : (ArrayBufferLike.t, float ArrayLike.t) union2 -> t) =
      fun (x7208 : (ArrayBufferLike.t, float ArrayLike.t) union2) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int16Array")
             [|(union2_to_js ArrayBufferLike.t_to_js
                  (fun (x7210 : float ArrayLike.t) ->
                     ArrayLike.t_to_js Ojs.float_to_js x7210) x7208)|])
    let (create''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x7212 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x7213 : float option) ->
          fun ?length:(x7214 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Int16Array")
                   (let x7215 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x7215 "push"
                         [|(ArrayBufferLike.t_to_js x7212)|]);
                    (match x7213 with
                     | Some x7217 ->
                         ignore
                           (Ojs.call x7215 "push" [|(Ojs.float_to_js x7217)|])
                     | None -> ());
                    (match x7214 with
                     | Some x7216 ->
                         ignore
                           (Ojs.call x7215 "push" [|(Ojs.float_to_js x7216)|])
                     | None -> ());
                    x7215))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int16Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x7218 : float list) ->
        t_of_js
          (let x7221 = Ojs.get_prop_ascii Ojs.global "Int16Array" in
           Ojs.call (Ojs.get_prop_ascii x7221 "of") "apply"
             [|x7221;((let x7219 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x7220 : float) ->
                            ignore
                              (Ojs.call x7219 "push"
                                 [|(Ojs.float_to_js x7220)|])) x7218;
                       x7219))|])
    let (from : float ArrayLike.t -> t) =
      fun (x7222 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Int16Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x7222)|])
    let (from' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7224 : 'T ArrayLike.t) ->
        fun ~mapfn:(x7225 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x7226 : any option) ->
            fun () ->
              t_of_js
                (let x7232 = Ojs.get_prop_ascii Ojs.global "Int16Array" in
                 Ojs.call (Ojs.get_prop_ascii x7232 "from") "apply"
                   [|x7232;((let x7227 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7227 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x7224)|]);
                             ignore
                               (Ojs.call x7227 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x7229 : Ojs.t) ->
                                          fun (x7230 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x7225 ~v:(Obj.magic x7229)
                                                 ~k:(Ojs.float_of_js x7230))))|]);
                             (match x7226 with
                              | Some x7228 ->
                                  ignore
                                    (Ojs.call x7227 "push"
                                       [|(any_to_js x7228)|])
                              | None -> ());
                             x7227))|])
    let (create'''' : float Iterable.t -> t) =
      fun (x7233 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int16Array")
             [|(Iterable.t_to_js Ojs.float_to_js x7233)|])
    let (from'' :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7235 : float Iterable.t) ->
        fun ?mapfn:(x7236 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x7237 : any option) ->
            fun () ->
              t_of_js
                (let x7244 = Ojs.get_prop_ascii Ojs.global "Int16Array" in
                 Ojs.call (Ojs.get_prop_ascii x7244 "from") "apply"
                   [|x7244;((let x7238 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7238 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x7235)|]);
                             (match x7236 with
                              | Some x7240 ->
                                  ignore
                                    (Ojs.call x7238 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x7241 : Ojs.t) ->
                                               fun (x7242 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x7240
                                                      ~v:(Ojs.float_of_js
                                                            x7241)
                                                      ~k:(Ojs.float_of_js
                                                            x7242))))|])
                              | None -> ());
                             (match x7237 with
                              | Some x7239 ->
                                  ignore
                                    (Ojs.call x7238 "push"
                                       [|(any_to_js x7239)|])
                              | None -> ());
                             x7238))|])
    let cast_from = Obj.magic
  end
module BigUint64Array =
  struct
    type t =
      [ `ArrayLike of bigint  | `BigUint64Array 
      | `IterableIterator of bigint 
      | `Iterator of (bigint * any * never or_undefined) ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x7246 : Ojs.t) -> t_of_js x7246
    and t_0_to_js : t_0 -> Ojs.t = fun (x7245 : t) -> t_to_js x7245
    type tags =
      [ `ArrayLike of bigint  | `BigUint64Array 
      | `IterableIterator of bigint 
      | `Iterator of (bigint * any * never or_undefined) ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `BigUint64Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x7249 : Ojs.t) -> intf_of_js __tags_of_js x7249
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x7247 : __tags intf) -> intf_to_js __tags_to_js x7247
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x7251 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7251)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x7253 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7253) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x7255 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7255) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x7257 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7257) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7264 : 'tags this) ->
        fun ~target:(x7259 : float) ->
          fun ~start:(x7260 : float) ->
            fun ?end_:(x7261 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7266 = this_to_js Obj.magic x7264 in
                   Ojs.call (Ojs.get_prop_ascii x7266 "copyWithin") "apply"
                     [|x7266;((let x7262 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7262 "push"
                                    [|(Ojs.float_to_js x7259)|]);
                               ignore
                                 (Ojs.call x7262 "push"
                                    [|(Ojs.float_to_js x7260)|]);
                               (match x7261 with
                                | Some x7263 ->
                                    ignore
                                      (Ojs.call x7262 "push"
                                         [|(Ojs.float_to_js x7263)|])
                                | None -> ());
                               x7262))|])
    let (entries : 'tags this -> (float * bigint) IterableIterator.t) =
      fun (x7268 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x7270 : Ojs.t) ->
             let x7271 = x7270 in
             ((Ojs.float_of_js (Ojs.array_get x7271 0)),
               (bigint_of_js (Ojs.array_get x7271 1))))
          (Ojs.call (this_to_js Obj.magic x7268) "entries" [||])
    let (every :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7279 : 'tags this) ->
        fun
          ~predicate:(x7272 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x7273 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7281 = this_to_js Obj.magic x7279 in
                 Ojs.call (Ojs.get_prop_ascii x7281 "every") "apply"
                   [|x7281;((let x7274 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7274 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7276 : Ojs.t) ->
                                          fun (x7277 : Ojs.t) ->
                                            fun (x7278 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7272
                                                   ~value:(bigint_of_js x7276)
                                                   ~index:(Ojs.float_of_js
                                                             x7277)
                                                   ~array:(t_of_js x7278))))|]);
                             (match x7273 with
                              | Some x7275 ->
                                  ignore
                                    (Ojs.call x7274 "push"
                                       [|(any_to_js x7275)|])
                              | None -> ());
                             x7274))|])
    let (fill :
      'tags this ->
        value:bigint -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7288 : 'tags this) ->
        fun ~value:(x7282 : bigint) ->
          fun ?start:(x7283 : float option) ->
            fun ?end_:(x7284 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7290 = this_to_js Obj.magic x7288 in
                   Ojs.call (Ojs.get_prop_ascii x7290 "fill") "apply"
                     [|x7290;((let x7285 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7285 "push"
                                    [|(bigint_to_js x7282)|]);
                               (match x7283 with
                                | Some x7287 ->
                                    ignore
                                      (Ojs.call x7285 "push"
                                         [|(Ojs.float_to_js x7287)|])
                                | None -> ());
                               (match x7284 with
                                | Some x7286 ->
                                    ignore
                                      (Ojs.call x7285 "push"
                                         [|(Ojs.float_to_js x7286)|])
                                | None -> ());
                               x7285))|])
    let (filter :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7299 : 'tags this) ->
        fun
          ~predicate:(x7292 : value:bigint -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x7293 : any option) ->
            fun () ->
              t_of_js
                (let x7301 = this_to_js Obj.magic x7299 in
                 Ojs.call (Ojs.get_prop_ascii x7301 "filter") "apply"
                   [|x7301;((let x7294 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7294 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7296 : Ojs.t) ->
                                          fun (x7297 : Ojs.t) ->
                                            fun (x7298 : Ojs.t) ->
                                              any_to_js
                                                (x7292
                                                   ~value:(bigint_of_js x7296)
                                                   ~index:(Ojs.float_of_js
                                                             x7297)
                                                   ~array:(t_of_js x7298))))|]);
                             (match x7293 with
                              | Some x7295 ->
                                  ignore
                                    (Ojs.call x7294 "push"
                                       [|(any_to_js x7295)|])
                              | None -> ());
                             x7294))|])
    let (find :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bigint or_undefined)
      =
      fun (x7309 : 'tags this) ->
        fun
          ~predicate:(x7302 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x7303 : any option) ->
            fun () ->
              or_undefined_of_js bigint_of_js
                (let x7311 = this_to_js Obj.magic x7309 in
                 Ojs.call (Ojs.get_prop_ascii x7311 "find") "apply"
                   [|x7311;((let x7304 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7304 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7306 : Ojs.t) ->
                                          fun (x7307 : Ojs.t) ->
                                            fun (x7308 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7302
                                                   ~value:(bigint_of_js x7306)
                                                   ~index:(Ojs.float_of_js
                                                             x7307)
                                                   ~array:(t_of_js x7308))))|]);
                             (match x7303 with
                              | Some x7305 ->
                                  ignore
                                    (Ojs.call x7304 "push"
                                       [|(any_to_js x7305)|])
                              | None -> ());
                             x7304))|])
    let (findIndex :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x7320 : 'tags this) ->
        fun
          ~predicate:(x7313 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x7314 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x7322 = this_to_js Obj.magic x7320 in
                 Ojs.call (Ojs.get_prop_ascii x7322 "findIndex") "apply"
                   [|x7322;((let x7315 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7315 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7317 : Ojs.t) ->
                                          fun (x7318 : Ojs.t) ->
                                            fun (x7319 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7313
                                                   ~value:(bigint_of_js x7317)
                                                   ~index:(Ojs.float_of_js
                                                             x7318)
                                                   ~array:(t_of_js x7319))))|]);
                             (match x7314 with
                              | Some x7316 ->
                                  ignore
                                    (Ojs.call x7315 "push"
                                       [|(any_to_js x7316)|])
                              | None -> ());
                             x7315))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:bigint -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x7330 : 'tags this) ->
        fun
          ~callbackfn:(x7323 :
                        value:bigint -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x7324 : any option) ->
            fun () ->
              ignore
                (let x7332 = this_to_js Obj.magic x7330 in
                 Ojs.call (Ojs.get_prop_ascii x7332 "forEach") "apply"
                   [|x7332;((let x7325 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7325 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7327 : Ojs.t) ->
                                          fun (x7328 : Ojs.t) ->
                                            fun (x7329 : Ojs.t) ->
                                              x7323
                                                ~value:(bigint_of_js x7327)
                                                ~index:(Ojs.float_of_js x7328)
                                                ~array:(t_of_js x7329)))|]);
                             (match x7324 with
                              | Some x7326 ->
                                  ignore
                                    (Ojs.call x7325 "push"
                                       [|(any_to_js x7326)|])
                              | None -> ());
                             x7325))|])
    let (includes :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> bool)
      =
      fun (x7337 : 'tags this) ->
        fun ~searchElement:(x7333 : bigint) ->
          fun ?fromIndex:(x7334 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7339 = this_to_js Obj.magic x7337 in
                 Ojs.call (Ojs.get_prop_ascii x7339 "includes") "apply"
                   [|x7339;((let x7335 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7335 "push"
                                  [|(bigint_to_js x7333)|]);
                             (match x7334 with
                              | Some x7336 ->
                                  ignore
                                    (Ojs.call x7335 "push"
                                       [|(Ojs.float_to_js x7336)|])
                              | None -> ());
                             x7335))|])
    let (indexOf :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> float)
      =
      fun (x7344 : 'tags this) ->
        fun ~searchElement:(x7340 : bigint) ->
          fun ?fromIndex:(x7341 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7346 = this_to_js Obj.magic x7344 in
                 Ojs.call (Ojs.get_prop_ascii x7346 "indexOf") "apply"
                   [|x7346;((let x7342 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7342 "push"
                                  [|(bigint_to_js x7340)|]);
                             (match x7341 with
                              | Some x7343 ->
                                  ignore
                                    (Ojs.call x7342 "push"
                                       [|(Ojs.float_to_js x7343)|])
                              | None -> ());
                             x7342))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x7350 : 'tags this) ->
        fun ?separator:(x7347 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x7352 = this_to_js Obj.magic x7350 in
               Ojs.call (Ojs.get_prop_ascii x7352 "join") "apply"
                 [|x7352;((let x7348 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7347 with
                            | Some x7349 ->
                                ignore
                                  (Ojs.call x7348 "push"
                                     [|(Ojs.string_to_js x7349)|])
                            | None -> ());
                           x7348))|])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x7353 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7353) "keys" [||])
    let (lastIndexOf :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> float)
      =
      fun (x7360 : 'tags this) ->
        fun ~searchElement:(x7356 : bigint) ->
          fun ?fromIndex:(x7357 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7362 = this_to_js Obj.magic x7360 in
                 Ojs.call (Ojs.get_prop_ascii x7362 "lastIndexOf") "apply"
                   [|x7362;((let x7358 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7358 "push"
                                  [|(bigint_to_js x7356)|]);
                             (match x7357 with
                              | Some x7359 ->
                                  ignore
                                    (Ojs.call x7358 "push"
                                       [|(Ojs.float_to_js x7359)|])
                              | None -> ());
                             x7358))|])
    let (get_length : 'tags this -> float) =
      fun (x7363 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7363) "length")
    let (map :
      'tags this ->
        callbackfn:(value:bigint -> index:float -> array:t -> bigint) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7372 : 'tags this) ->
        fun
          ~callbackfn:(x7365 :
                        value:bigint -> index:float -> array:t -> bigint)
          ->
          fun ?thisArg:(x7366 : any option) ->
            fun () ->
              t_of_js
                (let x7374 = this_to_js Obj.magic x7372 in
                 Ojs.call (Ojs.get_prop_ascii x7374 "map") "apply"
                   [|x7374;((let x7367 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7367 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7369 : Ojs.t) ->
                                          fun (x7370 : Ojs.t) ->
                                            fun (x7371 : Ojs.t) ->
                                              bigint_to_js
                                                (x7365
                                                   ~value:(bigint_of_js x7369)
                                                   ~index:(Ojs.float_of_js
                                                             x7370)
                                                   ~array:(t_of_js x7371))))|]);
                             (match x7366 with
                              | Some x7368 ->
                                  ignore
                                    (Ojs.call x7367 "push"
                                       [|(any_to_js x7368)|])
                              | None -> ());
                             x7367))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:bigint ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> bigint)
          -> bigint)
      =
      fun (x7380 : 'tags this) ->
        fun
          ~callbackfn:(x7375 :
                        previousValue:bigint ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> bigint)
          ->
          bigint_of_js
            (Ojs.call (this_to_js Obj.magic x7380) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x7376 : Ojs.t) ->
                       fun (x7377 : Ojs.t) ->
                         fun (x7378 : Ojs.t) ->
                           fun (x7379 : Ojs.t) ->
                             bigint_to_js
                               (x7375 ~previousValue:(bigint_of_js x7376)
                                  ~currentValue:(bigint_of_js x7377)
                                  ~currentIndex:(Ojs.float_of_js x7378)
                                  ~array:(t_of_js x7379))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7388 : 'tags this) ->
        fun
          ~callbackfn:(x7382 :
                        previousValue:'U ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7387 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7388) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7383 : Ojs.t) ->
                         fun (x7384 : Ojs.t) ->
                           fun (x7385 : Ojs.t) ->
                             fun (x7386 : Ojs.t) ->
                               Obj.magic
                                 (x7382 ~previousValue:(Obj.magic x7383)
                                    ~currentValue:(bigint_of_js x7384)
                                    ~currentIndex:(Ojs.float_of_js x7385)
                                    ~array:(t_of_js x7386))));(Obj.magic
                                                                 x7387)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:bigint ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> bigint)
          -> bigint)
      =
      fun (x7395 : 'tags this) ->
        fun
          ~callbackfn:(x7390 :
                        previousValue:bigint ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> bigint)
          ->
          bigint_of_js
            (Ojs.call (this_to_js Obj.magic x7395) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x7391 : Ojs.t) ->
                       fun (x7392 : Ojs.t) ->
                         fun (x7393 : Ojs.t) ->
                           fun (x7394 : Ojs.t) ->
                             bigint_to_js
                               (x7390 ~previousValue:(bigint_of_js x7391)
                                  ~currentValue:(bigint_of_js x7392)
                                  ~currentIndex:(Ojs.float_of_js x7393)
                                  ~array:(t_of_js x7394))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7403 : 'tags this) ->
        fun
          ~callbackfn:(x7397 :
                        previousValue:'U ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7402 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7403) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7398 : Ojs.t) ->
                         fun (x7399 : Ojs.t) ->
                           fun (x7400 : Ojs.t) ->
                             fun (x7401 : Ojs.t) ->
                               Obj.magic
                                 (x7397 ~previousValue:(Obj.magic x7398)
                                    ~currentValue:(bigint_of_js x7399)
                                    ~currentIndex:(Ojs.float_of_js x7400)
                                    ~array:(t_of_js x7401))));(Obj.magic
                                                                 x7402)|])
    let (reverse : 'tags this -> 'tags this) =
      fun (x7405 : 'tags this) ->
        this_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic x7405) "reverse" [||])
    let (set_ :
      'tags this -> array:bigint ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x7413 : 'tags this) ->
        fun ~array:(x7408 : bigint ArrayLike.t) ->
          fun ?offset:(x7409 : float option) ->
            fun () ->
              ignore
                (let x7415 = this_to_js Obj.magic x7413 in
                 Ojs.call (Ojs.get_prop_ascii x7415 "set") "apply"
                   [|x7415;((let x7410 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7410 "push"
                                  [|(ArrayLike.t_to_js bigint_to_js x7408)|]);
                             (match x7409 with
                              | Some x7411 ->
                                  ignore
                                    (Ojs.call x7410 "push"
                                       [|(Ojs.float_to_js x7411)|])
                              | None -> ());
                             x7410))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x7421 : 'tags this) ->
        fun ?start:(x7416 : float option) ->
          fun ?end_:(x7417 : float option) ->
            fun () ->
              t_of_js
                (let x7423 = this_to_js Obj.magic x7421 in
                 Ojs.call (Ojs.get_prop_ascii x7423 "slice") "apply"
                   [|x7423;((let x7418 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7416 with
                              | Some x7420 ->
                                  ignore
                                    (Ojs.call x7418 "push"
                                       [|(Ojs.float_to_js x7420)|])
                              | None -> ());
                             (match x7417 with
                              | Some x7419 ->
                                  ignore
                                    (Ojs.call x7418 "push"
                                       [|(Ojs.float_to_js x7419)|])
                              | None -> ());
                             x7418))|])
    let (some :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7431 : 'tags this) ->
        fun
          ~predicate:(x7424 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x7425 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7433 = this_to_js Obj.magic x7431 in
                 Ojs.call (Ojs.get_prop_ascii x7433 "some") "apply"
                   [|x7433;((let x7426 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7426 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7428 : Ojs.t) ->
                                          fun (x7429 : Ojs.t) ->
                                            fun (x7430 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7424
                                                   ~value:(bigint_of_js x7428)
                                                   ~index:(Ojs.float_of_js
                                                             x7429)
                                                   ~array:(t_of_js x7430))))|]);
                             (match x7425 with
                              | Some x7427 ->
                                  ignore
                                    (Ojs.call x7426 "push"
                                       [|(any_to_js x7427)|])
                              | None -> ());
                             x7426))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:bigint -> b:bigint -> bigint or_number) ->
          unit -> 'tags this)
      =
      fun (x7440 : 'tags this) ->
        fun
          ?compareFn:(x7434 :
                       (a:bigint -> b:bigint -> bigint or_number) option)
          ->
          fun () ->
            this_of_js Obj.magic
              (let x7442 = this_to_js Obj.magic x7440 in
               Ojs.call (Ojs.get_prop_ascii x7442 "sort") "apply"
                 [|x7442;((let x7435 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7434 with
                            | Some x7436 ->
                                ignore
                                  (Ojs.call x7435 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x7437 : Ojs.t) ->
                                             fun (x7438 : Ojs.t) ->
                                               or_number_to_js bigint_to_js
                                                 (x7436
                                                    ~a:(bigint_of_js x7437)
                                                    ~b:(bigint_of_js x7438))))|])
                            | None -> ());
                           x7435))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x7449 : 'tags this) ->
        fun ?begin_:(x7444 : float option) ->
          fun ?end_:(x7445 : float option) ->
            fun () ->
              t_of_js
                (let x7451 = this_to_js Obj.magic x7449 in
                 Ojs.call (Ojs.get_prop_ascii x7451 "subarray") "apply"
                   [|x7451;((let x7446 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7444 with
                              | Some x7448 ->
                                  ignore
                                    (Ojs.call x7446 "push"
                                       [|(Ojs.float_to_js x7448)|])
                              | None -> ());
                             (match x7445 with
                              | Some x7447 ->
                                  ignore
                                    (Ojs.call x7446 "push"
                                       [|(Ojs.float_to_js x7447)|])
                              | None -> ());
                             x7446))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x7452 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7452) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x7454 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7454) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x7456 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7456) "valueOf" [||])
    let (values : 'tags this -> bigint IterableIterator.t) =
      fun (x7458 : 'tags this) ->
        IterableIterator.t_of_js bigint_of_js
          (Ojs.call (this_to_js Obj.magic x7458) "values" [||])
    let (get : 'tags this -> float -> bigint) =
      fun (x7461 : 'tags this) ->
        fun (x7463 : float) ->
          bigint_of_js
            (Ojs.get_prop (this_to_js Obj.magic x7461)
               (Ojs.float_to_js x7463))
    let (set : 'tags this -> float -> bigint -> unit) =
      fun (x7464 : 'tags this) ->
        fun (x7466 : float) ->
          fun (x7467 : bigint) ->
            Ojs.set_prop (this_to_js Obj.magic x7464) (Ojs.float_to_js x7466)
              (bigint_to_js x7467)
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "BigUint64Array") "prototype")
    let (create : ?length:float -> unit -> t) =
      fun ?length:(x7468 : float option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "BigUint64Array")
               (let x7469 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x7468 with
                 | Some x7470 ->
                     ignore
                       (Ojs.call x7469 "push" [|(Ojs.float_to_js x7470)|])
                 | None -> ());
                x7469))
    let (create' : bigint Iterable.t -> t) =
      fun (x7471 : bigint Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "BigUint64Array")
             [|(Iterable.t_to_js bigint_to_js x7471)|])
    let (create'' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x7473 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x7474 : float option) ->
          fun ?length:(x7475 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "BigUint64Array")
                   (let x7476 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x7476 "push"
                         [|(ArrayBufferLike.t_to_js x7473)|]);
                    (match x7474 with
                     | Some x7478 ->
                         ignore
                           (Ojs.call x7476 "push" [|(Ojs.float_to_js x7478)|])
                     | None -> ());
                    (match x7475 with
                     | Some x7477 ->
                         ignore
                           (Ojs.call x7476 "push" [|(Ojs.float_to_js x7477)|])
                     | None -> ());
                    x7476))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "BigUint64Array")
             "BYTES_PER_ELEMENT")
    let (of_ : bigint list -> t) =
      fun (x7479 : bigint list) ->
        t_of_js
          (let x7482 = Ojs.get_prop_ascii Ojs.global "BigUint64Array" in
           Ojs.call (Ojs.get_prop_ascii x7482 "of") "apply"
             [|x7482;((let x7480 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x7481 : bigint) ->
                            ignore
                              (Ojs.call x7480 "push" [|(bigint_to_js x7481)|]))
                         x7479;
                       x7480))|])
    let (from : bigint ArrayLike.t -> t) =
      fun (x7483 : bigint ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "BigUint64Array") "from"
             [|(ArrayLike.t_to_js bigint_to_js x7483)|])
    let (from' :
      arrayLike:'U ArrayLike.t ->
        mapfn:(v:'U -> k:float -> bigint) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7485 : 'U ArrayLike.t) ->
        fun ~mapfn:(x7486 : v:'U -> k:float -> bigint) ->
          fun ?thisArg:(x7487 : any option) ->
            fun () ->
              t_of_js
                (let x7493 = Ojs.get_prop_ascii Ojs.global "BigUint64Array" in
                 Ojs.call (Ojs.get_prop_ascii x7493 "from") "apply"
                   [|x7493;((let x7488 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7488 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x7485)|]);
                             ignore
                               (Ojs.call x7488 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x7490 : Ojs.t) ->
                                          fun (x7491 : Ojs.t) ->
                                            bigint_to_js
                                              (x7486 ~v:(Obj.magic x7490)
                                                 ~k:(Ojs.float_of_js x7491))))|]);
                             (match x7487 with
                              | Some x7489 ->
                                  ignore
                                    (Ojs.call x7488 "push"
                                       [|(any_to_js x7489)|])
                              | None -> ());
                             x7488))|])
    let cast_from = Obj.magic
  end
module BigInt64Array =
  struct
    type t =
      [ `ArrayLike of bigint  | `BigInt64Array 
      | `IterableIterator of bigint 
      | `Iterator of (bigint * any * never or_undefined) ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x7495 : Ojs.t) -> t_of_js x7495
    and t_0_to_js : t_0 -> Ojs.t = fun (x7494 : t) -> t_to_js x7494
    type tags =
      [ `ArrayLike of bigint  | `BigInt64Array 
      | `IterableIterator of bigint 
      | `Iterator of (bigint * any * never or_undefined) ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `BigInt64Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x7498 : Ojs.t) -> intf_of_js __tags_of_js x7498
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x7496 : __tags intf) -> intf_to_js __tags_to_js x7496
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x7500 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7500)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x7502 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7502) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x7504 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7504) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x7506 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7506) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7513 : 'tags this) ->
        fun ~target:(x7508 : float) ->
          fun ~start:(x7509 : float) ->
            fun ?end_:(x7510 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7515 = this_to_js Obj.magic x7513 in
                   Ojs.call (Ojs.get_prop_ascii x7515 "copyWithin") "apply"
                     [|x7515;((let x7511 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7511 "push"
                                    [|(Ojs.float_to_js x7508)|]);
                               ignore
                                 (Ojs.call x7511 "push"
                                    [|(Ojs.float_to_js x7509)|]);
                               (match x7510 with
                                | Some x7512 ->
                                    ignore
                                      (Ojs.call x7511 "push"
                                         [|(Ojs.float_to_js x7512)|])
                                | None -> ());
                               x7511))|])
    let (entries : 'tags this -> (float * bigint) IterableIterator.t) =
      fun (x7517 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x7519 : Ojs.t) ->
             let x7520 = x7519 in
             ((Ojs.float_of_js (Ojs.array_get x7520 0)),
               (bigint_of_js (Ojs.array_get x7520 1))))
          (Ojs.call (this_to_js Obj.magic x7517) "entries" [||])
    let (every :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7528 : 'tags this) ->
        fun
          ~predicate:(x7521 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x7522 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7530 = this_to_js Obj.magic x7528 in
                 Ojs.call (Ojs.get_prop_ascii x7530 "every") "apply"
                   [|x7530;((let x7523 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7523 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7525 : Ojs.t) ->
                                          fun (x7526 : Ojs.t) ->
                                            fun (x7527 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7521
                                                   ~value:(bigint_of_js x7525)
                                                   ~index:(Ojs.float_of_js
                                                             x7526)
                                                   ~array:(t_of_js x7527))))|]);
                             (match x7522 with
                              | Some x7524 ->
                                  ignore
                                    (Ojs.call x7523 "push"
                                       [|(any_to_js x7524)|])
                              | None -> ());
                             x7523))|])
    let (fill :
      'tags this ->
        value:bigint -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7537 : 'tags this) ->
        fun ~value:(x7531 : bigint) ->
          fun ?start:(x7532 : float option) ->
            fun ?end_:(x7533 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7539 = this_to_js Obj.magic x7537 in
                   Ojs.call (Ojs.get_prop_ascii x7539 "fill") "apply"
                     [|x7539;((let x7534 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7534 "push"
                                    [|(bigint_to_js x7531)|]);
                               (match x7532 with
                                | Some x7536 ->
                                    ignore
                                      (Ojs.call x7534 "push"
                                         [|(Ojs.float_to_js x7536)|])
                                | None -> ());
                               (match x7533 with
                                | Some x7535 ->
                                    ignore
                                      (Ojs.call x7534 "push"
                                         [|(Ojs.float_to_js x7535)|])
                                | None -> ());
                               x7534))|])
    let (filter :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7548 : 'tags this) ->
        fun
          ~predicate:(x7541 : value:bigint -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x7542 : any option) ->
            fun () ->
              t_of_js
                (let x7550 = this_to_js Obj.magic x7548 in
                 Ojs.call (Ojs.get_prop_ascii x7550 "filter") "apply"
                   [|x7550;((let x7543 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7543 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7545 : Ojs.t) ->
                                          fun (x7546 : Ojs.t) ->
                                            fun (x7547 : Ojs.t) ->
                                              any_to_js
                                                (x7541
                                                   ~value:(bigint_of_js x7545)
                                                   ~index:(Ojs.float_of_js
                                                             x7546)
                                                   ~array:(t_of_js x7547))))|]);
                             (match x7542 with
                              | Some x7544 ->
                                  ignore
                                    (Ojs.call x7543 "push"
                                       [|(any_to_js x7544)|])
                              | None -> ());
                             x7543))|])
    let (find :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bigint or_undefined)
      =
      fun (x7558 : 'tags this) ->
        fun
          ~predicate:(x7551 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x7552 : any option) ->
            fun () ->
              or_undefined_of_js bigint_of_js
                (let x7560 = this_to_js Obj.magic x7558 in
                 Ojs.call (Ojs.get_prop_ascii x7560 "find") "apply"
                   [|x7560;((let x7553 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7553 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7555 : Ojs.t) ->
                                          fun (x7556 : Ojs.t) ->
                                            fun (x7557 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7551
                                                   ~value:(bigint_of_js x7555)
                                                   ~index:(Ojs.float_of_js
                                                             x7556)
                                                   ~array:(t_of_js x7557))))|]);
                             (match x7552 with
                              | Some x7554 ->
                                  ignore
                                    (Ojs.call x7553 "push"
                                       [|(any_to_js x7554)|])
                              | None -> ());
                             x7553))|])
    let (findIndex :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x7569 : 'tags this) ->
        fun
          ~predicate:(x7562 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x7563 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x7571 = this_to_js Obj.magic x7569 in
                 Ojs.call (Ojs.get_prop_ascii x7571 "findIndex") "apply"
                   [|x7571;((let x7564 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7564 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7566 : Ojs.t) ->
                                          fun (x7567 : Ojs.t) ->
                                            fun (x7568 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7562
                                                   ~value:(bigint_of_js x7566)
                                                   ~index:(Ojs.float_of_js
                                                             x7567)
                                                   ~array:(t_of_js x7568))))|]);
                             (match x7563 with
                              | Some x7565 ->
                                  ignore
                                    (Ojs.call x7564 "push"
                                       [|(any_to_js x7565)|])
                              | None -> ());
                             x7564))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:bigint -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x7579 : 'tags this) ->
        fun
          ~callbackfn:(x7572 :
                        value:bigint -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x7573 : any option) ->
            fun () ->
              ignore
                (let x7581 = this_to_js Obj.magic x7579 in
                 Ojs.call (Ojs.get_prop_ascii x7581 "forEach") "apply"
                   [|x7581;((let x7574 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7574 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7576 : Ojs.t) ->
                                          fun (x7577 : Ojs.t) ->
                                            fun (x7578 : Ojs.t) ->
                                              x7572
                                                ~value:(bigint_of_js x7576)
                                                ~index:(Ojs.float_of_js x7577)
                                                ~array:(t_of_js x7578)))|]);
                             (match x7573 with
                              | Some x7575 ->
                                  ignore
                                    (Ojs.call x7574 "push"
                                       [|(any_to_js x7575)|])
                              | None -> ());
                             x7574))|])
    let (includes :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> bool)
      =
      fun (x7586 : 'tags this) ->
        fun ~searchElement:(x7582 : bigint) ->
          fun ?fromIndex:(x7583 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7588 = this_to_js Obj.magic x7586 in
                 Ojs.call (Ojs.get_prop_ascii x7588 "includes") "apply"
                   [|x7588;((let x7584 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7584 "push"
                                  [|(bigint_to_js x7582)|]);
                             (match x7583 with
                              | Some x7585 ->
                                  ignore
                                    (Ojs.call x7584 "push"
                                       [|(Ojs.float_to_js x7585)|])
                              | None -> ());
                             x7584))|])
    let (indexOf :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> float)
      =
      fun (x7593 : 'tags this) ->
        fun ~searchElement:(x7589 : bigint) ->
          fun ?fromIndex:(x7590 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7595 = this_to_js Obj.magic x7593 in
                 Ojs.call (Ojs.get_prop_ascii x7595 "indexOf") "apply"
                   [|x7595;((let x7591 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7591 "push"
                                  [|(bigint_to_js x7589)|]);
                             (match x7590 with
                              | Some x7592 ->
                                  ignore
                                    (Ojs.call x7591 "push"
                                       [|(Ojs.float_to_js x7592)|])
                              | None -> ());
                             x7591))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x7599 : 'tags this) ->
        fun ?separator:(x7596 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x7601 = this_to_js Obj.magic x7599 in
               Ojs.call (Ojs.get_prop_ascii x7601 "join") "apply"
                 [|x7601;((let x7597 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7596 with
                            | Some x7598 ->
                                ignore
                                  (Ojs.call x7597 "push"
                                     [|(Ojs.string_to_js x7598)|])
                            | None -> ());
                           x7597))|])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x7602 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7602) "keys" [||])
    let (lastIndexOf :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> float)
      =
      fun (x7609 : 'tags this) ->
        fun ~searchElement:(x7605 : bigint) ->
          fun ?fromIndex:(x7606 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7611 = this_to_js Obj.magic x7609 in
                 Ojs.call (Ojs.get_prop_ascii x7611 "lastIndexOf") "apply"
                   [|x7611;((let x7607 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7607 "push"
                                  [|(bigint_to_js x7605)|]);
                             (match x7606 with
                              | Some x7608 ->
                                  ignore
                                    (Ojs.call x7607 "push"
                                       [|(Ojs.float_to_js x7608)|])
                              | None -> ());
                             x7607))|])
    let (get_length : 'tags this -> float) =
      fun (x7612 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7612) "length")
    let (map :
      'tags this ->
        callbackfn:(value:bigint -> index:float -> array:t -> bigint) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7621 : 'tags this) ->
        fun
          ~callbackfn:(x7614 :
                        value:bigint -> index:float -> array:t -> bigint)
          ->
          fun ?thisArg:(x7615 : any option) ->
            fun () ->
              t_of_js
                (let x7623 = this_to_js Obj.magic x7621 in
                 Ojs.call (Ojs.get_prop_ascii x7623 "map") "apply"
                   [|x7623;((let x7616 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7616 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7618 : Ojs.t) ->
                                          fun (x7619 : Ojs.t) ->
                                            fun (x7620 : Ojs.t) ->
                                              bigint_to_js
                                                (x7614
                                                   ~value:(bigint_of_js x7618)
                                                   ~index:(Ojs.float_of_js
                                                             x7619)
                                                   ~array:(t_of_js x7620))))|]);
                             (match x7615 with
                              | Some x7617 ->
                                  ignore
                                    (Ojs.call x7616 "push"
                                       [|(any_to_js x7617)|])
                              | None -> ());
                             x7616))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:bigint ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> bigint)
          -> bigint)
      =
      fun (x7629 : 'tags this) ->
        fun
          ~callbackfn:(x7624 :
                        previousValue:bigint ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> bigint)
          ->
          bigint_of_js
            (Ojs.call (this_to_js Obj.magic x7629) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x7625 : Ojs.t) ->
                       fun (x7626 : Ojs.t) ->
                         fun (x7627 : Ojs.t) ->
                           fun (x7628 : Ojs.t) ->
                             bigint_to_js
                               (x7624 ~previousValue:(bigint_of_js x7625)
                                  ~currentValue:(bigint_of_js x7626)
                                  ~currentIndex:(Ojs.float_of_js x7627)
                                  ~array:(t_of_js x7628))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7637 : 'tags this) ->
        fun
          ~callbackfn:(x7631 :
                        previousValue:'U ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7636 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7637) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7632 : Ojs.t) ->
                         fun (x7633 : Ojs.t) ->
                           fun (x7634 : Ojs.t) ->
                             fun (x7635 : Ojs.t) ->
                               Obj.magic
                                 (x7631 ~previousValue:(Obj.magic x7632)
                                    ~currentValue:(bigint_of_js x7633)
                                    ~currentIndex:(Ojs.float_of_js x7634)
                                    ~array:(t_of_js x7635))));(Obj.magic
                                                                 x7636)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:bigint ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> bigint)
          -> bigint)
      =
      fun (x7644 : 'tags this) ->
        fun
          ~callbackfn:(x7639 :
                        previousValue:bigint ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> bigint)
          ->
          bigint_of_js
            (Ojs.call (this_to_js Obj.magic x7644) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x7640 : Ojs.t) ->
                       fun (x7641 : Ojs.t) ->
                         fun (x7642 : Ojs.t) ->
                           fun (x7643 : Ojs.t) ->
                             bigint_to_js
                               (x7639 ~previousValue:(bigint_of_js x7640)
                                  ~currentValue:(bigint_of_js x7641)
                                  ~currentIndex:(Ojs.float_of_js x7642)
                                  ~array:(t_of_js x7643))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7652 : 'tags this) ->
        fun
          ~callbackfn:(x7646 :
                        previousValue:'U ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7651 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7652) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7647 : Ojs.t) ->
                         fun (x7648 : Ojs.t) ->
                           fun (x7649 : Ojs.t) ->
                             fun (x7650 : Ojs.t) ->
                               Obj.magic
                                 (x7646 ~previousValue:(Obj.magic x7647)
                                    ~currentValue:(bigint_of_js x7648)
                                    ~currentIndex:(Ojs.float_of_js x7649)
                                    ~array:(t_of_js x7650))));(Obj.magic
                                                                 x7651)|])
    let (reverse : 'tags this -> 'tags this) =
      fun (x7654 : 'tags this) ->
        this_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic x7654) "reverse" [||])
    let (set_ :
      'tags this -> array:bigint ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x7662 : 'tags this) ->
        fun ~array:(x7657 : bigint ArrayLike.t) ->
          fun ?offset:(x7658 : float option) ->
            fun () ->
              ignore
                (let x7664 = this_to_js Obj.magic x7662 in
                 Ojs.call (Ojs.get_prop_ascii x7664 "set") "apply"
                   [|x7664;((let x7659 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7659 "push"
                                  [|(ArrayLike.t_to_js bigint_to_js x7657)|]);
                             (match x7658 with
                              | Some x7660 ->
                                  ignore
                                    (Ojs.call x7659 "push"
                                       [|(Ojs.float_to_js x7660)|])
                              | None -> ());
                             x7659))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x7670 : 'tags this) ->
        fun ?start:(x7665 : float option) ->
          fun ?end_:(x7666 : float option) ->
            fun () ->
              t_of_js
                (let x7672 = this_to_js Obj.magic x7670 in
                 Ojs.call (Ojs.get_prop_ascii x7672 "slice") "apply"
                   [|x7672;((let x7667 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7665 with
                              | Some x7669 ->
                                  ignore
                                    (Ojs.call x7667 "push"
                                       [|(Ojs.float_to_js x7669)|])
                              | None -> ());
                             (match x7666 with
                              | Some x7668 ->
                                  ignore
                                    (Ojs.call x7667 "push"
                                       [|(Ojs.float_to_js x7668)|])
                              | None -> ());
                             x7667))|])
    let (some :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7680 : 'tags this) ->
        fun
          ~predicate:(x7673 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x7674 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7682 = this_to_js Obj.magic x7680 in
                 Ojs.call (Ojs.get_prop_ascii x7682 "some") "apply"
                   [|x7682;((let x7675 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7675 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7677 : Ojs.t) ->
                                          fun (x7678 : Ojs.t) ->
                                            fun (x7679 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7673
                                                   ~value:(bigint_of_js x7677)
                                                   ~index:(Ojs.float_of_js
                                                             x7678)
                                                   ~array:(t_of_js x7679))))|]);
                             (match x7674 with
                              | Some x7676 ->
                                  ignore
                                    (Ojs.call x7675 "push"
                                       [|(any_to_js x7676)|])
                              | None -> ());
                             x7675))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:bigint -> b:bigint -> bigint or_number) ->
          unit -> 'tags this)
      =
      fun (x7689 : 'tags this) ->
        fun
          ?compareFn:(x7683 :
                       (a:bigint -> b:bigint -> bigint or_number) option)
          ->
          fun () ->
            this_of_js Obj.magic
              (let x7691 = this_to_js Obj.magic x7689 in
               Ojs.call (Ojs.get_prop_ascii x7691 "sort") "apply"
                 [|x7691;((let x7684 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7683 with
                            | Some x7685 ->
                                ignore
                                  (Ojs.call x7684 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x7686 : Ojs.t) ->
                                             fun (x7687 : Ojs.t) ->
                                               or_number_to_js bigint_to_js
                                                 (x7685
                                                    ~a:(bigint_of_js x7686)
                                                    ~b:(bigint_of_js x7687))))|])
                            | None -> ());
                           x7684))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x7698 : 'tags this) ->
        fun ?begin_:(x7693 : float option) ->
          fun ?end_:(x7694 : float option) ->
            fun () ->
              t_of_js
                (let x7700 = this_to_js Obj.magic x7698 in
                 Ojs.call (Ojs.get_prop_ascii x7700 "subarray") "apply"
                   [|x7700;((let x7695 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7693 with
                              | Some x7697 ->
                                  ignore
                                    (Ojs.call x7695 "push"
                                       [|(Ojs.float_to_js x7697)|])
                              | None -> ());
                             (match x7694 with
                              | Some x7696 ->
                                  ignore
                                    (Ojs.call x7695 "push"
                                       [|(Ojs.float_to_js x7696)|])
                              | None -> ());
                             x7695))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x7701 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7701) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x7703 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7703) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x7705 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7705) "valueOf" [||])
    let (values : 'tags this -> bigint IterableIterator.t) =
      fun (x7707 : 'tags this) ->
        IterableIterator.t_of_js bigint_of_js
          (Ojs.call (this_to_js Obj.magic x7707) "values" [||])
    let (get : 'tags this -> float -> bigint) =
      fun (x7710 : 'tags this) ->
        fun (x7712 : float) ->
          bigint_of_js
            (Ojs.get_prop (this_to_js Obj.magic x7710)
               (Ojs.float_to_js x7712))
    let (set : 'tags this -> float -> bigint -> unit) =
      fun (x7713 : 'tags this) ->
        fun (x7715 : float) ->
          fun (x7716 : bigint) ->
            Ojs.set_prop (this_to_js Obj.magic x7713) (Ojs.float_to_js x7715)
              (bigint_to_js x7716)
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "BigInt64Array")
             "prototype")
    let (create : ?length:float -> unit -> t) =
      fun ?length:(x7717 : float option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "BigInt64Array")
               (let x7718 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x7717 with
                 | Some x7719 ->
                     ignore
                       (Ojs.call x7718 "push" [|(Ojs.float_to_js x7719)|])
                 | None -> ());
                x7718))
    let (create' : bigint Iterable.t -> t) =
      fun (x7720 : bigint Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "BigInt64Array")
             [|(Iterable.t_to_js bigint_to_js x7720)|])
    let (create'' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x7722 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x7723 : float option) ->
          fun ?length:(x7724 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "BigInt64Array")
                   (let x7725 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x7725 "push"
                         [|(ArrayBufferLike.t_to_js x7722)|]);
                    (match x7723 with
                     | Some x7727 ->
                         ignore
                           (Ojs.call x7725 "push" [|(Ojs.float_to_js x7727)|])
                     | None -> ());
                    (match x7724 with
                     | Some x7726 ->
                         ignore
                           (Ojs.call x7725 "push" [|(Ojs.float_to_js x7726)|])
                     | None -> ());
                    x7725))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "BigInt64Array")
             "BYTES_PER_ELEMENT")
    let (of_ : bigint list -> t) =
      fun (x7728 : bigint list) ->
        t_of_js
          (let x7731 = Ojs.get_prop_ascii Ojs.global "BigInt64Array" in
           Ojs.call (Ojs.get_prop_ascii x7731 "of") "apply"
             [|x7731;((let x7729 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x7730 : bigint) ->
                            ignore
                              (Ojs.call x7729 "push" [|(bigint_to_js x7730)|]))
                         x7728;
                       x7729))|])
    let (from : bigint ArrayLike.t -> t) =
      fun (x7732 : bigint ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "BigInt64Array") "from"
             [|(ArrayLike.t_to_js bigint_to_js x7732)|])
    let (from' :
      arrayLike:'U ArrayLike.t ->
        mapfn:(v:'U -> k:float -> bigint) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7734 : 'U ArrayLike.t) ->
        fun ~mapfn:(x7735 : v:'U -> k:float -> bigint) ->
          fun ?thisArg:(x7736 : any option) ->
            fun () ->
              t_of_js
                (let x7742 = Ojs.get_prop_ascii Ojs.global "BigInt64Array" in
                 Ojs.call (Ojs.get_prop_ascii x7742 "from") "apply"
                   [|x7742;((let x7737 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7737 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x7734)|]);
                             ignore
                               (Ojs.call x7737 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x7739 : Ojs.t) ->
                                          fun (x7740 : Ojs.t) ->
                                            bigint_to_js
                                              (x7735 ~v:(Obj.magic x7739)
                                                 ~k:(Ojs.float_of_js x7740))))|]);
                             (match x7736 with
                              | Some x7738 ->
                                  ignore
                                    (Ojs.call x7737 "push"
                                       [|(any_to_js x7738)|])
                              | None -> ());
                             x7737))|])
    let cast_from = Obj.magic
  end
module Atomics =
  struct
    let (add :
      typedArray:(BigInt64Array.t, BigUint64Array.t) union2 ->
        index:float -> value:bigint -> bigint)
      =
      fun ~typedArray:(x7743 : (BigInt64Array.t, BigUint64Array.t) union2) ->
        fun ~index:(x7746 : float) ->
          fun ~value:(x7747 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "add"
                 [|(union2_to_js BigInt64Array.t_to_js BigUint64Array.t_to_js
                      x7743);(Ojs.float_to_js x7746);(bigint_to_js x7747)|])
    let (and_ :
      typedArray:(BigInt64Array.t, BigUint64Array.t) union2 ->
        index:float -> value:bigint -> bigint)
      =
      fun ~typedArray:(x7748 : (BigInt64Array.t, BigUint64Array.t) union2) ->
        fun ~index:(x7751 : float) ->
          fun ~value:(x7752 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "and"
                 [|(union2_to_js BigInt64Array.t_to_js BigUint64Array.t_to_js
                      x7748);(Ojs.float_to_js x7751);(bigint_to_js x7752)|])
    let (compareExchange :
      typedArray:(BigInt64Array.t, BigUint64Array.t) union2 ->
        index:float ->
          expectedValue:bigint -> replacementValue:bigint -> bigint)
      =
      fun ~typedArray:(x7753 : (BigInt64Array.t, BigUint64Array.t) union2) ->
        fun ~index:(x7756 : float) ->
          fun ~expectedValue:(x7757 : bigint) ->
            fun ~replacementValue:(x7758 : bigint) ->
              bigint_of_js
                (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics")
                   "compareExchange"
                   [|(union2_to_js BigInt64Array.t_to_js
                        BigUint64Array.t_to_js x7753);(Ojs.float_to_js x7756);(
                     bigint_to_js x7757);(bigint_to_js x7758)|])
    let (exchange :
      typedArray:(BigInt64Array.t, BigUint64Array.t) union2 ->
        index:float -> value:bigint -> bigint)
      =
      fun ~typedArray:(x7759 : (BigInt64Array.t, BigUint64Array.t) union2) ->
        fun ~index:(x7762 : float) ->
          fun ~value:(x7763 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "exchange"
                 [|(union2_to_js BigInt64Array.t_to_js BigUint64Array.t_to_js
                      x7759);(Ojs.float_to_js x7762);(bigint_to_js x7763)|])
    let (load :
      typedArray:(BigInt64Array.t, BigUint64Array.t) union2 ->
        index:float -> bigint)
      =
      fun ~typedArray:(x7764 : (BigInt64Array.t, BigUint64Array.t) union2) ->
        fun ~index:(x7767 : float) ->
          bigint_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "load"
               [|(union2_to_js BigInt64Array.t_to_js BigUint64Array.t_to_js
                    x7764);(Ojs.float_to_js x7767)|])
    let (or_ :
      typedArray:(BigInt64Array.t, BigUint64Array.t) union2 ->
        index:float -> value:bigint -> bigint)
      =
      fun ~typedArray:(x7768 : (BigInt64Array.t, BigUint64Array.t) union2) ->
        fun ~index:(x7771 : float) ->
          fun ~value:(x7772 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "or"
                 [|(union2_to_js BigInt64Array.t_to_js BigUint64Array.t_to_js
                      x7768);(Ojs.float_to_js x7771);(bigint_to_js x7772)|])
    let (store :
      typedArray:(BigInt64Array.t, BigUint64Array.t) union2 ->
        index:float -> value:bigint -> bigint)
      =
      fun ~typedArray:(x7773 : (BigInt64Array.t, BigUint64Array.t) union2) ->
        fun ~index:(x7776 : float) ->
          fun ~value:(x7777 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "store"
                 [|(union2_to_js BigInt64Array.t_to_js BigUint64Array.t_to_js
                      x7773);(Ojs.float_to_js x7776);(bigint_to_js x7777)|])
    let (sub :
      typedArray:(BigInt64Array.t, BigUint64Array.t) union2 ->
        index:float -> value:bigint -> bigint)
      =
      fun ~typedArray:(x7778 : (BigInt64Array.t, BigUint64Array.t) union2) ->
        fun ~index:(x7781 : float) ->
          fun ~value:(x7782 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "sub"
                 [|(union2_to_js BigInt64Array.t_to_js BigUint64Array.t_to_js
                      x7778);(Ojs.float_to_js x7781);(bigint_to_js x7782)|])
    let (wait :
      typedArray:BigInt64Array.t ->
        index:float ->
          value:bigint ->
            ?timeout:float ->
              unit -> [ `L_s62_not_equal  | `L_s65_ok  | `L_s79_timed_out ])
      =
      fun ~typedArray:(x7783 : BigInt64Array.t) ->
        fun ~index:(x7784 : float) ->
          fun ~value:(x7785 : bigint) ->
            fun ?timeout:(x7786 : float option) ->
              fun () ->
                let x7790 =
                  let x7789 = Ojs.get_prop_ascii Ojs.global "Atomics" in
                  Ojs.call (Ojs.get_prop_ascii x7789 "wait") "apply"
                    [|x7789;((let x7787 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x7787 "push"
                                   [|(BigInt64Array.t_to_js x7783)|]);
                              ignore
                                (Ojs.call x7787 "push"
                                   [|(Ojs.float_to_js x7784)|]);
                              ignore
                                (Ojs.call x7787 "push"
                                   [|(bigint_to_js x7785)|]);
                              (match x7786 with
                               | Some x7788 ->
                                   ignore
                                     (Ojs.call x7787 "push"
                                        [|(Ojs.float_to_js x7788)|])
                               | None -> ());
                              x7787))|] in
                match Ojs.string_of_js x7790 with
                | "not-equal" -> `L_s62_not_equal
                | "ok" -> `L_s65_ok
                | "timed-out" -> `L_s79_timed_out
                | _ -> assert false
    let (notify :
      typedArray:BigInt64Array.t ->
        index:float -> ?count:float -> unit -> float)
      =
      fun ~typedArray:(x7791 : BigInt64Array.t) ->
        fun ~index:(x7792 : float) ->
          fun ?count:(x7793 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7796 = Ojs.get_prop_ascii Ojs.global "Atomics" in
                 Ojs.call (Ojs.get_prop_ascii x7796 "notify") "apply"
                   [|x7796;((let x7794 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7794 "push"
                                  [|(BigInt64Array.t_to_js x7791)|]);
                             ignore
                               (Ojs.call x7794 "push"
                                  [|(Ojs.float_to_js x7792)|]);
                             (match x7793 with
                              | Some x7795 ->
                                  ignore
                                    (Ojs.call x7794 "push"
                                       [|(Ojs.float_to_js x7795)|])
                              | None -> ());
                             x7794))|])
    let (xor :
      typedArray:(BigInt64Array.t, BigUint64Array.t) union2 ->
        index:float -> value:bigint -> bigint)
      =
      fun ~typedArray:(x7797 : (BigInt64Array.t, BigUint64Array.t) union2) ->
        fun ~index:(x7800 : float) ->
          fun ~value:(x7801 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "xor"
                 [|(union2_to_js BigInt64Array.t_to_js BigUint64Array.t_to_js
                      x7797);(Ojs.float_to_js x7800);(bigint_to_js x7801)|])
    let (add' :
      typedArray:(Int16Array.t, Int32Array.t, Int8Array.t, Uint16Array.t,
        Uint32Array.t, Uint8Array.t) union6 ->
        index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x7802 :
                      (Int16Array.t, Int32Array.t, Int8Array.t,
                        Uint16Array.t, Uint32Array.t, Uint8Array.t) union6)
        ->
        fun ~index:(x7809 : float) ->
          fun ~value:(x7810 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "add"
                 [|(union6_to_js Int16Array.t_to_js Int32Array.t_to_js
                      Int8Array.t_to_js Uint16Array.t_to_js
                      Uint32Array.t_to_js Uint8Array.t_to_js x7802);(
                   Ojs.float_to_js x7809);(Ojs.float_to_js x7810)|])
    let (and_' :
      typedArray:(Int16Array.t, Int32Array.t, Int8Array.t, Uint16Array.t,
        Uint32Array.t, Uint8Array.t) union6 ->
        index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x7811 :
                      (Int16Array.t, Int32Array.t, Int8Array.t,
                        Uint16Array.t, Uint32Array.t, Uint8Array.t) union6)
        ->
        fun ~index:(x7818 : float) ->
          fun ~value:(x7819 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "and"
                 [|(union6_to_js Int16Array.t_to_js Int32Array.t_to_js
                      Int8Array.t_to_js Uint16Array.t_to_js
                      Uint32Array.t_to_js Uint8Array.t_to_js x7811);(
                   Ojs.float_to_js x7818);(Ojs.float_to_js x7819)|])
    let (compareExchange' :
      typedArray:(Int16Array.t, Int32Array.t, Int8Array.t, Uint16Array.t,
        Uint32Array.t, Uint8Array.t) union6 ->
        index:float -> expectedValue:float -> replacementValue:float -> float)
      =
      fun
        ~typedArray:(x7820 :
                      (Int16Array.t, Int32Array.t, Int8Array.t,
                        Uint16Array.t, Uint32Array.t, Uint8Array.t) union6)
        ->
        fun ~index:(x7827 : float) ->
          fun ~expectedValue:(x7828 : float) ->
            fun ~replacementValue:(x7829 : float) ->
              Ojs.float_of_js
                (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics")
                   "compareExchange"
                   [|(union6_to_js Int16Array.t_to_js Int32Array.t_to_js
                        Int8Array.t_to_js Uint16Array.t_to_js
                        Uint32Array.t_to_js Uint8Array.t_to_js x7820);(
                     Ojs.float_to_js x7827);(Ojs.float_to_js x7828);(
                     Ojs.float_to_js x7829)|])
    let (exchange' :
      typedArray:(Int16Array.t, Int32Array.t, Int8Array.t, Uint16Array.t,
        Uint32Array.t, Uint8Array.t) union6 ->
        index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x7830 :
                      (Int16Array.t, Int32Array.t, Int8Array.t,
                        Uint16Array.t, Uint32Array.t, Uint8Array.t) union6)
        ->
        fun ~index:(x7837 : float) ->
          fun ~value:(x7838 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "exchange"
                 [|(union6_to_js Int16Array.t_to_js Int32Array.t_to_js
                      Int8Array.t_to_js Uint16Array.t_to_js
                      Uint32Array.t_to_js Uint8Array.t_to_js x7830);(
                   Ojs.float_to_js x7837);(Ojs.float_to_js x7838)|])
    let (isLockFree : float -> bool) =
      fun (x7839 : float) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "isLockFree"
             [|(Ojs.float_to_js x7839)|])
    let (load' :
      typedArray:(Int16Array.t, Int32Array.t, Int8Array.t, Uint16Array.t,
        Uint32Array.t, Uint8Array.t) union6 -> index:float -> float)
      =
      fun
        ~typedArray:(x7840 :
                      (Int16Array.t, Int32Array.t, Int8Array.t,
                        Uint16Array.t, Uint32Array.t, Uint8Array.t) union6)
        ->
        fun ~index:(x7847 : float) ->
          Ojs.float_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "load"
               [|(union6_to_js Int16Array.t_to_js Int32Array.t_to_js
                    Int8Array.t_to_js Uint16Array.t_to_js Uint32Array.t_to_js
                    Uint8Array.t_to_js x7840);(Ojs.float_to_js x7847)|])
    let (or_' :
      typedArray:(Int16Array.t, Int32Array.t, Int8Array.t, Uint16Array.t,
        Uint32Array.t, Uint8Array.t) union6 ->
        index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x7848 :
                      (Int16Array.t, Int32Array.t, Int8Array.t,
                        Uint16Array.t, Uint32Array.t, Uint8Array.t) union6)
        ->
        fun ~index:(x7855 : float) ->
          fun ~value:(x7856 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "or"
                 [|(union6_to_js Int16Array.t_to_js Int32Array.t_to_js
                      Int8Array.t_to_js Uint16Array.t_to_js
                      Uint32Array.t_to_js Uint8Array.t_to_js x7848);(
                   Ojs.float_to_js x7855);(Ojs.float_to_js x7856)|])
    let (store' :
      typedArray:(Int16Array.t, Int32Array.t, Int8Array.t, Uint16Array.t,
        Uint32Array.t, Uint8Array.t) union6 ->
        index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x7857 :
                      (Int16Array.t, Int32Array.t, Int8Array.t,
                        Uint16Array.t, Uint32Array.t, Uint8Array.t) union6)
        ->
        fun ~index:(x7864 : float) ->
          fun ~value:(x7865 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "store"
                 [|(union6_to_js Int16Array.t_to_js Int32Array.t_to_js
                      Int8Array.t_to_js Uint16Array.t_to_js
                      Uint32Array.t_to_js Uint8Array.t_to_js x7857);(
                   Ojs.float_to_js x7864);(Ojs.float_to_js x7865)|])
    let (sub' :
      typedArray:(Int16Array.t, Int32Array.t, Int8Array.t, Uint16Array.t,
        Uint32Array.t, Uint8Array.t) union6 ->
        index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x7866 :
                      (Int16Array.t, Int32Array.t, Int8Array.t,
                        Uint16Array.t, Uint32Array.t, Uint8Array.t) union6)
        ->
        fun ~index:(x7873 : float) ->
          fun ~value:(x7874 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "sub"
                 [|(union6_to_js Int16Array.t_to_js Int32Array.t_to_js
                      Int8Array.t_to_js Uint16Array.t_to_js
                      Uint32Array.t_to_js Uint8Array.t_to_js x7866);(
                   Ojs.float_to_js x7873);(Ojs.float_to_js x7874)|])
    let (wait' :
      typedArray:Int32Array.t ->
        index:float ->
          value:float ->
            ?timeout:float ->
              unit -> [ `L_s62_not_equal  | `L_s65_ok  | `L_s79_timed_out ])
      =
      fun ~typedArray:(x7875 : Int32Array.t) ->
        fun ~index:(x7876 : float) ->
          fun ~value:(x7877 : float) ->
            fun ?timeout:(x7878 : float option) ->
              fun () ->
                let x7882 =
                  let x7881 = Ojs.get_prop_ascii Ojs.global "Atomics" in
                  Ojs.call (Ojs.get_prop_ascii x7881 "wait") "apply"
                    [|x7881;((let x7879 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x7879 "push"
                                   [|(Int32Array.t_to_js x7875)|]);
                              ignore
                                (Ojs.call x7879 "push"
                                   [|(Ojs.float_to_js x7876)|]);
                              ignore
                                (Ojs.call x7879 "push"
                                   [|(Ojs.float_to_js x7877)|]);
                              (match x7878 with
                               | Some x7880 ->
                                   ignore
                                     (Ojs.call x7879 "push"
                                        [|(Ojs.float_to_js x7880)|])
                               | None -> ());
                              x7879))|] in
                match Ojs.string_of_js x7882 with
                | "not-equal" -> `L_s62_not_equal
                | "ok" -> `L_s65_ok
                | "timed-out" -> `L_s79_timed_out
                | _ -> assert false
    let (notify' :
      typedArray:Int32Array.t -> index:float -> ?count:float -> unit -> float)
      =
      fun ~typedArray:(x7883 : Int32Array.t) ->
        fun ~index:(x7884 : float) ->
          fun ?count:(x7885 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7888 = Ojs.get_prop_ascii Ojs.global "Atomics" in
                 Ojs.call (Ojs.get_prop_ascii x7888 "notify") "apply"
                   [|x7888;((let x7886 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7886 "push"
                                  [|(Int32Array.t_to_js x7883)|]);
                             ignore
                               (Ojs.call x7886 "push"
                                  [|(Ojs.float_to_js x7884)|]);
                             (match x7885 with
                              | Some x7887 ->
                                  ignore
                                    (Ojs.call x7886 "push"
                                       [|(Ojs.float_to_js x7887)|])
                              | None -> ());
                             x7886))|])
    let (xor' :
      typedArray:(Int16Array.t, Int32Array.t, Int8Array.t, Uint16Array.t,
        Uint32Array.t, Uint8Array.t) union6 ->
        index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x7889 :
                      (Int16Array.t, Int32Array.t, Int8Array.t,
                        Uint16Array.t, Uint32Array.t, Uint8Array.t) union6)
        ->
        fun ~index:(x7896 : float) ->
          fun ~value:(x7897 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "xor"
                 [|(union6_to_js Int16Array.t_to_js Int32Array.t_to_js
                      Int8Array.t_to_js Uint16Array.t_to_js
                      Uint32Array.t_to_js Uint8Array.t_to_js x7889);(
                   Ojs.float_to_js x7896);(Ojs.float_to_js x7897)|])
  end
module PromiseRejectedResult =
  struct
    type t = [ `PromiseRejectedResult ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x7899 : Ojs.t) -> t_of_js x7899
    and t_0_to_js : t_0 -> Ojs.t = fun (x7898 : t) -> t_to_js x7898
    type tags = [ `PromiseRejectedResult ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `PromiseRejectedResult ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x7902 : Ojs.t) -> intf_of_js __tags_of_js x7902
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x7900 : __tags intf) -> intf_to_js __tags_to_js x7900
    let (get_status : 'tags this -> [ `L_s73_rejected ]) =
      fun (x7904 : 'tags this) ->
        let x7906 = Ojs.get_prop_ascii (this_to_js Obj.magic x7904) "status" in
        match Ojs.string_of_js x7906 with
        | "rejected" -> `L_s73_rejected
        | _ -> assert false
    let (set_status : 'tags this -> [ `L_s73_rejected ] -> unit) =
      fun (x7907 : 'tags this) ->
        fun (x7908 : [ `L_s73_rejected ]) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7907) "status"
            (match x7908 with
             | `L_s73_rejected -> Ojs.string_to_js "rejected")
    let (get_reason : 'tags this -> any) =
      fun (x7910 : 'tags this) ->
        any_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x7910) "reason")
    let (set_reason : 'tags this -> any -> unit) =
      fun (x7912 : 'tags this) ->
        fun (x7913 : any) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x7912) "reason"
            (any_to_js x7913)
    let cast_from = Obj.magic
  end
module PromiseFulfilledResult =
  struct
    type 'T t = [ `PromiseFulfilledResult of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x7917 : Ojs.t) -> t_of_js __T_of_js x7917
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x7915 : __T t) -> t_to_js __T_to_js x7915
    type 'T tags = [ `PromiseFulfilledResult of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `PromiseFulfilledResult of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x7921 : Ojs.t) -> intf_of_js __tags_of_js x7921
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x7919 : __tags intf) -> intf_to_js __tags_to_js x7919
    let (get_status : ('tags, 'T) this -> [ `L_s39_fulfilled ]) =
      fun (x7923 : ('tags, 'T) this) ->
        let x7926 =
          Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x7923) "status" in
        match Ojs.string_of_js x7926 with
        | "fulfilled" -> `L_s39_fulfilled
        | _ -> assert false
    let (set_status : ('tags, 'T) this -> [ `L_s39_fulfilled ] -> unit) =
      fun (x7927 : ('tags, 'T) this) ->
        fun (x7928 : [ `L_s39_fulfilled ]) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x7927) "status"
            (match x7928 with
             | `L_s39_fulfilled -> Ojs.string_to_js "fulfilled")
    let (get_value : ('tags, 'T) this -> 'T) =
      fun (x7931 : ('tags, 'T) this) ->
        Obj.magic
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x7931) "value")
    let (set_value : ('tags, 'T) this -> 'T -> unit) =
      fun (x7934 : ('tags, 'T) this) ->
        fun (x7935 : 'T) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x7934) "value"
            (Obj.magic x7935)
    let cast_from = Obj.magic
  end
module PromiseSettledResult =
  struct
    type 'T t =
      [ `U_s39_fulfilled of 'T PromiseFulfilledResult.t 
      | `U_s73_rejected of PromiseRejectedResult.t ]
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x7942 : Ojs.t) ->
          let x7943 = x7942 in
          match Ojs.string_of_js (Ojs.get_prop_ascii x7943 "status") with
          | "fulfilled" ->
              `U_s39_fulfilled
                (PromiseFulfilledResult.t_of_js __T_of_js x7943)
          | "rejected" ->
              `U_s73_rejected (PromiseRejectedResult.t_of_js x7943)
          | _ -> assert false
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun
          (x7938 :
            [ `U_s39_fulfilled of __T PromiseFulfilledResult.t 
            | `U_s73_rejected of PromiseRejectedResult.t ])
          ->
          match x7938 with
          | `U_s39_fulfilled x7939 ->
              PromiseFulfilledResult.t_to_js __T_to_js x7939
          | `U_s73_rejected x7941 -> PromiseRejectedResult.t_to_js x7941
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x7947 : Ojs.t) -> t_of_js __T_of_js x7947
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x7945 : __T t) -> t_to_js __T_to_js x7945
  end
module Promise =
  struct
    type 'T t = [ `Promise of 'T  | `PromiseLike of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x7951 : Ojs.t) -> t_of_js __T_of_js x7951
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x7949 : __T t) -> t_to_js __T_to_js x7949
    type 'T tags = [ `Promise of 'T  | `PromiseLike of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this = 'tags intf constraint 'tags = [> `Promise of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x7955 : Ojs.t) -> intf_of_js __tags_of_js x7955
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x7953 : __tags intf) -> intf_to_js __tags_to_js x7953
    let (finally :
      ('tags, 'T) this ->
        ?onfinally:(unit -> unit) or_null_or_undefined -> unit -> 'T t)
      =
      fun (x7961 : ('tags, 'T) this) ->
        fun ?onfinally:(x7957 : (unit -> unit) or_null_or_undefined option)
          ->
          fun () ->
            t_of_js Obj.magic
              (let x7964 = this_to_js Obj.magic Obj.magic x7961 in
               Ojs.call (Ojs.get_prop_ascii x7964 "finally") "apply"
                 [|x7964;((let x7958 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7957 with
                            | Some x7959 ->
                                ignore
                                  (Ojs.call x7958 "push"
                                     [|(or_null_or_undefined_to_js
                                          (fun (x7960 : unit -> unit) ->
                                             Ojs.fun_to_js 1
                                               (fun _ -> x7960 ())) x7959)|])
                            | None -> ());
                           x7958))|])
    let (then_ :
      ('tags, 'T) this ->
        ?onfulfilled:('T -> ('TResult1, 'TResult1 PromiseLike.t) union2)
          or_null_or_undefined ->
          ?onrejected:(any -> ('TResult2, 'TResult2 PromiseLike.t) union2)
            or_null_or_undefined -> unit -> ('TResult1, 'TResult2) union2 t)
      =
      fun (x7981 : ('tags, 'T) this) ->
        fun
          ?onfulfilled:(x7966 :
                         ('T -> ('TResult1, 'TResult1 PromiseLike.t) union2)
                           or_null_or_undefined option)
          ->
          fun
            ?onrejected:(x7967 :
                          (any -> ('TResult2, 'TResult2 PromiseLike.t) union2)
                            or_null_or_undefined option)
            ->
            fun () ->
              t_of_js
                (fun (x7985 : Ojs.t) ->
                   union2_of_js Obj.magic Obj.magic x7985)
                (let x7984 = this_to_js Obj.magic Obj.magic x7981 in
                 Ojs.call (Ojs.get_prop_ascii x7984 "then") "apply"
                   [|x7984;((let x7968 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7966 with
                              | Some x7975 ->
                                  ignore
                                    (Ojs.call x7968 "push"
                                       [|(or_null_or_undefined_to_js
                                            (fun
                                               (x7976 :
                                                 'T ->
                                                   ('TResult1,
                                                     'TResult1 PromiseLike.t)
                                                     union2)
                                               ->
                                               Ojs.fun_to_js 1
                                                 (fun (x7977 : Ojs.t) ->
                                                    union2_to_js Obj.magic
                                                      (fun
                                                         (x7979 :
                                                           'TResult1
                                                             PromiseLike.t)
                                                         ->
                                                         PromiseLike.t_to_js
                                                           Obj.magic x7979)
                                                      (x7976
                                                         (Obj.magic x7977))))
                                            x7975)|])
                              | None -> ());
                             (match x7967 with
                              | Some x7969 ->
                                  ignore
                                    (Ojs.call x7968 "push"
                                       [|(or_null_or_undefined_to_js
                                            (fun
                                               (x7970 :
                                                 any ->
                                                   ('TResult2,
                                                     'TResult2 PromiseLike.t)
                                                     union2)
                                               ->
                                               Ojs.fun_to_js 1
                                                 (fun (x7971 : Ojs.t) ->
                                                    union2_to_js Obj.magic
                                                      (fun
                                                         (x7973 :
                                                           'TResult2
                                                             PromiseLike.t)
                                                         ->
                                                         PromiseLike.t_to_js
                                                           Obj.magic x7973)
                                                      (x7970
                                                         (any_of_js x7971))))
                                            x7969)|])
                              | None -> ());
                             x7968))|])
    let (catch :
      ('tags, 'T) this ->
        ?onrejected:(any -> ('TResult, 'TResult PromiseLike.t) union2)
          or_null_or_undefined -> unit -> ('T, 'TResult) union2 t)
      =
      fun (x7996 : ('tags, 'T) this) ->
        fun
          ?onrejected:(x7988 :
                        (any -> ('TResult, 'TResult PromiseLike.t) union2)
                          or_null_or_undefined option)
          ->
          fun () ->
            t_of_js
              (fun (x8000 : Ojs.t) -> union2_of_js Obj.magic Obj.magic x8000)
              (let x7999 = this_to_js Obj.magic Obj.magic x7996 in
               Ojs.call (Ojs.get_prop_ascii x7999 "catch") "apply"
                 [|x7999;((let x7989 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7988 with
                            | Some x7990 ->
                                ignore
                                  (Ojs.call x7989 "push"
                                     [|(or_null_or_undefined_to_js
                                          (fun
                                             (x7991 :
                                               any ->
                                                 ('TResult,
                                                   'TResult PromiseLike.t)
                                                   union2)
                                             ->
                                             Ojs.fun_to_js 1
                                               (fun (x7992 : Ojs.t) ->
                                                  union2_to_js Obj.magic
                                                    (fun
                                                       (x7994 :
                                                         'TResult
                                                           PromiseLike.t)
                                                       ->
                                                       PromiseLike.t_to_js
                                                         Obj.magic x7994)
                                                    (x7991 (any_of_js x7992))))
                                          x7990)|])
                            | None -> ());
                           x7989))|])
    let (any :
      (('T, 'T PromiseLike.t) union2 Iterable.t,
        ('T, 'T PromiseLike.t) union2) or_array -> 'T t)
      =
      fun
        (x8003 :
          (('T, 'T PromiseLike.t) union2 Iterable.t,
            ('T, 'T PromiseLike.t) union2) or_array)
        ->
        t_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "any"
             [|(or_array_to_js
                  (fun (x8004 : ('T, 'T PromiseLike.t) union2 Iterable.t) ->
                     Iterable.t_to_js
                       (fun (x8005 : ('T, 'T PromiseLike.t) union2) ->
                          union2_to_js Obj.magic
                            (fun (x8007 : 'T PromiseLike.t) ->
                               PromiseLike.t_to_js Obj.magic x8007) x8005)
                       x8004)
                  (fun (x8009 : ('T, 'T PromiseLike.t) union2) ->
                     union2_to_js Obj.magic
                       (fun (x8011 : 'T PromiseLike.t) ->
                          PromiseLike.t_to_js Obj.magic x8011) x8009) x8003)|])
    let (prototype : unit -> any t) =
      fun () ->
        t_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Promise")
             "prototype")
    let (create :
      (resolve:(('T, 'T PromiseLike.t) union2 -> unit) ->
         reject:(?reason:any -> unit -> unit) -> unit)
        -> 'T t)
      =
      fun
        (x8015 :
          resolve:(('T, 'T PromiseLike.t) union2 -> unit) ->
            reject:(?reason:any -> unit -> unit) -> unit)
        ->
        t_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Promise")
             [|(Ojs.fun_to_js 2
                  (fun (x8016 : Ojs.t) ->
                     fun (x8021 : Ojs.t) ->
                       x8015
                         ~resolve:(fun
                                     (x8017 : ('T, 'T PromiseLike.t) union2)
                                     ->
                                     ignore
                                       (Ojs.apply x8016
                                          [|(union2_to_js Obj.magic
                                               (fun
                                                  (x8019 : 'T PromiseLike.t)
                                                  ->
                                                  PromiseLike.t_to_js
                                                    Obj.magic x8019) x8017)|]))
                         ~reject:(fun ?reason:(x8022 : any option) ->
                                    fun () ->
                                      ignore
                                        (Ojs.call x8021 "apply"
                                           [|Ojs.null;((let x8023 =
                                                          Ojs.new_obj
                                                            (Ojs.get_prop_ascii
                                                               Ojs.global
                                                               "Array") 
                                                            [||] in
                                                        (match x8022 with
                                                         | Some x8024 ->
                                                             ignore
                                                               (Ojs.call
                                                                  x8023
                                                                  "push"
                                                                  [|(
                                                                    any_to_js
                                                                    x8024)|])
                                                         | None -> ());
                                                        x8023))|]))))|])
    let (all :
      (('T1, 'T1 PromiseLike.t) union2 * ('T2, 'T2 PromiseLike.t) union2 *
        ('T3, 'T3 PromiseLike.t) union2 * ('T4, 'T4 PromiseLike.t) union2 *
        ('T5, 'T5 PromiseLike.t) union2 * ('T6, 'T6 PromiseLike.t) union2 *
        ('T7, 'T7 PromiseLike.t) union2 * ('T8, 'T8 PromiseLike.t) union2 *
        ('T9, 'T9 PromiseLike.t) union2 * ('T10, 'T10 PromiseLike.t) union2)
        -> ('T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10) t)
      =
      fun
        (x8026 :
          (('T1, 'T1 PromiseLike.t) union2 * ('T2, 'T2 PromiseLike.t) union2
            * ('T3, 'T3 PromiseLike.t) union2 * ('T4, 'T4 PromiseLike.t)
            union2 * ('T5, 'T5 PromiseLike.t) union2 * ('T6,
            'T6 PromiseLike.t) union2 * ('T7, 'T7 PromiseLike.t) union2 *
            ('T8, 'T8 PromiseLike.t) union2 * ('T9, 'T9 PromiseLike.t) union2
            * ('T10, 'T10 PromiseLike.t) union2))
        ->
        t_of_js
          (fun (x8068 : Ojs.t) ->
             let x8069 = x8068 in
             ((Obj.magic (Ojs.array_get x8069 0)),
               (Obj.magic (Ojs.array_get x8069 1)),
               (Obj.magic (Ojs.array_get x8069 2)),
               (Obj.magic (Ojs.array_get x8069 3)),
               (Obj.magic (Ojs.array_get x8069 4)),
               (Obj.magic (Ojs.array_get x8069 5)),
               (Obj.magic (Ojs.array_get x8069 6)),
               (Obj.magic (Ojs.array_get x8069 7)),
               (Obj.magic (Ojs.array_get x8069 8)),
               (Obj.magic (Ojs.array_get x8069 9))))
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "all"
             [|((let (x8027, x8028, x8029, x8030, x8031, x8032, x8033, x8034,
                      x8035, x8036)
                   = x8026 in
                 let x8037 = Ojs.array_make 10 in
                 Ojs.array_set x8037 0
                   (union2_to_js Obj.magic
                      (fun (x8066 : 'T1 PromiseLike.t) ->
                         PromiseLike.t_to_js Obj.magic x8066) x8027);
                 Ojs.array_set x8037 1
                   (union2_to_js Obj.magic
                      (fun (x8063 : 'T2 PromiseLike.t) ->
                         PromiseLike.t_to_js Obj.magic x8063) x8028);
                 Ojs.array_set x8037 2
                   (union2_to_js Obj.magic
                      (fun (x8060 : 'T3 PromiseLike.t) ->
                         PromiseLike.t_to_js Obj.magic x8060) x8029);
                 Ojs.array_set x8037 3
                   (union2_to_js Obj.magic
                      (fun (x8057 : 'T4 PromiseLike.t) ->
                         PromiseLike.t_to_js Obj.magic x8057) x8030);
                 Ojs.array_set x8037 4
                   (union2_to_js Obj.magic
                      (fun (x8054 : 'T5 PromiseLike.t) ->
                         PromiseLike.t_to_js Obj.magic x8054) x8031);
                 Ojs.array_set x8037 5
                   (union2_to_js Obj.magic
                      (fun (x8051 : 'T6 PromiseLike.t) ->
                         PromiseLike.t_to_js Obj.magic x8051) x8032);
                 Ojs.array_set x8037 6
                   (union2_to_js Obj.magic
                      (fun (x8048 : 'T7 PromiseLike.t) ->
                         PromiseLike.t_to_js Obj.magic x8048) x8033);
                 Ojs.array_set x8037 7
                   (union2_to_js Obj.magic
                      (fun (x8045 : 'T8 PromiseLike.t) ->
                         PromiseLike.t_to_js Obj.magic x8045) x8034);
                 Ojs.array_set x8037 8
                   (union2_to_js Obj.magic
                      (fun (x8042 : 'T9 PromiseLike.t) ->
                         PromiseLike.t_to_js Obj.magic x8042) x8035);
                 Ojs.array_set x8037 9
                   (union2_to_js Obj.magic
                      (fun (x8039 : 'T10 PromiseLike.t) ->
                         PromiseLike.t_to_js Obj.magic x8039) x8036);
                 x8037))|])
    let (all' :
      (('T1, 'T1 PromiseLike.t) union2 * ('T2, 'T2 PromiseLike.t) union2 *
        ('T3, 'T3 PromiseLike.t) union2 * ('T4, 'T4 PromiseLike.t) union2 *
        ('T5, 'T5 PromiseLike.t) union2 * ('T6, 'T6 PromiseLike.t) union2 *
        ('T7, 'T7 PromiseLike.t) union2 * ('T8, 'T8 PromiseLike.t) union2 *
        ('T9, 'T9 PromiseLike.t) union2) ->
        ('T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9) t)
      =
      fun
        (x8070 :
          (('T1, 'T1 PromiseLike.t) union2 * ('T2, 'T2 PromiseLike.t) union2
            * ('T3, 'T3 PromiseLike.t) union2 * ('T4, 'T4 PromiseLike.t)
            union2 * ('T5, 'T5 PromiseLike.t) union2 * ('T6,
            'T6 PromiseLike.t) union2 * ('T7, 'T7 PromiseLike.t) union2 *
            ('T8, 'T8 PromiseLike.t) union2 * ('T9, 'T9 PromiseLike.t)
            union2))
        ->
        t_of_js
          (fun (x8108 : Ojs.t) ->
             let x8109 = x8108 in
             ((Obj.magic (Ojs.array_get x8109 0)),
               (Obj.magic (Ojs.array_get x8109 1)),
               (Obj.magic (Ojs.array_get x8109 2)),
               (Obj.magic (Ojs.array_get x8109 3)),
               (Obj.magic (Ojs.array_get x8109 4)),
               (Obj.magic (Ojs.array_get x8109 5)),
               (Obj.magic (Ojs.array_get x8109 6)),
               (Obj.magic (Ojs.array_get x8109 7)),
               (Obj.magic (Ojs.array_get x8109 8))))
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "all"
             [|((let (x8071, x8072, x8073, x8074, x8075, x8076, x8077, x8078,
                      x8079)
                   = x8070 in
                 let x8080 = Ojs.array_make 9 in
                 Ojs.array_set x8080 0
                   (union2_to_js Obj.magic
                      (fun (x8106 : 'T1 PromiseLike.t) ->
                         PromiseLike.t_to_js Obj.magic x8106) x8071);
                 Ojs.array_set x8080 1
                   (union2_to_js Obj.magic
                      (fun (x8103 : 'T2 PromiseLike.t) ->
                         PromiseLike.t_to_js Obj.magic x8103) x8072);
                 Ojs.array_set x8080 2
                   (union2_to_js Obj.magic
                      (fun (x8100 : 'T3 PromiseLike.t) ->
                         PromiseLike.t_to_js Obj.magic x8100) x8073);
                 Ojs.array_set x8080 3
                   (union2_to_js Obj.magic
                      (fun (x8097 : 'T4 PromiseLike.t) ->
                         PromiseLike.t_to_js Obj.magic x8097) x8074);
                 Ojs.array_set x8080 4
                   (union2_to_js Obj.magic
                      (fun (x8094 : 'T5 PromiseLike.t) ->
                         PromiseLike.t_to_js Obj.magic x8094) x8075);
                 Ojs.array_set x8080 5
                   (union2_to_js Obj.magic
                      (fun (x8091 : 'T6 PromiseLike.t) ->
                         PromiseLike.t_to_js Obj.magic x8091) x8076);
                 Ojs.array_set x8080 6
                   (union2_to_js Obj.magic
                      (fun (x8088 : 'T7 PromiseLike.t) ->
                         PromiseLike.t_to_js Obj.magic x8088) x8077);
                 Ojs.array_set x8080 7
                   (union2_to_js Obj.magic
                      (fun (x8085 : 'T8 PromiseLike.t) ->
                         PromiseLike.t_to_js Obj.magic x8085) x8078);
                 Ojs.array_set x8080 8
                   (union2_to_js Obj.magic
                      (fun (x8082 : 'T9 PromiseLike.t) ->
                         PromiseLike.t_to_js Obj.magic x8082) x8079);
                 x8080))|])
    let (all'' :
      (('T1, 'T1 PromiseLike.t) union2 * ('T2, 'T2 PromiseLike.t) union2 *
        ('T3, 'T3 PromiseLike.t) union2 * ('T4, 'T4 PromiseLike.t) union2 *
        ('T5, 'T5 PromiseLike.t) union2 * ('T6, 'T6 PromiseLike.t) union2 *
        ('T7, 'T7 PromiseLike.t) union2 * ('T8, 'T8 PromiseLike.t) union2) ->
        ('T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8) t)
      =
      fun
        (x8110 :
          (('T1, 'T1 PromiseLike.t) union2 * ('T2, 'T2 PromiseLike.t) union2
            * ('T3, 'T3 PromiseLike.t) union2 * ('T4, 'T4 PromiseLike.t)
            union2 * ('T5, 'T5 PromiseLike.t) union2 * ('T6,
            'T6 PromiseLike.t) union2 * ('T7, 'T7 PromiseLike.t) union2 *
            ('T8, 'T8 PromiseLike.t) union2))
        ->
        t_of_js
          (fun (x8144 : Ojs.t) ->
             let x8145 = x8144 in
             ((Obj.magic (Ojs.array_get x8145 0)),
               (Obj.magic (Ojs.array_get x8145 1)),
               (Obj.magic (Ojs.array_get x8145 2)),
               (Obj.magic (Ojs.array_get x8145 3)),
               (Obj.magic (Ojs.array_get x8145 4)),
               (Obj.magic (Ojs.array_get x8145 5)),
               (Obj.magic (Ojs.array_get x8145 6)),
               (Obj.magic (Ojs.array_get x8145 7))))
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "all"
             [|((let (x8111, x8112, x8113, x8114, x8115, x8116, x8117, x8118)
                   = x8110 in
                 let x8119 = Ojs.array_make 8 in
                 Ojs.array_set x8119 0
                   (union2_to_js Obj.magic
                      (fun (x8142 : 'T1 PromiseLike.t) ->
                         PromiseLike.t_to_js Obj.magic x8142) x8111);
                 Ojs.array_set x8119 1
                   (union2_to_js Obj.magic
                      (fun (x8139 : 'T2 PromiseLike.t) ->
                         PromiseLike.t_to_js Obj.magic x8139) x8112);
                 Ojs.array_set x8119 2
                   (union2_to_js Obj.magic
                      (fun (x8136 : 'T3 PromiseLike.t) ->
                         PromiseLike.t_to_js Obj.magic x8136) x8113);
                 Ojs.array_set x8119 3
                   (union2_to_js Obj.magic
                      (fun (x8133 : 'T4 PromiseLike.t) ->
                         PromiseLike.t_to_js Obj.magic x8133) x8114);
                 Ojs.array_set x8119 4
                   (union2_to_js Obj.magic
                      (fun (x8130 : 'T5 PromiseLike.t) ->
                         PromiseLike.t_to_js Obj.magic x8130) x8115);
                 Ojs.array_set x8119 5
                   (union2_to_js Obj.magic
                      (fun (x8127 : 'T6 PromiseLike.t) ->
                         PromiseLike.t_to_js Obj.magic x8127) x8116);
                 Ojs.array_set x8119 6
                   (union2_to_js Obj.magic
                      (fun (x8124 : 'T7 PromiseLike.t) ->
                         PromiseLike.t_to_js Obj.magic x8124) x8117);
                 Ojs.array_set x8119 7
                   (union2_to_js Obj.magic
                      (fun (x8121 : 'T8 PromiseLike.t) ->
                         PromiseLike.t_to_js Obj.magic x8121) x8118);
                 x8119))|])
    let (all''' :
      (('T1, 'T1 PromiseLike.t) union2 * ('T2, 'T2 PromiseLike.t) union2 *
        ('T3, 'T3 PromiseLike.t) union2 * ('T4, 'T4 PromiseLike.t) union2 *
        ('T5, 'T5 PromiseLike.t) union2 * ('T6, 'T6 PromiseLike.t) union2 *
        ('T7, 'T7 PromiseLike.t) union2) ->
        ('T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7) t)
      =
      fun
        (x8146 :
          (('T1, 'T1 PromiseLike.t) union2 * ('T2, 'T2 PromiseLike.t) union2
            * ('T3, 'T3 PromiseLike.t) union2 * ('T4, 'T4 PromiseLike.t)
            union2 * ('T5, 'T5 PromiseLike.t) union2 * ('T6,
            'T6 PromiseLike.t) union2 * ('T7, 'T7 PromiseLike.t) union2))
        ->
        t_of_js
          (fun (x8176 : Ojs.t) ->
             let x8177 = x8176 in
             ((Obj.magic (Ojs.array_get x8177 0)),
               (Obj.magic (Ojs.array_get x8177 1)),
               (Obj.magic (Ojs.array_get x8177 2)),
               (Obj.magic (Ojs.array_get x8177 3)),
               (Obj.magic (Ojs.array_get x8177 4)),
               (Obj.magic (Ojs.array_get x8177 5)),
               (Obj.magic (Ojs.array_get x8177 6))))
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "all"
             [|((let (x8147, x8148, x8149, x8150, x8151, x8152, x8153) =
                   x8146 in
                 let x8154 = Ojs.array_make 7 in
                 Ojs.array_set x8154 0
                   (union2_to_js Obj.magic
                      (fun (x8174 : 'T1 PromiseLike.t) ->
                         PromiseLike.t_to_js Obj.magic x8174) x8147);
                 Ojs.array_set x8154 1
                   (union2_to_js Obj.magic
                      (fun (x8171 : 'T2 PromiseLike.t) ->
                         PromiseLike.t_to_js Obj.magic x8171) x8148);
                 Ojs.array_set x8154 2
                   (union2_to_js Obj.magic
                      (fun (x8168 : 'T3 PromiseLike.t) ->
                         PromiseLike.t_to_js Obj.magic x8168) x8149);
                 Ojs.array_set x8154 3
                   (union2_to_js Obj.magic
                      (fun (x8165 : 'T4 PromiseLike.t) ->
                         PromiseLike.t_to_js Obj.magic x8165) x8150);
                 Ojs.array_set x8154 4
                   (union2_to_js Obj.magic
                      (fun (x8162 : 'T5 PromiseLike.t) ->
                         PromiseLike.t_to_js Obj.magic x8162) x8151);
                 Ojs.array_set x8154 5
                   (union2_to_js Obj.magic
                      (fun (x8159 : 'T6 PromiseLike.t) ->
                         PromiseLike.t_to_js Obj.magic x8159) x8152);
                 Ojs.array_set x8154 6
                   (union2_to_js Obj.magic
                      (fun (x8156 : 'T7 PromiseLike.t) ->
                         PromiseLike.t_to_js Obj.magic x8156) x8153);
                 x8154))|])
    let (all'''' :
      (('T1, 'T1 PromiseLike.t) union2 * ('T2, 'T2 PromiseLike.t) union2 *
        ('T3, 'T3 PromiseLike.t) union2 * ('T4, 'T4 PromiseLike.t) union2 *
        ('T5, 'T5 PromiseLike.t) union2 * ('T6, 'T6 PromiseLike.t) union2) ->
        ('T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6) t)
      =
      fun
        (x8178 :
          (('T1, 'T1 PromiseLike.t) union2 * ('T2, 'T2 PromiseLike.t) union2
            * ('T3, 'T3 PromiseLike.t) union2 * ('T4, 'T4 PromiseLike.t)
            union2 * ('T5, 'T5 PromiseLike.t) union2 * ('T6,
            'T6 PromiseLike.t) union2))
        ->
        t_of_js
          (fun (x8204 : Ojs.t) ->
             let x8205 = x8204 in
             ((Obj.magic (Ojs.array_get x8205 0)),
               (Obj.magic (Ojs.array_get x8205 1)),
               (Obj.magic (Ojs.array_get x8205 2)),
               (Obj.magic (Ojs.array_get x8205 3)),
               (Obj.magic (Ojs.array_get x8205 4)),
               (Obj.magic (Ojs.array_get x8205 5))))
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "all"
             [|((let (x8179, x8180, x8181, x8182, x8183, x8184) = x8178 in
                 let x8185 = Ojs.array_make 6 in
                 Ojs.array_set x8185 0
                   (union2_to_js Obj.magic
                      (fun (x8202 : 'T1 PromiseLike.t) ->
                         PromiseLike.t_to_js Obj.magic x8202) x8179);
                 Ojs.array_set x8185 1
                   (union2_to_js Obj.magic
                      (fun (x8199 : 'T2 PromiseLike.t) ->
                         PromiseLike.t_to_js Obj.magic x8199) x8180);
                 Ojs.array_set x8185 2
                   (union2_to_js Obj.magic
                      (fun (x8196 : 'T3 PromiseLike.t) ->
                         PromiseLike.t_to_js Obj.magic x8196) x8181);
                 Ojs.array_set x8185 3
                   (union2_to_js Obj.magic
                      (fun (x8193 : 'T4 PromiseLike.t) ->
                         PromiseLike.t_to_js Obj.magic x8193) x8182);
                 Ojs.array_set x8185 4
                   (union2_to_js Obj.magic
                      (fun (x8190 : 'T5 PromiseLike.t) ->
                         PromiseLike.t_to_js Obj.magic x8190) x8183);
                 Ojs.array_set x8185 5
                   (union2_to_js Obj.magic
                      (fun (x8187 : 'T6 PromiseLike.t) ->
                         PromiseLike.t_to_js Obj.magic x8187) x8184);
                 x8185))|])
    let (all''''' :
      (('T1, 'T1 PromiseLike.t) union2 * ('T2, 'T2 PromiseLike.t) union2 *
        ('T3, 'T3 PromiseLike.t) union2 * ('T4, 'T4 PromiseLike.t) union2 *
        ('T5, 'T5 PromiseLike.t) union2) -> ('T1 * 'T2 * 'T3 * 'T4 * 'T5) t)
      =
      fun
        (x8206 :
          (('T1, 'T1 PromiseLike.t) union2 * ('T2, 'T2 PromiseLike.t) union2
            * ('T3, 'T3 PromiseLike.t) union2 * ('T4, 'T4 PromiseLike.t)
            union2 * ('T5, 'T5 PromiseLike.t) union2))
        ->
        t_of_js
          (fun (x8228 : Ojs.t) ->
             let x8229 = x8228 in
             ((Obj.magic (Ojs.array_get x8229 0)),
               (Obj.magic (Ojs.array_get x8229 1)),
               (Obj.magic (Ojs.array_get x8229 2)),
               (Obj.magic (Ojs.array_get x8229 3)),
               (Obj.magic (Ojs.array_get x8229 4))))
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "all"
             [|((let (x8207, x8208, x8209, x8210, x8211) = x8206 in
                 let x8212 = Ojs.array_make 5 in
                 Ojs.array_set x8212 0
                   (union2_to_js Obj.magic
                      (fun (x8226 : 'T1 PromiseLike.t) ->
                         PromiseLike.t_to_js Obj.magic x8226) x8207);
                 Ojs.array_set x8212 1
                   (union2_to_js Obj.magic
                      (fun (x8223 : 'T2 PromiseLike.t) ->
                         PromiseLike.t_to_js Obj.magic x8223) x8208);
                 Ojs.array_set x8212 2
                   (union2_to_js Obj.magic
                      (fun (x8220 : 'T3 PromiseLike.t) ->
                         PromiseLike.t_to_js Obj.magic x8220) x8209);
                 Ojs.array_set x8212 3
                   (union2_to_js Obj.magic
                      (fun (x8217 : 'T4 PromiseLike.t) ->
                         PromiseLike.t_to_js Obj.magic x8217) x8210);
                 Ojs.array_set x8212 4
                   (union2_to_js Obj.magic
                      (fun (x8214 : 'T5 PromiseLike.t) ->
                         PromiseLike.t_to_js Obj.magic x8214) x8211);
                 x8212))|])
    let (all'''''' :
      (('T1, 'T1 PromiseLike.t) union2 * ('T2, 'T2 PromiseLike.t) union2 *
        ('T3, 'T3 PromiseLike.t) union2 * ('T4, 'T4 PromiseLike.t) union2) ->
        ('T1 * 'T2 * 'T3 * 'T4) t)
      =
      fun
        (x8230 :
          (('T1, 'T1 PromiseLike.t) union2 * ('T2, 'T2 PromiseLike.t) union2
            * ('T3, 'T3 PromiseLike.t) union2 * ('T4, 'T4 PromiseLike.t)
            union2))
        ->
        t_of_js
          (fun (x8248 : Ojs.t) ->
             let x8249 = x8248 in
             ((Obj.magic (Ojs.array_get x8249 0)),
               (Obj.magic (Ojs.array_get x8249 1)),
               (Obj.magic (Ojs.array_get x8249 2)),
               (Obj.magic (Ojs.array_get x8249 3))))
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "all"
             [|((let (x8231, x8232, x8233, x8234) = x8230 in
                 let x8235 = Ojs.array_make 4 in
                 Ojs.array_set x8235 0
                   (union2_to_js Obj.magic
                      (fun (x8246 : 'T1 PromiseLike.t) ->
                         PromiseLike.t_to_js Obj.magic x8246) x8231);
                 Ojs.array_set x8235 1
                   (union2_to_js Obj.magic
                      (fun (x8243 : 'T2 PromiseLike.t) ->
                         PromiseLike.t_to_js Obj.magic x8243) x8232);
                 Ojs.array_set x8235 2
                   (union2_to_js Obj.magic
                      (fun (x8240 : 'T3 PromiseLike.t) ->
                         PromiseLike.t_to_js Obj.magic x8240) x8233);
                 Ojs.array_set x8235 3
                   (union2_to_js Obj.magic
                      (fun (x8237 : 'T4 PromiseLike.t) ->
                         PromiseLike.t_to_js Obj.magic x8237) x8234);
                 x8235))|])
    let (all''''''' :
      (('T1, 'T1 PromiseLike.t) union2 * ('T2, 'T2 PromiseLike.t) union2 *
        ('T3, 'T3 PromiseLike.t) union2) -> ('T1 * 'T2 * 'T3) t)
      =
      fun
        (x8250 :
          (('T1, 'T1 PromiseLike.t) union2 * ('T2, 'T2 PromiseLike.t) union2
            * ('T3, 'T3 PromiseLike.t) union2))
        ->
        t_of_js
          (fun (x8264 : Ojs.t) ->
             let x8265 = x8264 in
             ((Obj.magic (Ojs.array_get x8265 0)),
               (Obj.magic (Ojs.array_get x8265 1)),
               (Obj.magic (Ojs.array_get x8265 2))))
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "all"
             [|((let (x8251, x8252, x8253) = x8250 in
                 let x8254 = Ojs.array_make 3 in
                 Ojs.array_set x8254 0
                   (union2_to_js Obj.magic
                      (fun (x8262 : 'T1 PromiseLike.t) ->
                         PromiseLike.t_to_js Obj.magic x8262) x8251);
                 Ojs.array_set x8254 1
                   (union2_to_js Obj.magic
                      (fun (x8259 : 'T2 PromiseLike.t) ->
                         PromiseLike.t_to_js Obj.magic x8259) x8252);
                 Ojs.array_set x8254 2
                   (union2_to_js Obj.magic
                      (fun (x8256 : 'T3 PromiseLike.t) ->
                         PromiseLike.t_to_js Obj.magic x8256) x8253);
                 x8254))|])
    let (all'''''''' :
      (('T1, 'T1 PromiseLike.t) union2 * ('T2, 'T2 PromiseLike.t) union2) ->
        ('T1 * 'T2) t)
      =
      fun
        (x8266 :
          (('T1, 'T1 PromiseLike.t) union2 * ('T2, 'T2 PromiseLike.t) union2))
        ->
        t_of_js
          (fun (x8276 : Ojs.t) ->
             let x8277 = x8276 in
             ((Obj.magic (Ojs.array_get x8277 0)),
               (Obj.magic (Ojs.array_get x8277 1))))
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "all"
             [|((let (x8267, x8268) = x8266 in
                 let x8269 = Ojs.array_make 2 in
                 Ojs.array_set x8269 0
                   (union2_to_js Obj.magic
                      (fun (x8274 : 'T1 PromiseLike.t) ->
                         PromiseLike.t_to_js Obj.magic x8274) x8267);
                 Ojs.array_set x8269 1
                   (union2_to_js Obj.magic
                      (fun (x8271 : 'T2 PromiseLike.t) ->
                         PromiseLike.t_to_js Obj.magic x8271) x8268);
                 x8269))|])
    let (all''''''''' : ('T, 'T PromiseLike.t) union2 list -> 'T list t) =
      fun (x8278 : ('T, 'T PromiseLike.t) union2 list) ->
        t_of_js (fun (x8283 : Ojs.t) -> Ojs.list_of_js Obj.magic x8283)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "all"
             [|(Ojs.list_to_js
                  (fun (x8279 : ('T, 'T PromiseLike.t) union2) ->
                     union2_to_js Obj.magic
                       (fun (x8281 : 'T PromiseLike.t) ->
                          PromiseLike.t_to_js Obj.magic x8281) x8279) x8278)|])
    let (race : 'T list -> any t) =
      fun (x8285 : 'T list) ->
        t_of_js any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "race"
             [|(Ojs.list_to_js Obj.magic x8285)|])
    let (reject : ?reason:any -> unit -> 'T t) =
      fun ?reason:(x8288 : any option) ->
        fun () ->
          t_of_js Obj.magic
            (let x8291 = Ojs.get_prop_ascii Ojs.global "Promise" in
             Ojs.call (Ojs.get_prop_ascii x8291 "reject") "apply"
               [|x8291;((let x8289 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         (match x8288 with
                          | Some x8290 ->
                              ignore
                                (Ojs.call x8289 "push" [|(any_to_js x8290)|])
                          | None -> ());
                         x8289))|])
    let (resolve : unit -> unit t) =
      fun () ->
        t_of_js Ojs.unit_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "resolve" [||])
    let (resolve' : ('T, 'T PromiseLike.t) union2 -> 'T t) =
      fun (x8294 : ('T, 'T PromiseLike.t) union2) ->
        t_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "resolve"
             [|(union2_to_js Obj.magic
                  (fun (x8296 : 'T PromiseLike.t) ->
                     PromiseLike.t_to_js Obj.magic x8296) x8294)|])
    let (allSettled : 'T -> any t) =
      fun (x8299 : 'T) ->
        t_of_js any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "allSettled"
             [|(Obj.magic x8299)|])
    let (allSettled' : 'T Iterable.t -> any PromiseSettledResult.t list t) =
      fun (x8301 : 'T Iterable.t) ->
        t_of_js
          (fun (x8303 : Ojs.t) ->
             Ojs.list_of_js
               (fun (x8304 : Ojs.t) ->
                  PromiseSettledResult.t_of_js any_of_js x8304) x8303)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "allSettled"
             [|(Iterable.t_to_js Obj.magic x8301)|])
    let (any' :
      (('T, 'T PromiseLike.t) union2 Iterable.t,
        ('T, 'T PromiseLike.t) union2) or_array -> 'T t)
      =
      fun
        (x8306 :
          (('T, 'T PromiseLike.t) union2 Iterable.t,
            ('T, 'T PromiseLike.t) union2) or_array)
        ->
        t_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "any"
             [|(or_array_to_js
                  (fun (x8307 : ('T, 'T PromiseLike.t) union2 Iterable.t) ->
                     Iterable.t_to_js
                       (fun (x8308 : ('T, 'T PromiseLike.t) union2) ->
                          union2_to_js Obj.magic
                            (fun (x8310 : 'T PromiseLike.t) ->
                               PromiseLike.t_to_js Obj.magic x8310) x8308)
                       x8307)
                  (fun (x8312 : ('T, 'T PromiseLike.t) union2) ->
                     union2_to_js Obj.magic
                       (fun (x8314 : 'T PromiseLike.t) ->
                          PromiseLike.t_to_js Obj.magic x8314) x8312) x8306)|])
    let (all'''''''''' :
      ('T, 'T PromiseLike.t) union2 Iterable.t -> 'T list t) =
      fun (x8317 : ('T, 'T PromiseLike.t) union2 Iterable.t) ->
        t_of_js (fun (x8322 : Ojs.t) -> Ojs.list_of_js Obj.magic x8322)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "all"
             [|(Iterable.t_to_js
                  (fun (x8318 : ('T, 'T PromiseLike.t) union2) ->
                     union2_to_js Obj.magic
                       (fun (x8320 : 'T PromiseLike.t) ->
                          PromiseLike.t_to_js Obj.magic x8320) x8318) x8317)|])
    let (race' : 'T Iterable.t -> any t) =
      fun (x8324 : 'T Iterable.t) ->
        t_of_js any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "race"
             [|(Iterable.t_to_js Obj.magic x8324)|])
    let (race'' : ('T, 'T PromiseLike.t) union2 Iterable.t -> 'T t) =
      fun (x8327 : ('T, 'T PromiseLike.t) union2 Iterable.t) ->
        t_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "race"
             [|(Iterable.t_to_js
                  (fun (x8328 : ('T, 'T PromiseLike.t) union2) ->
                     union2_to_js Obj.magic
                       (fun (x8330 : 'T PromiseLike.t) ->
                          PromiseLike.t_to_js Obj.magic x8330) x8328) x8327)|])
    let cast_from = Obj.magic
  end
module AsyncIterator =
  struct
    type ('T, 'TReturn, 'TNext) t =
      [ `AsyncIterator of ('T * 'TReturn * 'TNext) ] intf
    let rec t_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    and t_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t -> Ojs.t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    type ('T, 'TReturn, 'TNext) t_3 = ('T, 'TReturn, 'TNext) t
    let rec t_3_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t_3
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (__TNext_of_js : Ojs.t -> __TNext) ->
            fun (x8337 : Ojs.t) ->
              t_of_js __T_of_js __TReturn_of_js __TNext_of_js x8337
    and t_3_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t_3 -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (__TNext_to_js : __TNext -> Ojs.t) ->
            fun (x8333 : (__T, __TReturn, __TNext) t) ->
              t_to_js __T_to_js __TReturn_to_js __TNext_to_js x8333
    type ('T, 'TReturn) t_2 = ('T, 'TReturn, never or_undefined) t
    let rec t_2_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t_2
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (x8346 : Ojs.t) ->
            t_of_js __T_of_js __TReturn_of_js
              (fun (x8349 : Ojs.t) -> or_undefined_of_js never_of_js x8349)
              x8346
    and t_2_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t_2 -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (x8341 : (__T, __TReturn, never or_undefined) t) ->
            t_to_js __T_to_js __TReturn_to_js
              (fun (x8344 : never or_undefined) ->
                 or_undefined_to_js never_to_js x8344) x8341
    type 'T t_1 = ('T, any, never or_undefined) t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x8356 : Ojs.t) ->
          t_of_js __T_of_js any_of_js
            (fun (x8359 : Ojs.t) -> or_undefined_of_js never_of_js x8359)
            x8356
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x8351 : (__T, any, never or_undefined) t) ->
          t_to_js __T_to_js any_to_js
            (fun (x8354 : never or_undefined) ->
               or_undefined_to_js never_to_js x8354) x8351
    type ('T, 'TReturn, 'TNext) tags =
      [ `AsyncIterator of ('T * 'TReturn * 'TNext) ]
    type ('T, 'TReturn, 'TNext) tags_3 = ('T, 'TReturn, 'TNext) tags
    type ('T, 'TReturn) tags_2 = ('T, 'TReturn, never or_undefined) tags
    type 'T tags_1 = ('T, any, never or_undefined) tags
    type ('tags, 'T, 'TReturn, 'TNext) this =
      'tags intf constraint 'tags =
                  [> `AsyncIterator of ('T * 'TReturn * 'TNext) ]
    let rec this_of_js :
      'tags 'T 'TReturn 'TNext .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'T) ->
            (Ojs.t -> 'TReturn) ->
              (Ojs.t -> 'TNext) ->
                Ojs.t -> ('tags, 'T, 'TReturn, 'TNext) this
      = fun (type __tags) -> fun (type __T) -> fun (type __TReturn) -> fun
      (type __TNext) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
            fun (__TNext_of_js : Ojs.t -> __TNext) ->
              fun (x8363 : Ojs.t) -> intf_of_js __tags_of_js x8363
    and this_to_js :
      'tags 'T 'TReturn 'TNext .
        ('tags -> Ojs.t) ->
          ('T -> Ojs.t) ->
            ('TReturn -> Ojs.t) ->
              ('TNext -> Ojs.t) ->
                ('tags, 'T, 'TReturn, 'TNext) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) -> fun (type __TReturn) -> fun
      (type __TNext) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
            fun (__TNext_to_js : __TNext -> Ojs.t) ->
              fun (x8361 : __tags intf) -> intf_to_js __tags_to_js x8361
    let (next :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        args:any list -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x8368 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~args:(x8365 : any list) ->
          Promise.t_of_js
            (fun (x8374 : Ojs.t) ->
               IteratorResult.t_of_js Obj.magic Obj.magic x8374)
            (let x8373 =
               this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x8368 in
             Ojs.call (Ojs.get_prop_ascii x8373 "next") "apply"
               [|x8373;((let x8366 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x8367 : any) ->
                              ignore
                                (Ojs.call x8366 "push" [|(any_to_js x8367)|]))
                           x8365;
                         x8366))|])
    let (return :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        ?value:('TReturn, 'TReturn PromiseLike.t) union2 ->
          unit -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x8383 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ?value:(x8377 : ('TReturn, 'TReturn PromiseLike.t) union2 option)
          ->
          fun () ->
            Promise.t_of_js
              (fun (x8389 : Ojs.t) ->
                 IteratorResult.t_of_js Obj.magic Obj.magic x8389)
              (let x8388 =
                 this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x8383 in
               Ojs.call (Ojs.get_prop_ascii x8388 "return") "apply"
                 [|x8388;((let x8378 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8377 with
                            | Some x8379 ->
                                ignore
                                  (Ojs.call x8378 "push"
                                     [|(union2_to_js Obj.magic
                                          (fun
                                             (x8381 : 'TReturn PromiseLike.t)
                                             ->
                                             PromiseLike.t_to_js Obj.magic
                                               x8381) x8379)|])
                            | None -> ());
                           x8378))|])
    let (throw :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        ?e:any -> unit -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x8395 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ?e:(x8392 : any option) ->
          fun () ->
            Promise.t_of_js
              (fun (x8401 : Ojs.t) ->
                 IteratorResult.t_of_js Obj.magic Obj.magic x8401)
              (let x8400 =
                 this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x8395 in
               Ojs.call (Ojs.get_prop_ascii x8400 "throw") "apply"
                 [|x8400;((let x8393 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8392 with
                            | Some x8394 ->
                                ignore
                                  (Ojs.call x8393 "push"
                                     [|(any_to_js x8394)|])
                            | None -> ());
                           x8393))|])
    let cast_from = Obj.magic
  end
module AsyncIterableIterator =
  struct
    type 'T t =
      [ `AsyncIterableIterator of 'T 
      | `AsyncIterator of ('T * any * never or_undefined) ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x8406 : Ojs.t) -> t_of_js __T_of_js x8406
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x8404 : __T t) -> t_to_js __T_to_js x8404
    type 'T tags =
      [ `AsyncIterableIterator of 'T 
      | `AsyncIterator of ('T * any * never or_undefined) ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `AsyncIterableIterator of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x8410 : Ojs.t) -> intf_of_js __tags_of_js x8410
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x8408 : __tags intf) -> intf_to_js __tags_to_js x8408
    let cast_from = Obj.magic
  end
module AsyncIterable =
  struct
    type 'T t = [ `AsyncIterable of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x8414 : Ojs.t) -> t_of_js __T_of_js x8414
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x8412 : __T t) -> t_to_js __T_to_js x8412
    type 'T tags = [ `AsyncIterable of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `AsyncIterable of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x8418 : Ojs.t) -> intf_of_js __tags_of_js x8418
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x8416 : __tags intf) -> intf_to_js __tags_to_js x8416
    let cast_from = Obj.magic
  end
module AsyncGenerator =
  struct
    type ('T, 'TReturn, 'TNext) t =
      [ `AsyncGenerator of ('T * 'TReturn * 'TNext) 
      | `AsyncIterator of ('T * 'TReturn * 'TNext) ] intf
    let rec t_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    and t_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t -> Ojs.t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    type ('T, 'TReturn, 'TNext) t_3 = ('T, 'TReturn, 'TNext) t
    let rec t_3_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t_3
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (__TNext_of_js : Ojs.t -> __TNext) ->
            fun (x8424 : Ojs.t) ->
              t_of_js __T_of_js __TReturn_of_js __TNext_of_js x8424
    and t_3_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t_3 -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (__TNext_to_js : __TNext -> Ojs.t) ->
            fun (x8420 : (__T, __TReturn, __TNext) t) ->
              t_to_js __T_to_js __TReturn_to_js __TNext_to_js x8420
    type ('T, 'TReturn) t_2 = ('T, 'TReturn, unknown) t
    let rec t_2_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t_2
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (x8432 : Ojs.t) ->
            t_of_js __T_of_js __TReturn_of_js unknown_of_js x8432
    and t_2_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t_2 -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (x8428 : (__T, __TReturn, unknown) t) ->
            t_to_js __T_to_js __TReturn_to_js unknown_to_js x8428
    type 'T t_1 = ('T, any, unknown) t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x8440 : Ojs.t) ->
          t_of_js __T_of_js any_of_js unknown_of_js x8440
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x8436 : (__T, any, unknown) t) ->
          t_to_js __T_to_js any_to_js unknown_to_js x8436
    type t_0 = (unknown, any, unknown) t
    let rec t_0_of_js : Ojs.t -> t_0 =
      fun (x8448 : Ojs.t) ->
        t_of_js unknown_of_js any_of_js unknown_of_js x8448
    and t_0_to_js : t_0 -> Ojs.t =
      fun (x8444 : (unknown, any, unknown) t) ->
        t_to_js unknown_to_js any_to_js unknown_to_js x8444
    type ('T, 'TReturn, 'TNext) tags =
      [ `AsyncGenerator of ('T * 'TReturn * 'TNext) 
      | `AsyncIterator of ('T * 'TReturn * 'TNext) ]
    type ('T, 'TReturn, 'TNext) tags_3 = ('T, 'TReturn, 'TNext) tags
    type ('T, 'TReturn) tags_2 = ('T, 'TReturn, unknown) tags
    type 'T tags_1 = ('T, any, unknown) tags
    type tags_0 = (unknown, any, unknown) tags
    type ('tags, 'T, 'TReturn, 'TNext) this =
      'tags intf constraint 'tags =
                  [> `AsyncGenerator of ('T * 'TReturn * 'TNext) ]
    let rec this_of_js :
      'tags 'T 'TReturn 'TNext .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'T) ->
            (Ojs.t -> 'TReturn) ->
              (Ojs.t -> 'TNext) ->
                Ojs.t -> ('tags, 'T, 'TReturn, 'TNext) this
      = fun (type __tags) -> fun (type __T) -> fun (type __TReturn) -> fun
      (type __TNext) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
            fun (__TNext_of_js : Ojs.t -> __TNext) ->
              fun (x8454 : Ojs.t) -> intf_of_js __tags_of_js x8454
    and this_to_js :
      'tags 'T 'TReturn 'TNext .
        ('tags -> Ojs.t) ->
          ('T -> Ojs.t) ->
            ('TReturn -> Ojs.t) ->
              ('TNext -> Ojs.t) ->
                ('tags, 'T, 'TReturn, 'TNext) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) -> fun (type __TReturn) -> fun
      (type __TNext) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
            fun (__TNext_to_js : __TNext -> Ojs.t) ->
              fun (x8452 : __tags intf) -> intf_to_js __tags_to_js x8452
    let (next :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        args:any list -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x8459 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~args:(x8456 : any list) ->
          Promise.t_of_js
            (fun (x8465 : Ojs.t) ->
               IteratorResult.t_of_js Obj.magic Obj.magic x8465)
            (let x8464 =
               this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x8459 in
             Ojs.call (Ojs.get_prop_ascii x8464 "next") "apply"
               [|x8464;((let x8457 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x8458 : any) ->
                              ignore
                                (Ojs.call x8457 "push" [|(any_to_js x8458)|]))
                           x8456;
                         x8457))|])
    let (return :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        value:('TReturn, 'TReturn PromiseLike.t) union2 ->
          ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x8472 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~value:(x8468 : ('TReturn, 'TReturn PromiseLike.t) union2) ->
          Promise.t_of_js
            (fun (x8477 : Ojs.t) ->
               IteratorResult.t_of_js Obj.magic Obj.magic x8477)
            (Ojs.call
               (this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x8472)
               "return"
               [|(union2_to_js Obj.magic
                    (fun (x8470 : 'TReturn PromiseLike.t) ->
                       PromiseLike.t_to_js Obj.magic x8470) x8468)|])
    let (throw :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        e:any -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x8481 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~e:(x8480 : any) ->
          Promise.t_of_js
            (fun (x8486 : Ojs.t) ->
               IteratorResult.t_of_js Obj.magic Obj.magic x8486)
            (Ojs.call
               (this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x8481)
               "throw" [|(any_to_js x8480)|])
    let cast_from = Obj.magic
  end
module AsyncGeneratorFunction =
  struct
    type t = [ `AsyncGeneratorFunction ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8490 : Ojs.t) -> t_of_js x8490
    and t_0_to_js : t_0 -> Ojs.t = fun (x8489 : t) -> t_to_js x8489
    type tags = [ `AsyncGeneratorFunction ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `AsyncGeneratorFunction ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x8493 : Ojs.t) -> intf_of_js __tags_of_js x8493
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x8491 : __tags intf) -> intf_to_js __tags_to_js x8491
    let (create : 'tags this -> args:any list -> AsyncGenerator.t_0) =
      fun (x8498 : 'tags this) ->
        fun ~args:(x8495 : any list) ->
          AsyncGenerator.t_0_of_js
            (Ojs.new_obj_arr (this_to_js Obj.magic x8498)
               (let x8496 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                List.iter
                  (fun (x8497 : any) ->
                     ignore (Ojs.call x8496 "push" [|(any_to_js x8497)|]))
                  x8495;
                x8496))
    let (apply : 'tags this -> args:any list -> AsyncGenerator.t_0) =
      fun (x8503 : 'tags this) ->
        fun ~args:(x8500 : any list) ->
          AsyncGenerator.t_0_of_js
            (Ojs.call (this_to_js Obj.magic x8503) "apply"
               [|Ojs.null;((let x8501 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            List.iter
                              (fun (x8502 : any) ->
                                 ignore
                                   (Ojs.call x8501 "push"
                                      [|(any_to_js x8502)|])) x8500;
                            x8501))|])
    let (get_length : 'tags this -> float) =
      fun (x8505 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8505) "length")
    let (get_name : 'tags this -> string) =
      fun (x8507 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8507) "name")
    let (get_prototype : 'tags this -> AsyncGenerator.t_0) =
      fun (x8509 : 'tags this) ->
        AsyncGenerator.t_0_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8509) "prototype")
    let cast_from = Obj.magic
  end
module AsyncGeneratorFunctionConstructor =
  struct
    type t = [ `AsyncGeneratorFunctionConstructor ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8512 : Ojs.t) -> t_of_js x8512
    and t_0_to_js : t_0 -> Ojs.t = fun (x8511 : t) -> t_to_js x8511
    type tags = [ `AsyncGeneratorFunctionConstructor ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `AsyncGeneratorFunctionConstructor ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x8515 : Ojs.t) -> intf_of_js __tags_of_js x8515
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x8513 : __tags intf) -> intf_to_js __tags_to_js x8513
    let (create : 'tags this -> args:string list -> AsyncGeneratorFunction.t)
      =
      fun (x8520 : 'tags this) ->
        fun ~args:(x8517 : string list) ->
          AsyncGeneratorFunction.t_of_js
            (Ojs.new_obj_arr (this_to_js Obj.magic x8520)
               (let x8518 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                List.iter
                  (fun (x8519 : string) ->
                     ignore
                       (Ojs.call x8518 "push" [|(Ojs.string_to_js x8519)|]))
                  x8517;
                x8518))
    let (apply : 'tags this -> args:string list -> AsyncGeneratorFunction.t)
      =
      fun (x8525 : 'tags this) ->
        fun ~args:(x8522 : string list) ->
          AsyncGeneratorFunction.t_of_js
            (Ojs.call (this_to_js Obj.magic x8525) "apply"
               [|Ojs.null;((let x8523 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            List.iter
                              (fun (x8524 : string) ->
                                 ignore
                                   (Ojs.call x8523 "push"
                                      [|(Ojs.string_to_js x8524)|])) x8522;
                            x8523))|])
    let (get_length : 'tags this -> float) =
      fun (x8527 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8527) "length")
    let (get_name : 'tags this -> string) =
      fun (x8529 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8529) "name")
    let (get_prototype : 'tags this -> AsyncGeneratorFunction.t) =
      fun (x8531 : 'tags this) ->
        AsyncGeneratorFunction.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8531) "prototype")
    let cast_from = Obj.magic
  end
module ArrayBufferView =
  struct
    type t = [ `ArrayBufferView ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8534 : Ojs.t) -> t_of_js x8534
    and t_0_to_js : t_0 -> Ojs.t = fun (x8533 : t) -> t_to_js x8533
    type tags = [ `ArrayBufferView ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ArrayBufferView ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x8537 : Ojs.t) -> intf_of_js __tags_of_js x8537
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x8535 : __tags intf) -> intf_to_js __tags_to_js x8535
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x8539 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8539) "buffer")
    let (set_buffer : 'tags this -> ArrayBufferLike.t -> unit) =
      fun (x8541 : 'tags this) ->
        fun (x8542 : ArrayBufferLike.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x8541) "buffer"
            (ArrayBufferLike.t_to_js x8542)
    let (get_byteLength : 'tags this -> float) =
      fun (x8544 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8544) "byteLength")
    let (set_byteLength : 'tags this -> float -> unit) =
      fun (x8546 : 'tags this) ->
        fun (x8547 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x8546) "byteLength"
            (Ojs.float_to_js x8547)
    let (get_byteOffset : 'tags this -> float) =
      fun (x8549 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8549) "byteOffset")
    let (set_byteOffset : 'tags this -> float -> unit) =
      fun (x8551 : 'tags this) ->
        fun (x8552 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x8551) "byteOffset"
            (Ojs.float_to_js x8552)
    let cast_from = Obj.magic
  end
module ArrayBufferTypes =
  struct
    type t = [ `ArrayBufferTypes ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8555 : Ojs.t) -> t_of_js x8555
    and t_0_to_js : t_0 -> Ojs.t = fun (x8554 : t) -> t_to_js x8554
    type tags = [ `ArrayBufferTypes ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ArrayBufferTypes ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x8558 : Ojs.t) -> intf_of_js __tags_of_js x8558
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x8556 : __tags intf) -> intf_to_js __tags_to_js x8556
    let (get_ArrayBuffer : 'tags this -> ArrayBuffer.t) =
      fun (x8560 : 'tags this) ->
        ArrayBuffer.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8560) "ArrayBuffer")
    let (set_ArrayBuffer : 'tags this -> ArrayBuffer.t -> unit) =
      fun (x8562 : 'tags this) ->
        fun (x8563 : ArrayBuffer.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x8562) "ArrayBuffer"
            (ArrayBuffer.t_to_js x8563)
    let (get_SharedArrayBuffer : 'tags this -> SharedArrayBuffer.t) =
      fun (x8565 : 'tags this) ->
        SharedArrayBuffer.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8565)
             "SharedArrayBuffer")
    let (set_SharedArrayBuffer : 'tags this -> SharedArrayBuffer.t -> unit) =
      fun (x8567 : 'tags this) ->
        fun (x8568 : SharedArrayBuffer.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x8567) "SharedArrayBuffer"
            (SharedArrayBuffer.t_to_js x8568)
    let cast_from = Obj.magic
  end
module AggregateError =
  struct
    type t = [ `AggregateError  | `Error ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8571 : Ojs.t) -> t_of_js x8571
    and t_0_to_js : t_0 -> Ojs.t = fun (x8570 : t) -> t_to_js x8570
    type tags = [ `AggregateError  | `Error ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `AggregateError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x8574 : Ojs.t) -> intf_of_js __tags_of_js x8574
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x8572 : __tags intf) -> intf_to_js __tags_to_js x8572
    let (get_errors : 'tags this -> any list) =
      fun (x8576 : 'tags this) ->
        Ojs.list_of_js any_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8576) "errors")
    let (set_errors : 'tags this -> any list -> unit) =
      fun (x8579 : 'tags this) ->
        fun (x8580 : any list) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x8579) "errors"
            (Ojs.list_to_js any_to_js x8580)
    let (get_errors' : 'tags this -> any list) =
      fun (x8583 : 'tags this) ->
        Ojs.list_of_js any_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8583) "errors")
    let (set_errors' : 'tags this -> any list -> unit) =
      fun (x8586 : 'tags this) ->
        fun (x8587 : any list) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x8586) "errors"
            (Ojs.list_to_js any_to_js x8587)
    let (create : errors:any Iterable.t -> ?message:string -> unit -> t) =
      fun ~errors:(x8590 : any Iterable.t) ->
        fun ?message:(x8591 : string option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr
                 (Ojs.get_prop_ascii Ojs.global "AggregateError")
                 (let x8592 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore
                    (Ojs.call x8592 "push"
                       [|(Iterable.t_to_js any_to_js x8590)|]);
                  (match x8591 with
                   | Some x8593 ->
                       ignore
                         (Ojs.call x8592 "push" [|(Ojs.string_to_js x8593)|])
                   | None -> ());
                  x8592))
    let (invoke : errors:any Iterable.t -> ?message:string -> unit -> t) =
      fun ~errors:(x8595 : any Iterable.t) ->
        fun ?message:(x8596 : string option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "AggregateError")
                 "apply"
                 [|Ojs.null;((let x8597 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x8597 "push"
                                   [|(Iterable.t_to_js any_to_js x8595)|]);
                              (match x8596 with
                               | Some x8598 ->
                                   ignore
                                     (Ojs.call x8597 "push"
                                        [|(Ojs.string_to_js x8598)|])
                               | None -> ());
                              x8597))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "AggregateError") "prototype")
    let (create' : errors:any Iterable.t -> ?message:string -> unit -> t) =
      fun ~errors:(x8600 : any Iterable.t) ->
        fun ?message:(x8601 : string option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr
                 (Ojs.get_prop_ascii Ojs.global "AggregateError")
                 (let x8602 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore
                    (Ojs.call x8602 "push"
                       [|(Iterable.t_to_js any_to_js x8600)|]);
                  (match x8601 with
                   | Some x8603 ->
                       ignore
                         (Ojs.call x8602 "push" [|(Ojs.string_to_js x8603)|])
                   | None -> ());
                  x8602))
    let (invoke' : errors:any Iterable.t -> ?message:string -> unit -> t) =
      fun ~errors:(x8605 : any Iterable.t) ->
        fun ?message:(x8606 : string option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "AggregateError")
                 "apply"
                 [|Ojs.null;((let x8607 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x8607 "push"
                                   [|(Iterable.t_to_js any_to_js x8605)|]);
                              (match x8606 with
                               | Some x8608 ->
                                   ignore
                                     (Ojs.call x8607 "push"
                                        [|(Ojs.string_to_js x8608)|])
                               | None -> ());
                              x8607))|])
    let (prototype' : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "AggregateError") "prototype")
    let cast_from = Obj.magic
  end
let (proxy : unit -> ProxyConstructor.t) =
  fun () -> ProxyConstructor.t_of_js (Ojs.get_prop_ascii Ojs.global "Proxy")
let (nan : unit -> float) =
  fun () -> Ojs.float_of_js (Ojs.get_prop_ascii Ojs.global "NaN")
let (infinity : unit -> float) =
  fun () -> Ojs.float_of_js (Ojs.get_prop_ascii Ojs.global "Infinity")
let (eval : string -> any) =
  fun (x8610 : string) ->
    any_of_js (Ojs.call Ojs.global "eval" [|(Ojs.string_to_js x8610)|])
let (parseInt : string:string -> ?radix:float -> unit -> float) =
  fun ~string:(x8611 : string) ->
    fun ?radix:(x8612 : float option) ->
      fun () ->
        Ojs.float_of_js
          (let x8615 = Ojs.global in
           Ojs.call (Ojs.get_prop_ascii x8615 "parseInt") "apply"
             [|x8615;((let x8613 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       ignore
                         (Ojs.call x8613 "push" [|(Ojs.string_to_js x8611)|]);
                       (match x8612 with
                        | Some x8614 ->
                            ignore
                              (Ojs.call x8613 "push"
                                 [|(Ojs.float_to_js x8614)|])
                        | None -> ());
                       x8613))|])
let (parseFloat : string -> float) =
  fun (x8616 : string) ->
    Ojs.float_of_js
      (Ojs.call Ojs.global "parseFloat" [|(Ojs.string_to_js x8616)|])
let (isNaN : float -> bool) =
  fun (x8617 : float) ->
    Ojs.bool_of_js (Ojs.call Ojs.global "isNaN" [|(Ojs.float_to_js x8617)|])
let (isFinite : float -> bool) =
  fun (x8618 : float) ->
    Ojs.bool_of_js
      (Ojs.call Ojs.global "isFinite" [|(Ojs.float_to_js x8618)|])
let (decodeURI : string -> string) =
  fun (x8619 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "decodeURI" [|(Ojs.string_to_js x8619)|])
let (decodeURIComponent : string -> string) =
  fun (x8620 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "decodeURIComponent" [|(Ojs.string_to_js x8620)|])
let (encodeURI : string -> string) =
  fun (x8621 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "encodeURI" [|(Ojs.string_to_js x8621)|])
let (encodeURIComponent : bool or_string or_number -> string) =
  fun (x8622 : bool or_string or_number) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "encodeURIComponent"
         [|(or_number_to_js
              (fun (x8623 : bool or_string) ->
                 or_string_to_js Ojs.bool_to_js x8623) x8622)|])
let (escape : string -> string) =
  fun (x8625 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "escape" [|(Ojs.string_to_js x8625)|])
let (unescape : string -> string) =
  fun (x8626 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "unescape" [|(Ojs.string_to_js x8626)|])
