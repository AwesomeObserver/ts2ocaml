[@@@js.dummy "!! This code has been generated by gen_js_api !!"]
[@@@ocaml.warning "-7-32-39"]
[@@@ocaml.warning "-7-11-32-33-39"]
open Ts2ocaml_min
module IteratorYieldResult =
  struct
    type 'TYield t = [ `IteratorYieldResult of 'TYield ] intf
    let rec t_of_js : 'TYield . (Ojs.t -> 'TYield) -> Ojs.t -> 'TYield t =
      fun _TYield -> Obj.magic
    and t_to_js : 'TYield . ('TYield -> Ojs.t) -> 'TYield t -> Ojs.t =
      fun _TYield -> Obj.magic
    type 'TYield t_1 = 'TYield t
    let rec t_1_of_js : 'TYield . (Ojs.t -> 'TYield) -> Ojs.t -> 'TYield t_1
      =
      fun (type __TYield) ->
        fun (__TYield_of_js : Ojs.t -> __TYield) ->
          fun (x3 : Ojs.t) -> t_of_js __TYield_of_js x3
    and t_1_to_js : 'TYield . ('TYield -> Ojs.t) -> 'TYield t_1 -> Ojs.t =
      fun (type __TYield) ->
        fun (__TYield_to_js : __TYield -> Ojs.t) ->
          fun (x1 : __TYield t) -> t_to_js __TYield_to_js x1
    type 'TYield tags = [ `IteratorYieldResult of 'TYield ]
    type 'TYield tags_1 = 'TYield tags
    type ('tags, 'TYield) this =
      'tags intf constraint 'tags = [> `IteratorYieldResult of 'TYield ]
    let rec this_of_js :
      'tags 'TYield .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'TYield) -> Ojs.t -> ('tags, 'TYield) this
      =
      fun (type __tags) ->
        fun (type __TYield) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__TYield_of_js : Ojs.t -> __TYield) ->
              fun (x7 : Ojs.t) -> intf_of_js __tags_of_js x7
    and this_to_js :
      'tags 'TYield .
        ('tags -> Ojs.t) ->
          ('TYield -> Ojs.t) -> ('tags, 'TYield) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __TYield) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__TYield_to_js : __TYield -> Ojs.t) ->
              fun (x5 : __tags intf) -> intf_to_js __tags_to_js x5
    let (get_done : ('tags, 'TYield) this -> [ `L_b_false ]) =
      fun (x9 : ('tags, 'TYield) this) ->
        let x12 =
          Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x9) "done" in
        match Ojs.bool_of_js x12 with
        | false -> `L_b_false
        | _ -> assert false
    let (set_done : ('tags, 'TYield) this -> [ `L_b_false ] -> unit) =
      fun (x13 : ('tags, 'TYield) this) ->
        fun (x14 : [ `L_b_false ]) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x13) "done"
            (match x14 with | `L_b_false -> Ojs.bool_to_js false)
    let (get_value : ('tags, 'TYield) this -> 'TYield) =
      fun (x17 : ('tags, 'TYield) this) ->
        Obj.magic
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x17) "value")
    let (set_value : ('tags, 'TYield) this -> 'TYield -> unit) =
      fun (x20 : ('tags, 'TYield) this) ->
        fun (x21 : 'TYield) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x20) "value"
            (Obj.magic x21)
    let (create : done_:[ `L_b_false ] -> value:'TYield -> unit -> 'TYield t)
      =
      fun ~done_:(x24 : [ `L_b_false ]) ->
        fun ~value:(x25 : 'TYield) ->
          fun () ->
            let x26 = Ojs.empty_obj () in
            Ojs.set_prop_ascii x26 "done"
              (match x24 with | `L_b_false -> Ojs.bool_to_js false);
            Ojs.set_prop_ascii x26 "value" (Obj.magic x25);
            t_of_js Obj.magic x26
    let cast_from = Obj.magic
  end
module IteratorReturnResult =
  struct
    type 'TReturn t = [ `IteratorReturnResult of 'TReturn ] intf
    let rec t_of_js : 'TReturn . (Ojs.t -> 'TReturn) -> Ojs.t -> 'TReturn t =
      fun _TReturn -> Obj.magic
    and t_to_js : 'TReturn . ('TReturn -> Ojs.t) -> 'TReturn t -> Ojs.t =
      fun _TReturn -> Obj.magic
    type 'TReturn t_1 = 'TReturn t
    let rec t_1_of_js :
      'TReturn . (Ojs.t -> 'TReturn) -> Ojs.t -> 'TReturn t_1 =
      fun (type __TReturn) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (x30 : Ojs.t) -> t_of_js __TReturn_of_js x30
    and t_1_to_js : 'TReturn . ('TReturn -> Ojs.t) -> 'TReturn t_1 -> Ojs.t =
      fun (type __TReturn) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (x28 : __TReturn t) -> t_to_js __TReturn_to_js x28
    type 'TReturn tags = [ `IteratorReturnResult of 'TReturn ]
    type 'TReturn tags_1 = 'TReturn tags
    type ('tags, 'TReturn) this =
      'tags intf constraint 'tags = [> `IteratorReturnResult of 'TReturn ]
    let rec this_of_js :
      'tags 'TReturn .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'TReturn) -> Ojs.t -> ('tags, 'TReturn) this
      =
      fun (type __tags) ->
        fun (type __TReturn) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
              fun (x34 : Ojs.t) -> intf_of_js __tags_of_js x34
    and this_to_js :
      'tags 'TReturn .
        ('tags -> Ojs.t) ->
          ('TReturn -> Ojs.t) -> ('tags, 'TReturn) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __TReturn) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
              fun (x32 : __tags intf) -> intf_to_js __tags_to_js x32
    let (get_done : ('tags, 'TReturn) this -> [ `L_b_true ]) =
      fun (x36 : ('tags, 'TReturn) this) ->
        let x39 =
          Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x36) "done" in
        match Ojs.bool_of_js x39 with | true -> `L_b_true | _ -> assert false
    let (set_done : ('tags, 'TReturn) this -> [ `L_b_true ] -> unit) =
      fun (x40 : ('tags, 'TReturn) this) ->
        fun (x41 : [ `L_b_true ]) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x40) "done"
            (match x41 with | `L_b_true -> Ojs.bool_to_js true)
    let (get_value : ('tags, 'TReturn) this -> 'TReturn) =
      fun (x44 : ('tags, 'TReturn) this) ->
        Obj.magic
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x44) "value")
    let (set_value : ('tags, 'TReturn) this -> 'TReturn -> unit) =
      fun (x47 : ('tags, 'TReturn) this) ->
        fun (x48 : 'TReturn) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x47) "value"
            (Obj.magic x48)
    let (create :
      done_:[ `L_b_true ] -> value:'TReturn -> unit -> 'TReturn t) =
      fun ~done_:(x51 : [ `L_b_true ]) ->
        fun ~value:(x52 : 'TReturn) ->
          fun () ->
            let x53 = Ojs.empty_obj () in
            Ojs.set_prop_ascii x53 "done"
              (match x51 with | `L_b_true -> Ojs.bool_to_js true);
            Ojs.set_prop_ascii x53 "value" (Obj.magic x52);
            t_of_js Obj.magic x53
    let cast_from = Obj.magic
  end
module IteratorResult =
  struct
    type ('T, 'TReturn) t =
      [ `U_b_false of 'T IteratorYieldResult.t 
      | `U_b_true of 'TReturn IteratorReturnResult.t ]
    let rec t_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
              fun (x60 : Ojs.t) ->
                let x61 = x60 in
                match Ojs.bool_of_js (Ojs.get_prop_ascii x61 "done") with
                | false ->
                    `U_b_false (IteratorYieldResult.t_of_js __T_of_js x61)
                | true ->
                    `U_b_true
                      (IteratorReturnResult.t_of_js __TReturn_of_js x61)
    and t_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
              fun
                (x55 :
                  [ `U_b_false of __T IteratorYieldResult.t 
                  | `U_b_true of __TReturn IteratorReturnResult.t ])
                ->
                match x55 with
                | `U_b_false x56 -> IteratorYieldResult.t_to_js __T_to_js x56
                | `U_b_true x58 ->
                    IteratorReturnResult.t_to_js __TReturn_to_js x58
    type ('T, 'TReturn) t_2 = ('T, 'TReturn) t
    let rec t_2_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t_2
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
              fun (x67 : Ojs.t) -> t_of_js __T_of_js __TReturn_of_js x67
    and t_2_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t_2 -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
              fun (x64 : (__T, __TReturn) t) ->
                t_to_js __T_to_js __TReturn_to_js x64
    type 'T t_1 = ('T, any) t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x73 : Ojs.t) -> t_of_js __T_of_js any_of_js x73
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x70 : (__T, any) t) -> t_to_js __T_to_js any_to_js x70
  end
module Iterator =
  struct
    type ('T, 'TReturn, 'TNext) t =
      [ `Iterator of ('T * 'TReturn * 'TNext) ] intf
    let rec t_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    and t_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t -> Ojs.t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    type ('T, 'TReturn, 'TNext) t_3 = ('T, 'TReturn, 'TNext) t
    let rec t_3_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t_3
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
                fun (__TNext_of_js : Ojs.t -> __TNext) ->
                  fun (x80 : Ojs.t) ->
                    t_of_js __T_of_js __TReturn_of_js __TNext_of_js x80
    and t_3_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t_3 -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
                fun (__TNext_to_js : __TNext -> Ojs.t) ->
                  fun (x76 : (__T, __TReturn, __TNext) t) ->
                    t_to_js __T_to_js __TReturn_to_js __TNext_to_js x76
    type ('T, 'TReturn) t_2 = ('T, 'TReturn, undefined) t
    let rec t_2_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t_2
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
              fun (x88 : Ojs.t) ->
                t_of_js __T_of_js __TReturn_of_js undefined_of_js x88
    and t_2_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t_2 -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
              fun (x84 : (__T, __TReturn, undefined) t) ->
                t_to_js __T_to_js __TReturn_to_js undefined_to_js x84
    type 'T t_1 = ('T, any, undefined) t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x96 : Ojs.t) ->
            t_of_js __T_of_js any_of_js undefined_of_js x96
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x92 : (__T, any, undefined) t) ->
            t_to_js __T_to_js any_to_js undefined_to_js x92
    type ('T, 'TReturn, 'TNext) tags =
      [ `Iterator of ('T * 'TReturn * 'TNext) ]
    type ('T, 'TReturn, 'TNext) tags_3 = ('T, 'TReturn, 'TNext) tags
    type ('T, 'TReturn) tags_2 = ('T, 'TReturn, undefined) tags
    type 'T tags_1 = ('T, any, undefined) tags
    type ('tags, 'T, 'TReturn, 'TNext) this =
      'tags intf constraint 'tags =
                  [> `Iterator of ('T * 'TReturn * 'TNext) ]
    let rec this_of_js :
      'tags 'T 'TReturn 'TNext .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'T) ->
            (Ojs.t -> 'TReturn) ->
              (Ojs.t -> 'TNext) ->
                Ojs.t -> ('tags, 'T, 'TReturn, 'TNext) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (type __TReturn) ->
            fun (type __TNext) ->
              fun (__tags_of_js : Ojs.t -> __tags) ->
                fun (__T_of_js : Ojs.t -> __T) ->
                  fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
                    fun (__TNext_of_js : Ojs.t -> __TNext) ->
                      fun (x102 : Ojs.t) -> intf_of_js __tags_of_js x102
    and this_to_js :
      'tags 'T 'TReturn 'TNext .
        ('tags -> Ojs.t) ->
          ('T -> Ojs.t) ->
            ('TReturn -> Ojs.t) ->
              ('TNext -> Ojs.t) ->
                ('tags, 'T, 'TReturn, 'TNext) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (type __TReturn) ->
            fun (type __TNext) ->
              fun (__tags_to_js : __tags -> Ojs.t) ->
                fun (__T_to_js : __T -> Ojs.t) ->
                  fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
                    fun (__TNext_to_js : __TNext -> Ojs.t) ->
                      fun (x100 : __tags intf) ->
                        intf_to_js __tags_to_js x100
    let (next :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        args:any list -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x107 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~args:(x104 : any list) ->
          IteratorResult.t_of_js Obj.magic Obj.magic
            (let x112 =
               this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x107 in
             Ojs.call (Ojs.get_prop_ascii x112 "next") "apply"
               [|x112;((let x105 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x106 : any) ->
                             ignore
                               (Ojs.call x105 "push" [|(any_to_js x106)|]))
                          x104;
                        x105))|])
    let (return :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        ?value:'TReturn -> unit -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x118 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ?value:(x115 : 'TReturn option) ->
          fun () ->
            IteratorResult.t_of_js Obj.magic Obj.magic
              (let x123 =
                 this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x118 in
               Ojs.call (Ojs.get_prop_ascii x123 "return") "apply"
                 [|x123;((let x116 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x115 with
                           | Some x117 ->
                               ignore
                                 (Ojs.call x116 "push" [|(Obj.magic x117)|])
                           | None -> ());
                          x116))|])
    let (throw :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        ?e:any -> unit -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x129 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ?e:(x126 : any option) ->
          fun () ->
            IteratorResult.t_of_js Obj.magic Obj.magic
              (let x134 =
                 this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x129 in
               Ojs.call (Ojs.get_prop_ascii x134 "throw") "apply"
                 [|x134;((let x127 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x126 with
                           | Some x128 ->
                               ignore
                                 (Ojs.call x127 "push" [|(any_to_js x128)|])
                           | None -> ());
                          x127))|])
    let cast_from = Obj.magic
  end
module Iterable =
  struct
    type 'T t = [ `Iterable of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x139 : Ojs.t) -> t_of_js __T_of_js x139
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x137 : __T t) -> t_to_js __T_to_js x137
    type 'T tags = [ `Iterable of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `Iterable of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x143 : Ojs.t) -> intf_of_js __tags_of_js x143
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x141 : __tags intf) -> intf_to_js __tags_to_js x141
    let cast_from = Obj.magic
  end
module WeakSet =
  struct
    type 'T t = [ `WeakSet of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x147 : Ojs.t) -> t_of_js __T_of_js x147
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x145 : __T t) -> t_to_js __T_to_js x145
    type 'T tags = [ `WeakSet of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this = 'tags intf constraint 'tags = [> `WeakSet of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x151 : Ojs.t) -> intf_of_js __tags_of_js x151
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x149 : __tags intf) -> intf_to_js __tags_to_js x149
    let (add : ('tags, 'T) this -> value:'T -> ('tags, 'T) this) =
      fun (x154 : ('tags, 'T) this) ->
        fun ~value:(x153 : 'T) ->
          this_of_js Obj.magic Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x154) "add"
               [|(Obj.magic x153)|])
    let (delete : ('tags, 'T) this -> value:'T -> bool) =
      fun (x160 : ('tags, 'T) this) ->
        fun ~value:(x159 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x160) "delete"
               [|(Obj.magic x159)|])
    let (has : ('tags, 'T) this -> value:'T -> bool) =
      fun (x164 : ('tags, 'T) this) ->
        fun ~value:(x163 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x164) "has"
               [|(Obj.magic x163)|])
    let (create : 'T Iterable.t -> 'T t) =
      fun (x167 : 'T Iterable.t) ->
        t_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WeakSet")
             [|(Iterable.t_to_js Obj.magic x167)|])
    let (create' : ?values:'T list option -> unit -> 'T t) =
      fun ?values:(x170 : 'T list option option) ->
        fun () ->
          t_of_js Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "WeakSet")
               (let x171 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x170 with
                 | Some x172 ->
                     ignore
                       (Ojs.call x171 "push"
                          [|(Ojs.option_to_js
                               (fun (x173 : 'T list) ->
                                  Ojs.list_to_js Obj.magic x173) x172)|])
                 | None -> ());
                x171))
    let (prototype : unit -> untyped_object t) =
      fun () ->
        t_of_js untyped_object_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakSet")
             "prototype")
    let cast_from = Obj.magic
  end
module WeakRef =
  struct
    type 'T t = [ `WeakRef of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x179 : Ojs.t) -> t_of_js __T_of_js x179
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x177 : __T t) -> t_to_js __T_to_js x177
    type 'T tags = [ `WeakRef of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this = 'tags intf constraint 'tags = [> `WeakRef of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x183 : Ojs.t) -> intf_of_js __tags_of_js x183
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x181 : __tags intf) -> intf_to_js __tags_to_js x181
    let (deref : ('tags, 'T) this -> 'T option) =
      fun (x185 : ('tags, 'T) this) ->
        Ojs.option_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x185) "deref" [||])
    let (deref' : ('tags, 'T) this -> 'T option) =
      fun (x189 : ('tags, 'T) this) ->
        Ojs.option_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x189) "deref" [||])
    let (prototype : unit -> any t) =
      fun () ->
        t_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakRef")
             "prototype")
    let (create : ?target:'T -> unit -> 'T t) =
      fun ?target:(x194 : 'T option) ->
        fun () ->
          t_of_js Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "WeakRef")
               (let x195 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x194 with
                 | Some x196 ->
                     ignore (Ojs.call x195 "push" [|(Obj.magic x196)|])
                 | None -> ());
                x195))
    let (prototype' : unit -> any t) =
      fun () ->
        t_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakRef")
             "prototype")
    let (create' : 'T -> 'T t) =
      fun (x199 : 'T) ->
        t_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WeakRef")
             [|(Obj.magic x199)|])
    let cast_from = Obj.magic
  end
module WeakMap =
  struct
    type ('K, 'V) t = [ `WeakMap of ('K * 'V) ] intf
    let rec t_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) t =
      fun _K -> fun _V -> Obj.magic
    and t_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) t -> Ojs.t =
      fun _K -> fun _V -> Obj.magic
    type ('K, 'V) t_2 = ('K, 'V) t
    let rec t_2_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) t_2 =
      fun (type __K) ->
        fun (type __V) ->
          fun (__K_of_js : Ojs.t -> __K) ->
            fun (__V_of_js : Ojs.t -> __V) ->
              fun (x204 : Ojs.t) -> t_of_js __K_of_js __V_of_js x204
    and t_2_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) t_2 -> Ojs.t =
      fun (type __K) ->
        fun (type __V) ->
          fun (__K_to_js : __K -> Ojs.t) ->
            fun (__V_to_js : __V -> Ojs.t) ->
              fun (x201 : (__K, __V) t) -> t_to_js __K_to_js __V_to_js x201
    type ('K, 'V) tags = [ `WeakMap of ('K * 'V) ]
    type ('K, 'V) tags_2 = ('K, 'V) tags
    type ('tags, 'K, 'V) this =
      'tags intf constraint 'tags = [> `WeakMap of ('K * 'V) ]
    let rec this_of_js :
      'tags 'K 'V .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('tags, 'K, 'V) this
      =
      fun (type __tags) ->
        fun (type __K) ->
          fun (type __V) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (__K_of_js : Ojs.t -> __K) ->
                fun (__V_of_js : Ojs.t -> __V) ->
                  fun (x209 : Ojs.t) -> intf_of_js __tags_of_js x209
    and this_to_js :
      'tags 'K 'V .
        ('tags -> Ojs.t) ->
          ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('tags, 'K, 'V) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __K) ->
          fun (type __V) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (__K_to_js : __K -> Ojs.t) ->
                fun (__V_to_js : __V -> Ojs.t) ->
                  fun (x207 : __tags intf) -> intf_to_js __tags_to_js x207
    let (delete : ('tags, 'K, 'V) this -> key:'K -> bool) =
      fun (x212 : ('tags, 'K, 'V) this) ->
        fun ~key:(x211 : 'K) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x212)
               "delete" [|(Obj.magic x211)|])
    let (get_ : ('tags, 'K, 'V) this -> key:'K -> 'V option) =
      fun (x217 : ('tags, 'K, 'V) this) ->
        fun ~key:(x216 : 'K) ->
          Ojs.option_of_js Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x217) "get"
               [|(Obj.magic x216)|])
    let (has : ('tags, 'K, 'V) this -> key:'K -> bool) =
      fun (x223 : ('tags, 'K, 'V) this) ->
        fun ~key:(x222 : 'K) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x223) "has"
               [|(Obj.magic x222)|])
    let (set_ :
      ('tags, 'K, 'V) this -> key:'K -> value:'V -> ('tags, 'K, 'V) this) =
      fun (x229 : ('tags, 'K, 'V) this) ->
        fun ~key:(x227 : 'K) ->
          fun ~value:(x228 : 'V) ->
            this_of_js Obj.magic Obj.magic Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x229) "set"
                 [|(Obj.magic x227);(Obj.magic x228)|])
    let (create : ('K * 'V) Iterable.t -> ('K, 'V) t) =
      fun (x236 : ('K * 'V) Iterable.t) ->
        t_of_js Obj.magic Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WeakMap")
             [|(Iterable.t_to_js
                  (fun (x237 : ('K * 'V)) ->
                     let (x238, x239) = x237 in
                     let x240 = Ojs.array_make 2 in
                     Ojs.array_set x240 0 (Obj.magic x238);
                     Ojs.array_set x240 1 (Obj.magic x239);
                     x240) x236)|])
    let (create' : ?entries:('K * 'V) list option -> unit -> ('K, 'V) t) =
      fun ?entries:(x243 : ('K * 'V) list option option) ->
        fun () ->
          t_of_js Obj.magic Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "WeakMap")
               (let x244 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x243 with
                 | Some x245 ->
                     ignore
                       (Ojs.call x244 "push"
                          [|(Ojs.option_to_js
                               (fun (x246 : ('K * 'V) list) ->
                                  Ojs.list_to_js
                                    (fun (x247 : ('K * 'V)) ->
                                       let (x248, x249) = x247 in
                                       let x250 = Ojs.array_make 2 in
                                       Ojs.array_set x250 0 (Obj.magic x248);
                                       Ojs.array_set x250 1 (Obj.magic x249);
                                       x250) x246) x245)|])
                 | None -> ());
                x244))
    let (prototype : unit -> (untyped_object, any) t) =
      fun () ->
        t_of_js untyped_object_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakMap")
             "prototype")
    let cast_from = Obj.magic
  end
module Uppercase =
  struct
    type 'S t = Ojs.t
    let rec t_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t =
      fun (type __S) ->
        fun (__S_of_js : Ojs.t -> __S) -> fun (x256 : Ojs.t) -> x256
    and t_to_js : 'S . ('S -> Ojs.t) -> 'S t -> Ojs.t =
      fun (type __S) ->
        fun (__S_to_js : __S -> Ojs.t) -> fun (x255 : Ojs.t) -> x255
    type 'S t_1 = 'S t
    let rec t_1_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t_1 =
      fun (type __S) ->
        fun (__S_of_js : Ojs.t -> __S) ->
          fun (x259 : Ojs.t) -> t_of_js __S_of_js x259
    and t_1_to_js : 'S . ('S -> Ojs.t) -> 'S t_1 -> Ojs.t =
      fun (type __S) ->
        fun (__S_to_js : __S -> Ojs.t) ->
          fun (x257 : __S t) -> t_to_js __S_to_js x257
  end
module Uncapitalize =
  struct
    type 'S t = Ojs.t
    let rec t_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t =
      fun (type __S) ->
        fun (__S_of_js : Ojs.t -> __S) -> fun (x262 : Ojs.t) -> x262
    and t_to_js : 'S . ('S -> Ojs.t) -> 'S t -> Ojs.t =
      fun (type __S) ->
        fun (__S_to_js : __S -> Ojs.t) -> fun (x261 : Ojs.t) -> x261
    type 'S t_1 = 'S t
    let rec t_1_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t_1 =
      fun (type __S) ->
        fun (__S_of_js : Ojs.t -> __S) ->
          fun (x265 : Ojs.t) -> t_of_js __S_of_js x265
    and t_1_to_js : 'S . ('S -> Ojs.t) -> 'S t_1 -> Ojs.t =
      fun (type __S) ->
        fun (__S_to_js : __S -> Ojs.t) ->
          fun (x263 : __S t) -> t_to_js __S_to_js x263
  end
module SharedArrayBuffer =
  struct
    type t = [ `SharedArrayBuffer ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x268 : Ojs.t) -> t_of_js x268
    and t_0_to_js : t_0 -> Ojs.t = fun (x267 : t) -> t_to_js x267
    type tags = [ `SharedArrayBuffer ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `SharedArrayBuffer ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x271 : Ojs.t) -> intf_of_js __tags_of_js x271
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x269 : __tags intf) -> intf_to_js __tags_to_js x269
    let (get_byteLength : 'tags this -> float) =
      fun (x273 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x273) "byteLength")
    let (slice : 'tags this -> begin_:float -> ?end_:float -> unit -> t) =
      fun (x279 : 'tags this) ->
        fun ~begin_:(x275 : float) ->
          fun ?end_:(x276 : float option) ->
            fun () ->
              t_of_js
                (let x281 = this_to_js Obj.magic x279 in
                 Ojs.call (Ojs.get_prop_ascii x281 "slice") "apply"
                   [|x281;((let x277 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x277 "push"
                                 [|(Ojs.float_to_js x275)|]);
                            (match x276 with
                             | Some x278 ->
                                 ignore
                                   (Ojs.call x277 "push"
                                      [|(Ojs.float_to_js x278)|])
                             | None -> ());
                            x277))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "SharedArrayBuffer") "prototype")
    let (create : float -> t) =
      fun (x282 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "SharedArrayBuffer")
             [|(Ojs.float_to_js x282)|])
    let cast_from = Obj.magic
  end
module ArrayBuffer =
  struct
    type t = [ `ArrayBuffer ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x284 : Ojs.t) -> t_of_js x284
    and t_0_to_js : t_0 -> Ojs.t = fun (x283 : t) -> t_to_js x283
    type tags = [ `ArrayBuffer ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ArrayBuffer ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x287 : Ojs.t) -> intf_of_js __tags_of_js x287
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x285 : __tags intf) -> intf_to_js __tags_to_js x285
    let (get_byteLength : 'tags this -> float) =
      fun (x289 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x289) "byteLength")
    let (slice : 'tags this -> begin_:float -> ?end_:float -> unit -> t) =
      fun (x295 : 'tags this) ->
        fun ~begin_:(x291 : float) ->
          fun ?end_:(x292 : float option) ->
            fun () ->
              t_of_js
                (let x297 = this_to_js Obj.magic x295 in
                 Ojs.call (Ojs.get_prop_ascii x297 "slice") "apply"
                   [|x297;((let x293 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x293 "push"
                                 [|(Ojs.float_to_js x291)|]);
                            (match x292 with
                             | Some x294 ->
                                 ignore
                                   (Ojs.call x293 "push"
                                      [|(Ojs.float_to_js x294)|])
                             | None -> ());
                            x293))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "ArrayBuffer")
             "prototype")
    let (create : float -> t) =
      fun (x298 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "ArrayBuffer")
             [|(Ojs.float_to_js x298)|])
    let (isView : any -> bool) =
      fun (x299 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "ArrayBuffer") "isView"
             [|(any_to_js x299)|])
    let cast_from = Obj.magic
  end
module ArrayBufferLike =
  struct
    type t = (ArrayBuffer.t, SharedArrayBuffer.t) union2
    let rec t_of_js : Ojs.t -> t =
      fun (x303 : Ojs.t) ->
        union2_of_js ArrayBuffer.t_of_js SharedArrayBuffer.t_of_js x303
    and t_to_js : t -> Ojs.t =
      fun (x300 : (ArrayBuffer.t, SharedArrayBuffer.t) union2) ->
        union2_to_js ArrayBuffer.t_to_js SharedArrayBuffer.t_to_js x300
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x307 : Ojs.t) -> t_of_js x307
    and t_0_to_js : t_0 -> Ojs.t = fun (x306 : t) -> t_to_js x306
  end
module IterableIterator =
  struct
    type 'T t =
      [ `IterableIterator of 'T  | `Iterator of ('T * any * undefined) ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x310 : Ojs.t) -> t_of_js __T_of_js x310
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x308 : __T t) -> t_to_js __T_to_js x308
    type 'T tags =
      [ `IterableIterator of 'T  | `Iterator of ('T * any * undefined) ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `IterableIterator of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x314 : Ojs.t) -> intf_of_js __tags_of_js x314
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x312 : __tags intf) -> intf_to_js __tags_to_js x312
    let cast_from = Obj.magic
  end
module ArrayLike =
  struct
    type 'T t = [ `ArrayLike of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x318 : Ojs.t) -> t_of_js __T_of_js x318
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x316 : __T t) -> t_to_js __T_to_js x316
    type 'T tags = [ `ArrayLike of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ArrayLike of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x322 : Ojs.t) -> intf_of_js __tags_of_js x322
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x320 : __tags intf) -> intf_to_js __tags_to_js x320
    let (get_length : ('tags, 'T) this -> float) =
      fun (x324 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x324) "length")
    let (get : ('tags, 'T) this -> float -> 'T) =
      fun (x327 : ('tags, 'T) this) ->
        fun (x330 : float) ->
          Obj.magic
            (Ojs.get_prop (this_to_js Obj.magic Obj.magic x327)
               (Ojs.float_to_js x330))
    let cast_from = Obj.magic
    let (of_ml : 'T list -> 'T t) =
      fun (x331 : 'T list) ->
        t_of_js Obj.magic (Ojs.list_to_js Obj.magic x331)
    let (to_ml : 'T t -> 'T list) =
      fun (x334 : 'T t) -> Ojs.list_of_js Obj.magic (t_to_js Obj.magic x334)
  end
module Uint8ClampedArray =
  struct
    type t =
      [ `Uint8ClampedArray  | float ArrayLike.tags_1
      | float IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x338 : Ojs.t) -> t_of_js x338
    and t_0_to_js : t_0 -> Ojs.t = fun (x337 : t) -> t_to_js x337
    type tags =
      [ `Uint8ClampedArray  | float ArrayLike.tags_1
      | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Uint8ClampedArray ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x341 : Ojs.t) -> intf_of_js __tags_of_js x341
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x339 : __tags intf) -> intf_to_js __tags_to_js x339
    let (at : 'tags this -> index:float -> float option) =
      fun (x344 : 'tags this) ->
        fun ~index:(x343 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x344) "at"
               [|(Ojs.float_to_js x343)|])
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x351 : 'tags this) ->
        fun ~searchElement:(x347 : float) ->
          fun ?fromIndex:(x348 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x353 = this_to_js Obj.magic x351 in
                 Ojs.call (Ojs.get_prop_ascii x353 "includes") "apply"
                   [|x353;((let x349 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x349 "push"
                                 [|(Ojs.float_to_js x347)|]);
                            (match x348 with
                             | Some x350 ->
                                 ignore
                                   (Ojs.call x349 "push"
                                      [|(Ojs.float_to_js x350)|])
                             | None -> ());
                            x349))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x354 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x356 : Ojs.t) ->
             let x357 = x356 in
             ((Ojs.float_of_js (Ojs.array_get x357 0)),
               (Ojs.float_of_js (Ojs.array_get x357 1))))
          (Ojs.call (this_to_js Obj.magic x354) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x358 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x358) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x361 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x361) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x364 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x364) "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x366 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x366) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x368 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x368) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x370 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x370) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x377 : 'tags this) ->
        fun ~target:(x372 : float) ->
          fun ~start:(x373 : float) ->
            fun ?end_:(x374 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x379 = this_to_js Obj.magic x377 in
                   Ojs.call (Ojs.get_prop_ascii x379 "copyWithin") "apply"
                     [|x379;((let x375 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x375 "push"
                                   [|(Ojs.float_to_js x372)|]);
                              ignore
                                (Ojs.call x375 "push"
                                   [|(Ojs.float_to_js x373)|]);
                              (match x374 with
                               | Some x376 ->
                                   ignore
                                     (Ojs.call x375 "push"
                                        [|(Ojs.float_to_js x376)|])
                               | None -> ());
                              x375))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x388 : 'tags this) ->
        fun
          ~predicate:(x381 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x382 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x390 = this_to_js Obj.magic x388 in
                 Ojs.call (Ojs.get_prop_ascii x390 "every") "apply"
                   [|x390;((let x383 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x383 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x385 : Ojs.t) ->
                                         fun (x386 : Ojs.t) ->
                                           fun (x387 : Ojs.t) ->
                                             unknown_to_js
                                               (x381
                                                  ~value:(Ojs.float_of_js
                                                            x385)
                                                  ~index:(Ojs.float_of_js
                                                            x386)
                                                  ~array:(t_of_js x387))))|]);
                            (match x382 with
                             | Some x384 ->
                                 ignore
                                   (Ojs.call x383 "push" [|(any_to_js x384)|])
                             | None -> ());
                            x383))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x397 : 'tags this) ->
        fun ~value:(x391 : float) ->
          fun ?start:(x392 : float option) ->
            fun ?end_:(x393 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x399 = this_to_js Obj.magic x397 in
                   Ojs.call (Ojs.get_prop_ascii x399 "fill") "apply"
                     [|x399;((let x394 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x394 "push"
                                   [|(Ojs.float_to_js x391)|]);
                              (match x392 with
                               | Some x396 ->
                                   ignore
                                     (Ojs.call x394 "push"
                                        [|(Ojs.float_to_js x396)|])
                               | None -> ());
                              (match x393 with
                               | Some x395 ->
                                   ignore
                                     (Ojs.call x394 "push"
                                        [|(Ojs.float_to_js x395)|])
                               | None -> ());
                              x394))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x408 : 'tags this) ->
        fun ~predicate:(x401 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x402 : any option) ->
            fun () ->
              t_of_js
                (let x410 = this_to_js Obj.magic x408 in
                 Ojs.call (Ojs.get_prop_ascii x410 "filter") "apply"
                   [|x410;((let x403 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x403 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x405 : Ojs.t) ->
                                         fun (x406 : Ojs.t) ->
                                           fun (x407 : Ojs.t) ->
                                             any_to_js
                                               (x401
                                                  ~value:(Ojs.float_of_js
                                                            x405)
                                                  ~index:(Ojs.float_of_js
                                                            x406)
                                                  ~array:(t_of_js x407))))|]);
                            (match x402 with
                             | Some x404 ->
                                 ignore
                                   (Ojs.call x403 "push" [|(any_to_js x404)|])
                             | None -> ());
                            x403))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x418 : 'tags this) ->
        fun ~predicate:(x411 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x412 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x420 = this_to_js Obj.magic x418 in
                 Ojs.call (Ojs.get_prop_ascii x420 "find") "apply"
                   [|x420;((let x413 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x413 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x415 : Ojs.t) ->
                                         fun (x416 : Ojs.t) ->
                                           fun (x417 : Ojs.t) ->
                                             Ojs.bool_to_js
                                               (x411
                                                  ~value:(Ojs.float_of_js
                                                            x415)
                                                  ~index:(Ojs.float_of_js
                                                            x416)
                                                  ~obj:(t_of_js x417))))|]);
                            (match x412 with
                             | Some x414 ->
                                 ignore
                                   (Ojs.call x413 "push" [|(any_to_js x414)|])
                             | None -> ());
                            x413))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x429 : 'tags this) ->
        fun ~predicate:(x422 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x423 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x431 = this_to_js Obj.magic x429 in
                 Ojs.call (Ojs.get_prop_ascii x431 "findIndex") "apply"
                   [|x431;((let x424 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x424 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x426 : Ojs.t) ->
                                         fun (x427 : Ojs.t) ->
                                           fun (x428 : Ojs.t) ->
                                             Ojs.bool_to_js
                                               (x422
                                                  ~value:(Ojs.float_of_js
                                                            x426)
                                                  ~index:(Ojs.float_of_js
                                                            x427)
                                                  ~obj:(t_of_js x428))))|]);
                            (match x423 with
                             | Some x425 ->
                                 ignore
                                   (Ojs.call x424 "push" [|(any_to_js x425)|])
                             | None -> ());
                            x424))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x439 : 'tags this) ->
        fun
          ~callbackfn:(x432 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x433 : any option) ->
            fun () ->
              ignore
                (let x441 = this_to_js Obj.magic x439 in
                 Ojs.call (Ojs.get_prop_ascii x441 "forEach") "apply"
                   [|x441;((let x434 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x434 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x436 : Ojs.t) ->
                                         fun (x437 : Ojs.t) ->
                                           fun (x438 : Ojs.t) ->
                                             x432
                                               ~value:(Ojs.float_of_js x436)
                                               ~index:(Ojs.float_of_js x437)
                                               ~array:(t_of_js x438)))|]);
                            (match x433 with
                             | Some x435 ->
                                 ignore
                                   (Ojs.call x434 "push" [|(any_to_js x435)|])
                             | None -> ());
                            x434))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x446 : 'tags this) ->
        fun ~searchElement:(x442 : float) ->
          fun ?fromIndex:(x443 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x448 = this_to_js Obj.magic x446 in
                 Ojs.call (Ojs.get_prop_ascii x448 "indexOf") "apply"
                   [|x448;((let x444 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x444 "push"
                                 [|(Ojs.float_to_js x442)|]);
                            (match x443 with
                             | Some x445 ->
                                 ignore
                                   (Ojs.call x444 "push"
                                      [|(Ojs.float_to_js x445)|])
                             | None -> ());
                            x444))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x452 : 'tags this) ->
        fun ?separator:(x449 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x454 = this_to_js Obj.magic x452 in
               Ojs.call (Ojs.get_prop_ascii x454 "join") "apply"
                 [|x454;((let x450 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x449 with
                           | Some x451 ->
                               ignore
                                 (Ojs.call x450 "push"
                                    [|(Ojs.string_to_js x451)|])
                           | None -> ());
                          x450))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x459 : 'tags this) ->
        fun ~searchElement:(x455 : float) ->
          fun ?fromIndex:(x456 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x461 = this_to_js Obj.magic x459 in
                 Ojs.call (Ojs.get_prop_ascii x461 "lastIndexOf") "apply"
                   [|x461;((let x457 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x457 "push"
                                 [|(Ojs.float_to_js x455)|]);
                            (match x456 with
                             | Some x458 ->
                                 ignore
                                   (Ojs.call x457 "push"
                                      [|(Ojs.float_to_js x458)|])
                             | None -> ());
                            x457))|])
    let (get_length : 'tags this -> float) =
      fun (x462 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x462) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x471 : 'tags this) ->
        fun
          ~callbackfn:(x464 : value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x465 : any option) ->
            fun () ->
              t_of_js
                (let x473 = this_to_js Obj.magic x471 in
                 Ojs.call (Ojs.get_prop_ascii x473 "map") "apply"
                   [|x473;((let x466 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x466 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x468 : Ojs.t) ->
                                         fun (x469 : Ojs.t) ->
                                           fun (x470 : Ojs.t) ->
                                             Ojs.float_to_js
                                               (x464
                                                  ~value:(Ojs.float_of_js
                                                            x468)
                                                  ~index:(Ojs.float_of_js
                                                            x469)
                                                  ~array:(t_of_js x470))))|]);
                            (match x465 with
                             | Some x467 ->
                                 ignore
                                   (Ojs.call x466 "push" [|(any_to_js x467)|])
                             | None -> ());
                            x466))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x479 : 'tags this) ->
        fun
          ~callbackfn:(x474 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x479) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x475 : Ojs.t) ->
                       fun (x476 : Ojs.t) ->
                         fun (x477 : Ojs.t) ->
                           fun (x478 : Ojs.t) ->
                             Ojs.float_to_js
                               (x474 ~previousValue:(Ojs.float_of_js x475)
                                  ~currentValue:(Ojs.float_of_js x476)
                                  ~currentIndex:(Ojs.float_of_js x477)
                                  ~array:(t_of_js x478))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x487 : 'tags this) ->
        fun
          ~callbackfn:(x481 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x486 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x487) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x482 : Ojs.t) ->
                         fun (x483 : Ojs.t) ->
                           fun (x484 : Ojs.t) ->
                             fun (x485 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x481 ~previousValue:(Ojs.float_of_js x482)
                                    ~currentValue:(Ojs.float_of_js x483)
                                    ~currentIndex:(Ojs.float_of_js x484)
                                    ~array:(t_of_js x485))));(Ojs.float_to_js
                                                                x486)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x495 : 'tags this) ->
        fun
          ~callbackfn:(x489 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x494 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x495) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x490 : Ojs.t) ->
                         fun (x491 : Ojs.t) ->
                           fun (x492 : Ojs.t) ->
                             fun (x493 : Ojs.t) ->
                               Obj.magic
                                 (x489 ~previousValue:(Obj.magic x490)
                                    ~currentValue:(Ojs.float_of_js x491)
                                    ~currentIndex:(Ojs.float_of_js x492)
                                    ~array:(t_of_js x493))));(Obj.magic x494)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x502 : 'tags this) ->
        fun
          ~callbackfn:(x497 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x502) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x498 : Ojs.t) ->
                       fun (x499 : Ojs.t) ->
                         fun (x500 : Ojs.t) ->
                           fun (x501 : Ojs.t) ->
                             Ojs.float_to_js
                               (x497 ~previousValue:(Ojs.float_of_js x498)
                                  ~currentValue:(Ojs.float_of_js x499)
                                  ~currentIndex:(Ojs.float_of_js x500)
                                  ~array:(t_of_js x501))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x510 : 'tags this) ->
        fun
          ~callbackfn:(x504 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x509 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x510) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x505 : Ojs.t) ->
                         fun (x506 : Ojs.t) ->
                           fun (x507 : Ojs.t) ->
                             fun (x508 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x504 ~previousValue:(Ojs.float_of_js x505)
                                    ~currentValue:(Ojs.float_of_js x506)
                                    ~currentIndex:(Ojs.float_of_js x507)
                                    ~array:(t_of_js x508))));(Ojs.float_to_js
                                                                x509)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x518 : 'tags this) ->
        fun
          ~callbackfn:(x512 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x517 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x518) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x513 : Ojs.t) ->
                         fun (x514 : Ojs.t) ->
                           fun (x515 : Ojs.t) ->
                             fun (x516 : Ojs.t) ->
                               Obj.magic
                                 (x512 ~previousValue:(Obj.magic x513)
                                    ~currentValue:(Ojs.float_of_js x514)
                                    ~currentIndex:(Ojs.float_of_js x515)
                                    ~array:(t_of_js x516))));(Obj.magic x517)|])
    let (reverse : 'tags this -> t) =
      fun (x520 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x520) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x527 : 'tags this) ->
        fun ~array:(x522 : float ArrayLike.t) ->
          fun ?offset:(x523 : float option) ->
            fun () ->
              ignore
                (let x529 = this_to_js Obj.magic x527 in
                 Ojs.call (Ojs.get_prop_ascii x529 "set") "apply"
                   [|x529;((let x524 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x524 "push"
                                 [|(ArrayLike.t_to_js Ojs.float_to_js x522)|]);
                            (match x523 with
                             | Some x525 ->
                                 ignore
                                   (Ojs.call x524 "push"
                                      [|(Ojs.float_to_js x525)|])
                             | None -> ());
                            x524))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x535 : 'tags this) ->
        fun ?start:(x530 : float option) ->
          fun ?end_:(x531 : float option) ->
            fun () ->
              t_of_js
                (let x537 = this_to_js Obj.magic x535 in
                 Ojs.call (Ojs.get_prop_ascii x537 "slice") "apply"
                   [|x537;((let x532 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x530 with
                             | Some x534 ->
                                 ignore
                                   (Ojs.call x532 "push"
                                      [|(Ojs.float_to_js x534)|])
                             | None -> ());
                            (match x531 with
                             | Some x533 ->
                                 ignore
                                   (Ojs.call x532 "push"
                                      [|(Ojs.float_to_js x533)|])
                             | None -> ());
                            x532))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x545 : 'tags this) ->
        fun
          ~predicate:(x538 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x539 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x547 = this_to_js Obj.magic x545 in
                 Ojs.call (Ojs.get_prop_ascii x547 "some") "apply"
                   [|x547;((let x540 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x540 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x542 : Ojs.t) ->
                                         fun (x543 : Ojs.t) ->
                                           fun (x544 : Ojs.t) ->
                                             unknown_to_js
                                               (x538
                                                  ~value:(Ojs.float_of_js
                                                            x542)
                                                  ~index:(Ojs.float_of_js
                                                            x543)
                                                  ~array:(t_of_js x544))))|]);
                            (match x539 with
                             | Some x541 ->
                                 ignore
                                   (Ojs.call x540 "push" [|(any_to_js x541)|])
                             | None -> ());
                            x540))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x553 : 'tags this) ->
        fun ?compareFn:(x548 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x555 = this_to_js Obj.magic x553 in
               Ojs.call (Ojs.get_prop_ascii x555 "sort") "apply"
                 [|x555;((let x549 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x548 with
                           | Some x550 ->
                               ignore
                                 (Ojs.call x549 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x551 : Ojs.t) ->
                                            fun (x552 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x550
                                                   ~a:(Ojs.float_of_js x551)
                                                   ~b:(Ojs.float_of_js x552))))|])
                           | None -> ());
                          x549))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x562 : 'tags this) ->
        fun ?begin_:(x557 : float option) ->
          fun ?end_:(x558 : float option) ->
            fun () ->
              t_of_js
                (let x564 = this_to_js Obj.magic x562 in
                 Ojs.call (Ojs.get_prop_ascii x564 "subarray") "apply"
                   [|x564;((let x559 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x557 with
                             | Some x561 ->
                                 ignore
                                   (Ojs.call x559 "push"
                                      [|(Ojs.float_to_js x561)|])
                             | None -> ());
                            (match x558 with
                             | Some x560 ->
                                 ignore
                                   (Ojs.call x559 "push"
                                      [|(Ojs.float_to_js x560)|])
                             | None -> ());
                            x559))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x565 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x565) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x567 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x567) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x569 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x569) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x571 : 'tags this) ->
        fun (x573 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x571) (Ojs.float_to_js x573))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x574 : 'tags this) ->
        fun (x576 : float) ->
          fun (x577 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x574) (Ojs.float_to_js x576)
              (Ojs.float_to_js x577)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             [||])
    let (create' : float Iterable.t -> t) =
      fun (x578 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             [|(Iterable.t_to_js Ojs.float_to_js x578)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x580 : float Iterable.t) ->
        fun ?mapfn:(x581 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x582 : any option) ->
            fun () ->
              t_of_js
                (let x589 = Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray" in
                 Ojs.call (Ojs.get_prop_ascii x589 "from") "apply"
                   [|x589;((let x583 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x583 "push"
                                 [|(Iterable.t_to_js Ojs.float_to_js x580)|]);
                            (match x581 with
                             | Some x585 ->
                                 ignore
                                   (Ojs.call x583 "push"
                                      [|(Ojs.fun_to_js 2
                                           (fun (x586 : Ojs.t) ->
                                              fun (x587 : Ojs.t) ->
                                                Ojs.float_to_js
                                                  (x585
                                                     ~v:(Ojs.float_of_js x586)
                                                     ~k:(Ojs.float_of_js x587))))|])
                             | None -> ());
                            (match x582 with
                             | Some x584 ->
                                 ignore
                                   (Ojs.call x583 "push" [|(any_to_js x584)|])
                             | None -> ());
                            x583))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray") "prototype")
    let (create'' : float -> t) =
      fun (x590 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             [|(Ojs.float_to_js x590)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x591 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             [|((match x591 with
                 | `U1 x592 -> ArrayLike.t_to_js Ojs.float_to_js x592
                 | `U2 x594 -> ArrayBufferLike.t_to_js x594))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x595 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x596 : float option) ->
          fun ?length:(x597 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
                   (let x598 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x598 "push"
                         [|(ArrayBufferLike.t_to_js x595)|]);
                    (match x596 with
                     | Some x600 ->
                         ignore
                           (Ojs.call x598 "push" [|(Ojs.float_to_js x600)|])
                     | None -> ());
                    (match x597 with
                     | Some x599 ->
                         ignore
                           (Ojs.call x598 "push" [|(Ojs.float_to_js x599)|])
                     | None -> ());
                    x598))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x601 : float list) ->
        t_of_js
          (let x604 = Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray" in
           Ojs.call (Ojs.get_prop_ascii x604 "of") "apply"
             [|x604;((let x602 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      List.iter
                        (fun (x603 : float) ->
                           ignore
                             (Ojs.call x602 "push" [|(Ojs.float_to_js x603)|]))
                        x601;
                      x602))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x605 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             "from" [|(ArrayLike.t_to_js Ojs.float_to_js x605)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x607 : 'T ArrayLike.t) ->
        fun ~mapfn:(x608 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x609 : any option) ->
            fun () ->
              t_of_js
                (let x615 = Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray" in
                 Ojs.call (Ojs.get_prop_ascii x615 "from") "apply"
                   [|x615;((let x610 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x610 "push"
                                 [|(ArrayLike.t_to_js Obj.magic x607)|]);
                            ignore
                              (Ojs.call x610 "push"
                                 [|(Ojs.fun_to_js 2
                                      (fun (x612 : Ojs.t) ->
                                         fun (x613 : Ojs.t) ->
                                           Ojs.float_to_js
                                             (x608 ~v:(Obj.magic x612)
                                                ~k:(Ojs.float_of_js x613))))|]);
                            (match x609 with
                             | Some x611 ->
                                 ignore
                                   (Ojs.call x610 "push" [|(any_to_js x611)|])
                             | None -> ());
                            x610))|])
    let cast_from = Obj.magic
  end
module rec
  Error:sig
          type t = [ `Error ] intf
          type t_0 = t
          [@@@js.stop ]
          type tags = [ `Error ]
          type tags_0 = tags
          [@@@js.start ]
          [@@@js.implem type tags = [ `Error ]
            type tags_0 = tags]
          type 'tags this = 'tags intf constraint 'tags = [> `Error ]
          val t_to_js : t -> Ojs.t
          val t_of_js : Ojs.t -> t
          val t_0_to_js : t_0 -> Ojs.t
          val t_0_of_js : Ojs.t -> t_0
          val get_cause : 'tags this -> t
          val set_cause : 'tags this -> t -> unit
          val get_name : 'tags this -> string
          val set_name : 'tags this -> string -> unit
          val get_message : 'tags this -> string
          val set_message : 'tags this -> string -> unit
          val get_stack : 'tags this -> string
          val set_stack : 'tags this -> string -> unit
          val create :
            ?message:string -> ?options:ErrorOptions.t -> unit -> t
          val invoke :
            ?message:string -> ?options:ErrorOptions.t -> unit -> t
          val create' : ?message:string -> unit -> t
          val invoke' : ?message:string -> unit -> t
          val prototype : unit -> t
          val create'' :
            cause:t ->
              name:string -> message:string -> stack:string -> unit -> t
          val cast_from : 'tags this -> t
        end =
  struct
    type t = [ `Error ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x617 : Ojs.t) -> t_of_js x617
    and t_0_to_js : t_0 -> Ojs.t = fun (x616 : t) -> t_to_js x616
    type tags = [ `Error ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Error ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x620 : Ojs.t) -> intf_of_js __tags_of_js x620
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x618 : __tags intf) -> intf_to_js __tags_to_js x618
    let (get_cause : 'tags this -> t) =
      fun (x622 : 'tags this) ->
        t_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x622) "cause")
    let (set_cause : 'tags this -> t -> unit) =
      fun (x624 : 'tags this) ->
        fun (x625 : t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x624) "cause"
            (t_to_js x625)
    let (get_name : 'tags this -> string) =
      fun (x627 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x627) "name")
    let (set_name : 'tags this -> string -> unit) =
      fun (x629 : 'tags this) ->
        fun (x630 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x629) "name"
            (Ojs.string_to_js x630)
    let (get_message : 'tags this -> string) =
      fun (x632 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x632) "message")
    let (set_message : 'tags this -> string -> unit) =
      fun (x634 : 'tags this) ->
        fun (x635 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x634) "message"
            (Ojs.string_to_js x635)
    let (get_stack : 'tags this -> string) =
      fun (x637 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x637) "stack")
    let (set_stack : 'tags this -> string -> unit) =
      fun (x639 : 'tags this) ->
        fun (x640 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x639) "stack"
            (Ojs.string_to_js x640)
    let (create : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x642 : string option) ->
        fun ?options:(x643 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Error")
                 (let x644 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x642 with
                   | Some x646 ->
                       ignore
                         (Ojs.call x644 "push" [|(Ojs.string_to_js x646)|])
                   | None -> ());
                  (match x643 with
                   | Some x645 ->
                       ignore
                         (Ojs.call x644 "push"
                            [|(ErrorOptions.t_to_js x645)|])
                   | None -> ());
                  x644))
    let (invoke : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x647 : string option) ->
        fun ?options:(x648 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Error") "apply"
                 [|Ojs.null;((let x649 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x647 with
                               | Some x651 ->
                                   ignore
                                     (Ojs.call x649 "push"
                                        [|(Ojs.string_to_js x651)|])
                               | None -> ());
                              (match x648 with
                               | Some x650 ->
                                   ignore
                                     (Ojs.call x649 "push"
                                        [|(ErrorOptions.t_to_js x650)|])
                               | None -> ());
                              x649))|])
    let (create' : ?message:string -> unit -> t) =
      fun ?message:(x652 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Error")
               (let x653 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x652 with
                 | Some x654 ->
                     ignore
                       (Ojs.call x653 "push" [|(Ojs.string_to_js x654)|])
                 | None -> ());
                x653))
    let (invoke' : ?message:string -> unit -> t) =
      fun ?message:(x655 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Error") "apply"
               [|Ojs.null;((let x656 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x655 with
                             | Some x657 ->
                                 ignore
                                   (Ojs.call x656 "push"
                                      [|(Ojs.string_to_js x657)|])
                             | None -> ());
                            x656))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Error")
             "prototype")
    let (create'' :
      cause:t -> name:string -> message:string -> stack:string -> unit -> t)
      =
      fun ~cause:(x658 : t) ->
        fun ~name:(x659 : string) ->
          fun ~message:(x660 : string) ->
            fun ~stack:(x661 : string) ->
              fun () ->
                let x662 = Ojs.empty_obj () in
                Ojs.set_prop_ascii x662 "cause" (t_to_js x658);
                Ojs.set_prop_ascii x662 "name" (Ojs.string_to_js x659);
                Ojs.set_prop_ascii x662 "message" (Ojs.string_to_js x660);
                Ojs.set_prop_ascii x662 "stack" (Ojs.string_to_js x661);
                t_of_js x662
    let cast_from = Obj.magic
  end
 and
  ErrorOptions:sig
                 type t = [ `ErrorOptions ] intf
                 type t_0 = t
                 [@@@js.stop ]
                 type tags = [ `ErrorOptions ]
                 type tags_0 = tags
                 [@@@js.start ]
                 [@@@js.implem
                   type tags = [ `ErrorOptions ]
                   type tags_0 = tags]
                 type 'tags this =
                   'tags intf constraint 'tags = [> `ErrorOptions ]
                 val t_to_js : t -> Ojs.t
                 val t_of_js : Ojs.t -> t
                 val t_0_to_js : t_0 -> Ojs.t
                 val t_0_of_js : Ojs.t -> t_0
                 val get_cause : 'tags this -> Error.t
                 val set_cause : 'tags this -> Error.t -> unit
                 val create : cause:Error.t -> unit -> t
                 val cast_from : 'tags this -> t
               end =
  struct
    type t = [ `ErrorOptions ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x664 : Ojs.t) -> t_of_js x664
    and t_0_to_js : t_0 -> Ojs.t = fun (x663 : t) -> t_to_js x663
    type tags = [ `ErrorOptions ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ErrorOptions ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x667 : Ojs.t) -> intf_of_js __tags_of_js x667
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x665 : __tags intf) -> intf_to_js __tags_to_js x665
    let (get_cause : 'tags this -> Error.t) =
      fun (x669 : 'tags this) ->
        Error.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x669) "cause")
    let (set_cause : 'tags this -> Error.t -> unit) =
      fun (x671 : 'tags this) ->
        fun (x672 : Error.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x671) "cause"
            (Error.t_to_js x672)
    let (create : cause:Error.t -> unit -> t) =
      fun ~cause:(x674 : Error.t) ->
        fun () ->
          let x675 = Ojs.empty_obj () in
          Ojs.set_prop_ascii x675 "cause" (Error.t_to_js x674); t_of_js x675
    let cast_from = Obj.magic
  end
module URIError =
  struct
    type t = [ `Error  | `URIError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x677 : Ojs.t) -> t_of_js x677
    and t_0_to_js : t_0 -> Ojs.t = fun (x676 : t) -> t_to_js x676
    type tags = [ `Error  | `URIError ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `URIError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x680 : Ojs.t) -> intf_of_js __tags_of_js x680
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x678 : __tags intf) -> intf_to_js __tags_to_js x678
    let (create : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x682 : string option) ->
        fun ?options:(x683 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "URIError")
                 (let x684 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x682 with
                   | Some x686 ->
                       ignore
                         (Ojs.call x684 "push" [|(Ojs.string_to_js x686)|])
                   | None -> ());
                  (match x683 with
                   | Some x685 ->
                       ignore
                         (Ojs.call x684 "push"
                            [|(ErrorOptions.t_to_js x685)|])
                   | None -> ());
                  x684))
    let (invoke : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x687 : string option) ->
        fun ?options:(x688 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "URIError") "apply"
                 [|Ojs.null;((let x689 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x687 with
                               | Some x691 ->
                                   ignore
                                     (Ojs.call x689 "push"
                                        [|(Ojs.string_to_js x691)|])
                               | None -> ());
                              (match x688 with
                               | Some x690 ->
                                   ignore
                                     (Ojs.call x689 "push"
                                        [|(ErrorOptions.t_to_js x690)|])
                               | None -> ());
                              x689))|])
    let (create' : ?message:string -> unit -> t) =
      fun ?message:(x692 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "URIError")
               (let x693 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x692 with
                 | Some x694 ->
                     ignore
                       (Ojs.call x693 "push" [|(Ojs.string_to_js x694)|])
                 | None -> ());
                x693))
    let (invoke' : ?message:string -> unit -> t) =
      fun ?message:(x695 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "URIError") "apply"
               [|Ojs.null;((let x696 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x695 with
                             | Some x697 ->
                                 ignore
                                   (Ojs.call x696 "push"
                                      [|(Ojs.string_to_js x697)|])
                             | None -> ());
                            x696))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "URIError")
             "prototype")
    let cast_from = Obj.magic
  end
module TypeError =
  struct
    type t = [ `Error  | `TypeError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x699 : Ojs.t) -> t_of_js x699
    and t_0_to_js : t_0 -> Ojs.t = fun (x698 : t) -> t_to_js x698
    type tags = [ `Error  | `TypeError ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `TypeError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x702 : Ojs.t) -> intf_of_js __tags_of_js x702
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x700 : __tags intf) -> intf_to_js __tags_to_js x700
    let (create : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x704 : string option) ->
        fun ?options:(x705 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "TypeError")
                 (let x706 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x704 with
                   | Some x708 ->
                       ignore
                         (Ojs.call x706 "push" [|(Ojs.string_to_js x708)|])
                   | None -> ());
                  (match x705 with
                   | Some x707 ->
                       ignore
                         (Ojs.call x706 "push"
                            [|(ErrorOptions.t_to_js x707)|])
                   | None -> ());
                  x706))
    let (invoke : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x709 : string option) ->
        fun ?options:(x710 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "TypeError") "apply"
                 [|Ojs.null;((let x711 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x709 with
                               | Some x713 ->
                                   ignore
                                     (Ojs.call x711 "push"
                                        [|(Ojs.string_to_js x713)|])
                               | None -> ());
                              (match x710 with
                               | Some x712 ->
                                   ignore
                                     (Ojs.call x711 "push"
                                        [|(ErrorOptions.t_to_js x712)|])
                               | None -> ());
                              x711))|])
    let (create' : ?message:string -> unit -> t) =
      fun ?message:(x714 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "TypeError")
               (let x715 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x714 with
                 | Some x716 ->
                     ignore
                       (Ojs.call x715 "push" [|(Ojs.string_to_js x716)|])
                 | None -> ());
                x715))
    let (invoke' : ?message:string -> unit -> t) =
      fun ?message:(x717 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "TypeError") "apply"
               [|Ojs.null;((let x718 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x717 with
                             | Some x719 ->
                                 ignore
                                   (Ojs.call x718 "push"
                                      [|(Ojs.string_to_js x719)|])
                             | None -> ());
                            x718))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "TypeError")
             "prototype")
    let cast_from = Obj.magic
  end
module FlatArray =
  struct
    type ('Arr, 'Depth) t = any
    let rec t_of_js :
      'Arr 'Depth .
        (Ojs.t -> 'Arr) -> (Ojs.t -> 'Depth) -> Ojs.t -> ('Arr, 'Depth) t
      =
      fun (type __Arr) ->
        fun (type __Depth) ->
          fun (__Arr_of_js : Ojs.t -> __Arr) ->
            fun (__Depth_of_js : Ojs.t -> __Depth) ->
              fun (x721 : Ojs.t) -> any_of_js x721
    and t_to_js :
      'Arr 'Depth .
        ('Arr -> Ojs.t) -> ('Depth -> Ojs.t) -> ('Arr, 'Depth) t -> Ojs.t
      =
      fun (type __Arr) ->
        fun (type __Depth) ->
          fun (__Arr_to_js : __Arr -> Ojs.t) ->
            fun (__Depth_to_js : __Depth -> Ojs.t) ->
              fun (x720 : any) -> any_to_js x720
    type ('Arr, 'Depth) t_2 = ('Arr, 'Depth) t
    let rec t_2_of_js :
      'Arr 'Depth .
        (Ojs.t -> 'Arr) -> (Ojs.t -> 'Depth) -> Ojs.t -> ('Arr, 'Depth) t_2
      =
      fun (type __Arr) ->
        fun (type __Depth) ->
          fun (__Arr_of_js : Ojs.t -> __Arr) ->
            fun (__Depth_of_js : Ojs.t -> __Depth) ->
              fun (x725 : Ojs.t) -> t_of_js __Arr_of_js __Depth_of_js x725
    and t_2_to_js :
      'Arr 'Depth .
        ('Arr -> Ojs.t) -> ('Depth -> Ojs.t) -> ('Arr, 'Depth) t_2 -> Ojs.t
      =
      fun (type __Arr) ->
        fun (type __Depth) ->
          fun (__Arr_to_js : __Arr -> Ojs.t) ->
            fun (__Depth_to_js : __Depth -> Ojs.t) ->
              fun (x722 : (__Arr, __Depth) t) ->
                t_to_js __Arr_to_js __Depth_to_js x722
  end
module ConcatArray =
  struct
    type 'T t = [ `ConcatArray of 'T  | 'T ArrayLike.tags_1] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x730 : Ojs.t) -> t_of_js __T_of_js x730
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x728 : __T t) -> t_to_js __T_to_js x728
    type 'T tags = [ `ConcatArray of 'T  | 'T ArrayLike.tags_1]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ConcatArray of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x734 : Ojs.t) -> intf_of_js __tags_of_js x734
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x732 : __tags intf) -> intf_to_js __tags_to_js x732
    let (get_length : ('tags, 'T) this -> float) =
      fun (x736 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x736) "length")
    let (get : ('tags, 'T) this -> float -> 'T) =
      fun (x739 : ('tags, 'T) this) ->
        fun (x742 : float) ->
          Obj.magic
            (Ojs.get_prop (this_to_js Obj.magic Obj.magic x739)
               (Ojs.float_to_js x742))
    let (join : ('tags, 'T) this -> ?separator:string -> unit -> string) =
      fun (x746 : ('tags, 'T) this) ->
        fun ?separator:(x743 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x749 = this_to_js Obj.magic Obj.magic x746 in
               Ojs.call (Ojs.get_prop_ascii x749 "join") "apply"
                 [|x749;((let x744 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x743 with
                           | Some x745 ->
                               ignore
                                 (Ojs.call x744 "push"
                                    [|(Ojs.string_to_js x745)|])
                           | None -> ());
                          x744))|])
    let (slice :
      ('tags, 'T) this -> ?start:float -> ?end_:float -> unit -> 'T list) =
      fun (x755 : ('tags, 'T) this) ->
        fun ?start:(x750 : float option) ->
          fun ?end_:(x751 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x758 = this_to_js Obj.magic Obj.magic x755 in
                 Ojs.call (Ojs.get_prop_ascii x758 "slice") "apply"
                   [|x758;((let x752 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x750 with
                             | Some x754 ->
                                 ignore
                                   (Ojs.call x752 "push"
                                      [|(Ojs.float_to_js x754)|])
                             | None -> ());
                            (match x751 with
                             | Some x753 ->
                                 ignore
                                   (Ojs.call x752 "push"
                                      [|(Ojs.float_to_js x753)|])
                             | None -> ());
                            x752))|])
    let cast_from = Obj.magic
  end
module ReadonlyArray =
  struct
    type 'T t =
      [ `ReadonlyArray of 'T  | 'T ArrayLike.tags_1
      | 'T IterableIterator.tags_1] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x762 : Ojs.t) -> t_of_js __T_of_js x762
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x760 : __T t) -> t_to_js __T_to_js x760
    type 'T tags =
      [ `ReadonlyArray of 'T  | 'T ArrayLike.tags_1
      | 'T IterableIterator.tags_1]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ReadonlyArray of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x766 : Ojs.t) -> intf_of_js __tags_of_js x766
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x764 : __tags intf) -> intf_to_js __tags_to_js x764
    let (flatMap :
      ('tags, 'T) this ->
        callback:(this:'This ->
                    value:'T ->
                      index:float ->
                        array:'T list -> [ `U1 of 'U  | `U2 of 'U t ])
          -> ?thisArg:'This -> unit -> 'U list)
      =
      fun (x780 : ('tags, 'T) this) ->
        fun
          ~callback:(x768 :
                      this:'This ->
                        value:'T ->
                          index:float ->
                            array:'T list -> [ `U1 of 'U  | `U2 of 'U t ])
          ->
          fun ?thisArg:(x769 : 'This option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x783 = this_to_js Obj.magic Obj.magic x780 in
                 Ojs.call (Ojs.get_prop_ascii x783 "flatMap") "apply"
                   [|x783;((let x770 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x770 "push"
                                 [|(Ojs.fun_to_js 4
                                      (fun (x772 : Ojs.t) ->
                                         fun (x773 : Ojs.t) ->
                                           fun (x774 : Ojs.t) ->
                                             fun (x775 : Ojs.t) ->
                                               match x768
                                                       ~this:(Obj.magic x772)
                                                       ~value:(Obj.magic x773)
                                                       ~index:(Ojs.float_of_js
                                                                 x774)
                                                       ~array:(Ojs.list_of_js
                                                                 Obj.magic
                                                                 x775)
                                               with
                                               | `U1 x777 -> Obj.magic x777
                                               | `U2 x778 ->
                                                   t_to_js Obj.magic x778))|]);
                            (match x769 with
                             | Some x771 ->
                                 ignore
                                   (Ojs.call x770 "push" [|(Obj.magic x771)|])
                             | None -> ());
                            x770))|])
    let (flat :
      ('tags, 'T) this ->
        this:'A -> ?depth:'D -> unit -> ('A, 'D) FlatArray.t list)
      =
      fun (x789 : ('tags, 'T) this) ->
        fun ~this:(x785 : 'A) ->
          fun ?depth:(x786 : 'D option) ->
            fun () ->
              Ojs.list_of_js
                (fun (x793 : Ojs.t) ->
                   FlatArray.t_of_js Obj.magic Obj.magic x793)
                (let x792 = this_to_js Obj.magic Obj.magic x789 in
                 Ojs.call (Ojs.get_prop_ascii x792 "flat") "apply"
                   [|x792;((let x787 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x787 "push" [|(Obj.magic x785)|]);
                            (match x786 with
                             | Some x788 ->
                                 ignore
                                   (Ojs.call x787 "push" [|(Obj.magic x788)|])
                             | None -> ());
                            x787))|])
    let (at : ('tags, 'T) this -> index:float -> 'T option) =
      fun (x797 : ('tags, 'T) this) ->
        fun ~index:(x796 : float) ->
          Ojs.option_of_js Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x797) "at"
               [|(Ojs.float_to_js x796)|])
    let (includes :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> bool)
      =
      fun (x805 : ('tags, 'T) this) ->
        fun ~searchElement:(x801 : 'T) ->
          fun ?fromIndex:(x802 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x808 = this_to_js Obj.magic Obj.magic x805 in
                 Ojs.call (Ojs.get_prop_ascii x808 "includes") "apply"
                   [|x808;((let x803 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x803 "push" [|(Obj.magic x801)|]);
                            (match x802 with
                             | Some x804 ->
                                 ignore
                                   (Ojs.call x803 "push"
                                      [|(Ojs.float_to_js x804)|])
                             | None -> ());
                            x803))|])
    let (entries : ('tags, 'T) this -> (float * 'T) IterableIterator.t) =
      fun (x809 : ('tags, 'T) this) ->
        IterableIterator.t_of_js
          (fun (x812 : Ojs.t) ->
             let x813 = x812 in
             ((Ojs.float_of_js (Ojs.array_get x813 0)),
               (Obj.magic (Ojs.array_get x813 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic x809) "entries" [||])
    let (keys : ('tags, 'T) this -> float IterableIterator.t) =
      fun (x814 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x814) "keys" [||])
    let (values : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x818 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x818) "values" [||])
    let (find :
      ('tags, 'T) this ->
        predicate:(this:unit ->
                     value:'T -> index:float -> obj:'T list -> bool)
          -> ?thisArg:any -> unit -> 'S option)
      =
      fun (x831 : ('tags, 'T) this) ->
        fun
          ~predicate:(x822 :
                       this:unit ->
                         value:'T -> index:float -> obj:'T list -> bool)
          ->
          fun ?thisArg:(x823 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x834 = this_to_js Obj.magic Obj.magic x831 in
                 Ojs.call (Ojs.get_prop_ascii x834 "find") "apply"
                   [|x834;((let x824 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x824 "push"
                                 [|(Ojs.fun_to_js 4
                                      (fun (x826 : Ojs.t) ->
                                         fun (x827 : Ojs.t) ->
                                           fun (x828 : Ojs.t) ->
                                             fun (x829 : Ojs.t) ->
                                               Ojs.bool_to_js
                                                 (x822
                                                    ~this:(Ojs.unit_of_js
                                                             x826)
                                                    ~value:(Obj.magic x827)
                                                    ~index:(Ojs.float_of_js
                                                              x828)
                                                    ~obj:(Ojs.list_of_js
                                                            Obj.magic x829))))|]);
                            (match x823 with
                             | Some x825 ->
                                 ignore
                                   (Ojs.call x824 "push" [|(any_to_js x825)|])
                             | None -> ());
                            x824))|])
    let (find' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> obj:'T list -> unknown) ->
          ?thisArg:any -> unit -> 'T option)
      =
      fun (x844 : ('tags, 'T) this) ->
        fun
          ~predicate:(x836 :
                       value:'T -> index:float -> obj:'T list -> unknown)
          ->
          fun ?thisArg:(x837 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x847 = this_to_js Obj.magic Obj.magic x844 in
                 Ojs.call (Ojs.get_prop_ascii x847 "find") "apply"
                   [|x847;((let x838 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x838 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x840 : Ojs.t) ->
                                         fun (x841 : Ojs.t) ->
                                           fun (x842 : Ojs.t) ->
                                             unknown_to_js
                                               (x836 ~value:(Obj.magic x840)
                                                  ~index:(Ojs.float_of_js
                                                            x841)
                                                  ~obj:(Ojs.list_of_js
                                                          Obj.magic x842))))|]);
                            (match x837 with
                             | Some x839 ->
                                 ignore
                                   (Ojs.call x838 "push" [|(any_to_js x839)|])
                             | None -> ());
                            x838))|])
    let (findIndex :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> obj:'T list -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x857 : ('tags, 'T) this) ->
        fun
          ~predicate:(x849 :
                       value:'T -> index:float -> obj:'T list -> unknown)
          ->
          fun ?thisArg:(x850 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x860 = this_to_js Obj.magic Obj.magic x857 in
                 Ojs.call (Ojs.get_prop_ascii x860 "findIndex") "apply"
                   [|x860;((let x851 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x851 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x853 : Ojs.t) ->
                                         fun (x854 : Ojs.t) ->
                                           fun (x855 : Ojs.t) ->
                                             unknown_to_js
                                               (x849 ~value:(Obj.magic x853)
                                                  ~index:(Ojs.float_of_js
                                                            x854)
                                                  ~obj:(Ojs.list_of_js
                                                          Obj.magic x855))))|]);
                            (match x850 with
                             | Some x852 ->
                                 ignore
                                   (Ojs.call x851 "push" [|(any_to_js x852)|])
                             | None -> ());
                            x851))|])
    let (get_length : ('tags, 'T) this -> float) =
      fun (x861 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x861) "length")
    let (toString : ('tags, 'T) this -> string) =
      fun (x864 : ('tags, 'T) this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x864) "toString" [||])
    let (toLocaleString : ('tags, 'T) this -> string) =
      fun (x867 : ('tags, 'T) this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x867) "toLocaleString"
             [||])
    let (concat : ('tags, 'T) this -> items:'T ConcatArray.t list -> 'T list)
      =
      fun (x874 : ('tags, 'T) this) ->
        fun ~items:(x870 : 'T ConcatArray.t list) ->
          Ojs.list_of_js Obj.magic
            (let x877 = this_to_js Obj.magic Obj.magic x874 in
             Ojs.call (Ojs.get_prop_ascii x877 "concat") "apply"
               [|x877;((let x871 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x872 : 'T ConcatArray.t) ->
                             ignore
                               (Ojs.call x871 "push"
                                  [|(ConcatArray.t_to_js Obj.magic x872)|]))
                          x870;
                        x871))|])
    let (concat' :
      ('tags, 'T) this ->
        items:[ `U1 of 'T  | `U2 of 'T ConcatArray.t ] list -> 'T list)
      =
      fun (x885 : ('tags, 'T) this) ->
        fun ~items:(x879 : [ `U1 of 'T  | `U2 of 'T ConcatArray.t ] list) ->
          Ojs.list_of_js Obj.magic
            (let x888 = this_to_js Obj.magic Obj.magic x885 in
             Ojs.call (Ojs.get_prop_ascii x888 "concat") "apply"
               [|x888;((let x880 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun
                             (x881 :
                               [ `U1 of 'T  | `U2 of 'T ConcatArray.t ])
                             ->
                             ignore
                               (Ojs.call x880 "push"
                                  [|((match x881 with
                                      | `U1 x882 -> Obj.magic x882
                                      | `U2 x883 ->
                                          ConcatArray.t_to_js Obj.magic x883))|]))
                          x879;
                        x880))|])
    let (join : ('tags, 'T) this -> ?separator:string -> unit -> string) =
      fun (x893 : ('tags, 'T) this) ->
        fun ?separator:(x890 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x896 = this_to_js Obj.magic Obj.magic x893 in
               Ojs.call (Ojs.get_prop_ascii x896 "join") "apply"
                 [|x896;((let x891 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x890 with
                           | Some x892 ->
                               ignore
                                 (Ojs.call x891 "push"
                                    [|(Ojs.string_to_js x892)|])
                           | None -> ());
                          x891))|])
    let (slice :
      ('tags, 'T) this -> ?start:float -> ?end_:float -> unit -> 'T list) =
      fun (x902 : ('tags, 'T) this) ->
        fun ?start:(x897 : float option) ->
          fun ?end_:(x898 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x905 = this_to_js Obj.magic Obj.magic x902 in
                 Ojs.call (Ojs.get_prop_ascii x905 "slice") "apply"
                   [|x905;((let x899 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x897 with
                             | Some x901 ->
                                 ignore
                                   (Ojs.call x899 "push"
                                      [|(Ojs.float_to_js x901)|])
                             | None -> ());
                            (match x898 with
                             | Some x900 ->
                                 ignore
                                   (Ojs.call x899 "push"
                                      [|(Ojs.float_to_js x900)|])
                             | None -> ());
                            x899))|])
    let (indexOf :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> float)
      =
      fun (x911 : ('tags, 'T) this) ->
        fun ~searchElement:(x907 : 'T) ->
          fun ?fromIndex:(x908 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x914 = this_to_js Obj.magic Obj.magic x911 in
                 Ojs.call (Ojs.get_prop_ascii x914 "indexOf") "apply"
                   [|x914;((let x909 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x909 "push" [|(Obj.magic x907)|]);
                            (match x908 with
                             | Some x910 ->
                                 ignore
                                   (Ojs.call x909 "push"
                                      [|(Ojs.float_to_js x910)|])
                             | None -> ());
                            x909))|])
    let (lastIndexOf :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> float)
      =
      fun (x919 : ('tags, 'T) this) ->
        fun ~searchElement:(x915 : 'T) ->
          fun ?fromIndex:(x916 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x922 = this_to_js Obj.magic Obj.magic x919 in
                 Ojs.call (Ojs.get_prop_ascii x922 "lastIndexOf") "apply"
                   [|x922;((let x917 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x917 "push" [|(Obj.magic x915)|]);
                            (match x916 with
                             | Some x918 ->
                                 ignore
                                   (Ojs.call x917 "push"
                                      [|(Ojs.float_to_js x918)|])
                             | None -> ());
                            x917))|])
    let (every :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x931 : ('tags, 'T) this) ->
        fun
          ~predicate:(x923 :
                       value:'T -> index:float -> array:'T list -> bool)
          ->
          fun ?thisArg:(x924 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x934 = this_to_js Obj.magic Obj.magic x931 in
                 Ojs.call (Ojs.get_prop_ascii x934 "every") "apply"
                   [|x934;((let x925 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x925 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x927 : Ojs.t) ->
                                         fun (x928 : Ojs.t) ->
                                           fun (x929 : Ojs.t) ->
                                             Ojs.bool_to_js
                                               (x923 ~value:(Obj.magic x927)
                                                  ~index:(Ojs.float_of_js
                                                            x928)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x929))))|]);
                            (match x924 with
                             | Some x926 ->
                                 ignore
                                   (Ojs.call x925 "push" [|(any_to_js x926)|])
                             | None -> ());
                            x925))|])
    let (every' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x943 : ('tags, 'T) this) ->
        fun
          ~predicate:(x935 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x936 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x946 = this_to_js Obj.magic Obj.magic x943 in
                 Ojs.call (Ojs.get_prop_ascii x946 "every") "apply"
                   [|x946;((let x937 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x937 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x939 : Ojs.t) ->
                                         fun (x940 : Ojs.t) ->
                                           fun (x941 : Ojs.t) ->
                                             unknown_to_js
                                               (x935 ~value:(Obj.magic x939)
                                                  ~index:(Ojs.float_of_js
                                                            x940)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x941))))|]);
                            (match x936 with
                             | Some x938 ->
                                 ignore
                                   (Ojs.call x937 "push" [|(any_to_js x938)|])
                             | None -> ());
                            x937))|])
    let (some :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x955 : ('tags, 'T) this) ->
        fun
          ~predicate:(x947 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x948 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x958 = this_to_js Obj.magic Obj.magic x955 in
                 Ojs.call (Ojs.get_prop_ascii x958 "some") "apply"
                   [|x958;((let x949 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x949 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x951 : Ojs.t) ->
                                         fun (x952 : Ojs.t) ->
                                           fun (x953 : Ojs.t) ->
                                             unknown_to_js
                                               (x947 ~value:(Obj.magic x951)
                                                  ~index:(Ojs.float_of_js
                                                            x952)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x953))))|]);
                            (match x948 with
                             | Some x950 ->
                                 ignore
                                   (Ojs.call x949 "push" [|(any_to_js x950)|])
                             | None -> ());
                            x949))|])
    let (forEach :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> index:float -> array:'T list -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x967 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x959 :
                        value:'T -> index:float -> array:'T list -> unit)
          ->
          fun ?thisArg:(x960 : any option) ->
            fun () ->
              ignore
                (let x970 = this_to_js Obj.magic Obj.magic x967 in
                 Ojs.call (Ojs.get_prop_ascii x970 "forEach") "apply"
                   [|x970;((let x961 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x961 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x963 : Ojs.t) ->
                                         fun (x964 : Ojs.t) ->
                                           fun (x965 : Ojs.t) ->
                                             x959 ~value:(Obj.magic x963)
                                               ~index:(Ojs.float_of_js x964)
                                               ~array:(Ojs.list_of_js
                                                         Obj.magic x965)))|]);
                            (match x960 with
                             | Some x962 ->
                                 ignore
                                   (Ojs.call x961 "push" [|(any_to_js x962)|])
                             | None -> ());
                            x961))|])
    let (map :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> index:float -> array:'T list -> 'U) ->
          ?thisArg:any -> unit -> 'U list)
      =
      fun (x979 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x971 : value:'T -> index:float -> array:'T list -> 'U)
          ->
          fun ?thisArg:(x972 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x982 = this_to_js Obj.magic Obj.magic x979 in
                 Ojs.call (Ojs.get_prop_ascii x982 "map") "apply"
                   [|x982;((let x973 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x973 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x975 : Ojs.t) ->
                                         fun (x976 : Ojs.t) ->
                                           fun (x977 : Ojs.t) ->
                                             Obj.magic
                                               (x971 ~value:(Obj.magic x975)
                                                  ~index:(Ojs.float_of_js
                                                            x976)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x977))))|]);
                            (match x972 with
                             | Some x974 ->
                                 ignore
                                   (Ojs.call x973 "push" [|(any_to_js x974)|])
                             | None -> ());
                            x973))|])
    let (filter :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> 'S list)
      =
      fun (x992 : ('tags, 'T) this) ->
        fun
          ~predicate:(x984 :
                       value:'T -> index:float -> array:'T list -> bool)
          ->
          fun ?thisArg:(x985 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x995 = this_to_js Obj.magic Obj.magic x992 in
                 Ojs.call (Ojs.get_prop_ascii x995 "filter") "apply"
                   [|x995;((let x986 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x986 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x988 : Ojs.t) ->
                                         fun (x989 : Ojs.t) ->
                                           fun (x990 : Ojs.t) ->
                                             Ojs.bool_to_js
                                               (x984 ~value:(Obj.magic x988)
                                                  ~index:(Ojs.float_of_js
                                                            x989)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x990))))|]);
                            (match x985 with
                             | Some x987 ->
                                 ignore
                                   (Ojs.call x986 "push" [|(any_to_js x987)|])
                             | None -> ());
                            x986))|])
    let (filter' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> 'T list)
      =
      fun (x1005 : ('tags, 'T) this) ->
        fun
          ~predicate:(x997 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x998 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1008 = this_to_js Obj.magic Obj.magic x1005 in
                 Ojs.call (Ojs.get_prop_ascii x1008 "filter") "apply"
                   [|x1008;((let x999 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x999 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1001 : Ojs.t) ->
                                          fun (x1002 : Ojs.t) ->
                                            fun (x1003 : Ojs.t) ->
                                              unknown_to_js
                                                (x997
                                                   ~value:(Obj.magic x1001)
                                                   ~index:(Ojs.float_of_js
                                                             x1002)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1003))))|]);
                             (match x998 with
                              | Some x1000 ->
                                  ignore
                                    (Ojs.call x999 "push"
                                       [|(any_to_js x1000)|])
                              | None -> ());
                             x999))|])
    let (reduce :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> 'T)
      =
      fun (x1016 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1010 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x1016) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x1011 : Ojs.t) ->
                       fun (x1012 : Ojs.t) ->
                         fun (x1013 : Ojs.t) ->
                           fun (x1014 : Ojs.t) ->
                             Obj.magic
                               (x1010 ~previousValue:(Obj.magic x1011)
                                  ~currentValue:(Obj.magic x1012)
                                  ~currentIndex:(Ojs.float_of_js x1013)
                                  ~array:(Ojs.list_of_js Obj.magic x1014))))|])
    let (reduce' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> initialValue:'T -> 'T)
      =
      fun (x1026 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1019 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          fun ~initialValue:(x1025 : 'T) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1026) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x1020 : Ojs.t) ->
                         fun (x1021 : Ojs.t) ->
                           fun (x1022 : Ojs.t) ->
                             fun (x1023 : Ojs.t) ->
                               Obj.magic
                                 (x1019 ~previousValue:(Obj.magic x1020)
                                    ~currentValue:(Obj.magic x1021)
                                    ~currentIndex:(Ojs.float_of_js x1022)
                                    ~array:(Ojs.list_of_js Obj.magic x1023))));(
                   Obj.magic x1025)|])
    let (reduce'' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'U ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x1036 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1029 :
                        previousValue:'U ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'U)
          ->
          fun ~initialValue:(x1035 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1036) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x1030 : Ojs.t) ->
                         fun (x1031 : Ojs.t) ->
                           fun (x1032 : Ojs.t) ->
                             fun (x1033 : Ojs.t) ->
                               Obj.magic
                                 (x1029 ~previousValue:(Obj.magic x1030)
                                    ~currentValue:(Obj.magic x1031)
                                    ~currentIndex:(Ojs.float_of_js x1032)
                                    ~array:(Ojs.list_of_js Obj.magic x1033))));(
                   Obj.magic x1035)|])
    let (reduceRight :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> 'T)
      =
      fun (x1045 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1039 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x1045) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x1040 : Ojs.t) ->
                       fun (x1041 : Ojs.t) ->
                         fun (x1042 : Ojs.t) ->
                           fun (x1043 : Ojs.t) ->
                             Obj.magic
                               (x1039 ~previousValue:(Obj.magic x1040)
                                  ~currentValue:(Obj.magic x1041)
                                  ~currentIndex:(Ojs.float_of_js x1042)
                                  ~array:(Ojs.list_of_js Obj.magic x1043))))|])
    let (reduceRight' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> initialValue:'T -> 'T)
      =
      fun (x1055 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1048 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          fun ~initialValue:(x1054 : 'T) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1055) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x1049 : Ojs.t) ->
                         fun (x1050 : Ojs.t) ->
                           fun (x1051 : Ojs.t) ->
                             fun (x1052 : Ojs.t) ->
                               Obj.magic
                                 (x1048 ~previousValue:(Obj.magic x1049)
                                    ~currentValue:(Obj.magic x1050)
                                    ~currentIndex:(Ojs.float_of_js x1051)
                                    ~array:(Ojs.list_of_js Obj.magic x1052))));(
                   Obj.magic x1054)|])
    let (reduceRight'' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'U ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x1065 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1058 :
                        previousValue:'U ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'U)
          ->
          fun ~initialValue:(x1064 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1065) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x1059 : Ojs.t) ->
                         fun (x1060 : Ojs.t) ->
                           fun (x1061 : Ojs.t) ->
                             fun (x1062 : Ojs.t) ->
                               Obj.magic
                                 (x1058 ~previousValue:(Obj.magic x1059)
                                    ~currentValue:(Obj.magic x1060)
                                    ~currentIndex:(Ojs.float_of_js x1061)
                                    ~array:(Ojs.list_of_js Obj.magic x1062))));(
                   Obj.magic x1064)|])
    let (get : ('tags, 'T) this -> float -> 'T) =
      fun (x1068 : ('tags, 'T) this) ->
        fun (x1071 : float) ->
          Obj.magic
            (Ojs.get_prop (this_to_js Obj.magic Obj.magic x1068)
               (Ojs.float_to_js x1071))
    let cast_from = Obj.magic
    let (of_ml : 'T list -> 'T t) =
      fun (x1072 : 'T list) ->
        t_of_js Obj.magic (Ojs.list_to_js Obj.magic x1072)
    let (to_ml : 'T t -> 'T list) =
      fun (x1075 : 'T t) ->
        Ojs.list_of_js Obj.magic (t_to_js Obj.magic x1075)
  end
module TemplateStringsArray =
  struct
    type t =
      [ `ReadonlyArray of string  | `ReadonlyArray of string 
      | `TemplateStringsArray  | string ArrayLike.tags_1
      | string IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1079 : Ojs.t) -> t_of_js x1079
    and t_0_to_js : t_0 -> Ojs.t = fun (x1078 : t) -> t_to_js x1078
    type tags =
      [ `ReadonlyArray of string  | `ReadonlyArray of string 
      | `TemplateStringsArray  | string ArrayLike.tags_1
      | string IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `TemplateStringsArray ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x1082 : Ojs.t) -> intf_of_js __tags_of_js x1082
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x1080 : __tags intf) -> intf_to_js __tags_to_js x1080
    let (get_raw : 'tags this -> string list) =
      fun (x1084 : 'tags this) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1084) "raw")
    let (create : raw:string list -> unit -> t) =
      fun ~raw:(x1087 : string list) ->
        fun () ->
          let x1088 = Ojs.empty_obj () in
          Ojs.set_prop_ascii x1088 "raw"
            (Ojs.list_to_js Ojs.string_to_js x1087);
          t_of_js x1088
    let cast_from = Obj.magic
  end
module SyntaxError =
  struct
    type t = [ `Error  | `SyntaxError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1091 : Ojs.t) -> t_of_js x1091
    and t_0_to_js : t_0 -> Ojs.t = fun (x1090 : t) -> t_to_js x1090
    type tags = [ `Error  | `SyntaxError ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `SyntaxError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x1094 : Ojs.t) -> intf_of_js __tags_of_js x1094
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x1092 : __tags intf) -> intf_to_js __tags_to_js x1092
    let (create : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x1096 : string option) ->
        fun ?options:(x1097 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "SyntaxError")
                 (let x1098 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x1096 with
                   | Some x1100 ->
                       ignore
                         (Ojs.call x1098 "push" [|(Ojs.string_to_js x1100)|])
                   | None -> ());
                  (match x1097 with
                   | Some x1099 ->
                       ignore
                         (Ojs.call x1098 "push"
                            [|(ErrorOptions.t_to_js x1099)|])
                   | None -> ());
                  x1098))
    let (invoke : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x1101 : string option) ->
        fun ?options:(x1102 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "SyntaxError") "apply"
                 [|Ojs.null;((let x1103 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x1101 with
                               | Some x1105 ->
                                   ignore
                                     (Ojs.call x1103 "push"
                                        [|(Ojs.string_to_js x1105)|])
                               | None -> ());
                              (match x1102 with
                               | Some x1104 ->
                                   ignore
                                     (Ojs.call x1103 "push"
                                        [|(ErrorOptions.t_to_js x1104)|])
                               | None -> ());
                              x1103))|])
    let (create' : ?message:string -> unit -> t) =
      fun ?message:(x1106 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "SyntaxError")
               (let x1107 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x1106 with
                 | Some x1108 ->
                     ignore
                       (Ojs.call x1107 "push" [|(Ojs.string_to_js x1108)|])
                 | None -> ());
                x1107))
    let (invoke' : ?message:string -> unit -> t) =
      fun ?message:(x1109 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "SyntaxError") "apply"
               [|Ojs.null;((let x1110 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x1109 with
                             | Some x1111 ->
                                 ignore
                                   (Ojs.call x1110 "push"
                                      [|(Ojs.string_to_js x1111)|])
                             | None -> ());
                            x1110))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "SyntaxError")
             "prototype")
    let cast_from = Obj.magic
  end
module Symbol =
  struct
    type t = [ `Symbol ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1113 : Ojs.t) -> t_of_js x1113
    and t_0_to_js : t_0 -> Ojs.t = fun (x1112 : t) -> t_to_js x1112
    type tags = [ `Symbol ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Symbol ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x1116 : Ojs.t) -> intf_of_js __tags_of_js x1116
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x1114 : __tags intf) -> intf_to_js __tags_to_js x1114
    let (get_description : 'tags this -> string option) =
      fun (x1118 : 'tags this) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1118) "description")
    let (toString : 'tags this -> string) =
      fun (x1121 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1121) "toString" [||])
    let (valueOf : 'tags this -> symbol) =
      fun (x1123 : 'tags this) ->
        symbol_of_js (Ojs.call (this_to_js Obj.magic x1123) "valueOf" [||])
    let (matchAll : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "matchAll")
    let (asyncIterator : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "asyncIterator")
    let (hasInstance : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "hasInstance")
    let (isConcatSpreadable : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "isConcatSpreadable")
    let (match_ : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "match")
    let (replace : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "replace")
    let (search : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "search")
    let (species : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "species")
    let (split : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "split")
    let (toPrimitive : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "toPrimitive")
    let (toStringTag : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "toStringTag")
    let (unscopables : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "unscopables")
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "prototype")
    let (invoke :
      ?description:[ `U1 of string  | `U2 of float ] -> unit -> symbol) =
      fun ?description:(x1125 : [ `U1 of string  | `U2 of float ] option) ->
        fun () ->
          symbol_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Symbol") "apply"
               [|Ojs.null;((let x1126 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x1125 with
                             | Some x1127 ->
                                 ignore
                                   (Ojs.call x1126 "push"
                                      [|((match x1127 with
                                          | `U1 x1128 ->
                                              Ojs.string_to_js x1128
                                          | `U2 x1129 ->
                                              Ojs.float_to_js x1129))|])
                             | None -> ());
                            x1126))|])
    let (for_ : string -> symbol) =
      fun (x1130 : string) ->
        symbol_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Symbol") "for"
             [|(Ojs.string_to_js x1130)|])
    let (keyFor : symbol -> string option) =
      fun (x1131 : symbol) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Symbol") "keyFor"
             [|(symbol_to_js x1131)|])
    let (iterator : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "iterator")
    let cast_from = Obj.magic
  end
module Array =
  struct
    module AnonymousInterface0 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x1134 : Ojs.t) -> x1134
        and t_to_js : t -> Ojs.t = fun (x1133 : Ojs.t) -> x1133
        let (get_copyWithin : t -> bool) =
          fun (x1135 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1135) "copyWithin")
        let (set_copyWithin : t -> bool -> unit) =
          fun (x1136 : t) ->
            fun (x1137 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1136) "copyWithin"
                (Ojs.bool_to_js x1137)
        let (get_entries : t -> bool) =
          fun (x1138 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1138) "entries")
        let (set_entries : t -> bool -> unit) =
          fun (x1139 : t) ->
            fun (x1140 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1139) "entries"
                (Ojs.bool_to_js x1140)
        let (get_fill : t -> bool) =
          fun (x1141 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1141) "fill")
        let (set_fill : t -> bool -> unit) =
          fun (x1142 : t) ->
            fun (x1143 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1142) "fill"
                (Ojs.bool_to_js x1143)
        let (get_find : t -> bool) =
          fun (x1144 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1144) "find")
        let (set_find : t -> bool -> unit) =
          fun (x1145 : t) ->
            fun (x1146 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1145) "find"
                (Ojs.bool_to_js x1146)
        let (get_findIndex : t -> bool) =
          fun (x1147 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1147) "findIndex")
        let (set_findIndex : t -> bool -> unit) =
          fun (x1148 : t) ->
            fun (x1149 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1148) "findIndex"
                (Ojs.bool_to_js x1149)
        let (get_keys : t -> bool) =
          fun (x1150 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1150) "keys")
        let (set_keys : t -> bool -> unit) =
          fun (x1151 : t) ->
            fun (x1152 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1151) "keys"
                (Ojs.bool_to_js x1152)
        let (get_values : t -> bool) =
          fun (x1153 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1153) "values")
        let (set_values : t -> bool -> unit) =
          fun (x1154 : t) ->
            fun (x1155 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1154) "values"
                (Ojs.bool_to_js x1155)
        let (create :
          copyWithin:bool ->
            entries:bool ->
              fill:bool ->
                find:bool ->
                  findIndex:bool -> keys:bool -> values:bool -> unit -> t)
          =
          fun ~copyWithin:(x1156 : bool) ->
            fun ~entries:(x1157 : bool) ->
              fun ~fill:(x1158 : bool) ->
                fun ~find:(x1159 : bool) ->
                  fun ~findIndex:(x1160 : bool) ->
                    fun ~keys:(x1161 : bool) ->
                      fun ~values:(x1162 : bool) ->
                        fun () ->
                          let x1163 = Ojs.empty_obj () in
                          Ojs.set_prop_ascii x1163 "copyWithin"
                            (Ojs.bool_to_js x1156);
                          Ojs.set_prop_ascii x1163 "entries"
                            (Ojs.bool_to_js x1157);
                          Ojs.set_prop_ascii x1163 "fill"
                            (Ojs.bool_to_js x1158);
                          Ojs.set_prop_ascii x1163 "find"
                            (Ojs.bool_to_js x1159);
                          Ojs.set_prop_ascii x1163 "findIndex"
                            (Ojs.bool_to_js x1160);
                          Ojs.set_prop_ascii x1163 "keys"
                            (Ojs.bool_to_js x1161);
                          Ojs.set_prop_ascii x1163 "values"
                            (Ojs.bool_to_js x1162);
                          t_of_js x1163
      end
    type 'T t =
      [ `Array of 'T  | 'T ArrayLike.tags_1 | 'T IterableIterator.tags_1]
        intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x1166 : Ojs.t) -> t_of_js __T_of_js x1166
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x1164 : __T t) -> t_to_js __T_to_js x1164
    type 'T tags =
      [ `Array of 'T  | 'T ArrayLike.tags_1 | 'T IterableIterator.tags_1]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this = 'tags intf constraint 'tags = [> `Array of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x1170 : Ojs.t) -> intf_of_js __tags_of_js x1170
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x1168 : __tags intf) -> intf_to_js __tags_to_js x1168
    let (flatMap :
      ('tags, 'T) this ->
        callback:(this:'This ->
                    value:'T ->
                      index:float ->
                        array:'T list ->
                          [ `U1 of 'U  | `U2 of 'U ReadonlyArray.t ])
          -> ?thisArg:'This -> unit -> 'U list)
      =
      fun (x1184 : ('tags, 'T) this) ->
        fun
          ~callback:(x1172 :
                      this:'This ->
                        value:'T ->
                          index:float ->
                            array:'T list ->
                              [ `U1 of 'U  | `U2 of 'U ReadonlyArray.t ])
          ->
          fun ?thisArg:(x1173 : 'This option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1187 = this_to_js Obj.magic Obj.magic x1184 in
                 Ojs.call (Ojs.get_prop_ascii x1187 "flatMap") "apply"
                   [|x1187;((let x1174 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1174 "push"
                                  [|(Ojs.fun_to_js 4
                                       (fun (x1176 : Ojs.t) ->
                                          fun (x1177 : Ojs.t) ->
                                            fun (x1178 : Ojs.t) ->
                                              fun (x1179 : Ojs.t) ->
                                                match x1172
                                                        ~this:(Obj.magic
                                                                 x1176)
                                                        ~value:(Obj.magic
                                                                  x1177)
                                                        ~index:(Ojs.float_of_js
                                                                  x1178)
                                                        ~array:(Ojs.list_of_js
                                                                  Obj.magic
                                                                  x1179)
                                                with
                                                | `U1 x1181 ->
                                                    Obj.magic x1181
                                                | `U2 x1182 ->
                                                    ReadonlyArray.t_to_js
                                                      Obj.magic x1182))|]);
                             (match x1173 with
                              | Some x1175 ->
                                  ignore
                                    (Ojs.call x1174 "push"
                                       [|(Obj.magic x1175)|])
                              | None -> ());
                             x1174))|])
    let (flat :
      ('tags, 'T) this ->
        this:'A -> ?depth:'D -> unit -> ('A, 'D) FlatArray.t list)
      =
      fun (x1193 : ('tags, 'T) this) ->
        fun ~this:(x1189 : 'A) ->
          fun ?depth:(x1190 : 'D option) ->
            fun () ->
              Ojs.list_of_js
                (fun (x1197 : Ojs.t) ->
                   FlatArray.t_of_js Obj.magic Obj.magic x1197)
                (let x1196 = this_to_js Obj.magic Obj.magic x1193 in
                 Ojs.call (Ojs.get_prop_ascii x1196 "flat") "apply"
                   [|x1196;((let x1191 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1191 "push" [|(Obj.magic x1189)|]);
                             (match x1190 with
                              | Some x1192 ->
                                  ignore
                                    (Ojs.call x1191 "push"
                                       [|(Obj.magic x1192)|])
                              | None -> ());
                             x1191))|])
    let (at : ('tags, 'T) this -> index:float -> 'T option) =
      fun (x1201 : ('tags, 'T) this) ->
        fun ~index:(x1200 : float) ->
          Ojs.option_of_js Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x1201) "at"
               [|(Ojs.float_to_js x1200)|])
    let (includes :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> bool)
      =
      fun (x1209 : ('tags, 'T) this) ->
        fun ~searchElement:(x1205 : 'T) ->
          fun ?fromIndex:(x1206 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1212 = this_to_js Obj.magic Obj.magic x1209 in
                 Ojs.call (Ojs.get_prop_ascii x1212 "includes") "apply"
                   [|x1212;((let x1207 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1207 "push" [|(Obj.magic x1205)|]);
                             (match x1206 with
                              | Some x1208 ->
                                  ignore
                                    (Ojs.call x1207 "push"
                                       [|(Ojs.float_to_js x1208)|])
                              | None -> ());
                             x1207))|])
    let (entries : ('tags, 'T) this -> (float * 'T) IterableIterator.t) =
      fun (x1213 : ('tags, 'T) this) ->
        IterableIterator.t_of_js
          (fun (x1216 : Ojs.t) ->
             let x1217 = x1216 in
             ((Ojs.float_of_js (Ojs.array_get x1217 0)),
               (Obj.magic (Ojs.array_get x1217 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic x1213) "entries" [||])
    let (keys : ('tags, 'T) this -> float IterableIterator.t) =
      fun (x1218 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x1218) "keys" [||])
    let (values : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x1222 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x1222) "values" [||])
    let (find :
      ('tags, 'T) this ->
        predicate:(this:unit ->
                     value:'T -> index:float -> obj:'T list -> bool)
          -> ?thisArg:any -> unit -> 'S option)
      =
      fun (x1235 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1226 :
                       this:unit ->
                         value:'T -> index:float -> obj:'T list -> bool)
          ->
          fun ?thisArg:(x1227 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x1238 = this_to_js Obj.magic Obj.magic x1235 in
                 Ojs.call (Ojs.get_prop_ascii x1238 "find") "apply"
                   [|x1238;((let x1228 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1228 "push"
                                  [|(Ojs.fun_to_js 4
                                       (fun (x1230 : Ojs.t) ->
                                          fun (x1231 : Ojs.t) ->
                                            fun (x1232 : Ojs.t) ->
                                              fun (x1233 : Ojs.t) ->
                                                Ojs.bool_to_js
                                                  (x1226
                                                     ~this:(Ojs.unit_of_js
                                                              x1230)
                                                     ~value:(Obj.magic x1231)
                                                     ~index:(Ojs.float_of_js
                                                               x1232)
                                                     ~obj:(Ojs.list_of_js
                                                             Obj.magic x1233))))|]);
                             (match x1227 with
                              | Some x1229 ->
                                  ignore
                                    (Ojs.call x1228 "push"
                                       [|(any_to_js x1229)|])
                              | None -> ());
                             x1228))|])
    let (find' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> obj:'T list -> unknown) ->
          ?thisArg:any -> unit -> 'T option)
      =
      fun (x1248 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1240 :
                       value:'T -> index:float -> obj:'T list -> unknown)
          ->
          fun ?thisArg:(x1241 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x1251 = this_to_js Obj.magic Obj.magic x1248 in
                 Ojs.call (Ojs.get_prop_ascii x1251 "find") "apply"
                   [|x1251;((let x1242 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1242 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1244 : Ojs.t) ->
                                          fun (x1245 : Ojs.t) ->
                                            fun (x1246 : Ojs.t) ->
                                              unknown_to_js
                                                (x1240
                                                   ~value:(Obj.magic x1244)
                                                   ~index:(Ojs.float_of_js
                                                             x1245)
                                                   ~obj:(Ojs.list_of_js
                                                           Obj.magic x1246))))|]);
                             (match x1241 with
                              | Some x1243 ->
                                  ignore
                                    (Ojs.call x1242 "push"
                                       [|(any_to_js x1243)|])
                              | None -> ());
                             x1242))|])
    let (findIndex :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> obj:'T list -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x1261 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1253 :
                       value:'T -> index:float -> obj:'T list -> unknown)
          ->
          fun ?thisArg:(x1254 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x1264 = this_to_js Obj.magic Obj.magic x1261 in
                 Ojs.call (Ojs.get_prop_ascii x1264 "findIndex") "apply"
                   [|x1264;((let x1255 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1255 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1257 : Ojs.t) ->
                                          fun (x1258 : Ojs.t) ->
                                            fun (x1259 : Ojs.t) ->
                                              unknown_to_js
                                                (x1253
                                                   ~value:(Obj.magic x1257)
                                                   ~index:(Ojs.float_of_js
                                                             x1258)
                                                   ~obj:(Ojs.list_of_js
                                                           Obj.magic x1259))))|]);
                             (match x1254 with
                              | Some x1256 ->
                                  ignore
                                    (Ojs.call x1255 "push"
                                       [|(any_to_js x1256)|])
                              | None -> ());
                             x1255))|])
    let (fill :
      ('tags, 'T) this ->
        value:'T -> ?start:float -> ?end_:float -> unit -> ('tags, 'T) this)
      =
      fun (x1271 : ('tags, 'T) this) ->
        fun ~value:(x1265 : 'T) ->
          fun ?start:(x1266 : float option) ->
            fun ?end_:(x1267 : float option) ->
              fun () ->
                this_of_js Obj.magic Obj.magic
                  (let x1274 = this_to_js Obj.magic Obj.magic x1271 in
                   Ojs.call (Ojs.get_prop_ascii x1274 "fill") "apply"
                     [|x1274;((let x1268 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1268 "push" [|(Obj.magic x1265)|]);
                               (match x1266 with
                                | Some x1270 ->
                                    ignore
                                      (Ojs.call x1268 "push"
                                         [|(Ojs.float_to_js x1270)|])
                                | None -> ());
                               (match x1267 with
                                | Some x1269 ->
                                    ignore
                                      (Ojs.call x1268 "push"
                                         [|(Ojs.float_to_js x1269)|])
                                | None -> ());
                               x1268))|])
    let (copyWithin :
      ('tags, 'T) this ->
        target:float ->
          start:float -> ?end_:float -> unit -> ('tags, 'T) this)
      =
      fun (x1282 : ('tags, 'T) this) ->
        fun ~target:(x1277 : float) ->
          fun ~start:(x1278 : float) ->
            fun ?end_:(x1279 : float option) ->
              fun () ->
                this_of_js Obj.magic Obj.magic
                  (let x1285 = this_to_js Obj.magic Obj.magic x1282 in
                   Ojs.call (Ojs.get_prop_ascii x1285 "copyWithin") "apply"
                     [|x1285;((let x1280 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1280 "push"
                                    [|(Ojs.float_to_js x1277)|]);
                               ignore
                                 (Ojs.call x1280 "push"
                                    [|(Ojs.float_to_js x1278)|]);
                               (match x1279 with
                                | Some x1281 ->
                                    ignore
                                      (Ojs.call x1280 "push"
                                         [|(Ojs.float_to_js x1281)|])
                                | None -> ());
                               x1280))|])
    let (get_length : ('tags, 'T) this -> float) =
      fun (x1288 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x1288) "length")
    let (set_length : ('tags, 'T) this -> float -> unit) =
      fun (x1291 : ('tags, 'T) this) ->
        fun (x1292 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x1291) "length"
            (Ojs.float_to_js x1292)
    let (toString : ('tags, 'T) this -> string) =
      fun (x1295 : ('tags, 'T) this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x1295) "toString" [||])
    let (toLocaleString : ('tags, 'T) this -> string) =
      fun (x1298 : ('tags, 'T) this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x1298) "toLocaleString"
             [||])
    let (pop : ('tags, 'T) this -> 'T option) =
      fun (x1301 : ('tags, 'T) this) ->
        Ojs.option_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x1301) "pop" [||])
    let (push : ('tags, 'T) this -> items:'T list -> float) =
      fun (x1308 : ('tags, 'T) this) ->
        fun ~items:(x1305 : 'T list) ->
          Ojs.float_of_js
            (let x1311 = this_to_js Obj.magic Obj.magic x1308 in
             Ojs.call (Ojs.get_prop_ascii x1311 "push") "apply"
               [|x1311;((let x1306 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x1307 : 'T) ->
                              ignore
                                (Ojs.call x1306 "push" [|(Obj.magic x1307)|]))
                           x1305;
                         x1306))|])
    let (concat : ('tags, 'T) this -> items:'T ConcatArray.t list -> 'T list)
      =
      fun (x1316 : ('tags, 'T) this) ->
        fun ~items:(x1312 : 'T ConcatArray.t list) ->
          Ojs.list_of_js Obj.magic
            (let x1319 = this_to_js Obj.magic Obj.magic x1316 in
             Ojs.call (Ojs.get_prop_ascii x1319 "concat") "apply"
               [|x1319;((let x1313 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x1314 : 'T ConcatArray.t) ->
                              ignore
                                (Ojs.call x1313 "push"
                                   [|(ConcatArray.t_to_js Obj.magic x1314)|]))
                           x1312;
                         x1313))|])
    let (concat' :
      ('tags, 'T) this ->
        items:[ `U1 of 'T  | `U2 of 'T ConcatArray.t ] list -> 'T list)
      =
      fun (x1327 : ('tags, 'T) this) ->
        fun ~items:(x1321 : [ `U1 of 'T  | `U2 of 'T ConcatArray.t ] list) ->
          Ojs.list_of_js Obj.magic
            (let x1330 = this_to_js Obj.magic Obj.magic x1327 in
             Ojs.call (Ojs.get_prop_ascii x1330 "concat") "apply"
               [|x1330;((let x1322 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun
                              (x1323 :
                                [ `U1 of 'T  | `U2 of 'T ConcatArray.t ])
                              ->
                              ignore
                                (Ojs.call x1322 "push"
                                   [|((match x1323 with
                                       | `U1 x1324 -> Obj.magic x1324
                                       | `U2 x1325 ->
                                           ConcatArray.t_to_js Obj.magic
                                             x1325))|])) x1321;
                         x1322))|])
    let (join : ('tags, 'T) this -> ?separator:string -> unit -> string) =
      fun (x1335 : ('tags, 'T) this) ->
        fun ?separator:(x1332 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x1338 = this_to_js Obj.magic Obj.magic x1335 in
               Ojs.call (Ojs.get_prop_ascii x1338 "join") "apply"
                 [|x1338;((let x1333 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x1332 with
                            | Some x1334 ->
                                ignore
                                  (Ojs.call x1333 "push"
                                     [|(Ojs.string_to_js x1334)|])
                            | None -> ());
                           x1333))|])
    let (reverse : ('tags, 'T) this -> 'T list) =
      fun (x1339 : ('tags, 'T) this) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x1339) "reverse" [||])
    let (shift : ('tags, 'T) this -> 'T option) =
      fun (x1343 : ('tags, 'T) this) ->
        Ojs.option_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x1343) "shift" [||])
    let (slice :
      ('tags, 'T) this -> ?start:float -> ?end_:float -> unit -> 'T list) =
      fun (x1352 : ('tags, 'T) this) ->
        fun ?start:(x1347 : float option) ->
          fun ?end_:(x1348 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1355 = this_to_js Obj.magic Obj.magic x1352 in
                 Ojs.call (Ojs.get_prop_ascii x1355 "slice") "apply"
                   [|x1355;((let x1349 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1347 with
                              | Some x1351 ->
                                  ignore
                                    (Ojs.call x1349 "push"
                                       [|(Ojs.float_to_js x1351)|])
                              | None -> ());
                             (match x1348 with
                              | Some x1350 ->
                                  ignore
                                    (Ojs.call x1349 "push"
                                       [|(Ojs.float_to_js x1350)|])
                              | None -> ());
                             x1349))|])
    let (sort :
      ('tags, 'T) this ->
        ?compareFn:(a:'T -> b:'T -> float) -> unit -> ('tags, 'T) this)
      =
      fun (x1362 : ('tags, 'T) this) ->
        fun ?compareFn:(x1357 : (a:'T -> b:'T -> float) option) ->
          fun () ->
            this_of_js Obj.magic Obj.magic
              (let x1365 = this_to_js Obj.magic Obj.magic x1362 in
               Ojs.call (Ojs.get_prop_ascii x1365 "sort") "apply"
                 [|x1365;((let x1358 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x1357 with
                            | Some x1359 ->
                                ignore
                                  (Ojs.call x1358 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x1360 : Ojs.t) ->
                                             fun (x1361 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x1359 ~a:(Obj.magic x1360)
                                                    ~b:(Obj.magic x1361))))|])
                            | None -> ());
                           x1358))|])
    let (splice :
      ('tags, 'T) this ->
        start:float -> ?deleteCount:float -> unit -> 'T list)
      =
      fun (x1372 : ('tags, 'T) this) ->
        fun ~start:(x1368 : float) ->
          fun ?deleteCount:(x1369 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1375 = this_to_js Obj.magic Obj.magic x1372 in
                 Ojs.call (Ojs.get_prop_ascii x1375 "splice") "apply"
                   [|x1375;((let x1370 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1370 "push"
                                  [|(Ojs.float_to_js x1368)|]);
                             (match x1369 with
                              | Some x1371 ->
                                  ignore
                                    (Ojs.call x1370 "push"
                                       [|(Ojs.float_to_js x1371)|])
                              | None -> ());
                             x1370))|])
    let (splice' :
      ('tags, 'T) this ->
        start:float -> deleteCount:float -> items:'T list -> 'T list)
      =
      fun (x1382 : ('tags, 'T) this) ->
        fun ~start:(x1377 : float) ->
          fun ~deleteCount:(x1378 : float) ->
            fun ~items:(x1379 : 'T list) ->
              Ojs.list_of_js Obj.magic
                (let x1385 = this_to_js Obj.magic Obj.magic x1382 in
                 Ojs.call (Ojs.get_prop_ascii x1385 "splice") "apply"
                   [|x1385;((let x1380 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1380 "push"
                                  [|(Ojs.float_to_js x1377)|]);
                             ignore
                               (Ojs.call x1380 "push"
                                  [|(Ojs.float_to_js x1378)|]);
                             List.iter
                               (fun (x1381 : 'T) ->
                                  ignore
                                    (Ojs.call x1380 "push"
                                       [|(Obj.magic x1381)|])) x1379;
                             x1380))|])
    let (unshift : ('tags, 'T) this -> items:'T list -> float) =
      fun (x1390 : ('tags, 'T) this) ->
        fun ~items:(x1387 : 'T list) ->
          Ojs.float_of_js
            (let x1393 = this_to_js Obj.magic Obj.magic x1390 in
             Ojs.call (Ojs.get_prop_ascii x1393 "unshift") "apply"
               [|x1393;((let x1388 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x1389 : 'T) ->
                              ignore
                                (Ojs.call x1388 "push" [|(Obj.magic x1389)|]))
                           x1387;
                         x1388))|])
    let (indexOf :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> float)
      =
      fun (x1398 : ('tags, 'T) this) ->
        fun ~searchElement:(x1394 : 'T) ->
          fun ?fromIndex:(x1395 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1401 = this_to_js Obj.magic Obj.magic x1398 in
                 Ojs.call (Ojs.get_prop_ascii x1401 "indexOf") "apply"
                   [|x1401;((let x1396 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1396 "push" [|(Obj.magic x1394)|]);
                             (match x1395 with
                              | Some x1397 ->
                                  ignore
                                    (Ojs.call x1396 "push"
                                       [|(Ojs.float_to_js x1397)|])
                              | None -> ());
                             x1396))|])
    let (lastIndexOf :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> float)
      =
      fun (x1406 : ('tags, 'T) this) ->
        fun ~searchElement:(x1402 : 'T) ->
          fun ?fromIndex:(x1403 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1409 = this_to_js Obj.magic Obj.magic x1406 in
                 Ojs.call (Ojs.get_prop_ascii x1409 "lastIndexOf") "apply"
                   [|x1409;((let x1404 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1404 "push" [|(Obj.magic x1402)|]);
                             (match x1403 with
                              | Some x1405 ->
                                  ignore
                                    (Ojs.call x1404 "push"
                                       [|(Ojs.float_to_js x1405)|])
                              | None -> ());
                             x1404))|])
    let (every :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x1418 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1410 :
                       value:'T -> index:float -> array:'T list -> bool)
          ->
          fun ?thisArg:(x1411 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1421 = this_to_js Obj.magic Obj.magic x1418 in
                 Ojs.call (Ojs.get_prop_ascii x1421 "every") "apply"
                   [|x1421;((let x1412 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1412 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1414 : Ojs.t) ->
                                          fun (x1415 : Ojs.t) ->
                                            fun (x1416 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x1410
                                                   ~value:(Obj.magic x1414)
                                                   ~index:(Ojs.float_of_js
                                                             x1415)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1416))))|]);
                             (match x1411 with
                              | Some x1413 ->
                                  ignore
                                    (Ojs.call x1412 "push"
                                       [|(any_to_js x1413)|])
                              | None -> ());
                             x1412))|])
    let (every' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x1430 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1422 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x1423 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1433 = this_to_js Obj.magic Obj.magic x1430 in
                 Ojs.call (Ojs.get_prop_ascii x1433 "every") "apply"
                   [|x1433;((let x1424 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1424 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1426 : Ojs.t) ->
                                          fun (x1427 : Ojs.t) ->
                                            fun (x1428 : Ojs.t) ->
                                              unknown_to_js
                                                (x1422
                                                   ~value:(Obj.magic x1426)
                                                   ~index:(Ojs.float_of_js
                                                             x1427)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1428))))|]);
                             (match x1423 with
                              | Some x1425 ->
                                  ignore
                                    (Ojs.call x1424 "push"
                                       [|(any_to_js x1425)|])
                              | None -> ());
                             x1424))|])
    let (some :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x1442 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1434 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x1435 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1445 = this_to_js Obj.magic Obj.magic x1442 in
                 Ojs.call (Ojs.get_prop_ascii x1445 "some") "apply"
                   [|x1445;((let x1436 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1436 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1438 : Ojs.t) ->
                                          fun (x1439 : Ojs.t) ->
                                            fun (x1440 : Ojs.t) ->
                                              unknown_to_js
                                                (x1434
                                                   ~value:(Obj.magic x1438)
                                                   ~index:(Ojs.float_of_js
                                                             x1439)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1440))))|]);
                             (match x1435 with
                              | Some x1437 ->
                                  ignore
                                    (Ojs.call x1436 "push"
                                       [|(any_to_js x1437)|])
                              | None -> ());
                             x1436))|])
    let (forEach :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> index:float -> array:'T list -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x1454 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1446 :
                        value:'T -> index:float -> array:'T list -> unit)
          ->
          fun ?thisArg:(x1447 : any option) ->
            fun () ->
              ignore
                (let x1457 = this_to_js Obj.magic Obj.magic x1454 in
                 Ojs.call (Ojs.get_prop_ascii x1457 "forEach") "apply"
                   [|x1457;((let x1448 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1448 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1450 : Ojs.t) ->
                                          fun (x1451 : Ojs.t) ->
                                            fun (x1452 : Ojs.t) ->
                                              x1446 ~value:(Obj.magic x1450)
                                                ~index:(Ojs.float_of_js x1451)
                                                ~array:(Ojs.list_of_js
                                                          Obj.magic x1452)))|]);
                             (match x1447 with
                              | Some x1449 ->
                                  ignore
                                    (Ojs.call x1448 "push"
                                       [|(any_to_js x1449)|])
                              | None -> ());
                             x1448))|])
    let (map :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> index:float -> array:'T list -> 'U) ->
          ?thisArg:any -> unit -> 'U list)
      =
      fun (x1466 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1458 :
                        value:'T -> index:float -> array:'T list -> 'U)
          ->
          fun ?thisArg:(x1459 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1469 = this_to_js Obj.magic Obj.magic x1466 in
                 Ojs.call (Ojs.get_prop_ascii x1469 "map") "apply"
                   [|x1469;((let x1460 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1460 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1462 : Ojs.t) ->
                                          fun (x1463 : Ojs.t) ->
                                            fun (x1464 : Ojs.t) ->
                                              Obj.magic
                                                (x1458
                                                   ~value:(Obj.magic x1462)
                                                   ~index:(Ojs.float_of_js
                                                             x1463)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1464))))|]);
                             (match x1459 with
                              | Some x1461 ->
                                  ignore
                                    (Ojs.call x1460 "push"
                                       [|(any_to_js x1461)|])
                              | None -> ());
                             x1460))|])
    let (filter :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> 'S list)
      =
      fun (x1479 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1471 :
                       value:'T -> index:float -> array:'T list -> bool)
          ->
          fun ?thisArg:(x1472 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1482 = this_to_js Obj.magic Obj.magic x1479 in
                 Ojs.call (Ojs.get_prop_ascii x1482 "filter") "apply"
                   [|x1482;((let x1473 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1473 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1475 : Ojs.t) ->
                                          fun (x1476 : Ojs.t) ->
                                            fun (x1477 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x1471
                                                   ~value:(Obj.magic x1475)
                                                   ~index:(Ojs.float_of_js
                                                             x1476)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1477))))|]);
                             (match x1472 with
                              | Some x1474 ->
                                  ignore
                                    (Ojs.call x1473 "push"
                                       [|(any_to_js x1474)|])
                              | None -> ());
                             x1473))|])
    let (filter' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> 'T list)
      =
      fun (x1492 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1484 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x1485 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1495 = this_to_js Obj.magic Obj.magic x1492 in
                 Ojs.call (Ojs.get_prop_ascii x1495 "filter") "apply"
                   [|x1495;((let x1486 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1486 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1488 : Ojs.t) ->
                                          fun (x1489 : Ojs.t) ->
                                            fun (x1490 : Ojs.t) ->
                                              unknown_to_js
                                                (x1484
                                                   ~value:(Obj.magic x1488)
                                                   ~index:(Ojs.float_of_js
                                                             x1489)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1490))))|]);
                             (match x1485 with
                              | Some x1487 ->
                                  ignore
                                    (Ojs.call x1486 "push"
                                       [|(any_to_js x1487)|])
                              | None -> ());
                             x1486))|])
    let (reduce :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> 'T)
      =
      fun (x1503 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1497 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x1503) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x1498 : Ojs.t) ->
                       fun (x1499 : Ojs.t) ->
                         fun (x1500 : Ojs.t) ->
                           fun (x1501 : Ojs.t) ->
                             Obj.magic
                               (x1497 ~previousValue:(Obj.magic x1498)
                                  ~currentValue:(Obj.magic x1499)
                                  ~currentIndex:(Ojs.float_of_js x1500)
                                  ~array:(Ojs.list_of_js Obj.magic x1501))))|])
    let (reduce' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> initialValue:'T -> 'T)
      =
      fun (x1513 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1506 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          fun ~initialValue:(x1512 : 'T) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1513) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x1507 : Ojs.t) ->
                         fun (x1508 : Ojs.t) ->
                           fun (x1509 : Ojs.t) ->
                             fun (x1510 : Ojs.t) ->
                               Obj.magic
                                 (x1506 ~previousValue:(Obj.magic x1507)
                                    ~currentValue:(Obj.magic x1508)
                                    ~currentIndex:(Ojs.float_of_js x1509)
                                    ~array:(Ojs.list_of_js Obj.magic x1510))));(
                   Obj.magic x1512)|])
    let (reduce'' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'U ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x1523 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1516 :
                        previousValue:'U ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'U)
          ->
          fun ~initialValue:(x1522 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1523) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x1517 : Ojs.t) ->
                         fun (x1518 : Ojs.t) ->
                           fun (x1519 : Ojs.t) ->
                             fun (x1520 : Ojs.t) ->
                               Obj.magic
                                 (x1516 ~previousValue:(Obj.magic x1517)
                                    ~currentValue:(Obj.magic x1518)
                                    ~currentIndex:(Ojs.float_of_js x1519)
                                    ~array:(Ojs.list_of_js Obj.magic x1520))));(
                   Obj.magic x1522)|])
    let (reduceRight :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> 'T)
      =
      fun (x1532 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1526 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x1532) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x1527 : Ojs.t) ->
                       fun (x1528 : Ojs.t) ->
                         fun (x1529 : Ojs.t) ->
                           fun (x1530 : Ojs.t) ->
                             Obj.magic
                               (x1526 ~previousValue:(Obj.magic x1527)
                                  ~currentValue:(Obj.magic x1528)
                                  ~currentIndex:(Ojs.float_of_js x1529)
                                  ~array:(Ojs.list_of_js Obj.magic x1530))))|])
    let (reduceRight' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> initialValue:'T -> 'T)
      =
      fun (x1542 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1535 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          fun ~initialValue:(x1541 : 'T) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1542) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x1536 : Ojs.t) ->
                         fun (x1537 : Ojs.t) ->
                           fun (x1538 : Ojs.t) ->
                             fun (x1539 : Ojs.t) ->
                               Obj.magic
                                 (x1535 ~previousValue:(Obj.magic x1536)
                                    ~currentValue:(Obj.magic x1537)
                                    ~currentIndex:(Ojs.float_of_js x1538)
                                    ~array:(Ojs.list_of_js Obj.magic x1539))));(
                   Obj.magic x1541)|])
    let (reduceRight'' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'U ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x1552 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1545 :
                        previousValue:'U ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'U)
          ->
          fun ~initialValue:(x1551 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1552) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x1546 : Ojs.t) ->
                         fun (x1547 : Ojs.t) ->
                           fun (x1548 : Ojs.t) ->
                             fun (x1549 : Ojs.t) ->
                               Obj.magic
                                 (x1545 ~previousValue:(Obj.magic x1546)
                                    ~currentValue:(Obj.magic x1547)
                                    ~currentIndex:(Ojs.float_of_js x1548)
                                    ~array:(Ojs.list_of_js Obj.magic x1549))));(
                   Obj.magic x1551)|])
    let (get : ('tags, 'T) this -> float -> 'T) =
      fun (x1555 : ('tags, 'T) this) ->
        fun (x1558 : float) ->
          Obj.magic
            (Ojs.get_prop (this_to_js Obj.magic Obj.magic x1555)
               (Ojs.float_to_js x1558))
    let (set : ('tags, 'T) this -> float -> 'T -> unit) =
      fun (x1559 : ('tags, 'T) this) ->
        fun (x1562 : float) ->
          fun (x1563 : 'T) ->
            Ojs.set_prop (this_to_js Obj.magic Obj.magic x1559)
              (Ojs.float_to_js x1562) (Obj.magic x1563)
    let (from : [ `U1 of 'T Iterable.t  | `U2 of 'T ArrayLike.t ] -> 'T list)
      =
      fun (x1564 : [ `U1 of 'T Iterable.t  | `U2 of 'T ArrayLike.t ]) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "from"
             [|((match x1564 with
                 | `U1 x1565 -> Iterable.t_to_js Obj.magic x1565
                 | `U2 x1567 -> ArrayLike.t_to_js Obj.magic x1567))|])
    let (from' :
      iterable:[ `U1 of 'T Iterable.t  | `U2 of 'T ArrayLike.t ] ->
        mapfn:(v:'T -> k:float -> 'U) -> ?thisArg:any -> unit -> 'U list)
      =
      fun
        ~iterable:(x1570 : [ `U1 of 'T Iterable.t  | `U2 of 'T ArrayLike.t ])
        ->
        fun ~mapfn:(x1571 : v:'T -> k:float -> 'U) ->
          fun ?thisArg:(x1572 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1581 = Ojs.get_prop_ascii Ojs.global "Array" in
                 Ojs.call (Ojs.get_prop_ascii x1581 "from") "apply"
                   [|x1581;((let x1573 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1573 "push"
                                  [|((match x1570 with
                                      | `U1 x1577 ->
                                          Iterable.t_to_js Obj.magic x1577
                                      | `U2 x1579 ->
                                          ArrayLike.t_to_js Obj.magic x1579))|]);
                             ignore
                               (Ojs.call x1573 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x1575 : Ojs.t) ->
                                          fun (x1576 : Ojs.t) ->
                                            Obj.magic
                                              (x1571 ~v:(Obj.magic x1575)
                                                 ~k:(Ojs.float_of_js x1576))))|]);
                             (match x1572 with
                              | Some x1574 ->
                                  ignore
                                    (Ojs.call x1573 "push"
                                       [|(any_to_js x1574)|])
                              | None -> ());
                             x1573))|])
    let (from'' : 'T ArrayLike.t -> 'T list) =
      fun (x1583 : 'T ArrayLike.t) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "from"
             [|(ArrayLike.t_to_js Obj.magic x1583)|])
    let (from''' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> 'U) -> ?thisArg:any -> unit -> 'U list)
      =
      fun ~arrayLike:(x1586 : 'T ArrayLike.t) ->
        fun ~mapfn:(x1587 : v:'T -> k:float -> 'U) ->
          fun ?thisArg:(x1588 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1594 = Ojs.get_prop_ascii Ojs.global "Array" in
                 Ojs.call (Ojs.get_prop_ascii x1594 "from") "apply"
                   [|x1594;((let x1589 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1589 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x1586)|]);
                             ignore
                               (Ojs.call x1589 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x1591 : Ojs.t) ->
                                          fun (x1592 : Ojs.t) ->
                                            Obj.magic
                                              (x1587 ~v:(Obj.magic x1591)
                                                 ~k:(Ojs.float_of_js x1592))))|]);
                             (match x1588 with
                              | Some x1590 ->
                                  ignore
                                    (Ojs.call x1589 "push"
                                       [|(any_to_js x1590)|])
                              | None -> ());
                             x1589))|])
    let (of_ : 'T list -> 'T list) =
      fun (x1596 : 'T list) ->
        Ojs.list_of_js Obj.magic
          (let x1599 = Ojs.get_prop_ascii Ojs.global "Array" in
           Ojs.call (Ojs.get_prop_ascii x1599 "of") "apply"
             [|x1599;((let x1597 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x1598 : 'T) ->
                            ignore
                              (Ojs.call x1597 "push" [|(Obj.magic x1598)|]))
                         x1596;
                       x1597))|])
    let (create : ?arrayLength:float -> unit -> any list) =
      fun ?arrayLength:(x1601 : float option) ->
        fun () ->
          Ojs.list_of_js any_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Array")
               (let x1602 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x1601 with
                 | Some x1603 ->
                     ignore
                       (Ojs.call x1602 "push" [|(Ojs.float_to_js x1603)|])
                 | None -> ());
                x1602))
    let (create' : float -> 'T list) =
      fun (x1605 : float) ->
        Ojs.list_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
             [|(Ojs.float_to_js x1605)|])
    let (create'' : 'T list -> 'T list) =
      fun (x1607 : 'T list) ->
        Ojs.list_of_js Obj.magic
          (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Array")
             (let x1608 =
                Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
              List.iter
                (fun (x1609 : 'T) ->
                   ignore (Ojs.call x1608 "push" [|(Obj.magic x1609)|]))
                x1607;
              x1608))
    let (invoke : ?arrayLength:float -> unit -> any list) =
      fun ?arrayLength:(x1611 : float option) ->
        fun () ->
          Ojs.list_of_js any_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "apply"
               [|Ojs.null;((let x1612 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x1611 with
                             | Some x1613 ->
                                 ignore
                                   (Ojs.call x1612 "push"
                                      [|(Ojs.float_to_js x1613)|])
                             | None -> ());
                            x1612))|])
    let (invoke' : float -> 'T list) =
      fun (x1615 : float) ->
        Ojs.list_of_js Obj.magic
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "Array")
             [|(Ojs.float_to_js x1615)|])
    let (invoke'' : 'T list -> 'T list) =
      fun (x1617 : 'T list) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "apply"
             [|Ojs.null;((let x1618 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x1619 : 'T) ->
                               ignore
                                 (Ojs.call x1618 "push" [|(Obj.magic x1619)|]))
                            x1617;
                          x1618))|])
    let (isArray : any -> bool) =
      fun (x1621 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "isArray"
             [|(any_to_js x1621)|])
    let (prototype : unit -> any list) =
      fun () ->
        Ojs.list_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Array")
             "prototype")
    let cast_from = Obj.magic
    let (of_ml : 'T list -> 'T t) =
      fun (x1623 : 'T list) ->
        t_of_js Obj.magic (Ojs.list_to_js Obj.magic x1623)
    let (to_ml : 'T t -> 'T list) =
      fun (x1626 : 'T t) ->
        Ojs.list_of_js Obj.magic (t_to_js Obj.magic x1626)
  end
module RegExpMatchArray =
  struct
    module AnonymousInterface16 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x1630 : Ojs.t) -> x1630
        and t_to_js : t -> Ojs.t = fun (x1629 : Ojs.t) -> x1629
        let (get : t -> string -> string) =
          fun (x1631 : t) ->
            fun (x1632 : string) ->
              Ojs.string_of_js
                (Ojs.get_prop (t_to_js x1631) (Ojs.string_to_js x1632))
        let (set : t -> string -> string -> unit) =
          fun (x1633 : t) ->
            fun (x1634 : string) ->
              fun (x1635 : string) ->
                Ojs.set_prop (t_to_js x1633) (Ojs.string_to_js x1634)
                  (Ojs.string_to_js x1635)
      end
    type t =
      [ `Array of string  | `Array of string  | `RegExpMatchArray 
      | string ArrayLike.tags_1 | string IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1637 : Ojs.t) -> t_of_js x1637
    and t_0_to_js : t_0 -> Ojs.t = fun (x1636 : t) -> t_to_js x1636
    type tags =
      [ `Array of string  | `Array of string  | `RegExpMatchArray 
      | string ArrayLike.tags_1 | string IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `RegExpMatchArray ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x1640 : Ojs.t) -> intf_of_js __tags_of_js x1640
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x1638 : __tags intf) -> intf_to_js __tags_to_js x1638
    let (get_groups : 'tags this -> AnonymousInterface16.t) =
      fun (x1642 : 'tags this) ->
        AnonymousInterface16.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1642) "groups")
    let (set_groups : 'tags this -> AnonymousInterface16.t -> unit) =
      fun (x1644 : 'tags this) ->
        fun (x1645 : AnonymousInterface16.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1644) "groups"
            (AnonymousInterface16.t_to_js x1645)
    let (get_index : 'tags this -> float) =
      fun (x1647 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1647) "index")
    let (set_index : 'tags this -> float -> unit) =
      fun (x1649 : 'tags this) ->
        fun (x1650 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1649) "index"
            (Ojs.float_to_js x1650)
    let (get_input : 'tags this -> string) =
      fun (x1652 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1652) "input")
    let (set_input : 'tags this -> string -> unit) =
      fun (x1654 : 'tags this) ->
        fun (x1655 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1654) "input"
            (Ojs.string_to_js x1655)
    let (create :
      groups:AnonymousInterface16.t ->
        index:float -> input:string -> unit -> t)
      =
      fun ~groups:(x1657 : AnonymousInterface16.t) ->
        fun ~index:(x1658 : float) ->
          fun ~input:(x1659 : string) ->
            fun () ->
              let x1660 = Ojs.empty_obj () in
              Ojs.set_prop_ascii x1660 "groups"
                (AnonymousInterface16.t_to_js x1657);
              Ojs.set_prop_ascii x1660 "index" (Ojs.float_to_js x1658);
              Ojs.set_prop_ascii x1660 "input" (Ojs.string_to_js x1659);
              t_of_js x1660
    let cast_from = Obj.magic
  end
module RegExpExecArray =
  struct
    module AnonymousInterface16 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x1662 : Ojs.t) -> x1662
        and t_to_js : t -> Ojs.t = fun (x1661 : Ojs.t) -> x1661
        let (get : t -> string -> string) =
          fun (x1663 : t) ->
            fun (x1664 : string) ->
              Ojs.string_of_js
                (Ojs.get_prop (t_to_js x1663) (Ojs.string_to_js x1664))
        let (set : t -> string -> string -> unit) =
          fun (x1665 : t) ->
            fun (x1666 : string) ->
              fun (x1667 : string) ->
                Ojs.set_prop (t_to_js x1665) (Ojs.string_to_js x1666)
                  (Ojs.string_to_js x1667)
      end
    type t =
      [ `Array of string  | `Array of string  | `RegExpExecArray 
      | string ArrayLike.tags_1 | string IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1669 : Ojs.t) -> t_of_js x1669
    and t_0_to_js : t_0 -> Ojs.t = fun (x1668 : t) -> t_to_js x1668
    type tags =
      [ `Array of string  | `Array of string  | `RegExpExecArray 
      | string ArrayLike.tags_1 | string IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `RegExpExecArray ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x1672 : Ojs.t) -> intf_of_js __tags_of_js x1672
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x1670 : __tags intf) -> intf_to_js __tags_to_js x1670
    let (get_groups : 'tags this -> AnonymousInterface16.t) =
      fun (x1674 : 'tags this) ->
        AnonymousInterface16.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1674) "groups")
    let (set_groups : 'tags this -> AnonymousInterface16.t -> unit) =
      fun (x1676 : 'tags this) ->
        fun (x1677 : AnonymousInterface16.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1676) "groups"
            (AnonymousInterface16.t_to_js x1677)
    let (get_index : 'tags this -> float) =
      fun (x1679 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1679) "index")
    let (set_index : 'tags this -> float -> unit) =
      fun (x1681 : 'tags this) ->
        fun (x1682 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1681) "index"
            (Ojs.float_to_js x1682)
    let (get_input : 'tags this -> string) =
      fun (x1684 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1684) "input")
    let (set_input : 'tags this -> string -> unit) =
      fun (x1686 : 'tags this) ->
        fun (x1687 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1686) "input"
            (Ojs.string_to_js x1687)
    let (create :
      groups:AnonymousInterface16.t ->
        index:float -> input:string -> unit -> t)
      =
      fun ~groups:(x1689 : AnonymousInterface16.t) ->
        fun ~index:(x1690 : float) ->
          fun ~input:(x1691 : string) ->
            fun () ->
              let x1692 = Ojs.empty_obj () in
              Ojs.set_prop_ascii x1692 "groups"
                (AnonymousInterface16.t_to_js x1689);
              Ojs.set_prop_ascii x1692 "index" (Ojs.float_to_js x1690);
              Ojs.set_prop_ascii x1692 "input" (Ojs.string_to_js x1691);
              t_of_js x1692
    let cast_from = Obj.magic
  end
module RegExp =
  struct
    type t = [ `RegExp ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1694 : Ojs.t) -> t_of_js x1694
    and t_0_to_js : t_0 -> Ojs.t = fun (x1693 : t) -> t_to_js x1693
    type tags = [ `RegExp ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `RegExp ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x1697 : Ojs.t) -> intf_of_js __tags_of_js x1697
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x1695 : __tags intf) -> intf_to_js __tags_to_js x1695
    let (get_dotAll : 'tags this -> bool) =
      fun (x1699 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1699) "dotAll")
    let (get_flags : 'tags this -> string) =
      fun (x1701 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1701) "flags")
    let (get_sticky : 'tags this -> bool) =
      fun (x1703 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1703) "sticky")
    let (get_unicode : 'tags this -> bool) =
      fun (x1705 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1705) "unicode")
    let (exec : 'tags this -> string:string -> RegExpExecArray.t option) =
      fun (x1708 : 'tags this) ->
        fun ~string:(x1707 : string) ->
          Ojs.option_of_js RegExpExecArray.t_of_js
            (Ojs.call (this_to_js Obj.magic x1708) "exec"
               [|(Ojs.string_to_js x1707)|])
    let (test : 'tags this -> string:string -> bool) =
      fun (x1712 : 'tags this) ->
        fun ~string:(x1711 : string) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic x1712) "test"
               [|(Ojs.string_to_js x1711)|])
    let (get_source : 'tags this -> string) =
      fun (x1714 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1714) "source")
    let (get_global : 'tags this -> bool) =
      fun (x1716 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1716) "global")
    let (get_ignoreCase : 'tags this -> bool) =
      fun (x1718 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1718) "ignoreCase")
    let (get_multiline : 'tags this -> bool) =
      fun (x1720 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1720) "multiline")
    let (get_lastIndex : 'tags this -> float) =
      fun (x1722 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1722) "lastIndex")
    let (set_lastIndex : 'tags this -> float -> unit) =
      fun (x1724 : 'tags this) ->
        fun (x1725 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1724) "lastIndex"
            (Ojs.float_to_js x1725)
    let (compile :
      'tags this -> pattern:string -> ?flags:string -> unit -> 'tags this) =
      fun (x1731 : 'tags this) ->
        fun ~pattern:(x1727 : string) ->
          fun ?flags:(x1728 : string option) ->
            fun () ->
              this_of_js Obj.magic
                (let x1733 = this_to_js Obj.magic x1731 in
                 Ojs.call (Ojs.get_prop_ascii x1733 "compile") "apply"
                   [|x1733;((let x1729 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1729 "push"
                                  [|(Ojs.string_to_js x1727)|]);
                             (match x1728 with
                              | Some x1730 ->
                                  ignore
                                    (Ojs.call x1729 "push"
                                       [|(Ojs.string_to_js x1730)|])
                              | None -> ());
                             x1729))|])
    let (create :
      pattern:[ `U1 of t  | `U2 of string ] -> ?flags:string -> unit -> t) =
      fun ~pattern:(x1735 : [ `U1 of t  | `U2 of string ]) ->
        fun ?flags:(x1736 : string option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "RegExp")
                 (let x1737 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore
                    (Ojs.call x1737 "push"
                       [|((match x1735 with
                           | `U1 x1739 -> t_to_js x1739
                           | `U2 x1740 -> Ojs.string_to_js x1740))|]);
                  (match x1736 with
                   | Some x1738 ->
                       ignore
                         (Ojs.call x1737 "push" [|(Ojs.string_to_js x1738)|])
                   | None -> ());
                  x1737))
    let (invoke :
      pattern:[ `U1 of t  | `U2 of string ] -> ?flags:string -> unit -> t) =
      fun ~pattern:(x1741 : [ `U1 of t  | `U2 of string ]) ->
        fun ?flags:(x1742 : string option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "apply"
                 [|Ojs.null;((let x1743 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x1743 "push"
                                   [|((match x1741 with
                                       | `U1 x1745 -> t_to_js x1745
                                       | `U2 x1746 -> Ojs.string_to_js x1746))|]);
                              (match x1742 with
                               | Some x1744 ->
                                   ignore
                                     (Ojs.call x1743 "push"
                                        [|(Ojs.string_to_js x1744)|])
                               | None -> ());
                              x1743))|])
    let (create' : [ `U1 of t  | `U2 of string ] -> t) =
      fun (x1747 : [ `U1 of t  | `U2 of string ]) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "RegExp")
             [|((match x1747 with
                 | `U1 x1748 -> t_to_js x1748
                 | `U2 x1749 -> Ojs.string_to_js x1749))|])
    let (create'' : pattern:string -> ?flags:string -> unit -> t) =
      fun ~pattern:(x1750 : string) ->
        fun ?flags:(x1751 : string option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "RegExp")
                 (let x1752 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore (Ojs.call x1752 "push" [|(Ojs.string_to_js x1750)|]);
                  (match x1751 with
                   | Some x1753 ->
                       ignore
                         (Ojs.call x1752 "push" [|(Ojs.string_to_js x1753)|])
                   | None -> ());
                  x1752))
    let (invoke' : [ `U1 of t  | `U2 of string ] -> t) =
      fun (x1754 : [ `U1 of t  | `U2 of string ]) ->
        t_of_js
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "RegExp")
             [|((match x1754 with
                 | `U1 x1755 -> t_to_js x1755
                 | `U2 x1756 -> Ojs.string_to_js x1756))|])
    let (invoke'' : pattern:string -> ?flags:string -> unit -> t) =
      fun ~pattern:(x1757 : string) ->
        fun ?flags:(x1758 : string option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "apply"
                 [|Ojs.null;((let x1759 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x1759 "push"
                                   [|(Ojs.string_to_js x1757)|]);
                              (match x1758 with
                               | Some x1760 ->
                                   ignore
                                     (Ojs.call x1759 "push"
                                        [|(Ojs.string_to_js x1760)|])
                               | None -> ());
                              x1759))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "prototype")
    let (_1 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$1")
    let (_2 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$2")
    let (_3 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$3")
    let (_4 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$4")
    let (_5 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$5")
    let (_6 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$6")
    let (_7 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$7")
    let (_8 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$8")
    let (_9 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$9")
    let (input : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "input")
    let (__ : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$_")
    let (lastMatch : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "lastMatch")
    let (__' : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$&")
    let (lastParen : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "lastParen")
    let (__'' : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$+")
    let (leftContext : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "leftContext")
    let (__''' : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$`")
    let (rightContext : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "rightContext")
    let (__'''' : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$'")
    let cast_from = Obj.magic
  end
module Partial =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x1762 : Ojs.t) -> any_of_js x1762
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x1761 : any) -> any_to_js x1761
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x1765 : Ojs.t) -> t_of_js __T_of_js x1765
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x1763 : __T t) -> t_to_js __T_to_js x1763
  end
module rec
  Date:sig
         type t = [ `Date ] intf
         type t_0 = t
         [@@@js.stop ]
         type tags = [ `Date ]
         type tags_0 = tags
         [@@@js.start ]
         [@@@js.implem type tags = [ `Date ]
           type tags_0 = tags]
         type 'tags this = 'tags intf constraint 'tags = [> `Date ]
         val t_to_js : t -> Ojs.t
         val t_of_js : Ojs.t -> t
         val t_0_to_js : t_0 -> Ojs.t
         val t_0_of_js : Ojs.t -> t_0
         val toLocaleString :
           'tags this ->
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:Intl.DateTimeFormatOptions.t -> unit -> string
         val toLocaleDateString :
           'tags this ->
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:Intl.DateTimeFormatOptions.t -> unit -> string
         val toLocaleTimeString :
           'tags this ->
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:Intl.DateTimeFormatOptions.t -> unit -> string
         val toString : 'tags this -> string
         val toDateString : 'tags this -> string
         val toTimeString : 'tags this -> string
         val toLocaleString' : 'tags this -> string
         val toLocaleDateString' : 'tags this -> string
         val toLocaleTimeString' : 'tags this -> string
         val valueOf : 'tags this -> float
         val getTime : 'tags this -> float
         val getFullYear : 'tags this -> float
         val getUTCFullYear : 'tags this -> float
         val getMonth : 'tags this -> float
         val getUTCMonth : 'tags this -> float
         val getDate : 'tags this -> float
         val getUTCDate : 'tags this -> float
         val getDay : 'tags this -> float
         val getUTCDay : 'tags this -> float
         val getHours : 'tags this -> float
         val getUTCHours : 'tags this -> float
         val getMinutes : 'tags this -> float
         val getUTCMinutes : 'tags this -> float
         val getSeconds : 'tags this -> float
         val getUTCSeconds : 'tags this -> float
         val getMilliseconds : 'tags this -> float
         val getUTCMilliseconds : 'tags this -> float
         val getTimezoneOffset : 'tags this -> float
         val setTime : 'tags this -> time:float -> float
         val setMilliseconds : 'tags this -> ms:float -> float
         val setUTCMilliseconds : 'tags this -> ms:float -> float
         val setSeconds :
           'tags this -> sec:float -> ?ms:float -> unit -> float
         val setUTCSeconds :
           'tags this -> sec:float -> ?ms:float -> unit -> float
         val setMinutes :
           'tags this ->
             min:float -> ?sec:float -> ?ms:float -> unit -> float
         val setUTCMinutes :
           'tags this ->
             min:float -> ?sec:float -> ?ms:float -> unit -> float
         val setHours :
           'tags this ->
             hours:float ->
               ?min:float -> ?sec:float -> ?ms:float -> unit -> float
         val setUTCHours :
           'tags this ->
             hours:float ->
               ?min:float -> ?sec:float -> ?ms:float -> unit -> float
         val setDate : 'tags this -> date:float -> float
         val setUTCDate : 'tags this -> date:float -> float
         val setMonth :
           'tags this -> month:float -> ?date:float -> unit -> float
         val setUTCMonth :
           'tags this -> month:float -> ?date:float -> unit -> float
         val setFullYear :
           'tags this ->
             year:float -> ?month:float -> ?date:float -> unit -> float
         val setUTCFullYear :
           'tags this ->
             year:float -> ?month:float -> ?date:float -> unit -> float
         val toUTCString : 'tags this -> string
         val toISOString : 'tags this -> string
         val toJSON : 'tags this -> ?key:any -> unit -> string
         val create : [ `U1 of float  | `U2 of string  | `U3 of t ] -> t
         val create' : unit -> t
         val create'' : [ `U1 of float  | `U2 of string ] -> t
         val create''' :
           year:float ->
             month:float ->
               ?date:float ->
                 ?hours:float ->
                   ?minutes:float -> ?seconds:float -> ?ms:float -> unit -> t
         val invoke : unit -> string
         val prototype : unit -> t
         val parse : string -> float
         val utc :
           year:float ->
             month:float ->
               ?date:float ->
                 ?hours:float ->
                   ?minutes:float ->
                     ?seconds:float -> ?ms:float -> unit -> float
         val now : unit -> float
         val cast_from : 'tags this -> t
       end =
  struct
    type t = [ `Date ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1768 : Ojs.t) -> t_of_js x1768
    and t_0_to_js : t_0 -> Ojs.t = fun (x1767 : t) -> t_to_js x1767
    type tags = [ `Date ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Date ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x1771 : Ojs.t) -> intf_of_js __tags_of_js x1771
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x1769 : __tags intf) -> intf_to_js __tags_to_js x1769
    let (toLocaleString :
      'tags this ->
        ?locales:[ `U1 of string  | `U2 of string list ] ->
          ?options:Intl.DateTimeFormatOptions.t -> unit -> string)
      =
      fun (x1781 : 'tags this) ->
        fun ?locales:(x1773 : [ `U1 of string  | `U2 of string list ] option)
          ->
          fun ?options:(x1774 : Intl.DateTimeFormatOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x1783 = this_to_js Obj.magic x1781 in
                 Ojs.call (Ojs.get_prop_ascii x1783 "toLocaleString") "apply"
                   [|x1783;((let x1775 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1773 with
                              | Some x1777 ->
                                  ignore
                                    (Ojs.call x1775 "push"
                                       [|((match x1777 with
                                           | `U1 x1778 ->
                                               Ojs.string_to_js x1778
                                           | `U2 x1779 ->
                                               Ojs.list_to_js
                                                 Ojs.string_to_js x1779))|])
                              | None -> ());
                             (match x1774 with
                              | Some x1776 ->
                                  ignore
                                    (Ojs.call x1775 "push"
                                       [|(Intl.DateTimeFormatOptions.t_to_js
                                            x1776)|])
                              | None -> ());
                             x1775))|])
    let (toLocaleDateString :
      'tags this ->
        ?locales:[ `U1 of string  | `U2 of string list ] ->
          ?options:Intl.DateTimeFormatOptions.t -> unit -> string)
      =
      fun (x1792 : 'tags this) ->
        fun ?locales:(x1784 : [ `U1 of string  | `U2 of string list ] option)
          ->
          fun ?options:(x1785 : Intl.DateTimeFormatOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x1794 = this_to_js Obj.magic x1792 in
                 Ojs.call (Ojs.get_prop_ascii x1794 "toLocaleDateString")
                   "apply"
                   [|x1794;((let x1786 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1784 with
                              | Some x1788 ->
                                  ignore
                                    (Ojs.call x1786 "push"
                                       [|((match x1788 with
                                           | `U1 x1789 ->
                                               Ojs.string_to_js x1789
                                           | `U2 x1790 ->
                                               Ojs.list_to_js
                                                 Ojs.string_to_js x1790))|])
                              | None -> ());
                             (match x1785 with
                              | Some x1787 ->
                                  ignore
                                    (Ojs.call x1786 "push"
                                       [|(Intl.DateTimeFormatOptions.t_to_js
                                            x1787)|])
                              | None -> ());
                             x1786))|])
    let (toLocaleTimeString :
      'tags this ->
        ?locales:[ `U1 of string  | `U2 of string list ] ->
          ?options:Intl.DateTimeFormatOptions.t -> unit -> string)
      =
      fun (x1803 : 'tags this) ->
        fun ?locales:(x1795 : [ `U1 of string  | `U2 of string list ] option)
          ->
          fun ?options:(x1796 : Intl.DateTimeFormatOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x1805 = this_to_js Obj.magic x1803 in
                 Ojs.call (Ojs.get_prop_ascii x1805 "toLocaleTimeString")
                   "apply"
                   [|x1805;((let x1797 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1795 with
                              | Some x1799 ->
                                  ignore
                                    (Ojs.call x1797 "push"
                                       [|((match x1799 with
                                           | `U1 x1800 ->
                                               Ojs.string_to_js x1800
                                           | `U2 x1801 ->
                                               Ojs.list_to_js
                                                 Ojs.string_to_js x1801))|])
                              | None -> ());
                             (match x1796 with
                              | Some x1798 ->
                                  ignore
                                    (Ojs.call x1797 "push"
                                       [|(Intl.DateTimeFormatOptions.t_to_js
                                            x1798)|])
                              | None -> ());
                             x1797))|])
    let (toString : 'tags this -> string) =
      fun (x1806 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1806) "toString" [||])
    let (toDateString : 'tags this -> string) =
      fun (x1808 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1808) "toDateString" [||])
    let (toTimeString : 'tags this -> string) =
      fun (x1810 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1810) "toTimeString" [||])
    let (toLocaleString' : 'tags this -> string) =
      fun (x1812 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1812) "toLocaleString" [||])
    let (toLocaleDateString' : 'tags this -> string) =
      fun (x1814 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1814) "toLocaleDateString" [||])
    let (toLocaleTimeString' : 'tags this -> string) =
      fun (x1816 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1816) "toLocaleTimeString" [||])
    let (valueOf : 'tags this -> float) =
      fun (x1818 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1818) "valueOf" [||])
    let (getTime : 'tags this -> float) =
      fun (x1820 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1820) "getTime" [||])
    let (getFullYear : 'tags this -> float) =
      fun (x1822 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1822) "getFullYear" [||])
    let (getUTCFullYear : 'tags this -> float) =
      fun (x1824 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1824) "getUTCFullYear" [||])
    let (getMonth : 'tags this -> float) =
      fun (x1826 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1826) "getMonth" [||])
    let (getUTCMonth : 'tags this -> float) =
      fun (x1828 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1828) "getUTCMonth" [||])
    let (getDate : 'tags this -> float) =
      fun (x1830 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1830) "getDate" [||])
    let (getUTCDate : 'tags this -> float) =
      fun (x1832 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1832) "getUTCDate" [||])
    let (getDay : 'tags this -> float) =
      fun (x1834 : 'tags this) ->
        Ojs.float_of_js (Ojs.call (this_to_js Obj.magic x1834) "getDay" [||])
    let (getUTCDay : 'tags this -> float) =
      fun (x1836 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1836) "getUTCDay" [||])
    let (getHours : 'tags this -> float) =
      fun (x1838 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1838) "getHours" [||])
    let (getUTCHours : 'tags this -> float) =
      fun (x1840 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1840) "getUTCHours" [||])
    let (getMinutes : 'tags this -> float) =
      fun (x1842 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1842) "getMinutes" [||])
    let (getUTCMinutes : 'tags this -> float) =
      fun (x1844 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1844) "getUTCMinutes" [||])
    let (getSeconds : 'tags this -> float) =
      fun (x1846 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1846) "getSeconds" [||])
    let (getUTCSeconds : 'tags this -> float) =
      fun (x1848 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1848) "getUTCSeconds" [||])
    let (getMilliseconds : 'tags this -> float) =
      fun (x1850 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1850) "getMilliseconds" [||])
    let (getUTCMilliseconds : 'tags this -> float) =
      fun (x1852 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1852) "getUTCMilliseconds" [||])
    let (getTimezoneOffset : 'tags this -> float) =
      fun (x1854 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1854) "getTimezoneOffset" [||])
    let (setTime : 'tags this -> time:float -> float) =
      fun (x1857 : 'tags this) ->
        fun ~time:(x1856 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x1857) "setTime"
               [|(Ojs.float_to_js x1856)|])
    let (setMilliseconds : 'tags this -> ms:float -> float) =
      fun (x1860 : 'tags this) ->
        fun ~ms:(x1859 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x1860) "setMilliseconds"
               [|(Ojs.float_to_js x1859)|])
    let (setUTCMilliseconds : 'tags this -> ms:float -> float) =
      fun (x1863 : 'tags this) ->
        fun ~ms:(x1862 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x1863) "setUTCMilliseconds"
               [|(Ojs.float_to_js x1862)|])
    let (setSeconds : 'tags this -> sec:float -> ?ms:float -> unit -> float)
      =
      fun (x1869 : 'tags this) ->
        fun ~sec:(x1865 : float) ->
          fun ?ms:(x1866 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1871 = this_to_js Obj.magic x1869 in
                 Ojs.call (Ojs.get_prop_ascii x1871 "setSeconds") "apply"
                   [|x1871;((let x1867 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1867 "push"
                                  [|(Ojs.float_to_js x1865)|]);
                             (match x1866 with
                              | Some x1868 ->
                                  ignore
                                    (Ojs.call x1867 "push"
                                       [|(Ojs.float_to_js x1868)|])
                              | None -> ());
                             x1867))|])
    let (setUTCSeconds :
      'tags this -> sec:float -> ?ms:float -> unit -> float) =
      fun (x1876 : 'tags this) ->
        fun ~sec:(x1872 : float) ->
          fun ?ms:(x1873 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1878 = this_to_js Obj.magic x1876 in
                 Ojs.call (Ojs.get_prop_ascii x1878 "setUTCSeconds") "apply"
                   [|x1878;((let x1874 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1874 "push"
                                  [|(Ojs.float_to_js x1872)|]);
                             (match x1873 with
                              | Some x1875 ->
                                  ignore
                                    (Ojs.call x1874 "push"
                                       [|(Ojs.float_to_js x1875)|])
                              | None -> ());
                             x1874))|])
    let (setMinutes :
      'tags this -> min:float -> ?sec:float -> ?ms:float -> unit -> float) =
      fun (x1885 : 'tags this) ->
        fun ~min:(x1879 : float) ->
          fun ?sec:(x1880 : float option) ->
            fun ?ms:(x1881 : float option) ->
              fun () ->
                Ojs.float_of_js
                  (let x1887 = this_to_js Obj.magic x1885 in
                   Ojs.call (Ojs.get_prop_ascii x1887 "setMinutes") "apply"
                     [|x1887;((let x1882 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1882 "push"
                                    [|(Ojs.float_to_js x1879)|]);
                               (match x1880 with
                                | Some x1884 ->
                                    ignore
                                      (Ojs.call x1882 "push"
                                         [|(Ojs.float_to_js x1884)|])
                                | None -> ());
                               (match x1881 with
                                | Some x1883 ->
                                    ignore
                                      (Ojs.call x1882 "push"
                                         [|(Ojs.float_to_js x1883)|])
                                | None -> ());
                               x1882))|])
    let (setUTCMinutes :
      'tags this -> min:float -> ?sec:float -> ?ms:float -> unit -> float) =
      fun (x1894 : 'tags this) ->
        fun ~min:(x1888 : float) ->
          fun ?sec:(x1889 : float option) ->
            fun ?ms:(x1890 : float option) ->
              fun () ->
                Ojs.float_of_js
                  (let x1896 = this_to_js Obj.magic x1894 in
                   Ojs.call (Ojs.get_prop_ascii x1896 "setUTCMinutes")
                     "apply"
                     [|x1896;((let x1891 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1891 "push"
                                    [|(Ojs.float_to_js x1888)|]);
                               (match x1889 with
                                | Some x1893 ->
                                    ignore
                                      (Ojs.call x1891 "push"
                                         [|(Ojs.float_to_js x1893)|])
                                | None -> ());
                               (match x1890 with
                                | Some x1892 ->
                                    ignore
                                      (Ojs.call x1891 "push"
                                         [|(Ojs.float_to_js x1892)|])
                                | None -> ());
                               x1891))|])
    let (setHours :
      'tags this ->
        hours:float -> ?min:float -> ?sec:float -> ?ms:float -> unit -> float)
      =
      fun (x1905 : 'tags this) ->
        fun ~hours:(x1897 : float) ->
          fun ?min:(x1898 : float option) ->
            fun ?sec:(x1899 : float option) ->
              fun ?ms:(x1900 : float option) ->
                fun () ->
                  Ojs.float_of_js
                    (let x1907 = this_to_js Obj.magic x1905 in
                     Ojs.call (Ojs.get_prop_ascii x1907 "setHours") "apply"
                       [|x1907;((let x1901 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1901 "push"
                                      [|(Ojs.float_to_js x1897)|]);
                                 (match x1898 with
                                  | Some x1904 ->
                                      ignore
                                        (Ojs.call x1901 "push"
                                           [|(Ojs.float_to_js x1904)|])
                                  | None -> ());
                                 (match x1899 with
                                  | Some x1903 ->
                                      ignore
                                        (Ojs.call x1901 "push"
                                           [|(Ojs.float_to_js x1903)|])
                                  | None -> ());
                                 (match x1900 with
                                  | Some x1902 ->
                                      ignore
                                        (Ojs.call x1901 "push"
                                           [|(Ojs.float_to_js x1902)|])
                                  | None -> ());
                                 x1901))|])
    let (setUTCHours :
      'tags this ->
        hours:float -> ?min:float -> ?sec:float -> ?ms:float -> unit -> float)
      =
      fun (x1916 : 'tags this) ->
        fun ~hours:(x1908 : float) ->
          fun ?min:(x1909 : float option) ->
            fun ?sec:(x1910 : float option) ->
              fun ?ms:(x1911 : float option) ->
                fun () ->
                  Ojs.float_of_js
                    (let x1918 = this_to_js Obj.magic x1916 in
                     Ojs.call (Ojs.get_prop_ascii x1918 "setUTCHours")
                       "apply"
                       [|x1918;((let x1912 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1912 "push"
                                      [|(Ojs.float_to_js x1908)|]);
                                 (match x1909 with
                                  | Some x1915 ->
                                      ignore
                                        (Ojs.call x1912 "push"
                                           [|(Ojs.float_to_js x1915)|])
                                  | None -> ());
                                 (match x1910 with
                                  | Some x1914 ->
                                      ignore
                                        (Ojs.call x1912 "push"
                                           [|(Ojs.float_to_js x1914)|])
                                  | None -> ());
                                 (match x1911 with
                                  | Some x1913 ->
                                      ignore
                                        (Ojs.call x1912 "push"
                                           [|(Ojs.float_to_js x1913)|])
                                  | None -> ());
                                 x1912))|])
    let (setDate : 'tags this -> date:float -> float) =
      fun (x1920 : 'tags this) ->
        fun ~date:(x1919 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x1920) "setDate"
               [|(Ojs.float_to_js x1919)|])
    let (setUTCDate : 'tags this -> date:float -> float) =
      fun (x1923 : 'tags this) ->
        fun ~date:(x1922 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x1923) "setUTCDate"
               [|(Ojs.float_to_js x1922)|])
    let (setMonth :
      'tags this -> month:float -> ?date:float -> unit -> float) =
      fun (x1929 : 'tags this) ->
        fun ~month:(x1925 : float) ->
          fun ?date:(x1926 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1931 = this_to_js Obj.magic x1929 in
                 Ojs.call (Ojs.get_prop_ascii x1931 "setMonth") "apply"
                   [|x1931;((let x1927 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1927 "push"
                                  [|(Ojs.float_to_js x1925)|]);
                             (match x1926 with
                              | Some x1928 ->
                                  ignore
                                    (Ojs.call x1927 "push"
                                       [|(Ojs.float_to_js x1928)|])
                              | None -> ());
                             x1927))|])
    let (setUTCMonth :
      'tags this -> month:float -> ?date:float -> unit -> float) =
      fun (x1936 : 'tags this) ->
        fun ~month:(x1932 : float) ->
          fun ?date:(x1933 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1938 = this_to_js Obj.magic x1936 in
                 Ojs.call (Ojs.get_prop_ascii x1938 "setUTCMonth") "apply"
                   [|x1938;((let x1934 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1934 "push"
                                  [|(Ojs.float_to_js x1932)|]);
                             (match x1933 with
                              | Some x1935 ->
                                  ignore
                                    (Ojs.call x1934 "push"
                                       [|(Ojs.float_to_js x1935)|])
                              | None -> ());
                             x1934))|])
    let (setFullYear :
      'tags this ->
        year:float -> ?month:float -> ?date:float -> unit -> float)
      =
      fun (x1945 : 'tags this) ->
        fun ~year:(x1939 : float) ->
          fun ?month:(x1940 : float option) ->
            fun ?date:(x1941 : float option) ->
              fun () ->
                Ojs.float_of_js
                  (let x1947 = this_to_js Obj.magic x1945 in
                   Ojs.call (Ojs.get_prop_ascii x1947 "setFullYear") "apply"
                     [|x1947;((let x1942 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1942 "push"
                                    [|(Ojs.float_to_js x1939)|]);
                               (match x1940 with
                                | Some x1944 ->
                                    ignore
                                      (Ojs.call x1942 "push"
                                         [|(Ojs.float_to_js x1944)|])
                                | None -> ());
                               (match x1941 with
                                | Some x1943 ->
                                    ignore
                                      (Ojs.call x1942 "push"
                                         [|(Ojs.float_to_js x1943)|])
                                | None -> ());
                               x1942))|])
    let (setUTCFullYear :
      'tags this ->
        year:float -> ?month:float -> ?date:float -> unit -> float)
      =
      fun (x1954 : 'tags this) ->
        fun ~year:(x1948 : float) ->
          fun ?month:(x1949 : float option) ->
            fun ?date:(x1950 : float option) ->
              fun () ->
                Ojs.float_of_js
                  (let x1956 = this_to_js Obj.magic x1954 in
                   Ojs.call (Ojs.get_prop_ascii x1956 "setUTCFullYear")
                     "apply"
                     [|x1956;((let x1951 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1951 "push"
                                    [|(Ojs.float_to_js x1948)|]);
                               (match x1949 with
                                | Some x1953 ->
                                    ignore
                                      (Ojs.call x1951 "push"
                                         [|(Ojs.float_to_js x1953)|])
                                | None -> ());
                               (match x1950 with
                                | Some x1952 ->
                                    ignore
                                      (Ojs.call x1951 "push"
                                         [|(Ojs.float_to_js x1952)|])
                                | None -> ());
                               x1951))|])
    let (toUTCString : 'tags this -> string) =
      fun (x1957 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1957) "toUTCString" [||])
    let (toISOString : 'tags this -> string) =
      fun (x1959 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1959) "toISOString" [||])
    let (toJSON : 'tags this -> ?key:any -> unit -> string) =
      fun (x1964 : 'tags this) ->
        fun ?key:(x1961 : any option) ->
          fun () ->
            Ojs.string_of_js
              (let x1966 = this_to_js Obj.magic x1964 in
               Ojs.call (Ojs.get_prop_ascii x1966 "toJSON") "apply"
                 [|x1966;((let x1962 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x1961 with
                            | Some x1963 ->
                                ignore
                                  (Ojs.call x1962 "push"
                                     [|(any_to_js x1963)|])
                            | None -> ());
                           x1962))|])
    let (create : [ `U1 of float  | `U2 of string  | `U3 of t ] -> t) =
      fun (x1967 : [ `U1 of float  | `U2 of string  | `U3 of t ]) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Date")
             [|((match x1967 with
                 | `U1 x1968 -> Ojs.float_to_js x1968
                 | `U2 x1969 -> Ojs.string_to_js x1969
                 | `U3 x1970 -> t_to_js x1970))|])
    let (create' : unit -> t) =
      fun () ->
        t_of_js (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Date") [||])
    let (create'' : [ `U1 of float  | `U2 of string ] -> t) =
      fun (x1971 : [ `U1 of float  | `U2 of string ]) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Date")
             [|((match x1971 with
                 | `U1 x1972 -> Ojs.float_to_js x1972
                 | `U2 x1973 -> Ojs.string_to_js x1973))|])
    let (create''' :
      year:float ->
        month:float ->
          ?date:float ->
            ?hours:float ->
              ?minutes:float -> ?seconds:float -> ?ms:float -> unit -> t)
      =
      fun ~year:(x1974 : float) ->
        fun ~month:(x1975 : float) ->
          fun ?date:(x1976 : float option) ->
            fun ?hours:(x1977 : float option) ->
              fun ?minutes:(x1978 : float option) ->
                fun ?seconds:(x1979 : float option) ->
                  fun ?ms:(x1980 : float option) ->
                    fun () ->
                      t_of_js
                        (Ojs.new_obj_arr
                           (Ojs.get_prop_ascii Ojs.global "Date")
                           (let x1981 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x1981 "push"
                                 [|(Ojs.float_to_js x1974)|]);
                            ignore
                              (Ojs.call x1981 "push"
                                 [|(Ojs.float_to_js x1975)|]);
                            (match x1976 with
                             | Some x1986 ->
                                 ignore
                                   (Ojs.call x1981 "push"
                                      [|(Ojs.float_to_js x1986)|])
                             | None -> ());
                            (match x1977 with
                             | Some x1985 ->
                                 ignore
                                   (Ojs.call x1981 "push"
                                      [|(Ojs.float_to_js x1985)|])
                             | None -> ());
                            (match x1978 with
                             | Some x1984 ->
                                 ignore
                                   (Ojs.call x1981 "push"
                                      [|(Ojs.float_to_js x1984)|])
                             | None -> ());
                            (match x1979 with
                             | Some x1983 ->
                                 ignore
                                   (Ojs.call x1981 "push"
                                      [|(Ojs.float_to_js x1983)|])
                             | None -> ());
                            (match x1980 with
                             | Some x1982 ->
                                 ignore
                                   (Ojs.call x1981 "push"
                                      [|(Ojs.float_to_js x1982)|])
                             | None -> ());
                            x1981))
    let (invoke : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "Date") [||])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Date")
             "prototype")
    let (parse : string -> float) =
      fun (x1987 : string) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Date") "parse"
             [|(Ojs.string_to_js x1987)|])
    let (utc :
      year:float ->
        month:float ->
          ?date:float ->
            ?hours:float ->
              ?minutes:float -> ?seconds:float -> ?ms:float -> unit -> float)
      =
      fun ~year:(x1988 : float) ->
        fun ~month:(x1989 : float) ->
          fun ?date:(x1990 : float option) ->
            fun ?hours:(x1991 : float option) ->
              fun ?minutes:(x1992 : float option) ->
                fun ?seconds:(x1993 : float option) ->
                  fun ?ms:(x1994 : float option) ->
                    fun () ->
                      Ojs.float_of_js
                        (let x2001 = Ojs.get_prop_ascii Ojs.global "Date" in
                         Ojs.call (Ojs.get_prop_ascii x2001 "UTC") "apply"
                           [|x2001;((let x1995 =
                                       Ojs.new_obj
                                         (Ojs.get_prop_ascii Ojs.global
                                            "Array") [||] in
                                     ignore
                                       (Ojs.call x1995 "push"
                                          [|(Ojs.float_to_js x1988)|]);
                                     ignore
                                       (Ojs.call x1995 "push"
                                          [|(Ojs.float_to_js x1989)|]);
                                     (match x1990 with
                                      | Some x2000 ->
                                          ignore
                                            (Ojs.call x1995 "push"
                                               [|(Ojs.float_to_js x2000)|])
                                      | None -> ());
                                     (match x1991 with
                                      | Some x1999 ->
                                          ignore
                                            (Ojs.call x1995 "push"
                                               [|(Ojs.float_to_js x1999)|])
                                      | None -> ());
                                     (match x1992 with
                                      | Some x1998 ->
                                          ignore
                                            (Ojs.call x1995 "push"
                                               [|(Ojs.float_to_js x1998)|])
                                      | None -> ());
                                     (match x1993 with
                                      | Some x1997 ->
                                          ignore
                                            (Ojs.call x1995 "push"
                                               [|(Ojs.float_to_js x1997)|])
                                      | None -> ());
                                     (match x1994 with
                                      | Some x1996 ->
                                          ignore
                                            (Ojs.call x1995 "push"
                                               [|(Ojs.float_to_js x1996)|])
                                      | None -> ());
                                     x1995))|])
    let (now : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Date") "now" [||])
    let cast_from = Obj.magic
  end
 and
  Intl:sig
         module RelativeTimeFormatNumeric :
         sig
           type t = [ `L_s21_always  | `L_s22_auto ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module UnicodeBCP47LocaleIdentifier :
         sig
           type t = string
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module RelativeTimeFormatStyle :
         sig
           type t = [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module ResolvedRelativeTimeFormatOptions :
         sig
           type t = [ `Intl_ResolvedRelativeTimeFormatOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_ResolvedRelativeTimeFormatOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_ResolvedRelativeTimeFormatOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_ResolvedRelativeTimeFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_locale : 'tags this -> UnicodeBCP47LocaleIdentifier.t
           val set_locale :
             'tags this -> UnicodeBCP47LocaleIdentifier.t -> unit
           val get_style : 'tags this -> RelativeTimeFormatStyle.t
           val set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit
           val get_numeric : 'tags this -> RelativeTimeFormatNumeric.t
           val set_numeric :
             'tags this -> RelativeTimeFormatNumeric.t -> unit
           val get_numberingSystem : 'tags this -> string
           val set_numberingSystem : 'tags this -> string -> unit
           val create :
             locale:UnicodeBCP47LocaleIdentifier.t ->
               style:RelativeTimeFormatStyle.t ->
                 numeric:RelativeTimeFormatNumeric.t ->
                   numberingSystem:string -> unit -> t
           val cast_from : 'tags this -> t
         end
         module RelativeTimeFormatUnit :
         sig
           type t =
             [ `L_s101_weeks  | `L_s102_year  | `L_s103_years  | `L_s29_day 
             | `L_s31_days  | `L_s50_hour  | `L_s51_hours  | `L_s62_minute 
             | `L_s63_minutes  | `L_s64_month  | `L_s65_months 
             | `L_s81_quarter  | `L_s82_quarters  | `L_s87_second 
             | `L_s88_seconds  | `L_s99_week ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module RelativeTimeFormatPart :
         sig
           type t = [ `Intl_RelativeTimeFormatPart ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_RelativeTimeFormatPart ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_RelativeTimeFormatPart ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_RelativeTimeFormatPart ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_type : 'tags this -> string
           val set_type : 'tags this -> string -> unit
           val get_value : 'tags this -> string
           val set_value : 'tags this -> string -> unit
           val get_unit : 'tags this -> RelativeTimeFormatUnit.t
           val set_unit : 'tags this -> RelativeTimeFormatUnit.t -> unit
           val create :
             type_:string ->
               value:string -> unit:RelativeTimeFormatUnit.t -> unit -> t
           val cast_from : 'tags this -> t
         end
         module RelativeTimeFormatLocaleMatcher :
         sig
           type t = [ `L_s24_best_fit  | `L_s57_lookup ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module RelativeTimeFormatOptions :
         sig
           type t = [ `Intl_RelativeTimeFormatOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_RelativeTimeFormatOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_RelativeTimeFormatOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_RelativeTimeFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_localeMatcher :
             'tags this -> RelativeTimeFormatLocaleMatcher.t
           val set_localeMatcher :
             'tags this -> RelativeTimeFormatLocaleMatcher.t -> unit
           val get_numeric : 'tags this -> RelativeTimeFormatNumeric.t
           val set_numeric :
             'tags this -> RelativeTimeFormatNumeric.t -> unit
           val get_style : 'tags this -> RelativeTimeFormatStyle.t
           val set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit
           val create :
             localeMatcher:RelativeTimeFormatLocaleMatcher.t ->
               numeric:RelativeTimeFormatNumeric.t ->
                 style:RelativeTimeFormatStyle.t -> unit -> t
           val cast_from : 'tags this -> t
         end
         module RelativeTimeFormat :
         sig
           type t = [ `Intl_RelativeTimeFormat ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_RelativeTimeFormat ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_RelativeTimeFormat ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_RelativeTimeFormat ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val format :
             'tags this ->
               value:float -> unit:RelativeTimeFormatUnit.t -> string
           val formatToParts :
             'tags this ->
               value:float ->
                 unit:RelativeTimeFormatUnit.t ->
                   RelativeTimeFormatPart.t list
           val resolvedOptions :
             'tags this -> ResolvedRelativeTimeFormatOptions.t
           val cast_from : 'tags this -> t
           val create :
             ?locales:[ `U1 of UnicodeBCP47LocaleIdentifier.t 
                      | `U2 of UnicodeBCP47LocaleIdentifier.t list ]
               -> ?options:RelativeTimeFormatOptions.t -> unit -> t
           val supportedLocalesOf :
             ?locales:[ `U1 of UnicodeBCP47LocaleIdentifier.t 
                      | `U2 of UnicodeBCP47LocaleIdentifier.t list ]
               ->
               ?options:RelativeTimeFormatOptions.t ->
                 unit -> UnicodeBCP47LocaleIdentifier.t list
         end
         module PluralRuleType :
         sig
           type t = [ `L_s25_cardinal  | `L_s76_ordinal ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module LDMLPluralRule :
         sig
           type t =
             [ `L_s104_zero  | `L_s41_few  | `L_s59_many  | `L_s75_one 
             | `L_s77_other  | `L_s95_two ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module ResolvedPluralRulesOptions :
         sig
           type t = [ `Intl_ResolvedPluralRulesOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_ResolvedPluralRulesOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_ResolvedPluralRulesOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_ResolvedPluralRulesOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_locale : 'tags this -> string
           val set_locale : 'tags this -> string -> unit
           val get_pluralCategories : 'tags this -> LDMLPluralRule.t list
           val set_pluralCategories :
             'tags this -> LDMLPluralRule.t list -> unit
           val get_type : 'tags this -> PluralRuleType.t
           val set_type : 'tags this -> PluralRuleType.t -> unit
           val get_minimumIntegerDigits : 'tags this -> float
           val set_minimumIntegerDigits : 'tags this -> float -> unit
           val get_minimumFractionDigits : 'tags this -> float
           val set_minimumFractionDigits : 'tags this -> float -> unit
           val get_maximumFractionDigits : 'tags this -> float
           val set_maximumFractionDigits : 'tags this -> float -> unit
           val get_minimumSignificantDigits : 'tags this -> float
           val set_minimumSignificantDigits : 'tags this -> float -> unit
           val get_maximumSignificantDigits : 'tags this -> float
           val set_maximumSignificantDigits : 'tags this -> float -> unit
           val create :
             locale:string ->
               pluralCategories:LDMLPluralRule.t list ->
                 type_:PluralRuleType.t ->
                   minimumIntegerDigits:float ->
                     minimumFractionDigits:float ->
                       maximumFractionDigits:float ->
                         minimumSignificantDigits:float ->
                           maximumSignificantDigits:float -> unit -> t
           val cast_from : 'tags this -> t
         end
         module PluralRulesOptions :
         sig
           type t = [ `Intl_PluralRulesOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_PluralRulesOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_PluralRulesOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_PluralRulesOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_localeMatcher :
             'tags this -> [ `L_s24_best_fit  | `L_s57_lookup ] option
           val set_localeMatcher :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s57_lookup ] 
               | `U2 of [ `L_s24_best_fit ] ] -> unit
           val get_type : 'tags this -> PluralRuleType.t option
           val set_type :
             'tags this ->
               [ `Undefined of undefined  | `U1 of PluralRuleType.t ] -> unit
           val get_minimumIntegerDigits : 'tags this -> float option
           val set_minimumIntegerDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val get_minimumFractionDigits : 'tags this -> float option
           val set_minimumFractionDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val get_maximumFractionDigits : 'tags this -> float option
           val set_maximumFractionDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val get_minimumSignificantDigits : 'tags this -> float option
           val set_minimumSignificantDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val get_maximumSignificantDigits : 'tags this -> float option
           val set_maximumSignificantDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val create :
             ?localeMatcher:[ `L_s24_best_fit  | `L_s57_lookup ] ->
               ?type_:PluralRuleType.t ->
                 ?minimumIntegerDigits:float ->
                   ?minimumFractionDigits:float ->
                     ?maximumFractionDigits:float ->
                       ?minimumSignificantDigits:float ->
                         ?maximumSignificantDigits:float -> unit -> t
           val cast_from : 'tags this -> t
         end
         module PluralRules :
         sig
           module AnonymousInterface4 :
           sig
             type t = private Ojs.t
             val t_to_js : t -> Ojs.t
             val t_of_js : Ojs.t -> t
             val get_localeMatcher :
               t -> [ `L_s24_best_fit  | `L_s57_lookup ]
             val set_localeMatcher :
               t ->
                 [ `U1 of [ `L_s57_lookup ]  | `U2 of [ `L_s24_best_fit ] ]
                   -> unit
             val create :
               localeMatcher:[ `L_s24_best_fit  | `L_s57_lookup ] ->
                 unit -> t
           end
           type t = [ `Intl_PluralRules ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_PluralRules ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_PluralRules ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_PluralRules ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val resolvedOptions : 'tags this -> ResolvedPluralRulesOptions.t
           val select : 'tags this -> n:float -> LDMLPluralRule.t
           val cast_from : 'tags this -> t
           val create :
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:PluralRulesOptions.t -> unit -> t
           val invoke :
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:PluralRulesOptions.t -> unit -> t
           val supportedLocalesOf :
             locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:AnonymousInterface4.t -> unit -> string list
         end
         module ResolvedNumberFormatOptions :
         sig
           type t = [ `Intl_ResolvedNumberFormatOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_ResolvedNumberFormatOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_ResolvedNumberFormatOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_ResolvedNumberFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_compactDisplay :
             'tags this -> [ `L_s56_long  | `L_s89_short ]
           val set_compactDisplay :
             'tags this ->
               [ `U1 of [ `L_s89_short ]  | `U2 of [ `L_s56_long ] ] -> unit
           val get_notation :
             'tags this ->
               [ `L_s27_compact  | `L_s34_engineering  | `L_s85_scientific 
               | `L_s90_standard ]
           val set_notation :
             'tags this ->
               [ `U1 of [ `L_s90_standard ]  | `U2 of [ `L_s85_scientific ] 
               | `U3 of [ `L_s34_engineering ]  | `U4 of [ `L_s27_compact ] ]
                 -> unit
           val get_signDisplay :
             'tags this ->
               [ `L_s21_always  | `L_s22_auto  | `L_s36_exceptZero 
               | `L_s69_never ]
           val set_signDisplay :
             'tags this ->
               [ `U1 of [ `L_s22_auto ]  | `U2 of [ `L_s69_never ] 
               | `U3 of [ `L_s21_always ]  | `U4 of [ `L_s36_exceptZero ] ]
                 -> unit
           val get_unit : 'tags this -> string
           val set_unit : 'tags this -> string -> unit
           val get_unitDisplay :
             'tags this -> [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ]
           val set_unitDisplay :
             'tags this ->
               [ `U1 of [ `L_s89_short ]  | `U2 of [ `L_s56_long ] 
               | `U3 of [ `L_s68_narrow ] ] -> unit
           val get_currencyDisplay : 'tags this -> string
           val set_currencyDisplay : 'tags this -> string -> unit
           val get_currencySign : 'tags this -> string
           val set_currencySign : 'tags this -> string -> unit
           val get_locale : 'tags this -> string
           val set_locale : 'tags this -> string -> unit
           val get_numberingSystem : 'tags this -> string
           val set_numberingSystem : 'tags this -> string -> unit
           val get_style : 'tags this -> string
           val set_style : 'tags this -> string -> unit
           val get_currency : 'tags this -> string
           val set_currency : 'tags this -> string -> unit
           val get_minimumIntegerDigits : 'tags this -> float
           val set_minimumIntegerDigits : 'tags this -> float -> unit
           val get_minimumFractionDigits : 'tags this -> float
           val set_minimumFractionDigits : 'tags this -> float -> unit
           val get_maximumFractionDigits : 'tags this -> float
           val set_maximumFractionDigits : 'tags this -> float -> unit
           val get_minimumSignificantDigits : 'tags this -> float
           val set_minimumSignificantDigits : 'tags this -> float -> unit
           val get_maximumSignificantDigits : 'tags this -> float
           val set_maximumSignificantDigits : 'tags this -> float -> unit
           val get_useGrouping : 'tags this -> bool
           val set_useGrouping : 'tags this -> bool -> unit
           val create :
             compactDisplay:[ `L_s56_long  | `L_s89_short ] ->
               notation:[ `L_s27_compact  | `L_s34_engineering 
                        | `L_s85_scientific  | `L_s90_standard ]
                 ->
                 signDisplay:[ `L_s21_always  | `L_s22_auto 
                             | `L_s36_exceptZero  | `L_s69_never ]
                   ->
                   unit:string ->
                     unitDisplay:[ `L_s56_long  | `L_s68_narrow 
                                 | `L_s89_short ]
                       ->
                       currencyDisplay:string ->
                         currencySign:string ->
                           locale:string ->
                             numberingSystem:string ->
                               style:string ->
                                 currency:string ->
                                   minimumIntegerDigits:float ->
                                     minimumFractionDigits:float ->
                                       maximumFractionDigits:float ->
                                         minimumSignificantDigits:float ->
                                           maximumSignificantDigits:float ->
                                             useGrouping:bool -> unit -> t
           val cast_from : 'tags this -> t
         end
         module ES2020NumberFormatPartType :
         sig
           type t =
             [ `L_s27_compact  | `L_s37_exponentInteger 
             | `L_s38_exponentMinusSign  | `L_s39_exponentSeparator 
             | `L_s96_unit  | `L_s97_unknown ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module ES2018NumberFormatPartType :
         sig
           type t =
             [ `L_s26_code  | `L_s28_currency  | `L_s32_decimal 
             | `L_s42_fraction  | `L_s45_group  | `L_s52_infinity 
             | `L_s53_integer  | `L_s55_literal  | `L_s61_minusSign 
             | `L_s66_name  | `L_s67_nan  | `L_s78_percent 
             | `L_s79_percentSign  | `L_s80_plusSign  | `L_s92_symbol ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module NumberFormatPartTypes :
         sig
           type t =
             [ `L_s26_code  | `L_s27_compact  | `L_s28_currency 
             | `L_s32_decimal  | `L_s37_exponentInteger 
             | `L_s38_exponentMinusSign  | `L_s39_exponentSeparator 
             | `L_s42_fraction  | `L_s45_group  | `L_s52_infinity 
             | `L_s53_integer  | `L_s55_literal  | `L_s61_minusSign 
             | `L_s66_name  | `L_s67_nan  | `L_s78_percent 
             | `L_s79_percentSign  | `L_s80_plusSign  | `L_s92_symbol 
             | `L_s96_unit  | `L_s97_unknown ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module NumberFormatPart :
         sig
           type t = [ `Intl_NumberFormatPart ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_NumberFormatPart ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_NumberFormatPart ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_NumberFormatPart ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_type : 'tags this -> NumberFormatPartTypes.t
           val set_type : 'tags this -> NumberFormatPartTypes.t -> unit
           val get_value : 'tags this -> string
           val set_value : 'tags this -> string -> unit
           val create :
             type_:NumberFormatPartTypes.t -> value:string -> unit -> t
           val cast_from : 'tags this -> t
         end
         module NumberFormatOptions :
         sig
           type t = [ `Intl_NumberFormatOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_NumberFormatOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_NumberFormatOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_NumberFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_compactDisplay :
             'tags this -> [ `L_s56_long  | `L_s89_short ] option
           val set_compactDisplay :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s89_short ] 
               | `U2 of [ `L_s56_long ] ] -> unit
           val get_notation :
             'tags this ->
               [ `L_s27_compact  | `L_s34_engineering  | `L_s85_scientific 
               | `L_s90_standard ] option
           val set_notation :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s90_standard ] 
               | `U2 of [ `L_s85_scientific ] 
               | `U3 of [ `L_s34_engineering ]  | `U4 of [ `L_s27_compact ] ]
                 -> unit
           val get_signDisplay :
             'tags this ->
               [ `L_s21_always  | `L_s22_auto  | `L_s36_exceptZero 
               | `L_s69_never ] option
           val set_signDisplay :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s22_auto ] 
               | `U2 of [ `L_s69_never ]  | `U3 of [ `L_s21_always ] 
               | `U4 of [ `L_s36_exceptZero ] ] -> unit
           val get_unit : 'tags this -> string option
           val set_unit :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_unitDisplay :
             'tags this ->
               [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ] option
           val set_unitDisplay :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s89_short ] 
               | `U2 of [ `L_s56_long ]  | `U3 of [ `L_s68_narrow ] ] -> 
                 unit
           val get_currencyDisplay : 'tags this -> string option
           val set_currencyDisplay :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_currencySign : 'tags this -> string option
           val set_currencySign :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_localeMatcher : 'tags this -> string option
           val set_localeMatcher :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_style : 'tags this -> string option
           val set_style :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_currency : 'tags this -> string option
           val set_currency :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_currencySign' : 'tags this -> string option
           val set_currencySign' :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_useGrouping : 'tags this -> bool option
           val set_useGrouping :
             'tags this -> [ `Undefined of undefined  | `U1 of bool ] -> unit
           val get_minimumIntegerDigits : 'tags this -> float option
           val set_minimumIntegerDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val get_minimumFractionDigits : 'tags this -> float option
           val set_minimumFractionDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val get_maximumFractionDigits : 'tags this -> float option
           val set_maximumFractionDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val get_minimumSignificantDigits : 'tags this -> float option
           val set_minimumSignificantDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val get_maximumSignificantDigits : 'tags this -> float option
           val set_maximumSignificantDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val create :
             ?compactDisplay:[ `L_s56_long  | `L_s89_short ] ->
               ?notation:[ `L_s27_compact  | `L_s34_engineering 
                         | `L_s85_scientific  | `L_s90_standard ]
                 ->
                 ?signDisplay:[ `L_s21_always  | `L_s22_auto 
                              | `L_s36_exceptZero  | `L_s69_never ]
                   ->
                   ?unit:string ->
                     ?unitDisplay:[ `L_s56_long  | `L_s68_narrow 
                                  | `L_s89_short ]
                       ->
                       ?currencyDisplay:string ->
                         ?currencySign:string ->
                           ?localeMatcher:string ->
                             ?style:string ->
                               ?currency:string ->
                                 ?currencySign:string ->
                                   ?useGrouping:bool ->
                                     ?minimumIntegerDigits:float ->
                                       ?minimumFractionDigits:float ->
                                         ?maximumFractionDigits:float ->
                                           ?minimumSignificantDigits:float ->
                                             ?maximumSignificantDigits:float
                                               -> unit -> t
           val cast_from : 'tags this -> t
         end
         module NumberFormat :
         sig
           type t = [ `Intl_NumberFormat ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_NumberFormat ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_NumberFormat ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_NumberFormat ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val formatRange :
             'tags this ->
               startDate:[ `U1 of float  | `U2 of bigint ] ->
                 endDate:[ `U1 of float  | `U2 of bigint ] -> string
           val formatRangeToParts :
             'tags this ->
               startDate:[ `U1 of float  | `U2 of bigint ] ->
                 endDate:[ `U1 of float  | `U2 of bigint ] ->
                   NumberFormatPart.t list
           val format :
             'tags this -> value:[ `U1 of float  | `U2 of bigint ] -> string
           val resolvedOptions : 'tags this -> ResolvedNumberFormatOptions.t
           val formatToParts :
             'tags this ->
               ?number:[ `U1 of float  | `U2 of bigint ] ->
                 unit -> NumberFormatPart.t list
           val format' : 'tags this -> value:float -> string
           val resolvedOptions' : 'tags this -> ResolvedNumberFormatOptions.t
           val cast_from : 'tags this -> t
           val create :
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:NumberFormatOptions.t -> unit -> t
           val invoke :
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:NumberFormatOptions.t -> unit -> t
           val supportedLocalesOf :
             locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:NumberFormatOptions.t -> unit -> string list
         end
         module LocaleHourCycleKey :
         sig
           type t = [ `L_s46_h11  | `L_s47_h12  | `L_s48_h23  | `L_s49_h24 ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module LocaleCollationCaseFirst :
         sig
           type t = [ `L_s40_false  | `L_s58_lower  | `L_s98_upper ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module LocaleOptions :
         sig
           type t = [ `Intl_LocaleOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_LocaleOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_LocaleOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_LocaleOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_baseName : 'tags this -> string
           val set_baseName : 'tags this -> string -> unit
           val get_calendar : 'tags this -> string
           val set_calendar : 'tags this -> string -> unit
           val get_caseFirst : 'tags this -> LocaleCollationCaseFirst.t
           val set_caseFirst :
             'tags this -> LocaleCollationCaseFirst.t -> unit
           val get_collation : 'tags this -> string
           val set_collation : 'tags this -> string -> unit
           val get_hourCycle : 'tags this -> LocaleHourCycleKey.t
           val set_hourCycle : 'tags this -> LocaleHourCycleKey.t -> unit
           val get_language : 'tags this -> string
           val set_language : 'tags this -> string -> unit
           val get_numberingSystem : 'tags this -> string
           val set_numberingSystem : 'tags this -> string -> unit
           val get_numeric : 'tags this -> bool
           val set_numeric : 'tags this -> bool -> unit
           val get_region : 'tags this -> string
           val set_region : 'tags this -> string -> unit
           val get_script : 'tags this -> string
           val set_script : 'tags this -> string -> unit
           val create :
             baseName:string ->
               calendar:string ->
                 caseFirst:LocaleCollationCaseFirst.t ->
                   collation:string ->
                     hourCycle:LocaleHourCycleKey.t ->
                       language:string ->
                         numberingSystem:string ->
                           numeric:bool ->
                             region:string -> script:string -> unit -> t
           val cast_from : 'tags this -> t
         end
         module BCP47LanguageTag :
         sig
           type t = string
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module Locale :
         sig
           type t = [ `Intl_Locale  | `Intl_LocaleOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_Locale  | `Intl_LocaleOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_Locale  | `Intl_LocaleOptions ]
             type tags_0 = tags]
           type 'tags this = 'tags intf constraint 'tags = [> `Intl_Locale ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val maximize : 'tags this -> t
           val minimize : 'tags this -> t
           val toString : 'tags this -> BCP47LanguageTag.t
           val cast_from : 'tags this -> t
           val create :
             ?tag:BCP47LanguageTag.t -> ?options:LocaleOptions.t -> unit -> t
         end
         module DisplayNamesOptions :
         sig
           type t = [ `Intl_DisplayNamesOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_DisplayNamesOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_DisplayNamesOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_DisplayNamesOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_locale : 'tags this -> UnicodeBCP47LocaleIdentifier.t
           val set_locale :
             'tags this -> UnicodeBCP47LocaleIdentifier.t -> unit
           val get_localeMatcher :
             'tags this -> RelativeTimeFormatLocaleMatcher.t
           val set_localeMatcher :
             'tags this -> RelativeTimeFormatLocaleMatcher.t -> unit
           val get_style : 'tags this -> RelativeTimeFormatStyle.t
           val set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit
           val get_type :
             'tags this ->
               [ `L_s28_currency  | `L_s54_language  | `L_s83_region 
               | `L_s86_script ]
           val set_type :
             'tags this ->
               [ `U1 of [ `L_s54_language ]  | `U2 of [ `L_s83_region ] 
               | `U3 of [ `L_s86_script ]  | `U4 of [ `L_s28_currency ] ] ->
                 unit
           val get_fallback : 'tags this -> [ `L_s26_code  | `L_s70_none ]
           val set_fallback :
             'tags this ->
               [ `U1 of [ `L_s26_code ]  | `U2 of [ `L_s70_none ] ] -> unit
           val create :
             locale:UnicodeBCP47LocaleIdentifier.t ->
               localeMatcher:RelativeTimeFormatLocaleMatcher.t ->
                 style:RelativeTimeFormatStyle.t ->
                   type_:[ `L_s28_currency  | `L_s54_language 
                         | `L_s83_region  | `L_s86_script ]
                     -> fallback:[ `L_s26_code  | `L_s70_none ] -> unit -> t
           val cast_from : 'tags this -> t
         end
         module DisplayNames :
         sig
           module AnonymousInterface2 :
           sig
             type t = private Ojs.t
             val t_to_js : t -> Ojs.t
             val t_of_js : Ojs.t -> t
             val get_localeMatcher : t -> RelativeTimeFormatLocaleMatcher.t
             val set_localeMatcher :
               t -> RelativeTimeFormatLocaleMatcher.t -> unit
             val create :
               localeMatcher:RelativeTimeFormatLocaleMatcher.t -> unit -> t
           end
           type t = [ `Intl_DisplayNames ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_DisplayNames ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_DisplayNames ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_DisplayNames ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val of_ : 'tags this -> code:string -> string option
           val resolvedOptions : 'tags this -> DisplayNamesOptions.t
           val cast_from : 'tags this -> t
           val prototype : unit -> t
           val create :
             ?locales:[ `U1 of BCP47LanguageTag.t 
                      | `U2 of BCP47LanguageTag.t list ]
               -> ?options:DisplayNamesOptions.t Partial.t -> unit -> t
           val supportedLocalesOf :
             locales:[ `U1 of BCP47LanguageTag.t 
                     | `U2 of BCP47LanguageTag.t list ]
               ->
               ?options:AnonymousInterface2.t ->
                 unit -> BCP47LanguageTag.t list
         end
         module ResolvedDateTimeFormatOptions :
         sig
           type t = [ `Intl_ResolvedDateTimeFormatOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_ResolvedDateTimeFormatOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_ResolvedDateTimeFormatOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_ResolvedDateTimeFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_formatMatcher :
             'tags this -> [ `L_s23_basic  | `L_s24_best_fit ]
           val set_formatMatcher :
             'tags this ->
               [ `U1 of [ `L_s23_basic ]  | `U2 of [ `L_s24_best_fit ] 
               | `U3 of [ `L_s24_best_fit ] ] -> unit
           val get_dateStyle :
             'tags this ->
               [ `L_s44_full  | `L_s56_long  | `L_s60_medium 
               | `L_s89_short ]
           val set_dateStyle :
             'tags this ->
               [ `U1 of [ `L_s44_full ]  | `U2 of [ `L_s56_long ] 
               | `U3 of [ `L_s60_medium ]  | `U4 of [ `L_s89_short ] ] ->
                 unit
           val get_timeStyle :
             'tags this ->
               [ `L_s44_full  | `L_s56_long  | `L_s60_medium 
               | `L_s89_short ]
           val set_timeStyle :
             'tags this ->
               [ `U1 of [ `L_s44_full ]  | `U2 of [ `L_s56_long ] 
               | `U3 of [ `L_s60_medium ]  | `U4 of [ `L_s89_short ] ] ->
                 unit
           val get_hourCycle :
             'tags this ->
               [ `L_s46_h11  | `L_s47_h12  | `L_s48_h23  | `L_s49_h24 ]
           val set_hourCycle :
             'tags this ->
               [ `U1 of [ `L_s46_h11 ]  | `U2 of [ `L_s47_h12 ] 
               | `U3 of [ `L_s48_h23 ]  | `U4 of [ `L_s49_h24 ] ] -> 
                 unit
           val get_dayPeriod :
             'tags this -> [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ]
           val set_dayPeriod :
             'tags this ->
               [ `U1 of [ `L_s68_narrow ]  | `U2 of [ `L_s89_short ] 
               | `U3 of [ `L_s56_long ] ] -> unit
           val get_fractionalSecondDigits :
             'tags this -> [ `L_n_0  | `L_n_1  | `L_n_2  | `L_n_3 ]
           val set_fractionalSecondDigits :
             'tags this ->
               [ `U1 of [ `L_n_0 ]  | `U2 of [ `L_n_1 ]  | `U3 of [ `L_n_2 ] 
               | `U4 of [ `L_n_3 ] ] -> unit
           val get_locale : 'tags this -> string
           val set_locale : 'tags this -> string -> unit
           val get_calendar : 'tags this -> string
           val set_calendar : 'tags this -> string -> unit
           val get_numberingSystem : 'tags this -> string
           val set_numberingSystem : 'tags this -> string -> unit
           val get_timeZone : 'tags this -> string
           val set_timeZone : 'tags this -> string -> unit
           val get_hour12 : 'tags this -> bool
           val set_hour12 : 'tags this -> bool -> unit
           val get_weekday : 'tags this -> string
           val set_weekday : 'tags this -> string -> unit
           val get_era : 'tags this -> string
           val set_era : 'tags this -> string -> unit
           val get_year : 'tags this -> string
           val set_year : 'tags this -> string -> unit
           val get_month : 'tags this -> string
           val set_month : 'tags this -> string -> unit
           val get_day : 'tags this -> string
           val set_day : 'tags this -> string -> unit
           val get_hour : 'tags this -> string
           val set_hour : 'tags this -> string -> unit
           val get_minute : 'tags this -> string
           val set_minute : 'tags this -> string -> unit
           val get_second : 'tags this -> string
           val set_second : 'tags this -> string -> unit
           val get_timeZoneName : 'tags this -> string
           val set_timeZoneName : 'tags this -> string -> unit
           val create :
             formatMatcher:[ `L_s23_basic  | `L_s24_best_fit ] ->
               dateStyle:[ `L_s44_full  | `L_s56_long  | `L_s60_medium 
                         | `L_s89_short ]
                 ->
                 timeStyle:[ `L_s44_full  | `L_s56_long  | `L_s60_medium 
                           | `L_s89_short ]
                   ->
                   hourCycle:[ `L_s46_h11  | `L_s47_h12  | `L_s48_h23 
                             | `L_s49_h24 ]
                     ->
                     dayPeriod:[ `L_s56_long  | `L_s68_narrow 
                               | `L_s89_short ]
                       ->
                       fractionalSecondDigits:[ `L_n_0  | `L_n_1  | `L_n_2 
                                              | `L_n_3 ]
                         ->
                         locale:string ->
                           calendar:string ->
                             numberingSystem:string ->
                               timeZone:string ->
                                 hour12:bool ->
                                   weekday:string ->
                                     era:string ->
                                       year:string ->
                                         month:string ->
                                           day:string ->
                                             hour:string ->
                                               minute:string ->
                                                 second:string ->
                                                   timeZoneName:string ->
                                                     unit -> t
           val cast_from : 'tags this -> t
         end
         module DateTimeFormatPartTypes :
         sig
           type t =
             [ `L_s100_weekday  | `L_s102_year  | `L_s29_day 
             | `L_s30_dayPeriod  | `L_s35_era  | `L_s50_hour 
             | `L_s55_literal  | `L_s62_minute  | `L_s64_month 
             | `L_s87_second  | `L_s93_timeZoneName ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module DateTimeFormatPart :
         sig
           type t = [ `Intl_DateTimeFormatPart ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_DateTimeFormatPart ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_DateTimeFormatPart ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_DateTimeFormatPart ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_type : 'tags this -> DateTimeFormatPartTypes.t
           val set_type : 'tags this -> DateTimeFormatPartTypes.t -> unit
           val get_value : 'tags this -> string
           val set_value : 'tags this -> string -> unit
           val create :
             type_:DateTimeFormatPartTypes.t -> value:string -> unit -> t
           val cast_from : 'tags this -> t
         end
         module DateTimeFormatOptions :
         sig
           type t = [ `Intl_DateTimeFormatOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_DateTimeFormatOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_DateTimeFormatOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_DateTimeFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_formatMatcher :
             'tags this -> [ `L_s23_basic  | `L_s24_best_fit ] option
           val set_formatMatcher :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s23_basic ] 
               | `U2 of [ `L_s24_best_fit ]  | `U3 of [ `L_s24_best_fit ] ]
                 -> unit
           val get_dateStyle :
             'tags this ->
               [ `L_s44_full  | `L_s56_long  | `L_s60_medium 
               | `L_s89_short ] option
           val set_dateStyle :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s44_full ] 
               | `U2 of [ `L_s56_long ]  | `U3 of [ `L_s60_medium ] 
               | `U4 of [ `L_s89_short ] ] -> unit
           val get_timeStyle :
             'tags this ->
               [ `L_s44_full  | `L_s56_long  | `L_s60_medium 
               | `L_s89_short ] option
           val set_timeStyle :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s44_full ] 
               | `U2 of [ `L_s56_long ]  | `U3 of [ `L_s60_medium ] 
               | `U4 of [ `L_s89_short ] ] -> unit
           val get_dayPeriod :
             'tags this ->
               [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ] option
           val set_dayPeriod :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s68_narrow ] 
               | `U2 of [ `L_s89_short ]  | `U3 of [ `L_s56_long ] ] -> 
                 unit
           val get_fractionalSecondDigits :
             'tags this -> [ `L_n_0  | `L_n_1  | `L_n_2  | `L_n_3 ] option
           val set_fractionalSecondDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_n_0 ] 
               | `U2 of [ `L_n_1 ]  | `U3 of [ `L_n_2 ] 
               | `U4 of [ `L_n_3 ] ] -> unit
           val get_calendar : 'tags this -> string option
           val set_calendar :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_dayPeriod' :
             'tags this ->
               [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ] option
           val set_dayPeriod' :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s68_narrow ] 
               | `U2 of [ `L_s89_short ]  | `U3 of [ `L_s56_long ] ] -> 
                 unit
           val get_numberingSystem : 'tags this -> string option
           val set_numberingSystem :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_dateStyle' :
             'tags this ->
               [ `L_s44_full  | `L_s56_long  | `L_s60_medium 
               | `L_s89_short ] option
           val set_dateStyle' :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s44_full ] 
               | `U2 of [ `L_s56_long ]  | `U3 of [ `L_s60_medium ] 
               | `U4 of [ `L_s89_short ] ] -> unit
           val get_timeStyle' :
             'tags this ->
               [ `L_s44_full  | `L_s56_long  | `L_s60_medium 
               | `L_s89_short ] option
           val set_timeStyle' :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s44_full ] 
               | `U2 of [ `L_s56_long ]  | `U3 of [ `L_s60_medium ] 
               | `U4 of [ `L_s89_short ] ] -> unit
           val get_hourCycle :
             'tags this ->
               [ `L_s46_h11  | `L_s47_h12  | `L_s48_h23  | `L_s49_h24 ]
                 option
           val set_hourCycle :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s46_h11 ] 
               | `U2 of [ `L_s47_h12 ]  | `U3 of [ `L_s48_h23 ] 
               | `U4 of [ `L_s49_h24 ] ] -> unit
           val get_localeMatcher :
             'tags this -> [ `L_s24_best_fit  | `L_s57_lookup ] option
           val set_localeMatcher :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s24_best_fit ] 
               | `U2 of [ `L_s57_lookup ] ] -> unit
           val get_weekday :
             'tags this ->
               [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ] option
           val set_weekday :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s56_long ] 
               | `U2 of [ `L_s89_short ]  | `U3 of [ `L_s68_narrow ] ] ->
                 unit
           val get_era :
             'tags this ->
               [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ] option
           val set_era :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s56_long ] 
               | `U2 of [ `L_s89_short ]  | `U3 of [ `L_s68_narrow ] ] ->
                 unit
           val get_year :
             'tags this -> [ `L_s0_2_digit  | `L_s73_numeric ] option
           val set_year :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
               | `U2 of [ `L_s0_2_digit ] ] -> unit
           val get_month :
             'tags this ->
               [ `L_s0_2_digit  | `L_s56_long  | `L_s68_narrow 
               | `L_s73_numeric  | `L_s89_short ] option
           val set_month :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
               | `U2 of [ `L_s0_2_digit ]  | `U3 of [ `L_s56_long ] 
               | `U4 of [ `L_s89_short ]  | `U5 of [ `L_s68_narrow ] ] ->
                 unit
           val get_day :
             'tags this -> [ `L_s0_2_digit  | `L_s73_numeric ] option
           val set_day :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
               | `U2 of [ `L_s0_2_digit ] ] -> unit
           val get_hour :
             'tags this -> [ `L_s0_2_digit  | `L_s73_numeric ] option
           val set_hour :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
               | `U2 of [ `L_s0_2_digit ] ] -> unit
           val get_minute :
             'tags this -> [ `L_s0_2_digit  | `L_s73_numeric ] option
           val set_minute :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
               | `U2 of [ `L_s0_2_digit ] ] -> unit
           val get_second :
             'tags this -> [ `L_s0_2_digit  | `L_s73_numeric ] option
           val set_second :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
               | `U2 of [ `L_s0_2_digit ] ] -> unit
           val get_timeZoneName :
             'tags this -> [ `L_s56_long  | `L_s89_short ] option
           val set_timeZoneName :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s56_long ] 
               | `U2 of [ `L_s89_short ] ] -> unit
           val get_formatMatcher' :
             'tags this -> [ `L_s23_basic  | `L_s24_best_fit ] option
           val set_formatMatcher' :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s24_best_fit ] 
               | `U2 of [ `L_s23_basic ] ] -> unit
           val get_hour12 : 'tags this -> bool option
           val set_hour12 :
             'tags this -> [ `Undefined of undefined  | `U1 of bool ] -> unit
           val get_timeZone : 'tags this -> string option
           val set_timeZone :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val create :
             ?formatMatcher:[ `L_s23_basic  | `L_s24_best_fit ] ->
               ?dateStyle:[ `L_s44_full  | `L_s56_long  | `L_s60_medium 
                          | `L_s89_short ]
                 ->
                 ?timeStyle:[ `L_s44_full  | `L_s56_long  | `L_s60_medium 
                            | `L_s89_short ]
                   ->
                   ?dayPeriod:[ `L_s56_long  | `L_s68_narrow 
                              | `L_s89_short ]
                     ->
                     ?fractionalSecondDigits:[ `L_n_0  | `L_n_1  | `L_n_2 
                                             | `L_n_3 ]
                       ->
                       ?calendar:string ->
                         ?dayPeriod:[ `L_s56_long  | `L_s68_narrow 
                                    | `L_s89_short ]
                           ->
                           ?numberingSystem:string ->
                             ?dateStyle:[ `L_s44_full  | `L_s56_long 
                                        | `L_s60_medium  | `L_s89_short ]
                               ->
                               ?timeStyle:[ `L_s44_full  | `L_s56_long 
                                          | `L_s60_medium  | `L_s89_short ]
                                 ->
                                 ?hourCycle:[ `L_s46_h11  | `L_s47_h12 
                                            | `L_s48_h23  | `L_s49_h24 ]
                                   ->
                                   ?localeMatcher:[ `L_s24_best_fit 
                                                  | `L_s57_lookup ]
                                     ->
                                     ?weekday:[ `L_s56_long  | `L_s68_narrow 
                                              | `L_s89_short ]
                                       ->
                                       ?era:[ `L_s56_long  | `L_s68_narrow 
                                            | `L_s89_short ]
                                         ->
                                         ?year:[ `L_s0_2_digit 
                                               | `L_s73_numeric ]
                                           ->
                                           ?month:[ `L_s0_2_digit 
                                                  | `L_s56_long 
                                                  | `L_s68_narrow 
                                                  | `L_s73_numeric 
                                                  | `L_s89_short ]
                                             ->
                                             ?day:[ `L_s0_2_digit 
                                                  | `L_s73_numeric ]
                                               ->
                                               ?hour:[ `L_s0_2_digit 
                                                     | `L_s73_numeric ]
                                                 ->
                                                 ?minute:[ `L_s0_2_digit 
                                                         | `L_s73_numeric ]
                                                   ->
                                                   ?second:[ `L_s0_2_digit 
                                                           | `L_s73_numeric ]
                                                     ->
                                                     ?timeZoneName:[
                                                                    `L_s56_long
                                                                     | 
                                                                    `L_s89_short
                                                                    ]
                                                       ->
                                                       ?formatMatcher:
                                                         [ `L_s23_basic 
                                                         | `L_s24_best_fit ]
                                                         ->
                                                         ?hour12:bool ->
                                                           ?timeZone:string
                                                             -> unit -> t
           val cast_from : 'tags this -> t
         end
         module DateTimeFormat :
         sig
           type t = [ `Intl_DateTimeFormat ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_DateTimeFormat ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_DateTimeFormat ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_DateTimeFormat ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val formatToParts :
             'tags this ->
               ?date:[ `U1 of Date.t  | `U2 of float ] ->
                 unit -> DateTimeFormatPart.t list
           val format :
             'tags this ->
               ?date:[ `U1 of Date.t  | `U2 of float ] -> unit -> string
           val resolvedOptions :
             'tags this -> ResolvedDateTimeFormatOptions.t
           val cast_from : 'tags this -> t
           val create :
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:DateTimeFormatOptions.t -> unit -> t
           val invoke :
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:DateTimeFormatOptions.t -> unit -> t
           val supportedLocalesOf :
             locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:DateTimeFormatOptions.t -> unit -> string list
         end
         module ResolvedCollatorOptions :
         sig
           type t = [ `Intl_ResolvedCollatorOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_ResolvedCollatorOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_ResolvedCollatorOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_ResolvedCollatorOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_locale : 'tags this -> string
           val set_locale : 'tags this -> string -> unit
           val get_usage : 'tags this -> string
           val set_usage : 'tags this -> string -> unit
           val get_sensitivity : 'tags this -> string
           val set_sensitivity : 'tags this -> string -> unit
           val get_ignorePunctuation : 'tags this -> bool
           val set_ignorePunctuation : 'tags this -> bool -> unit
           val get_collation : 'tags this -> string
           val set_collation : 'tags this -> string -> unit
           val get_caseFirst : 'tags this -> string
           val set_caseFirst : 'tags this -> string -> unit
           val get_numeric : 'tags this -> bool
           val set_numeric : 'tags this -> bool -> unit
           val create :
             locale:string ->
               usage:string ->
                 sensitivity:string ->
                   ignorePunctuation:bool ->
                     collation:string ->
                       caseFirst:string -> numeric:bool -> unit -> t
           val cast_from : 'tags this -> t
         end
         module CollatorOptions :
         sig
           type t = [ `Intl_CollatorOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_CollatorOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_CollatorOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_CollatorOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_usage : 'tags this -> string option
           val set_usage :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_localeMatcher : 'tags this -> string option
           val set_localeMatcher :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_numeric : 'tags this -> bool option
           val set_numeric :
             'tags this -> [ `Undefined of undefined  | `U1 of bool ] -> unit
           val get_caseFirst : 'tags this -> string option
           val set_caseFirst :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_sensitivity : 'tags this -> string option
           val set_sensitivity :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_ignorePunctuation : 'tags this -> bool option
           val set_ignorePunctuation :
             'tags this -> [ `Undefined of undefined  | `U1 of bool ] -> unit
           val create :
             ?usage:string ->
               ?localeMatcher:string ->
                 ?numeric:bool ->
                   ?caseFirst:string ->
                     ?sensitivity:string ->
                       ?ignorePunctuation:bool -> unit -> t
           val cast_from : 'tags this -> t
         end
         module Collator :
         sig
           type t = [ `Intl_Collator ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_Collator ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_Collator ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_Collator ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val compare : 'tags this -> x:string -> y:string -> float
           val resolvedOptions : 'tags this -> ResolvedCollatorOptions.t
           val cast_from : 'tags this -> t
           val create :
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:CollatorOptions.t -> unit -> t
           val invoke :
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:CollatorOptions.t -> unit -> t
           val supportedLocalesOf :
             locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:CollatorOptions.t -> unit -> string list
         end
       end =
  struct
    module RelativeTimeFormatNumeric =
      struct
        type t = [ `L_s21_always  | `L_s22_auto ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2003 : Ojs.t) ->
            let x2004 = x2003 in
            match Ojs.string_of_js x2004 with
            | "always" -> `L_s21_always
            | "auto" -> `L_s22_auto
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x2002 : [ `L_s21_always  | `L_s22_auto ]) ->
            match x2002 with
            | `L_s21_always -> Ojs.string_to_js "always"
            | `L_s22_auto -> Ojs.string_to_js "auto"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2006 : Ojs.t) -> t_of_js x2006
        and t_0_to_js : t_0 -> Ojs.t = fun (x2005 : t) -> t_to_js x2005
      end
    module UnicodeBCP47LocaleIdentifier =
      struct
        type t = string
        let rec t_of_js : Ojs.t -> t =
          fun (x2008 : Ojs.t) -> Ojs.string_of_js x2008
        and t_to_js : t -> Ojs.t =
          fun (x2007 : string) -> Ojs.string_to_js x2007
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2010 : Ojs.t) -> t_of_js x2010
        and t_0_to_js : t_0 -> Ojs.t = fun (x2009 : t) -> t_to_js x2009
      end
    module RelativeTimeFormatStyle =
      struct
        type t = [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2012 : Ojs.t) ->
            let x2013 = x2012 in
            match Ojs.string_of_js x2013 with
            | "long" -> `L_s56_long
            | "narrow" -> `L_s68_narrow
            | "short" -> `L_s89_short
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x2011 : [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ]) ->
            match x2011 with
            | `L_s56_long -> Ojs.string_to_js "long"
            | `L_s68_narrow -> Ojs.string_to_js "narrow"
            | `L_s89_short -> Ojs.string_to_js "short"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2015 : Ojs.t) -> t_of_js x2015
        and t_0_to_js : t_0 -> Ojs.t = fun (x2014 : t) -> t_to_js x2014
      end
    module ResolvedRelativeTimeFormatOptions =
      struct
        type t = [ `Intl_ResolvedRelativeTimeFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2017 : Ojs.t) -> t_of_js x2017
        and t_0_to_js : t_0 -> Ojs.t = fun (x2016 : t) -> t_to_js x2016
        type tags = [ `Intl_ResolvedRelativeTimeFormatOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags =
                      [> `Intl_ResolvedRelativeTimeFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2020 : Ojs.t) -> intf_of_js __tags_of_js x2020
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2018 : __tags intf) -> intf_to_js __tags_to_js x2018
        let (get_locale : 'tags this -> UnicodeBCP47LocaleIdentifier.t) =
          fun (x2022 : 'tags this) ->
            UnicodeBCP47LocaleIdentifier.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2022) "locale")
        let (set_locale :
          'tags this -> UnicodeBCP47LocaleIdentifier.t -> unit) =
          fun (x2024 : 'tags this) ->
            fun (x2025 : UnicodeBCP47LocaleIdentifier.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2024) "locale"
                (UnicodeBCP47LocaleIdentifier.t_to_js x2025)
        let (get_style : 'tags this -> RelativeTimeFormatStyle.t) =
          fun (x2027 : 'tags this) ->
            RelativeTimeFormatStyle.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2027) "style")
        let (set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit) =
          fun (x2029 : 'tags this) ->
            fun (x2030 : RelativeTimeFormatStyle.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2029) "style"
                (RelativeTimeFormatStyle.t_to_js x2030)
        let (get_numeric : 'tags this -> RelativeTimeFormatNumeric.t) =
          fun (x2032 : 'tags this) ->
            RelativeTimeFormatNumeric.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2032) "numeric")
        let (set_numeric : 'tags this -> RelativeTimeFormatNumeric.t -> unit)
          =
          fun (x2034 : 'tags this) ->
            fun (x2035 : RelativeTimeFormatNumeric.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2034) "numeric"
                (RelativeTimeFormatNumeric.t_to_js x2035)
        let (get_numberingSystem : 'tags this -> string) =
          fun (x2037 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2037)
                 "numberingSystem")
        let (set_numberingSystem : 'tags this -> string -> unit) =
          fun (x2039 : 'tags this) ->
            fun (x2040 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2039)
                "numberingSystem" (Ojs.string_to_js x2040)
        let (create :
          locale:UnicodeBCP47LocaleIdentifier.t ->
            style:RelativeTimeFormatStyle.t ->
              numeric:RelativeTimeFormatNumeric.t ->
                numberingSystem:string -> unit -> t)
          =
          fun ~locale:(x2042 : UnicodeBCP47LocaleIdentifier.t) ->
            fun ~style:(x2043 : RelativeTimeFormatStyle.t) ->
              fun ~numeric:(x2044 : RelativeTimeFormatNumeric.t) ->
                fun ~numberingSystem:(x2045 : string) ->
                  fun () ->
                    let x2046 = Ojs.empty_obj () in
                    Ojs.set_prop_ascii x2046 "locale"
                      (UnicodeBCP47LocaleIdentifier.t_to_js x2042);
                    Ojs.set_prop_ascii x2046 "style"
                      (RelativeTimeFormatStyle.t_to_js x2043);
                    Ojs.set_prop_ascii x2046 "numeric"
                      (RelativeTimeFormatNumeric.t_to_js x2044);
                    Ojs.set_prop_ascii x2046 "numberingSystem"
                      (Ojs.string_to_js x2045);
                    t_of_js x2046
        let cast_from = Obj.magic
      end
    module RelativeTimeFormatUnit =
      struct
        type t =
          [ `L_s101_weeks  | `L_s102_year  | `L_s103_years  | `L_s29_day 
          | `L_s31_days  | `L_s50_hour  | `L_s51_hours  | `L_s62_minute 
          | `L_s63_minutes  | `L_s64_month  | `L_s65_months 
          | `L_s81_quarter  | `L_s82_quarters  | `L_s87_second 
          | `L_s88_seconds  | `L_s99_week ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2048 : Ojs.t) ->
            let x2049 = x2048 in
            match Ojs.string_of_js x2049 with
            | "weeks" -> `L_s101_weeks
            | "year" -> `L_s102_year
            | "years" -> `L_s103_years
            | "day" -> `L_s29_day
            | "days" -> `L_s31_days
            | "hour" -> `L_s50_hour
            | "hours" -> `L_s51_hours
            | "minute" -> `L_s62_minute
            | "minutes" -> `L_s63_minutes
            | "month" -> `L_s64_month
            | "months" -> `L_s65_months
            | "quarter" -> `L_s81_quarter
            | "quarters" -> `L_s82_quarters
            | "second" -> `L_s87_second
            | "seconds" -> `L_s88_seconds
            | "week" -> `L_s99_week
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x2047 :
              [ `L_s101_weeks  | `L_s102_year  | `L_s103_years  | `L_s29_day 
              | `L_s31_days  | `L_s50_hour  | `L_s51_hours  | `L_s62_minute 
              | `L_s63_minutes  | `L_s64_month  | `L_s65_months 
              | `L_s81_quarter  | `L_s82_quarters  | `L_s87_second 
              | `L_s88_seconds  | `L_s99_week ])
            ->
            match x2047 with
            | `L_s101_weeks -> Ojs.string_to_js "weeks"
            | `L_s102_year -> Ojs.string_to_js "year"
            | `L_s103_years -> Ojs.string_to_js "years"
            | `L_s29_day -> Ojs.string_to_js "day"
            | `L_s31_days -> Ojs.string_to_js "days"
            | `L_s50_hour -> Ojs.string_to_js "hour"
            | `L_s51_hours -> Ojs.string_to_js "hours"
            | `L_s62_minute -> Ojs.string_to_js "minute"
            | `L_s63_minutes -> Ojs.string_to_js "minutes"
            | `L_s64_month -> Ojs.string_to_js "month"
            | `L_s65_months -> Ojs.string_to_js "months"
            | `L_s81_quarter -> Ojs.string_to_js "quarter"
            | `L_s82_quarters -> Ojs.string_to_js "quarters"
            | `L_s87_second -> Ojs.string_to_js "second"
            | `L_s88_seconds -> Ojs.string_to_js "seconds"
            | `L_s99_week -> Ojs.string_to_js "week"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2051 : Ojs.t) -> t_of_js x2051
        and t_0_to_js : t_0 -> Ojs.t = fun (x2050 : t) -> t_to_js x2050
      end
    module RelativeTimeFormatPart =
      struct
        type t = [ `Intl_RelativeTimeFormatPart ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2053 : Ojs.t) -> t_of_js x2053
        and t_0_to_js : t_0 -> Ojs.t = fun (x2052 : t) -> t_to_js x2052
        type tags = [ `Intl_RelativeTimeFormatPart ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_RelativeTimeFormatPart ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2056 : Ojs.t) -> intf_of_js __tags_of_js x2056
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2054 : __tags intf) -> intf_to_js __tags_to_js x2054
        let (get_type : 'tags this -> string) =
          fun (x2058 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2058) "type")
        let (set_type : 'tags this -> string -> unit) =
          fun (x2060 : 'tags this) ->
            fun (x2061 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2060) "type"
                (Ojs.string_to_js x2061)
        let (get_value : 'tags this -> string) =
          fun (x2063 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2063) "value")
        let (set_value : 'tags this -> string -> unit) =
          fun (x2065 : 'tags this) ->
            fun (x2066 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2065) "value"
                (Ojs.string_to_js x2066)
        let (get_unit : 'tags this -> RelativeTimeFormatUnit.t) =
          fun (x2068 : 'tags this) ->
            RelativeTimeFormatUnit.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2068) "unit")
        let (set_unit : 'tags this -> RelativeTimeFormatUnit.t -> unit) =
          fun (x2070 : 'tags this) ->
            fun (x2071 : RelativeTimeFormatUnit.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2070) "unit"
                (RelativeTimeFormatUnit.t_to_js x2071)
        let (create :
          type_:string ->
            value:string -> unit:RelativeTimeFormatUnit.t -> unit -> t)
          =
          fun ~type_:(x2073 : string) ->
            fun ~value:(x2074 : string) ->
              fun ~unit:(x2075 : RelativeTimeFormatUnit.t) ->
                fun () ->
                  let x2076 = Ojs.empty_obj () in
                  Ojs.set_prop_ascii x2076 "type" (Ojs.string_to_js x2073);
                  Ojs.set_prop_ascii x2076 "value" (Ojs.string_to_js x2074);
                  Ojs.set_prop_ascii x2076 "unit"
                    (RelativeTimeFormatUnit.t_to_js x2075);
                  t_of_js x2076
        let cast_from = Obj.magic
      end
    module RelativeTimeFormatLocaleMatcher =
      struct
        type t = [ `L_s24_best_fit  | `L_s57_lookup ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2078 : Ojs.t) ->
            let x2079 = x2078 in
            match Ojs.string_of_js x2079 with
            | "best fit" -> `L_s24_best_fit
            | "lookup" -> `L_s57_lookup
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x2077 : [ `L_s24_best_fit  | `L_s57_lookup ]) ->
            match x2077 with
            | `L_s24_best_fit -> Ojs.string_to_js "best fit"
            | `L_s57_lookup -> Ojs.string_to_js "lookup"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2081 : Ojs.t) -> t_of_js x2081
        and t_0_to_js : t_0 -> Ojs.t = fun (x2080 : t) -> t_to_js x2080
      end
    module RelativeTimeFormatOptions =
      struct
        type t = [ `Intl_RelativeTimeFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2083 : Ojs.t) -> t_of_js x2083
        and t_0_to_js : t_0 -> Ojs.t = fun (x2082 : t) -> t_to_js x2082
        type tags = [ `Intl_RelativeTimeFormatOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_RelativeTimeFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2086 : Ojs.t) -> intf_of_js __tags_of_js x2086
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2084 : __tags intf) -> intf_to_js __tags_to_js x2084
        let (get_localeMatcher :
          'tags this -> RelativeTimeFormatLocaleMatcher.t) =
          fun (x2088 : 'tags this) ->
            RelativeTimeFormatLocaleMatcher.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2088)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this -> RelativeTimeFormatLocaleMatcher.t -> unit) =
          fun (x2090 : 'tags this) ->
            fun (x2091 : RelativeTimeFormatLocaleMatcher.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2090) "localeMatcher"
                (RelativeTimeFormatLocaleMatcher.t_to_js x2091)
        let (get_numeric : 'tags this -> RelativeTimeFormatNumeric.t) =
          fun (x2093 : 'tags this) ->
            RelativeTimeFormatNumeric.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2093) "numeric")
        let (set_numeric : 'tags this -> RelativeTimeFormatNumeric.t -> unit)
          =
          fun (x2095 : 'tags this) ->
            fun (x2096 : RelativeTimeFormatNumeric.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2095) "numeric"
                (RelativeTimeFormatNumeric.t_to_js x2096)
        let (get_style : 'tags this -> RelativeTimeFormatStyle.t) =
          fun (x2098 : 'tags this) ->
            RelativeTimeFormatStyle.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2098) "style")
        let (set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit) =
          fun (x2100 : 'tags this) ->
            fun (x2101 : RelativeTimeFormatStyle.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2100) "style"
                (RelativeTimeFormatStyle.t_to_js x2101)
        let (create :
          localeMatcher:RelativeTimeFormatLocaleMatcher.t ->
            numeric:RelativeTimeFormatNumeric.t ->
              style:RelativeTimeFormatStyle.t -> unit -> t)
          =
          fun ~localeMatcher:(x2103 : RelativeTimeFormatLocaleMatcher.t) ->
            fun ~numeric:(x2104 : RelativeTimeFormatNumeric.t) ->
              fun ~style:(x2105 : RelativeTimeFormatStyle.t) ->
                fun () ->
                  let x2106 = Ojs.empty_obj () in
                  Ojs.set_prop_ascii x2106 "localeMatcher"
                    (RelativeTimeFormatLocaleMatcher.t_to_js x2103);
                  Ojs.set_prop_ascii x2106 "numeric"
                    (RelativeTimeFormatNumeric.t_to_js x2104);
                  Ojs.set_prop_ascii x2106 "style"
                    (RelativeTimeFormatStyle.t_to_js x2105);
                  t_of_js x2106
        let cast_from = Obj.magic
      end
    module RelativeTimeFormat =
      struct
        type t = [ `Intl_RelativeTimeFormat ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2108 : Ojs.t) -> t_of_js x2108
        and t_0_to_js : t_0 -> Ojs.t = fun (x2107 : t) -> t_to_js x2107
        type tags = [ `Intl_RelativeTimeFormat ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_RelativeTimeFormat ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2111 : Ojs.t) -> intf_of_js __tags_of_js x2111
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2109 : __tags intf) -> intf_to_js __tags_to_js x2109
        let (format :
          'tags this ->
            value:float -> unit:RelativeTimeFormatUnit.t -> string)
          =
          fun (x2115 : 'tags this) ->
            fun ~value:(x2113 : float) ->
              fun ~unit:(x2114 : RelativeTimeFormatUnit.t) ->
                Ojs.string_of_js
                  (Ojs.call (this_to_js Obj.magic x2115) "format"
                     [|(Ojs.float_to_js x2113);(RelativeTimeFormatUnit.t_to_js
                                                  x2114)|])
        let (formatToParts :
          'tags this ->
            value:float ->
              unit:RelativeTimeFormatUnit.t -> RelativeTimeFormatPart.t list)
          =
          fun (x2119 : 'tags this) ->
            fun ~value:(x2117 : float) ->
              fun ~unit:(x2118 : RelativeTimeFormatUnit.t) ->
                Ojs.list_of_js RelativeTimeFormatPart.t_of_js
                  (Ojs.call (this_to_js Obj.magic x2119) "formatToParts"
                     [|(Ojs.float_to_js x2117);(RelativeTimeFormatUnit.t_to_js
                                                  x2118)|])
        let (resolvedOptions :
          'tags this -> ResolvedRelativeTimeFormatOptions.t) =
          fun (x2122 : 'tags this) ->
            ResolvedRelativeTimeFormatOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x2122) "resolvedOptions" [||])
        let cast_from = Obj.magic
        let (create :
          ?locales:[ `U1 of UnicodeBCP47LocaleIdentifier.t 
                   | `U2 of UnicodeBCP47LocaleIdentifier.t list ]
            -> ?options:RelativeTimeFormatOptions.t -> unit -> t)
          =
          fun
            ?locales:(x2124 :
                       [ `U1 of UnicodeBCP47LocaleIdentifier.t 
                       | `U2 of UnicodeBCP47LocaleIdentifier.t list ] option)
            ->
            fun ?options:(x2125 : RelativeTimeFormatOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl")
                        "RelativeTimeFormat")
                     (let x2126 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x2124 with
                       | Some x2128 ->
                           ignore
                             (Ojs.call x2126 "push"
                                [|((match x2128 with
                                    | `U1 x2129 ->
                                        UnicodeBCP47LocaleIdentifier.t_to_js
                                          x2129
                                    | `U2 x2130 ->
                                        Ojs.list_to_js
                                          UnicodeBCP47LocaleIdentifier.t_to_js
                                          x2130))|])
                       | None -> ());
                      (match x2125 with
                       | Some x2127 ->
                           ignore
                             (Ojs.call x2126 "push"
                                [|(RelativeTimeFormatOptions.t_to_js x2127)|])
                       | None -> ());
                      x2126))
        let (supportedLocalesOf :
          ?locales:[ `U1 of UnicodeBCP47LocaleIdentifier.t 
                   | `U2 of UnicodeBCP47LocaleIdentifier.t list ]
            ->
            ?options:RelativeTimeFormatOptions.t ->
              unit -> UnicodeBCP47LocaleIdentifier.t list)
          =
          fun
            ?locales:(x2132 :
                       [ `U1 of UnicodeBCP47LocaleIdentifier.t 
                       | `U2 of UnicodeBCP47LocaleIdentifier.t list ] option)
            ->
            fun ?options:(x2133 : RelativeTimeFormatOptions.t option) ->
              fun () ->
                Ojs.list_of_js UnicodeBCP47LocaleIdentifier.t_of_js
                  (let x2140 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl")
                       "RelativeTimeFormat" in
                   Ojs.call (Ojs.get_prop_ascii x2140 "supportedLocalesOf")
                     "apply"
                     [|x2140;((let x2134 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x2132 with
                                | Some x2136 ->
                                    ignore
                                      (Ojs.call x2134 "push"
                                         [|((match x2136 with
                                             | `U1 x2137 ->
                                                 UnicodeBCP47LocaleIdentifier.t_to_js
                                                   x2137
                                             | `U2 x2138 ->
                                                 Ojs.list_to_js
                                                   UnicodeBCP47LocaleIdentifier.t_to_js
                                                   x2138))|])
                                | None -> ());
                               (match x2133 with
                                | Some x2135 ->
                                    ignore
                                      (Ojs.call x2134 "push"
                                         [|(RelativeTimeFormatOptions.t_to_js
                                              x2135)|])
                                | None -> ());
                               x2134))|])
      end
    module PluralRuleType =
      struct
        type t = [ `L_s25_cardinal  | `L_s76_ordinal ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2143 : Ojs.t) ->
            let x2144 = x2143 in
            match Ojs.string_of_js x2144 with
            | "cardinal" -> `L_s25_cardinal
            | "ordinal" -> `L_s76_ordinal
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x2142 : [ `L_s25_cardinal  | `L_s76_ordinal ]) ->
            match x2142 with
            | `L_s25_cardinal -> Ojs.string_to_js "cardinal"
            | `L_s76_ordinal -> Ojs.string_to_js "ordinal"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2146 : Ojs.t) -> t_of_js x2146
        and t_0_to_js : t_0 -> Ojs.t = fun (x2145 : t) -> t_to_js x2145
      end
    module LDMLPluralRule =
      struct
        type t =
          [ `L_s104_zero  | `L_s41_few  | `L_s59_many  | `L_s75_one 
          | `L_s77_other  | `L_s95_two ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2148 : Ojs.t) ->
            let x2149 = x2148 in
            match Ojs.string_of_js x2149 with
            | "zero" -> `L_s104_zero
            | "few" -> `L_s41_few
            | "many" -> `L_s59_many
            | "one" -> `L_s75_one
            | "other" -> `L_s77_other
            | "two" -> `L_s95_two
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x2147 :
              [ `L_s104_zero  | `L_s41_few  | `L_s59_many  | `L_s75_one 
              | `L_s77_other  | `L_s95_two ])
            ->
            match x2147 with
            | `L_s104_zero -> Ojs.string_to_js "zero"
            | `L_s41_few -> Ojs.string_to_js "few"
            | `L_s59_many -> Ojs.string_to_js "many"
            | `L_s75_one -> Ojs.string_to_js "one"
            | `L_s77_other -> Ojs.string_to_js "other"
            | `L_s95_two -> Ojs.string_to_js "two"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2151 : Ojs.t) -> t_of_js x2151
        and t_0_to_js : t_0 -> Ojs.t = fun (x2150 : t) -> t_to_js x2150
      end
    module ResolvedPluralRulesOptions =
      struct
        type t = [ `Intl_ResolvedPluralRulesOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2153 : Ojs.t) -> t_of_js x2153
        and t_0_to_js : t_0 -> Ojs.t = fun (x2152 : t) -> t_to_js x2152
        type tags = [ `Intl_ResolvedPluralRulesOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_ResolvedPluralRulesOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2156 : Ojs.t) -> intf_of_js __tags_of_js x2156
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2154 : __tags intf) -> intf_to_js __tags_to_js x2154
        let (get_locale : 'tags this -> string) =
          fun (x2158 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2158) "locale")
        let (set_locale : 'tags this -> string -> unit) =
          fun (x2160 : 'tags this) ->
            fun (x2161 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2160) "locale"
                (Ojs.string_to_js x2161)
        let (get_pluralCategories : 'tags this -> LDMLPluralRule.t list) =
          fun (x2163 : 'tags this) ->
            Ojs.list_of_js LDMLPluralRule.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2163)
                 "pluralCategories")
        let (set_pluralCategories :
          'tags this -> LDMLPluralRule.t list -> unit) =
          fun (x2166 : 'tags this) ->
            fun (x2167 : LDMLPluralRule.t list) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2166)
                "pluralCategories"
                (Ojs.list_to_js LDMLPluralRule.t_to_js x2167)
        let (get_type : 'tags this -> PluralRuleType.t) =
          fun (x2170 : 'tags this) ->
            PluralRuleType.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2170) "type")
        let (set_type : 'tags this -> PluralRuleType.t -> unit) =
          fun (x2172 : 'tags this) ->
            fun (x2173 : PluralRuleType.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2172) "type"
                (PluralRuleType.t_to_js x2173)
        let (get_minimumIntegerDigits : 'tags this -> float) =
          fun (x2175 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2175)
                 "minimumIntegerDigits")
        let (set_minimumIntegerDigits : 'tags this -> float -> unit) =
          fun (x2177 : 'tags this) ->
            fun (x2178 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2177)
                "minimumIntegerDigits" (Ojs.float_to_js x2178)
        let (get_minimumFractionDigits : 'tags this -> float) =
          fun (x2180 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2180)
                 "minimumFractionDigits")
        let (set_minimumFractionDigits : 'tags this -> float -> unit) =
          fun (x2182 : 'tags this) ->
            fun (x2183 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2182)
                "minimumFractionDigits" (Ojs.float_to_js x2183)
        let (get_maximumFractionDigits : 'tags this -> float) =
          fun (x2185 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2185)
                 "maximumFractionDigits")
        let (set_maximumFractionDigits : 'tags this -> float -> unit) =
          fun (x2187 : 'tags this) ->
            fun (x2188 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2187)
                "maximumFractionDigits" (Ojs.float_to_js x2188)
        let (get_minimumSignificantDigits : 'tags this -> float) =
          fun (x2190 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2190)
                 "minimumSignificantDigits")
        let (set_minimumSignificantDigits : 'tags this -> float -> unit) =
          fun (x2192 : 'tags this) ->
            fun (x2193 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2192)
                "minimumSignificantDigits" (Ojs.float_to_js x2193)
        let (get_maximumSignificantDigits : 'tags this -> float) =
          fun (x2195 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2195)
                 "maximumSignificantDigits")
        let (set_maximumSignificantDigits : 'tags this -> float -> unit) =
          fun (x2197 : 'tags this) ->
            fun (x2198 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2197)
                "maximumSignificantDigits" (Ojs.float_to_js x2198)
        let (create :
          locale:string ->
            pluralCategories:LDMLPluralRule.t list ->
              type_:PluralRuleType.t ->
                minimumIntegerDigits:float ->
                  minimumFractionDigits:float ->
                    maximumFractionDigits:float ->
                      minimumSignificantDigits:float ->
                        maximumSignificantDigits:float -> unit -> t)
          =
          fun ~locale:(x2200 : string) ->
            fun ~pluralCategories:(x2201 : LDMLPluralRule.t list) ->
              fun ~type_:(x2202 : PluralRuleType.t) ->
                fun ~minimumIntegerDigits:(x2203 : float) ->
                  fun ~minimumFractionDigits:(x2204 : float) ->
                    fun ~maximumFractionDigits:(x2205 : float) ->
                      fun ~minimumSignificantDigits:(x2206 : float) ->
                        fun ~maximumSignificantDigits:(x2207 : float) ->
                          fun () ->
                            let x2208 = Ojs.empty_obj () in
                            Ojs.set_prop_ascii x2208 "locale"
                              (Ojs.string_to_js x2200);
                            Ojs.set_prop_ascii x2208 "pluralCategories"
                              (Ojs.list_to_js LDMLPluralRule.t_to_js x2201);
                            Ojs.set_prop_ascii x2208 "type"
                              (PluralRuleType.t_to_js x2202);
                            Ojs.set_prop_ascii x2208 "minimumIntegerDigits"
                              (Ojs.float_to_js x2203);
                            Ojs.set_prop_ascii x2208 "minimumFractionDigits"
                              (Ojs.float_to_js x2204);
                            Ojs.set_prop_ascii x2208 "maximumFractionDigits"
                              (Ojs.float_to_js x2205);
                            Ojs.set_prop_ascii x2208
                              "minimumSignificantDigits"
                              (Ojs.float_to_js x2206);
                            Ojs.set_prop_ascii x2208
                              "maximumSignificantDigits"
                              (Ojs.float_to_js x2207);
                            t_of_js x2208
        let cast_from = Obj.magic
      end
    module PluralRulesOptions =
      struct
        type t = [ `Intl_PluralRulesOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2211 : Ojs.t) -> t_of_js x2211
        and t_0_to_js : t_0 -> Ojs.t = fun (x2210 : t) -> t_to_js x2210
        type tags = [ `Intl_PluralRulesOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_PluralRulesOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2214 : Ojs.t) -> intf_of_js __tags_of_js x2214
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2212 : __tags intf) -> intf_to_js __tags_to_js x2212
        let (get_localeMatcher :
          'tags this -> [ `L_s24_best_fit  | `L_s57_lookup ] option) =
          fun (x2216 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2218 : Ojs.t) ->
                 let x2219 = x2218 in
                 match Ojs.string_of_js x2219 with
                 | "best fit" -> `L_s24_best_fit
                 | "lookup" -> `L_s57_lookup
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2216)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s57_lookup ] 
            | `U2 of [ `L_s24_best_fit ] ] -> unit)
          =
          fun (x2220 : 'tags this) ->
            fun
              (x2221 :
                [ `Undefined of undefined  | `U1 of [ `L_s57_lookup ] 
                | `U2 of [ `L_s24_best_fit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2220) "localeMatcher"
                (match x2221 with
                 | `Undefined x2222 -> undefined_to_js x2222
                 | `U1 x2223 ->
                     (match x2223 with
                      | `L_s57_lookup -> Ojs.string_to_js "lookup")
                 | `U2 x2224 ->
                     (match x2224 with
                      | `L_s24_best_fit -> Ojs.string_to_js "best fit"))
        let (get_type : 'tags this -> PluralRuleType.t option) =
          fun (x2226 : 'tags this) ->
            Ojs.option_of_js PluralRuleType.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2226) "type")
        let (set_type :
          'tags this ->
            [ `Undefined of undefined  | `U1 of PluralRuleType.t ] -> unit)
          =
          fun (x2229 : 'tags this) ->
            fun
              (x2230 :
                [ `Undefined of undefined  | `U1 of PluralRuleType.t ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2229) "type"
                (match x2230 with
                 | `Undefined x2231 -> undefined_to_js x2231
                 | `U1 x2232 -> PluralRuleType.t_to_js x2232)
        let (get_minimumIntegerDigits : 'tags this -> float option) =
          fun (x2234 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2234)
                 "minimumIntegerDigits")
        let (set_minimumIntegerDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2237 : 'tags this) ->
            fun (x2238 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2237)
                "minimumIntegerDigits"
                (match x2238 with
                 | `Undefined x2239 -> undefined_to_js x2239
                 | `U1 x2240 -> Ojs.float_to_js x2240)
        let (get_minimumFractionDigits : 'tags this -> float option) =
          fun (x2242 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2242)
                 "minimumFractionDigits")
        let (set_minimumFractionDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2245 : 'tags this) ->
            fun (x2246 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2245)
                "minimumFractionDigits"
                (match x2246 with
                 | `Undefined x2247 -> undefined_to_js x2247
                 | `U1 x2248 -> Ojs.float_to_js x2248)
        let (get_maximumFractionDigits : 'tags this -> float option) =
          fun (x2250 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2250)
                 "maximumFractionDigits")
        let (set_maximumFractionDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2253 : 'tags this) ->
            fun (x2254 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2253)
                "maximumFractionDigits"
                (match x2254 with
                 | `Undefined x2255 -> undefined_to_js x2255
                 | `U1 x2256 -> Ojs.float_to_js x2256)
        let (get_minimumSignificantDigits : 'tags this -> float option) =
          fun (x2258 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2258)
                 "minimumSignificantDigits")
        let (set_minimumSignificantDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2261 : 'tags this) ->
            fun (x2262 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2261)
                "minimumSignificantDigits"
                (match x2262 with
                 | `Undefined x2263 -> undefined_to_js x2263
                 | `U1 x2264 -> Ojs.float_to_js x2264)
        let (get_maximumSignificantDigits : 'tags this -> float option) =
          fun (x2266 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2266)
                 "maximumSignificantDigits")
        let (set_maximumSignificantDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2269 : 'tags this) ->
            fun (x2270 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2269)
                "maximumSignificantDigits"
                (match x2270 with
                 | `Undefined x2271 -> undefined_to_js x2271
                 | `U1 x2272 -> Ojs.float_to_js x2272)
        let (create :
          ?localeMatcher:[ `L_s24_best_fit  | `L_s57_lookup ] ->
            ?type_:PluralRuleType.t ->
              ?minimumIntegerDigits:float ->
                ?minimumFractionDigits:float ->
                  ?maximumFractionDigits:float ->
                    ?minimumSignificantDigits:float ->
                      ?maximumSignificantDigits:float -> unit -> t)
          =
          fun
            ?localeMatcher:(x2274 :
                             [ `L_s24_best_fit  | `L_s57_lookup ] option)
            ->
            fun ?type_:(x2275 : PluralRuleType.t option) ->
              fun ?minimumIntegerDigits:(x2276 : float option) ->
                fun ?minimumFractionDigits:(x2277 : float option) ->
                  fun ?maximumFractionDigits:(x2278 : float option) ->
                    fun ?minimumSignificantDigits:(x2279 : float option) ->
                      fun ?maximumSignificantDigits:(x2280 : float option) ->
                        fun () ->
                          let x2281 = Ojs.empty_obj () in
                          (match x2274 with
                           | Some x2288 ->
                               Ojs.set_prop_ascii x2281 "localeMatcher"
                                 (match x2288 with
                                  | `L_s24_best_fit ->
                                      Ojs.string_to_js "best fit"
                                  | `L_s57_lookup ->
                                      Ojs.string_to_js "lookup")
                           | None -> ());
                          (match x2275 with
                           | Some x2287 ->
                               Ojs.set_prop_ascii x2281 "type"
                                 (PluralRuleType.t_to_js x2287)
                           | None -> ());
                          (match x2276 with
                           | Some x2286 ->
                               Ojs.set_prop_ascii x2281
                                 "minimumIntegerDigits"
                                 (Ojs.float_to_js x2286)
                           | None -> ());
                          (match x2277 with
                           | Some x2285 ->
                               Ojs.set_prop_ascii x2281
                                 "minimumFractionDigits"
                                 (Ojs.float_to_js x2285)
                           | None -> ());
                          (match x2278 with
                           | Some x2284 ->
                               Ojs.set_prop_ascii x2281
                                 "maximumFractionDigits"
                                 (Ojs.float_to_js x2284)
                           | None -> ());
                          (match x2279 with
                           | Some x2283 ->
                               Ojs.set_prop_ascii x2281
                                 "minimumSignificantDigits"
                                 (Ojs.float_to_js x2283)
                           | None -> ());
                          (match x2280 with
                           | Some x2282 ->
                               Ojs.set_prop_ascii x2281
                                 "maximumSignificantDigits"
                                 (Ojs.float_to_js x2282)
                           | None -> ());
                          t_of_js x2281
        let cast_from = Obj.magic
      end
    module PluralRules =
      struct
        module AnonymousInterface4 =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x2290 : Ojs.t) -> x2290
            and t_to_js : t -> Ojs.t = fun (x2289 : Ojs.t) -> x2289
            let (get_localeMatcher :
              t -> [ `L_s24_best_fit  | `L_s57_lookup ]) =
              fun (x2291 : t) ->
                let x2292 =
                  Ojs.get_prop_ascii (t_to_js x2291) "localeMatcher" in
                match Ojs.string_of_js x2292 with
                | "best fit" -> `L_s24_best_fit
                | "lookup" -> `L_s57_lookup
                | _ -> assert false
            let (set_localeMatcher :
              t ->
                [ `U1 of [ `L_s57_lookup ]  | `U2 of [ `L_s24_best_fit ] ] ->
                  unit)
              =
              fun (x2293 : t) ->
                fun
                  (x2294 :
                    [ `U1 of [ `L_s57_lookup ] 
                    | `U2 of [ `L_s24_best_fit ] ])
                  ->
                  Ojs.set_prop_ascii (t_to_js x2293) "localeMatcher"
                    (match x2294 with
                     | `U1 x2295 ->
                         (match x2295 with
                          | `L_s57_lookup -> Ojs.string_to_js "lookup")
                     | `U2 x2296 ->
                         (match x2296 with
                          | `L_s24_best_fit -> Ojs.string_to_js "best fit"))
            let (create :
              localeMatcher:[ `L_s24_best_fit  | `L_s57_lookup ] -> unit -> t)
              =
              fun
                ~localeMatcher:(x2297 : [ `L_s24_best_fit  | `L_s57_lookup ])
                ->
                fun () ->
                  let x2298 = Ojs.empty_obj () in
                  Ojs.set_prop_ascii x2298 "localeMatcher"
                    (match x2297 with
                     | `L_s24_best_fit -> Ojs.string_to_js "best fit"
                     | `L_s57_lookup -> Ojs.string_to_js "lookup");
                  t_of_js x2298
          end
        type t = [ `Intl_PluralRules ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2300 : Ojs.t) -> t_of_js x2300
        and t_0_to_js : t_0 -> Ojs.t = fun (x2299 : t) -> t_to_js x2299
        type tags = [ `Intl_PluralRules ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_PluralRules ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2303 : Ojs.t) -> intf_of_js __tags_of_js x2303
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2301 : __tags intf) -> intf_to_js __tags_to_js x2301
        let (resolvedOptions : 'tags this -> ResolvedPluralRulesOptions.t) =
          fun (x2305 : 'tags this) ->
            ResolvedPluralRulesOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x2305) "resolvedOptions" [||])
        let (select : 'tags this -> n:float -> LDMLPluralRule.t) =
          fun (x2308 : 'tags this) ->
            fun ~n:(x2307 : float) ->
              LDMLPluralRule.t_of_js
                (Ojs.call (this_to_js Obj.magic x2308) "select"
                   [|(Ojs.float_to_js x2307)|])
        let cast_from = Obj.magic
        let (create :
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:PluralRulesOptions.t -> unit -> t)
          =
          fun
            ?locales:(x2310 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x2311 : PluralRulesOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "PluralRules")
                     (let x2312 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x2310 with
                       | Some x2314 ->
                           ignore
                             (Ojs.call x2312 "push"
                                [|((match x2314 with
                                    | `U1 x2315 -> Ojs.string_to_js x2315
                                    | `U2 x2316 ->
                                        Ojs.list_to_js Ojs.string_to_js x2316))|])
                       | None -> ());
                      (match x2311 with
                       | Some x2313 ->
                           ignore
                             (Ojs.call x2312 "push"
                                [|(PluralRulesOptions.t_to_js x2313)|])
                       | None -> ());
                      x2312))
        let (invoke :
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:PluralRulesOptions.t -> unit -> t)
          =
          fun
            ?locales:(x2318 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x2319 : PluralRulesOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "PluralRules")
                     "apply"
                     [|Ojs.null;((let x2320 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  (match x2318 with
                                   | Some x2322 ->
                                       ignore
                                         (Ojs.call x2320 "push"
                                            [|((match x2322 with
                                                | `U1 x2323 ->
                                                    Ojs.string_to_js x2323
                                                | `U2 x2324 ->
                                                    Ojs.list_to_js
                                                      Ojs.string_to_js x2324))|])
                                   | None -> ());
                                  (match x2319 with
                                   | Some x2321 ->
                                       ignore
                                         (Ojs.call x2320 "push"
                                            [|(PluralRulesOptions.t_to_js
                                                 x2321)|])
                                   | None -> ());
                                  x2320))|])
        let (supportedLocalesOf :
          locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:AnonymousInterface4.t -> unit -> string list)
          =
          fun ~locales:(x2326 : [ `U1 of string  | `U2 of string list ]) ->
            fun ?options:(x2327 : AnonymousInterface4.t option) ->
              fun () ->
                Ojs.list_of_js Ojs.string_of_js
                  (let x2333 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl") "PluralRules" in
                   Ojs.call (Ojs.get_prop_ascii x2333 "supportedLocalesOf")
                     "apply"
                     [|x2333;((let x2328 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2328 "push"
                                    [|((match x2326 with
                                        | `U1 x2330 -> Ojs.string_to_js x2330
                                        | `U2 x2331 ->
                                            Ojs.list_to_js Ojs.string_to_js
                                              x2331))|]);
                               (match x2327 with
                                | Some x2329 ->
                                    ignore
                                      (Ojs.call x2328 "push"
                                         [|(AnonymousInterface4.t_to_js x2329)|])
                                | None -> ());
                               x2328))|])
      end
    module ResolvedNumberFormatOptions =
      struct
        type t = [ `Intl_ResolvedNumberFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2336 : Ojs.t) -> t_of_js x2336
        and t_0_to_js : t_0 -> Ojs.t = fun (x2335 : t) -> t_to_js x2335
        type tags = [ `Intl_ResolvedNumberFormatOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags =
                      [> `Intl_ResolvedNumberFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2339 : Ojs.t) -> intf_of_js __tags_of_js x2339
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2337 : __tags intf) -> intf_to_js __tags_to_js x2337
        let (get_compactDisplay :
          'tags this -> [ `L_s56_long  | `L_s89_short ]) =
          fun (x2341 : 'tags this) ->
            let x2343 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2341)
                "compactDisplay" in
            match Ojs.string_of_js x2343 with
            | "long" -> `L_s56_long
            | "short" -> `L_s89_short
            | _ -> assert false
        let (set_compactDisplay :
          'tags this ->
            [ `U1 of [ `L_s89_short ]  | `U2 of [ `L_s56_long ] ] -> unit)
          =
          fun (x2344 : 'tags this) ->
            fun
              (x2345 : [ `U1 of [ `L_s89_short ]  | `U2 of [ `L_s56_long ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2344)
                "compactDisplay"
                (match x2345 with
                 | `U1 x2346 ->
                     (match x2346 with
                      | `L_s89_short -> Ojs.string_to_js "short")
                 | `U2 x2347 ->
                     (match x2347 with
                      | `L_s56_long -> Ojs.string_to_js "long"))
        let (get_notation :
          'tags this ->
            [ `L_s27_compact  | `L_s34_engineering  | `L_s85_scientific 
            | `L_s90_standard ])
          =
          fun (x2349 : 'tags this) ->
            let x2351 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2349) "notation" in
            match Ojs.string_of_js x2351 with
            | "compact" -> `L_s27_compact
            | "engineering" -> `L_s34_engineering
            | "scientific" -> `L_s85_scientific
            | "standard" -> `L_s90_standard
            | _ -> assert false
        let (set_notation :
          'tags this ->
            [ `U1 of [ `L_s90_standard ]  | `U2 of [ `L_s85_scientific ] 
            | `U3 of [ `L_s34_engineering ]  | `U4 of [ `L_s27_compact ] ] ->
              unit)
          =
          fun (x2352 : 'tags this) ->
            fun
              (x2353 :
                [ `U1 of [ `L_s90_standard ]  | `U2 of [ `L_s85_scientific ] 
                | `U3 of [ `L_s34_engineering ] 
                | `U4 of [ `L_s27_compact ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2352) "notation"
                (match x2353 with
                 | `U1 x2354 ->
                     (match x2354 with
                      | `L_s90_standard -> Ojs.string_to_js "standard")
                 | `U2 x2355 ->
                     (match x2355 with
                      | `L_s85_scientific -> Ojs.string_to_js "scientific")
                 | `U3 x2356 ->
                     (match x2356 with
                      | `L_s34_engineering -> Ojs.string_to_js "engineering")
                 | `U4 x2357 ->
                     (match x2357 with
                      | `L_s27_compact -> Ojs.string_to_js "compact"))
        let (get_signDisplay :
          'tags this ->
            [ `L_s21_always  | `L_s22_auto  | `L_s36_exceptZero 
            | `L_s69_never ])
          =
          fun (x2359 : 'tags this) ->
            let x2361 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2359) "signDisplay" in
            match Ojs.string_of_js x2361 with
            | "always" -> `L_s21_always
            | "auto" -> `L_s22_auto
            | "exceptZero" -> `L_s36_exceptZero
            | "never" -> `L_s69_never
            | _ -> assert false
        let (set_signDisplay :
          'tags this ->
            [ `U1 of [ `L_s22_auto ]  | `U2 of [ `L_s69_never ] 
            | `U3 of [ `L_s21_always ]  | `U4 of [ `L_s36_exceptZero ] ] ->
              unit)
          =
          fun (x2362 : 'tags this) ->
            fun
              (x2363 :
                [ `U1 of [ `L_s22_auto ]  | `U2 of [ `L_s69_never ] 
                | `U3 of [ `L_s21_always ]  | `U4 of [ `L_s36_exceptZero ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2362) "signDisplay"
                (match x2363 with
                 | `U1 x2364 ->
                     (match x2364 with
                      | `L_s22_auto -> Ojs.string_to_js "auto")
                 | `U2 x2365 ->
                     (match x2365 with
                      | `L_s69_never -> Ojs.string_to_js "never")
                 | `U3 x2366 ->
                     (match x2366 with
                      | `L_s21_always -> Ojs.string_to_js "always")
                 | `U4 x2367 ->
                     (match x2367 with
                      | `L_s36_exceptZero -> Ojs.string_to_js "exceptZero"))
        let (get_unit : 'tags this -> string) =
          fun (x2369 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2369) "unit")
        let (set_unit : 'tags this -> string -> unit) =
          fun (x2371 : 'tags this) ->
            fun (x2372 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2371) "unit"
                (Ojs.string_to_js x2372)
        let (get_unitDisplay :
          'tags this -> [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ]) =
          fun (x2374 : 'tags this) ->
            let x2376 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2374) "unitDisplay" in
            match Ojs.string_of_js x2376 with
            | "long" -> `L_s56_long
            | "narrow" -> `L_s68_narrow
            | "short" -> `L_s89_short
            | _ -> assert false
        let (set_unitDisplay :
          'tags this ->
            [ `U1 of [ `L_s89_short ]  | `U2 of [ `L_s56_long ] 
            | `U3 of [ `L_s68_narrow ] ] -> unit)
          =
          fun (x2377 : 'tags this) ->
            fun
              (x2378 :
                [ `U1 of [ `L_s89_short ]  | `U2 of [ `L_s56_long ] 
                | `U3 of [ `L_s68_narrow ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2377) "unitDisplay"
                (match x2378 with
                 | `U1 x2379 ->
                     (match x2379 with
                      | `L_s89_short -> Ojs.string_to_js "short")
                 | `U2 x2380 ->
                     (match x2380 with
                      | `L_s56_long -> Ojs.string_to_js "long")
                 | `U3 x2381 ->
                     (match x2381 with
                      | `L_s68_narrow -> Ojs.string_to_js "narrow"))
        let (get_currencyDisplay : 'tags this -> string) =
          fun (x2383 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2383)
                 "currencyDisplay")
        let (set_currencyDisplay : 'tags this -> string -> unit) =
          fun (x2385 : 'tags this) ->
            fun (x2386 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2385)
                "currencyDisplay" (Ojs.string_to_js x2386)
        let (get_currencySign : 'tags this -> string) =
          fun (x2388 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2388) "currencySign")
        let (set_currencySign : 'tags this -> string -> unit) =
          fun (x2390 : 'tags this) ->
            fun (x2391 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2390) "currencySign"
                (Ojs.string_to_js x2391)
        let (get_locale : 'tags this -> string) =
          fun (x2393 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2393) "locale")
        let (set_locale : 'tags this -> string -> unit) =
          fun (x2395 : 'tags this) ->
            fun (x2396 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2395) "locale"
                (Ojs.string_to_js x2396)
        let (get_numberingSystem : 'tags this -> string) =
          fun (x2398 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2398)
                 "numberingSystem")
        let (set_numberingSystem : 'tags this -> string -> unit) =
          fun (x2400 : 'tags this) ->
            fun (x2401 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2400)
                "numberingSystem" (Ojs.string_to_js x2401)
        let (get_style : 'tags this -> string) =
          fun (x2403 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2403) "style")
        let (set_style : 'tags this -> string -> unit) =
          fun (x2405 : 'tags this) ->
            fun (x2406 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2405) "style"
                (Ojs.string_to_js x2406)
        let (get_currency : 'tags this -> string) =
          fun (x2408 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2408) "currency")
        let (set_currency : 'tags this -> string -> unit) =
          fun (x2410 : 'tags this) ->
            fun (x2411 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2410) "currency"
                (Ojs.string_to_js x2411)
        let (get_minimumIntegerDigits : 'tags this -> float) =
          fun (x2413 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2413)
                 "minimumIntegerDigits")
        let (set_minimumIntegerDigits : 'tags this -> float -> unit) =
          fun (x2415 : 'tags this) ->
            fun (x2416 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2415)
                "minimumIntegerDigits" (Ojs.float_to_js x2416)
        let (get_minimumFractionDigits : 'tags this -> float) =
          fun (x2418 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2418)
                 "minimumFractionDigits")
        let (set_minimumFractionDigits : 'tags this -> float -> unit) =
          fun (x2420 : 'tags this) ->
            fun (x2421 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2420)
                "minimumFractionDigits" (Ojs.float_to_js x2421)
        let (get_maximumFractionDigits : 'tags this -> float) =
          fun (x2423 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2423)
                 "maximumFractionDigits")
        let (set_maximumFractionDigits : 'tags this -> float -> unit) =
          fun (x2425 : 'tags this) ->
            fun (x2426 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2425)
                "maximumFractionDigits" (Ojs.float_to_js x2426)
        let (get_minimumSignificantDigits : 'tags this -> float) =
          fun (x2428 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2428)
                 "minimumSignificantDigits")
        let (set_minimumSignificantDigits : 'tags this -> float -> unit) =
          fun (x2430 : 'tags this) ->
            fun (x2431 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2430)
                "minimumSignificantDigits" (Ojs.float_to_js x2431)
        let (get_maximumSignificantDigits : 'tags this -> float) =
          fun (x2433 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2433)
                 "maximumSignificantDigits")
        let (set_maximumSignificantDigits : 'tags this -> float -> unit) =
          fun (x2435 : 'tags this) ->
            fun (x2436 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2435)
                "maximumSignificantDigits" (Ojs.float_to_js x2436)
        let (get_useGrouping : 'tags this -> bool) =
          fun (x2438 : 'tags this) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2438) "useGrouping")
        let (set_useGrouping : 'tags this -> bool -> unit) =
          fun (x2440 : 'tags this) ->
            fun (x2441 : bool) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2440) "useGrouping"
                (Ojs.bool_to_js x2441)
        let (create :
          compactDisplay:[ `L_s56_long  | `L_s89_short ] ->
            notation:[ `L_s27_compact  | `L_s34_engineering 
                     | `L_s85_scientific  | `L_s90_standard ]
              ->
              signDisplay:[ `L_s21_always  | `L_s22_auto 
                          | `L_s36_exceptZero  | `L_s69_never ]
                ->
                unit:string ->
                  unitDisplay:[ `L_s56_long  | `L_s68_narrow 
                              | `L_s89_short ]
                    ->
                    currencyDisplay:string ->
                      currencySign:string ->
                        locale:string ->
                          numberingSystem:string ->
                            style:string ->
                              currency:string ->
                                minimumIntegerDigits:float ->
                                  minimumFractionDigits:float ->
                                    maximumFractionDigits:float ->
                                      minimumSignificantDigits:float ->
                                        maximumSignificantDigits:float ->
                                          useGrouping:bool -> unit -> t)
          =
          fun ~compactDisplay:(x2443 : [ `L_s56_long  | `L_s89_short ]) ->
            fun
              ~notation:(x2444 :
                          [ `L_s27_compact  | `L_s34_engineering 
                          | `L_s85_scientific  | `L_s90_standard ])
              ->
              fun
                ~signDisplay:(x2445 :
                               [ `L_s21_always  | `L_s22_auto 
                               | `L_s36_exceptZero  | `L_s69_never ])
                ->
                fun ~unit:(x2446 : string) ->
                  fun
                    ~unitDisplay:(x2447 :
                                   [ `L_s56_long  | `L_s68_narrow 
                                   | `L_s89_short ])
                    ->
                    fun ~currencyDisplay:(x2448 : string) ->
                      fun ~currencySign:(x2449 : string) ->
                        fun ~locale:(x2450 : string) ->
                          fun ~numberingSystem:(x2451 : string) ->
                            fun ~style:(x2452 : string) ->
                              fun ~currency:(x2453 : string) ->
                                fun ~minimumIntegerDigits:(x2454 : float) ->
                                  fun ~minimumFractionDigits:(x2455 : float)
                                    ->
                                    fun
                                      ~maximumFractionDigits:(x2456 : float)
                                      ->
                                      fun
                                        ~minimumSignificantDigits:(x2457 :
                                                                    float)
                                        ->
                                        fun
                                          ~maximumSignificantDigits:(x2458 :
                                                                    float)
                                          ->
                                          fun ~useGrouping:(x2459 : bool) ->
                                            fun () ->
                                              let x2460 = Ojs.empty_obj () in
                                              Ojs.set_prop_ascii x2460
                                                "compactDisplay"
                                                (match x2443 with
                                                 | `L_s56_long ->
                                                     Ojs.string_to_js "long"
                                                 | `L_s89_short ->
                                                     Ojs.string_to_js "short");
                                              Ojs.set_prop_ascii x2460
                                                "notation"
                                                (match x2444 with
                                                 | `L_s27_compact ->
                                                     Ojs.string_to_js
                                                       "compact"
                                                 | `L_s34_engineering ->
                                                     Ojs.string_to_js
                                                       "engineering"
                                                 | `L_s85_scientific ->
                                                     Ojs.string_to_js
                                                       "scientific"
                                                 | `L_s90_standard ->
                                                     Ojs.string_to_js
                                                       "standard");
                                              Ojs.set_prop_ascii x2460
                                                "signDisplay"
                                                (match x2445 with
                                                 | `L_s21_always ->
                                                     Ojs.string_to_js
                                                       "always"
                                                 | `L_s22_auto ->
                                                     Ojs.string_to_js "auto"
                                                 | `L_s36_exceptZero ->
                                                     Ojs.string_to_js
                                                       "exceptZero"
                                                 | `L_s69_never ->
                                                     Ojs.string_to_js "never");
                                              Ojs.set_prop_ascii x2460 "unit"
                                                (Ojs.string_to_js x2446);
                                              Ojs.set_prop_ascii x2460
                                                "unitDisplay"
                                                (match x2447 with
                                                 | `L_s56_long ->
                                                     Ojs.string_to_js "long"
                                                 | `L_s68_narrow ->
                                                     Ojs.string_to_js
                                                       "narrow"
                                                 | `L_s89_short ->
                                                     Ojs.string_to_js "short");
                                              Ojs.set_prop_ascii x2460
                                                "currencyDisplay"
                                                (Ojs.string_to_js x2448);
                                              Ojs.set_prop_ascii x2460
                                                "currencySign"
                                                (Ojs.string_to_js x2449);
                                              Ojs.set_prop_ascii x2460
                                                "locale"
                                                (Ojs.string_to_js x2450);
                                              Ojs.set_prop_ascii x2460
                                                "numberingSystem"
                                                (Ojs.string_to_js x2451);
                                              Ojs.set_prop_ascii x2460
                                                "style"
                                                (Ojs.string_to_js x2452);
                                              Ojs.set_prop_ascii x2460
                                                "currency"
                                                (Ojs.string_to_js x2453);
                                              Ojs.set_prop_ascii x2460
                                                "minimumIntegerDigits"
                                                (Ojs.float_to_js x2454);
                                              Ojs.set_prop_ascii x2460
                                                "minimumFractionDigits"
                                                (Ojs.float_to_js x2455);
                                              Ojs.set_prop_ascii x2460
                                                "maximumFractionDigits"
                                                (Ojs.float_to_js x2456);
                                              Ojs.set_prop_ascii x2460
                                                "minimumSignificantDigits"
                                                (Ojs.float_to_js x2457);
                                              Ojs.set_prop_ascii x2460
                                                "maximumSignificantDigits"
                                                (Ojs.float_to_js x2458);
                                              Ojs.set_prop_ascii x2460
                                                "useGrouping"
                                                (Ojs.bool_to_js x2459);
                                              t_of_js x2460
        let cast_from = Obj.magic
      end
    module ES2020NumberFormatPartType =
      struct
        type t =
          [ `L_s27_compact  | `L_s37_exponentInteger 
          | `L_s38_exponentMinusSign  | `L_s39_exponentSeparator 
          | `L_s96_unit  | `L_s97_unknown ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2462 : Ojs.t) ->
            let x2463 = x2462 in
            match Ojs.string_of_js x2463 with
            | "compact" -> `L_s27_compact
            | "exponentInteger" -> `L_s37_exponentInteger
            | "exponentMinusSign" -> `L_s38_exponentMinusSign
            | "exponentSeparator" -> `L_s39_exponentSeparator
            | "unit" -> `L_s96_unit
            | "unknown" -> `L_s97_unknown
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x2461 :
              [ `L_s27_compact  | `L_s37_exponentInteger 
              | `L_s38_exponentMinusSign  | `L_s39_exponentSeparator 
              | `L_s96_unit  | `L_s97_unknown ])
            ->
            match x2461 with
            | `L_s27_compact -> Ojs.string_to_js "compact"
            | `L_s37_exponentInteger -> Ojs.string_to_js "exponentInteger"
            | `L_s38_exponentMinusSign ->
                Ojs.string_to_js "exponentMinusSign"
            | `L_s39_exponentSeparator ->
                Ojs.string_to_js "exponentSeparator"
            | `L_s96_unit -> Ojs.string_to_js "unit"
            | `L_s97_unknown -> Ojs.string_to_js "unknown"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2465 : Ojs.t) -> t_of_js x2465
        and t_0_to_js : t_0 -> Ojs.t = fun (x2464 : t) -> t_to_js x2464
      end
    module ES2018NumberFormatPartType =
      struct
        type t =
          [ `L_s26_code  | `L_s28_currency  | `L_s32_decimal 
          | `L_s42_fraction  | `L_s45_group  | `L_s52_infinity 
          | `L_s53_integer  | `L_s55_literal  | `L_s61_minusSign 
          | `L_s66_name  | `L_s67_nan  | `L_s78_percent 
          | `L_s79_percentSign  | `L_s80_plusSign  | `L_s92_symbol ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2467 : Ojs.t) ->
            let x2468 = x2467 in
            match Ojs.string_of_js x2468 with
            | "code" -> `L_s26_code
            | "currency" -> `L_s28_currency
            | "decimal" -> `L_s32_decimal
            | "fraction" -> `L_s42_fraction
            | "group" -> `L_s45_group
            | "infinity" -> `L_s52_infinity
            | "integer" -> `L_s53_integer
            | "literal" -> `L_s55_literal
            | "minusSign" -> `L_s61_minusSign
            | "name" -> `L_s66_name
            | "nan" -> `L_s67_nan
            | "percent" -> `L_s78_percent
            | "percentSign" -> `L_s79_percentSign
            | "plusSign" -> `L_s80_plusSign
            | "symbol" -> `L_s92_symbol
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x2466 :
              [ `L_s26_code  | `L_s28_currency  | `L_s32_decimal 
              | `L_s42_fraction  | `L_s45_group  | `L_s52_infinity 
              | `L_s53_integer  | `L_s55_literal  | `L_s61_minusSign 
              | `L_s66_name  | `L_s67_nan  | `L_s78_percent 
              | `L_s79_percentSign  | `L_s80_plusSign  | `L_s92_symbol ])
            ->
            match x2466 with
            | `L_s26_code -> Ojs.string_to_js "code"
            | `L_s28_currency -> Ojs.string_to_js "currency"
            | `L_s32_decimal -> Ojs.string_to_js "decimal"
            | `L_s42_fraction -> Ojs.string_to_js "fraction"
            | `L_s45_group -> Ojs.string_to_js "group"
            | `L_s52_infinity -> Ojs.string_to_js "infinity"
            | `L_s53_integer -> Ojs.string_to_js "integer"
            | `L_s55_literal -> Ojs.string_to_js "literal"
            | `L_s61_minusSign -> Ojs.string_to_js "minusSign"
            | `L_s66_name -> Ojs.string_to_js "name"
            | `L_s67_nan -> Ojs.string_to_js "nan"
            | `L_s78_percent -> Ojs.string_to_js "percent"
            | `L_s79_percentSign -> Ojs.string_to_js "percentSign"
            | `L_s80_plusSign -> Ojs.string_to_js "plusSign"
            | `L_s92_symbol -> Ojs.string_to_js "symbol"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2470 : Ojs.t) -> t_of_js x2470
        and t_0_to_js : t_0 -> Ojs.t = fun (x2469 : t) -> t_to_js x2469
      end
    module NumberFormatPartTypes =
      struct
        type t =
          [ `L_s26_code  | `L_s27_compact  | `L_s28_currency 
          | `L_s32_decimal  | `L_s37_exponentInteger 
          | `L_s38_exponentMinusSign  | `L_s39_exponentSeparator 
          | `L_s42_fraction  | `L_s45_group  | `L_s52_infinity 
          | `L_s53_integer  | `L_s55_literal  | `L_s61_minusSign 
          | `L_s66_name  | `L_s67_nan  | `L_s78_percent 
          | `L_s79_percentSign  | `L_s80_plusSign  | `L_s92_symbol 
          | `L_s96_unit  | `L_s97_unknown ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2472 : Ojs.t) ->
            let x2473 = x2472 in
            match Ojs.string_of_js x2473 with
            | "code" -> `L_s26_code
            | "compact" -> `L_s27_compact
            | "currency" -> `L_s28_currency
            | "decimal" -> `L_s32_decimal
            | "exponentInteger" -> `L_s37_exponentInteger
            | "exponentMinusSign" -> `L_s38_exponentMinusSign
            | "exponentSeparator" -> `L_s39_exponentSeparator
            | "fraction" -> `L_s42_fraction
            | "group" -> `L_s45_group
            | "infinity" -> `L_s52_infinity
            | "integer" -> `L_s53_integer
            | "literal" -> `L_s55_literal
            | "minusSign" -> `L_s61_minusSign
            | "name" -> `L_s66_name
            | "nan" -> `L_s67_nan
            | "percent" -> `L_s78_percent
            | "percentSign" -> `L_s79_percentSign
            | "plusSign" -> `L_s80_plusSign
            | "symbol" -> `L_s92_symbol
            | "unit" -> `L_s96_unit
            | "unknown" -> `L_s97_unknown
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x2471 :
              [ `L_s26_code  | `L_s27_compact  | `L_s28_currency 
              | `L_s32_decimal  | `L_s37_exponentInteger 
              | `L_s38_exponentMinusSign  | `L_s39_exponentSeparator 
              | `L_s42_fraction  | `L_s45_group  | `L_s52_infinity 
              | `L_s53_integer  | `L_s55_literal  | `L_s61_minusSign 
              | `L_s66_name  | `L_s67_nan  | `L_s78_percent 
              | `L_s79_percentSign  | `L_s80_plusSign  | `L_s92_symbol 
              | `L_s96_unit  | `L_s97_unknown ])
            ->
            match x2471 with
            | `L_s26_code -> Ojs.string_to_js "code"
            | `L_s27_compact -> Ojs.string_to_js "compact"
            | `L_s28_currency -> Ojs.string_to_js "currency"
            | `L_s32_decimal -> Ojs.string_to_js "decimal"
            | `L_s37_exponentInteger -> Ojs.string_to_js "exponentInteger"
            | `L_s38_exponentMinusSign ->
                Ojs.string_to_js "exponentMinusSign"
            | `L_s39_exponentSeparator ->
                Ojs.string_to_js "exponentSeparator"
            | `L_s42_fraction -> Ojs.string_to_js "fraction"
            | `L_s45_group -> Ojs.string_to_js "group"
            | `L_s52_infinity -> Ojs.string_to_js "infinity"
            | `L_s53_integer -> Ojs.string_to_js "integer"
            | `L_s55_literal -> Ojs.string_to_js "literal"
            | `L_s61_minusSign -> Ojs.string_to_js "minusSign"
            | `L_s66_name -> Ojs.string_to_js "name"
            | `L_s67_nan -> Ojs.string_to_js "nan"
            | `L_s78_percent -> Ojs.string_to_js "percent"
            | `L_s79_percentSign -> Ojs.string_to_js "percentSign"
            | `L_s80_plusSign -> Ojs.string_to_js "plusSign"
            | `L_s92_symbol -> Ojs.string_to_js "symbol"
            | `L_s96_unit -> Ojs.string_to_js "unit"
            | `L_s97_unknown -> Ojs.string_to_js "unknown"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2475 : Ojs.t) -> t_of_js x2475
        and t_0_to_js : t_0 -> Ojs.t = fun (x2474 : t) -> t_to_js x2474
      end
    module NumberFormatPart =
      struct
        type t = [ `Intl_NumberFormatPart ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2477 : Ojs.t) -> t_of_js x2477
        and t_0_to_js : t_0 -> Ojs.t = fun (x2476 : t) -> t_to_js x2476
        type tags = [ `Intl_NumberFormatPart ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_NumberFormatPart ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2480 : Ojs.t) -> intf_of_js __tags_of_js x2480
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2478 : __tags intf) -> intf_to_js __tags_to_js x2478
        let (get_type : 'tags this -> NumberFormatPartTypes.t) =
          fun (x2482 : 'tags this) ->
            NumberFormatPartTypes.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2482) "type")
        let (set_type : 'tags this -> NumberFormatPartTypes.t -> unit) =
          fun (x2484 : 'tags this) ->
            fun (x2485 : NumberFormatPartTypes.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2484) "type"
                (NumberFormatPartTypes.t_to_js x2485)
        let (get_value : 'tags this -> string) =
          fun (x2487 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2487) "value")
        let (set_value : 'tags this -> string -> unit) =
          fun (x2489 : 'tags this) ->
            fun (x2490 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2489) "value"
                (Ojs.string_to_js x2490)
        let (create :
          type_:NumberFormatPartTypes.t -> value:string -> unit -> t) =
          fun ~type_:(x2492 : NumberFormatPartTypes.t) ->
            fun ~value:(x2493 : string) ->
              fun () ->
                let x2494 = Ojs.empty_obj () in
                Ojs.set_prop_ascii x2494 "type"
                  (NumberFormatPartTypes.t_to_js x2492);
                Ojs.set_prop_ascii x2494 "value" (Ojs.string_to_js x2493);
                t_of_js x2494
        let cast_from = Obj.magic
      end
    module NumberFormatOptions =
      struct
        type t = [ `Intl_NumberFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2496 : Ojs.t) -> t_of_js x2496
        and t_0_to_js : t_0 -> Ojs.t = fun (x2495 : t) -> t_to_js x2495
        type tags = [ `Intl_NumberFormatOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_NumberFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2499 : Ojs.t) -> intf_of_js __tags_of_js x2499
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2497 : __tags intf) -> intf_to_js __tags_to_js x2497
        let (get_compactDisplay :
          'tags this -> [ `L_s56_long  | `L_s89_short ] option) =
          fun (x2501 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2503 : Ojs.t) ->
                 let x2504 = x2503 in
                 match Ojs.string_of_js x2504 with
                 | "long" -> `L_s56_long
                 | "short" -> `L_s89_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2501)
                 "compactDisplay")
        let (set_compactDisplay :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s89_short ] 
            | `U2 of [ `L_s56_long ] ] -> unit)
          =
          fun (x2505 : 'tags this) ->
            fun
              (x2506 :
                [ `Undefined of undefined  | `U1 of [ `L_s89_short ] 
                | `U2 of [ `L_s56_long ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2505)
                "compactDisplay"
                (match x2506 with
                 | `Undefined x2507 -> undefined_to_js x2507
                 | `U1 x2508 ->
                     (match x2508 with
                      | `L_s89_short -> Ojs.string_to_js "short")
                 | `U2 x2509 ->
                     (match x2509 with
                      | `L_s56_long -> Ojs.string_to_js "long"))
        let (get_notation :
          'tags this ->
            [ `L_s27_compact  | `L_s34_engineering  | `L_s85_scientific 
            | `L_s90_standard ] option)
          =
          fun (x2511 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2513 : Ojs.t) ->
                 let x2514 = x2513 in
                 match Ojs.string_of_js x2514 with
                 | "compact" -> `L_s27_compact
                 | "engineering" -> `L_s34_engineering
                 | "scientific" -> `L_s85_scientific
                 | "standard" -> `L_s90_standard
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2511) "notation")
        let (set_notation :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s90_standard ] 
            | `U2 of [ `L_s85_scientific ]  | `U3 of [ `L_s34_engineering ] 
            | `U4 of [ `L_s27_compact ] ] -> unit)
          =
          fun (x2515 : 'tags this) ->
            fun
              (x2516 :
                [ `Undefined of undefined  | `U1 of [ `L_s90_standard ] 
                | `U2 of [ `L_s85_scientific ] 
                | `U3 of [ `L_s34_engineering ] 
                | `U4 of [ `L_s27_compact ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2515) "notation"
                (match x2516 with
                 | `Undefined x2517 -> undefined_to_js x2517
                 | `U1 x2518 ->
                     (match x2518 with
                      | `L_s90_standard -> Ojs.string_to_js "standard")
                 | `U2 x2519 ->
                     (match x2519 with
                      | `L_s85_scientific -> Ojs.string_to_js "scientific")
                 | `U3 x2520 ->
                     (match x2520 with
                      | `L_s34_engineering -> Ojs.string_to_js "engineering")
                 | `U4 x2521 ->
                     (match x2521 with
                      | `L_s27_compact -> Ojs.string_to_js "compact"))
        let (get_signDisplay :
          'tags this ->
            [ `L_s21_always  | `L_s22_auto  | `L_s36_exceptZero 
            | `L_s69_never ] option)
          =
          fun (x2523 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2525 : Ojs.t) ->
                 let x2526 = x2525 in
                 match Ojs.string_of_js x2526 with
                 | "always" -> `L_s21_always
                 | "auto" -> `L_s22_auto
                 | "exceptZero" -> `L_s36_exceptZero
                 | "never" -> `L_s69_never
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2523) "signDisplay")
        let (set_signDisplay :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s22_auto ] 
            | `U2 of [ `L_s69_never ]  | `U3 of [ `L_s21_always ] 
            | `U4 of [ `L_s36_exceptZero ] ] -> unit)
          =
          fun (x2527 : 'tags this) ->
            fun
              (x2528 :
                [ `Undefined of undefined  | `U1 of [ `L_s22_auto ] 
                | `U2 of [ `L_s69_never ]  | `U3 of [ `L_s21_always ] 
                | `U4 of [ `L_s36_exceptZero ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2527) "signDisplay"
                (match x2528 with
                 | `Undefined x2529 -> undefined_to_js x2529
                 | `U1 x2530 ->
                     (match x2530 with
                      | `L_s22_auto -> Ojs.string_to_js "auto")
                 | `U2 x2531 ->
                     (match x2531 with
                      | `L_s69_never -> Ojs.string_to_js "never")
                 | `U3 x2532 ->
                     (match x2532 with
                      | `L_s21_always -> Ojs.string_to_js "always")
                 | `U4 x2533 ->
                     (match x2533 with
                      | `L_s36_exceptZero -> Ojs.string_to_js "exceptZero"))
        let (get_unit : 'tags this -> string option) =
          fun (x2535 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2535) "unit")
        let (set_unit :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x2538 : 'tags this) ->
            fun (x2539 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2538) "unit"
                (match x2539 with
                 | `Undefined x2540 -> undefined_to_js x2540
                 | `U1 x2541 -> Ojs.string_to_js x2541)
        let (get_unitDisplay :
          'tags this ->
            [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ] option)
          =
          fun (x2543 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2545 : Ojs.t) ->
                 let x2546 = x2545 in
                 match Ojs.string_of_js x2546 with
                 | "long" -> `L_s56_long
                 | "narrow" -> `L_s68_narrow
                 | "short" -> `L_s89_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2543) "unitDisplay")
        let (set_unitDisplay :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s89_short ] 
            | `U2 of [ `L_s56_long ]  | `U3 of [ `L_s68_narrow ] ] -> 
              unit)
          =
          fun (x2547 : 'tags this) ->
            fun
              (x2548 :
                [ `Undefined of undefined  | `U1 of [ `L_s89_short ] 
                | `U2 of [ `L_s56_long ]  | `U3 of [ `L_s68_narrow ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2547) "unitDisplay"
                (match x2548 with
                 | `Undefined x2549 -> undefined_to_js x2549
                 | `U1 x2550 ->
                     (match x2550 with
                      | `L_s89_short -> Ojs.string_to_js "short")
                 | `U2 x2551 ->
                     (match x2551 with
                      | `L_s56_long -> Ojs.string_to_js "long")
                 | `U3 x2552 ->
                     (match x2552 with
                      | `L_s68_narrow -> Ojs.string_to_js "narrow"))
        let (get_currencyDisplay : 'tags this -> string option) =
          fun (x2554 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2554)
                 "currencyDisplay")
        let (set_currencyDisplay :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x2557 : 'tags this) ->
            fun (x2558 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2557)
                "currencyDisplay"
                (match x2558 with
                 | `Undefined x2559 -> undefined_to_js x2559
                 | `U1 x2560 -> Ojs.string_to_js x2560)
        let (get_currencySign : 'tags this -> string option) =
          fun (x2562 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2562) "currencySign")
        let (set_currencySign :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x2565 : 'tags this) ->
            fun (x2566 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2565) "currencySign"
                (match x2566 with
                 | `Undefined x2567 -> undefined_to_js x2567
                 | `U1 x2568 -> Ojs.string_to_js x2568)
        let (get_localeMatcher : 'tags this -> string option) =
          fun (x2570 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2570)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x2573 : 'tags this) ->
            fun (x2574 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2573) "localeMatcher"
                (match x2574 with
                 | `Undefined x2575 -> undefined_to_js x2575
                 | `U1 x2576 -> Ojs.string_to_js x2576)
        let (get_style : 'tags this -> string option) =
          fun (x2578 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2578) "style")
        let (set_style :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x2581 : 'tags this) ->
            fun (x2582 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2581) "style"
                (match x2582 with
                 | `Undefined x2583 -> undefined_to_js x2583
                 | `U1 x2584 -> Ojs.string_to_js x2584)
        let (get_currency : 'tags this -> string option) =
          fun (x2586 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2586) "currency")
        let (set_currency :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x2589 : 'tags this) ->
            fun (x2590 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2589) "currency"
                (match x2590 with
                 | `Undefined x2591 -> undefined_to_js x2591
                 | `U1 x2592 -> Ojs.string_to_js x2592)
        let (get_currencySign' : 'tags this -> string option) =
          fun (x2594 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2594) "currencySign")
        let (set_currencySign' :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x2597 : 'tags this) ->
            fun (x2598 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2597) "currencySign"
                (match x2598 with
                 | `Undefined x2599 -> undefined_to_js x2599
                 | `U1 x2600 -> Ojs.string_to_js x2600)
        let (get_useGrouping : 'tags this -> bool option) =
          fun (x2602 : 'tags this) ->
            Ojs.option_of_js Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2602) "useGrouping")
        let (set_useGrouping :
          'tags this -> [ `Undefined of undefined  | `U1 of bool ] -> unit) =
          fun (x2605 : 'tags this) ->
            fun (x2606 : [ `Undefined of undefined  | `U1 of bool ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2605) "useGrouping"
                (match x2606 with
                 | `Undefined x2607 -> undefined_to_js x2607
                 | `U1 x2608 -> Ojs.bool_to_js x2608)
        let (get_minimumIntegerDigits : 'tags this -> float option) =
          fun (x2610 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2610)
                 "minimumIntegerDigits")
        let (set_minimumIntegerDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2613 : 'tags this) ->
            fun (x2614 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2613)
                "minimumIntegerDigits"
                (match x2614 with
                 | `Undefined x2615 -> undefined_to_js x2615
                 | `U1 x2616 -> Ojs.float_to_js x2616)
        let (get_minimumFractionDigits : 'tags this -> float option) =
          fun (x2618 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2618)
                 "minimumFractionDigits")
        let (set_minimumFractionDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2621 : 'tags this) ->
            fun (x2622 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2621)
                "minimumFractionDigits"
                (match x2622 with
                 | `Undefined x2623 -> undefined_to_js x2623
                 | `U1 x2624 -> Ojs.float_to_js x2624)
        let (get_maximumFractionDigits : 'tags this -> float option) =
          fun (x2626 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2626)
                 "maximumFractionDigits")
        let (set_maximumFractionDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2629 : 'tags this) ->
            fun (x2630 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2629)
                "maximumFractionDigits"
                (match x2630 with
                 | `Undefined x2631 -> undefined_to_js x2631
                 | `U1 x2632 -> Ojs.float_to_js x2632)
        let (get_minimumSignificantDigits : 'tags this -> float option) =
          fun (x2634 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2634)
                 "minimumSignificantDigits")
        let (set_minimumSignificantDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2637 : 'tags this) ->
            fun (x2638 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2637)
                "minimumSignificantDigits"
                (match x2638 with
                 | `Undefined x2639 -> undefined_to_js x2639
                 | `U1 x2640 -> Ojs.float_to_js x2640)
        let (get_maximumSignificantDigits : 'tags this -> float option) =
          fun (x2642 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2642)
                 "maximumSignificantDigits")
        let (set_maximumSignificantDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2645 : 'tags this) ->
            fun (x2646 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2645)
                "maximumSignificantDigits"
                (match x2646 with
                 | `Undefined x2647 -> undefined_to_js x2647
                 | `U1 x2648 -> Ojs.float_to_js x2648)
        let (create :
          ?compactDisplay:[ `L_s56_long  | `L_s89_short ] ->
            ?notation:[ `L_s27_compact  | `L_s34_engineering 
                      | `L_s85_scientific  | `L_s90_standard ]
              ->
              ?signDisplay:[ `L_s21_always  | `L_s22_auto 
                           | `L_s36_exceptZero  | `L_s69_never ]
                ->
                ?unit:string ->
                  ?unitDisplay:[ `L_s56_long  | `L_s68_narrow 
                               | `L_s89_short ]
                    ->
                    ?currencyDisplay:string ->
                      ?currencySign:string ->
                        ?localeMatcher:string ->
                          ?style:string ->
                            ?currency:string ->
                              ?currencySign:string ->
                                ?useGrouping:bool ->
                                  ?minimumIntegerDigits:float ->
                                    ?minimumFractionDigits:float ->
                                      ?maximumFractionDigits:float ->
                                        ?minimumSignificantDigits:float ->
                                          ?maximumSignificantDigits:float ->
                                            unit -> t)
          =
          fun
            ?compactDisplay:(x2650 : [ `L_s56_long  | `L_s89_short ] option)
            ->
            fun
              ?notation:(x2651 :
                          [ `L_s27_compact  | `L_s34_engineering 
                          | `L_s85_scientific  | `L_s90_standard ] option)
              ->
              fun
                ?signDisplay:(x2652 :
                               [ `L_s21_always  | `L_s22_auto 
                               | `L_s36_exceptZero  | `L_s69_never ] option)
                ->
                fun ?unit:(x2653 : string option) ->
                  fun
                    ?unitDisplay:(x2654 :
                                   [ `L_s56_long  | `L_s68_narrow 
                                   | `L_s89_short ] option)
                    ->
                    fun ?currencyDisplay:(x2655 : string option) ->
                      fun ?currencySign:(x2656 : string option) ->
                        fun ?localeMatcher:(x2657 : string option) ->
                          fun ?style:(x2658 : string option) ->
                            fun ?currency:(x2659 : string option) ->
                              fun ?currencySign:(x2660 : string option) ->
                                fun ?useGrouping:(x2661 : bool option) ->
                                  fun
                                    ?minimumIntegerDigits:(x2662 :
                                                            float option)
                                    ->
                                    fun
                                      ?minimumFractionDigits:(x2663 :
                                                               float option)
                                      ->
                                      fun
                                        ?maximumFractionDigits:(x2664 :
                                                                 float option)
                                        ->
                                        fun
                                          ?minimumSignificantDigits:(x2665 :
                                                                    float
                                                                    option)
                                          ->
                                          fun
                                            ?maximumSignificantDigits:
                                            (x2666 : float option) ->
                                            fun () ->
                                              let x2667 = Ojs.empty_obj () in
                                              (match x2650 with
                                               | Some x2684 ->
                                                   Ojs.set_prop_ascii x2667
                                                     "compactDisplay"
                                                     (match x2684 with
                                                      | `L_s56_long ->
                                                          Ojs.string_to_js
                                                            "long"
                                                      | `L_s89_short ->
                                                          Ojs.string_to_js
                                                            "short")
                                               | None -> ());
                                              (match x2651 with
                                               | Some x2683 ->
                                                   Ojs.set_prop_ascii x2667
                                                     "notation"
                                                     (match x2683 with
                                                      | `L_s27_compact ->
                                                          Ojs.string_to_js
                                                            "compact"
                                                      | `L_s34_engineering ->
                                                          Ojs.string_to_js
                                                            "engineering"
                                                      | `L_s85_scientific ->
                                                          Ojs.string_to_js
                                                            "scientific"
                                                      | `L_s90_standard ->
                                                          Ojs.string_to_js
                                                            "standard")
                                               | None -> ());
                                              (match x2652 with
                                               | Some x2682 ->
                                                   Ojs.set_prop_ascii x2667
                                                     "signDisplay"
                                                     (match x2682 with
                                                      | `L_s21_always ->
                                                          Ojs.string_to_js
                                                            "always"
                                                      | `L_s22_auto ->
                                                          Ojs.string_to_js
                                                            "auto"
                                                      | `L_s36_exceptZero ->
                                                          Ojs.string_to_js
                                                            "exceptZero"
                                                      | `L_s69_never ->
                                                          Ojs.string_to_js
                                                            "never")
                                               | None -> ());
                                              (match x2653 with
                                               | Some x2681 ->
                                                   Ojs.set_prop_ascii x2667
                                                     "unit"
                                                     (Ojs.string_to_js x2681)
                                               | None -> ());
                                              (match x2654 with
                                               | Some x2680 ->
                                                   Ojs.set_prop_ascii x2667
                                                     "unitDisplay"
                                                     (match x2680 with
                                                      | `L_s56_long ->
                                                          Ojs.string_to_js
                                                            "long"
                                                      | `L_s68_narrow ->
                                                          Ojs.string_to_js
                                                            "narrow"
                                                      | `L_s89_short ->
                                                          Ojs.string_to_js
                                                            "short")
                                               | None -> ());
                                              (match x2655 with
                                               | Some x2679 ->
                                                   Ojs.set_prop_ascii x2667
                                                     "currencyDisplay"
                                                     (Ojs.string_to_js x2679)
                                               | None -> ());
                                              (match x2656 with
                                               | Some x2678 ->
                                                   Ojs.set_prop_ascii x2667
                                                     "currencySign"
                                                     (Ojs.string_to_js x2678)
                                               | None -> ());
                                              (match x2657 with
                                               | Some x2677 ->
                                                   Ojs.set_prop_ascii x2667
                                                     "localeMatcher"
                                                     (Ojs.string_to_js x2677)
                                               | None -> ());
                                              (match x2658 with
                                               | Some x2676 ->
                                                   Ojs.set_prop_ascii x2667
                                                     "style"
                                                     (Ojs.string_to_js x2676)
                                               | None -> ());
                                              (match x2659 with
                                               | Some x2675 ->
                                                   Ojs.set_prop_ascii x2667
                                                     "currency"
                                                     (Ojs.string_to_js x2675)
                                               | None -> ());
                                              (match x2660 with
                                               | Some x2674 ->
                                                   Ojs.set_prop_ascii x2667
                                                     "currencySign"
                                                     (Ojs.string_to_js x2674)
                                               | None -> ());
                                              (match x2661 with
                                               | Some x2673 ->
                                                   Ojs.set_prop_ascii x2667
                                                     "useGrouping"
                                                     (Ojs.bool_to_js x2673)
                                               | None -> ());
                                              (match x2662 with
                                               | Some x2672 ->
                                                   Ojs.set_prop_ascii x2667
                                                     "minimumIntegerDigits"
                                                     (Ojs.float_to_js x2672)
                                               | None -> ());
                                              (match x2663 with
                                               | Some x2671 ->
                                                   Ojs.set_prop_ascii x2667
                                                     "minimumFractionDigits"
                                                     (Ojs.float_to_js x2671)
                                               | None -> ());
                                              (match x2664 with
                                               | Some x2670 ->
                                                   Ojs.set_prop_ascii x2667
                                                     "maximumFractionDigits"
                                                     (Ojs.float_to_js x2670)
                                               | None -> ());
                                              (match x2665 with
                                               | Some x2669 ->
                                                   Ojs.set_prop_ascii x2667
                                                     "minimumSignificantDigits"
                                                     (Ojs.float_to_js x2669)
                                               | None -> ());
                                              (match x2666 with
                                               | Some x2668 ->
                                                   Ojs.set_prop_ascii x2667
                                                     "maximumSignificantDigits"
                                                     (Ojs.float_to_js x2668)
                                               | None -> ());
                                              t_of_js x2667
        let cast_from = Obj.magic
      end
    module NumberFormat =
      struct
        type t = [ `Intl_NumberFormat ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2686 : Ojs.t) -> t_of_js x2686
        and t_0_to_js : t_0 -> Ojs.t = fun (x2685 : t) -> t_to_js x2685
        type tags = [ `Intl_NumberFormat ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_NumberFormat ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2689 : Ojs.t) -> intf_of_js __tags_of_js x2689
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2687 : __tags intf) -> intf_to_js __tags_to_js x2687
        let (formatRange :
          'tags this ->
            startDate:[ `U1 of float  | `U2 of bigint ] ->
              endDate:[ `U1 of float  | `U2 of bigint ] -> string)
          =
          fun (x2697 : 'tags this) ->
            fun ~startDate:(x2691 : [ `U1 of float  | `U2 of bigint ]) ->
              fun ~endDate:(x2694 : [ `U1 of float  | `U2 of bigint ]) ->
                Ojs.string_of_js
                  (Ojs.call (this_to_js Obj.magic x2697) "formatRange"
                     [|((match x2691 with
                         | `U1 x2692 -> Ojs.float_to_js x2692
                         | `U2 x2693 -> bigint_to_js x2693));((match x2694
                                                               with
                                                               | `U1 x2695 ->
                                                                   Ojs.float_to_js
                                                                    x2695
                                                               | `U2 x2696 ->
                                                                   bigint_to_js
                                                                    x2696))|])
        let (formatRangeToParts :
          'tags this ->
            startDate:[ `U1 of float  | `U2 of bigint ] ->
              endDate:[ `U1 of float  | `U2 of bigint ] ->
                NumberFormatPart.t list)
          =
          fun (x2705 : 'tags this) ->
            fun ~startDate:(x2699 : [ `U1 of float  | `U2 of bigint ]) ->
              fun ~endDate:(x2702 : [ `U1 of float  | `U2 of bigint ]) ->
                Ojs.list_of_js NumberFormatPart.t_of_js
                  (Ojs.call (this_to_js Obj.magic x2705) "formatRangeToParts"
                     [|((match x2699 with
                         | `U1 x2700 -> Ojs.float_to_js x2700
                         | `U2 x2701 -> bigint_to_js x2701));((match x2702
                                                               with
                                                               | `U1 x2703 ->
                                                                   Ojs.float_to_js
                                                                    x2703
                                                               | `U2 x2704 ->
                                                                   bigint_to_js
                                                                    x2704))|])
        let (format :
          'tags this -> value:[ `U1 of float  | `U2 of bigint ] -> string) =
          fun (x2711 : 'tags this) ->
            fun ~value:(x2708 : [ `U1 of float  | `U2 of bigint ]) ->
              Ojs.string_of_js
                (Ojs.call (this_to_js Obj.magic x2711) "format"
                   [|((match x2708 with
                       | `U1 x2709 -> Ojs.float_to_js x2709
                       | `U2 x2710 -> bigint_to_js x2710))|])
        let (resolvedOptions : 'tags this -> ResolvedNumberFormatOptions.t) =
          fun (x2713 : 'tags this) ->
            ResolvedNumberFormatOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x2713) "resolvedOptions" [||])
        let (formatToParts :
          'tags this ->
            ?number:[ `U1 of float  | `U2 of bigint ] ->
              unit -> NumberFormatPart.t list)
          =
          fun (x2720 : 'tags this) ->
            fun ?number:(x2715 : [ `U1 of float  | `U2 of bigint ] option) ->
              fun () ->
                Ojs.list_of_js NumberFormatPart.t_of_js
                  (let x2722 = this_to_js Obj.magic x2720 in
                   Ojs.call (Ojs.get_prop_ascii x2722 "formatToParts")
                     "apply"
                     [|x2722;((let x2716 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x2715 with
                                | Some x2717 ->
                                    ignore
                                      (Ojs.call x2716 "push"
                                         [|((match x2717 with
                                             | `U1 x2718 ->
                                                 Ojs.float_to_js x2718
                                             | `U2 x2719 ->
                                                 bigint_to_js x2719))|])
                                | None -> ());
                               x2716))|])
        let (format' : 'tags this -> value:float -> string) =
          fun (x2725 : 'tags this) ->
            fun ~value:(x2724 : float) ->
              Ojs.string_of_js
                (Ojs.call (this_to_js Obj.magic x2725) "format"
                   [|(Ojs.float_to_js x2724)|])
        let (resolvedOptions' : 'tags this -> ResolvedNumberFormatOptions.t)
          =
          fun (x2727 : 'tags this) ->
            ResolvedNumberFormatOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x2727) "resolvedOptions" [||])
        let cast_from = Obj.magic
        let (create :
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:NumberFormatOptions.t -> unit -> t)
          =
          fun
            ?locales:(x2729 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x2730 : NumberFormatOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "NumberFormat")
                     (let x2731 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x2729 with
                       | Some x2733 ->
                           ignore
                             (Ojs.call x2731 "push"
                                [|((match x2733 with
                                    | `U1 x2734 -> Ojs.string_to_js x2734
                                    | `U2 x2735 ->
                                        Ojs.list_to_js Ojs.string_to_js x2735))|])
                       | None -> ());
                      (match x2730 with
                       | Some x2732 ->
                           ignore
                             (Ojs.call x2731 "push"
                                [|(NumberFormatOptions.t_to_js x2732)|])
                       | None -> ());
                      x2731))
        let (invoke :
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:NumberFormatOptions.t -> unit -> t)
          =
          fun
            ?locales:(x2737 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x2738 : NumberFormatOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "NumberFormat")
                     "apply"
                     [|Ojs.null;((let x2739 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  (match x2737 with
                                   | Some x2741 ->
                                       ignore
                                         (Ojs.call x2739 "push"
                                            [|((match x2741 with
                                                | `U1 x2742 ->
                                                    Ojs.string_to_js x2742
                                                | `U2 x2743 ->
                                                    Ojs.list_to_js
                                                      Ojs.string_to_js x2743))|])
                                   | None -> ());
                                  (match x2738 with
                                   | Some x2740 ->
                                       ignore
                                         (Ojs.call x2739 "push"
                                            [|(NumberFormatOptions.t_to_js
                                                 x2740)|])
                                   | None -> ());
                                  x2739))|])
        let (supportedLocalesOf :
          locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:NumberFormatOptions.t -> unit -> string list)
          =
          fun ~locales:(x2745 : [ `U1 of string  | `U2 of string list ]) ->
            fun ?options:(x2746 : NumberFormatOptions.t option) ->
              fun () ->
                Ojs.list_of_js Ojs.string_of_js
                  (let x2752 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl") "NumberFormat" in
                   Ojs.call (Ojs.get_prop_ascii x2752 "supportedLocalesOf")
                     "apply"
                     [|x2752;((let x2747 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2747 "push"
                                    [|((match x2745 with
                                        | `U1 x2749 -> Ojs.string_to_js x2749
                                        | `U2 x2750 ->
                                            Ojs.list_to_js Ojs.string_to_js
                                              x2750))|]);
                               (match x2746 with
                                | Some x2748 ->
                                    ignore
                                      (Ojs.call x2747 "push"
                                         [|(NumberFormatOptions.t_to_js x2748)|])
                                | None -> ());
                               x2747))|])
      end
    module LocaleHourCycleKey =
      struct
        type t = [ `L_s46_h11  | `L_s47_h12  | `L_s48_h23  | `L_s49_h24 ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2755 : Ojs.t) ->
            let x2756 = x2755 in
            match Ojs.string_of_js x2756 with
            | "h11" -> `L_s46_h11
            | "h12" -> `L_s47_h12
            | "h23" -> `L_s48_h23
            | "h24" -> `L_s49_h24
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x2754 :
              [ `L_s46_h11  | `L_s47_h12  | `L_s48_h23  | `L_s49_h24 ])
            ->
            match x2754 with
            | `L_s46_h11 -> Ojs.string_to_js "h11"
            | `L_s47_h12 -> Ojs.string_to_js "h12"
            | `L_s48_h23 -> Ojs.string_to_js "h23"
            | `L_s49_h24 -> Ojs.string_to_js "h24"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2758 : Ojs.t) -> t_of_js x2758
        and t_0_to_js : t_0 -> Ojs.t = fun (x2757 : t) -> t_to_js x2757
      end
    module LocaleCollationCaseFirst =
      struct
        type t = [ `L_s40_false  | `L_s58_lower  | `L_s98_upper ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2760 : Ojs.t) ->
            let x2761 = x2760 in
            match Ojs.string_of_js x2761 with
            | "false" -> `L_s40_false
            | "lower" -> `L_s58_lower
            | "upper" -> `L_s98_upper
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x2759 : [ `L_s40_false  | `L_s58_lower  | `L_s98_upper ]) ->
            match x2759 with
            | `L_s40_false -> Ojs.string_to_js "false"
            | `L_s58_lower -> Ojs.string_to_js "lower"
            | `L_s98_upper -> Ojs.string_to_js "upper"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2763 : Ojs.t) -> t_of_js x2763
        and t_0_to_js : t_0 -> Ojs.t = fun (x2762 : t) -> t_to_js x2762
      end
    module LocaleOptions =
      struct
        type t = [ `Intl_LocaleOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2765 : Ojs.t) -> t_of_js x2765
        and t_0_to_js : t_0 -> Ojs.t = fun (x2764 : t) -> t_to_js x2764
        type tags = [ `Intl_LocaleOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_LocaleOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2768 : Ojs.t) -> intf_of_js __tags_of_js x2768
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2766 : __tags intf) -> intf_to_js __tags_to_js x2766
        let (get_baseName : 'tags this -> string) =
          fun (x2770 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2770) "baseName")
        let (set_baseName : 'tags this -> string -> unit) =
          fun (x2772 : 'tags this) ->
            fun (x2773 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2772) "baseName"
                (Ojs.string_to_js x2773)
        let (get_calendar : 'tags this -> string) =
          fun (x2775 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2775) "calendar")
        let (set_calendar : 'tags this -> string -> unit) =
          fun (x2777 : 'tags this) ->
            fun (x2778 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2777) "calendar"
                (Ojs.string_to_js x2778)
        let (get_caseFirst : 'tags this -> LocaleCollationCaseFirst.t) =
          fun (x2780 : 'tags this) ->
            LocaleCollationCaseFirst.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2780) "caseFirst")
        let (set_caseFirst :
          'tags this -> LocaleCollationCaseFirst.t -> unit) =
          fun (x2782 : 'tags this) ->
            fun (x2783 : LocaleCollationCaseFirst.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2782) "caseFirst"
                (LocaleCollationCaseFirst.t_to_js x2783)
        let (get_collation : 'tags this -> string) =
          fun (x2785 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2785) "collation")
        let (set_collation : 'tags this -> string -> unit) =
          fun (x2787 : 'tags this) ->
            fun (x2788 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2787) "collation"
                (Ojs.string_to_js x2788)
        let (get_hourCycle : 'tags this -> LocaleHourCycleKey.t) =
          fun (x2790 : 'tags this) ->
            LocaleHourCycleKey.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2790) "hourCycle")
        let (set_hourCycle : 'tags this -> LocaleHourCycleKey.t -> unit) =
          fun (x2792 : 'tags this) ->
            fun (x2793 : LocaleHourCycleKey.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2792) "hourCycle"
                (LocaleHourCycleKey.t_to_js x2793)
        let (get_language : 'tags this -> string) =
          fun (x2795 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2795) "language")
        let (set_language : 'tags this -> string -> unit) =
          fun (x2797 : 'tags this) ->
            fun (x2798 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2797) "language"
                (Ojs.string_to_js x2798)
        let (get_numberingSystem : 'tags this -> string) =
          fun (x2800 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2800)
                 "numberingSystem")
        let (set_numberingSystem : 'tags this -> string -> unit) =
          fun (x2802 : 'tags this) ->
            fun (x2803 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2802)
                "numberingSystem" (Ojs.string_to_js x2803)
        let (get_numeric : 'tags this -> bool) =
          fun (x2805 : 'tags this) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2805) "numeric")
        let (set_numeric : 'tags this -> bool -> unit) =
          fun (x2807 : 'tags this) ->
            fun (x2808 : bool) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2807) "numeric"
                (Ojs.bool_to_js x2808)
        let (get_region : 'tags this -> string) =
          fun (x2810 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2810) "region")
        let (set_region : 'tags this -> string -> unit) =
          fun (x2812 : 'tags this) ->
            fun (x2813 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2812) "region"
                (Ojs.string_to_js x2813)
        let (get_script : 'tags this -> string) =
          fun (x2815 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2815) "script")
        let (set_script : 'tags this -> string -> unit) =
          fun (x2817 : 'tags this) ->
            fun (x2818 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2817) "script"
                (Ojs.string_to_js x2818)
        let (create :
          baseName:string ->
            calendar:string ->
              caseFirst:LocaleCollationCaseFirst.t ->
                collation:string ->
                  hourCycle:LocaleHourCycleKey.t ->
                    language:string ->
                      numberingSystem:string ->
                        numeric:bool ->
                          region:string -> script:string -> unit -> t)
          =
          fun ~baseName:(x2820 : string) ->
            fun ~calendar:(x2821 : string) ->
              fun ~caseFirst:(x2822 : LocaleCollationCaseFirst.t) ->
                fun ~collation:(x2823 : string) ->
                  fun ~hourCycle:(x2824 : LocaleHourCycleKey.t) ->
                    fun ~language:(x2825 : string) ->
                      fun ~numberingSystem:(x2826 : string) ->
                        fun ~numeric:(x2827 : bool) ->
                          fun ~region:(x2828 : string) ->
                            fun ~script:(x2829 : string) ->
                              fun () ->
                                let x2830 = Ojs.empty_obj () in
                                Ojs.set_prop_ascii x2830 "baseName"
                                  (Ojs.string_to_js x2820);
                                Ojs.set_prop_ascii x2830 "calendar"
                                  (Ojs.string_to_js x2821);
                                Ojs.set_prop_ascii x2830 "caseFirst"
                                  (LocaleCollationCaseFirst.t_to_js x2822);
                                Ojs.set_prop_ascii x2830 "collation"
                                  (Ojs.string_to_js x2823);
                                Ojs.set_prop_ascii x2830 "hourCycle"
                                  (LocaleHourCycleKey.t_to_js x2824);
                                Ojs.set_prop_ascii x2830 "language"
                                  (Ojs.string_to_js x2825);
                                Ojs.set_prop_ascii x2830 "numberingSystem"
                                  (Ojs.string_to_js x2826);
                                Ojs.set_prop_ascii x2830 "numeric"
                                  (Ojs.bool_to_js x2827);
                                Ojs.set_prop_ascii x2830 "region"
                                  (Ojs.string_to_js x2828);
                                Ojs.set_prop_ascii x2830 "script"
                                  (Ojs.string_to_js x2829);
                                t_of_js x2830
        let cast_from = Obj.magic
      end
    module BCP47LanguageTag =
      struct
        type t = string
        let rec t_of_js : Ojs.t -> t =
          fun (x2832 : Ojs.t) -> Ojs.string_of_js x2832
        and t_to_js : t -> Ojs.t =
          fun (x2831 : string) -> Ojs.string_to_js x2831
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2834 : Ojs.t) -> t_of_js x2834
        and t_0_to_js : t_0 -> Ojs.t = fun (x2833 : t) -> t_to_js x2833
      end
    module Locale =
      struct
        type t = [ `Intl_Locale  | `Intl_LocaleOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2836 : Ojs.t) -> t_of_js x2836
        and t_0_to_js : t_0 -> Ojs.t = fun (x2835 : t) -> t_to_js x2835
        type tags = [ `Intl_Locale  | `Intl_LocaleOptions ]
        type tags_0 = tags
        type 'tags this = 'tags intf constraint 'tags = [> `Intl_Locale ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2839 : Ojs.t) -> intf_of_js __tags_of_js x2839
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2837 : __tags intf) -> intf_to_js __tags_to_js x2837
        let (maximize : 'tags this -> t) =
          fun (x2841 : 'tags this) ->
            t_of_js (Ojs.call (this_to_js Obj.magic x2841) "maximize" [||])
        let (minimize : 'tags this -> t) =
          fun (x2843 : 'tags this) ->
            t_of_js (Ojs.call (this_to_js Obj.magic x2843) "minimize" [||])
        let (toString : 'tags this -> BCP47LanguageTag.t) =
          fun (x2845 : 'tags this) ->
            BCP47LanguageTag.t_of_js
              (Ojs.call (this_to_js Obj.magic x2845) "toString" [||])
        let cast_from = Obj.magic
        let (create :
          ?tag:BCP47LanguageTag.t -> ?options:LocaleOptions.t -> unit -> t) =
          fun ?tag:(x2847 : BCP47LanguageTag.t option) ->
            fun ?options:(x2848 : LocaleOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "Locale")
                     (let x2849 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x2847 with
                       | Some x2851 ->
                           ignore
                             (Ojs.call x2849 "push"
                                [|(BCP47LanguageTag.t_to_js x2851)|])
                       | None -> ());
                      (match x2848 with
                       | Some x2850 ->
                           ignore
                             (Ojs.call x2849 "push"
                                [|(LocaleOptions.t_to_js x2850)|])
                       | None -> ());
                      x2849))
      end
    module DisplayNamesOptions =
      struct
        type t = [ `Intl_DisplayNamesOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2853 : Ojs.t) -> t_of_js x2853
        and t_0_to_js : t_0 -> Ojs.t = fun (x2852 : t) -> t_to_js x2852
        type tags = [ `Intl_DisplayNamesOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_DisplayNamesOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2856 : Ojs.t) -> intf_of_js __tags_of_js x2856
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2854 : __tags intf) -> intf_to_js __tags_to_js x2854
        let (get_locale : 'tags this -> UnicodeBCP47LocaleIdentifier.t) =
          fun (x2858 : 'tags this) ->
            UnicodeBCP47LocaleIdentifier.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2858) "locale")
        let (set_locale :
          'tags this -> UnicodeBCP47LocaleIdentifier.t -> unit) =
          fun (x2860 : 'tags this) ->
            fun (x2861 : UnicodeBCP47LocaleIdentifier.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2860) "locale"
                (UnicodeBCP47LocaleIdentifier.t_to_js x2861)
        let (get_localeMatcher :
          'tags this -> RelativeTimeFormatLocaleMatcher.t) =
          fun (x2863 : 'tags this) ->
            RelativeTimeFormatLocaleMatcher.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2863)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this -> RelativeTimeFormatLocaleMatcher.t -> unit) =
          fun (x2865 : 'tags this) ->
            fun (x2866 : RelativeTimeFormatLocaleMatcher.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2865) "localeMatcher"
                (RelativeTimeFormatLocaleMatcher.t_to_js x2866)
        let (get_style : 'tags this -> RelativeTimeFormatStyle.t) =
          fun (x2868 : 'tags this) ->
            RelativeTimeFormatStyle.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2868) "style")
        let (set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit) =
          fun (x2870 : 'tags this) ->
            fun (x2871 : RelativeTimeFormatStyle.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2870) "style"
                (RelativeTimeFormatStyle.t_to_js x2871)
        let (get_type :
          'tags this ->
            [ `L_s28_currency  | `L_s54_language  | `L_s83_region 
            | `L_s86_script ])
          =
          fun (x2873 : 'tags this) ->
            let x2875 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2873) "type" in
            match Ojs.string_of_js x2875 with
            | "currency" -> `L_s28_currency
            | "language" -> `L_s54_language
            | "region" -> `L_s83_region
            | "script" -> `L_s86_script
            | _ -> assert false
        let (set_type :
          'tags this ->
            [ `U1 of [ `L_s54_language ]  | `U2 of [ `L_s83_region ] 
            | `U3 of [ `L_s86_script ]  | `U4 of [ `L_s28_currency ] ] ->
              unit)
          =
          fun (x2876 : 'tags this) ->
            fun
              (x2877 :
                [ `U1 of [ `L_s54_language ]  | `U2 of [ `L_s83_region ] 
                | `U3 of [ `L_s86_script ]  | `U4 of [ `L_s28_currency ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2876) "type"
                (match x2877 with
                 | `U1 x2878 ->
                     (match x2878 with
                      | `L_s54_language -> Ojs.string_to_js "language")
                 | `U2 x2879 ->
                     (match x2879 with
                      | `L_s83_region -> Ojs.string_to_js "region")
                 | `U3 x2880 ->
                     (match x2880 with
                      | `L_s86_script -> Ojs.string_to_js "script")
                 | `U4 x2881 ->
                     (match x2881 with
                      | `L_s28_currency -> Ojs.string_to_js "currency"))
        let (get_fallback : 'tags this -> [ `L_s26_code  | `L_s70_none ]) =
          fun (x2883 : 'tags this) ->
            let x2885 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2883) "fallback" in
            match Ojs.string_of_js x2885 with
            | "code" -> `L_s26_code
            | "none" -> `L_s70_none
            | _ -> assert false
        let (set_fallback :
          'tags this ->
            [ `U1 of [ `L_s26_code ]  | `U2 of [ `L_s70_none ] ] -> unit)
          =
          fun (x2886 : 'tags this) ->
            fun
              (x2887 : [ `U1 of [ `L_s26_code ]  | `U2 of [ `L_s70_none ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2886) "fallback"
                (match x2887 with
                 | `U1 x2888 ->
                     (match x2888 with
                      | `L_s26_code -> Ojs.string_to_js "code")
                 | `U2 x2889 ->
                     (match x2889 with
                      | `L_s70_none -> Ojs.string_to_js "none"))
        let (create :
          locale:UnicodeBCP47LocaleIdentifier.t ->
            localeMatcher:RelativeTimeFormatLocaleMatcher.t ->
              style:RelativeTimeFormatStyle.t ->
                type_:[ `L_s28_currency  | `L_s54_language  | `L_s83_region 
                      | `L_s86_script ]
                  -> fallback:[ `L_s26_code  | `L_s70_none ] -> unit -> t)
          =
          fun ~locale:(x2891 : UnicodeBCP47LocaleIdentifier.t) ->
            fun ~localeMatcher:(x2892 : RelativeTimeFormatLocaleMatcher.t) ->
              fun ~style:(x2893 : RelativeTimeFormatStyle.t) ->
                fun
                  ~type_:(x2894 :
                           [ `L_s28_currency  | `L_s54_language 
                           | `L_s83_region  | `L_s86_script ])
                  ->
                  fun ~fallback:(x2895 : [ `L_s26_code  | `L_s70_none ]) ->
                    fun () ->
                      let x2896 = Ojs.empty_obj () in
                      Ojs.set_prop_ascii x2896 "locale"
                        (UnicodeBCP47LocaleIdentifier.t_to_js x2891);
                      Ojs.set_prop_ascii x2896 "localeMatcher"
                        (RelativeTimeFormatLocaleMatcher.t_to_js x2892);
                      Ojs.set_prop_ascii x2896 "style"
                        (RelativeTimeFormatStyle.t_to_js x2893);
                      Ojs.set_prop_ascii x2896 "type"
                        (match x2894 with
                         | `L_s28_currency -> Ojs.string_to_js "currency"
                         | `L_s54_language -> Ojs.string_to_js "language"
                         | `L_s83_region -> Ojs.string_to_js "region"
                         | `L_s86_script -> Ojs.string_to_js "script");
                      Ojs.set_prop_ascii x2896 "fallback"
                        (match x2895 with
                         | `L_s26_code -> Ojs.string_to_js "code"
                         | `L_s70_none -> Ojs.string_to_js "none");
                      t_of_js x2896
        let cast_from = Obj.magic
      end
    module DisplayNames =
      struct
        module AnonymousInterface2 =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x2898 : Ojs.t) -> x2898
            and t_to_js : t -> Ojs.t = fun (x2897 : Ojs.t) -> x2897
            let (get_localeMatcher : t -> RelativeTimeFormatLocaleMatcher.t)
              =
              fun (x2899 : t) ->
                RelativeTimeFormatLocaleMatcher.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x2899) "localeMatcher")
            let (set_localeMatcher :
              t -> RelativeTimeFormatLocaleMatcher.t -> unit) =
              fun (x2900 : t) ->
                fun (x2901 : RelativeTimeFormatLocaleMatcher.t) ->
                  Ojs.set_prop_ascii (t_to_js x2900) "localeMatcher"
                    (RelativeTimeFormatLocaleMatcher.t_to_js x2901)
            let (create :
              localeMatcher:RelativeTimeFormatLocaleMatcher.t -> unit -> t) =
              fun ~localeMatcher:(x2902 : RelativeTimeFormatLocaleMatcher.t)
                ->
                fun () ->
                  let x2903 = Ojs.empty_obj () in
                  Ojs.set_prop_ascii x2903 "localeMatcher"
                    (RelativeTimeFormatLocaleMatcher.t_to_js x2902);
                  t_of_js x2903
          end
        type t = [ `Intl_DisplayNames ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2905 : Ojs.t) -> t_of_js x2905
        and t_0_to_js : t_0 -> Ojs.t = fun (x2904 : t) -> t_to_js x2904
        type tags = [ `Intl_DisplayNames ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_DisplayNames ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2908 : Ojs.t) -> intf_of_js __tags_of_js x2908
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2906 : __tags intf) -> intf_to_js __tags_to_js x2906
        let (of_ : 'tags this -> code:string -> string option) =
          fun (x2911 : 'tags this) ->
            fun ~code:(x2910 : string) ->
              Ojs.option_of_js Ojs.string_of_js
                (Ojs.call (this_to_js Obj.magic x2911) "of"
                   [|(Ojs.string_to_js x2910)|])
        let (resolvedOptions : 'tags this -> DisplayNamesOptions.t) =
          fun (x2914 : 'tags this) ->
            DisplayNamesOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x2914) "resolvedOptions" [||])
        let cast_from = Obj.magic
        let (prototype : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.get_prop_ascii
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Intl")
                    "DisplayNames") "prototype")
        let (create :
          ?locales:[ `U1 of BCP47LanguageTag.t 
                   | `U2 of BCP47LanguageTag.t list ]
            -> ?options:DisplayNamesOptions.t Partial.t -> unit -> t)
          =
          fun
            ?locales:(x2916 :
                       [ `U1 of BCP47LanguageTag.t 
                       | `U2 of BCP47LanguageTag.t list ] option)
            ->
            fun ?options:(x2917 : DisplayNamesOptions.t Partial.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "DisplayNames")
                     (let x2918 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x2916 with
                       | Some x2921 ->
                           ignore
                             (Ojs.call x2918 "push"
                                [|((match x2921 with
                                    | `U1 x2922 ->
                                        BCP47LanguageTag.t_to_js x2922
                                    | `U2 x2923 ->
                                        Ojs.list_to_js
                                          BCP47LanguageTag.t_to_js x2923))|])
                       | None -> ());
                      (match x2917 with
                       | Some x2919 ->
                           ignore
                             (Ojs.call x2918 "push"
                                [|(Partial.t_to_js
                                     DisplayNamesOptions.t_to_js x2919)|])
                       | None -> ());
                      x2918))
        let (supportedLocalesOf :
          locales:[ `U1 of BCP47LanguageTag.t 
                  | `U2 of BCP47LanguageTag.t list ]
            ->
            ?options:AnonymousInterface2.t -> unit -> BCP47LanguageTag.t list)
          =
          fun
            ~locales:(x2925 :
                       [ `U1 of BCP47LanguageTag.t 
                       | `U2 of BCP47LanguageTag.t list ])
            ->
            fun ?options:(x2926 : AnonymousInterface2.t option) ->
              fun () ->
                Ojs.list_of_js BCP47LanguageTag.t_of_js
                  (let x2932 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl") "DisplayNames" in
                   Ojs.call (Ojs.get_prop_ascii x2932 "supportedLocalesOf")
                     "apply"
                     [|x2932;((let x2927 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2927 "push"
                                    [|((match x2925 with
                                        | `U1 x2929 ->
                                            BCP47LanguageTag.t_to_js x2929
                                        | `U2 x2930 ->
                                            Ojs.list_to_js
                                              BCP47LanguageTag.t_to_js x2930))|]);
                               (match x2926 with
                                | Some x2928 ->
                                    ignore
                                      (Ojs.call x2927 "push"
                                         [|(AnonymousInterface2.t_to_js x2928)|])
                                | None -> ());
                               x2927))|])
      end
    module ResolvedDateTimeFormatOptions =
      struct
        type t = [ `Intl_ResolvedDateTimeFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2935 : Ojs.t) -> t_of_js x2935
        and t_0_to_js : t_0 -> Ojs.t = fun (x2934 : t) -> t_to_js x2934
        type tags = [ `Intl_ResolvedDateTimeFormatOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags =
                      [> `Intl_ResolvedDateTimeFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x2938 : Ojs.t) -> intf_of_js __tags_of_js x2938
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x2936 : __tags intf) -> intf_to_js __tags_to_js x2936
        let (get_formatMatcher :
          'tags this -> [ `L_s23_basic  | `L_s24_best_fit ]) =
          fun (x2940 : 'tags this) ->
            let x2942 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2940) "formatMatcher" in
            match Ojs.string_of_js x2942 with
            | "basic" -> `L_s23_basic
            | "best fit" -> `L_s24_best_fit
            | _ -> assert false
        let (set_formatMatcher :
          'tags this ->
            [ `U1 of [ `L_s23_basic ]  | `U2 of [ `L_s24_best_fit ] 
            | `U3 of [ `L_s24_best_fit ] ] -> unit)
          =
          fun (x2943 : 'tags this) ->
            fun
              (x2944 :
                [ `U1 of [ `L_s23_basic ]  | `U2 of [ `L_s24_best_fit ] 
                | `U3 of [ `L_s24_best_fit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2943) "formatMatcher"
                (match x2944 with
                 | `U1 x2945 ->
                     (match x2945 with
                      | `L_s23_basic -> Ojs.string_to_js "basic")
                 | `U2 x2946 ->
                     (match x2946 with
                      | `L_s24_best_fit -> Ojs.string_to_js "best fit")
                 | `U3 x2947 ->
                     (match x2947 with
                      | `L_s24_best_fit -> Ojs.string_to_js "best fit"))
        let (get_dateStyle :
          'tags this ->
            [ `L_s44_full  | `L_s56_long  | `L_s60_medium  | `L_s89_short ])
          =
          fun (x2949 : 'tags this) ->
            let x2951 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2949) "dateStyle" in
            match Ojs.string_of_js x2951 with
            | "full" -> `L_s44_full
            | "long" -> `L_s56_long
            | "medium" -> `L_s60_medium
            | "short" -> `L_s89_short
            | _ -> assert false
        let (set_dateStyle :
          'tags this ->
            [ `U1 of [ `L_s44_full ]  | `U2 of [ `L_s56_long ] 
            | `U3 of [ `L_s60_medium ]  | `U4 of [ `L_s89_short ] ] -> 
              unit)
          =
          fun (x2952 : 'tags this) ->
            fun
              (x2953 :
                [ `U1 of [ `L_s44_full ]  | `U2 of [ `L_s56_long ] 
                | `U3 of [ `L_s60_medium ]  | `U4 of [ `L_s89_short ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2952) "dateStyle"
                (match x2953 with
                 | `U1 x2954 ->
                     (match x2954 with
                      | `L_s44_full -> Ojs.string_to_js "full")
                 | `U2 x2955 ->
                     (match x2955 with
                      | `L_s56_long -> Ojs.string_to_js "long")
                 | `U3 x2956 ->
                     (match x2956 with
                      | `L_s60_medium -> Ojs.string_to_js "medium")
                 | `U4 x2957 ->
                     (match x2957 with
                      | `L_s89_short -> Ojs.string_to_js "short"))
        let (get_timeStyle :
          'tags this ->
            [ `L_s44_full  | `L_s56_long  | `L_s60_medium  | `L_s89_short ])
          =
          fun (x2959 : 'tags this) ->
            let x2961 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2959) "timeStyle" in
            match Ojs.string_of_js x2961 with
            | "full" -> `L_s44_full
            | "long" -> `L_s56_long
            | "medium" -> `L_s60_medium
            | "short" -> `L_s89_short
            | _ -> assert false
        let (set_timeStyle :
          'tags this ->
            [ `U1 of [ `L_s44_full ]  | `U2 of [ `L_s56_long ] 
            | `U3 of [ `L_s60_medium ]  | `U4 of [ `L_s89_short ] ] -> 
              unit)
          =
          fun (x2962 : 'tags this) ->
            fun
              (x2963 :
                [ `U1 of [ `L_s44_full ]  | `U2 of [ `L_s56_long ] 
                | `U3 of [ `L_s60_medium ]  | `U4 of [ `L_s89_short ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2962) "timeStyle"
                (match x2963 with
                 | `U1 x2964 ->
                     (match x2964 with
                      | `L_s44_full -> Ojs.string_to_js "full")
                 | `U2 x2965 ->
                     (match x2965 with
                      | `L_s56_long -> Ojs.string_to_js "long")
                 | `U3 x2966 ->
                     (match x2966 with
                      | `L_s60_medium -> Ojs.string_to_js "medium")
                 | `U4 x2967 ->
                     (match x2967 with
                      | `L_s89_short -> Ojs.string_to_js "short"))
        let (get_hourCycle :
          'tags this ->
            [ `L_s46_h11  | `L_s47_h12  | `L_s48_h23  | `L_s49_h24 ])
          =
          fun (x2969 : 'tags this) ->
            let x2971 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2969) "hourCycle" in
            match Ojs.string_of_js x2971 with
            | "h11" -> `L_s46_h11
            | "h12" -> `L_s47_h12
            | "h23" -> `L_s48_h23
            | "h24" -> `L_s49_h24
            | _ -> assert false
        let (set_hourCycle :
          'tags this ->
            [ `U1 of [ `L_s46_h11 ]  | `U2 of [ `L_s47_h12 ] 
            | `U3 of [ `L_s48_h23 ]  | `U4 of [ `L_s49_h24 ] ] -> unit)
          =
          fun (x2972 : 'tags this) ->
            fun
              (x2973 :
                [ `U1 of [ `L_s46_h11 ]  | `U2 of [ `L_s47_h12 ] 
                | `U3 of [ `L_s48_h23 ]  | `U4 of [ `L_s49_h24 ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2972) "hourCycle"
                (match x2973 with
                 | `U1 x2974 ->
                     (match x2974 with | `L_s46_h11 -> Ojs.string_to_js "h11")
                 | `U2 x2975 ->
                     (match x2975 with | `L_s47_h12 -> Ojs.string_to_js "h12")
                 | `U3 x2976 ->
                     (match x2976 with | `L_s48_h23 -> Ojs.string_to_js "h23")
                 | `U4 x2977 ->
                     (match x2977 with | `L_s49_h24 -> Ojs.string_to_js "h24"))
        let (get_dayPeriod :
          'tags this -> [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ]) =
          fun (x2979 : 'tags this) ->
            let x2981 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2979) "dayPeriod" in
            match Ojs.string_of_js x2981 with
            | "long" -> `L_s56_long
            | "narrow" -> `L_s68_narrow
            | "short" -> `L_s89_short
            | _ -> assert false
        let (set_dayPeriod :
          'tags this ->
            [ `U1 of [ `L_s68_narrow ]  | `U2 of [ `L_s89_short ] 
            | `U3 of [ `L_s56_long ] ] -> unit)
          =
          fun (x2982 : 'tags this) ->
            fun
              (x2983 :
                [ `U1 of [ `L_s68_narrow ]  | `U2 of [ `L_s89_short ] 
                | `U3 of [ `L_s56_long ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2982) "dayPeriod"
                (match x2983 with
                 | `U1 x2984 ->
                     (match x2984 with
                      | `L_s68_narrow -> Ojs.string_to_js "narrow")
                 | `U2 x2985 ->
                     (match x2985 with
                      | `L_s89_short -> Ojs.string_to_js "short")
                 | `U3 x2986 ->
                     (match x2986 with
                      | `L_s56_long -> Ojs.string_to_js "long"))
        let (get_fractionalSecondDigits :
          'tags this -> [ `L_n_0  | `L_n_1  | `L_n_2  | `L_n_3 ]) =
          fun (x2988 : 'tags this) ->
            let x2990 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2988)
                "fractionalSecondDigits" in
            match Ojs.int_of_js x2990 with
            | 0 -> `L_n_0
            | 1 -> `L_n_1
            | 2 -> `L_n_2
            | 3 -> `L_n_3
            | _ -> assert false
        let (set_fractionalSecondDigits :
          'tags this ->
            [ `U1 of [ `L_n_0 ]  | `U2 of [ `L_n_1 ]  | `U3 of [ `L_n_2 ] 
            | `U4 of [ `L_n_3 ] ] -> unit)
          =
          fun (x2991 : 'tags this) ->
            fun
              (x2992 :
                [ `U1 of [ `L_n_0 ]  | `U2 of [ `L_n_1 ] 
                | `U3 of [ `L_n_2 ]  | `U4 of [ `L_n_3 ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2991)
                "fractionalSecondDigits"
                (match x2992 with
                 | `U1 x2993 ->
                     (match x2993 with | `L_n_0 -> Ojs.int_to_js 0)
                 | `U2 x2994 ->
                     (match x2994 with | `L_n_1 -> Ojs.int_to_js 1)
                 | `U3 x2995 ->
                     (match x2995 with | `L_n_2 -> Ojs.int_to_js 2)
                 | `U4 x2996 ->
                     (match x2996 with | `L_n_3 -> Ojs.int_to_js 3))
        let (get_locale : 'tags this -> string) =
          fun (x2998 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2998) "locale")
        let (set_locale : 'tags this -> string -> unit) =
          fun (x3000 : 'tags this) ->
            fun (x3001 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3000) "locale"
                (Ojs.string_to_js x3001)
        let (get_calendar : 'tags this -> string) =
          fun (x3003 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3003) "calendar")
        let (set_calendar : 'tags this -> string -> unit) =
          fun (x3005 : 'tags this) ->
            fun (x3006 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3005) "calendar"
                (Ojs.string_to_js x3006)
        let (get_numberingSystem : 'tags this -> string) =
          fun (x3008 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3008)
                 "numberingSystem")
        let (set_numberingSystem : 'tags this -> string -> unit) =
          fun (x3010 : 'tags this) ->
            fun (x3011 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3010)
                "numberingSystem" (Ojs.string_to_js x3011)
        let (get_timeZone : 'tags this -> string) =
          fun (x3013 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3013) "timeZone")
        let (set_timeZone : 'tags this -> string -> unit) =
          fun (x3015 : 'tags this) ->
            fun (x3016 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3015) "timeZone"
                (Ojs.string_to_js x3016)
        let (get_hour12 : 'tags this -> bool) =
          fun (x3018 : 'tags this) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3018) "hour12")
        let (set_hour12 : 'tags this -> bool -> unit) =
          fun (x3020 : 'tags this) ->
            fun (x3021 : bool) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3020) "hour12"
                (Ojs.bool_to_js x3021)
        let (get_weekday : 'tags this -> string) =
          fun (x3023 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3023) "weekday")
        let (set_weekday : 'tags this -> string -> unit) =
          fun (x3025 : 'tags this) ->
            fun (x3026 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3025) "weekday"
                (Ojs.string_to_js x3026)
        let (get_era : 'tags this -> string) =
          fun (x3028 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3028) "era")
        let (set_era : 'tags this -> string -> unit) =
          fun (x3030 : 'tags this) ->
            fun (x3031 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3030) "era"
                (Ojs.string_to_js x3031)
        let (get_year : 'tags this -> string) =
          fun (x3033 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3033) "year")
        let (set_year : 'tags this -> string -> unit) =
          fun (x3035 : 'tags this) ->
            fun (x3036 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3035) "year"
                (Ojs.string_to_js x3036)
        let (get_month : 'tags this -> string) =
          fun (x3038 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3038) "month")
        let (set_month : 'tags this -> string -> unit) =
          fun (x3040 : 'tags this) ->
            fun (x3041 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3040) "month"
                (Ojs.string_to_js x3041)
        let (get_day : 'tags this -> string) =
          fun (x3043 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3043) "day")
        let (set_day : 'tags this -> string -> unit) =
          fun (x3045 : 'tags this) ->
            fun (x3046 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3045) "day"
                (Ojs.string_to_js x3046)
        let (get_hour : 'tags this -> string) =
          fun (x3048 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3048) "hour")
        let (set_hour : 'tags this -> string -> unit) =
          fun (x3050 : 'tags this) ->
            fun (x3051 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3050) "hour"
                (Ojs.string_to_js x3051)
        let (get_minute : 'tags this -> string) =
          fun (x3053 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3053) "minute")
        let (set_minute : 'tags this -> string -> unit) =
          fun (x3055 : 'tags this) ->
            fun (x3056 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3055) "minute"
                (Ojs.string_to_js x3056)
        let (get_second : 'tags this -> string) =
          fun (x3058 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3058) "second")
        let (set_second : 'tags this -> string -> unit) =
          fun (x3060 : 'tags this) ->
            fun (x3061 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3060) "second"
                (Ojs.string_to_js x3061)
        let (get_timeZoneName : 'tags this -> string) =
          fun (x3063 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3063) "timeZoneName")
        let (set_timeZoneName : 'tags this -> string -> unit) =
          fun (x3065 : 'tags this) ->
            fun (x3066 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3065) "timeZoneName"
                (Ojs.string_to_js x3066)
        let (create :
          formatMatcher:[ `L_s23_basic  | `L_s24_best_fit ] ->
            dateStyle:[ `L_s44_full  | `L_s56_long  | `L_s60_medium 
                      | `L_s89_short ]
              ->
              timeStyle:[ `L_s44_full  | `L_s56_long  | `L_s60_medium 
                        | `L_s89_short ]
                ->
                hourCycle:[ `L_s46_h11  | `L_s47_h12  | `L_s48_h23 
                          | `L_s49_h24 ]
                  ->
                  dayPeriod:[ `L_s56_long  | `L_s68_narrow  | `L_s89_short ]
                    ->
                    fractionalSecondDigits:[ `L_n_0  | `L_n_1  | `L_n_2 
                                           | `L_n_3 ]
                      ->
                      locale:string ->
                        calendar:string ->
                          numberingSystem:string ->
                            timeZone:string ->
                              hour12:bool ->
                                weekday:string ->
                                  era:string ->
                                    year:string ->
                                      month:string ->
                                        day:string ->
                                          hour:string ->
                                            minute:string ->
                                              second:string ->
                                                timeZoneName:string ->
                                                  unit -> t)
          =
          fun ~formatMatcher:(x3068 : [ `L_s23_basic  | `L_s24_best_fit ]) ->
            fun
              ~dateStyle:(x3069 :
                           [ `L_s44_full  | `L_s56_long  | `L_s60_medium 
                           | `L_s89_short ])
              ->
              fun
                ~timeStyle:(x3070 :
                             [ `L_s44_full  | `L_s56_long  | `L_s60_medium 
                             | `L_s89_short ])
                ->
                fun
                  ~hourCycle:(x3071 :
                               [ `L_s46_h11  | `L_s47_h12  | `L_s48_h23 
                               | `L_s49_h24 ])
                  ->
                  fun
                    ~dayPeriod:(x3072 :
                                 [ `L_s56_long  | `L_s68_narrow 
                                 | `L_s89_short ])
                    ->
                    fun
                      ~fractionalSecondDigits:(x3073 :
                                                [ `L_n_0  | `L_n_1  | 
                                                  `L_n_2 
                                                | `L_n_3 ])
                      ->
                      fun ~locale:(x3074 : string) ->
                        fun ~calendar:(x3075 : string) ->
                          fun ~numberingSystem:(x3076 : string) ->
                            fun ~timeZone:(x3077 : string) ->
                              fun ~hour12:(x3078 : bool) ->
                                fun ~weekday:(x3079 : string) ->
                                  fun ~era:(x3080 : string) ->
                                    fun ~year:(x3081 : string) ->
                                      fun ~month:(x3082 : string) ->
                                        fun ~day:(x3083 : string) ->
                                          fun ~hour:(x3084 : string) ->
                                            fun ~minute:(x3085 : string) ->
                                              fun ~second:(x3086 : string) ->
                                                fun
                                                  ~timeZoneName:(x3087 :
                                                                  string)
                                                  ->
                                                  fun () ->
                                                    let x3088 =
                                                      Ojs.empty_obj () in
                                                    Ojs.set_prop_ascii x3088
                                                      "formatMatcher"
                                                      (match x3068 with
                                                       | `L_s23_basic ->
                                                           Ojs.string_to_js
                                                             "basic"
                                                       | `L_s24_best_fit ->
                                                           Ojs.string_to_js
                                                             "best fit");
                                                    Ojs.set_prop_ascii x3088
                                                      "dateStyle"
                                                      (match x3069 with
                                                       | `L_s44_full ->
                                                           Ojs.string_to_js
                                                             "full"
                                                       | `L_s56_long ->
                                                           Ojs.string_to_js
                                                             "long"
                                                       | `L_s60_medium ->
                                                           Ojs.string_to_js
                                                             "medium"
                                                       | `L_s89_short ->
                                                           Ojs.string_to_js
                                                             "short");
                                                    Ojs.set_prop_ascii x3088
                                                      "timeStyle"
                                                      (match x3070 with
                                                       | `L_s44_full ->
                                                           Ojs.string_to_js
                                                             "full"
                                                       | `L_s56_long ->
                                                           Ojs.string_to_js
                                                             "long"
                                                       | `L_s60_medium ->
                                                           Ojs.string_to_js
                                                             "medium"
                                                       | `L_s89_short ->
                                                           Ojs.string_to_js
                                                             "short");
                                                    Ojs.set_prop_ascii x3088
                                                      "hourCycle"
                                                      (match x3071 with
                                                       | `L_s46_h11 ->
                                                           Ojs.string_to_js
                                                             "h11"
                                                       | `L_s47_h12 ->
                                                           Ojs.string_to_js
                                                             "h12"
                                                       | `L_s48_h23 ->
                                                           Ojs.string_to_js
                                                             "h23"
                                                       | `L_s49_h24 ->
                                                           Ojs.string_to_js
                                                             "h24");
                                                    Ojs.set_prop_ascii x3088
                                                      "dayPeriod"
                                                      (match x3072 with
                                                       | `L_s56_long ->
                                                           Ojs.string_to_js
                                                             "long"
                                                       | `L_s68_narrow ->
                                                           Ojs.string_to_js
                                                             "narrow"
                                                       | `L_s89_short ->
                                                           Ojs.string_to_js
                                                             "short");
                                                    Ojs.set_prop_ascii x3088
                                                      "fractionalSecondDigits"
                                                      (match x3073 with
                                                       | `L_n_0 ->
                                                           Ojs.int_to_js 0
                                                       | `L_n_1 ->
                                                           Ojs.int_to_js 1
                                                       | `L_n_2 ->
                                                           Ojs.int_to_js 2
                                                       | `L_n_3 ->
                                                           Ojs.int_to_js 3);
                                                    Ojs.set_prop_ascii x3088
                                                      "locale"
                                                      (Ojs.string_to_js x3074);
                                                    Ojs.set_prop_ascii x3088
                                                      "calendar"
                                                      (Ojs.string_to_js x3075);
                                                    Ojs.set_prop_ascii x3088
                                                      "numberingSystem"
                                                      (Ojs.string_to_js x3076);
                                                    Ojs.set_prop_ascii x3088
                                                      "timeZone"
                                                      (Ojs.string_to_js x3077);
                                                    Ojs.set_prop_ascii x3088
                                                      "hour12"
                                                      (Ojs.bool_to_js x3078);
                                                    Ojs.set_prop_ascii x3088
                                                      "weekday"
                                                      (Ojs.string_to_js x3079);
                                                    Ojs.set_prop_ascii x3088
                                                      "era"
                                                      (Ojs.string_to_js x3080);
                                                    Ojs.set_prop_ascii x3088
                                                      "year"
                                                      (Ojs.string_to_js x3081);
                                                    Ojs.set_prop_ascii x3088
                                                      "month"
                                                      (Ojs.string_to_js x3082);
                                                    Ojs.set_prop_ascii x3088
                                                      "day"
                                                      (Ojs.string_to_js x3083);
                                                    Ojs.set_prop_ascii x3088
                                                      "hour"
                                                      (Ojs.string_to_js x3084);
                                                    Ojs.set_prop_ascii x3088
                                                      "minute"
                                                      (Ojs.string_to_js x3085);
                                                    Ojs.set_prop_ascii x3088
                                                      "second"
                                                      (Ojs.string_to_js x3086);
                                                    Ojs.set_prop_ascii x3088
                                                      "timeZoneName"
                                                      (Ojs.string_to_js x3087);
                                                    t_of_js x3088
        let cast_from = Obj.magic
      end
    module DateTimeFormatPartTypes =
      struct
        type t =
          [ `L_s100_weekday  | `L_s102_year  | `L_s29_day 
          | `L_s30_dayPeriod  | `L_s35_era  | `L_s50_hour  | `L_s55_literal 
          | `L_s62_minute  | `L_s64_month  | `L_s87_second 
          | `L_s93_timeZoneName ]
        let rec t_of_js : Ojs.t -> t =
          fun (x3090 : Ojs.t) ->
            let x3091 = x3090 in
            match Ojs.string_of_js x3091 with
            | "weekday" -> `L_s100_weekday
            | "year" -> `L_s102_year
            | "day" -> `L_s29_day
            | "dayPeriod" -> `L_s30_dayPeriod
            | "era" -> `L_s35_era
            | "hour" -> `L_s50_hour
            | "literal" -> `L_s55_literal
            | "minute" -> `L_s62_minute
            | "month" -> `L_s64_month
            | "second" -> `L_s87_second
            | "timeZoneName" -> `L_s93_timeZoneName
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x3089 :
              [ `L_s100_weekday  | `L_s102_year  | `L_s29_day 
              | `L_s30_dayPeriod  | `L_s35_era  | `L_s50_hour 
              | `L_s55_literal  | `L_s62_minute  | `L_s64_month 
              | `L_s87_second  | `L_s93_timeZoneName ])
            ->
            match x3089 with
            | `L_s100_weekday -> Ojs.string_to_js "weekday"
            | `L_s102_year -> Ojs.string_to_js "year"
            | `L_s29_day -> Ojs.string_to_js "day"
            | `L_s30_dayPeriod -> Ojs.string_to_js "dayPeriod"
            | `L_s35_era -> Ojs.string_to_js "era"
            | `L_s50_hour -> Ojs.string_to_js "hour"
            | `L_s55_literal -> Ojs.string_to_js "literal"
            | `L_s62_minute -> Ojs.string_to_js "minute"
            | `L_s64_month -> Ojs.string_to_js "month"
            | `L_s87_second -> Ojs.string_to_js "second"
            | `L_s93_timeZoneName -> Ojs.string_to_js "timeZoneName"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x3093 : Ojs.t) -> t_of_js x3093
        and t_0_to_js : t_0 -> Ojs.t = fun (x3092 : t) -> t_to_js x3092
      end
    module DateTimeFormatPart =
      struct
        type t = [ `Intl_DateTimeFormatPart ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x3095 : Ojs.t) -> t_of_js x3095
        and t_0_to_js : t_0 -> Ojs.t = fun (x3094 : t) -> t_to_js x3094
        type tags = [ `Intl_DateTimeFormatPart ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_DateTimeFormatPart ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x3098 : Ojs.t) -> intf_of_js __tags_of_js x3098
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x3096 : __tags intf) -> intf_to_js __tags_to_js x3096
        let (get_type : 'tags this -> DateTimeFormatPartTypes.t) =
          fun (x3100 : 'tags this) ->
            DateTimeFormatPartTypes.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3100) "type")
        let (set_type : 'tags this -> DateTimeFormatPartTypes.t -> unit) =
          fun (x3102 : 'tags this) ->
            fun (x3103 : DateTimeFormatPartTypes.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3102) "type"
                (DateTimeFormatPartTypes.t_to_js x3103)
        let (get_value : 'tags this -> string) =
          fun (x3105 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3105) "value")
        let (set_value : 'tags this -> string -> unit) =
          fun (x3107 : 'tags this) ->
            fun (x3108 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3107) "value"
                (Ojs.string_to_js x3108)
        let (create :
          type_:DateTimeFormatPartTypes.t -> value:string -> unit -> t) =
          fun ~type_:(x3110 : DateTimeFormatPartTypes.t) ->
            fun ~value:(x3111 : string) ->
              fun () ->
                let x3112 = Ojs.empty_obj () in
                Ojs.set_prop_ascii x3112 "type"
                  (DateTimeFormatPartTypes.t_to_js x3110);
                Ojs.set_prop_ascii x3112 "value" (Ojs.string_to_js x3111);
                t_of_js x3112
        let cast_from = Obj.magic
      end
    module DateTimeFormatOptions =
      struct
        type t = [ `Intl_DateTimeFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x3114 : Ojs.t) -> t_of_js x3114
        and t_0_to_js : t_0 -> Ojs.t = fun (x3113 : t) -> t_to_js x3113
        type tags = [ `Intl_DateTimeFormatOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_DateTimeFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x3117 : Ojs.t) -> intf_of_js __tags_of_js x3117
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x3115 : __tags intf) -> intf_to_js __tags_to_js x3115
        let (get_formatMatcher :
          'tags this -> [ `L_s23_basic  | `L_s24_best_fit ] option) =
          fun (x3119 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3121 : Ojs.t) ->
                 let x3122 = x3121 in
                 match Ojs.string_of_js x3122 with
                 | "basic" -> `L_s23_basic
                 | "best fit" -> `L_s24_best_fit
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3119)
                 "formatMatcher")
        let (set_formatMatcher :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s23_basic ] 
            | `U2 of [ `L_s24_best_fit ]  | `U3 of [ `L_s24_best_fit ] ] ->
              unit)
          =
          fun (x3123 : 'tags this) ->
            fun
              (x3124 :
                [ `Undefined of undefined  | `U1 of [ `L_s23_basic ] 
                | `U2 of [ `L_s24_best_fit ]  | `U3 of [ `L_s24_best_fit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3123) "formatMatcher"
                (match x3124 with
                 | `Undefined x3125 -> undefined_to_js x3125
                 | `U1 x3126 ->
                     (match x3126 with
                      | `L_s23_basic -> Ojs.string_to_js "basic")
                 | `U2 x3127 ->
                     (match x3127 with
                      | `L_s24_best_fit -> Ojs.string_to_js "best fit")
                 | `U3 x3128 ->
                     (match x3128 with
                      | `L_s24_best_fit -> Ojs.string_to_js "best fit"))
        let (get_dateStyle :
          'tags this ->
            [ `L_s44_full  | `L_s56_long  | `L_s60_medium  | `L_s89_short ]
              option)
          =
          fun (x3130 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3132 : Ojs.t) ->
                 let x3133 = x3132 in
                 match Ojs.string_of_js x3133 with
                 | "full" -> `L_s44_full
                 | "long" -> `L_s56_long
                 | "medium" -> `L_s60_medium
                 | "short" -> `L_s89_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3130) "dateStyle")
        let (set_dateStyle :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s44_full ] 
            | `U2 of [ `L_s56_long ]  | `U3 of [ `L_s60_medium ] 
            | `U4 of [ `L_s89_short ] ] -> unit)
          =
          fun (x3134 : 'tags this) ->
            fun
              (x3135 :
                [ `Undefined of undefined  | `U1 of [ `L_s44_full ] 
                | `U2 of [ `L_s56_long ]  | `U3 of [ `L_s60_medium ] 
                | `U4 of [ `L_s89_short ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3134) "dateStyle"
                (match x3135 with
                 | `Undefined x3136 -> undefined_to_js x3136
                 | `U1 x3137 ->
                     (match x3137 with
                      | `L_s44_full -> Ojs.string_to_js "full")
                 | `U2 x3138 ->
                     (match x3138 with
                      | `L_s56_long -> Ojs.string_to_js "long")
                 | `U3 x3139 ->
                     (match x3139 with
                      | `L_s60_medium -> Ojs.string_to_js "medium")
                 | `U4 x3140 ->
                     (match x3140 with
                      | `L_s89_short -> Ojs.string_to_js "short"))
        let (get_timeStyle :
          'tags this ->
            [ `L_s44_full  | `L_s56_long  | `L_s60_medium  | `L_s89_short ]
              option)
          =
          fun (x3142 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3144 : Ojs.t) ->
                 let x3145 = x3144 in
                 match Ojs.string_of_js x3145 with
                 | "full" -> `L_s44_full
                 | "long" -> `L_s56_long
                 | "medium" -> `L_s60_medium
                 | "short" -> `L_s89_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3142) "timeStyle")
        let (set_timeStyle :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s44_full ] 
            | `U2 of [ `L_s56_long ]  | `U3 of [ `L_s60_medium ] 
            | `U4 of [ `L_s89_short ] ] -> unit)
          =
          fun (x3146 : 'tags this) ->
            fun
              (x3147 :
                [ `Undefined of undefined  | `U1 of [ `L_s44_full ] 
                | `U2 of [ `L_s56_long ]  | `U3 of [ `L_s60_medium ] 
                | `U4 of [ `L_s89_short ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3146) "timeStyle"
                (match x3147 with
                 | `Undefined x3148 -> undefined_to_js x3148
                 | `U1 x3149 ->
                     (match x3149 with
                      | `L_s44_full -> Ojs.string_to_js "full")
                 | `U2 x3150 ->
                     (match x3150 with
                      | `L_s56_long -> Ojs.string_to_js "long")
                 | `U3 x3151 ->
                     (match x3151 with
                      | `L_s60_medium -> Ojs.string_to_js "medium")
                 | `U4 x3152 ->
                     (match x3152 with
                      | `L_s89_short -> Ojs.string_to_js "short"))
        let (get_dayPeriod :
          'tags this ->
            [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ] option)
          =
          fun (x3154 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3156 : Ojs.t) ->
                 let x3157 = x3156 in
                 match Ojs.string_of_js x3157 with
                 | "long" -> `L_s56_long
                 | "narrow" -> `L_s68_narrow
                 | "short" -> `L_s89_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3154) "dayPeriod")
        let (set_dayPeriod :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s68_narrow ] 
            | `U2 of [ `L_s89_short ]  | `U3 of [ `L_s56_long ] ] -> 
              unit)
          =
          fun (x3158 : 'tags this) ->
            fun
              (x3159 :
                [ `Undefined of undefined  | `U1 of [ `L_s68_narrow ] 
                | `U2 of [ `L_s89_short ]  | `U3 of [ `L_s56_long ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3158) "dayPeriod"
                (match x3159 with
                 | `Undefined x3160 -> undefined_to_js x3160
                 | `U1 x3161 ->
                     (match x3161 with
                      | `L_s68_narrow -> Ojs.string_to_js "narrow")
                 | `U2 x3162 ->
                     (match x3162 with
                      | `L_s89_short -> Ojs.string_to_js "short")
                 | `U3 x3163 ->
                     (match x3163 with
                      | `L_s56_long -> Ojs.string_to_js "long"))
        let (get_fractionalSecondDigits :
          'tags this -> [ `L_n_0  | `L_n_1  | `L_n_2  | `L_n_3 ] option) =
          fun (x3165 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3167 : Ojs.t) ->
                 let x3168 = x3167 in
                 match Ojs.int_of_js x3168 with
                 | 0 -> `L_n_0
                 | 1 -> `L_n_1
                 | 2 -> `L_n_2
                 | 3 -> `L_n_3
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3165)
                 "fractionalSecondDigits")
        let (set_fractionalSecondDigits :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_n_0 ] 
            | `U2 of [ `L_n_1 ]  | `U3 of [ `L_n_2 ]  | `U4 of [ `L_n_3 ] ]
              -> unit)
          =
          fun (x3169 : 'tags this) ->
            fun
              (x3170 :
                [ `Undefined of undefined  | `U1 of [ `L_n_0 ] 
                | `U2 of [ `L_n_1 ]  | `U3 of [ `L_n_2 ] 
                | `U4 of [ `L_n_3 ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3169)
                "fractionalSecondDigits"
                (match x3170 with
                 | `Undefined x3171 -> undefined_to_js x3171
                 | `U1 x3172 ->
                     (match x3172 with | `L_n_0 -> Ojs.int_to_js 0)
                 | `U2 x3173 ->
                     (match x3173 with | `L_n_1 -> Ojs.int_to_js 1)
                 | `U3 x3174 ->
                     (match x3174 with | `L_n_2 -> Ojs.int_to_js 2)
                 | `U4 x3175 ->
                     (match x3175 with | `L_n_3 -> Ojs.int_to_js 3))
        let (get_calendar : 'tags this -> string option) =
          fun (x3177 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3177) "calendar")
        let (set_calendar :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x3180 : 'tags this) ->
            fun (x3181 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3180) "calendar"
                (match x3181 with
                 | `Undefined x3182 -> undefined_to_js x3182
                 | `U1 x3183 -> Ojs.string_to_js x3183)
        let (get_dayPeriod' :
          'tags this ->
            [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ] option)
          =
          fun (x3185 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3187 : Ojs.t) ->
                 let x3188 = x3187 in
                 match Ojs.string_of_js x3188 with
                 | "long" -> `L_s56_long
                 | "narrow" -> `L_s68_narrow
                 | "short" -> `L_s89_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3185) "dayPeriod")
        let (set_dayPeriod' :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s68_narrow ] 
            | `U2 of [ `L_s89_short ]  | `U3 of [ `L_s56_long ] ] -> 
              unit)
          =
          fun (x3189 : 'tags this) ->
            fun
              (x3190 :
                [ `Undefined of undefined  | `U1 of [ `L_s68_narrow ] 
                | `U2 of [ `L_s89_short ]  | `U3 of [ `L_s56_long ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3189) "dayPeriod"
                (match x3190 with
                 | `Undefined x3191 -> undefined_to_js x3191
                 | `U1 x3192 ->
                     (match x3192 with
                      | `L_s68_narrow -> Ojs.string_to_js "narrow")
                 | `U2 x3193 ->
                     (match x3193 with
                      | `L_s89_short -> Ojs.string_to_js "short")
                 | `U3 x3194 ->
                     (match x3194 with
                      | `L_s56_long -> Ojs.string_to_js "long"))
        let (get_numberingSystem : 'tags this -> string option) =
          fun (x3196 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3196)
                 "numberingSystem")
        let (set_numberingSystem :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x3199 : 'tags this) ->
            fun (x3200 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3199)
                "numberingSystem"
                (match x3200 with
                 | `Undefined x3201 -> undefined_to_js x3201
                 | `U1 x3202 -> Ojs.string_to_js x3202)
        let (get_dateStyle' :
          'tags this ->
            [ `L_s44_full  | `L_s56_long  | `L_s60_medium  | `L_s89_short ]
              option)
          =
          fun (x3204 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3206 : Ojs.t) ->
                 let x3207 = x3206 in
                 match Ojs.string_of_js x3207 with
                 | "full" -> `L_s44_full
                 | "long" -> `L_s56_long
                 | "medium" -> `L_s60_medium
                 | "short" -> `L_s89_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3204) "dateStyle")
        let (set_dateStyle' :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s44_full ] 
            | `U2 of [ `L_s56_long ]  | `U3 of [ `L_s60_medium ] 
            | `U4 of [ `L_s89_short ] ] -> unit)
          =
          fun (x3208 : 'tags this) ->
            fun
              (x3209 :
                [ `Undefined of undefined  | `U1 of [ `L_s44_full ] 
                | `U2 of [ `L_s56_long ]  | `U3 of [ `L_s60_medium ] 
                | `U4 of [ `L_s89_short ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3208) "dateStyle"
                (match x3209 with
                 | `Undefined x3210 -> undefined_to_js x3210
                 | `U1 x3211 ->
                     (match x3211 with
                      | `L_s44_full -> Ojs.string_to_js "full")
                 | `U2 x3212 ->
                     (match x3212 with
                      | `L_s56_long -> Ojs.string_to_js "long")
                 | `U3 x3213 ->
                     (match x3213 with
                      | `L_s60_medium -> Ojs.string_to_js "medium")
                 | `U4 x3214 ->
                     (match x3214 with
                      | `L_s89_short -> Ojs.string_to_js "short"))
        let (get_timeStyle' :
          'tags this ->
            [ `L_s44_full  | `L_s56_long  | `L_s60_medium  | `L_s89_short ]
              option)
          =
          fun (x3216 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3218 : Ojs.t) ->
                 let x3219 = x3218 in
                 match Ojs.string_of_js x3219 with
                 | "full" -> `L_s44_full
                 | "long" -> `L_s56_long
                 | "medium" -> `L_s60_medium
                 | "short" -> `L_s89_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3216) "timeStyle")
        let (set_timeStyle' :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s44_full ] 
            | `U2 of [ `L_s56_long ]  | `U3 of [ `L_s60_medium ] 
            | `U4 of [ `L_s89_short ] ] -> unit)
          =
          fun (x3220 : 'tags this) ->
            fun
              (x3221 :
                [ `Undefined of undefined  | `U1 of [ `L_s44_full ] 
                | `U2 of [ `L_s56_long ]  | `U3 of [ `L_s60_medium ] 
                | `U4 of [ `L_s89_short ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3220) "timeStyle"
                (match x3221 with
                 | `Undefined x3222 -> undefined_to_js x3222
                 | `U1 x3223 ->
                     (match x3223 with
                      | `L_s44_full -> Ojs.string_to_js "full")
                 | `U2 x3224 ->
                     (match x3224 with
                      | `L_s56_long -> Ojs.string_to_js "long")
                 | `U3 x3225 ->
                     (match x3225 with
                      | `L_s60_medium -> Ojs.string_to_js "medium")
                 | `U4 x3226 ->
                     (match x3226 with
                      | `L_s89_short -> Ojs.string_to_js "short"))
        let (get_hourCycle :
          'tags this ->
            [ `L_s46_h11  | `L_s47_h12  | `L_s48_h23  | `L_s49_h24 ] option)
          =
          fun (x3228 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3230 : Ojs.t) ->
                 let x3231 = x3230 in
                 match Ojs.string_of_js x3231 with
                 | "h11" -> `L_s46_h11
                 | "h12" -> `L_s47_h12
                 | "h23" -> `L_s48_h23
                 | "h24" -> `L_s49_h24
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3228) "hourCycle")
        let (set_hourCycle :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s46_h11 ] 
            | `U2 of [ `L_s47_h12 ]  | `U3 of [ `L_s48_h23 ] 
            | `U4 of [ `L_s49_h24 ] ] -> unit)
          =
          fun (x3232 : 'tags this) ->
            fun
              (x3233 :
                [ `Undefined of undefined  | `U1 of [ `L_s46_h11 ] 
                | `U2 of [ `L_s47_h12 ]  | `U3 of [ `L_s48_h23 ] 
                | `U4 of [ `L_s49_h24 ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3232) "hourCycle"
                (match x3233 with
                 | `Undefined x3234 -> undefined_to_js x3234
                 | `U1 x3235 ->
                     (match x3235 with | `L_s46_h11 -> Ojs.string_to_js "h11")
                 | `U2 x3236 ->
                     (match x3236 with | `L_s47_h12 -> Ojs.string_to_js "h12")
                 | `U3 x3237 ->
                     (match x3237 with | `L_s48_h23 -> Ojs.string_to_js "h23")
                 | `U4 x3238 ->
                     (match x3238 with | `L_s49_h24 -> Ojs.string_to_js "h24"))
        let (get_localeMatcher :
          'tags this -> [ `L_s24_best_fit  | `L_s57_lookup ] option) =
          fun (x3240 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3242 : Ojs.t) ->
                 let x3243 = x3242 in
                 match Ojs.string_of_js x3243 with
                 | "best fit" -> `L_s24_best_fit
                 | "lookup" -> `L_s57_lookup
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3240)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s24_best_fit ] 
            | `U2 of [ `L_s57_lookup ] ] -> unit)
          =
          fun (x3244 : 'tags this) ->
            fun
              (x3245 :
                [ `Undefined of undefined  | `U1 of [ `L_s24_best_fit ] 
                | `U2 of [ `L_s57_lookup ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3244) "localeMatcher"
                (match x3245 with
                 | `Undefined x3246 -> undefined_to_js x3246
                 | `U1 x3247 ->
                     (match x3247 with
                      | `L_s24_best_fit -> Ojs.string_to_js "best fit")
                 | `U2 x3248 ->
                     (match x3248 with
                      | `L_s57_lookup -> Ojs.string_to_js "lookup"))
        let (get_weekday :
          'tags this ->
            [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ] option)
          =
          fun (x3250 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3252 : Ojs.t) ->
                 let x3253 = x3252 in
                 match Ojs.string_of_js x3253 with
                 | "long" -> `L_s56_long
                 | "narrow" -> `L_s68_narrow
                 | "short" -> `L_s89_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3250) "weekday")
        let (set_weekday :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s56_long ] 
            | `U2 of [ `L_s89_short ]  | `U3 of [ `L_s68_narrow ] ] -> 
              unit)
          =
          fun (x3254 : 'tags this) ->
            fun
              (x3255 :
                [ `Undefined of undefined  | `U1 of [ `L_s56_long ] 
                | `U2 of [ `L_s89_short ]  | `U3 of [ `L_s68_narrow ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3254) "weekday"
                (match x3255 with
                 | `Undefined x3256 -> undefined_to_js x3256
                 | `U1 x3257 ->
                     (match x3257 with
                      | `L_s56_long -> Ojs.string_to_js "long")
                 | `U2 x3258 ->
                     (match x3258 with
                      | `L_s89_short -> Ojs.string_to_js "short")
                 | `U3 x3259 ->
                     (match x3259 with
                      | `L_s68_narrow -> Ojs.string_to_js "narrow"))
        let (get_era :
          'tags this ->
            [ `L_s56_long  | `L_s68_narrow  | `L_s89_short ] option)
          =
          fun (x3261 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3263 : Ojs.t) ->
                 let x3264 = x3263 in
                 match Ojs.string_of_js x3264 with
                 | "long" -> `L_s56_long
                 | "narrow" -> `L_s68_narrow
                 | "short" -> `L_s89_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3261) "era")
        let (set_era :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s56_long ] 
            | `U2 of [ `L_s89_short ]  | `U3 of [ `L_s68_narrow ] ] -> 
              unit)
          =
          fun (x3265 : 'tags this) ->
            fun
              (x3266 :
                [ `Undefined of undefined  | `U1 of [ `L_s56_long ] 
                | `U2 of [ `L_s89_short ]  | `U3 of [ `L_s68_narrow ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3265) "era"
                (match x3266 with
                 | `Undefined x3267 -> undefined_to_js x3267
                 | `U1 x3268 ->
                     (match x3268 with
                      | `L_s56_long -> Ojs.string_to_js "long")
                 | `U2 x3269 ->
                     (match x3269 with
                      | `L_s89_short -> Ojs.string_to_js "short")
                 | `U3 x3270 ->
                     (match x3270 with
                      | `L_s68_narrow -> Ojs.string_to_js "narrow"))
        let (get_year :
          'tags this -> [ `L_s0_2_digit  | `L_s73_numeric ] option) =
          fun (x3272 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3274 : Ojs.t) ->
                 let x3275 = x3274 in
                 match Ojs.string_of_js x3275 with
                 | "2-digit" -> `L_s0_2_digit
                 | "numeric" -> `L_s73_numeric
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3272) "year")
        let (set_year :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
            | `U2 of [ `L_s0_2_digit ] ] -> unit)
          =
          fun (x3276 : 'tags this) ->
            fun
              (x3277 :
                [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
                | `U2 of [ `L_s0_2_digit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3276) "year"
                (match x3277 with
                 | `Undefined x3278 -> undefined_to_js x3278
                 | `U1 x3279 ->
                     (match x3279 with
                      | `L_s73_numeric -> Ojs.string_to_js "numeric")
                 | `U2 x3280 ->
                     (match x3280 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit"))
        let (get_month :
          'tags this ->
            [ `L_s0_2_digit  | `L_s56_long  | `L_s68_narrow 
            | `L_s73_numeric  | `L_s89_short ] option)
          =
          fun (x3282 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3284 : Ojs.t) ->
                 let x3285 = x3284 in
                 match Ojs.string_of_js x3285 with
                 | "2-digit" -> `L_s0_2_digit
                 | "long" -> `L_s56_long
                 | "narrow" -> `L_s68_narrow
                 | "numeric" -> `L_s73_numeric
                 | "short" -> `L_s89_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3282) "month")
        let (set_month :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
            | `U2 of [ `L_s0_2_digit ]  | `U3 of [ `L_s56_long ] 
            | `U4 of [ `L_s89_short ]  | `U5 of [ `L_s68_narrow ] ] -> 
              unit)
          =
          fun (x3286 : 'tags this) ->
            fun
              (x3287 :
                [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
                | `U2 of [ `L_s0_2_digit ]  | `U3 of [ `L_s56_long ] 
                | `U4 of [ `L_s89_short ]  | `U5 of [ `L_s68_narrow ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3286) "month"
                (match x3287 with
                 | `Undefined x3288 -> undefined_to_js x3288
                 | `U1 x3289 ->
                     (match x3289 with
                      | `L_s73_numeric -> Ojs.string_to_js "numeric")
                 | `U2 x3290 ->
                     (match x3290 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit")
                 | `U3 x3291 ->
                     (match x3291 with
                      | `L_s56_long -> Ojs.string_to_js "long")
                 | `U4 x3292 ->
                     (match x3292 with
                      | `L_s89_short -> Ojs.string_to_js "short")
                 | `U5 x3293 ->
                     (match x3293 with
                      | `L_s68_narrow -> Ojs.string_to_js "narrow"))
        let (get_day :
          'tags this -> [ `L_s0_2_digit  | `L_s73_numeric ] option) =
          fun (x3295 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3297 : Ojs.t) ->
                 let x3298 = x3297 in
                 match Ojs.string_of_js x3298 with
                 | "2-digit" -> `L_s0_2_digit
                 | "numeric" -> `L_s73_numeric
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3295) "day")
        let (set_day :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
            | `U2 of [ `L_s0_2_digit ] ] -> unit)
          =
          fun (x3299 : 'tags this) ->
            fun
              (x3300 :
                [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
                | `U2 of [ `L_s0_2_digit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3299) "day"
                (match x3300 with
                 | `Undefined x3301 -> undefined_to_js x3301
                 | `U1 x3302 ->
                     (match x3302 with
                      | `L_s73_numeric -> Ojs.string_to_js "numeric")
                 | `U2 x3303 ->
                     (match x3303 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit"))
        let (get_hour :
          'tags this -> [ `L_s0_2_digit  | `L_s73_numeric ] option) =
          fun (x3305 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3307 : Ojs.t) ->
                 let x3308 = x3307 in
                 match Ojs.string_of_js x3308 with
                 | "2-digit" -> `L_s0_2_digit
                 | "numeric" -> `L_s73_numeric
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3305) "hour")
        let (set_hour :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
            | `U2 of [ `L_s0_2_digit ] ] -> unit)
          =
          fun (x3309 : 'tags this) ->
            fun
              (x3310 :
                [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
                | `U2 of [ `L_s0_2_digit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3309) "hour"
                (match x3310 with
                 | `Undefined x3311 -> undefined_to_js x3311
                 | `U1 x3312 ->
                     (match x3312 with
                      | `L_s73_numeric -> Ojs.string_to_js "numeric")
                 | `U2 x3313 ->
                     (match x3313 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit"))
        let (get_minute :
          'tags this -> [ `L_s0_2_digit  | `L_s73_numeric ] option) =
          fun (x3315 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3317 : Ojs.t) ->
                 let x3318 = x3317 in
                 match Ojs.string_of_js x3318 with
                 | "2-digit" -> `L_s0_2_digit
                 | "numeric" -> `L_s73_numeric
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3315) "minute")
        let (set_minute :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
            | `U2 of [ `L_s0_2_digit ] ] -> unit)
          =
          fun (x3319 : 'tags this) ->
            fun
              (x3320 :
                [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
                | `U2 of [ `L_s0_2_digit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3319) "minute"
                (match x3320 with
                 | `Undefined x3321 -> undefined_to_js x3321
                 | `U1 x3322 ->
                     (match x3322 with
                      | `L_s73_numeric -> Ojs.string_to_js "numeric")
                 | `U2 x3323 ->
                     (match x3323 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit"))
        let (get_second :
          'tags this -> [ `L_s0_2_digit  | `L_s73_numeric ] option) =
          fun (x3325 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3327 : Ojs.t) ->
                 let x3328 = x3327 in
                 match Ojs.string_of_js x3328 with
                 | "2-digit" -> `L_s0_2_digit
                 | "numeric" -> `L_s73_numeric
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3325) "second")
        let (set_second :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
            | `U2 of [ `L_s0_2_digit ] ] -> unit)
          =
          fun (x3329 : 'tags this) ->
            fun
              (x3330 :
                [ `Undefined of undefined  | `U1 of [ `L_s73_numeric ] 
                | `U2 of [ `L_s0_2_digit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3329) "second"
                (match x3330 with
                 | `Undefined x3331 -> undefined_to_js x3331
                 | `U1 x3332 ->
                     (match x3332 with
                      | `L_s73_numeric -> Ojs.string_to_js "numeric")
                 | `U2 x3333 ->
                     (match x3333 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit"))
        let (get_timeZoneName :
          'tags this -> [ `L_s56_long  | `L_s89_short ] option) =
          fun (x3335 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3337 : Ojs.t) ->
                 let x3338 = x3337 in
                 match Ojs.string_of_js x3338 with
                 | "long" -> `L_s56_long
                 | "short" -> `L_s89_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3335) "timeZoneName")
        let (set_timeZoneName :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s56_long ] 
            | `U2 of [ `L_s89_short ] ] -> unit)
          =
          fun (x3339 : 'tags this) ->
            fun
              (x3340 :
                [ `Undefined of undefined  | `U1 of [ `L_s56_long ] 
                | `U2 of [ `L_s89_short ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3339) "timeZoneName"
                (match x3340 with
                 | `Undefined x3341 -> undefined_to_js x3341
                 | `U1 x3342 ->
                     (match x3342 with
                      | `L_s56_long -> Ojs.string_to_js "long")
                 | `U2 x3343 ->
                     (match x3343 with
                      | `L_s89_short -> Ojs.string_to_js "short"))
        let (get_formatMatcher' :
          'tags this -> [ `L_s23_basic  | `L_s24_best_fit ] option) =
          fun (x3345 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3347 : Ojs.t) ->
                 let x3348 = x3347 in
                 match Ojs.string_of_js x3348 with
                 | "basic" -> `L_s23_basic
                 | "best fit" -> `L_s24_best_fit
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3345)
                 "formatMatcher")
        let (set_formatMatcher' :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s24_best_fit ] 
            | `U2 of [ `L_s23_basic ] ] -> unit)
          =
          fun (x3349 : 'tags this) ->
            fun
              (x3350 :
                [ `Undefined of undefined  | `U1 of [ `L_s24_best_fit ] 
                | `U2 of [ `L_s23_basic ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3349) "formatMatcher"
                (match x3350 with
                 | `Undefined x3351 -> undefined_to_js x3351
                 | `U1 x3352 ->
                     (match x3352 with
                      | `L_s24_best_fit -> Ojs.string_to_js "best fit")
                 | `U2 x3353 ->
                     (match x3353 with
                      | `L_s23_basic -> Ojs.string_to_js "basic"))
        let (get_hour12 : 'tags this -> bool option) =
          fun (x3355 : 'tags this) ->
            Ojs.option_of_js Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3355) "hour12")
        let (set_hour12 :
          'tags this -> [ `Undefined of undefined  | `U1 of bool ] -> unit) =
          fun (x3358 : 'tags this) ->
            fun (x3359 : [ `Undefined of undefined  | `U1 of bool ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3358) "hour12"
                (match x3359 with
                 | `Undefined x3360 -> undefined_to_js x3360
                 | `U1 x3361 -> Ojs.bool_to_js x3361)
        let (get_timeZone : 'tags this -> string option) =
          fun (x3363 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3363) "timeZone")
        let (set_timeZone :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x3366 : 'tags this) ->
            fun (x3367 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3366) "timeZone"
                (match x3367 with
                 | `Undefined x3368 -> undefined_to_js x3368
                 | `U1 x3369 -> Ojs.string_to_js x3369)
        let (create :
          ?formatMatcher:[ `L_s23_basic  | `L_s24_best_fit ] ->
            ?dateStyle:[ `L_s44_full  | `L_s56_long  | `L_s60_medium 
                       | `L_s89_short ]
              ->
              ?timeStyle:[ `L_s44_full  | `L_s56_long  | `L_s60_medium 
                         | `L_s89_short ]
                ->
                ?dayPeriod:[ `L_s56_long  | `L_s68_narrow  | `L_s89_short ]
                  ->
                  ?fractionalSecondDigits:[ `L_n_0  | `L_n_1  | `L_n_2 
                                          | `L_n_3 ]
                    ->
                    ?calendar:string ->
                      ?dayPeriod:[ `L_s56_long  | `L_s68_narrow 
                                 | `L_s89_short ]
                        ->
                        ?numberingSystem:string ->
                          ?dateStyle:[ `L_s44_full  | `L_s56_long 
                                     | `L_s60_medium  | `L_s89_short ]
                            ->
                            ?timeStyle:[ `L_s44_full  | `L_s56_long 
                                       | `L_s60_medium  | `L_s89_short ]
                              ->
                              ?hourCycle:[ `L_s46_h11  | `L_s47_h12 
                                         | `L_s48_h23  | `L_s49_h24 ]
                                ->
                                ?localeMatcher:[ `L_s24_best_fit 
                                               | `L_s57_lookup ]
                                  ->
                                  ?weekday:[ `L_s56_long  | `L_s68_narrow 
                                           | `L_s89_short ]
                                    ->
                                    ?era:[ `L_s56_long  | `L_s68_narrow 
                                         | `L_s89_short ]
                                      ->
                                      ?year:[ `L_s0_2_digit 
                                            | `L_s73_numeric ]
                                        ->
                                        ?month:[ `L_s0_2_digit 
                                               | `L_s56_long 
                                               | `L_s68_narrow 
                                               | `L_s73_numeric 
                                               | `L_s89_short ]
                                          ->
                                          ?day:[ `L_s0_2_digit 
                                               | `L_s73_numeric ]
                                            ->
                                            ?hour:[ `L_s0_2_digit 
                                                  | `L_s73_numeric ]
                                              ->
                                              ?minute:[ `L_s0_2_digit 
                                                      | `L_s73_numeric ]
                                                ->
                                                ?second:[ `L_s0_2_digit 
                                                        | `L_s73_numeric ]
                                                  ->
                                                  ?timeZoneName:[
                                                                  `L_s56_long 
                                                                | `L_s89_short
                                                                    ]
                                                    ->
                                                    ?formatMatcher:[
                                                                    `L_s23_basic
                                                                     | 
                                                                    `L_s24_best_fit
                                                                    ]
                                                      ->
                                                      ?hour12:bool ->
                                                        ?timeZone:string ->
                                                          unit -> t)
          =
          fun
            ?formatMatcher:(x3371 :
                             [ `L_s23_basic  | `L_s24_best_fit ] option)
            ->
            fun
              ?dateStyle:(x3372 :
                           [ `L_s44_full  | `L_s56_long  | `L_s60_medium 
                           | `L_s89_short ] option)
              ->
              fun
                ?timeStyle:(x3373 :
                             [ `L_s44_full  | `L_s56_long  | `L_s60_medium 
                             | `L_s89_short ] option)
                ->
                fun
                  ?dayPeriod:(x3374 :
                               [ `L_s56_long  | `L_s68_narrow 
                               | `L_s89_short ] option)
                  ->
                  fun
                    ?fractionalSecondDigits:(x3375 :
                                              [ `L_n_0  | `L_n_1  | `L_n_2 
                                              | `L_n_3 ] option)
                    ->
                    fun ?calendar:(x3376 : string option) ->
                      fun
                        ?dayPeriod:(x3377 :
                                     [ `L_s56_long  | `L_s68_narrow 
                                     | `L_s89_short ] option)
                        ->
                        fun ?numberingSystem:(x3378 : string option) ->
                          fun
                            ?dateStyle:(x3379 :
                                         [ `L_s44_full  | `L_s56_long 
                                         | `L_s60_medium  | `L_s89_short ]
                                           option)
                            ->
                            fun
                              ?timeStyle:(x3380 :
                                           [ `L_s44_full  | `L_s56_long 
                                           | `L_s60_medium  | `L_s89_short ]
                                             option)
                              ->
                              fun
                                ?hourCycle:(x3381 :
                                             [ `L_s46_h11  | `L_s47_h12 
                                             | `L_s48_h23  | `L_s49_h24 ]
                                               option)
                                ->
                                fun
                                  ?localeMatcher:(x3382 :
                                                   [ `L_s24_best_fit 
                                                   | `L_s57_lookup ] option)
                                  ->
                                  fun
                                    ?weekday:(x3383 :
                                               [ `L_s56_long 
                                               | `L_s68_narrow 
                                               | `L_s89_short ] option)
                                    ->
                                    fun
                                      ?era:(x3384 :
                                             [ `L_s56_long  | `L_s68_narrow 
                                             | `L_s89_short ] option)
                                      ->
                                      fun
                                        ?year:(x3385 :
                                                [ `L_s0_2_digit 
                                                | `L_s73_numeric ] option)
                                        ->
                                        fun
                                          ?month:(x3386 :
                                                   [ `L_s0_2_digit 
                                                   | `L_s56_long 
                                                   | `L_s68_narrow 
                                                   | `L_s73_numeric 
                                                   | `L_s89_short ] option)
                                          ->
                                          fun
                                            ?day:(x3387 :
                                                   [ `L_s0_2_digit 
                                                   | `L_s73_numeric ] option)
                                            ->
                                            fun
                                              ?hour:(x3388 :
                                                      [ `L_s0_2_digit 
                                                      | `L_s73_numeric ]
                                                        option)
                                              ->
                                              fun
                                                ?minute:(x3389 :
                                                          [ `L_s0_2_digit 
                                                          | `L_s73_numeric ]
                                                            option)
                                                ->
                                                fun
                                                  ?second:(x3390 :
                                                            [ `L_s0_2_digit 
                                                            | `L_s73_numeric ]
                                                              option)
                                                  ->
                                                  fun
                                                    ?timeZoneName:(x3391 :
                                                                    [
                                                                    `L_s56_long
                                                                     | 
                                                                    `L_s89_short
                                                                    ] option)
                                                    ->
                                                    fun
                                                      ?formatMatcher:
                                                      (x3392 :
                                                        [ `L_s23_basic 
                                                        | `L_s24_best_fit ]
                                                          option)
                                                      ->
                                                      fun
                                                        ?hour12:(x3393 :
                                                                  bool option)
                                                        ->
                                                        fun
                                                          ?timeZone:(x3394 :
                                                                    string
                                                                    option)
                                                          ->
                                                          fun () ->
                                                            let x3395 =
                                                              Ojs.empty_obj
                                                                () in
                                                            (match x3371 with
                                                             | Some x3419 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3395
                                                                   "formatMatcher"
                                                                   (match x3419
                                                                    with
                                                                    | 
                                                                    `L_s23_basic
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "basic"
                                                                    | 
                                                                    `L_s24_best_fit
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "best fit")
                                                             | None -> ());
                                                            (match x3372 with
                                                             | Some x3418 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3395
                                                                   "dateStyle"
                                                                   (match x3418
                                                                    with
                                                                    | 
                                                                    `L_s44_full
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "full"
                                                                    | 
                                                                    `L_s56_long
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "long"
                                                                    | 
                                                                    `L_s60_medium
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "medium"
                                                                    | 
                                                                    `L_s89_short
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "short")
                                                             | None -> ());
                                                            (match x3373 with
                                                             | Some x3417 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3395
                                                                   "timeStyle"
                                                                   (match x3417
                                                                    with
                                                                    | 
                                                                    `L_s44_full
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "full"
                                                                    | 
                                                                    `L_s56_long
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "long"
                                                                    | 
                                                                    `L_s60_medium
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "medium"
                                                                    | 
                                                                    `L_s89_short
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "short")
                                                             | None -> ());
                                                            (match x3374 with
                                                             | Some x3416 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3395
                                                                   "dayPeriod"
                                                                   (match x3416
                                                                    with
                                                                    | 
                                                                    `L_s56_long
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "long"
                                                                    | 
                                                                    `L_s68_narrow
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "narrow"
                                                                    | 
                                                                    `L_s89_short
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "short")
                                                             | None -> ());
                                                            (match x3375 with
                                                             | Some x3415 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3395
                                                                   "fractionalSecondDigits"
                                                                   (match x3415
                                                                    with
                                                                    | 
                                                                    `L_n_0 ->
                                                                    Ojs.int_to_js
                                                                    0
                                                                    | 
                                                                    `L_n_1 ->
                                                                    Ojs.int_to_js
                                                                    1
                                                                    | 
                                                                    `L_n_2 ->
                                                                    Ojs.int_to_js
                                                                    2
                                                                    | 
                                                                    `L_n_3 ->
                                                                    Ojs.int_to_js
                                                                    3)
                                                             | None -> ());
                                                            (match x3376 with
                                                             | Some x3414 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3395
                                                                   "calendar"
                                                                   (Ojs.string_to_js
                                                                    x3414)
                                                             | None -> ());
                                                            (match x3377 with
                                                             | Some x3413 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3395
                                                                   "dayPeriod"
                                                                   (match x3413
                                                                    with
                                                                    | 
                                                                    `L_s56_long
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "long"
                                                                    | 
                                                                    `L_s68_narrow
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "narrow"
                                                                    | 
                                                                    `L_s89_short
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "short")
                                                             | None -> ());
                                                            (match x3378 with
                                                             | Some x3412 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3395
                                                                   "numberingSystem"
                                                                   (Ojs.string_to_js
                                                                    x3412)
                                                             | None -> ());
                                                            (match x3379 with
                                                             | Some x3411 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3395
                                                                   "dateStyle"
                                                                   (match x3411
                                                                    with
                                                                    | 
                                                                    `L_s44_full
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "full"
                                                                    | 
                                                                    `L_s56_long
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "long"
                                                                    | 
                                                                    `L_s60_medium
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "medium"
                                                                    | 
                                                                    `L_s89_short
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "short")
                                                             | None -> ());
                                                            (match x3380 with
                                                             | Some x3410 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3395
                                                                   "timeStyle"
                                                                   (match x3410
                                                                    with
                                                                    | 
                                                                    `L_s44_full
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "full"
                                                                    | 
                                                                    `L_s56_long
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "long"
                                                                    | 
                                                                    `L_s60_medium
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "medium"
                                                                    | 
                                                                    `L_s89_short
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "short")
                                                             | None -> ());
                                                            (match x3381 with
                                                             | Some x3409 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3395
                                                                   "hourCycle"
                                                                   (match x3409
                                                                    with
                                                                    | 
                                                                    `L_s46_h11
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "h11"
                                                                    | 
                                                                    `L_s47_h12
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "h12"
                                                                    | 
                                                                    `L_s48_h23
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "h23"
                                                                    | 
                                                                    `L_s49_h24
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "h24")
                                                             | None -> ());
                                                            (match x3382 with
                                                             | Some x3408 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3395
                                                                   "localeMatcher"
                                                                   (match x3408
                                                                    with
                                                                    | 
                                                                    `L_s24_best_fit
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "best fit"
                                                                    | 
                                                                    `L_s57_lookup
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "lookup")
                                                             | None -> ());
                                                            (match x3383 with
                                                             | Some x3407 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3395
                                                                   "weekday"
                                                                   (match x3407
                                                                    with
                                                                    | 
                                                                    `L_s56_long
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "long"
                                                                    | 
                                                                    `L_s68_narrow
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "narrow"
                                                                    | 
                                                                    `L_s89_short
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "short")
                                                             | None -> ());
                                                            (match x3384 with
                                                             | Some x3406 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3395
                                                                   "era"
                                                                   (match x3406
                                                                    with
                                                                    | 
                                                                    `L_s56_long
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "long"
                                                                    | 
                                                                    `L_s68_narrow
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "narrow"
                                                                    | 
                                                                    `L_s89_short
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "short")
                                                             | None -> ());
                                                            (match x3385 with
                                                             | Some x3405 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3395
                                                                   "year"
                                                                   (match x3405
                                                                    with
                                                                    | 
                                                                    `L_s0_2_digit
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "2-digit"
                                                                    | 
                                                                    `L_s73_numeric
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "numeric")
                                                             | None -> ());
                                                            (match x3386 with
                                                             | Some x3404 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3395
                                                                   "month"
                                                                   (match x3404
                                                                    with
                                                                    | 
                                                                    `L_s0_2_digit
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "2-digit"
                                                                    | 
                                                                    `L_s56_long
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "long"
                                                                    | 
                                                                    `L_s68_narrow
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "narrow"
                                                                    | 
                                                                    `L_s73_numeric
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "numeric"
                                                                    | 
                                                                    `L_s89_short
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "short")
                                                             | None -> ());
                                                            (match x3387 with
                                                             | Some x3403 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3395
                                                                   "day"
                                                                   (match x3403
                                                                    with
                                                                    | 
                                                                    `L_s0_2_digit
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "2-digit"
                                                                    | 
                                                                    `L_s73_numeric
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "numeric")
                                                             | None -> ());
                                                            (match x3388 with
                                                             | Some x3402 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3395
                                                                   "hour"
                                                                   (match x3402
                                                                    with
                                                                    | 
                                                                    `L_s0_2_digit
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "2-digit"
                                                                    | 
                                                                    `L_s73_numeric
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "numeric")
                                                             | None -> ());
                                                            (match x3389 with
                                                             | Some x3401 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3395
                                                                   "minute"
                                                                   (match x3401
                                                                    with
                                                                    | 
                                                                    `L_s0_2_digit
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "2-digit"
                                                                    | 
                                                                    `L_s73_numeric
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "numeric")
                                                             | None -> ());
                                                            (match x3390 with
                                                             | Some x3400 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3395
                                                                   "second"
                                                                   (match x3400
                                                                    with
                                                                    | 
                                                                    `L_s0_2_digit
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "2-digit"
                                                                    | 
                                                                    `L_s73_numeric
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "numeric")
                                                             | None -> ());
                                                            (match x3391 with
                                                             | Some x3399 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3395
                                                                   "timeZoneName"
                                                                   (match x3399
                                                                    with
                                                                    | 
                                                                    `L_s56_long
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "long"
                                                                    | 
                                                                    `L_s89_short
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "short")
                                                             | None -> ());
                                                            (match x3392 with
                                                             | Some x3398 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3395
                                                                   "formatMatcher"
                                                                   (match x3398
                                                                    with
                                                                    | 
                                                                    `L_s23_basic
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "basic"
                                                                    | 
                                                                    `L_s24_best_fit
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "best fit")
                                                             | None -> ());
                                                            (match x3393 with
                                                             | Some x3397 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3395
                                                                   "hour12"
                                                                   (Ojs.bool_to_js
                                                                    x3397)
                                                             | None -> ());
                                                            (match x3394 with
                                                             | Some x3396 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3395
                                                                   "timeZone"
                                                                   (Ojs.string_to_js
                                                                    x3396)
                                                             | None -> ());
                                                            t_of_js x3395
        let cast_from = Obj.magic
      end
    module DateTimeFormat =
      struct
        type t = [ `Intl_DateTimeFormat ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x3421 : Ojs.t) -> t_of_js x3421
        and t_0_to_js : t_0 -> Ojs.t = fun (x3420 : t) -> t_to_js x3420
        type tags = [ `Intl_DateTimeFormat ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_DateTimeFormat ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x3424 : Ojs.t) -> intf_of_js __tags_of_js x3424
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x3422 : __tags intf) -> intf_to_js __tags_to_js x3422
        let (formatToParts :
          'tags this ->
            ?date:[ `U1 of Date.t  | `U2 of float ] ->
              unit -> DateTimeFormatPart.t list)
          =
          fun (x3431 : 'tags this) ->
            fun ?date:(x3426 : [ `U1 of Date.t  | `U2 of float ] option) ->
              fun () ->
                Ojs.list_of_js DateTimeFormatPart.t_of_js
                  (let x3433 = this_to_js Obj.magic x3431 in
                   Ojs.call (Ojs.get_prop_ascii x3433 "formatToParts")
                     "apply"
                     [|x3433;((let x3427 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x3426 with
                                | Some x3428 ->
                                    ignore
                                      (Ojs.call x3427 "push"
                                         [|((match x3428 with
                                             | `U1 x3429 ->
                                                 Date.t_to_js x3429
                                             | `U2 x3430 ->
                                                 Ojs.float_to_js x3430))|])
                                | None -> ());
                               x3427))|])
        let (format :
          'tags this ->
            ?date:[ `U1 of Date.t  | `U2 of float ] -> unit -> string)
          =
          fun (x3440 : 'tags this) ->
            fun ?date:(x3435 : [ `U1 of Date.t  | `U2 of float ] option) ->
              fun () ->
                Ojs.string_of_js
                  (let x3442 = this_to_js Obj.magic x3440 in
                   Ojs.call (Ojs.get_prop_ascii x3442 "format") "apply"
                     [|x3442;((let x3436 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x3435 with
                                | Some x3437 ->
                                    ignore
                                      (Ojs.call x3436 "push"
                                         [|((match x3437 with
                                             | `U1 x3438 ->
                                                 Date.t_to_js x3438
                                             | `U2 x3439 ->
                                                 Ojs.float_to_js x3439))|])
                                | None -> ());
                               x3436))|])
        let (resolvedOptions : 'tags this -> ResolvedDateTimeFormatOptions.t)
          =
          fun (x3443 : 'tags this) ->
            ResolvedDateTimeFormatOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x3443) "resolvedOptions" [||])
        let cast_from = Obj.magic
        let (create :
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:DateTimeFormatOptions.t -> unit -> t)
          =
          fun
            ?locales:(x3445 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x3446 : DateTimeFormatOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl")
                        "DateTimeFormat")
                     (let x3447 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x3445 with
                       | Some x3449 ->
                           ignore
                             (Ojs.call x3447 "push"
                                [|((match x3449 with
                                    | `U1 x3450 -> Ojs.string_to_js x3450
                                    | `U2 x3451 ->
                                        Ojs.list_to_js Ojs.string_to_js x3451))|])
                       | None -> ());
                      (match x3446 with
                       | Some x3448 ->
                           ignore
                             (Ojs.call x3447 "push"
                                [|(DateTimeFormatOptions.t_to_js x3448)|])
                       | None -> ());
                      x3447))
        let (invoke :
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:DateTimeFormatOptions.t -> unit -> t)
          =
          fun
            ?locales:(x3453 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x3454 : DateTimeFormatOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl")
                        "DateTimeFormat") "apply"
                     [|Ojs.null;((let x3455 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  (match x3453 with
                                   | Some x3457 ->
                                       ignore
                                         (Ojs.call x3455 "push"
                                            [|((match x3457 with
                                                | `U1 x3458 ->
                                                    Ojs.string_to_js x3458
                                                | `U2 x3459 ->
                                                    Ojs.list_to_js
                                                      Ojs.string_to_js x3459))|])
                                   | None -> ());
                                  (match x3454 with
                                   | Some x3456 ->
                                       ignore
                                         (Ojs.call x3455 "push"
                                            [|(DateTimeFormatOptions.t_to_js
                                                 x3456)|])
                                   | None -> ());
                                  x3455))|])
        let (supportedLocalesOf :
          locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:DateTimeFormatOptions.t -> unit -> string list)
          =
          fun ~locales:(x3461 : [ `U1 of string  | `U2 of string list ]) ->
            fun ?options:(x3462 : DateTimeFormatOptions.t option) ->
              fun () ->
                Ojs.list_of_js Ojs.string_of_js
                  (let x3468 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl")
                       "DateTimeFormat" in
                   Ojs.call (Ojs.get_prop_ascii x3468 "supportedLocalesOf")
                     "apply"
                     [|x3468;((let x3463 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3463 "push"
                                    [|((match x3461 with
                                        | `U1 x3465 -> Ojs.string_to_js x3465
                                        | `U2 x3466 ->
                                            Ojs.list_to_js Ojs.string_to_js
                                              x3466))|]);
                               (match x3462 with
                                | Some x3464 ->
                                    ignore
                                      (Ojs.call x3463 "push"
                                         [|(DateTimeFormatOptions.t_to_js
                                              x3464)|])
                                | None -> ());
                               x3463))|])
      end
    module ResolvedCollatorOptions =
      struct
        type t = [ `Intl_ResolvedCollatorOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x3471 : Ojs.t) -> t_of_js x3471
        and t_0_to_js : t_0 -> Ojs.t = fun (x3470 : t) -> t_to_js x3470
        type tags = [ `Intl_ResolvedCollatorOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_ResolvedCollatorOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x3474 : Ojs.t) -> intf_of_js __tags_of_js x3474
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x3472 : __tags intf) -> intf_to_js __tags_to_js x3472
        let (get_locale : 'tags this -> string) =
          fun (x3476 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3476) "locale")
        let (set_locale : 'tags this -> string -> unit) =
          fun (x3478 : 'tags this) ->
            fun (x3479 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3478) "locale"
                (Ojs.string_to_js x3479)
        let (get_usage : 'tags this -> string) =
          fun (x3481 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3481) "usage")
        let (set_usage : 'tags this -> string -> unit) =
          fun (x3483 : 'tags this) ->
            fun (x3484 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3483) "usage"
                (Ojs.string_to_js x3484)
        let (get_sensitivity : 'tags this -> string) =
          fun (x3486 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3486) "sensitivity")
        let (set_sensitivity : 'tags this -> string -> unit) =
          fun (x3488 : 'tags this) ->
            fun (x3489 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3488) "sensitivity"
                (Ojs.string_to_js x3489)
        let (get_ignorePunctuation : 'tags this -> bool) =
          fun (x3491 : 'tags this) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3491)
                 "ignorePunctuation")
        let (set_ignorePunctuation : 'tags this -> bool -> unit) =
          fun (x3493 : 'tags this) ->
            fun (x3494 : bool) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3493)
                "ignorePunctuation" (Ojs.bool_to_js x3494)
        let (get_collation : 'tags this -> string) =
          fun (x3496 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3496) "collation")
        let (set_collation : 'tags this -> string -> unit) =
          fun (x3498 : 'tags this) ->
            fun (x3499 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3498) "collation"
                (Ojs.string_to_js x3499)
        let (get_caseFirst : 'tags this -> string) =
          fun (x3501 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3501) "caseFirst")
        let (set_caseFirst : 'tags this -> string -> unit) =
          fun (x3503 : 'tags this) ->
            fun (x3504 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3503) "caseFirst"
                (Ojs.string_to_js x3504)
        let (get_numeric : 'tags this -> bool) =
          fun (x3506 : 'tags this) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3506) "numeric")
        let (set_numeric : 'tags this -> bool -> unit) =
          fun (x3508 : 'tags this) ->
            fun (x3509 : bool) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3508) "numeric"
                (Ojs.bool_to_js x3509)
        let (create :
          locale:string ->
            usage:string ->
              sensitivity:string ->
                ignorePunctuation:bool ->
                  collation:string ->
                    caseFirst:string -> numeric:bool -> unit -> t)
          =
          fun ~locale:(x3511 : string) ->
            fun ~usage:(x3512 : string) ->
              fun ~sensitivity:(x3513 : string) ->
                fun ~ignorePunctuation:(x3514 : bool) ->
                  fun ~collation:(x3515 : string) ->
                    fun ~caseFirst:(x3516 : string) ->
                      fun ~numeric:(x3517 : bool) ->
                        fun () ->
                          let x3518 = Ojs.empty_obj () in
                          Ojs.set_prop_ascii x3518 "locale"
                            (Ojs.string_to_js x3511);
                          Ojs.set_prop_ascii x3518 "usage"
                            (Ojs.string_to_js x3512);
                          Ojs.set_prop_ascii x3518 "sensitivity"
                            (Ojs.string_to_js x3513);
                          Ojs.set_prop_ascii x3518 "ignorePunctuation"
                            (Ojs.bool_to_js x3514);
                          Ojs.set_prop_ascii x3518 "collation"
                            (Ojs.string_to_js x3515);
                          Ojs.set_prop_ascii x3518 "caseFirst"
                            (Ojs.string_to_js x3516);
                          Ojs.set_prop_ascii x3518 "numeric"
                            (Ojs.bool_to_js x3517);
                          t_of_js x3518
        let cast_from = Obj.magic
      end
    module CollatorOptions =
      struct
        type t = [ `Intl_CollatorOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x3520 : Ojs.t) -> t_of_js x3520
        and t_0_to_js : t_0 -> Ojs.t = fun (x3519 : t) -> t_to_js x3519
        type tags = [ `Intl_CollatorOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_CollatorOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x3523 : Ojs.t) -> intf_of_js __tags_of_js x3523
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x3521 : __tags intf) -> intf_to_js __tags_to_js x3521
        let (get_usage : 'tags this -> string option) =
          fun (x3525 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3525) "usage")
        let (set_usage :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x3528 : 'tags this) ->
            fun (x3529 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3528) "usage"
                (match x3529 with
                 | `Undefined x3530 -> undefined_to_js x3530
                 | `U1 x3531 -> Ojs.string_to_js x3531)
        let (get_localeMatcher : 'tags this -> string option) =
          fun (x3533 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3533)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x3536 : 'tags this) ->
            fun (x3537 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3536) "localeMatcher"
                (match x3537 with
                 | `Undefined x3538 -> undefined_to_js x3538
                 | `U1 x3539 -> Ojs.string_to_js x3539)
        let (get_numeric : 'tags this -> bool option) =
          fun (x3541 : 'tags this) ->
            Ojs.option_of_js Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3541) "numeric")
        let (set_numeric :
          'tags this -> [ `Undefined of undefined  | `U1 of bool ] -> unit) =
          fun (x3544 : 'tags this) ->
            fun (x3545 : [ `Undefined of undefined  | `U1 of bool ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3544) "numeric"
                (match x3545 with
                 | `Undefined x3546 -> undefined_to_js x3546
                 | `U1 x3547 -> Ojs.bool_to_js x3547)
        let (get_caseFirst : 'tags this -> string option) =
          fun (x3549 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3549) "caseFirst")
        let (set_caseFirst :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x3552 : 'tags this) ->
            fun (x3553 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3552) "caseFirst"
                (match x3553 with
                 | `Undefined x3554 -> undefined_to_js x3554
                 | `U1 x3555 -> Ojs.string_to_js x3555)
        let (get_sensitivity : 'tags this -> string option) =
          fun (x3557 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3557) "sensitivity")
        let (set_sensitivity :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x3560 : 'tags this) ->
            fun (x3561 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3560) "sensitivity"
                (match x3561 with
                 | `Undefined x3562 -> undefined_to_js x3562
                 | `U1 x3563 -> Ojs.string_to_js x3563)
        let (get_ignorePunctuation : 'tags this -> bool option) =
          fun (x3565 : 'tags this) ->
            Ojs.option_of_js Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3565)
                 "ignorePunctuation")
        let (set_ignorePunctuation :
          'tags this -> [ `Undefined of undefined  | `U1 of bool ] -> unit) =
          fun (x3568 : 'tags this) ->
            fun (x3569 : [ `Undefined of undefined  | `U1 of bool ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3568)
                "ignorePunctuation"
                (match x3569 with
                 | `Undefined x3570 -> undefined_to_js x3570
                 | `U1 x3571 -> Ojs.bool_to_js x3571)
        let (create :
          ?usage:string ->
            ?localeMatcher:string ->
              ?numeric:bool ->
                ?caseFirst:string ->
                  ?sensitivity:string -> ?ignorePunctuation:bool -> unit -> t)
          =
          fun ?usage:(x3573 : string option) ->
            fun ?localeMatcher:(x3574 : string option) ->
              fun ?numeric:(x3575 : bool option) ->
                fun ?caseFirst:(x3576 : string option) ->
                  fun ?sensitivity:(x3577 : string option) ->
                    fun ?ignorePunctuation:(x3578 : bool option) ->
                      fun () ->
                        let x3579 = Ojs.empty_obj () in
                        (match x3573 with
                         | Some x3585 ->
                             Ojs.set_prop_ascii x3579 "usage"
                               (Ojs.string_to_js x3585)
                         | None -> ());
                        (match x3574 with
                         | Some x3584 ->
                             Ojs.set_prop_ascii x3579 "localeMatcher"
                               (Ojs.string_to_js x3584)
                         | None -> ());
                        (match x3575 with
                         | Some x3583 ->
                             Ojs.set_prop_ascii x3579 "numeric"
                               (Ojs.bool_to_js x3583)
                         | None -> ());
                        (match x3576 with
                         | Some x3582 ->
                             Ojs.set_prop_ascii x3579 "caseFirst"
                               (Ojs.string_to_js x3582)
                         | None -> ());
                        (match x3577 with
                         | Some x3581 ->
                             Ojs.set_prop_ascii x3579 "sensitivity"
                               (Ojs.string_to_js x3581)
                         | None -> ());
                        (match x3578 with
                         | Some x3580 ->
                             Ojs.set_prop_ascii x3579 "ignorePunctuation"
                               (Ojs.bool_to_js x3580)
                         | None -> ());
                        t_of_js x3579
        let cast_from = Obj.magic
      end
    module Collator =
      struct
        type t = [ `Intl_Collator ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x3587 : Ojs.t) -> t_of_js x3587
        and t_0_to_js : t_0 -> Ojs.t = fun (x3586 : t) -> t_to_js x3586
        type tags = [ `Intl_Collator ]
        type tags_0 = tags
        type 'tags this = 'tags intf constraint 'tags = [> `Intl_Collator ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          =
          fun (type __tags) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (x3590 : Ojs.t) -> intf_of_js __tags_of_js x3590
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (x3588 : __tags intf) -> intf_to_js __tags_to_js x3588
        let (compare : 'tags this -> x:string -> y:string -> float) =
          fun (x3594 : 'tags this) ->
            fun ~x:(x3592 : string) ->
              fun ~y:(x3593 : string) ->
                Ojs.float_of_js
                  (Ojs.call (this_to_js Obj.magic x3594) "compare"
                     [|(Ojs.string_to_js x3592);(Ojs.string_to_js x3593)|])
        let (resolvedOptions : 'tags this -> ResolvedCollatorOptions.t) =
          fun (x3596 : 'tags this) ->
            ResolvedCollatorOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x3596) "resolvedOptions" [||])
        let cast_from = Obj.magic
        let (create :
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:CollatorOptions.t -> unit -> t)
          =
          fun
            ?locales:(x3598 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x3599 : CollatorOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "Collator")
                     (let x3600 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x3598 with
                       | Some x3602 ->
                           ignore
                             (Ojs.call x3600 "push"
                                [|((match x3602 with
                                    | `U1 x3603 -> Ojs.string_to_js x3603
                                    | `U2 x3604 ->
                                        Ojs.list_to_js Ojs.string_to_js x3604))|])
                       | None -> ());
                      (match x3599 with
                       | Some x3601 ->
                           ignore
                             (Ojs.call x3600 "push"
                                [|(CollatorOptions.t_to_js x3601)|])
                       | None -> ());
                      x3600))
        let (invoke :
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:CollatorOptions.t -> unit -> t)
          =
          fun
            ?locales:(x3606 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x3607 : CollatorOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "Collator")
                     "apply"
                     [|Ojs.null;((let x3608 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  (match x3606 with
                                   | Some x3610 ->
                                       ignore
                                         (Ojs.call x3608 "push"
                                            [|((match x3610 with
                                                | `U1 x3611 ->
                                                    Ojs.string_to_js x3611
                                                | `U2 x3612 ->
                                                    Ojs.list_to_js
                                                      Ojs.string_to_js x3612))|])
                                   | None -> ());
                                  (match x3607 with
                                   | Some x3609 ->
                                       ignore
                                         (Ojs.call x3608 "push"
                                            [|(CollatorOptions.t_to_js x3609)|])
                                   | None -> ());
                                  x3608))|])
        let (supportedLocalesOf :
          locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:CollatorOptions.t -> unit -> string list)
          =
          fun ~locales:(x3614 : [ `U1 of string  | `U2 of string list ]) ->
            fun ?options:(x3615 : CollatorOptions.t option) ->
              fun () ->
                Ojs.list_of_js Ojs.string_of_js
                  (let x3621 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl") "Collator" in
                   Ojs.call (Ojs.get_prop_ascii x3621 "supportedLocalesOf")
                     "apply"
                     [|x3621;((let x3616 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3616 "push"
                                    [|((match x3614 with
                                        | `U1 x3618 -> Ojs.string_to_js x3618
                                        | `U2 x3619 ->
                                            Ojs.list_to_js Ojs.string_to_js
                                              x3619))|]);
                               (match x3615 with
                                | Some x3617 ->
                                    ignore
                                      (Ojs.call x3616 "push"
                                         [|(CollatorOptions.t_to_js x3617)|])
                                | None -> ());
                               x3616))|])
      end
  end
module String =
  struct
    module AnonymousInterface6 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x3624 : Ojs.t) -> x3624
        and t_to_js : t -> Ojs.t = fun (x3623 : Ojs.t) -> x3623
        let (get_raw : t -> (string ArrayLike.t, string list) union2) =
          fun (x3625 : t) ->
            union2_of_js
              (fun (x3626 : Ojs.t) ->
                 ArrayLike.t_of_js Ojs.string_of_js x3626)
              (fun (x3628 : Ojs.t) -> Ojs.list_of_js Ojs.string_of_js x3628)
              (Ojs.get_prop_ascii (t_to_js x3625) "raw")
        let (set_raw :
          t -> [ `U1 of string list  | `U2 of string ArrayLike.t ] -> unit) =
          fun (x3630 : t) ->
            fun (x3631 : [ `U1 of string list  | `U2 of string ArrayLike.t ])
              ->
              Ojs.set_prop_ascii (t_to_js x3630) "raw"
                (match x3631 with
                 | `U1 x3632 -> Ojs.list_to_js Ojs.string_to_js x3632
                 | `U2 x3634 -> ArrayLike.t_to_js Ojs.string_to_js x3634)
        let (create :
          raw:(string ArrayLike.t, string list) union2 -> unit -> t) =
          fun ~raw:(x3636 : (string ArrayLike.t, string list) union2) ->
            fun () ->
              let x3637 = Ojs.empty_obj () in
              Ojs.set_prop_ascii x3637 "raw"
                (union2_to_js
                   (fun (x3638 : string ArrayLike.t) ->
                      ArrayLike.t_to_js Ojs.string_to_js x3638)
                   (fun (x3640 : string list) ->
                      Ojs.list_to_js Ojs.string_to_js x3640) x3636);
              t_of_js x3637
      end
    module AnonymousInterface22 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x3643 : Ojs.t) -> x3643
        and t_to_js : t -> Ojs.t = fun (x3642 : Ojs.t) -> x3642
      end
    module AnonymousInterface21 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x3645 : Ojs.t) -> x3645
        and t_to_js : t -> Ojs.t = fun (x3644 : Ojs.t) -> x3644
      end
    module AnonymousInterface20 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x3647 : Ojs.t) -> x3647
        and t_to_js : t -> Ojs.t = fun (x3646 : Ojs.t) -> x3646
      end
    module AnonymousInterface19 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x3649 : Ojs.t) -> x3649
        and t_to_js : t -> Ojs.t = fun (x3648 : Ojs.t) -> x3648
      end
    module AnonymousInterface18 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x3651 : Ojs.t) -> x3651
        and t_to_js : t -> Ojs.t = fun (x3650 : Ojs.t) -> x3650
      end
    type t =
      [ `String  | string ArrayLike.tags_1 | string IterableIterator.tags_1]
        intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3653 : Ojs.t) -> t_of_js x3653
    and t_0_to_js : t_0 -> Ojs.t = fun (x3652 : t) -> t_to_js x3652
    type tags =
      [ `String  | string ArrayLike.tags_1 | string IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `String ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x3656 : Ojs.t) -> intf_of_js __tags_of_js x3656
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x3654 : __tags intf) -> intf_to_js __tags_to_js x3654
    let (replaceAll :
      'tags this ->
        searchValue:[ `U1 of string  | `U2 of RegExp.t ] ->
          replaceValue:string -> string)
      =
      fun (x3662 : 'tags this) ->
        fun ~searchValue:(x3658 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          fun ~replaceValue:(x3661 : string) ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3662) "replaceAll"
                 [|((match x3658 with
                     | `U1 x3659 -> Ojs.string_to_js x3659
                     | `U2 x3660 -> RegExp.t_to_js x3660));(Ojs.string_to_js
                                                              x3661)|])
    let (replaceAll' :
      'tags this ->
        searchValue:[ `U1 of string  | `U2 of RegExp.t ] ->
          replacer:(substring:string -> args:any list -> string) -> string)
      =
      fun (x3670 : 'tags this) ->
        fun ~searchValue:(x3664 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          fun ~replacer:(x3667 : substring:string -> args:any list -> string)
            ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3670) "replaceAll"
                 [|((match x3664 with
                     | `U1 x3665 -> Ojs.string_to_js x3665
                     | `U2 x3666 -> RegExp.t_to_js x3666));(Ojs.fun_to_js_args
                                                              (fun
                                                                 (x3668 : _)
                                                                 ->
                                                                 Ojs.string_to_js
                                                                   (x3667
                                                                    ~substring:(
                                                                    Ojs.string_of_js
                                                                    (Ojs.array_get
                                                                    x3668 0))
                                                                    ~args:(
                                                                    Ojs.list_of_js_from
                                                                    any_of_js
                                                                    x3668 1))))|])
    let (at : 'tags this -> index:float -> string option) =
      fun (x3673 : 'tags this) ->
        fun ~index:(x3672 : float) ->
          Ojs.option_of_js Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3673) "at"
               [|(Ojs.float_to_js x3672)|])
    let (replaceAll'' :
      'tags this ->
        searchValue:[ `U1 of string  | `U2 of RegExp.t ] ->
          replaceValue:string -> string)
      =
      fun (x3680 : 'tags this) ->
        fun ~searchValue:(x3676 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          fun ~replaceValue:(x3679 : string) ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3680) "replaceAll"
                 [|((match x3676 with
                     | `U1 x3677 -> Ojs.string_to_js x3677
                     | `U2 x3678 -> RegExp.t_to_js x3678));(Ojs.string_to_js
                                                              x3679)|])
    let (replaceAll''' :
      'tags this ->
        searchValue:[ `U1 of string  | `U2 of RegExp.t ] ->
          replacer:(substring:string -> args:any list -> string) -> string)
      =
      fun (x3688 : 'tags this) ->
        fun ~searchValue:(x3682 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          fun ~replacer:(x3685 : substring:string -> args:any list -> string)
            ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3688) "replaceAll"
                 [|((match x3682 with
                     | `U1 x3683 -> Ojs.string_to_js x3683
                     | `U2 x3684 -> RegExp.t_to_js x3684));(Ojs.fun_to_js_args
                                                              (fun
                                                                 (x3686 : _)
                                                                 ->
                                                                 Ojs.string_to_js
                                                                   (x3685
                                                                    ~substring:(
                                                                    Ojs.string_of_js
                                                                    (Ojs.array_get
                                                                    x3686 0))
                                                                    ~args:(
                                                                    Ojs.list_of_js_from
                                                                    any_of_js
                                                                    x3686 1))))|])
    let (matchAll :
      'tags this -> regexp:RegExp.t -> RegExpMatchArray.t IterableIterator.t)
      =
      fun (x3691 : 'tags this) ->
        fun ~regexp:(x3690 : RegExp.t) ->
          IterableIterator.t_of_js RegExpMatchArray.t_of_js
            (Ojs.call (this_to_js Obj.magic x3691) "matchAll"
               [|(RegExp.t_to_js x3690)|])
    let (trimEnd : 'tags this -> string) =
      fun (x3694 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3694) "trimEnd" [||])
    let (trimStart : 'tags this -> string) =
      fun (x3696 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3696) "trimStart" [||])
    let (trimLeft : 'tags this -> string) =
      fun (x3698 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3698) "trimLeft" [||])
    let (trimRight : 'tags this -> string) =
      fun (x3700 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3700) "trimRight" [||])
    let (padStart :
      'tags this -> maxLength:float -> ?fillString:string -> unit -> string)
      =
      fun (x3706 : 'tags this) ->
        fun ~maxLength:(x3702 : float) ->
          fun ?fillString:(x3703 : string option) ->
            fun () ->
              Ojs.string_of_js
                (let x3708 = this_to_js Obj.magic x3706 in
                 Ojs.call (Ojs.get_prop_ascii x3708 "padStart") "apply"
                   [|x3708;((let x3704 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3704 "push"
                                  [|(Ojs.float_to_js x3702)|]);
                             (match x3703 with
                              | Some x3705 ->
                                  ignore
                                    (Ojs.call x3704 "push"
                                       [|(Ojs.string_to_js x3705)|])
                              | None -> ());
                             x3704))|])
    let (padEnd :
      'tags this -> maxLength:float -> ?fillString:string -> unit -> string)
      =
      fun (x3713 : 'tags this) ->
        fun ~maxLength:(x3709 : float) ->
          fun ?fillString:(x3710 : string option) ->
            fun () ->
              Ojs.string_of_js
                (let x3715 = this_to_js Obj.magic x3713 in
                 Ojs.call (Ojs.get_prop_ascii x3715 "padEnd") "apply"
                   [|x3715;((let x3711 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3711 "push"
                                  [|(Ojs.float_to_js x3709)|]);
                             (match x3710 with
                              | Some x3712 ->
                                  ignore
                                    (Ojs.call x3711 "push"
                                       [|(Ojs.string_to_js x3712)|])
                              | None -> ());
                             x3711))|])
    let (match_ :
      'tags this ->
        matcher:AnonymousInterface18.t -> RegExpMatchArray.t option)
      =
      fun (x3717 : 'tags this) ->
        fun ~matcher:(x3716 : AnonymousInterface18.t) ->
          Ojs.option_of_js RegExpMatchArray.t_of_js
            (Ojs.call (this_to_js Obj.magic x3717) "match"
               [|(AnonymousInterface18.t_to_js x3716)|])
    let (replace :
      'tags this ->
        searchValue:AnonymousInterface19.t -> replaceValue:string -> string)
      =
      fun (x3722 : 'tags this) ->
        fun ~searchValue:(x3720 : AnonymousInterface19.t) ->
          fun ~replaceValue:(x3721 : string) ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3722) "replace"
                 [|(AnonymousInterface19.t_to_js x3720);(Ojs.string_to_js
                                                           x3721)|])
    let (replace' :
      'tags this ->
        searchValue:AnonymousInterface20.t ->
          replacer:(substring:string -> args:any list -> string) -> string)
      =
      fun (x3728 : 'tags this) ->
        fun ~searchValue:(x3724 : AnonymousInterface20.t) ->
          fun ~replacer:(x3725 : substring:string -> args:any list -> string)
            ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3728) "replace"
                 [|(AnonymousInterface20.t_to_js x3724);(Ojs.fun_to_js_args
                                                           (fun (x3726 : _)
                                                              ->
                                                              Ojs.string_to_js
                                                                (x3725
                                                                   ~substring:(
                                                                   Ojs.string_of_js
                                                                    (Ojs.array_get
                                                                    x3726 0))
                                                                   ~args:(
                                                                   Ojs.list_of_js_from
                                                                    any_of_js
                                                                    x3726 1))))|])
    let (search : 'tags this -> searcher:AnonymousInterface21.t -> float) =
      fun (x3731 : 'tags this) ->
        fun ~searcher:(x3730 : AnonymousInterface21.t) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x3731) "search"
               [|(AnonymousInterface21.t_to_js x3730)|])
    let (split :
      'tags this ->
        splitter:AnonymousInterface22.t ->
          ?limit:float -> unit -> string list)
      =
      fun (x3737 : 'tags this) ->
        fun ~splitter:(x3733 : AnonymousInterface22.t) ->
          fun ?limit:(x3734 : float option) ->
            fun () ->
              Ojs.list_of_js Ojs.string_of_js
                (let x3739 = this_to_js Obj.magic x3737 in
                 Ojs.call (Ojs.get_prop_ascii x3739 "split") "apply"
                   [|x3739;((let x3735 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3735 "push"
                                  [|(AnonymousInterface22.t_to_js x3733)|]);
                             (match x3734 with
                              | Some x3736 ->
                                  ignore
                                    (Ojs.call x3735 "push"
                                       [|(Ojs.float_to_js x3736)|])
                              | None -> ());
                             x3735))|])
    let (codePointAt : 'tags this -> pos:float -> float option) =
      fun (x3742 : 'tags this) ->
        fun ~pos:(x3741 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x3742) "codePointAt"
               [|(Ojs.float_to_js x3741)|])
    let (includes :
      'tags this -> searchString:string -> ?position:float -> unit -> bool) =
      fun (x3749 : 'tags this) ->
        fun ~searchString:(x3745 : string) ->
          fun ?position:(x3746 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x3751 = this_to_js Obj.magic x3749 in
                 Ojs.call (Ojs.get_prop_ascii x3751 "includes") "apply"
                   [|x3751;((let x3747 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3747 "push"
                                  [|(Ojs.string_to_js x3745)|]);
                             (match x3746 with
                              | Some x3748 ->
                                  ignore
                                    (Ojs.call x3747 "push"
                                       [|(Ojs.float_to_js x3748)|])
                              | None -> ());
                             x3747))|])
    let (endsWith :
      'tags this -> searchString:string -> ?endPosition:float -> unit -> bool)
      =
      fun (x3756 : 'tags this) ->
        fun ~searchString:(x3752 : string) ->
          fun ?endPosition:(x3753 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x3758 = this_to_js Obj.magic x3756 in
                 Ojs.call (Ojs.get_prop_ascii x3758 "endsWith") "apply"
                   [|x3758;((let x3754 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3754 "push"
                                  [|(Ojs.string_to_js x3752)|]);
                             (match x3753 with
                              | Some x3755 ->
                                  ignore
                                    (Ojs.call x3754 "push"
                                       [|(Ojs.float_to_js x3755)|])
                              | None -> ());
                             x3754))|])
    let (normalize :
      'tags this ->
        form:[ `U1 of [ `L_s11_NFC ]  | `U2 of [ `L_s12_NFD ] 
             | `U3 of [ `L_s13_NFKC ]  | `U4 of [ `L_s14_NFKD ] ]
          -> string)
      =
      fun (x3764 : 'tags this) ->
        fun
          ~form:(x3759 :
                  [ `U1 of [ `L_s11_NFC ]  | `U2 of [ `L_s12_NFD ] 
                  | `U3 of [ `L_s13_NFKC ]  | `U4 of [ `L_s14_NFKD ] ])
          ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3764) "normalize"
               [|((match x3759 with
                   | `U1 x3760 ->
                       (match x3760 with
                        | `L_s11_NFC -> Ojs.string_to_js "NFC")
                   | `U2 x3761 ->
                       (match x3761 with
                        | `L_s12_NFD -> Ojs.string_to_js "NFD")
                   | `U3 x3762 ->
                       (match x3762 with
                        | `L_s13_NFKC -> Ojs.string_to_js "NFKC")
                   | `U4 x3763 ->
                       (match x3763 with
                        | `L_s14_NFKD -> Ojs.string_to_js "NFKD")))|])
    let (normalize' : 'tags this -> ?form:string -> unit -> string) =
      fun (x3769 : 'tags this) ->
        fun ?form:(x3766 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x3771 = this_to_js Obj.magic x3769 in
               Ojs.call (Ojs.get_prop_ascii x3771 "normalize") "apply"
                 [|x3771;((let x3767 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3766 with
                            | Some x3768 ->
                                ignore
                                  (Ojs.call x3767 "push"
                                     [|(Ojs.string_to_js x3768)|])
                            | None -> ());
                           x3767))|])
    let (repeat : 'tags this -> count:float -> string) =
      fun (x3773 : 'tags this) ->
        fun ~count:(x3772 : float) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3773) "repeat"
               [|(Ojs.float_to_js x3772)|])
    let (startsWith :
      'tags this -> searchString:string -> ?position:float -> unit -> bool) =
      fun (x3779 : 'tags this) ->
        fun ~searchString:(x3775 : string) ->
          fun ?position:(x3776 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x3781 = this_to_js Obj.magic x3779 in
                 Ojs.call (Ojs.get_prop_ascii x3781 "startsWith") "apply"
                   [|x3781;((let x3777 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3777 "push"
                                  [|(Ojs.string_to_js x3775)|]);
                             (match x3776 with
                              | Some x3778 ->
                                  ignore
                                    (Ojs.call x3777 "push"
                                       [|(Ojs.float_to_js x3778)|])
                              | None -> ());
                             x3777))|])
    let (anchor : 'tags this -> name:string -> string) =
      fun (x3783 : 'tags this) ->
        fun ~name:(x3782 : string) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3783) "anchor"
               [|(Ojs.string_to_js x3782)|])
    let (big : 'tags this -> string) =
      fun (x3785 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x3785) "big" [||])
    let (blink : 'tags this -> string) =
      fun (x3787 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x3787) "blink" [||])
    let (bold : 'tags this -> string) =
      fun (x3789 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x3789) "bold" [||])
    let (fixed : 'tags this -> string) =
      fun (x3791 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x3791) "fixed" [||])
    let (fontcolor : 'tags this -> color:string -> string) =
      fun (x3794 : 'tags this) ->
        fun ~color:(x3793 : string) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3794) "fontcolor"
               [|(Ojs.string_to_js x3793)|])
    let (fontsize : 'tags this -> size:float -> string) =
      fun (x3797 : 'tags this) ->
        fun ~size:(x3796 : float) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3797) "fontsize"
               [|(Ojs.float_to_js x3796)|])
    let (fontsize' : 'tags this -> size:string -> string) =
      fun (x3800 : 'tags this) ->
        fun ~size:(x3799 : string) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3800) "fontsize"
               [|(Ojs.string_to_js x3799)|])
    let (italics : 'tags this -> string) =
      fun (x3802 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3802) "italics" [||])
    let (link : 'tags this -> url:string -> string) =
      fun (x3805 : 'tags this) ->
        fun ~url:(x3804 : string) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3805) "link"
               [|(Ojs.string_to_js x3804)|])
    let (small : 'tags this -> string) =
      fun (x3807 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x3807) "small" [||])
    let (strike : 'tags this -> string) =
      fun (x3809 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3809) "strike" [||])
    let (sub : 'tags this -> string) =
      fun (x3811 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x3811) "sub" [||])
    let (sup : 'tags this -> string) =
      fun (x3813 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x3813) "sup" [||])
    let (localeCompare :
      'tags this ->
        that:string ->
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:Intl.CollatorOptions.t -> unit -> float)
      =
      fun (x3824 : 'tags this) ->
        fun ~that:(x3815 : string) ->
          fun
            ?locales:(x3816 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x3817 : Intl.CollatorOptions.t option) ->
              fun () ->
                Ojs.float_of_js
                  (let x3826 = this_to_js Obj.magic x3824 in
                   Ojs.call (Ojs.get_prop_ascii x3826 "localeCompare")
                     "apply"
                     [|x3826;((let x3818 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3818 "push"
                                    [|(Ojs.string_to_js x3815)|]);
                               (match x3816 with
                                | Some x3820 ->
                                    ignore
                                      (Ojs.call x3818 "push"
                                         [|((match x3820 with
                                             | `U1 x3821 ->
                                                 Ojs.string_to_js x3821
                                             | `U2 x3822 ->
                                                 Ojs.list_to_js
                                                   Ojs.string_to_js x3822))|])
                                | None -> ());
                               (match x3817 with
                                | Some x3819 ->
                                    ignore
                                      (Ojs.call x3818 "push"
                                         [|(Intl.CollatorOptions.t_to_js
                                              x3819)|])
                                | None -> ());
                               x3818))|])
    let (toString : 'tags this -> string) =
      fun (x3827 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3827) "toString" [||])
    let (charAt : 'tags this -> pos:float -> string) =
      fun (x3830 : 'tags this) ->
        fun ~pos:(x3829 : float) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3830) "charAt"
               [|(Ojs.float_to_js x3829)|])
    let (charCodeAt : 'tags this -> index:float -> float) =
      fun (x3833 : 'tags this) ->
        fun ~index:(x3832 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x3833) "charCodeAt"
               [|(Ojs.float_to_js x3832)|])
    let (concat : 'tags this -> strings:string list -> string) =
      fun (x3838 : 'tags this) ->
        fun ~strings:(x3835 : string list) ->
          Ojs.string_of_js
            (let x3840 = this_to_js Obj.magic x3838 in
             Ojs.call (Ojs.get_prop_ascii x3840 "concat") "apply"
               [|x3840;((let x3836 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x3837 : string) ->
                              ignore
                                (Ojs.call x3836 "push"
                                   [|(Ojs.string_to_js x3837)|])) x3835;
                         x3836))|])
    let (indexOf :
      'tags this -> searchString:string -> ?position:float -> unit -> float)
      =
      fun (x3845 : 'tags this) ->
        fun ~searchString:(x3841 : string) ->
          fun ?position:(x3842 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x3847 = this_to_js Obj.magic x3845 in
                 Ojs.call (Ojs.get_prop_ascii x3847 "indexOf") "apply"
                   [|x3847;((let x3843 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3843 "push"
                                  [|(Ojs.string_to_js x3841)|]);
                             (match x3842 with
                              | Some x3844 ->
                                  ignore
                                    (Ojs.call x3843 "push"
                                       [|(Ojs.float_to_js x3844)|])
                              | None -> ());
                             x3843))|])
    let (lastIndexOf :
      'tags this -> searchString:string -> ?position:float -> unit -> float)
      =
      fun (x3852 : 'tags this) ->
        fun ~searchString:(x3848 : string) ->
          fun ?position:(x3849 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x3854 = this_to_js Obj.magic x3852 in
                 Ojs.call (Ojs.get_prop_ascii x3854 "lastIndexOf") "apply"
                   [|x3854;((let x3850 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3850 "push"
                                  [|(Ojs.string_to_js x3848)|]);
                             (match x3849 with
                              | Some x3851 ->
                                  ignore
                                    (Ojs.call x3850 "push"
                                       [|(Ojs.float_to_js x3851)|])
                              | None -> ());
                             x3850))|])
    let (localeCompare' : 'tags this -> that:string -> float) =
      fun (x3856 : 'tags this) ->
        fun ~that:(x3855 : string) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x3856) "localeCompare"
               [|(Ojs.string_to_js x3855)|])
    let (match_' :
      'tags this ->
        regexp:[ `U1 of string  | `U2 of RegExp.t ] ->
          RegExpMatchArray.t option)
      =
      fun (x3861 : 'tags this) ->
        fun ~regexp:(x3858 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          Ojs.option_of_js RegExpMatchArray.t_of_js
            (Ojs.call (this_to_js Obj.magic x3861) "match"
               [|((match x3858 with
                   | `U1 x3859 -> Ojs.string_to_js x3859
                   | `U2 x3860 -> RegExp.t_to_js x3860))|])
    let (replace'' :
      'tags this ->
        searchValue:[ `U1 of string  | `U2 of RegExp.t ] ->
          replaceValue:string -> string)
      =
      fun (x3868 : 'tags this) ->
        fun ~searchValue:(x3864 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          fun ~replaceValue:(x3867 : string) ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3868) "replace"
                 [|((match x3864 with
                     | `U1 x3865 -> Ojs.string_to_js x3865
                     | `U2 x3866 -> RegExp.t_to_js x3866));(Ojs.string_to_js
                                                              x3867)|])
    let (replace''' :
      'tags this ->
        searchValue:[ `U1 of string  | `U2 of RegExp.t ] ->
          replacer:(substring:string -> args:any list -> string) -> string)
      =
      fun (x3876 : 'tags this) ->
        fun ~searchValue:(x3870 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          fun ~replacer:(x3873 : substring:string -> args:any list -> string)
            ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3876) "replace"
                 [|((match x3870 with
                     | `U1 x3871 -> Ojs.string_to_js x3871
                     | `U2 x3872 -> RegExp.t_to_js x3872));(Ojs.fun_to_js_args
                                                              (fun
                                                                 (x3874 : _)
                                                                 ->
                                                                 Ojs.string_to_js
                                                                   (x3873
                                                                    ~substring:(
                                                                    Ojs.string_of_js
                                                                    (Ojs.array_get
                                                                    x3874 0))
                                                                    ~args:(
                                                                    Ojs.list_of_js_from
                                                                    any_of_js
                                                                    x3874 1))))|])
    let (search' :
      'tags this -> regexp:[ `U1 of string  | `U2 of RegExp.t ] -> float) =
      fun (x3881 : 'tags this) ->
        fun ~regexp:(x3878 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x3881) "search"
               [|((match x3878 with
                   | `U1 x3879 -> Ojs.string_to_js x3879
                   | `U2 x3880 -> RegExp.t_to_js x3880))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> string)
      =
      fun (x3888 : 'tags this) ->
        fun ?start:(x3883 : float option) ->
          fun ?end_:(x3884 : float option) ->
            fun () ->
              Ojs.string_of_js
                (let x3890 = this_to_js Obj.magic x3888 in
                 Ojs.call (Ojs.get_prop_ascii x3890 "slice") "apply"
                   [|x3890;((let x3885 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x3883 with
                              | Some x3887 ->
                                  ignore
                                    (Ojs.call x3885 "push"
                                       [|(Ojs.float_to_js x3887)|])
                              | None -> ());
                             (match x3884 with
                              | Some x3886 ->
                                  ignore
                                    (Ojs.call x3885 "push"
                                       [|(Ojs.float_to_js x3886)|])
                              | None -> ());
                             x3885))|])
    let (split' :
      'tags this ->
        separator:[ `U1 of string  | `U2 of RegExp.t ] ->
          ?limit:float -> unit -> string list)
      =
      fun (x3897 : 'tags this) ->
        fun ~separator:(x3891 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          fun ?limit:(x3892 : float option) ->
            fun () ->
              Ojs.list_of_js Ojs.string_of_js
                (let x3899 = this_to_js Obj.magic x3897 in
                 Ojs.call (Ojs.get_prop_ascii x3899 "split") "apply"
                   [|x3899;((let x3893 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3893 "push"
                                  [|((match x3891 with
                                      | `U1 x3895 -> Ojs.string_to_js x3895
                                      | `U2 x3896 -> RegExp.t_to_js x3896))|]);
                             (match x3892 with
                              | Some x3894 ->
                                  ignore
                                    (Ojs.call x3893 "push"
                                       [|(Ojs.float_to_js x3894)|])
                              | None -> ());
                             x3893))|])
    let (substring :
      'tags this -> start:float -> ?end_:float -> unit -> string) =
      fun (x3905 : 'tags this) ->
        fun ~start:(x3901 : float) ->
          fun ?end_:(x3902 : float option) ->
            fun () ->
              Ojs.string_of_js
                (let x3907 = this_to_js Obj.magic x3905 in
                 Ojs.call (Ojs.get_prop_ascii x3907 "substring") "apply"
                   [|x3907;((let x3903 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3903 "push"
                                  [|(Ojs.float_to_js x3901)|]);
                             (match x3902 with
                              | Some x3904 ->
                                  ignore
                                    (Ojs.call x3903 "push"
                                       [|(Ojs.float_to_js x3904)|])
                              | None -> ());
                             x3903))|])
    let (toLowerCase : 'tags this -> string) =
      fun (x3908 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3908) "toLowerCase" [||])
    let (toLocaleLowerCase :
      'tags this ->
        ?locales:[ `U1 of string  | `U2 of string list ] -> unit -> string)
      =
      fun (x3916 : 'tags this) ->
        fun ?locales:(x3910 : [ `U1 of string  | `U2 of string list ] option)
          ->
          fun () ->
            Ojs.string_of_js
              (let x3918 = this_to_js Obj.magic x3916 in
               Ojs.call (Ojs.get_prop_ascii x3918 "toLocaleLowerCase")
                 "apply"
                 [|x3918;((let x3911 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3910 with
                            | Some x3912 ->
                                ignore
                                  (Ojs.call x3911 "push"
                                     [|((match x3912 with
                                         | `U1 x3913 ->
                                             Ojs.string_to_js x3913
                                         | `U2 x3914 ->
                                             Ojs.list_to_js Ojs.string_to_js
                                               x3914))|])
                            | None -> ());
                           x3911))|])
    let (toUpperCase : 'tags this -> string) =
      fun (x3919 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3919) "toUpperCase" [||])
    let (toLocaleUpperCase :
      'tags this ->
        ?locales:[ `U1 of string  | `U2 of string list ] -> unit -> string)
      =
      fun (x3927 : 'tags this) ->
        fun ?locales:(x3921 : [ `U1 of string  | `U2 of string list ] option)
          ->
          fun () ->
            Ojs.string_of_js
              (let x3929 = this_to_js Obj.magic x3927 in
               Ojs.call (Ojs.get_prop_ascii x3929 "toLocaleUpperCase")
                 "apply"
                 [|x3929;((let x3922 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3921 with
                            | Some x3923 ->
                                ignore
                                  (Ojs.call x3922 "push"
                                     [|((match x3923 with
                                         | `U1 x3924 ->
                                             Ojs.string_to_js x3924
                                         | `U2 x3925 ->
                                             Ojs.list_to_js Ojs.string_to_js
                                               x3925))|])
                            | None -> ());
                           x3922))|])
    let (trim : 'tags this -> string) =
      fun (x3930 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x3930) "trim" [||])
    let (get_length : 'tags this -> float) =
      fun (x3932 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3932) "length")
    let (substr :
      'tags this -> from:float -> ?length:float -> unit -> string) =
      fun (x3938 : 'tags this) ->
        fun ~from:(x3934 : float) ->
          fun ?length:(x3935 : float option) ->
            fun () ->
              Ojs.string_of_js
                (let x3940 = this_to_js Obj.magic x3938 in
                 Ojs.call (Ojs.get_prop_ascii x3940 "substr") "apply"
                   [|x3940;((let x3936 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3936 "push"
                                  [|(Ojs.float_to_js x3934)|]);
                             (match x3935 with
                              | Some x3937 ->
                                  ignore
                                    (Ojs.call x3936 "push"
                                       [|(Ojs.float_to_js x3937)|])
                              | None -> ());
                             x3936))|])
    let (valueOf : 'tags this -> string) =
      fun (x3941 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3941) "valueOf" [||])
    let (get : 'tags this -> float -> string) =
      fun (x3943 : 'tags this) ->
        fun (x3945 : float) ->
          Ojs.string_of_js
            (Ojs.get_prop (this_to_js Obj.magic x3943)
               (Ojs.float_to_js x3945))
    let (fromCodePoint : float list -> string) =
      fun (x3946 : float list) ->
        Ojs.string_of_js
          (let x3949 = Ojs.get_prop_ascii Ojs.global "String" in
           Ojs.call (Ojs.get_prop_ascii x3949 "fromCodePoint") "apply"
             [|x3949;((let x3947 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x3948 : float) ->
                            ignore
                              (Ojs.call x3947 "push"
                                 [|(Ojs.float_to_js x3948)|])) x3946;
                       x3947))|])
    let (raw :
      template:AnonymousInterface6.t -> substitutions:any list -> string) =
      fun ~template:(x3950 : AnonymousInterface6.t) ->
        fun ~substitutions:(x3951 : any list) ->
          Ojs.string_of_js
            (let x3954 = Ojs.get_prop_ascii Ojs.global "String" in
             Ojs.call (Ojs.get_prop_ascii x3954 "raw") "apply"
               [|x3954;((let x3952 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         ignore
                           (Ojs.call x3952 "push"
                              [|(AnonymousInterface6.t_to_js x3950)|]);
                         List.iter
                           (fun (x3953 : any) ->
                              ignore
                                (Ojs.call x3952 "push" [|(any_to_js x3953)|]))
                           x3951;
                         x3952))|])
    let (create : ?value:any -> unit -> t) =
      fun ?value:(x3955 : any option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "String")
               (let x3956 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x3955 with
                 | Some x3957 ->
                     ignore (Ojs.call x3956 "push" [|(any_to_js x3957)|])
                 | None -> ());
                x3956))
    let (invoke : ?value:any -> unit -> string) =
      fun ?value:(x3958 : any option) ->
        fun () ->
          Ojs.string_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "String") "apply"
               [|Ojs.null;((let x3959 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x3958 with
                             | Some x3960 ->
                                 ignore
                                   (Ojs.call x3959 "push"
                                      [|(any_to_js x3960)|])
                             | None -> ());
                            x3959))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "String")
             "prototype")
    let (fromCharCode : float list -> string) =
      fun (x3961 : float list) ->
        Ojs.string_of_js
          (let x3964 = Ojs.get_prop_ascii Ojs.global "String" in
           Ojs.call (Ojs.get_prop_ascii x3964 "fromCharCode") "apply"
             [|x3964;((let x3962 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x3963 : float) ->
                            ignore
                              (Ojs.call x3962 "push"
                                 [|(Ojs.float_to_js x3963)|])) x3961;
                       x3962))|])
    let cast_from = Obj.magic
    let (of_ml : string -> t) =
      fun (x3965 : string) -> t_of_js (Ojs.string_to_js x3965)
    let (to_ml : t -> string) =
      fun (x3966 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x3966) "valueOf" [||])
  end
module Set =
  struct
    type 'T t = [ `Set of 'T  | 'T IterableIterator.tags_1] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x3969 : Ojs.t) -> t_of_js __T_of_js x3969
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x3967 : __T t) -> t_to_js __T_to_js x3967
    type 'T tags = [ `Set of 'T  | 'T IterableIterator.tags_1]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this = 'tags intf constraint 'tags = [> `Set of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x3973 : Ojs.t) -> intf_of_js __tags_of_js x3973
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x3971 : __tags intf) -> intf_to_js __tags_to_js x3971
    let (entries : ('tags, 'T) this -> ('T * 'T) IterableIterator.t) =
      fun (x3975 : ('tags, 'T) this) ->
        IterableIterator.t_of_js
          (fun (x3978 : Ojs.t) ->
             let x3979 = x3978 in
             ((Obj.magic (Ojs.array_get x3979 0)),
               (Obj.magic (Ojs.array_get x3979 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic x3975) "entries" [||])
    let (keys : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x3980 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x3980) "keys" [||])
    let (values : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x3984 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x3984) "values" [||])
    let (add : ('tags, 'T) this -> value:'T -> ('tags, 'T) this) =
      fun (x3989 : ('tags, 'T) this) ->
        fun ~value:(x3988 : 'T) ->
          this_of_js Obj.magic Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x3989) "add"
               [|(Obj.magic x3988)|])
    let (clear : ('tags, 'T) this -> unit) =
      fun (x3994 : ('tags, 'T) this) ->
        ignore (Ojs.call (this_to_js Obj.magic Obj.magic x3994) "clear" [||])
    let (delete : ('tags, 'T) this -> value:'T -> bool) =
      fun (x3998 : ('tags, 'T) this) ->
        fun ~value:(x3997 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x3998) "delete"
               [|(Obj.magic x3997)|])
    let (forEach :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> value2:'T -> set_:'T t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x4009 : ('tags, 'T) this) ->
        fun ~callbackfn:(x4001 : value:'T -> value2:'T -> set_:'T t -> unit)
          ->
          fun ?thisArg:(x4002 : any option) ->
            fun () ->
              ignore
                (let x4012 = this_to_js Obj.magic Obj.magic x4009 in
                 Ojs.call (Ojs.get_prop_ascii x4012 "forEach") "apply"
                   [|x4012;((let x4003 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4003 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4005 : Ojs.t) ->
                                          fun (x4006 : Ojs.t) ->
                                            fun (x4007 : Ojs.t) ->
                                              x4001 ~value:(Obj.magic x4005)
                                                ~value2:(Obj.magic x4006)
                                                ~set_:(t_of_js Obj.magic
                                                         x4007)))|]);
                             (match x4002 with
                              | Some x4004 ->
                                  ignore
                                    (Ojs.call x4003 "push"
                                       [|(any_to_js x4004)|])
                              | None -> ());
                             x4003))|])
    let (has : ('tags, 'T) this -> value:'T -> bool) =
      fun (x4014 : ('tags, 'T) this) ->
        fun ~value:(x4013 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x4014) "has"
               [|(Obj.magic x4013)|])
    let (get_size : ('tags, 'T) this -> float) =
      fun (x4017 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x4017) "size")
    let (create : ?iterable:'T Iterable.t option -> unit -> 'T t) =
      fun ?iterable:(x4020 : 'T Iterable.t option option) ->
        fun () ->
          t_of_js Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Set")
               (let x4021 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x4020 with
                 | Some x4022 ->
                     ignore
                       (Ojs.call x4021 "push"
                          [|(Ojs.option_to_js
                               (fun (x4023 : 'T Iterable.t) ->
                                  Iterable.t_to_js Obj.magic x4023) x4022)|])
                 | None -> ());
                x4021))
    let (create' : ?values:'T list option -> unit -> 'T t) =
      fun ?values:(x4026 : 'T list option option) ->
        fun () ->
          t_of_js Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Set")
               (let x4027 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x4026 with
                 | Some x4028 ->
                     ignore
                       (Ojs.call x4027 "push"
                          [|(Ojs.option_to_js
                               (fun (x4029 : 'T list) ->
                                  Ojs.list_to_js Obj.magic x4029) x4028)|])
                 | None -> ());
                x4027))
    let (prototype : unit -> any t) =
      fun () ->
        t_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Set")
             "prototype")
    let cast_from = Obj.magic
  end
module ReturnType =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4034 : Ojs.t) -> any_of_js x4034
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4033 : any) -> any_to_js x4033
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4037 : Ojs.t) -> t_of_js __T_of_js x4037
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4035 : __T t) -> t_to_js __T_to_js x4035
  end
module Required =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4040 : Ojs.t) -> any_of_js x4040
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4039 : any) -> any_to_js x4039
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4043 : Ojs.t) -> t_of_js __T_of_js x4043
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4041 : __T t) -> t_to_js __T_to_js x4041
  end
module PropertyKey =
  struct
    type t =
      [ `Number of float  | `String of string  | `Symbol of symbol ]
        Primitive.t
    let rec t_of_js : Ojs.t -> t =
      fun (x4050 : Ojs.t) ->
        Primitive.t_of_js
          (fun (x4051 : Ojs.t) ->
             let x4052 = x4051 in
             match Ojs.string_of_js (Ojs.get_prop_ascii x4052 "dummy") with
             | "Number" -> `Number (Ojs.float_of_js x4052)
             | "String" -> `String (Ojs.string_of_js x4052)
             | "Symbol" -> `Symbol (symbol_of_js x4052)
             | _ -> assert false) x4050
    and t_to_js : t -> Ojs.t =
      fun
        (x4045 :
          [ `Number of float  | `String of string  | `Symbol of symbol ]
            Primitive.t)
        ->
        Primitive.t_to_js
          (fun
             (x4046 :
               [ `Number of float  | `String of string  | `Symbol of symbol ])
             ->
             match x4046 with
             | `Number x4047 -> Ojs.float_to_js x4047
             | `String x4048 -> Ojs.string_to_js x4048
             | `Symbol x4049 -> symbol_to_js x4049) x4045
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4054 : Ojs.t) -> t_of_js x4054
    and t_0_to_js : t_0 -> Ojs.t = fun (x4053 : t) -> t_to_js x4053
  end
module PropertyDescriptor =
  struct
    type t = [ `PropertyDescriptor ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4056 : Ojs.t) -> t_of_js x4056
    and t_0_to_js : t_0 -> Ojs.t = fun (x4055 : t) -> t_to_js x4055
    type tags = [ `PropertyDescriptor ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `PropertyDescriptor ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x4059 : Ojs.t) -> intf_of_js __tags_of_js x4059
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x4057 : __tags intf) -> intf_to_js __tags_to_js x4057
    let (get_configurable : 'tags this -> bool) =
      fun (x4061 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4061) "configurable")
    let (set_configurable : 'tags this -> bool -> unit) =
      fun (x4063 : 'tags this) ->
        fun (x4064 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4063) "configurable"
            (Ojs.bool_to_js x4064)
    let (get_enumerable : 'tags this -> bool) =
      fun (x4066 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4066) "enumerable")
    let (set_enumerable : 'tags this -> bool -> unit) =
      fun (x4068 : 'tags this) ->
        fun (x4069 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4068) "enumerable"
            (Ojs.bool_to_js x4069)
    let (get_value : 'tags this -> any) =
      fun (x4071 : 'tags this) ->
        any_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x4071) "value")
    let (set_value : 'tags this -> any -> unit) =
      fun (x4073 : 'tags this) ->
        fun (x4074 : any) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4073) "value"
            (any_to_js x4074)
    let (get_writable : 'tags this -> bool) =
      fun (x4076 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4076) "writable")
    let (set_writable : 'tags this -> bool -> unit) =
      fun (x4078 : 'tags this) ->
        fun (x4079 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4078) "writable"
            (Ojs.bool_to_js x4079)
    let (get_ : 'tags this -> any) =
      fun (x4081 : 'tags this) ->
        any_of_js (Ojs.call (this_to_js Obj.magic x4081) "get" [||])
    let (set_ : 'tags this -> v:any -> unit) =
      fun (x4084 : 'tags this) ->
        fun ~v:(x4083 : any) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x4084) "set"
               [|(any_to_js x4083)|])
    let cast_from = Obj.magic
  end
module Function =
  struct
    type t = [ `Function ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4087 : Ojs.t) -> t_of_js x4087
    and t_0_to_js : t_0 -> Ojs.t = fun (x4086 : t) -> t_to_js x4086
    type tags = [ `Function ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Function ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x4090 : Ojs.t) -> intf_of_js __tags_of_js x4090
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x4088 : __tags intf) -> intf_to_js __tags_to_js x4088
    let (get_name : 'tags this -> string) =
      fun (x4092 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4092) "name")
    let (apply_ :
      'tags this -> this:t -> thisArg:any -> ?argArray:any -> unit -> any) =
      fun (x4099 : 'tags this) ->
        fun ~this:(x4094 : t) ->
          fun ~thisArg:(x4095 : any) ->
            fun ?argArray:(x4096 : any option) ->
              fun () ->
                any_of_js
                  (let x4101 = this_to_js Obj.magic x4099 in
                   Ojs.call (Ojs.get_prop_ascii x4101 "apply") "apply"
                     [|x4101;((let x4097 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4097 "push" [|(t_to_js x4094)|]);
                               ignore
                                 (Ojs.call x4097 "push" [|(any_to_js x4095)|]);
                               (match x4096 with
                                | Some x4098 ->
                                    ignore
                                      (Ojs.call x4097 "push"
                                         [|(any_to_js x4098)|])
                                | None -> ());
                               x4097))|])
    let (call :
      'tags this -> this:t -> thisArg:any -> argArray:any list -> any) =
      fun (x4107 : 'tags this) ->
        fun ~this:(x4102 : t) ->
          fun ~thisArg:(x4103 : any) ->
            fun ~argArray:(x4104 : any list) ->
              any_of_js
                (let x4109 = this_to_js Obj.magic x4107 in
                 Ojs.call (Ojs.get_prop_ascii x4109 "call") "apply"
                   [|x4109;((let x4105 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4105 "push" [|(t_to_js x4102)|]);
                             ignore
                               (Ojs.call x4105 "push" [|(any_to_js x4103)|]);
                             List.iter
                               (fun (x4106 : any) ->
                                  ignore
                                    (Ojs.call x4105 "push"
                                       [|(any_to_js x4106)|])) x4104;
                             x4105))|])
    let (bind :
      'tags this -> this:t -> thisArg:any -> argArray:any list -> any) =
      fun (x4115 : 'tags this) ->
        fun ~this:(x4110 : t) ->
          fun ~thisArg:(x4111 : any) ->
            fun ~argArray:(x4112 : any list) ->
              any_of_js
                (let x4117 = this_to_js Obj.magic x4115 in
                 Ojs.call (Ojs.get_prop_ascii x4117 "bind") "apply"
                   [|x4117;((let x4113 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4113 "push" [|(t_to_js x4110)|]);
                             ignore
                               (Ojs.call x4113 "push" [|(any_to_js x4111)|]);
                             List.iter
                               (fun (x4114 : any) ->
                                  ignore
                                    (Ojs.call x4113 "push"
                                       [|(any_to_js x4114)|])) x4112;
                             x4113))|])
    let (toString : 'tags this -> string) =
      fun (x4118 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x4118) "toString" [||])
    let (get_prototype : 'tags this -> any) =
      fun (x4120 : 'tags this) ->
        any_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4120) "prototype")
    let (set_prototype : 'tags this -> any -> unit) =
      fun (x4122 : 'tags this) ->
        fun (x4123 : any) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4122) "prototype"
            (any_to_js x4123)
    let (get_length : 'tags this -> float) =
      fun (x4125 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4125) "length")
    let (get_arguments : 'tags this -> any) =
      fun (x4127 : 'tags this) ->
        any_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4127) "arguments")
    let (set_arguments : 'tags this -> any -> unit) =
      fun (x4129 : 'tags this) ->
        fun (x4130 : any) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4129) "arguments"
            (any_to_js x4130)
    let (get_caller : 'tags this -> t) =
      fun (x4132 : 'tags this) ->
        t_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x4132) "caller")
    let (set_caller : 'tags this -> t -> unit) =
      fun (x4134 : 'tags this) ->
        fun (x4135 : t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4134) "caller"
            (t_to_js x4135)
    let (create : string list -> t) =
      fun (x4137 : string list) ->
        t_of_js
          (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Function")
             (let x4138 =
                Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
              List.iter
                (fun (x4139 : string) ->
                   ignore
                     (Ojs.call x4138 "push" [|(Ojs.string_to_js x4139)|]))
                x4137;
              x4138))
    let (invoke : string list -> t) =
      fun (x4140 : string list) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Function") "apply"
             [|Ojs.null;((let x4141 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x4142 : string) ->
                               ignore
                                 (Ojs.call x4141 "push"
                                    [|(Ojs.string_to_js x4142)|])) x4140;
                          x4141))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Function")
             "prototype")
    let cast_from = Obj.magic
  end
module Reflect =
  struct
    let (apply_ :
      target:Function.t ->
        thisArgument:any -> argumentsList:any ArrayLike.t -> any)
      =
      fun ~target:(x4143 : Function.t) ->
        fun ~thisArgument:(x4144 : any) ->
          fun ~argumentsList:(x4145 : any ArrayLike.t) ->
            any_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect") "apply"
                 [|(Function.t_to_js x4143);(any_to_js x4144);(ArrayLike.t_to_js
                                                                 any_to_js
                                                                 x4145)|])
    let (construct :
      target:Function.t ->
        argumentsList:any ArrayLike.t -> ?newTarget:Function.t -> unit -> any)
      =
      fun ~target:(x4147 : Function.t) ->
        fun ~argumentsList:(x4148 : any ArrayLike.t) ->
          fun ?newTarget:(x4149 : Function.t option) ->
            fun () ->
              any_of_js
                (let x4153 = Ojs.get_prop_ascii Ojs.global "Reflect" in
                 Ojs.call (Ojs.get_prop_ascii x4153 "construct") "apply"
                   [|x4153;((let x4150 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4150 "push"
                                  [|(Function.t_to_js x4147)|]);
                             ignore
                               (Ojs.call x4150 "push"
                                  [|(ArrayLike.t_to_js any_to_js x4148)|]);
                             (match x4149 with
                              | Some x4151 ->
                                  ignore
                                    (Ojs.call x4150 "push"
                                       [|(Function.t_to_js x4151)|])
                              | None -> ());
                             x4150))|])
    let (defineProperty :
      target:untyped_object ->
        propertyKey:PropertyKey.t -> attributes:PropertyDescriptor.t -> bool)
      =
      fun ~target:(x4154 : untyped_object) ->
        fun ~propertyKey:(x4155 : PropertyKey.t) ->
          fun ~attributes:(x4156 : PropertyDescriptor.t) ->
            Ojs.bool_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
                 "defineProperty"
                 [|(untyped_object_to_js x4154);(PropertyKey.t_to_js x4155);(
                   PropertyDescriptor.t_to_js x4156)|])
    let (deleteProperty :
      target:untyped_object -> propertyKey:PropertyKey.t -> bool) =
      fun ~target:(x4157 : untyped_object) ->
        fun ~propertyKey:(x4158 : PropertyKey.t) ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
               "deleteProperty"
               [|(untyped_object_to_js x4157);(PropertyKey.t_to_js x4158)|])
    let (get_ :
      target:untyped_object ->
        propertyKey:PropertyKey.t -> ?receiver:any -> unit -> any)
      =
      fun ~target:(x4159 : untyped_object) ->
        fun ~propertyKey:(x4160 : PropertyKey.t) ->
          fun ?receiver:(x4161 : any option) ->
            fun () ->
              any_of_js
                (let x4164 = Ojs.get_prop_ascii Ojs.global "Reflect" in
                 Ojs.call (Ojs.get_prop_ascii x4164 "get") "apply"
                   [|x4164;((let x4162 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4162 "push"
                                  [|(untyped_object_to_js x4159)|]);
                             ignore
                               (Ojs.call x4162 "push"
                                  [|(PropertyKey.t_to_js x4160)|]);
                             (match x4161 with
                              | Some x4163 ->
                                  ignore
                                    (Ojs.call x4162 "push"
                                       [|(any_to_js x4163)|])
                              | None -> ());
                             x4162))|])
    let (getOwnPropertyDescriptor :
      target:untyped_object ->
        propertyKey:PropertyKey.t -> PropertyDescriptor.t option)
      =
      fun ~target:(x4165 : untyped_object) ->
        fun ~propertyKey:(x4166 : PropertyKey.t) ->
          Ojs.option_of_js PropertyDescriptor.t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
               "getOwnPropertyDescriptor"
               [|(untyped_object_to_js x4165);(PropertyKey.t_to_js x4166)|])
    let (getPrototypeOf : untyped_object -> untyped_object option) =
      fun (x4168 : untyped_object) ->
        Ojs.option_of_js untyped_object_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
             "getPrototypeOf" [|(untyped_object_to_js x4168)|])
    let (has : target:untyped_object -> propertyKey:PropertyKey.t -> bool) =
      fun ~target:(x4170 : untyped_object) ->
        fun ~propertyKey:(x4171 : PropertyKey.t) ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect") "has"
               [|(untyped_object_to_js x4170);(PropertyKey.t_to_js x4171)|])
    let (isExtensible : untyped_object -> bool) =
      fun (x4172 : untyped_object) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect") "isExtensible"
             [|(untyped_object_to_js x4172)|])
    let (ownKeys :
      untyped_object ->
        [ `String of string  | `Symbol of symbol ] Primitive.t list)
      =
      fun (x4173 : untyped_object) ->
        Ojs.list_of_js
          (fun (x4174 : Ojs.t) ->
             Primitive.t_of_js
               (fun (x4175 : Ojs.t) ->
                  let x4176 = x4175 in
                  match Ojs.string_of_js (Ojs.get_prop_ascii x4176 "dummy")
                  with
                  | "String" -> `String (Ojs.string_of_js x4176)
                  | "Symbol" -> `Symbol (symbol_of_js x4176)
                  | _ -> assert false) x4174)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect") "ownKeys"
             [|(untyped_object_to_js x4173)|])
    let (preventExtensions : untyped_object -> bool) =
      fun (x4177 : untyped_object) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
             "preventExtensions" [|(untyped_object_to_js x4177)|])
    let (set_ :
      target:untyped_object ->
        propertyKey:PropertyKey.t ->
          value:any -> ?receiver:any -> unit -> bool)
      =
      fun ~target:(x4178 : untyped_object) ->
        fun ~propertyKey:(x4179 : PropertyKey.t) ->
          fun ~value:(x4180 : any) ->
            fun ?receiver:(x4181 : any option) ->
              fun () ->
                Ojs.bool_of_js
                  (let x4184 = Ojs.get_prop_ascii Ojs.global "Reflect" in
                   Ojs.call (Ojs.get_prop_ascii x4184 "set") "apply"
                     [|x4184;((let x4182 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4182 "push"
                                    [|(untyped_object_to_js x4178)|]);
                               ignore
                                 (Ojs.call x4182 "push"
                                    [|(PropertyKey.t_to_js x4179)|]);
                               ignore
                                 (Ojs.call x4182 "push" [|(any_to_js x4180)|]);
                               (match x4181 with
                                | Some x4183 ->
                                    ignore
                                      (Ojs.call x4182 "push"
                                         [|(any_to_js x4183)|])
                                | None -> ());
                               x4182))|])
    let (setPrototypeOf :
      target:untyped_object -> proto:untyped_object option -> bool) =
      fun ~target:(x4185 : untyped_object) ->
        fun ~proto:(x4186 : untyped_object option) ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
               "setPrototypeOf"
               [|(untyped_object_to_js x4185);(Ojs.option_to_js
                                                 untyped_object_to_js x4186)|])
  end
module ReferenceError =
  struct
    type t = [ `Error  | `ReferenceError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4189 : Ojs.t) -> t_of_js x4189
    and t_0_to_js : t_0 -> Ojs.t = fun (x4188 : t) -> t_to_js x4188
    type tags = [ `Error  | `ReferenceError ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ReferenceError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x4192 : Ojs.t) -> intf_of_js __tags_of_js x4192
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x4190 : __tags intf) -> intf_to_js __tags_to_js x4190
    let (create : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x4194 : string option) ->
        fun ?options:(x4195 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr
                 (Ojs.get_prop_ascii Ojs.global "ReferenceError")
                 (let x4196 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x4194 with
                   | Some x4198 ->
                       ignore
                         (Ojs.call x4196 "push" [|(Ojs.string_to_js x4198)|])
                   | None -> ());
                  (match x4195 with
                   | Some x4197 ->
                       ignore
                         (Ojs.call x4196 "push"
                            [|(ErrorOptions.t_to_js x4197)|])
                   | None -> ());
                  x4196))
    let (invoke : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x4199 : string option) ->
        fun ?options:(x4200 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "ReferenceError")
                 "apply"
                 [|Ojs.null;((let x4201 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x4199 with
                               | Some x4203 ->
                                   ignore
                                     (Ojs.call x4201 "push"
                                        [|(Ojs.string_to_js x4203)|])
                               | None -> ());
                              (match x4200 with
                               | Some x4202 ->
                                   ignore
                                     (Ojs.call x4201 "push"
                                        [|(ErrorOptions.t_to_js x4202)|])
                               | None -> ());
                              x4201))|])
    let (create' : ?message:string -> unit -> t) =
      fun ?message:(x4204 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "ReferenceError")
               (let x4205 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x4204 with
                 | Some x4206 ->
                     ignore
                       (Ojs.call x4205 "push" [|(Ojs.string_to_js x4206)|])
                 | None -> ());
                x4205))
    let (invoke' : ?message:string -> unit -> t) =
      fun ?message:(x4207 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "ReferenceError")
               "apply"
               [|Ojs.null;((let x4208 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x4207 with
                             | Some x4209 ->
                                 ignore
                                   (Ojs.call x4208 "push"
                                      [|(Ojs.string_to_js x4209)|])
                             | None -> ());
                            x4208))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "ReferenceError") "prototype")
    let cast_from = Obj.magic
  end
module Record =
  struct
    type ('K, 'T) t = any
    let rec t_of_js :
      'K 'T . (Ojs.t -> 'K) -> (Ojs.t -> 'T) -> Ojs.t -> ('K, 'T) t =
      fun (type __K) ->
        fun (type __T) ->
          fun (__K_of_js : Ojs.t -> __K) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x4211 : Ojs.t) -> any_of_js x4211
    and t_to_js :
      'K 'T . ('K -> Ojs.t) -> ('T -> Ojs.t) -> ('K, 'T) t -> Ojs.t =
      fun (type __K) ->
        fun (type __T) ->
          fun (__K_to_js : __K -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x4210 : any) -> any_to_js x4210
    type ('K, 'T) t_2 = ('K, 'T) t
    let rec t_2_of_js :
      'K 'T . (Ojs.t -> 'K) -> (Ojs.t -> 'T) -> Ojs.t -> ('K, 'T) t_2 =
      fun (type __K) ->
        fun (type __T) ->
          fun (__K_of_js : Ojs.t -> __K) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x4215 : Ojs.t) -> t_of_js __K_of_js __T_of_js x4215
    and t_2_to_js :
      'K 'T . ('K -> Ojs.t) -> ('T -> Ojs.t) -> ('K, 'T) t_2 -> Ojs.t =
      fun (type __K) ->
        fun (type __T) ->
          fun (__K_to_js : __K -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x4212 : (__K, __T) t) -> t_to_js __K_to_js __T_to_js x4212
  end
module ReadonlySet =
  struct
    type 'T t = [ `ReadonlySet of 'T  | 'T IterableIterator.tags_1] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4220 : Ojs.t) -> t_of_js __T_of_js x4220
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4218 : __T t) -> t_to_js __T_to_js x4218
    type 'T tags = [ `ReadonlySet of 'T  | 'T IterableIterator.tags_1]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ReadonlySet of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x4224 : Ojs.t) -> intf_of_js __tags_of_js x4224
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x4222 : __tags intf) -> intf_to_js __tags_to_js x4222
    let (entries : ('tags, 'T) this -> ('T * 'T) IterableIterator.t) =
      fun (x4226 : ('tags, 'T) this) ->
        IterableIterator.t_of_js
          (fun (x4229 : Ojs.t) ->
             let x4230 = x4229 in
             ((Obj.magic (Ojs.array_get x4230 0)),
               (Obj.magic (Ojs.array_get x4230 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic x4226) "entries" [||])
    let (keys : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x4231 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x4231) "keys" [||])
    let (values : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x4235 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x4235) "values" [||])
    let (forEach :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> value2:'T -> set_:'T t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x4247 : ('tags, 'T) this) ->
        fun ~callbackfn:(x4239 : value:'T -> value2:'T -> set_:'T t -> unit)
          ->
          fun ?thisArg:(x4240 : any option) ->
            fun () ->
              ignore
                (let x4250 = this_to_js Obj.magic Obj.magic x4247 in
                 Ojs.call (Ojs.get_prop_ascii x4250 "forEach") "apply"
                   [|x4250;((let x4241 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4241 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4243 : Ojs.t) ->
                                          fun (x4244 : Ojs.t) ->
                                            fun (x4245 : Ojs.t) ->
                                              x4239 ~value:(Obj.magic x4243)
                                                ~value2:(Obj.magic x4244)
                                                ~set_:(t_of_js Obj.magic
                                                         x4245)))|]);
                             (match x4240 with
                              | Some x4242 ->
                                  ignore
                                    (Ojs.call x4241 "push"
                                       [|(any_to_js x4242)|])
                              | None -> ());
                             x4241))|])
    let (has : ('tags, 'T) this -> value:'T -> bool) =
      fun (x4252 : ('tags, 'T) this) ->
        fun ~value:(x4251 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x4252) "has"
               [|(Obj.magic x4251)|])
    let (get_size : ('tags, 'T) this -> float) =
      fun (x4255 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x4255) "size")
    let cast_from = Obj.magic
  end
module ReadonlyMap =
  struct
    type ('K, 'V) t =
      [ `ReadonlyMap of ('K * 'V)  | ('K * 'V) IterableIterator.tags_1] intf
    let rec t_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) t =
      fun _K -> fun _V -> Obj.magic
    and t_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) t -> Ojs.t =
      fun _K -> fun _V -> Obj.magic
    type ('K, 'V) t_2 = ('K, 'V) t
    let rec t_2_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) t_2 =
      fun (type __K) ->
        fun (type __V) ->
          fun (__K_of_js : Ojs.t -> __K) ->
            fun (__V_of_js : Ojs.t -> __V) ->
              fun (x4261 : Ojs.t) -> t_of_js __K_of_js __V_of_js x4261
    and t_2_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) t_2 -> Ojs.t =
      fun (type __K) ->
        fun (type __V) ->
          fun (__K_to_js : __K -> Ojs.t) ->
            fun (__V_to_js : __V -> Ojs.t) ->
              fun (x4258 : (__K, __V) t) -> t_to_js __K_to_js __V_to_js x4258
    type ('K, 'V) tags =
      [ `ReadonlyMap of ('K * 'V)  | ('K * 'V) IterableIterator.tags_1]
    type ('K, 'V) tags_2 = ('K, 'V) tags
    type ('tags, 'K, 'V) this =
      'tags intf constraint 'tags = [> `ReadonlyMap of ('K * 'V) ]
    let rec this_of_js :
      'tags 'K 'V .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('tags, 'K, 'V) this
      =
      fun (type __tags) ->
        fun (type __K) ->
          fun (type __V) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (__K_of_js : Ojs.t -> __K) ->
                fun (__V_of_js : Ojs.t -> __V) ->
                  fun (x4266 : Ojs.t) -> intf_of_js __tags_of_js x4266
    and this_to_js :
      'tags 'K 'V .
        ('tags -> Ojs.t) ->
          ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('tags, 'K, 'V) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __K) ->
          fun (type __V) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (__K_to_js : __K -> Ojs.t) ->
                fun (__V_to_js : __V -> Ojs.t) ->
                  fun (x4264 : __tags intf) -> intf_to_js __tags_to_js x4264
    let (entries : ('tags, 'K, 'V) this -> ('K * 'V) IterableIterator.t) =
      fun (x4268 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js
          (fun (x4272 : Ojs.t) ->
             let x4273 = x4272 in
             ((Obj.magic (Ojs.array_get x4273 0)),
               (Obj.magic (Ojs.array_get x4273 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4268)
             "entries" [||])
    let (keys : ('tags, 'K, 'V) this -> 'K IterableIterator.t) =
      fun (x4274 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4274) "keys"
             [||])
    let (values : ('tags, 'K, 'V) this -> 'V IterableIterator.t) =
      fun (x4279 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4279) "values"
             [||])
    let (forEach :
      ('tags, 'K, 'V) this ->
        callbackfn:(value:'V -> key:'K -> map:('K, 'V) t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x4293 : ('tags, 'K, 'V) this) ->
        fun
          ~callbackfn:(x4284 : value:'V -> key:'K -> map:('K, 'V) t -> unit)
          ->
          fun ?thisArg:(x4285 : any option) ->
            fun () ->
              ignore
                (let x4297 = this_to_js Obj.magic Obj.magic Obj.magic x4293 in
                 Ojs.call (Ojs.get_prop_ascii x4297 "forEach") "apply"
                   [|x4297;((let x4286 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4286 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4288 : Ojs.t) ->
                                          fun (x4289 : Ojs.t) ->
                                            fun (x4290 : Ojs.t) ->
                                              x4284 ~value:(Obj.magic x4288)
                                                ~key:(Obj.magic x4289)
                                                ~map:(t_of_js Obj.magic
                                                        Obj.magic x4290)))|]);
                             (match x4285 with
                              | Some x4287 ->
                                  ignore
                                    (Ojs.call x4286 "push"
                                       [|(any_to_js x4287)|])
                              | None -> ());
                             x4286))|])
    let (get_ : ('tags, 'K, 'V) this -> key:'K -> 'V option) =
      fun (x4299 : ('tags, 'K, 'V) this) ->
        fun ~key:(x4298 : 'K) ->
          Ojs.option_of_js Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4299) "get"
               [|(Obj.magic x4298)|])
    let (has : ('tags, 'K, 'V) this -> key:'K -> bool) =
      fun (x4305 : ('tags, 'K, 'V) this) ->
        fun ~key:(x4304 : 'K) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4305) "has"
               [|(Obj.magic x4304)|])
    let (get_size : ('tags, 'K, 'V) this -> float) =
      fun (x4309 : ('tags, 'K, 'V) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii
             (this_to_js Obj.magic Obj.magic Obj.magic x4309) "size")
    let cast_from = Obj.magic
  end
module RangeError =
  struct
    type t = [ `Error  | `RangeError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4314 : Ojs.t) -> t_of_js x4314
    and t_0_to_js : t_0 -> Ojs.t = fun (x4313 : t) -> t_to_js x4313
    type tags = [ `Error  | `RangeError ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `RangeError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x4317 : Ojs.t) -> intf_of_js __tags_of_js x4317
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x4315 : __tags intf) -> intf_to_js __tags_to_js x4315
    let (create : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x4319 : string option) ->
        fun ?options:(x4320 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "RangeError")
                 (let x4321 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x4319 with
                   | Some x4323 ->
                       ignore
                         (Ojs.call x4321 "push" [|(Ojs.string_to_js x4323)|])
                   | None -> ());
                  (match x4320 with
                   | Some x4322 ->
                       ignore
                         (Ojs.call x4321 "push"
                            [|(ErrorOptions.t_to_js x4322)|])
                   | None -> ());
                  x4321))
    let (invoke : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x4324 : string option) ->
        fun ?options:(x4325 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "RangeError") "apply"
                 [|Ojs.null;((let x4326 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x4324 with
                               | Some x4328 ->
                                   ignore
                                     (Ojs.call x4326 "push"
                                        [|(Ojs.string_to_js x4328)|])
                               | None -> ());
                              (match x4325 with
                               | Some x4327 ->
                                   ignore
                                     (Ojs.call x4326 "push"
                                        [|(ErrorOptions.t_to_js x4327)|])
                               | None -> ());
                              x4326))|])
    let (create' : ?message:string -> unit -> t) =
      fun ?message:(x4329 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "RangeError")
               (let x4330 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x4329 with
                 | Some x4331 ->
                     ignore
                       (Ojs.call x4330 "push" [|(Ojs.string_to_js x4331)|])
                 | None -> ());
                x4330))
    let (invoke' : ?message:string -> unit -> t) =
      fun ?message:(x4332 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "RangeError") "apply"
               [|Ojs.null;((let x4333 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x4332 with
                             | Some x4334 ->
                                 ignore
                                   (Ojs.call x4333 "push"
                                      [|(Ojs.string_to_js x4334)|])
                             | None -> ());
                            x4333))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RangeError")
             "prototype")
    let cast_from = Obj.magic
  end
module ProxyHandler =
  struct
    type 'T t = [ `ProxyHandler of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4337 : Ojs.t) -> t_of_js __T_of_js x4337
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4335 : __T t) -> t_to_js __T_to_js x4335
    type 'T tags = [ `ProxyHandler of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ProxyHandler of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x4341 : Ojs.t) -> intf_of_js __tags_of_js x4341
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x4339 : __tags intf) -> intf_to_js __tags_to_js x4339
    let (apply_ :
      ('tags, 'T) this ->
        target:'T -> thisArg:any -> argArray:any list -> any)
      =
      fun (x4347 : ('tags, 'T) this) ->
        fun ~target:(x4343 : 'T) ->
          fun ~thisArg:(x4344 : any) ->
            fun ~argArray:(x4345 : any list) ->
              any_of_js
                (Ojs.call (this_to_js Obj.magic Obj.magic x4347) "apply"
                   [|(Obj.magic x4343);(any_to_js x4344);(Ojs.list_to_js
                                                            any_to_js x4345)|])
    let (construct :
      ('tags, 'T) this ->
        target:'T ->
          argArray:any list -> newTarget:Function.t -> untyped_object)
      =
      fun (x4354 : ('tags, 'T) this) ->
        fun ~target:(x4350 : 'T) ->
          fun ~argArray:(x4351 : any list) ->
            fun ~newTarget:(x4353 : Function.t) ->
              untyped_object_of_js
                (Ojs.call (this_to_js Obj.magic Obj.magic x4354) "construct"
                   [|(Obj.magic x4350);(Ojs.list_to_js any_to_js x4351);(
                     Function.t_to_js x4353)|])
    let (defineProperty :
      ('tags, 'T) this ->
        target:'T ->
          p:[ `U1 of string  | `U2 of symbol ] ->
            attributes:PropertyDescriptor.t -> bool)
      =
      fun (x4362 : ('tags, 'T) this) ->
        fun ~target:(x4357 : 'T) ->
          fun ~p:(x4358 : [ `U1 of string  | `U2 of symbol ]) ->
            fun ~attributes:(x4361 : PropertyDescriptor.t) ->
              Ojs.bool_of_js
                (Ojs.call (this_to_js Obj.magic Obj.magic x4362)
                   "defineProperty"
                   [|(Obj.magic x4357);((match x4358 with
                                         | `U1 x4359 ->
                                             Ojs.string_to_js x4359
                                         | `U2 x4360 -> symbol_to_js x4360));(
                     PropertyDescriptor.t_to_js x4361)|])
    let (deleteProperty :
      ('tags, 'T) this ->
        target:'T -> p:[ `U1 of string  | `U2 of symbol ] -> bool)
      =
      fun (x4369 : ('tags, 'T) this) ->
        fun ~target:(x4365 : 'T) ->
          fun ~p:(x4366 : [ `U1 of string  | `U2 of symbol ]) ->
            Ojs.bool_of_js
              (Ojs.call (this_to_js Obj.magic Obj.magic x4369)
                 "deleteProperty"
                 [|(Obj.magic x4365);((match x4366 with
                                       | `U1 x4367 -> Ojs.string_to_js x4367
                                       | `U2 x4368 -> symbol_to_js x4368))|])
    let (get_ :
      ('tags, 'T) this ->
        target:'T ->
          p:[ `U1 of string  | `U2 of symbol ] -> receiver:any -> any)
      =
      fun (x4377 : ('tags, 'T) this) ->
        fun ~target:(x4372 : 'T) ->
          fun ~p:(x4373 : [ `U1 of string  | `U2 of symbol ]) ->
            fun ~receiver:(x4376 : any) ->
              any_of_js
                (Ojs.call (this_to_js Obj.magic Obj.magic x4377) "get"
                   [|(Obj.magic x4372);((match x4373 with
                                         | `U1 x4374 ->
                                             Ojs.string_to_js x4374
                                         | `U2 x4375 -> symbol_to_js x4375));(
                     any_to_js x4376)|])
    let (getOwnPropertyDescriptor :
      ('tags, 'T) this ->
        target:'T ->
          p:[ `U1 of string  | `U2 of symbol ] -> PropertyDescriptor.t option)
      =
      fun (x4384 : ('tags, 'T) this) ->
        fun ~target:(x4380 : 'T) ->
          fun ~p:(x4381 : [ `U1 of string  | `U2 of symbol ]) ->
            Ojs.option_of_js PropertyDescriptor.t_of_js
              (Ojs.call (this_to_js Obj.magic Obj.magic x4384)
                 "getOwnPropertyDescriptor"
                 [|(Obj.magic x4380);((match x4381 with
                                       | `U1 x4382 -> Ojs.string_to_js x4382
                                       | `U2 x4383 -> symbol_to_js x4383))|])
    let (getPrototypeOf :
      ('tags, 'T) this -> target:'T -> untyped_object option) =
      fun (x4389 : ('tags, 'T) this) ->
        fun ~target:(x4388 : 'T) ->
          Ojs.option_of_js untyped_object_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x4389) "getPrototypeOf"
               [|(Obj.magic x4388)|])
    let (has :
      ('tags, 'T) this ->
        target:'T -> p:[ `U1 of string  | `U2 of symbol ] -> bool)
      =
      fun (x4397 : ('tags, 'T) this) ->
        fun ~target:(x4393 : 'T) ->
          fun ~p:(x4394 : [ `U1 of string  | `U2 of symbol ]) ->
            Ojs.bool_of_js
              (Ojs.call (this_to_js Obj.magic Obj.magic x4397) "has"
                 [|(Obj.magic x4393);((match x4394 with
                                       | `U1 x4395 -> Ojs.string_to_js x4395
                                       | `U2 x4396 -> symbol_to_js x4396))|])
    let (isExtensible : ('tags, 'T) this -> target:'T -> bool) =
      fun (x4401 : ('tags, 'T) this) ->
        fun ~target:(x4400 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x4401) "isExtensible"
               [|(Obj.magic x4400)|])
    let (ownKeys :
      ('tags, 'T) this ->
        target:'T ->
          [ `String of string  | `Symbol of symbol ] Primitive.t ArrayLike.t)
      =
      fun (x4405 : ('tags, 'T) this) ->
        fun ~target:(x4404 : 'T) ->
          ArrayLike.t_of_js
            (fun (x4408 : Ojs.t) ->
               Primitive.t_of_js
                 (fun (x4409 : Ojs.t) ->
                    let x4410 = x4409 in
                    match Ojs.string_of_js (Ojs.get_prop_ascii x4410 "dummy")
                    with
                    | "String" -> `String (Ojs.string_of_js x4410)
                    | "Symbol" -> `Symbol (symbol_of_js x4410)
                    | _ -> assert false) x4408)
            (Ojs.call (this_to_js Obj.magic Obj.magic x4405) "ownKeys"
               [|(Obj.magic x4404)|])
    let (preventExtensions : ('tags, 'T) this -> target:'T -> bool) =
      fun (x4412 : ('tags, 'T) this) ->
        fun ~target:(x4411 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x4412)
               "preventExtensions" [|(Obj.magic x4411)|])
    let (set_ :
      ('tags, 'T) this ->
        target:'T ->
          p:[ `U1 of string  | `U2 of symbol ] ->
            value:any -> receiver:any -> bool)
      =
      fun (x4421 : ('tags, 'T) this) ->
        fun ~target:(x4415 : 'T) ->
          fun ~p:(x4416 : [ `U1 of string  | `U2 of symbol ]) ->
            fun ~value:(x4419 : any) ->
              fun ~receiver:(x4420 : any) ->
                Ojs.bool_of_js
                  (Ojs.call (this_to_js Obj.magic Obj.magic x4421) "set"
                     [|(Obj.magic x4415);((match x4416 with
                                           | `U1 x4417 ->
                                               Ojs.string_to_js x4417
                                           | `U2 x4418 -> symbol_to_js x4418));(
                       any_to_js x4419);(any_to_js x4420)|])
    let (setPrototypeOf :
      ('tags, 'T) this -> target:'T -> v:untyped_object option -> bool) =
      fun (x4427 : ('tags, 'T) this) ->
        fun ~target:(x4424 : 'T) ->
          fun ~v:(x4425 : untyped_object option) ->
            Ojs.bool_of_js
              (Ojs.call (this_to_js Obj.magic Obj.magic x4427)
                 "setPrototypeOf"
                 [|(Obj.magic x4424);(Ojs.option_to_js untyped_object_to_js
                                        x4425)|])
    let cast_from = Obj.magic
  end
module ProxyStatic =
  struct
    module AnonymousInterface41 =
      struct
        type 'T t = Ojs.t
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
          fun (type __T) ->
            fun (__T_of_js : Ojs.t -> __T) -> fun (x4431 : Ojs.t) -> x4431
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
          fun (type __T) ->
            fun (__T_to_js : __T -> Ojs.t) -> fun (x4430 : Ojs.t) -> x4430
        let (get_proxy : 'T t -> 'T) =
          fun (x4432 : 'T t) ->
            Obj.magic (Ojs.get_prop_ascii (t_to_js Obj.magic x4432) "proxy")
        let (set_proxy : 'T t -> 'T -> unit) =
          fun (x4434 : 'T t) ->
            fun (x4435 : 'T) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x4434) "proxy"
                (Obj.magic x4435)
        let (revoke : 'T t -> unit) =
          fun (x4437 : 'T t) ->
            ignore (Ojs.call (t_to_js Obj.magic x4437) "revoke" [||])
        let (create : proxy:'T -> revoke:(unit -> unit) -> unit -> 'T t) =
          fun ~proxy:(x4439 : 'T) ->
            fun ~revoke:(x4440 : unit -> unit) ->
              fun () ->
                let x4441 = Ojs.empty_obj () in
                Ojs.set_prop_ascii x4441 "proxy" (Obj.magic x4439);
                Ojs.set_prop_ascii x4441 "revoke"
                  (Ojs.fun_to_js 1 (fun _ -> x4440 ()));
                t_of_js Obj.magic x4441
        module Make(T:Ojs.T) =
          struct
            type 'T parent = 'T t
            let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
              fun (type __T) ->
                fun (__T_of_js : Ojs.t -> __T) ->
                  fun (x4445 : Ojs.t) -> t_of_js __T_of_js x4445
            and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
              fun (type __T) ->
                fun (__T_to_js : __T -> Ojs.t) ->
                  fun (x4443 : __T t) -> t_to_js __T_to_js x4443
            type t = T.t parent
            let rec t_of_js : Ojs.t -> t =
              fun (x4449 : Ojs.t) -> parent_of_js T.t_of_js x4449
            and t_to_js : t -> Ojs.t =
              fun (x4447 : T.t parent) -> parent_to_js T.t_to_js x4447
            let (get_proxy : t -> T.t) =
              fun (x4451 : t) ->
                T.t_of_js (Ojs.get_prop_ascii (t_to_js x4451) "proxy")
            let (set_proxy : t -> T.t -> unit) =
              fun (x4452 : t) ->
                fun (x4453 : T.t) ->
                  Ojs.set_prop_ascii (t_to_js x4452) "proxy"
                    (T.t_to_js x4453)
            let (revoke : t -> unit) =
              fun (x4454 : t) ->
                ignore (Ojs.call (t_to_js x4454) "revoke" [||])
          end
      end
    let (revocable :
      target:'T -> handler:'T ProxyHandler.t -> 'T AnonymousInterface41.t) =
      fun ~target:(x4455 : 'T) ->
        fun ~handler:(x4456 : 'T ProxyHandler.t) ->
          AnonymousInterface41.t_of_js Obj.magic
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Proxy") "revocable"
               [|(Obj.magic x4455);(ProxyHandler.t_to_js Obj.magic x4456)|])
    let (create : target:'T -> handler:'T ProxyHandler.t -> 'T) =
      fun ~target:(x4459 : 'T) ->
        fun ~handler:(x4460 : 'T ProxyHandler.t) ->
          Obj.magic
            (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Proxy")
               [|(Obj.magic x4459);(ProxyHandler.t_to_js Obj.magic x4460)|])
  end
module ProxyConstructor =
  struct
    module AnonymousInterface41 =
      struct
        type 'T t = Ojs.t
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
          fun (type __T) ->
            fun (__T_of_js : Ojs.t -> __T) -> fun (x4463 : Ojs.t) -> x4463
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
          fun (type __T) ->
            fun (__T_to_js : __T -> Ojs.t) -> fun (x4462 : Ojs.t) -> x4462
        let (get_proxy : 'T t -> 'T) =
          fun (x4464 : 'T t) ->
            Obj.magic (Ojs.get_prop_ascii (t_to_js Obj.magic x4464) "proxy")
        let (set_proxy : 'T t -> 'T -> unit) =
          fun (x4466 : 'T t) ->
            fun (x4467 : 'T) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x4466) "proxy"
                (Obj.magic x4467)
        let (revoke : 'T t -> unit) =
          fun (x4469 : 'T t) ->
            ignore (Ojs.call (t_to_js Obj.magic x4469) "revoke" [||])
        let (create : proxy:'T -> revoke:(unit -> unit) -> unit -> 'T t) =
          fun ~proxy:(x4471 : 'T) ->
            fun ~revoke:(x4472 : unit -> unit) ->
              fun () ->
                let x4473 = Ojs.empty_obj () in
                Ojs.set_prop_ascii x4473 "proxy" (Obj.magic x4471);
                Ojs.set_prop_ascii x4473 "revoke"
                  (Ojs.fun_to_js 1 (fun _ -> x4472 ()));
                t_of_js Obj.magic x4473
        module Make(T:Ojs.T) =
          struct
            type 'T parent = 'T t
            let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
              fun (type __T) ->
                fun (__T_of_js : Ojs.t -> __T) ->
                  fun (x4477 : Ojs.t) -> t_of_js __T_of_js x4477
            and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
              fun (type __T) ->
                fun (__T_to_js : __T -> Ojs.t) ->
                  fun (x4475 : __T t) -> t_to_js __T_to_js x4475
            type t = T.t parent
            let rec t_of_js : Ojs.t -> t =
              fun (x4481 : Ojs.t) -> parent_of_js T.t_of_js x4481
            and t_to_js : t -> Ojs.t =
              fun (x4479 : T.t parent) -> parent_to_js T.t_to_js x4479
            let (get_proxy : t -> T.t) =
              fun (x4483 : t) ->
                T.t_of_js (Ojs.get_prop_ascii (t_to_js x4483) "proxy")
            let (set_proxy : t -> T.t -> unit) =
              fun (x4484 : t) ->
                fun (x4485 : T.t) ->
                  Ojs.set_prop_ascii (t_to_js x4484) "proxy"
                    (T.t_to_js x4485)
            let (revoke : t -> unit) =
              fun (x4486 : t) ->
                ignore (Ojs.call (t_to_js x4486) "revoke" [||])
          end
      end
    type t = [ `ProxyConstructor ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4488 : Ojs.t) -> t_of_js x4488
    and t_0_to_js : t_0 -> Ojs.t = fun (x4487 : t) -> t_to_js x4487
    type tags = [ `ProxyConstructor ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ProxyConstructor ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x4491 : Ojs.t) -> intf_of_js __tags_of_js x4491
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x4489 : __tags intf) -> intf_to_js __tags_to_js x4489
    let (revocable :
      'tags this ->
        target:'T -> handler:'T ProxyHandler.t -> 'T AnonymousInterface41.t)
      =
      fun (x4496 : 'tags this) ->
        fun ~target:(x4493 : 'T) ->
          fun ~handler:(x4494 : 'T ProxyHandler.t) ->
            AnonymousInterface41.t_of_js Obj.magic
              (Ojs.call (this_to_js Obj.magic x4496) "revocable"
                 [|(Obj.magic x4493);(ProxyHandler.t_to_js Obj.magic x4494)|])
    let (create : 'tags this -> target:'T -> handler:'T ProxyHandler.t -> 'T)
      =
      fun (x4502 : 'tags this) ->
        fun ~target:(x4499 : 'T) ->
          fun ~handler:(x4500 : 'T ProxyHandler.t) ->
            Obj.magic
              (Ojs.new_obj (this_to_js Obj.magic x4502)
                 [|(Obj.magic x4499);(ProxyHandler.t_to_js Obj.magic x4500)|])
    let cast_from = Obj.magic
  end
module ThisType =
  struct
    type 'T t = [ `ThisType of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4506 : Ojs.t) -> t_of_js __T_of_js x4506
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4504 : __T t) -> t_to_js __T_to_js x4504
    type 'T tags = [ `ThisType of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ThisType of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x4510 : Ojs.t) -> intf_of_js __tags_of_js x4510
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x4508 : __tags intf) -> intf_to_js __tags_to_js x4508
    let cast_from = Obj.magic
  end
module Readonly =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4513 : Ojs.t) -> any_of_js x4513
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4512 : any) -> any_to_js x4512
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4516 : Ojs.t) -> t_of_js __T_of_js x4516
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4514 : __T t) -> t_to_js __T_to_js x4514
  end
module PropertyDescriptorMap =
  struct
    type t = [ `PropertyDescriptorMap ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4519 : Ojs.t) -> t_of_js x4519
    and t_0_to_js : t_0 -> Ojs.t = fun (x4518 : t) -> t_to_js x4518
    type tags = [ `PropertyDescriptorMap ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `PropertyDescriptorMap ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x4522 : Ojs.t) -> intf_of_js __tags_of_js x4522
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x4520 : __tags intf) -> intf_to_js __tags_to_js x4520
    let (get : 'tags this -> PropertyKey.t -> PropertyDescriptor.t) =
      fun (x4524 : 'tags this) ->
        fun (x4526 : PropertyKey.t) ->
          PropertyDescriptor.t_of_js
            (Ojs.get_prop (this_to_js Obj.magic x4524)
               (PropertyKey.t_to_js x4526))
    let (set : 'tags this -> PropertyKey.t -> PropertyDescriptor.t -> unit) =
      fun (x4527 : 'tags this) ->
        fun (x4529 : PropertyKey.t) ->
          fun (x4530 : PropertyDescriptor.t) ->
            Ojs.set_prop (this_to_js Obj.magic x4527)
              (PropertyKey.t_to_js x4529) (PropertyDescriptor.t_to_js x4530)
    let cast_from = Obj.magic
  end
module Object =
  struct
    module AnonymousInterface48 =
      struct
        type 'T t = Ojs.t
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
          fun (type __T) ->
            fun (__T_of_js : Ojs.t -> __T) -> fun (x4532 : Ojs.t) -> x4532
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
          fun (type __T) ->
            fun (__T_to_js : __T -> Ojs.t) -> fun (x4531 : Ojs.t) -> x4531
        let (get : 'T t -> string -> 'T) =
          fun (x4533 : 'T t) ->
            fun (x4535 : string) ->
              Obj.magic
                (Ojs.get_prop (t_to_js Obj.magic x4533)
                   (Ojs.string_to_js x4535))
        let (set : 'T t -> string -> 'T -> unit) =
          fun (x4536 : 'T t) ->
            fun (x4538 : string) ->
              fun (x4539 : 'T) ->
                Ojs.set_prop (t_to_js Obj.magic x4536)
                  (Ojs.string_to_js x4538) (Obj.magic x4539)
        module Make(T:Ojs.T) =
          struct
            type 'T parent = 'T t
            let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
              fun (type __T) ->
                fun (__T_of_js : Ojs.t -> __T) ->
                  fun (x4542 : Ojs.t) -> t_of_js __T_of_js x4542
            and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
              fun (type __T) ->
                fun (__T_to_js : __T -> Ojs.t) ->
                  fun (x4540 : __T t) -> t_to_js __T_to_js x4540
            type t = T.t parent
            let rec t_of_js : Ojs.t -> t =
              fun (x4546 : Ojs.t) -> parent_of_js T.t_of_js x4546
            and t_to_js : t -> Ojs.t =
              fun (x4544 : T.t parent) -> parent_to_js T.t_to_js x4544
            let (get : t -> string -> T.t) =
              fun (x4548 : t) ->
                fun (x4549 : string) ->
                  T.t_of_js
                    (Ojs.get_prop (t_to_js x4548) (Ojs.string_to_js x4549))
            let (set : t -> string -> T.t -> unit) =
              fun (x4550 : t) ->
                fun (x4551 : string) ->
                  fun (x4552 : T.t) ->
                    Ojs.set_prop (t_to_js x4550) (Ojs.string_to_js x4551)
                      (T.t_to_js x4552)
          end
      end
    module AnonymousInterface45 =
      struct
        type 'T t = Ojs.t
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
          fun (type __T) ->
            fun (__T_of_js : Ojs.t -> __T) -> fun (x4554 : Ojs.t) -> x4554
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
          fun (type __T) ->
            fun (__T_to_js : __T -> Ojs.t) -> fun (x4553 : Ojs.t) -> x4553
        let (get : 'T t -> string -> 'T) =
          fun (x4555 : 'T t) ->
            fun (x4557 : string) ->
              Obj.magic
                (Ojs.get_prop (t_to_js Obj.magic x4555)
                   (Ojs.string_to_js x4557))
        let (set : 'T t -> string -> 'T -> unit) =
          fun (x4558 : 'T t) ->
            fun (x4560 : string) ->
              fun (x4561 : 'T) ->
                Ojs.set_prop (t_to_js Obj.magic x4558)
                  (Ojs.string_to_js x4560) (Obj.magic x4561)
        module Make(T:Ojs.T) =
          struct
            type 'T parent = 'T t
            let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
              fun (type __T) ->
                fun (__T_of_js : Ojs.t -> __T) ->
                  fun (x4564 : Ojs.t) -> t_of_js __T_of_js x4564
            and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
              fun (type __T) ->
                fun (__T_to_js : __T -> Ojs.t) ->
                  fun (x4562 : __T t) -> t_to_js __T_to_js x4562
            type t = T.t parent
            let rec t_of_js : Ojs.t -> t =
              fun (x4568 : Ojs.t) -> parent_of_js T.t_of_js x4568
            and t_to_js : t -> Ojs.t =
              fun (x4566 : T.t parent) -> parent_to_js T.t_to_js x4566
            let (get : t -> string -> T.t) =
              fun (x4570 : t) ->
                fun (x4571 : string) ->
                  T.t_of_js
                    (Ojs.get_prop (t_to_js x4570) (Ojs.string_to_js x4571))
            let (set : t -> string -> T.t -> unit) =
              fun (x4572 : t) ->
                fun (x4573 : string) ->
                  fun (x4574 : T.t) ->
                    Ojs.set_prop (t_to_js x4572) (Ojs.string_to_js x4573)
                      (T.t_to_js x4574)
          end
      end
    module AnonymousInterface17 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x4576 : Ojs.t) -> x4576
        and t_to_js : t -> Ojs.t = fun (x4575 : Ojs.t) -> x4575
        let (get : t -> string -> PropertyDescriptor.t) =
          fun (x4577 : t) ->
            fun (x4578 : string) ->
              PropertyDescriptor.t_of_js
                (Ojs.get_prop (t_to_js x4577) (Ojs.string_to_js x4578))
        let (set : t -> string -> PropertyDescriptor.t -> unit) =
          fun (x4579 : t) ->
            fun (x4580 : string) ->
              fun (x4581 : PropertyDescriptor.t) ->
                Ojs.set_prop (t_to_js x4579) (Ojs.string_to_js x4580)
                  (PropertyDescriptor.t_to_js x4581)
      end
    type t = [ `Object ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4583 : Ojs.t) -> t_of_js x4583
    and t_0_to_js : t_0 -> Ojs.t = fun (x4582 : t) -> t_to_js x4582
    type tags = [ `Object ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Object ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x4586 : Ojs.t) -> intf_of_js __tags_of_js x4586
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x4584 : __tags intf) -> intf_to_js __tags_to_js x4584
    let (get_constructor : 'tags this -> Function.t) =
      fun (x4588 : 'tags this) ->
        Function.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4588) "constructor")
    let (set_constructor : 'tags this -> Function.t -> unit) =
      fun (x4590 : 'tags this) ->
        fun (x4591 : Function.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4590) "constructor"
            (Function.t_to_js x4591)
    let (toString : 'tags this -> string) =
      fun (x4593 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x4593) "toString" [||])
    let (toLocaleString : 'tags this -> string) =
      fun (x4595 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x4595) "toLocaleString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x4597 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x4597) "valueOf" [||])
    let (hasOwnProperty : 'tags this -> v:PropertyKey.t -> bool) =
      fun (x4600 : 'tags this) ->
        fun ~v:(x4599 : PropertyKey.t) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic x4600) "hasOwnProperty"
               [|(PropertyKey.t_to_js x4599)|])
    let (isPrototypeOf : 'tags this -> v:t -> bool) =
      fun (x4603 : 'tags this) ->
        fun ~v:(x4602 : t) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic x4603) "isPrototypeOf"
               [|(t_to_js x4602)|])
    let (propertyIsEnumerable : 'tags this -> v:PropertyKey.t -> bool) =
      fun (x4606 : 'tags this) ->
        fun ~v:(x4605 : PropertyKey.t) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic x4606) "propertyIsEnumerable"
               [|(PropertyKey.t_to_js x4605)|])
    let (hasOwn : o:untyped_object -> v:PropertyKey.t -> bool) =
      fun ~o:(x4608 : untyped_object) ->
        fun ~v:(x4609 : PropertyKey.t) ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "hasOwn"
               [|(untyped_object_to_js x4608);(PropertyKey.t_to_js x4609)|])
    let (fromEntries :
      (PropertyKey.t * 'T) Iterable.t -> 'T AnonymousInterface45.t) =
      fun (x4610 : (PropertyKey.t * 'T) Iterable.t) ->
        AnonymousInterface45.t_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "fromEntries"
             [|(Iterable.t_to_js
                  (fun (x4611 : (PropertyKey.t * 'T)) ->
                     let (x4612, x4613) = x4611 in
                     let x4614 = Ojs.array_make 2 in
                     Ojs.array_set x4614 0 (PropertyKey.t_to_js x4612);
                     Ojs.array_set x4614 1 (Obj.magic x4613);
                     x4614) x4610)|])
    let (fromEntries' : any list Iterable.t -> any) =
      fun (x4616 : any list Iterable.t) ->
        any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "fromEntries"
             [|(Iterable.t_to_js
                  (fun (x4617 : any list) -> Ojs.list_to_js any_to_js x4617)
                  x4616)|])
    let (values :
      [ `U1 of 'T AnonymousInterface48.t  | `U2 of 'T ArrayLike.t ] ->
        'T list)
      =
      fun
        (x4619 :
          [ `U1 of 'T AnonymousInterface48.t  | `U2 of 'T ArrayLike.t ])
        ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "values"
             [|((match x4619 with
                 | `U1 x4620 -> AnonymousInterface48.t_to_js Obj.magic x4620
                 | `U2 x4622 -> ArrayLike.t_to_js Obj.magic x4622))|])
    let (values' : untyped_object -> any list) =
      fun (x4625 : untyped_object) ->
        Ojs.list_of_js any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "values"
             [|(untyped_object_to_js x4625)|])
    let (entries :
      [ `U1 of 'T AnonymousInterface48.t  | `U2 of 'T ArrayLike.t ] ->
        (string * 'T) list)
      =
      fun
        (x4627 :
          [ `U1 of 'T AnonymousInterface48.t  | `U2 of 'T ArrayLike.t ])
        ->
        Ojs.list_of_js
          (fun (x4632 : Ojs.t) ->
             let x4633 = x4632 in
             ((Ojs.string_of_js (Ojs.array_get x4633 0)),
               (Obj.magic (Ojs.array_get x4633 1))))
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "entries"
             [|((match x4627 with
                 | `U1 x4628 -> AnonymousInterface48.t_to_js Obj.magic x4628
                 | `U2 x4630 -> ArrayLike.t_to_js Obj.magic x4630))|])
    let (entries' : untyped_object -> (string * any) list) =
      fun (x4634 : untyped_object) ->
        Ojs.list_of_js
          (fun (x4635 : Ojs.t) ->
             let x4636 = x4635 in
             ((Ojs.string_of_js (Ojs.array_get x4636 0)),
               (any_of_js (Ojs.array_get x4636 1))))
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "entries"
             [|(untyped_object_to_js x4634)|])
    let (getOwnPropertyDescriptors :
      'T -> (any, AnonymousInterface17.t) intersection2) =
      fun (x4637 : 'T) ->
        intersection2_of_js any_of_js AnonymousInterface17.t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
             "getOwnPropertyDescriptors" [|(Obj.magic x4637)|])
    let (assign : target:'T -> source:'U -> ('T, 'U) intersection2) =
      fun ~target:(x4640 : 'T) ->
        fun ~source:(x4641 : 'U) ->
          intersection2_of_js Obj.magic Obj.magic
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "assign"
               [|(Obj.magic x4640);(Obj.magic x4641)|])
    let (assign' :
      target:'T -> source1:'U -> source2:'V -> ('T, 'U, 'V) intersection3) =
      fun ~target:(x4644 : 'T) ->
        fun ~source1:(x4645 : 'U) ->
          fun ~source2:(x4646 : 'V) ->
            intersection3_of_js Obj.magic Obj.magic Obj.magic
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "assign"
                 [|(Obj.magic x4644);(Obj.magic x4645);(Obj.magic x4646)|])
    let (assign'' :
      target:'T ->
        source1:'U ->
          source2:'V -> source3:'W -> ('T, 'U, 'V, 'W) intersection4)
      =
      fun ~target:(x4650 : 'T) ->
        fun ~source1:(x4651 : 'U) ->
          fun ~source2:(x4652 : 'V) ->
            fun ~source3:(x4653 : 'W) ->
              intersection4_of_js Obj.magic Obj.magic Obj.magic Obj.magic
                (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "assign"
                   [|(Obj.magic x4650);(Obj.magic x4651);(Obj.magic x4652);(
                     Obj.magic x4653)|])
    let (assign''' : target:untyped_object -> sources:any list -> any) =
      fun ~target:(x4658 : untyped_object) ->
        fun ~sources:(x4659 : any list) ->
          any_of_js
            (let x4662 = Ojs.get_prop_ascii Ojs.global "Object" in
             Ojs.call (Ojs.get_prop_ascii x4662 "assign") "apply"
               [|x4662;((let x4660 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         ignore
                           (Ojs.call x4660 "push"
                              [|(untyped_object_to_js x4658)|]);
                         List.iter
                           (fun (x4661 : any) ->
                              ignore
                                (Ojs.call x4660 "push" [|(any_to_js x4661)|]))
                           x4659;
                         x4660))|])
    let (getOwnPropertySymbols : any -> symbol list) =
      fun (x4663 : any) ->
        Ojs.list_of_js symbol_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
             "getOwnPropertySymbols" [|(any_to_js x4663)|])
    let (keys : untyped_object -> string list) =
      fun (x4665 : untyped_object) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "keys"
             [|(untyped_object_to_js x4665)|])
    let (is : value1:any -> value2:any -> bool) =
      fun ~value1:(x4667 : any) ->
        fun ~value2:(x4668 : any) ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "is"
               [|(any_to_js x4667);(any_to_js x4668)|])
    let (setPrototypeOf : o:any -> proto:untyped_object option -> any) =
      fun ~o:(x4669 : any) ->
        fun ~proto:(x4670 : untyped_object option) ->
          any_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
               "setPrototypeOf"
               [|(any_to_js x4669);(Ojs.option_to_js untyped_object_to_js
                                      x4670)|])
    let (create : ?value:any -> unit -> t) =
      fun ?value:(x4672 : any option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Object")
               (let x4673 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x4672 with
                 | Some x4674 ->
                     ignore (Ojs.call x4673 "push" [|(any_to_js x4674)|])
                 | None -> ());
                x4673))
    let (invoke : unit -> any) =
      fun () ->
        any_of_js (Ojs.apply (Ojs.get_prop_ascii Ojs.global "Object") [||])
    let (invoke' : any -> any) =
      fun (x4675 : any) ->
        any_of_js
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "Object")
             [|(any_to_js x4675)|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Object")
             "prototype")
    let (getPrototypeOf : any -> any) =
      fun (x4676 : any) ->
        any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "getPrototypeOf"
             [|(any_to_js x4676)|])
    let (getOwnPropertyDescriptor :
      o:any -> p:PropertyKey.t -> PropertyDescriptor.t option) =
      fun ~o:(x4677 : any) ->
        fun ~p:(x4678 : PropertyKey.t) ->
          Ojs.option_of_js PropertyDescriptor.t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
               "getOwnPropertyDescriptor"
               [|(any_to_js x4677);(PropertyKey.t_to_js x4678)|])
    let (getOwnPropertyNames : any -> string list) =
      fun (x4680 : any) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
             "getOwnPropertyNames" [|(any_to_js x4680)|])
    let (create_ : untyped_object option -> any) =
      fun (x4682 : untyped_object option) ->
        any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "create"
             [|(Ojs.option_to_js untyped_object_to_js x4682)|])
    let (create_' :
      o:untyped_object option ->
        properties:(PropertyDescriptorMap.t, any ThisType.t) intersection2 ->
          any)
      =
      fun ~o:(x4684 : untyped_object option) ->
        fun
          ~properties:(x4686 :
                        (PropertyDescriptorMap.t, any ThisType.t)
                          intersection2)
          ->
          any_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "create"
               [|(Ojs.option_to_js untyped_object_to_js x4684);(intersection2_to_js
                                                                  PropertyDescriptorMap.t_to_js
                                                                  (fun
                                                                    (x4688 :
                                                                    any
                                                                    ThisType.t)
                                                                    ->
                                                                    ThisType.t_to_js
                                                                    any_to_js
                                                                    x4688)
                                                                  x4686)|])
    let (defineProperty :
      o:'T ->
        p:PropertyKey.t ->
          attributes:(PropertyDescriptor.t, any ThisType.t) intersection2 ->
            'T)
      =
      fun ~o:(x4690 : 'T) ->
        fun ~p:(x4691 : PropertyKey.t) ->
          fun
            ~attributes:(x4692 :
                          (PropertyDescriptor.t, any ThisType.t)
                            intersection2)
            ->
            Obj.magic
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
                 "defineProperty"
                 [|(Obj.magic x4690);(PropertyKey.t_to_js x4691);(intersection2_to_js
                                                                    PropertyDescriptor.t_to_js
                                                                    (
                                                                    fun
                                                                    (x4694 :
                                                                    any
                                                                    ThisType.t)
                                                                    ->
                                                                    ThisType.t_to_js
                                                                    any_to_js
                                                                    x4694)
                                                                    x4692)|])
    let (defineProperties :
      o:'T ->
        properties:(PropertyDescriptorMap.t, any ThisType.t) intersection2 ->
          'T)
      =
      fun ~o:(x4696 : 'T) ->
        fun
          ~properties:(x4697 :
                        (PropertyDescriptorMap.t, any ThisType.t)
                          intersection2)
          ->
          Obj.magic
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
               "defineProperties"
               [|(Obj.magic x4696);(intersection2_to_js
                                      PropertyDescriptorMap.t_to_js
                                      (fun (x4699 : any ThisType.t) ->
                                         ThisType.t_to_js any_to_js x4699)
                                      x4697)|])
    let (seal : 'T -> 'T) =
      fun (x4701 : 'T) ->
        Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "seal"
             [|(Obj.magic x4701)|])
    let (freeze : 'T list -> 'T list) =
      fun (x4702 : 'T list) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "freeze"
             [|(Ojs.list_to_js Obj.magic x4702)|])
    let (freeze' : 'T -> 'T) =
      fun (x4705 : 'T) ->
        Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "freeze"
             [|(Obj.magic x4705)|])
    let (freeze'' : 'T -> 'T Readonly.t) =
      fun (x4706 : 'T) ->
        Readonly.t_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "freeze"
             [|(Obj.magic x4706)|])
    let (preventExtensions : 'T -> 'T) =
      fun (x4708 : 'T) ->
        Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
             "preventExtensions" [|(Obj.magic x4708)|])
    let (isSealed : any -> bool) =
      fun (x4709 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "isSealed"
             [|(any_to_js x4709)|])
    let (isFrozen : any -> bool) =
      fun (x4710 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "isFrozen"
             [|(any_to_js x4710)|])
    let (isExtensible : any -> bool) =
      fun (x4711 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "isExtensible"
             [|(any_to_js x4711)|])
    let (keys' : untyped_object -> string list) =
      fun (x4712 : untyped_object) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "keys"
             [|(untyped_object_to_js x4712)|])
    let cast_from = Obj.magic
  end
module PropertyDecorator =
  struct
    type t = [ `PropertyDecorator ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4715 : Ojs.t) -> t_of_js x4715
    and t_0_to_js : t_0 -> Ojs.t = fun (x4714 : t) -> t_to_js x4714
    type tags = [ `PropertyDecorator ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `PropertyDecorator ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x4718 : Ojs.t) -> intf_of_js __tags_of_js x4718
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x4716 : __tags intf) -> intf_to_js __tags_to_js x4716
    let (apply :
      'tags this ->
        target:Object.t ->
          propertyKey:[ `U1 of string  | `U2 of symbol ] -> unit)
      =
      fun (x4724 : 'tags this) ->
        fun ~target:(x4720 : Object.t) ->
          fun ~propertyKey:(x4721 : [ `U1 of string  | `U2 of symbol ]) ->
            ignore
              (Ojs.apply (this_to_js Obj.magic x4724)
                 [|(Object.t_to_js x4720);((match x4721 with
                                            | `U1 x4722 ->
                                                Ojs.string_to_js x4722
                                            | `U2 x4723 -> symbol_to_js x4723))|])
    let cast_from = Obj.magic
  end
module PromiseLike =
  struct
    type 'T t = [ `PromiseLike of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4728 : Ojs.t) -> t_of_js __T_of_js x4728
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4726 : __T t) -> t_to_js __T_to_js x4726
    type 'T tags = [ `PromiseLike of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `PromiseLike of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x4732 : Ojs.t) -> intf_of_js __tags_of_js x4732
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x4730 : __tags intf) -> intf_to_js __tags_to_js x4730
    let (then_ :
      ('tags, 'T) this ->
        ?onfulfilled:[ `Null  | `Undefined of undefined 
                     | `U1 of
                         'T -> [ `U1 of 'TResult1  | `U2 of 'TResult1 t ] ]
          ->
          ?onrejected:[ `Null  | `Undefined of undefined 
                      | `U1 of
                          any -> [ `U1 of 'TResult2  | `U2 of 'TResult2 t ] ]
            -> unit -> ('TResult1, 'TResult2) union2 t)
      =
      fun (x4751 : ('tags, 'T) this) ->
        fun
          ?onfulfilled:(x4734 :
                         [ `Null  | `Undefined of undefined 
                         | `U1 of
                             'T -> [ `U1 of 'TResult1  | `U2 of 'TResult1 t ] ]
                           option)
          ->
          fun
            ?onrejected:(x4735 :
                          [ `Null  | `Undefined of undefined 
                          | `U1 of
                              any ->
                                [ `U1 of 'TResult2  | `U2 of 'TResult2 t ]
                              ]
                            option)
            ->
            fun () ->
              t_of_js
                (fun (x4755 : Ojs.t) ->
                   union2_of_js Obj.magic Obj.magic x4755)
                (let x4754 = this_to_js Obj.magic Obj.magic x4751 in
                 Ojs.call (Ojs.get_prop_ascii x4754 "then") "apply"
                   [|x4754;((let x4736 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x4734 with
                              | Some x4744 ->
                                  ignore
                                    (Ojs.call x4736 "push"
                                       [|((match x4744 with
                                           | `Null -> Ojs.null
                                           | `Undefined x4745 ->
                                               undefined_to_js x4745
                                           | `U1 x4746 ->
                                               Ojs.fun_to_js 1
                                                 (fun (x4747 : Ojs.t) ->
                                                    match x4746
                                                            (Obj.magic x4747)
                                                    with
                                                    | `U1 x4748 ->
                                                        Obj.magic x4748
                                                    | `U2 x4749 ->
                                                        t_to_js Obj.magic
                                                          x4749)))|])
                              | None -> ());
                             (match x4735 with
                              | Some x4737 ->
                                  ignore
                                    (Ojs.call x4736 "push"
                                       [|((match x4737 with
                                           | `Null -> Ojs.null
                                           | `Undefined x4738 ->
                                               undefined_to_js x4738
                                           | `U1 x4739 ->
                                               Ojs.fun_to_js 1
                                                 (fun (x4740 : Ojs.t) ->
                                                    match x4739
                                                            (any_of_js x4740)
                                                    with
                                                    | `U1 x4741 ->
                                                        Obj.magic x4741
                                                    | `U2 x4742 ->
                                                        t_to_js Obj.magic
                                                          x4742)))|])
                              | None -> ());
                             x4736))|])
    let cast_from = Obj.magic
  end
module PromiseConstructorLike =
  struct
    module AnonymousInterface9 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x4759 : Ojs.t) -> x4759
        and t_to_js : t -> Ojs.t = fun (x4758 : Ojs.t) -> x4758
        let (create :
          t ->
            executor:(resolve:([ `U1 of 'T  | `U2 of 'T PromiseLike.t ] ->
                                 unit)
                        -> reject:(?reason:any -> unit -> unit) -> unit)
              -> 'T PromiseLike.t)
          =
          fun (x4770 : t) ->
            fun
              ~executor:(x4760 :
                          resolve:([ `U1 of 'T  | `U2 of 'T PromiseLike.t ]
                                     -> unit)
                            -> reject:(?reason:any -> unit -> unit) -> unit)
              ->
              PromiseLike.t_of_js Obj.magic
                (Ojs.new_obj (t_to_js x4770)
                   [|(Ojs.fun_to_js 2
                        (fun (x4761 : Ojs.t) ->
                           fun (x4766 : Ojs.t) ->
                             x4760
                               ~resolve:(fun
                                           (x4762 :
                                             [ `U1 of 'T 
                                             | `U2 of 'T PromiseLike.t ])
                                           ->
                                           ignore
                                             (Ojs.apply x4761
                                                [|((match x4762 with
                                                    | `U1 x4763 ->
                                                        Obj.magic x4763
                                                    | `U2 x4764 ->
                                                        PromiseLike.t_to_js
                                                          Obj.magic x4764))|]))
                               ~reject:(fun ?reason:(x4767 : any option) ->
                                          fun () ->
                                            ignore
                                              (Ojs.call x4766 "apply"
                                                 [|Ojs.null;((let x4768 =
                                                                Ojs.new_obj
                                                                  (Ojs.get_prop_ascii
                                                                    Ojs.global
                                                                    "Array")
                                                                  [||] in
                                                              (match x4767
                                                               with
                                                               | Some x4769
                                                                   ->
                                                                   ignore
                                                                    (Ojs.call
                                                                    x4768
                                                                    "push"
                                                                    [|(
                                                                    any_to_js
                                                                    x4769)|])
                                                               | None -> ());
                                                              x4768))|]))))|])
      end
    type t = AnonymousInterface9.t
    let rec t_of_js : Ojs.t -> t =
      fun (x4773 : Ojs.t) -> AnonymousInterface9.t_of_js x4773
    and t_to_js : t -> Ojs.t =
      fun (x4772 : AnonymousInterface9.t) ->
        AnonymousInterface9.t_to_js x4772
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4775 : Ojs.t) -> t_of_js x4775
    and t_0_to_js : t_0 -> Ojs.t = fun (x4774 : t) -> t_to_js x4774
  end
module Parameters =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4777 : Ojs.t) -> any_of_js x4777
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4776 : any) -> any_to_js x4776
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4780 : Ojs.t) -> t_of_js __T_of_js x4780
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4778 : __T t) -> t_to_js __T_to_js x4778
  end
module ParameterDecorator =
  struct
    type t = [ `ParameterDecorator ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4783 : Ojs.t) -> t_of_js x4783
    and t_0_to_js : t_0 -> Ojs.t = fun (x4782 : t) -> t_to_js x4782
    type tags = [ `ParameterDecorator ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ParameterDecorator ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x4786 : Ojs.t) -> intf_of_js __tags_of_js x4786
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x4784 : __tags intf) -> intf_to_js __tags_to_js x4784
    let (apply :
      'tags this ->
        target:Object.t ->
          propertyKey:[ `U1 of string  | `U2 of symbol ] ->
            parameterIndex:float -> unit)
      =
      fun (x4793 : 'tags this) ->
        fun ~target:(x4788 : Object.t) ->
          fun ~propertyKey:(x4789 : [ `U1 of string  | `U2 of symbol ]) ->
            fun ~parameterIndex:(x4792 : float) ->
              ignore
                (Ojs.apply (this_to_js Obj.magic x4793)
                   [|(Object.t_to_js x4788);((match x4789 with
                                              | `U1 x4790 ->
                                                  Ojs.string_to_js x4790
                                              | `U2 x4791 ->
                                                  symbol_to_js x4791));(
                     Ojs.float_to_js x4792)|])
    let cast_from = Obj.magic
  end
module Pick =
  struct
    type ('T, 'K) t = any
    let rec t_of_js :
      'T 'K . (Ojs.t -> 'T) -> (Ojs.t -> 'K) -> Ojs.t -> ('T, 'K) t =
      fun (type __T) ->
        fun (type __K) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__K_of_js : Ojs.t -> __K) ->
              fun (x4796 : Ojs.t) -> any_of_js x4796
    and t_to_js :
      'T 'K . ('T -> Ojs.t) -> ('K -> Ojs.t) -> ('T, 'K) t -> Ojs.t =
      fun (type __T) ->
        fun (type __K) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__K_to_js : __K -> Ojs.t) ->
              fun (x4795 : any) -> any_to_js x4795
    type ('T, 'K) t_2 = ('T, 'K) t
    let rec t_2_of_js :
      'T 'K . (Ojs.t -> 'T) -> (Ojs.t -> 'K) -> Ojs.t -> ('T, 'K) t_2 =
      fun (type __T) ->
        fun (type __K) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__K_of_js : Ojs.t -> __K) ->
              fun (x4800 : Ojs.t) -> t_of_js __T_of_js __K_of_js x4800
    and t_2_to_js :
      'T 'K . ('T -> Ojs.t) -> ('K -> Ojs.t) -> ('T, 'K) t_2 -> Ojs.t =
      fun (type __T) ->
        fun (type __K) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__K_to_js : __K -> Ojs.t) ->
              fun (x4797 : (__T, __K) t) -> t_to_js __T_to_js __K_to_js x4797
  end
module Exclude =
  struct
    type ('T, 'U) t = any
    let rec t_of_js :
      'T 'U . (Ojs.t -> 'T) -> (Ojs.t -> 'U) -> Ojs.t -> ('T, 'U) t =
      fun (type __T) ->
        fun (type __U) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__U_of_js : Ojs.t -> __U) ->
              fun (x4804 : Ojs.t) -> any_of_js x4804
    and t_to_js :
      'T 'U . ('T -> Ojs.t) -> ('U -> Ojs.t) -> ('T, 'U) t -> Ojs.t =
      fun (type __T) ->
        fun (type __U) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__U_to_js : __U -> Ojs.t) ->
              fun (x4803 : any) -> any_to_js x4803
    type ('T, 'U) t_2 = ('T, 'U) t
    let rec t_2_of_js :
      'T 'U . (Ojs.t -> 'T) -> (Ojs.t -> 'U) -> Ojs.t -> ('T, 'U) t_2 =
      fun (type __T) ->
        fun (type __U) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__U_of_js : Ojs.t -> __U) ->
              fun (x4808 : Ojs.t) -> t_of_js __T_of_js __U_of_js x4808
    and t_2_to_js :
      'T 'U . ('T -> Ojs.t) -> ('U -> Ojs.t) -> ('T, 'U) t_2 -> Ojs.t =
      fun (type __T) ->
        fun (type __U) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__U_to_js : __U -> Ojs.t) ->
              fun (x4805 : (__T, __U) t) -> t_to_js __T_to_js __U_to_js x4805
  end
module Omit =
  struct
    type ('T, 'K) t = ('T, (any, 'K) Exclude.t) Pick.t
    let rec t_of_js :
      'T 'K . (Ojs.t -> 'T) -> (Ojs.t -> 'K) -> Ojs.t -> ('T, 'K) t =
      fun (type __T) ->
        fun (type __K) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__K_of_js : Ojs.t -> __K) ->
              fun (x4816 : Ojs.t) ->
                Pick.t_of_js __T_of_js
                  (fun (x4818 : Ojs.t) ->
                     Exclude.t_of_js any_of_js __K_of_js x4818) x4816
    and t_to_js :
      'T 'K . ('T -> Ojs.t) -> ('K -> Ojs.t) -> ('T, 'K) t -> Ojs.t =
      fun (type __T) ->
        fun (type __K) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__K_to_js : __K -> Ojs.t) ->
              fun (x4811 : (__T, (any, __K) Exclude.t) Pick.t) ->
                Pick.t_to_js __T_to_js
                  (fun (x4813 : (any, __K) Exclude.t) ->
                     Exclude.t_to_js any_to_js __K_to_js x4813) x4811
    type ('T, 'K) t_2 = ('T, 'K) t
    let rec t_2_of_js :
      'T 'K . (Ojs.t -> 'T) -> (Ojs.t -> 'K) -> Ojs.t -> ('T, 'K) t_2 =
      fun (type __T) ->
        fun (type __K) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__K_of_js : Ojs.t -> __K) ->
              fun (x4824 : Ojs.t) -> t_of_js __T_of_js __K_of_js x4824
    and t_2_to_js :
      'T 'K . ('T -> Ojs.t) -> ('K -> Ojs.t) -> ('T, 'K) t_2 -> Ojs.t =
      fun (type __T) ->
        fun (type __K) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__K_to_js : __K -> Ojs.t) ->
              fun (x4821 : (__T, __K) t) -> t_to_js __T_to_js __K_to_js x4821
  end
module Number =
  struct
    type t = [ `Number ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4828 : Ojs.t) -> t_of_js x4828
    and t_0_to_js : t_0 -> Ojs.t = fun (x4827 : t) -> t_to_js x4827
    type tags = [ `Number ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Number ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x4831 : Ojs.t) -> intf_of_js __tags_of_js x4831
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x4829 : __tags intf) -> intf_to_js __tags_to_js x4829
    let (toLocaleString :
      'tags this ->
        ?locales:[ `U1 of string  | `U2 of string list ] ->
          ?options:Intl.NumberFormatOptions.t -> unit -> string)
      =
      fun (x4841 : 'tags this) ->
        fun ?locales:(x4833 : [ `U1 of string  | `U2 of string list ] option)
          ->
          fun ?options:(x4834 : Intl.NumberFormatOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x4843 = this_to_js Obj.magic x4841 in
                 Ojs.call (Ojs.get_prop_ascii x4843 "toLocaleString") "apply"
                   [|x4843;((let x4835 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x4833 with
                              | Some x4837 ->
                                  ignore
                                    (Ojs.call x4835 "push"
                                       [|((match x4837 with
                                           | `U1 x4838 ->
                                               Ojs.string_to_js x4838
                                           | `U2 x4839 ->
                                               Ojs.list_to_js
                                                 Ojs.string_to_js x4839))|])
                              | None -> ());
                             (match x4834 with
                              | Some x4836 ->
                                  ignore
                                    (Ojs.call x4835 "push"
                                       [|(Intl.NumberFormatOptions.t_to_js
                                            x4836)|])
                              | None -> ());
                             x4835))|])
    let (toString : 'tags this -> ?radix:float -> unit -> string) =
      fun (x4847 : 'tags this) ->
        fun ?radix:(x4844 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x4849 = this_to_js Obj.magic x4847 in
               Ojs.call (Ojs.get_prop_ascii x4849 "toString") "apply"
                 [|x4849;((let x4845 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x4844 with
                            | Some x4846 ->
                                ignore
                                  (Ojs.call x4845 "push"
                                     [|(Ojs.float_to_js x4846)|])
                            | None -> ());
                           x4845))|])
    let (toFixed : 'tags this -> ?fractionDigits:float -> unit -> string) =
      fun (x4853 : 'tags this) ->
        fun ?fractionDigits:(x4850 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x4855 = this_to_js Obj.magic x4853 in
               Ojs.call (Ojs.get_prop_ascii x4855 "toFixed") "apply"
                 [|x4855;((let x4851 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x4850 with
                            | Some x4852 ->
                                ignore
                                  (Ojs.call x4851 "push"
                                     [|(Ojs.float_to_js x4852)|])
                            | None -> ());
                           x4851))|])
    let (toExponential :
      'tags this -> ?fractionDigits:float -> unit -> string) =
      fun (x4859 : 'tags this) ->
        fun ?fractionDigits:(x4856 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x4861 = this_to_js Obj.magic x4859 in
               Ojs.call (Ojs.get_prop_ascii x4861 "toExponential") "apply"
                 [|x4861;((let x4857 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x4856 with
                            | Some x4858 ->
                                ignore
                                  (Ojs.call x4857 "push"
                                     [|(Ojs.float_to_js x4858)|])
                            | None -> ());
                           x4857))|])
    let (toPrecision : 'tags this -> ?precision:float -> unit -> string) =
      fun (x4865 : 'tags this) ->
        fun ?precision:(x4862 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x4867 = this_to_js Obj.magic x4865 in
               Ojs.call (Ojs.get_prop_ascii x4867 "toPrecision") "apply"
                 [|x4867;((let x4863 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x4862 with
                            | Some x4864 ->
                                ignore
                                  (Ojs.call x4863 "push"
                                     [|(Ojs.float_to_js x4864)|])
                            | None -> ());
                           x4863))|])
    let (valueOf : 'tags this -> float) =
      fun (x4868 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x4868) "valueOf" [||])
    let (epsilon : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "EPSILON")
    let (isFinite : unknown -> bool) =
      fun (x4870 : unknown) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "isFinite"
             [|(unknown_to_js x4870)|])
    let (isInteger : unknown -> bool) =
      fun (x4871 : unknown) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "isInteger"
             [|(unknown_to_js x4871)|])
    let (isNaN : unknown -> bool) =
      fun (x4872 : unknown) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "isNaN"
             [|(unknown_to_js x4872)|])
    let (isSafeInteger : unknown -> bool) =
      fun (x4873 : unknown) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "isSafeInteger"
             [|(unknown_to_js x4873)|])
    let (max_safe_integer : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "MAX_SAFE_INTEGER")
    let (min_safe_integer : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "MIN_SAFE_INTEGER")
    let (parseFloat : string -> float) =
      fun (x4874 : string) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "parseFloat"
             [|(Ojs.string_to_js x4874)|])
    let (parseInt : string:string -> ?radix:float -> unit -> float) =
      fun ~string:(x4875 : string) ->
        fun ?radix:(x4876 : float option) ->
          fun () ->
            Ojs.float_of_js
              (let x4879 = Ojs.get_prop_ascii Ojs.global "Number" in
               Ojs.call (Ojs.get_prop_ascii x4879 "parseInt") "apply"
                 [|x4879;((let x4877 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x4877 "push"
                                [|(Ojs.string_to_js x4875)|]);
                           (match x4876 with
                            | Some x4878 ->
                                ignore
                                  (Ojs.call x4877 "push"
                                     [|(Ojs.float_to_js x4878)|])
                            | None -> ());
                           x4877))|])
    let (create : ?value:any -> unit -> t) =
      fun ?value:(x4880 : any option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Number")
               (let x4881 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x4880 with
                 | Some x4882 ->
                     ignore (Ojs.call x4881 "push" [|(any_to_js x4882)|])
                 | None -> ());
                x4881))
    let (invoke : ?value:any -> unit -> float) =
      fun ?value:(x4883 : any option) ->
        fun () ->
          Ojs.float_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "apply"
               [|Ojs.null;((let x4884 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x4883 with
                             | Some x4885 ->
                                 ignore
                                   (Ojs.call x4884 "push"
                                      [|(any_to_js x4885)|])
                             | None -> ());
                            x4884))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "prototype")
    let (max_value : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "MAX_VALUE")
    let (min_value : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "MIN_VALUE")
    let (nan : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number") "NaN")
    let (negative_infinity : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "NEGATIVE_INFINITY")
    let (positive_infinity : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "POSITIVE_INFINITY")
    let cast_from = Obj.magic
    let (of_ml : float -> t) =
      fun (x4886 : float) -> t_of_js (Ojs.float_to_js x4886)
    let (to_ml : t -> float) =
      fun (x4887 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x4887) "valueOf" [||])
  end
module NonNullable =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4889 : Ojs.t) -> any_of_js x4889
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4888 : any) -> any_to_js x4888
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4892 : Ojs.t) -> t_of_js __T_of_js x4892
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4890 : __T t) -> t_to_js __T_to_js x4890
  end
module NewableFunction =
  struct
    module AnonymousInterface43 =
      struct
        type 'T t = Ojs.t
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
          fun (type __T) ->
            fun (__T_of_js : Ojs.t -> __T) -> fun (x4895 : Ojs.t) -> x4895
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
          fun (type __T) ->
            fun (__T_to_js : __T -> Ojs.t) -> fun (x4894 : Ojs.t) -> x4894
        let (create : 'T t -> 'T) =
          fun (x4896 : 'T t) ->
            Obj.magic (Ojs.new_obj (t_to_js Obj.magic x4896) [||])
        module Make(T:Ojs.T) =
          struct
            type 'T parent = 'T t
            let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
              fun (type __T) ->
                fun (__T_of_js : Ojs.t -> __T) ->
                  fun (x4900 : Ojs.t) -> t_of_js __T_of_js x4900
            and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
              fun (type __T) ->
                fun (__T_to_js : __T -> Ojs.t) ->
                  fun (x4898 : __T t) -> t_to_js __T_to_js x4898
            type t = T.t parent
            let rec t_of_js : Ojs.t -> t =
              fun (x4904 : Ojs.t) -> parent_of_js T.t_of_js x4904
            and t_to_js : t -> Ojs.t =
              fun (x4902 : T.t parent) -> parent_to_js T.t_to_js x4902
            let (create : t -> T.t) =
              fun (x4906 : t) -> T.t_of_js (Ojs.new_obj (t_to_js x4906) [||])
          end
      end
    module AnonymousInterface39 =
      struct
        type ('AX, 'R) t = Ojs.t
        let rec t_of_js :
          'AX 'R . (Ojs.t -> 'AX) -> (Ojs.t -> 'R) -> Ojs.t -> ('AX, 'R) t =
          fun (type __AX) ->
            fun (type __R) ->
              fun (__AX_of_js : Ojs.t -> __AX) ->
                fun (__R_of_js : Ojs.t -> __R) ->
                  fun (x4908 : Ojs.t) -> x4908
        and t_to_js :
          'AX 'R . ('AX -> Ojs.t) -> ('R -> Ojs.t) -> ('AX, 'R) t -> Ojs.t =
          fun (type __AX) ->
            fun (type __R) ->
              fun (__AX_to_js : __AX -> Ojs.t) ->
                fun (__R_to_js : __R -> Ojs.t) ->
                  fun (x4907 : Ojs.t) -> x4907
        let (create : ('AX, 'R) t -> args:'AX list -> 'R) =
          fun (x4912 : ('AX, 'R) t) ->
            fun ~args:(x4909 : 'AX list) ->
              Obj.magic
                (Ojs.new_obj_arr (t_to_js Obj.magic Obj.magic x4912)
                   (let x4910 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    List.iter
                      (fun (x4911 : 'AX) ->
                         ignore (Ojs.call x4910 "push" [|(Obj.magic x4911)|]))
                      x4909;
                    x4910))
        module Make(AX:Ojs.T)(R:Ojs.T) =
          struct
            type ('AX, 'R) parent = ('AX, 'R) t
            let rec parent_of_js :
              'AX 'R .
                (Ojs.t -> 'AX) -> (Ojs.t -> 'R) -> Ojs.t -> ('AX, 'R) parent
              =
              fun (type __AX) ->
                fun (type __R) ->
                  fun (__AX_of_js : Ojs.t -> __AX) ->
                    fun (__R_of_js : Ojs.t -> __R) ->
                      fun (x4918 : Ojs.t) ->
                        t_of_js __AX_of_js __R_of_js x4918
            and parent_to_js :
              'AX 'R .
                ('AX -> Ojs.t) -> ('R -> Ojs.t) -> ('AX, 'R) parent -> Ojs.t
              =
              fun (type __AX) ->
                fun (type __R) ->
                  fun (__AX_to_js : __AX -> Ojs.t) ->
                    fun (__R_to_js : __R -> Ojs.t) ->
                      fun (x4915 : (__AX, __R) t) ->
                        t_to_js __AX_to_js __R_to_js x4915
            type t = (AX.t, R.t) parent
            let rec t_of_js : Ojs.t -> t =
              fun (x4924 : Ojs.t) -> parent_of_js AX.t_of_js R.t_of_js x4924
            and t_to_js : t -> Ojs.t =
              fun (x4921 : (AX.t, R.t) parent) ->
                parent_to_js AX.t_to_js R.t_to_js x4921
            let (create : t -> args:AX.t list -> R.t) =
              fun (x4930 : t) ->
                fun ~args:(x4927 : AX.t list) ->
                  R.t_of_js
                    (Ojs.new_obj_arr (t_to_js x4930)
                       (let x4928 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x4929 : AX.t) ->
                             ignore
                               (Ojs.call x4928 "push" [|(AX.t_to_js x4929)|]))
                          x4927;
                        x4928))
          end
      end
    module AnonymousInterface36 =
      struct
        type ('A, 'T) t = Ojs.t
        let rec t_of_js :
          'A 'T . (Ojs.t -> 'A) -> (Ojs.t -> 'T) -> Ojs.t -> ('A, 'T) t =
          fun (type __A) ->
            fun (type __T) ->
              fun (__A_of_js : Ojs.t -> __A) ->
                fun (__T_of_js : Ojs.t -> __T) ->
                  fun (x4932 : Ojs.t) -> x4932
        and t_to_js :
          'A 'T . ('A -> Ojs.t) -> ('T -> Ojs.t) -> ('A, 'T) t -> Ojs.t =
          fun (type __A) ->
            fun (type __T) ->
              fun (__A_to_js : __A -> Ojs.t) ->
                fun (__T_to_js : __T -> Ojs.t) ->
                  fun (x4931 : Ojs.t) -> x4931
        let (create : ('A, 'T) t -> args:any list -> 'T) =
          fun (x4936 : ('A, 'T) t) ->
            fun ~args:(x4933 : any list) ->
              Obj.magic
                (Ojs.new_obj_arr (t_to_js Obj.magic Obj.magic x4936)
                   (let x4934 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    List.iter
                      (fun (x4935 : any) ->
                         ignore (Ojs.call x4934 "push" [|(any_to_js x4935)|]))
                      x4933;
                    x4934))
        module Make(A:Ojs.T)(T:Ojs.T) =
          struct
            type ('A, 'T) parent = ('A, 'T) t
            let rec parent_of_js :
              'A 'T .
                (Ojs.t -> 'A) -> (Ojs.t -> 'T) -> Ojs.t -> ('A, 'T) parent
              =
              fun (type __A) ->
                fun (type __T) ->
                  fun (__A_of_js : Ojs.t -> __A) ->
                    fun (__T_of_js : Ojs.t -> __T) ->
                      fun (x4942 : Ojs.t) ->
                        t_of_js __A_of_js __T_of_js x4942
            and parent_to_js :
              'A 'T .
                ('A -> Ojs.t) -> ('T -> Ojs.t) -> ('A, 'T) parent -> Ojs.t
              =
              fun (type __A) ->
                fun (type __T) ->
                  fun (__A_to_js : __A -> Ojs.t) ->
                    fun (__T_to_js : __T -> Ojs.t) ->
                      fun (x4939 : (__A, __T) t) ->
                        t_to_js __A_to_js __T_to_js x4939
            type t = (A.t, T.t) parent
            let rec t_of_js : Ojs.t -> t =
              fun (x4948 : Ojs.t) -> parent_of_js A.t_of_js T.t_of_js x4948
            and t_to_js : t -> Ojs.t =
              fun (x4945 : (A.t, T.t) parent) ->
                parent_to_js A.t_to_js T.t_to_js x4945
            let (create : t -> args:any list -> T.t) =
              fun (x4954 : t) ->
                fun ~args:(x4951 : any list) ->
                  T.t_of_js
                    (Ojs.new_obj_arr (t_to_js x4954)
                       (let x4952 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x4953 : any) ->
                             ignore
                               (Ojs.call x4952 "push" [|(any_to_js x4953)|]))
                          x4951;
                        x4952))
          end
      end
    module AnonymousInterface33 =
      struct
        type ('A, 'R) t = Ojs.t
        let rec t_of_js :
          'A 'R . (Ojs.t -> 'A) -> (Ojs.t -> 'R) -> Ojs.t -> ('A, 'R) t =
          fun (type __A) ->
            fun (type __R) ->
              fun (__A_of_js : Ojs.t -> __A) ->
                fun (__R_of_js : Ojs.t -> __R) ->
                  fun (x4956 : Ojs.t) -> x4956
        and t_to_js :
          'A 'R . ('A -> Ojs.t) -> ('R -> Ojs.t) -> ('A, 'R) t -> Ojs.t =
          fun (type __A) ->
            fun (type __R) ->
              fun (__A_to_js : __A -> Ojs.t) ->
                fun (__R_to_js : __R -> Ojs.t) ->
                  fun (x4955 : Ojs.t) -> x4955
        let (create : ('A, 'R) t -> args:any list -> 'R) =
          fun (x4960 : ('A, 'R) t) ->
            fun ~args:(x4957 : any list) ->
              Obj.magic
                (Ojs.new_obj_arr (t_to_js Obj.magic Obj.magic x4960)
                   (let x4958 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    List.iter
                      (fun (x4959 : any) ->
                         ignore (Ojs.call x4958 "push" [|(any_to_js x4959)|]))
                      x4957;
                    x4958))
        module Make(A:Ojs.T)(R:Ojs.T) =
          struct
            type ('A, 'R) parent = ('A, 'R) t
            let rec parent_of_js :
              'A 'R .
                (Ojs.t -> 'A) -> (Ojs.t -> 'R) -> Ojs.t -> ('A, 'R) parent
              =
              fun (type __A) ->
                fun (type __R) ->
                  fun (__A_of_js : Ojs.t -> __A) ->
                    fun (__R_of_js : Ojs.t -> __R) ->
                      fun (x4966 : Ojs.t) ->
                        t_of_js __A_of_js __R_of_js x4966
            and parent_to_js :
              'A 'R .
                ('A -> Ojs.t) -> ('R -> Ojs.t) -> ('A, 'R) parent -> Ojs.t
              =
              fun (type __A) ->
                fun (type __R) ->
                  fun (__A_to_js : __A -> Ojs.t) ->
                    fun (__R_to_js : __R -> Ojs.t) ->
                      fun (x4963 : (__A, __R) t) ->
                        t_to_js __A_to_js __R_to_js x4963
            type t = (A.t, R.t) parent
            let rec t_of_js : Ojs.t -> t =
              fun (x4972 : Ojs.t) -> parent_of_js A.t_of_js R.t_of_js x4972
            and t_to_js : t -> Ojs.t =
              fun (x4969 : (A.t, R.t) parent) ->
                parent_to_js A.t_to_js R.t_to_js x4969
            let (create : t -> args:any list -> R.t) =
              fun (x4978 : t) ->
                fun ~args:(x4975 : any list) ->
                  R.t_of_js
                    (Ojs.new_obj_arr (t_to_js x4978)
                       (let x4976 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x4977 : any) ->
                             ignore
                               (Ojs.call x4976 "push" [|(any_to_js x4977)|]))
                          x4975;
                        x4976))
          end
      end
    module AnonymousInterface31 =
      struct
        type ('A, 'A0, 'R) t = Ojs.t
        let rec t_of_js :
          'A 'A0 'R .
            (Ojs.t -> 'A) ->
              (Ojs.t -> 'A0) -> (Ojs.t -> 'R) -> Ojs.t -> ('A, 'A0, 'R) t
          =
          fun (type __A) ->
            fun (type __A0) ->
              fun (type __R) ->
                fun (__A_of_js : Ojs.t -> __A) ->
                  fun (__A0_of_js : Ojs.t -> __A0) ->
                    fun (__R_of_js : Ojs.t -> __R) ->
                      fun (x4980 : Ojs.t) -> x4980
        and t_to_js :
          'A 'A0 'R .
            ('A -> Ojs.t) ->
              ('A0 -> Ojs.t) -> ('R -> Ojs.t) -> ('A, 'A0, 'R) t -> Ojs.t
          =
          fun (type __A) ->
            fun (type __A0) ->
              fun (type __R) ->
                fun (__A_to_js : __A -> Ojs.t) ->
                  fun (__A0_to_js : __A0 -> Ojs.t) ->
                    fun (__R_to_js : __R -> Ojs.t) ->
                      fun (x4979 : Ojs.t) -> x4979
        let (create : ('A, 'A0, 'R) t -> arg0:'A0 -> args:any list -> 'R) =
          fun (x4985 : ('A, 'A0, 'R) t) ->
            fun ~arg0:(x4981 : 'A0) ->
              fun ~args:(x4982 : any list) ->
                Obj.magic
                  (Ojs.new_obj_arr
                     (t_to_js Obj.magic Obj.magic Obj.magic x4985)
                     (let x4983 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore (Ojs.call x4983 "push" [|(Obj.magic x4981)|]);
                      List.iter
                        (fun (x4984 : any) ->
                           ignore
                             (Ojs.call x4983 "push" [|(any_to_js x4984)|]))
                        x4982;
                      x4983))
        module Make(A:Ojs.T)(A0:Ojs.T)(R:Ojs.T) =
          struct
            type ('A, 'A0, 'R) parent = ('A, 'A0, 'R) t
            let rec parent_of_js :
              'A 'A0 'R .
                (Ojs.t -> 'A) ->
                  (Ojs.t -> 'A0) ->
                    (Ojs.t -> 'R) -> Ojs.t -> ('A, 'A0, 'R) parent
              =
              fun (type __A) ->
                fun (type __A0) ->
                  fun (type __R) ->
                    fun (__A_of_js : Ojs.t -> __A) ->
                      fun (__A0_of_js : Ojs.t -> __A0) ->
                        fun (__R_of_js : Ojs.t -> __R) ->
                          fun (x4993 : Ojs.t) ->
                            t_of_js __A_of_js __A0_of_js __R_of_js x4993
            and parent_to_js :
              'A 'A0 'R .
                ('A -> Ojs.t) ->
                  ('A0 -> Ojs.t) ->
                    ('R -> Ojs.t) -> ('A, 'A0, 'R) parent -> Ojs.t
              =
              fun (type __A) ->
                fun (type __A0) ->
                  fun (type __R) ->
                    fun (__A_to_js : __A -> Ojs.t) ->
                      fun (__A0_to_js : __A0 -> Ojs.t) ->
                        fun (__R_to_js : __R -> Ojs.t) ->
                          fun (x4989 : (__A, __A0, __R) t) ->
                            t_to_js __A_to_js __A0_to_js __R_to_js x4989
            type t = (A.t, A0.t, R.t) parent
            let rec t_of_js : Ojs.t -> t =
              fun (x5001 : Ojs.t) ->
                parent_of_js A.t_of_js A0.t_of_js R.t_of_js x5001
            and t_to_js : t -> Ojs.t =
              fun (x4997 : (A.t, A0.t, R.t) parent) ->
                parent_to_js A.t_to_js A0.t_to_js R.t_to_js x4997
            let (create : t -> arg0:A0.t -> args:any list -> R.t) =
              fun (x5009 : t) ->
                fun ~arg0:(x5005 : A0.t) ->
                  fun ~args:(x5006 : any list) ->
                    R.t_of_js
                      (Ojs.new_obj_arr (t_to_js x5009)
                         (let x5007 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          ignore
                            (Ojs.call x5007 "push" [|(A0.t_to_js x5005)|]);
                          List.iter
                            (fun (x5008 : any) ->
                               ignore
                                 (Ojs.call x5007 "push" [|(any_to_js x5008)|]))
                            x5006;
                          x5007))
          end
      end
    module AnonymousInterface29 =
      struct
        type ('A, 'A0, 'A1, 'R) t = Ojs.t
        let rec t_of_js :
          'A 'A0 'A1 'R .
            (Ojs.t -> 'A) ->
              (Ojs.t -> 'A0) ->
                (Ojs.t -> 'A1) ->
                  (Ojs.t -> 'R) -> Ojs.t -> ('A, 'A0, 'A1, 'R) t
          =
          fun (type __A) ->
            fun (type __A0) ->
              fun (type __A1) ->
                fun (type __R) ->
                  fun (__A_of_js : Ojs.t -> __A) ->
                    fun (__A0_of_js : Ojs.t -> __A0) ->
                      fun (__A1_of_js : Ojs.t -> __A1) ->
                        fun (__R_of_js : Ojs.t -> __R) ->
                          fun (x5011 : Ojs.t) -> x5011
        and t_to_js :
          'A 'A0 'A1 'R .
            ('A -> Ojs.t) ->
              ('A0 -> Ojs.t) ->
                ('A1 -> Ojs.t) ->
                  ('R -> Ojs.t) -> ('A, 'A0, 'A1, 'R) t -> Ojs.t
          =
          fun (type __A) ->
            fun (type __A0) ->
              fun (type __A1) ->
                fun (type __R) ->
                  fun (__A_to_js : __A -> Ojs.t) ->
                    fun (__A0_to_js : __A0 -> Ojs.t) ->
                      fun (__A1_to_js : __A1 -> Ojs.t) ->
                        fun (__R_to_js : __R -> Ojs.t) ->
                          fun (x5010 : Ojs.t) -> x5010
        let (create :
          ('A, 'A0, 'A1, 'R) t -> arg0:'A0 -> arg1:'A1 -> args:any list -> 'R)
          =
          fun (x5017 : ('A, 'A0, 'A1, 'R) t) ->
            fun ~arg0:(x5012 : 'A0) ->
              fun ~arg1:(x5013 : 'A1) ->
                fun ~args:(x5014 : any list) ->
                  Obj.magic
                    (Ojs.new_obj_arr
                       (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic x5017)
                       (let x5015 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        ignore (Ojs.call x5015 "push" [|(Obj.magic x5012)|]);
                        ignore (Ojs.call x5015 "push" [|(Obj.magic x5013)|]);
                        List.iter
                          (fun (x5016 : any) ->
                             ignore
                               (Ojs.call x5015 "push" [|(any_to_js x5016)|]))
                          x5014;
                        x5015))
        module Make(A:Ojs.T)(A0:Ojs.T)(A1:Ojs.T)(R:Ojs.T) =
          struct
            type ('A, 'A0, 'A1, 'R) parent = ('A, 'A0, 'A1, 'R) t
            let rec parent_of_js :
              'A 'A0 'A1 'R .
                (Ojs.t -> 'A) ->
                  (Ojs.t -> 'A0) ->
                    (Ojs.t -> 'A1) ->
                      (Ojs.t -> 'R) -> Ojs.t -> ('A, 'A0, 'A1, 'R) parent
              =
              fun (type __A) ->
                fun (type __A0) ->
                  fun (type __A1) ->
                    fun (type __R) ->
                      fun (__A_of_js : Ojs.t -> __A) ->
                        fun (__A0_of_js : Ojs.t -> __A0) ->
                          fun (__A1_of_js : Ojs.t -> __A1) ->
                            fun (__R_of_js : Ojs.t -> __R) ->
                              fun (x5027 : Ojs.t) ->
                                t_of_js __A_of_js __A0_of_js __A1_of_js
                                  __R_of_js x5027
            and parent_to_js :
              'A 'A0 'A1 'R .
                ('A -> Ojs.t) ->
                  ('A0 -> Ojs.t) ->
                    ('A1 -> Ojs.t) ->
                      ('R -> Ojs.t) -> ('A, 'A0, 'A1, 'R) parent -> Ojs.t
              =
              fun (type __A) ->
                fun (type __A0) ->
                  fun (type __A1) ->
                    fun (type __R) ->
                      fun (__A_to_js : __A -> Ojs.t) ->
                        fun (__A0_to_js : __A0 -> Ojs.t) ->
                          fun (__A1_to_js : __A1 -> Ojs.t) ->
                            fun (__R_to_js : __R -> Ojs.t) ->
                              fun (x5022 : (__A, __A0, __A1, __R) t) ->
                                t_to_js __A_to_js __A0_to_js __A1_to_js
                                  __R_to_js x5022
            type t = (A.t, A0.t, A1.t, R.t) parent
            let rec t_of_js : Ojs.t -> t =
              fun (x5037 : Ojs.t) ->
                parent_of_js A.t_of_js A0.t_of_js A1.t_of_js R.t_of_js x5037
            and t_to_js : t -> Ojs.t =
              fun (x5032 : (A.t, A0.t, A1.t, R.t) parent) ->
                parent_to_js A.t_to_js A0.t_to_js A1.t_to_js R.t_to_js x5032
            let (create :
              t -> arg0:A0.t -> arg1:A1.t -> args:any list -> R.t) =
              fun (x5047 : t) ->
                fun ~arg0:(x5042 : A0.t) ->
                  fun ~arg1:(x5043 : A1.t) ->
                    fun ~args:(x5044 : any list) ->
                      R.t_of_js
                        (Ojs.new_obj_arr (t_to_js x5047)
                           (let x5045 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x5045 "push" [|(A0.t_to_js x5042)|]);
                            ignore
                              (Ojs.call x5045 "push" [|(A1.t_to_js x5043)|]);
                            List.iter
                              (fun (x5046 : any) ->
                                 ignore
                                   (Ojs.call x5045 "push"
                                      [|(any_to_js x5046)|])) x5044;
                            x5045))
          end
      end
    module AnonymousInterface27 =
      struct
        type ('A, 'A0, 'A1, 'A2, 'R) t = Ojs.t
        let rec t_of_js :
          'A 'A0 'A1 'A2 'R .
            (Ojs.t -> 'A) ->
              (Ojs.t -> 'A0) ->
                (Ojs.t -> 'A1) ->
                  (Ojs.t -> 'A2) ->
                    (Ojs.t -> 'R) -> Ojs.t -> ('A, 'A0, 'A1, 'A2, 'R) t
          =
          fun (type __A) ->
            fun (type __A0) ->
              fun (type __A1) ->
                fun (type __A2) ->
                  fun (type __R) ->
                    fun (__A_of_js : Ojs.t -> __A) ->
                      fun (__A0_of_js : Ojs.t -> __A0) ->
                        fun (__A1_of_js : Ojs.t -> __A1) ->
                          fun (__A2_of_js : Ojs.t -> __A2) ->
                            fun (__R_of_js : Ojs.t -> __R) ->
                              fun (x5049 : Ojs.t) -> x5049
        and t_to_js :
          'A 'A0 'A1 'A2 'R .
            ('A -> Ojs.t) ->
              ('A0 -> Ojs.t) ->
                ('A1 -> Ojs.t) ->
                  ('A2 -> Ojs.t) ->
                    ('R -> Ojs.t) -> ('A, 'A0, 'A1, 'A2, 'R) t -> Ojs.t
          =
          fun (type __A) ->
            fun (type __A0) ->
              fun (type __A1) ->
                fun (type __A2) ->
                  fun (type __R) ->
                    fun (__A_to_js : __A -> Ojs.t) ->
                      fun (__A0_to_js : __A0 -> Ojs.t) ->
                        fun (__A1_to_js : __A1 -> Ojs.t) ->
                          fun (__A2_to_js : __A2 -> Ojs.t) ->
                            fun (__R_to_js : __R -> Ojs.t) ->
                              fun (x5048 : Ojs.t) -> x5048
        let (create :
          ('A, 'A0, 'A1, 'A2, 'R) t ->
            arg0:'A0 -> arg1:'A1 -> arg2:'A2 -> args:any list -> 'R)
          =
          fun (x5056 : ('A, 'A0, 'A1, 'A2, 'R) t) ->
            fun ~arg0:(x5050 : 'A0) ->
              fun ~arg1:(x5051 : 'A1) ->
                fun ~arg2:(x5052 : 'A2) ->
                  fun ~args:(x5053 : any list) ->
                    Obj.magic
                      (Ojs.new_obj_arr
                         (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic
                            Obj.magic x5056)
                         (let x5054 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          ignore
                            (Ojs.call x5054 "push" [|(Obj.magic x5050)|]);
                          ignore
                            (Ojs.call x5054 "push" [|(Obj.magic x5051)|]);
                          ignore
                            (Ojs.call x5054 "push" [|(Obj.magic x5052)|]);
                          List.iter
                            (fun (x5055 : any) ->
                               ignore
                                 (Ojs.call x5054 "push" [|(any_to_js x5055)|]))
                            x5053;
                          x5054))
        module Make(A:Ojs.T)(A0:Ojs.T)(A1:Ojs.T)(A2:Ojs.T)(R:Ojs.T) =
          struct
            type ('A, 'A0, 'A1, 'A2, 'R) parent = ('A, 'A0, 'A1, 'A2, 'R) t
            let rec parent_of_js :
              'A 'A0 'A1 'A2 'R .
                (Ojs.t -> 'A) ->
                  (Ojs.t -> 'A0) ->
                    (Ojs.t -> 'A1) ->
                      (Ojs.t -> 'A2) ->
                        (Ojs.t -> 'R) ->
                          Ojs.t -> ('A, 'A0, 'A1, 'A2, 'R) parent
              =
              fun (type __A) ->
                fun (type __A0) ->
                  fun (type __A1) ->
                    fun (type __A2) ->
                      fun (type __R) ->
                        fun (__A_of_js : Ojs.t -> __A) ->
                          fun (__A0_of_js : Ojs.t -> __A0) ->
                            fun (__A1_of_js : Ojs.t -> __A1) ->
                              fun (__A2_of_js : Ojs.t -> __A2) ->
                                fun (__R_of_js : Ojs.t -> __R) ->
                                  fun (x5068 : Ojs.t) ->
                                    t_of_js __A_of_js __A0_of_js __A1_of_js
                                      __A2_of_js __R_of_js x5068
            and parent_to_js :
              'A 'A0 'A1 'A2 'R .
                ('A -> Ojs.t) ->
                  ('A0 -> Ojs.t) ->
                    ('A1 -> Ojs.t) ->
                      ('A2 -> Ojs.t) ->
                        ('R -> Ojs.t) ->
                          ('A, 'A0, 'A1, 'A2, 'R) parent -> Ojs.t
              =
              fun (type __A) ->
                fun (type __A0) ->
                  fun (type __A1) ->
                    fun (type __A2) ->
                      fun (type __R) ->
                        fun (__A_to_js : __A -> Ojs.t) ->
                          fun (__A0_to_js : __A0 -> Ojs.t) ->
                            fun (__A1_to_js : __A1 -> Ojs.t) ->
                              fun (__A2_to_js : __A2 -> Ojs.t) ->
                                fun (__R_to_js : __R -> Ojs.t) ->
                                  fun
                                    (x5062 : (__A, __A0, __A1, __A2, __R) t)
                                    ->
                                    t_to_js __A_to_js __A0_to_js __A1_to_js
                                      __A2_to_js __R_to_js x5062
            type t = (A.t, A0.t, A1.t, A2.t, R.t) parent
            let rec t_of_js : Ojs.t -> t =
              fun (x5080 : Ojs.t) ->
                parent_of_js A.t_of_js A0.t_of_js A1.t_of_js A2.t_of_js
                  R.t_of_js x5080
            and t_to_js : t -> Ojs.t =
              fun (x5074 : (A.t, A0.t, A1.t, A2.t, R.t) parent) ->
                parent_to_js A.t_to_js A0.t_to_js A1.t_to_js A2.t_to_js
                  R.t_to_js x5074
            let (create :
              t ->
                arg0:A0.t -> arg1:A1.t -> arg2:A2.t -> args:any list -> R.t)
              =
              fun (x5092 : t) ->
                fun ~arg0:(x5086 : A0.t) ->
                  fun ~arg1:(x5087 : A1.t) ->
                    fun ~arg2:(x5088 : A2.t) ->
                      fun ~args:(x5089 : any list) ->
                        R.t_of_js
                          (Ojs.new_obj_arr (t_to_js x5092)
                             (let x5090 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x5090 "push" [|(A0.t_to_js x5086)|]);
                              ignore
                                (Ojs.call x5090 "push" [|(A1.t_to_js x5087)|]);
                              ignore
                                (Ojs.call x5090 "push" [|(A2.t_to_js x5088)|]);
                              List.iter
                                (fun (x5091 : any) ->
                                   ignore
                                     (Ojs.call x5090 "push"
                                        [|(any_to_js x5091)|])) x5089;
                              x5090))
          end
      end
    module AnonymousInterface25 =
      struct
        type ('A, 'A0, 'A1, 'A2, 'A3, 'R) t = Ojs.t
        let rec t_of_js :
          'A 'A0 'A1 'A2 'A3 'R .
            (Ojs.t -> 'A) ->
              (Ojs.t -> 'A0) ->
                (Ojs.t -> 'A1) ->
                  (Ojs.t -> 'A2) ->
                    (Ojs.t -> 'A3) ->
                      (Ojs.t -> 'R) ->
                        Ojs.t -> ('A, 'A0, 'A1, 'A2, 'A3, 'R) t
          =
          fun (type __A) ->
            fun (type __A0) ->
              fun (type __A1) ->
                fun (type __A2) ->
                  fun (type __A3) ->
                    fun (type __R) ->
                      fun (__A_of_js : Ojs.t -> __A) ->
                        fun (__A0_of_js : Ojs.t -> __A0) ->
                          fun (__A1_of_js : Ojs.t -> __A1) ->
                            fun (__A2_of_js : Ojs.t -> __A2) ->
                              fun (__A3_of_js : Ojs.t -> __A3) ->
                                fun (__R_of_js : Ojs.t -> __R) ->
                                  fun (x5094 : Ojs.t) -> x5094
        and t_to_js :
          'A 'A0 'A1 'A2 'A3 'R .
            ('A -> Ojs.t) ->
              ('A0 -> Ojs.t) ->
                ('A1 -> Ojs.t) ->
                  ('A2 -> Ojs.t) ->
                    ('A3 -> Ojs.t) ->
                      ('R -> Ojs.t) ->
                        ('A, 'A0, 'A1, 'A2, 'A3, 'R) t -> Ojs.t
          =
          fun (type __A) ->
            fun (type __A0) ->
              fun (type __A1) ->
                fun (type __A2) ->
                  fun (type __A3) ->
                    fun (type __R) ->
                      fun (__A_to_js : __A -> Ojs.t) ->
                        fun (__A0_to_js : __A0 -> Ojs.t) ->
                          fun (__A1_to_js : __A1 -> Ojs.t) ->
                            fun (__A2_to_js : __A2 -> Ojs.t) ->
                              fun (__A3_to_js : __A3 -> Ojs.t) ->
                                fun (__R_to_js : __R -> Ojs.t) ->
                                  fun (x5093 : Ojs.t) -> x5093
        let (create :
          ('A, 'A0, 'A1, 'A2, 'A3, 'R) t ->
            arg0:'A0 ->
              arg1:'A1 -> arg2:'A2 -> arg3:'A3 -> args:any list -> 'R)
          =
          fun (x5102 : ('A, 'A0, 'A1, 'A2, 'A3, 'R) t) ->
            fun ~arg0:(x5095 : 'A0) ->
              fun ~arg1:(x5096 : 'A1) ->
                fun ~arg2:(x5097 : 'A2) ->
                  fun ~arg3:(x5098 : 'A3) ->
                    fun ~args:(x5099 : any list) ->
                      Obj.magic
                        (Ojs.new_obj_arr
                           (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic
                              Obj.magic Obj.magic x5102)
                           (let x5100 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x5100 "push" [|(Obj.magic x5095)|]);
                            ignore
                              (Ojs.call x5100 "push" [|(Obj.magic x5096)|]);
                            ignore
                              (Ojs.call x5100 "push" [|(Obj.magic x5097)|]);
                            ignore
                              (Ojs.call x5100 "push" [|(Obj.magic x5098)|]);
                            List.iter
                              (fun (x5101 : any) ->
                                 ignore
                                   (Ojs.call x5100 "push"
                                      [|(any_to_js x5101)|])) x5099;
                            x5100))
        module Make(A:Ojs.T)(A0:Ojs.T)(A1:Ojs.T)(A2:Ojs.T)(A3:Ojs.T)(R:Ojs.T) =
          struct
            type ('A, 'A0, 'A1, 'A2, 'A3, 'R) parent =
              ('A, 'A0, 'A1, 'A2, 'A3, 'R) t
            let rec parent_of_js :
              'A 'A0 'A1 'A2 'A3 'R .
                (Ojs.t -> 'A) ->
                  (Ojs.t -> 'A0) ->
                    (Ojs.t -> 'A1) ->
                      (Ojs.t -> 'A2) ->
                        (Ojs.t -> 'A3) ->
                          (Ojs.t -> 'R) ->
                            Ojs.t -> ('A, 'A0, 'A1, 'A2, 'A3, 'R) parent
              =
              fun (type __A) ->
                fun (type __A0) ->
                  fun (type __A1) ->
                    fun (type __A2) ->
                      fun (type __A3) ->
                        fun (type __R) ->
                          fun (__A_of_js : Ojs.t -> __A) ->
                            fun (__A0_of_js : Ojs.t -> __A0) ->
                              fun (__A1_of_js : Ojs.t -> __A1) ->
                                fun (__A2_of_js : Ojs.t -> __A2) ->
                                  fun (__A3_of_js : Ojs.t -> __A3) ->
                                    fun (__R_of_js : Ojs.t -> __R) ->
                                      fun (x5116 : Ojs.t) ->
                                        t_of_js __A_of_js __A0_of_js
                                          __A1_of_js __A2_of_js __A3_of_js
                                          __R_of_js x5116
            and parent_to_js :
              'A 'A0 'A1 'A2 'A3 'R .
                ('A -> Ojs.t) ->
                  ('A0 -> Ojs.t) ->
                    ('A1 -> Ojs.t) ->
                      ('A2 -> Ojs.t) ->
                        ('A3 -> Ojs.t) ->
                          ('R -> Ojs.t) ->
                            ('A, 'A0, 'A1, 'A2, 'A3, 'R) parent -> Ojs.t
              =
              fun (type __A) ->
                fun (type __A0) ->
                  fun (type __A1) ->
                    fun (type __A2) ->
                      fun (type __A3) ->
                        fun (type __R) ->
                          fun (__A_to_js : __A -> Ojs.t) ->
                            fun (__A0_to_js : __A0 -> Ojs.t) ->
                              fun (__A1_to_js : __A1 -> Ojs.t) ->
                                fun (__A2_to_js : __A2 -> Ojs.t) ->
                                  fun (__A3_to_js : __A3 -> Ojs.t) ->
                                    fun (__R_to_js : __R -> Ojs.t) ->
                                      fun
                                        (x5109 :
                                          (__A, __A0, __A1, __A2, __A3, 
                                            __R) t)
                                        ->
                                        t_to_js __A_to_js __A0_to_js
                                          __A1_to_js __A2_to_js __A3_to_js
                                          __R_to_js x5109
            type t = (A.t, A0.t, A1.t, A2.t, A3.t, R.t) parent
            let rec t_of_js : Ojs.t -> t =
              fun (x5130 : Ojs.t) ->
                parent_of_js A.t_of_js A0.t_of_js A1.t_of_js A2.t_of_js
                  A3.t_of_js R.t_of_js x5130
            and t_to_js : t -> Ojs.t =
              fun (x5123 : (A.t, A0.t, A1.t, A2.t, A3.t, R.t) parent) ->
                parent_to_js A.t_to_js A0.t_to_js A1.t_to_js A2.t_to_js
                  A3.t_to_js R.t_to_js x5123
            let (create :
              t ->
                arg0:A0.t ->
                  arg1:A1.t -> arg2:A2.t -> arg3:A3.t -> args:any list -> R.t)
              =
              fun (x5144 : t) ->
                fun ~arg0:(x5137 : A0.t) ->
                  fun ~arg1:(x5138 : A1.t) ->
                    fun ~arg2:(x5139 : A2.t) ->
                      fun ~arg3:(x5140 : A3.t) ->
                        fun ~args:(x5141 : any list) ->
                          R.t_of_js
                            (Ojs.new_obj_arr (t_to_js x5144)
                               (let x5142 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                ignore
                                  (Ojs.call x5142 "push"
                                     [|(A0.t_to_js x5137)|]);
                                ignore
                                  (Ojs.call x5142 "push"
                                     [|(A1.t_to_js x5138)|]);
                                ignore
                                  (Ojs.call x5142 "push"
                                     [|(A2.t_to_js x5139)|]);
                                ignore
                                  (Ojs.call x5142 "push"
                                     [|(A3.t_to_js x5140)|]);
                                List.iter
                                  (fun (x5143 : any) ->
                                     ignore
                                       (Ojs.call x5142 "push"
                                          [|(any_to_js x5143)|])) x5141;
                                x5142))
          end
      end
    type t = [ `Function  | `Function  | `NewableFunction ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5146 : Ojs.t) -> t_of_js x5146
    and t_0_to_js : t_0 -> Ojs.t = fun (x5145 : t) -> t_to_js x5145
    type tags = [ `Function  | `Function  | `NewableFunction ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `NewableFunction ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x5149 : Ojs.t) -> intf_of_js __tags_of_js x5149
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x5147 : __tags intf) -> intf_to_js __tags_to_js x5147
    let (apply_ :
      'tags this -> this:'T AnonymousInterface43.t -> thisArg:'T -> unit) =
      fun (x5154 : 'tags this) ->
        fun ~this:(x5151 : 'T AnonymousInterface43.t) ->
          fun ~thisArg:(x5153 : 'T) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x5154) "apply"
                 [|(AnonymousInterface43.t_to_js Obj.magic x5151);(Obj.magic
                                                                    x5153)|])
    let (apply_' :
      'tags this ->
        this:('A, 'T) AnonymousInterface36.t -> thisArg:'T -> args:'A -> unit)
      =
      fun (x5161 : 'tags this) ->
        fun ~this:(x5156 : ('A, 'T) AnonymousInterface36.t) ->
          fun ~thisArg:(x5159 : 'T) ->
            fun ~args:(x5160 : 'A) ->
              ignore
                (Ojs.call (this_to_js Obj.magic x5161) "apply"
                   [|(AnonymousInterface36.t_to_js Obj.magic Obj.magic x5156);(
                     Obj.magic x5159);(Obj.magic x5160)|])
    let (call :
      'tags this ->
        this:('A, 'T) AnonymousInterface36.t ->
          thisArg:'T -> args:any list -> unit)
      =
      fun (x5170 : 'tags this) ->
        fun ~this:(x5163 : ('A, 'T) AnonymousInterface36.t) ->
          fun ~thisArg:(x5164 : 'T) ->
            fun ~args:(x5165 : any list) ->
              ignore
                (let x5172 = this_to_js Obj.magic x5170 in
                 Ojs.call (Ojs.get_prop_ascii x5172 "call") "apply"
                   [|x5172;((let x5166 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5166 "push"
                                  [|(AnonymousInterface36.t_to_js Obj.magic
                                       Obj.magic x5163)|]);
                             ignore
                               (Ojs.call x5166 "push" [|(Obj.magic x5164)|]);
                             List.iter
                               (fun (x5167 : any) ->
                                  ignore
                                    (Ojs.call x5166 "push"
                                       [|(any_to_js x5167)|])) x5165;
                             x5166))|])
    let (bind : 'tags this -> this:'T -> thisArg:any -> 'T) =
      fun (x5175 : 'tags this) ->
        fun ~this:(x5173 : 'T) ->
          fun ~thisArg:(x5174 : any) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x5175) "bind"
                 [|(Obj.magic x5173);(any_to_js x5174)|])
    let (bind' :
      'tags this ->
        this:('A, 'A0, 'R) AnonymousInterface31.t ->
          thisArg:any -> arg0:'A0 -> ('A, 'R) AnonymousInterface33.t)
      =
      fun (x5183 : 'tags this) ->
        fun ~this:(x5177 : ('A, 'A0, 'R) AnonymousInterface31.t) ->
          fun ~thisArg:(x5181 : any) ->
            fun ~arg0:(x5182 : 'A0) ->
              AnonymousInterface33.t_of_js Obj.magic Obj.magic
                (Ojs.call (this_to_js Obj.magic x5183) "bind"
                   [|(AnonymousInterface31.t_to_js Obj.magic Obj.magic
                        Obj.magic x5177);(any_to_js x5181);(Obj.magic x5182)|])
    let (bind'' :
      'tags this ->
        this:('A, 'A0, 'A1, 'R) AnonymousInterface29.t ->
          thisArg:any ->
            arg0:'A0 -> arg1:'A1 -> ('A, 'R) AnonymousInterface33.t)
      =
      fun (x5195 : 'tags this) ->
        fun ~this:(x5187 : ('A, 'A0, 'A1, 'R) AnonymousInterface29.t) ->
          fun ~thisArg:(x5192 : any) ->
            fun ~arg0:(x5193 : 'A0) ->
              fun ~arg1:(x5194 : 'A1) ->
                AnonymousInterface33.t_of_js Obj.magic Obj.magic
                  (Ojs.call (this_to_js Obj.magic x5195) "bind"
                     [|(AnonymousInterface29.t_to_js Obj.magic Obj.magic
                          Obj.magic Obj.magic x5187);(any_to_js x5192);(
                       Obj.magic x5193);(Obj.magic x5194)|])
    let (bind''' :
      'tags this ->
        this:('A, 'A0, 'A1, 'A2, 'R) AnonymousInterface27.t ->
          thisArg:any ->
            arg0:'A0 ->
              arg1:'A1 -> arg2:'A2 -> ('A, 'R) AnonymousInterface33.t)
      =
      fun (x5209 : 'tags this) ->
        fun ~this:(x5199 : ('A, 'A0, 'A1, 'A2, 'R) AnonymousInterface27.t) ->
          fun ~thisArg:(x5205 : any) ->
            fun ~arg0:(x5206 : 'A0) ->
              fun ~arg1:(x5207 : 'A1) ->
                fun ~arg2:(x5208 : 'A2) ->
                  AnonymousInterface33.t_of_js Obj.magic Obj.magic
                    (Ojs.call (this_to_js Obj.magic x5209) "bind"
                       [|(AnonymousInterface27.t_to_js Obj.magic Obj.magic
                            Obj.magic Obj.magic Obj.magic x5199);(any_to_js
                                                                    x5205);(
                         Obj.magic x5206);(Obj.magic x5207);(Obj.magic x5208)|])
    let (bind'''' :
      'tags this ->
        this:('A, 'A0, 'A1, 'A2, 'A3, 'R) AnonymousInterface25.t ->
          thisArg:any ->
            arg0:'A0 ->
              arg1:'A1 ->
                arg2:'A2 -> arg3:'A3 -> ('A, 'R) AnonymousInterface33.t)
      =
      fun (x5225 : 'tags this) ->
        fun
          ~this:(x5213 : ('A, 'A0, 'A1, 'A2, 'A3, 'R) AnonymousInterface25.t)
          ->
          fun ~thisArg:(x5220 : any) ->
            fun ~arg0:(x5221 : 'A0) ->
              fun ~arg1:(x5222 : 'A1) ->
                fun ~arg2:(x5223 : 'A2) ->
                  fun ~arg3:(x5224 : 'A3) ->
                    AnonymousInterface33.t_of_js Obj.magic Obj.magic
                      (Ojs.call (this_to_js Obj.magic x5225) "bind"
                         [|(AnonymousInterface25.t_to_js Obj.magic Obj.magic
                              Obj.magic Obj.magic Obj.magic Obj.magic x5213);(
                           any_to_js x5220);(Obj.magic x5221);(Obj.magic
                                                                 x5222);(
                           Obj.magic x5223);(Obj.magic x5224)|])
    let (bind''''' :
      'tags this ->
        this:('AX, 'R) AnonymousInterface39.t ->
          thisArg:any -> args:'AX list -> ('AX, 'R) AnonymousInterface39.t)
      =
      fun (x5236 : 'tags this) ->
        fun ~this:(x5229 : ('AX, 'R) AnonymousInterface39.t) ->
          fun ~thisArg:(x5230 : any) ->
            fun ~args:(x5231 : 'AX list) ->
              AnonymousInterface39.t_of_js Obj.magic Obj.magic
                (let x5238 = this_to_js Obj.magic x5236 in
                 Ojs.call (Ojs.get_prop_ascii x5238 "bind") "apply"
                   [|x5238;((let x5232 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5232 "push"
                                  [|(AnonymousInterface39.t_to_js Obj.magic
                                       Obj.magic x5229)|]);
                             ignore
                               (Ojs.call x5232 "push" [|(any_to_js x5230)|]);
                             List.iter
                               (fun (x5233 : 'AX) ->
                                  ignore
                                    (Ojs.call x5232 "push"
                                       [|(Obj.magic x5233)|])) x5231;
                             x5232))|])
    let cast_from = Obj.magic
  end
module TypedPropertyDescriptor =
  struct
    type 'T t = [ `TypedPropertyDescriptor of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x5243 : Ojs.t) -> t_of_js __T_of_js x5243
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x5241 : __T t) -> t_to_js __T_to_js x5241
    type 'T tags = [ `TypedPropertyDescriptor of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `TypedPropertyDescriptor of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x5247 : Ojs.t) -> intf_of_js __tags_of_js x5247
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x5245 : __tags intf) -> intf_to_js __tags_to_js x5245
    let (get_enumerable : ('tags, 'T) this -> bool) =
      fun (x5249 : ('tags, 'T) this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x5249)
             "enumerable")
    let (set_enumerable : ('tags, 'T) this -> bool -> unit) =
      fun (x5252 : ('tags, 'T) this) ->
        fun (x5253 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x5252)
            "enumerable" (Ojs.bool_to_js x5253)
    let (get_configurable : ('tags, 'T) this -> bool) =
      fun (x5256 : ('tags, 'T) this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x5256)
             "configurable")
    let (set_configurable : ('tags, 'T) this -> bool -> unit) =
      fun (x5259 : ('tags, 'T) this) ->
        fun (x5260 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x5259)
            "configurable" (Ojs.bool_to_js x5260)
    let (get_writable : ('tags, 'T) this -> bool) =
      fun (x5263 : ('tags, 'T) this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x5263)
             "writable")
    let (set_writable : ('tags, 'T) this -> bool -> unit) =
      fun (x5266 : ('tags, 'T) this) ->
        fun (x5267 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x5266)
            "writable" (Ojs.bool_to_js x5267)
    let (get_value : ('tags, 'T) this -> 'T) =
      fun (x5270 : ('tags, 'T) this) ->
        Obj.magic
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x5270) "value")
    let (set_value : ('tags, 'T) this -> 'T -> unit) =
      fun (x5273 : ('tags, 'T) this) ->
        fun (x5274 : 'T) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x5273) "value"
            (Obj.magic x5274)
    let (get_ : ('tags, 'T) this -> 'T) =
      fun (x5277 : ('tags, 'T) this) ->
        Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x5277) "get" [||])
    let (set_ : ('tags, 'T) this -> value:'T -> unit) =
      fun (x5281 : ('tags, 'T) this) ->
        fun ~value:(x5280 : 'T) ->
          ignore
            (Ojs.call (this_to_js Obj.magic Obj.magic x5281) "set"
               [|(Obj.magic x5280)|])
    let (create :
      enumerable:bool ->
        configurable:bool ->
          writable:bool ->
            value:'T ->
              get_:(unit -> 'T) -> set_:('T -> unit) -> unit -> 'T t)
      =
      fun ~enumerable:(x5284 : bool) ->
        fun ~configurable:(x5285 : bool) ->
          fun ~writable:(x5286 : bool) ->
            fun ~value:(x5287 : 'T) ->
              fun ~get_:(x5288 : unit -> 'T) ->
                fun ~set_:(x5289 : 'T -> unit) ->
                  fun () ->
                    let x5290 = Ojs.empty_obj () in
                    Ojs.set_prop_ascii x5290 "enumerable"
                      (Ojs.bool_to_js x5284);
                    Ojs.set_prop_ascii x5290 "configurable"
                      (Ojs.bool_to_js x5285);
                    Ojs.set_prop_ascii x5290 "writable"
                      (Ojs.bool_to_js x5286);
                    Ojs.set_prop_ascii x5290 "value" (Obj.magic x5287);
                    Ojs.set_prop_ascii x5290 "get"
                      (Ojs.fun_to_js 1 (fun _ -> Obj.magic (x5288 ())));
                    Ojs.set_prop_ascii x5290 "set"
                      (Ojs.fun_to_js 1
                         (fun (x5292 : Ojs.t) -> x5289 (Obj.magic x5292)));
                    t_of_js Obj.magic x5290
    let cast_from = Obj.magic
  end
module MethodDecorator =
  struct
    type t = [ `MethodDecorator ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5294 : Ojs.t) -> t_of_js x5294
    and t_0_to_js : t_0 -> Ojs.t = fun (x5293 : t) -> t_to_js x5293
    type tags = [ `MethodDecorator ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `MethodDecorator ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x5297 : Ojs.t) -> intf_of_js __tags_of_js x5297
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x5295 : __tags intf) -> intf_to_js __tags_to_js x5295
    let (apply :
      'tags this ->
        target:Object.t ->
          propertyKey:[ `U1 of string  | `U2 of symbol ] ->
            descriptor:'T TypedPropertyDescriptor.t ->
              (unit, 'T TypedPropertyDescriptor.t) union2)
      =
      fun (x5305 : 'tags this) ->
        fun ~target:(x5299 : Object.t) ->
          fun ~propertyKey:(x5300 : [ `U1 of string  | `U2 of symbol ]) ->
            fun ~descriptor:(x5303 : 'T TypedPropertyDescriptor.t) ->
              union2_of_js Ojs.unit_of_js
                (fun (x5308 : Ojs.t) ->
                   TypedPropertyDescriptor.t_of_js Obj.magic x5308)
                (Ojs.apply (this_to_js Obj.magic x5305)
                   [|(Object.t_to_js x5299);((match x5300 with
                                              | `U1 x5301 ->
                                                  Ojs.string_to_js x5301
                                              | `U2 x5302 ->
                                                  symbol_to_js x5302));(
                     TypedPropertyDescriptor.t_to_js Obj.magic x5303)|])
    let cast_from = Obj.magic
  end
module Math =
  struct
    let (clz32 : float -> float) =
      fun (x5310 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "clz32"
             [|(Ojs.float_to_js x5310)|])
    let (imul : x:float -> y:float -> float) =
      fun ~x:(x5311 : float) ->
        fun ~y:(x5312 : float) ->
          Ojs.float_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "imul"
               [|(Ojs.float_to_js x5311);(Ojs.float_to_js x5312)|])
    let (sign : float -> float) =
      fun (x5313 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "sign"
             [|(Ojs.float_to_js x5313)|])
    let (log10 : float -> float) =
      fun (x5314 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "log10"
             [|(Ojs.float_to_js x5314)|])
    let (log2 : float -> float) =
      fun (x5315 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "log2"
             [|(Ojs.float_to_js x5315)|])
    let (log1p : float -> float) =
      fun (x5316 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "log1p"
             [|(Ojs.float_to_js x5316)|])
    let (expm1 : float -> float) =
      fun (x5317 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "expm1"
             [|(Ojs.float_to_js x5317)|])
    let (cosh : float -> float) =
      fun (x5318 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "cosh"
             [|(Ojs.float_to_js x5318)|])
    let (sinh : float -> float) =
      fun (x5319 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "sinh"
             [|(Ojs.float_to_js x5319)|])
    let (tanh : float -> float) =
      fun (x5320 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "tanh"
             [|(Ojs.float_to_js x5320)|])
    let (acosh : float -> float) =
      fun (x5321 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "acosh"
             [|(Ojs.float_to_js x5321)|])
    let (asinh : float -> float) =
      fun (x5322 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "asinh"
             [|(Ojs.float_to_js x5322)|])
    let (atanh : float -> float) =
      fun (x5323 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "atanh"
             [|(Ojs.float_to_js x5323)|])
    let (hypot : float list -> float) =
      fun (x5324 : float list) ->
        Ojs.float_of_js
          (let x5327 = Ojs.get_prop_ascii Ojs.global "Math" in
           Ojs.call (Ojs.get_prop_ascii x5327 "hypot") "apply"
             [|x5327;((let x5325 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x5326 : float) ->
                            ignore
                              (Ojs.call x5325 "push"
                                 [|(Ojs.float_to_js x5326)|])) x5324;
                       x5325))|])
    let (trunc : float -> float) =
      fun (x5328 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "trunc"
             [|(Ojs.float_to_js x5328)|])
    let (fround : float -> float) =
      fun (x5329 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "fround"
             [|(Ojs.float_to_js x5329)|])
    let (cbrt : float -> float) =
      fun (x5330 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "cbrt"
             [|(Ojs.float_to_js x5330)|])
    let (e : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "E")
    let (ln10 : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "LN10")
    let (ln2 : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "LN2")
    let (log2e : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "LOG2E")
    let (log10e : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "LOG10E")
    let (pi : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "PI")
    let (sqrt1_2 : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math")
             "SQRT1_2")
    let (sqrt2 : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "SQRT2")
    let (abs : float -> float) =
      fun (x5331 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "abs"
             [|(Ojs.float_to_js x5331)|])
    let (acos : float -> float) =
      fun (x5332 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "acos"
             [|(Ojs.float_to_js x5332)|])
    let (asin : float -> float) =
      fun (x5333 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "asin"
             [|(Ojs.float_to_js x5333)|])
    let (atan : float -> float) =
      fun (x5334 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "atan"
             [|(Ojs.float_to_js x5334)|])
    let (atan2 : y:float -> x:float -> float) =
      fun ~y:(x5335 : float) ->
        fun ~x:(x5336 : float) ->
          Ojs.float_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "atan2"
               [|(Ojs.float_to_js x5335);(Ojs.float_to_js x5336)|])
    let (ceil : float -> float) =
      fun (x5337 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "ceil"
             [|(Ojs.float_to_js x5337)|])
    let (cos : float -> float) =
      fun (x5338 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "cos"
             [|(Ojs.float_to_js x5338)|])
    let (exp : float -> float) =
      fun (x5339 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "exp"
             [|(Ojs.float_to_js x5339)|])
    let (floor : float -> float) =
      fun (x5340 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "floor"
             [|(Ojs.float_to_js x5340)|])
    let (log : float -> float) =
      fun (x5341 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "log"
             [|(Ojs.float_to_js x5341)|])
    let (max : float list -> float) =
      fun (x5342 : float list) ->
        Ojs.float_of_js
          (let x5345 = Ojs.get_prop_ascii Ojs.global "Math" in
           Ojs.call (Ojs.get_prop_ascii x5345 "max") "apply"
             [|x5345;((let x5343 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x5344 : float) ->
                            ignore
                              (Ojs.call x5343 "push"
                                 [|(Ojs.float_to_js x5344)|])) x5342;
                       x5343))|])
    let (min : float list -> float) =
      fun (x5346 : float list) ->
        Ojs.float_of_js
          (let x5349 = Ojs.get_prop_ascii Ojs.global "Math" in
           Ojs.call (Ojs.get_prop_ascii x5349 "min") "apply"
             [|x5349;((let x5347 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x5348 : float) ->
                            ignore
                              (Ojs.call x5347 "push"
                                 [|(Ojs.float_to_js x5348)|])) x5346;
                       x5347))|])
    let (pow : x:float -> y:float -> float) =
      fun ~x:(x5350 : float) ->
        fun ~y:(x5351 : float) ->
          Ojs.float_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "pow"
               [|(Ojs.float_to_js x5350);(Ojs.float_to_js x5351)|])
    let (random : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "random" [||])
    let (round : float -> float) =
      fun (x5352 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "round"
             [|(Ojs.float_to_js x5352)|])
    let (sin : float -> float) =
      fun (x5353 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "sin"
             [|(Ojs.float_to_js x5353)|])
    let (sqrt : float -> float) =
      fun (x5354 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "sqrt"
             [|(Ojs.float_to_js x5354)|])
    let (tan : float -> float) =
      fun (x5355 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "tan"
             [|(Ojs.float_to_js x5355)|])
  end
module Map =
  struct
    type ('K, 'V) t =
      [ `Map of ('K * 'V)  | ('K * 'V) IterableIterator.tags_1] intf
    let rec t_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) t =
      fun _K -> fun _V -> Obj.magic
    and t_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) t -> Ojs.t =
      fun _K -> fun _V -> Obj.magic
    type ('K, 'V) t_2 = ('K, 'V) t
    let rec t_2_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) t_2 =
      fun (type __K) ->
        fun (type __V) ->
          fun (__K_of_js : Ojs.t -> __K) ->
            fun (__V_of_js : Ojs.t -> __V) ->
              fun (x5359 : Ojs.t) -> t_of_js __K_of_js __V_of_js x5359
    and t_2_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) t_2 -> Ojs.t =
      fun (type __K) ->
        fun (type __V) ->
          fun (__K_to_js : __K -> Ojs.t) ->
            fun (__V_to_js : __V -> Ojs.t) ->
              fun (x5356 : (__K, __V) t) -> t_to_js __K_to_js __V_to_js x5356
    type ('K, 'V) tags =
      [ `Map of ('K * 'V)  | ('K * 'V) IterableIterator.tags_1]
    type ('K, 'V) tags_2 = ('K, 'V) tags
    type ('tags, 'K, 'V) this =
      'tags intf constraint 'tags = [> `Map of ('K * 'V) ]
    let rec this_of_js :
      'tags 'K 'V .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('tags, 'K, 'V) this
      =
      fun (type __tags) ->
        fun (type __K) ->
          fun (type __V) ->
            fun (__tags_of_js : Ojs.t -> __tags) ->
              fun (__K_of_js : Ojs.t -> __K) ->
                fun (__V_of_js : Ojs.t -> __V) ->
                  fun (x5364 : Ojs.t) -> intf_of_js __tags_of_js x5364
    and this_to_js :
      'tags 'K 'V .
        ('tags -> Ojs.t) ->
          ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('tags, 'K, 'V) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __K) ->
          fun (type __V) ->
            fun (__tags_to_js : __tags -> Ojs.t) ->
              fun (__K_to_js : __K -> Ojs.t) ->
                fun (__V_to_js : __V -> Ojs.t) ->
                  fun (x5362 : __tags intf) -> intf_to_js __tags_to_js x5362
    let (entries : ('tags, 'K, 'V) this -> ('K * 'V) IterableIterator.t) =
      fun (x5366 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js
          (fun (x5370 : Ojs.t) ->
             let x5371 = x5370 in
             ((Obj.magic (Ojs.array_get x5371 0)),
               (Obj.magic (Ojs.array_get x5371 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x5366)
             "entries" [||])
    let (keys : ('tags, 'K, 'V) this -> 'K IterableIterator.t) =
      fun (x5372 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x5372) "keys"
             [||])
    let (values : ('tags, 'K, 'V) this -> 'V IterableIterator.t) =
      fun (x5377 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x5377) "values"
             [||])
    let (clear : ('tags, 'K, 'V) this -> unit) =
      fun (x5382 : ('tags, 'K, 'V) this) ->
        ignore
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x5382) "clear"
             [||])
    let (delete : ('tags, 'K, 'V) this -> key:'K -> bool) =
      fun (x5387 : ('tags, 'K, 'V) this) ->
        fun ~key:(x5386 : 'K) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x5387)
               "delete" [|(Obj.magic x5386)|])
    let (forEach :
      ('tags, 'K, 'V) this ->
        callbackfn:(value:'V -> key:'K -> map:('K, 'V) t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x5400 : ('tags, 'K, 'V) this) ->
        fun
          ~callbackfn:(x5391 : value:'V -> key:'K -> map:('K, 'V) t -> unit)
          ->
          fun ?thisArg:(x5392 : any option) ->
            fun () ->
              ignore
                (let x5404 = this_to_js Obj.magic Obj.magic Obj.magic x5400 in
                 Ojs.call (Ojs.get_prop_ascii x5404 "forEach") "apply"
                   [|x5404;((let x5393 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5393 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5395 : Ojs.t) ->
                                          fun (x5396 : Ojs.t) ->
                                            fun (x5397 : Ojs.t) ->
                                              x5391 ~value:(Obj.magic x5395)
                                                ~key:(Obj.magic x5396)
                                                ~map:(t_of_js Obj.magic
                                                        Obj.magic x5397)))|]);
                             (match x5392 with
                              | Some x5394 ->
                                  ignore
                                    (Ojs.call x5393 "push"
                                       [|(any_to_js x5394)|])
                              | None -> ());
                             x5393))|])
    let (get_ : ('tags, 'K, 'V) this -> key:'K -> 'V option) =
      fun (x5406 : ('tags, 'K, 'V) this) ->
        fun ~key:(x5405 : 'K) ->
          Ojs.option_of_js Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x5406) "get"
               [|(Obj.magic x5405)|])
    let (has : ('tags, 'K, 'V) this -> key:'K -> bool) =
      fun (x5412 : ('tags, 'K, 'V) this) ->
        fun ~key:(x5411 : 'K) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x5412) "has"
               [|(Obj.magic x5411)|])
    let (set_ :
      ('tags, 'K, 'V) this -> key:'K -> value:'V -> ('tags, 'K, 'V) this) =
      fun (x5418 : ('tags, 'K, 'V) this) ->
        fun ~key:(x5416 : 'K) ->
          fun ~value:(x5417 : 'V) ->
            this_of_js Obj.magic Obj.magic Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x5418)
                 "set" [|(Obj.magic x5416);(Obj.magic x5417)|])
    let (get_size : ('tags, 'K, 'V) this -> float) =
      fun (x5425 : ('tags, 'K, 'V) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii
             (this_to_js Obj.magic Obj.magic Obj.magic x5425) "size")
    let (create : unit -> (any, any) t) =
      fun () ->
        t_of_js any_of_js any_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Map") [||])
    let (create' :
      ?iterable:('K * 'V) Iterable.t option -> unit -> ('K, 'V) t) =
      fun ?iterable:(x5431 : ('K * 'V) Iterable.t option option) ->
        fun () ->
          t_of_js Obj.magic Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Map")
               (let x5432 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x5431 with
                 | Some x5433 ->
                     ignore
                       (Ojs.call x5432 "push"
                          [|(Ojs.option_to_js
                               (fun (x5434 : ('K * 'V) Iterable.t) ->
                                  Iterable.t_to_js
                                    (fun (x5435 : ('K * 'V)) ->
                                       let (x5436, x5437) = x5435 in
                                       let x5438 = Ojs.array_make 2 in
                                       Ojs.array_set x5438 0
                                         (Obj.magic x5436);
                                       Ojs.array_set x5438 1
                                         (Obj.magic x5437);
                                       x5438) x5434) x5433)|])
                 | None -> ());
                x5432))
    let (create'' : unit -> (any, any) t) =
      fun () ->
        t_of_js any_of_js any_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Map") [||])
    let (create''' : ?entries:('K * 'V) list option -> unit -> ('K, 'V) t) =
      fun ?entries:(x5443 : ('K * 'V) list option option) ->
        fun () ->
          t_of_js Obj.magic Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Map")
               (let x5444 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x5443 with
                 | Some x5445 ->
                     ignore
                       (Ojs.call x5444 "push"
                          [|(Ojs.option_to_js
                               (fun (x5446 : ('K * 'V) list) ->
                                  Ojs.list_to_js
                                    (fun (x5447 : ('K * 'V)) ->
                                       let (x5448, x5449) = x5447 in
                                       let x5450 = Ojs.array_make 2 in
                                       Ojs.array_set x5450 0
                                         (Obj.magic x5448);
                                       Ojs.array_set x5450 1
                                         (Obj.magic x5449);
                                       x5450) x5446) x5445)|])
                 | None -> ());
                x5444))
    let (prototype : unit -> (any, any) t) =
      fun () ->
        t_of_js any_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Map")
             "prototype")
    let cast_from = Obj.magic
  end
module Lowercase =
  struct
    type 'S t = Ojs.t
    let rec t_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t =
      fun (type __S) ->
        fun (__S_of_js : Ojs.t -> __S) -> fun (x5456 : Ojs.t) -> x5456
    and t_to_js : 'S . ('S -> Ojs.t) -> 'S t -> Ojs.t =
      fun (type __S) ->
        fun (__S_to_js : __S -> Ojs.t) -> fun (x5455 : Ojs.t) -> x5455
    type 'S t_1 = 'S t
    let rec t_1_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t_1 =
      fun (type __S) ->
        fun (__S_of_js : Ojs.t -> __S) ->
          fun (x5459 : Ojs.t) -> t_of_js __S_of_js x5459
    and t_1_to_js : 'S . ('S -> Ojs.t) -> 'S t_1 -> Ojs.t =
      fun (type __S) ->
        fun (__S_to_js : __S -> Ojs.t) ->
          fun (x5457 : __S t) -> t_to_js __S_to_js x5457
  end
module JSON =
  struct
    let (parse :
      text:string ->
        ?reviver:(this:any -> key:string -> value:any -> any) -> unit -> any)
      =
      fun ~text:(x5461 : string) ->
        fun
          ?reviver:(x5462 :
                     (this:any -> key:string -> value:any -> any) option)
          ->
          fun () ->
            any_of_js
              (let x5468 = Ojs.get_prop_ascii Ojs.global "JSON" in
               Ojs.call (Ojs.get_prop_ascii x5468 "parse") "apply"
                 [|x5468;((let x5463 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x5463 "push"
                                [|(Ojs.string_to_js x5461)|]);
                           (match x5462 with
                            | Some x5464 ->
                                ignore
                                  (Ojs.call x5463 "push"
                                     [|(Ojs.fun_to_js 3
                                          (fun (x5465 : Ojs.t) ->
                                             fun (x5466 : Ojs.t) ->
                                               fun (x5467 : Ojs.t) ->
                                                 any_to_js
                                                   (x5464
                                                      ~this:(any_of_js x5465)
                                                      ~key:(Ojs.string_of_js
                                                              x5466)
                                                      ~value:(any_of_js x5467))))|])
                            | None -> ());
                           x5463))|])
    let (stringify :
      value:any ->
        ?replacer:(this:any -> key:string -> value:any -> any) ->
          ?space:[ `U1 of string  | `U2 of float ] -> unit -> string)
      =
      fun ~value:(x5469 : any) ->
        fun
          ?replacer:(x5470 :
                      (this:any -> key:string -> value:any -> any) option)
          ->
          fun ?space:(x5471 : [ `U1 of string  | `U2 of float ] option) ->
            fun () ->
              Ojs.string_of_js
                (let x5480 = Ojs.get_prop_ascii Ojs.global "JSON" in
                 Ojs.call (Ojs.get_prop_ascii x5480 "stringify") "apply"
                   [|x5480;((let x5472 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5472 "push" [|(any_to_js x5469)|]);
                             (match x5470 with
                              | Some x5476 ->
                                  ignore
                                    (Ojs.call x5472 "push"
                                       [|(Ojs.fun_to_js 3
                                            (fun (x5477 : Ojs.t) ->
                                               fun (x5478 : Ojs.t) ->
                                                 fun (x5479 : Ojs.t) ->
                                                   any_to_js
                                                     (x5476
                                                        ~this:(any_of_js
                                                                 x5477)
                                                        ~key:(Ojs.string_of_js
                                                                x5478)
                                                        ~value:(any_of_js
                                                                  x5479))))|])
                              | None -> ());
                             (match x5471 with
                              | Some x5473 ->
                                  ignore
                                    (Ojs.call x5472 "push"
                                       [|((match x5473 with
                                           | `U1 x5474 ->
                                               Ojs.string_to_js x5474
                                           | `U2 x5475 ->
                                               Ojs.float_to_js x5475))|])
                              | None -> ());
                             x5472))|])
    let (stringify' :
      value:any ->
        ?replacer:[ `U1 of float  | `U2 of string ] list option ->
          ?space:[ `U1 of string  | `U2 of float ] -> unit -> string)
      =
      fun ~value:(x5481 : any) ->
        fun
          ?replacer:(x5482 :
                      [ `U1 of float  | `U2 of string ] list option option)
          ->
          fun ?space:(x5483 : [ `U1 of string  | `U2 of float ] option) ->
            fun () ->
              Ojs.string_of_js
                (let x5493 = Ojs.get_prop_ascii Ojs.global "JSON" in
                 Ojs.call (Ojs.get_prop_ascii x5493 "stringify") "apply"
                   [|x5493;((let x5484 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5484 "push" [|(any_to_js x5481)|]);
                             (match x5482 with
                              | Some x5488 ->
                                  ignore
                                    (Ojs.call x5484 "push"
                                       [|(Ojs.option_to_js
                                            (fun
                                               (x5489 :
                                                 [ `U1 of float 
                                                 | `U2 of string ] list)
                                               ->
                                               Ojs.list_to_js
                                                 (fun
                                                    (x5490 :
                                                      [ `U1 of float 
                                                      | `U2 of string ])
                                                    ->
                                                    match x5490 with
                                                    | `U1 x5491 ->
                                                        Ojs.float_to_js x5491
                                                    | `U2 x5492 ->
                                                        Ojs.string_to_js
                                                          x5492) x5489) x5488)|])
                              | None -> ());
                             (match x5483 with
                              | Some x5485 ->
                                  ignore
                                    (Ojs.call x5484 "push"
                                       [|((match x5485 with
                                           | `U1 x5486 ->
                                               Ojs.string_to_js x5486
                                           | `U2 x5487 ->
                                               Ojs.float_to_js x5487))|])
                              | None -> ());
                             x5484))|])
  end
module InstanceType =
  struct
    module AnonymousInterface8 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x5495 : Ojs.t) -> x5495
        and t_to_js : t -> Ojs.t = fun (x5494 : Ojs.t) -> x5494
        let (create : t -> args:any list -> any) =
          fun (x5499 : t) ->
            fun ~args:(x5496 : any list) ->
              any_of_js
                (Ojs.new_obj_arr (t_to_js x5499)
                   (let x5497 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    List.iter
                      (fun (x5498 : any) ->
                         ignore (Ojs.call x5497 "push" [|(any_to_js x5498)|]))
                      x5496;
                    x5497))
      end
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x5501 : Ojs.t) -> any_of_js x5501
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x5500 : any) -> any_to_js x5500
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x5504 : Ojs.t) -> t_of_js __T_of_js x5504
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x5502 : __T t) -> t_to_js __T_to_js x5502
  end
module ImportMeta =
  struct
    type t = [ `ImportMeta ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5507 : Ojs.t) -> t_of_js x5507
    and t_0_to_js : t_0 -> Ojs.t = fun (x5506 : t) -> t_to_js x5506
    type tags = [ `ImportMeta ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ImportMeta ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x5510 : Ojs.t) -> intf_of_js __tags_of_js x5510
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x5508 : __tags intf) -> intf_to_js __tags_to_js x5508
    let cast_from = Obj.magic
  end
module ImportAssertions =
  struct
    type t = [ `ImportAssertions ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5513 : Ojs.t) -> t_of_js x5513
    and t_0_to_js : t_0 -> Ojs.t = fun (x5512 : t) -> t_to_js x5512
    type tags = [ `ImportAssertions ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ImportAssertions ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x5516 : Ojs.t) -> intf_of_js __tags_of_js x5516
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x5514 : __tags intf) -> intf_to_js __tags_to_js x5514
    let (get : 'tags this -> string -> string) =
      fun (x5518 : 'tags this) ->
        fun (x5520 : string) ->
          Ojs.string_of_js
            (Ojs.get_prop (this_to_js Obj.magic x5518)
               (Ojs.string_to_js x5520))
    let (set : 'tags this -> string -> string -> unit) =
      fun (x5521 : 'tags this) ->
        fun (x5523 : string) ->
          fun (x5524 : string) ->
            Ojs.set_prop (this_to_js Obj.magic x5521)
              (Ojs.string_to_js x5523) (Ojs.string_to_js x5524)
    let cast_from = Obj.magic
  end
module ImportCallOptions =
  struct
    type t = [ `ImportCallOptions ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5526 : Ojs.t) -> t_of_js x5526
    and t_0_to_js : t_0 -> Ojs.t = fun (x5525 : t) -> t_to_js x5525
    type tags = [ `ImportCallOptions ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ImportCallOptions ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x5529 : Ojs.t) -> intf_of_js __tags_of_js x5529
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x5527 : __tags intf) -> intf_to_js __tags_to_js x5527
    let (get_assert : 'tags this -> ImportAssertions.t) =
      fun (x5531 : 'tags this) ->
        ImportAssertions.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5531) "assert")
    let (set_assert : 'tags this -> ImportAssertions.t -> unit) =
      fun (x5533 : 'tags this) ->
        fun (x5534 : ImportAssertions.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5533) "assert"
            (ImportAssertions.t_to_js x5534)
    let (create : assert_:ImportAssertions.t -> unit -> t) =
      fun ~assert_:(x5536 : ImportAssertions.t) ->
        fun () ->
          let x5537 = Ojs.empty_obj () in
          Ojs.set_prop_ascii x5537 "assert" (ImportAssertions.t_to_js x5536);
          t_of_js x5537
    let cast_from = Obj.magic
  end
module IArguments =
  struct
    type t =
      [ `IArguments  | any ArrayLike.tags_1 | any IterableIterator.tags_1]
        intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5539 : Ojs.t) -> t_of_js x5539
    and t_0_to_js : t_0 -> Ojs.t = fun (x5538 : t) -> t_to_js x5538
    type tags =
      [ `IArguments  | any ArrayLike.tags_1 | any IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `IArguments ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x5542 : Ojs.t) -> intf_of_js __tags_of_js x5542
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x5540 : __tags intf) -> intf_to_js __tags_to_js x5540
    let (get : 'tags this -> float -> any) =
      fun (x5544 : 'tags this) ->
        fun (x5546 : float) ->
          any_of_js
            (Ojs.get_prop (this_to_js Obj.magic x5544)
               (Ojs.float_to_js x5546))
    let (set : 'tags this -> float -> any -> unit) =
      fun (x5547 : 'tags this) ->
        fun (x5549 : float) ->
          fun (x5550 : any) ->
            Ojs.set_prop (this_to_js Obj.magic x5547) (Ojs.float_to_js x5549)
              (any_to_js x5550)
    let (get_length : 'tags this -> float) =
      fun (x5551 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5551) "length")
    let (set_length : 'tags this -> float -> unit) =
      fun (x5553 : 'tags this) ->
        fun (x5554 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5553) "length"
            (Ojs.float_to_js x5554)
    let (get_callee : 'tags this -> Function.t) =
      fun (x5556 : 'tags this) ->
        Function.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5556) "callee")
    let (set_callee : 'tags this -> Function.t -> unit) =
      fun (x5558 : 'tags this) ->
        fun (x5559 : Function.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5558) "callee"
            (Function.t_to_js x5559)
    let cast_from = Obj.magic
  end
module Generator =
  struct
    type ('T, 'TReturn, 'TNext) t =
      [ `Generator of ('T * 'TReturn * 'TNext) 
      | `Iterator of ('T * 'TReturn * 'TNext) ] intf
    let rec t_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    and t_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t -> Ojs.t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    type ('T, 'TReturn, 'TNext) t_3 = ('T, 'TReturn, 'TNext) t
    let rec t_3_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t_3
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
                fun (__TNext_of_js : Ojs.t -> __TNext) ->
                  fun (x5565 : Ojs.t) ->
                    t_of_js __T_of_js __TReturn_of_js __TNext_of_js x5565
    and t_3_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t_3 -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
                fun (__TNext_to_js : __TNext -> Ojs.t) ->
                  fun (x5561 : (__T, __TReturn, __TNext) t) ->
                    t_to_js __T_to_js __TReturn_to_js __TNext_to_js x5561
    type ('T, 'TReturn) t_2 = ('T, 'TReturn, unknown) t
    let rec t_2_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t_2
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
              fun (x5573 : Ojs.t) ->
                t_of_js __T_of_js __TReturn_of_js unknown_of_js x5573
    and t_2_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t_2 -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
              fun (x5569 : (__T, __TReturn, unknown) t) ->
                t_to_js __T_to_js __TReturn_to_js unknown_to_js x5569
    type 'T t_1 = ('T, any, unknown) t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x5581 : Ojs.t) ->
            t_of_js __T_of_js any_of_js unknown_of_js x5581
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x5577 : (__T, any, unknown) t) ->
            t_to_js __T_to_js any_to_js unknown_to_js x5577
    type t_0 = (unknown, any, unknown) t
    let rec t_0_of_js : Ojs.t -> t_0 =
      fun (x5589 : Ojs.t) ->
        t_of_js unknown_of_js any_of_js unknown_of_js x5589
    and t_0_to_js : t_0 -> Ojs.t =
      fun (x5585 : (unknown, any, unknown) t) ->
        t_to_js unknown_to_js any_to_js unknown_to_js x5585
    type ('T, 'TReturn, 'TNext) tags =
      [ `Generator of ('T * 'TReturn * 'TNext) 
      | `Iterator of ('T * 'TReturn * 'TNext) ]
    type ('T, 'TReturn, 'TNext) tags_3 = ('T, 'TReturn, 'TNext) tags
    type ('T, 'TReturn) tags_2 = ('T, 'TReturn, unknown) tags
    type 'T tags_1 = ('T, any, unknown) tags
    type tags_0 = (unknown, any, unknown) tags
    type ('tags, 'T, 'TReturn, 'TNext) this =
      'tags intf constraint 'tags =
                  [> `Generator of ('T * 'TReturn * 'TNext) ]
    let rec this_of_js :
      'tags 'T 'TReturn 'TNext .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'T) ->
            (Ojs.t -> 'TReturn) ->
              (Ojs.t -> 'TNext) ->
                Ojs.t -> ('tags, 'T, 'TReturn, 'TNext) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (type __TReturn) ->
            fun (type __TNext) ->
              fun (__tags_of_js : Ojs.t -> __tags) ->
                fun (__T_of_js : Ojs.t -> __T) ->
                  fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
                    fun (__TNext_of_js : Ojs.t -> __TNext) ->
                      fun (x5595 : Ojs.t) -> intf_of_js __tags_of_js x5595
    and this_to_js :
      'tags 'T 'TReturn 'TNext .
        ('tags -> Ojs.t) ->
          ('T -> Ojs.t) ->
            ('TReturn -> Ojs.t) ->
              ('TNext -> Ojs.t) ->
                ('tags, 'T, 'TReturn, 'TNext) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (type __TReturn) ->
            fun (type __TNext) ->
              fun (__tags_to_js : __tags -> Ojs.t) ->
                fun (__T_to_js : __T -> Ojs.t) ->
                  fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
                    fun (__TNext_to_js : __TNext -> Ojs.t) ->
                      fun (x5593 : __tags intf) ->
                        intf_to_js __tags_to_js x5593
    let (next :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        args:any list -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x5600 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~args:(x5597 : any list) ->
          IteratorResult.t_of_js Obj.magic Obj.magic
            (let x5605 =
               this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x5600 in
             Ojs.call (Ojs.get_prop_ascii x5605 "next") "apply"
               [|x5605;((let x5598 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x5599 : any) ->
                              ignore
                                (Ojs.call x5598 "push" [|(any_to_js x5599)|]))
                           x5597;
                         x5598))|])
    let (return :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        value:'TReturn -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x5609 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~value:(x5608 : 'TReturn) ->
          IteratorResult.t_of_js Obj.magic Obj.magic
            (Ojs.call
               (this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x5609)
               "return" [|(Obj.magic x5608)|])
    let (throw :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        e:any -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x5617 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~e:(x5616 : any) ->
          IteratorResult.t_of_js Obj.magic Obj.magic
            (Ojs.call
               (this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x5617)
               "throw" [|(any_to_js x5616)|])
    let cast_from = Obj.magic
  end
module GeneratorFunction =
  struct
    type t = [ `GeneratorFunction ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5625 : Ojs.t) -> t_of_js x5625
    and t_0_to_js : t_0 -> Ojs.t = fun (x5624 : t) -> t_to_js x5624
    type tags = [ `GeneratorFunction ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `GeneratorFunction ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x5628 : Ojs.t) -> intf_of_js __tags_of_js x5628
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x5626 : __tags intf) -> intf_to_js __tags_to_js x5626
    let (create : 'tags this -> args:any list -> Generator.t_0) =
      fun (x5633 : 'tags this) ->
        fun ~args:(x5630 : any list) ->
          Generator.t_0_of_js
            (Ojs.new_obj_arr (this_to_js Obj.magic x5633)
               (let x5631 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                List.iter
                  (fun (x5632 : any) ->
                     ignore (Ojs.call x5631 "push" [|(any_to_js x5632)|]))
                  x5630;
                x5631))
    let (apply : 'tags this -> args:any list -> Generator.t_0) =
      fun (x5638 : 'tags this) ->
        fun ~args:(x5635 : any list) ->
          Generator.t_0_of_js
            (Ojs.call (this_to_js Obj.magic x5638) "apply"
               [|Ojs.null;((let x5636 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            List.iter
                              (fun (x5637 : any) ->
                                 ignore
                                   (Ojs.call x5636 "push"
                                      [|(any_to_js x5637)|])) x5635;
                            x5636))|])
    let (get_length : 'tags this -> float) =
      fun (x5640 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5640) "length")
    let (get_name : 'tags this -> string) =
      fun (x5642 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5642) "name")
    let (get_prototype : 'tags this -> Generator.t_0) =
      fun (x5644 : 'tags this) ->
        Generator.t_0_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5644) "prototype")
    let cast_from = Obj.magic
  end
module GeneratorFunctionConstructor =
  struct
    type t = [ `GeneratorFunctionConstructor ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5647 : Ojs.t) -> t_of_js x5647
    and t_0_to_js : t_0 -> Ojs.t = fun (x5646 : t) -> t_to_js x5646
    type tags = [ `GeneratorFunctionConstructor ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `GeneratorFunctionConstructor ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x5650 : Ojs.t) -> intf_of_js __tags_of_js x5650
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x5648 : __tags intf) -> intf_to_js __tags_to_js x5648
    let (create : 'tags this -> args:string list -> GeneratorFunction.t) =
      fun (x5655 : 'tags this) ->
        fun ~args:(x5652 : string list) ->
          GeneratorFunction.t_of_js
            (Ojs.new_obj_arr (this_to_js Obj.magic x5655)
               (let x5653 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                List.iter
                  (fun (x5654 : string) ->
                     ignore
                       (Ojs.call x5653 "push" [|(Ojs.string_to_js x5654)|]))
                  x5652;
                x5653))
    let (apply : 'tags this -> args:string list -> GeneratorFunction.t) =
      fun (x5660 : 'tags this) ->
        fun ~args:(x5657 : string list) ->
          GeneratorFunction.t_of_js
            (Ojs.call (this_to_js Obj.magic x5660) "apply"
               [|Ojs.null;((let x5658 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            List.iter
                              (fun (x5659 : string) ->
                                 ignore
                                   (Ojs.call x5658 "push"
                                      [|(Ojs.string_to_js x5659)|])) x5657;
                            x5658))|])
    let (get_length : 'tags this -> float) =
      fun (x5662 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5662) "length")
    let (get_name : 'tags this -> string) =
      fun (x5664 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5664) "name")
    let (get_prototype : 'tags this -> GeneratorFunction.t) =
      fun (x5666 : 'tags this) ->
        GeneratorFunction.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5666) "prototype")
    let cast_from = Obj.magic
  end
module Float64Array =
  struct
    type t =
      [ `Float64Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5669 : Ojs.t) -> t_of_js x5669
    and t_0_to_js : t_0 -> Ojs.t = fun (x5668 : t) -> t_to_js x5668
    type tags =
      [ `Float64Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Float64Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x5672 : Ojs.t) -> intf_of_js __tags_of_js x5672
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x5670 : __tags intf) -> intf_to_js __tags_to_js x5670
    let (at : 'tags this -> index:float -> float option) =
      fun (x5675 : 'tags this) ->
        fun ~index:(x5674 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x5675) "at"
               [|(Ojs.float_to_js x5674)|])
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x5682 : 'tags this) ->
        fun ~searchElement:(x5678 : float) ->
          fun ?fromIndex:(x5679 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x5684 = this_to_js Obj.magic x5682 in
                 Ojs.call (Ojs.get_prop_ascii x5684 "includes") "apply"
                   [|x5684;((let x5680 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5680 "push"
                                  [|(Ojs.float_to_js x5678)|]);
                             (match x5679 with
                              | Some x5681 ->
                                  ignore
                                    (Ojs.call x5680 "push"
                                       [|(Ojs.float_to_js x5681)|])
                              | None -> ());
                             x5680))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x5685 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x5687 : Ojs.t) ->
             let x5688 = x5687 in
             ((Ojs.float_of_js (Ojs.array_get x5688 0)),
               (Ojs.float_of_js (Ojs.array_get x5688 1))))
          (Ojs.call (this_to_js Obj.magic x5685) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x5689 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x5689) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x5692 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x5692) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x5695 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5695)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x5697 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5697) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x5699 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5699) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x5701 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5701) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x5708 : 'tags this) ->
        fun ~target:(x5703 : float) ->
          fun ~start:(x5704 : float) ->
            fun ?end_:(x5705 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x5710 = this_to_js Obj.magic x5708 in
                   Ojs.call (Ojs.get_prop_ascii x5710 "copyWithin") "apply"
                     [|x5710;((let x5706 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5706 "push"
                                    [|(Ojs.float_to_js x5703)|]);
                               ignore
                                 (Ojs.call x5706 "push"
                                    [|(Ojs.float_to_js x5704)|]);
                               (match x5705 with
                                | Some x5707 ->
                                    ignore
                                      (Ojs.call x5706 "push"
                                         [|(Ojs.float_to_js x5707)|])
                                | None -> ());
                               x5706))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x5719 : 'tags this) ->
        fun
          ~predicate:(x5712 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x5713 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x5721 = this_to_js Obj.magic x5719 in
                 Ojs.call (Ojs.get_prop_ascii x5721 "every") "apply"
                   [|x5721;((let x5714 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5714 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5716 : Ojs.t) ->
                                          fun (x5717 : Ojs.t) ->
                                            fun (x5718 : Ojs.t) ->
                                              unknown_to_js
                                                (x5712
                                                   ~value:(Ojs.float_of_js
                                                             x5716)
                                                   ~index:(Ojs.float_of_js
                                                             x5717)
                                                   ~array:(t_of_js x5718))))|]);
                             (match x5713 with
                              | Some x5715 ->
                                  ignore
                                    (Ojs.call x5714 "push"
                                       [|(any_to_js x5715)|])
                              | None -> ());
                             x5714))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x5728 : 'tags this) ->
        fun ~value:(x5722 : float) ->
          fun ?start:(x5723 : float option) ->
            fun ?end_:(x5724 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x5730 = this_to_js Obj.magic x5728 in
                   Ojs.call (Ojs.get_prop_ascii x5730 "fill") "apply"
                     [|x5730;((let x5725 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5725 "push"
                                    [|(Ojs.float_to_js x5722)|]);
                               (match x5723 with
                                | Some x5727 ->
                                    ignore
                                      (Ojs.call x5725 "push"
                                         [|(Ojs.float_to_js x5727)|])
                                | None -> ());
                               (match x5724 with
                                | Some x5726 ->
                                    ignore
                                      (Ojs.call x5725 "push"
                                         [|(Ojs.float_to_js x5726)|])
                                | None -> ());
                               x5725))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x5739 : 'tags this) ->
        fun ~predicate:(x5732 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x5733 : any option) ->
            fun () ->
              t_of_js
                (let x5741 = this_to_js Obj.magic x5739 in
                 Ojs.call (Ojs.get_prop_ascii x5741 "filter") "apply"
                   [|x5741;((let x5734 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5734 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5736 : Ojs.t) ->
                                          fun (x5737 : Ojs.t) ->
                                            fun (x5738 : Ojs.t) ->
                                              any_to_js
                                                (x5732
                                                   ~value:(Ojs.float_of_js
                                                             x5736)
                                                   ~index:(Ojs.float_of_js
                                                             x5737)
                                                   ~array:(t_of_js x5738))))|]);
                             (match x5733 with
                              | Some x5735 ->
                                  ignore
                                    (Ojs.call x5734 "push"
                                       [|(any_to_js x5735)|])
                              | None -> ());
                             x5734))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x5749 : 'tags this) ->
        fun ~predicate:(x5742 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x5743 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x5751 = this_to_js Obj.magic x5749 in
                 Ojs.call (Ojs.get_prop_ascii x5751 "find") "apply"
                   [|x5751;((let x5744 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5744 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5746 : Ojs.t) ->
                                          fun (x5747 : Ojs.t) ->
                                            fun (x5748 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x5742
                                                   ~value:(Ojs.float_of_js
                                                             x5746)
                                                   ~index:(Ojs.float_of_js
                                                             x5747)
                                                   ~obj:(t_of_js x5748))))|]);
                             (match x5743 with
                              | Some x5745 ->
                                  ignore
                                    (Ojs.call x5744 "push"
                                       [|(any_to_js x5745)|])
                              | None -> ());
                             x5744))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x5760 : 'tags this) ->
        fun ~predicate:(x5753 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x5754 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x5762 = this_to_js Obj.magic x5760 in
                 Ojs.call (Ojs.get_prop_ascii x5762 "findIndex") "apply"
                   [|x5762;((let x5755 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5755 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5757 : Ojs.t) ->
                                          fun (x5758 : Ojs.t) ->
                                            fun (x5759 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x5753
                                                   ~value:(Ojs.float_of_js
                                                             x5757)
                                                   ~index:(Ojs.float_of_js
                                                             x5758)
                                                   ~obj:(t_of_js x5759))))|]);
                             (match x5754 with
                              | Some x5756 ->
                                  ignore
                                    (Ojs.call x5755 "push"
                                       [|(any_to_js x5756)|])
                              | None -> ());
                             x5755))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x5770 : 'tags this) ->
        fun
          ~callbackfn:(x5763 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x5764 : any option) ->
            fun () ->
              ignore
                (let x5772 = this_to_js Obj.magic x5770 in
                 Ojs.call (Ojs.get_prop_ascii x5772 "forEach") "apply"
                   [|x5772;((let x5765 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5765 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5767 : Ojs.t) ->
                                          fun (x5768 : Ojs.t) ->
                                            fun (x5769 : Ojs.t) ->
                                              x5763
                                                ~value:(Ojs.float_of_js x5767)
                                                ~index:(Ojs.float_of_js x5768)
                                                ~array:(t_of_js x5769)))|]);
                             (match x5764 with
                              | Some x5766 ->
                                  ignore
                                    (Ojs.call x5765 "push"
                                       [|(any_to_js x5766)|])
                              | None -> ());
                             x5765))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x5777 : 'tags this) ->
        fun ~searchElement:(x5773 : float) ->
          fun ?fromIndex:(x5774 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x5779 = this_to_js Obj.magic x5777 in
                 Ojs.call (Ojs.get_prop_ascii x5779 "indexOf") "apply"
                   [|x5779;((let x5775 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5775 "push"
                                  [|(Ojs.float_to_js x5773)|]);
                             (match x5774 with
                              | Some x5776 ->
                                  ignore
                                    (Ojs.call x5775 "push"
                                       [|(Ojs.float_to_js x5776)|])
                              | None -> ());
                             x5775))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x5783 : 'tags this) ->
        fun ?separator:(x5780 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x5785 = this_to_js Obj.magic x5783 in
               Ojs.call (Ojs.get_prop_ascii x5785 "join") "apply"
                 [|x5785;((let x5781 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x5780 with
                            | Some x5782 ->
                                ignore
                                  (Ojs.call x5781 "push"
                                     [|(Ojs.string_to_js x5782)|])
                            | None -> ());
                           x5781))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x5790 : 'tags this) ->
        fun ~searchElement:(x5786 : float) ->
          fun ?fromIndex:(x5787 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x5792 = this_to_js Obj.magic x5790 in
                 Ojs.call (Ojs.get_prop_ascii x5792 "lastIndexOf") "apply"
                   [|x5792;((let x5788 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5788 "push"
                                  [|(Ojs.float_to_js x5786)|]);
                             (match x5787 with
                              | Some x5789 ->
                                  ignore
                                    (Ojs.call x5788 "push"
                                       [|(Ojs.float_to_js x5789)|])
                              | None -> ());
                             x5788))|])
    let (get_length : 'tags this -> float) =
      fun (x5793 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5793) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x5802 : 'tags this) ->
        fun
          ~callbackfn:(x5795 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x5796 : any option) ->
            fun () ->
              t_of_js
                (let x5804 = this_to_js Obj.magic x5802 in
                 Ojs.call (Ojs.get_prop_ascii x5804 "map") "apply"
                   [|x5804;((let x5797 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5797 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5799 : Ojs.t) ->
                                          fun (x5800 : Ojs.t) ->
                                            fun (x5801 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x5795
                                                   ~value:(Ojs.float_of_js
                                                             x5799)
                                                   ~index:(Ojs.float_of_js
                                                             x5800)
                                                   ~array:(t_of_js x5801))))|]);
                             (match x5796 with
                              | Some x5798 ->
                                  ignore
                                    (Ojs.call x5797 "push"
                                       [|(any_to_js x5798)|])
                              | None -> ());
                             x5797))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x5810 : 'tags this) ->
        fun
          ~callbackfn:(x5805 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x5810) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x5806 : Ojs.t) ->
                       fun (x5807 : Ojs.t) ->
                         fun (x5808 : Ojs.t) ->
                           fun (x5809 : Ojs.t) ->
                             Ojs.float_to_js
                               (x5805 ~previousValue:(Ojs.float_of_js x5806)
                                  ~currentValue:(Ojs.float_of_js x5807)
                                  ~currentIndex:(Ojs.float_of_js x5808)
                                  ~array:(t_of_js x5809))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x5818 : 'tags this) ->
        fun
          ~callbackfn:(x5812 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x5817 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x5818) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x5813 : Ojs.t) ->
                         fun (x5814 : Ojs.t) ->
                           fun (x5815 : Ojs.t) ->
                             fun (x5816 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x5812
                                    ~previousValue:(Ojs.float_of_js x5813)
                                    ~currentValue:(Ojs.float_of_js x5814)
                                    ~currentIndex:(Ojs.float_of_js x5815)
                                    ~array:(t_of_js x5816))));(Ojs.float_to_js
                                                                 x5817)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x5826 : 'tags this) ->
        fun
          ~callbackfn:(x5820 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x5825 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x5826) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x5821 : Ojs.t) ->
                         fun (x5822 : Ojs.t) ->
                           fun (x5823 : Ojs.t) ->
                             fun (x5824 : Ojs.t) ->
                               Obj.magic
                                 (x5820 ~previousValue:(Obj.magic x5821)
                                    ~currentValue:(Ojs.float_of_js x5822)
                                    ~currentIndex:(Ojs.float_of_js x5823)
                                    ~array:(t_of_js x5824))));(Obj.magic
                                                                 x5825)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x5833 : 'tags this) ->
        fun
          ~callbackfn:(x5828 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x5833) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x5829 : Ojs.t) ->
                       fun (x5830 : Ojs.t) ->
                         fun (x5831 : Ojs.t) ->
                           fun (x5832 : Ojs.t) ->
                             Ojs.float_to_js
                               (x5828 ~previousValue:(Ojs.float_of_js x5829)
                                  ~currentValue:(Ojs.float_of_js x5830)
                                  ~currentIndex:(Ojs.float_of_js x5831)
                                  ~array:(t_of_js x5832))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x5841 : 'tags this) ->
        fun
          ~callbackfn:(x5835 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x5840 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x5841) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x5836 : Ojs.t) ->
                         fun (x5837 : Ojs.t) ->
                           fun (x5838 : Ojs.t) ->
                             fun (x5839 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x5835
                                    ~previousValue:(Ojs.float_of_js x5836)
                                    ~currentValue:(Ojs.float_of_js x5837)
                                    ~currentIndex:(Ojs.float_of_js x5838)
                                    ~array:(t_of_js x5839))));(Ojs.float_to_js
                                                                 x5840)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x5849 : 'tags this) ->
        fun
          ~callbackfn:(x5843 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x5848 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x5849) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x5844 : Ojs.t) ->
                         fun (x5845 : Ojs.t) ->
                           fun (x5846 : Ojs.t) ->
                             fun (x5847 : Ojs.t) ->
                               Obj.magic
                                 (x5843 ~previousValue:(Obj.magic x5844)
                                    ~currentValue:(Ojs.float_of_js x5845)
                                    ~currentIndex:(Ojs.float_of_js x5846)
                                    ~array:(t_of_js x5847))));(Obj.magic
                                                                 x5848)|])
    let (reverse : 'tags this -> t) =
      fun (x5851 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x5851) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x5858 : 'tags this) ->
        fun ~array:(x5853 : float ArrayLike.t) ->
          fun ?offset:(x5854 : float option) ->
            fun () ->
              ignore
                (let x5860 = this_to_js Obj.magic x5858 in
                 Ojs.call (Ojs.get_prop_ascii x5860 "set") "apply"
                   [|x5860;((let x5855 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5855 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x5853)|]);
                             (match x5854 with
                              | Some x5856 ->
                                  ignore
                                    (Ojs.call x5855 "push"
                                       [|(Ojs.float_to_js x5856)|])
                              | None -> ());
                             x5855))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x5866 : 'tags this) ->
        fun ?start:(x5861 : float option) ->
          fun ?end_:(x5862 : float option) ->
            fun () ->
              t_of_js
                (let x5868 = this_to_js Obj.magic x5866 in
                 Ojs.call (Ojs.get_prop_ascii x5868 "slice") "apply"
                   [|x5868;((let x5863 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x5861 with
                              | Some x5865 ->
                                  ignore
                                    (Ojs.call x5863 "push"
                                       [|(Ojs.float_to_js x5865)|])
                              | None -> ());
                             (match x5862 with
                              | Some x5864 ->
                                  ignore
                                    (Ojs.call x5863 "push"
                                       [|(Ojs.float_to_js x5864)|])
                              | None -> ());
                             x5863))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x5876 : 'tags this) ->
        fun
          ~predicate:(x5869 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x5870 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x5878 = this_to_js Obj.magic x5876 in
                 Ojs.call (Ojs.get_prop_ascii x5878 "some") "apply"
                   [|x5878;((let x5871 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5871 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5873 : Ojs.t) ->
                                          fun (x5874 : Ojs.t) ->
                                            fun (x5875 : Ojs.t) ->
                                              unknown_to_js
                                                (x5869
                                                   ~value:(Ojs.float_of_js
                                                             x5873)
                                                   ~index:(Ojs.float_of_js
                                                             x5874)
                                                   ~array:(t_of_js x5875))))|]);
                             (match x5870 with
                              | Some x5872 ->
                                  ignore
                                    (Ojs.call x5871 "push"
                                       [|(any_to_js x5872)|])
                              | None -> ());
                             x5871))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x5884 : 'tags this) ->
        fun ?compareFn:(x5879 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x5886 = this_to_js Obj.magic x5884 in
               Ojs.call (Ojs.get_prop_ascii x5886 "sort") "apply"
                 [|x5886;((let x5880 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x5879 with
                            | Some x5881 ->
                                ignore
                                  (Ojs.call x5880 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x5882 : Ojs.t) ->
                                             fun (x5883 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x5881
                                                    ~a:(Ojs.float_of_js x5882)
                                                    ~b:(Ojs.float_of_js x5883))))|])
                            | None -> ());
                           x5880))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x5893 : 'tags this) ->
        fun ?begin_:(x5888 : float option) ->
          fun ?end_:(x5889 : float option) ->
            fun () ->
              t_of_js
                (let x5895 = this_to_js Obj.magic x5893 in
                 Ojs.call (Ojs.get_prop_ascii x5895 "subarray") "apply"
                   [|x5895;((let x5890 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x5888 with
                              | Some x5892 ->
                                  ignore
                                    (Ojs.call x5890 "push"
                                       [|(Ojs.float_to_js x5892)|])
                              | None -> ());
                             (match x5889 with
                              | Some x5891 ->
                                  ignore
                                    (Ojs.call x5890 "push"
                                       [|(Ojs.float_to_js x5891)|])
                              | None -> ());
                             x5890))|])
    let (toString : 'tags this -> string) =
      fun (x5896 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x5896) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x5898 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x5898) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x5900 : 'tags this) ->
        fun (x5902 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x5900)
               (Ojs.float_to_js x5902))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x5903 : 'tags this) ->
        fun (x5905 : float) ->
          fun (x5906 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x5903) (Ojs.float_to_js x5905)
              (Ojs.float_to_js x5906)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float64Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x5907 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float64Array")
             [|(Iterable.t_to_js Ojs.float_to_js x5907)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x5909 : float Iterable.t) ->
        fun ?mapfn:(x5910 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x5911 : any option) ->
            fun () ->
              t_of_js
                (let x5918 = Ojs.get_prop_ascii Ojs.global "Float64Array" in
                 Ojs.call (Ojs.get_prop_ascii x5918 "from") "apply"
                   [|x5918;((let x5912 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5912 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x5909)|]);
                             (match x5910 with
                              | Some x5914 ->
                                  ignore
                                    (Ojs.call x5912 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x5915 : Ojs.t) ->
                                               fun (x5916 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x5914
                                                      ~v:(Ojs.float_of_js
                                                            x5915)
                                                      ~k:(Ojs.float_of_js
                                                            x5916))))|])
                              | None -> ());
                             (match x5911 with
                              | Some x5913 ->
                                  ignore
                                    (Ojs.call x5912 "push"
                                       [|(any_to_js x5913)|])
                              | None -> ());
                             x5912))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Float64Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x5919 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float64Array")
             [|(Ojs.float_to_js x5919)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x5920 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float64Array")
             [|((match x5920 with
                 | `U1 x5921 -> ArrayLike.t_to_js Ojs.float_to_js x5921
                 | `U2 x5923 -> ArrayBufferLike.t_to_js x5923))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x5924 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x5925 : float option) ->
          fun ?length:(x5926 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Float64Array")
                   (let x5927 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x5927 "push"
                         [|(ArrayBufferLike.t_to_js x5924)|]);
                    (match x5925 with
                     | Some x5929 ->
                         ignore
                           (Ojs.call x5927 "push" [|(Ojs.float_to_js x5929)|])
                     | None -> ());
                    (match x5926 with
                     | Some x5928 ->
                         ignore
                           (Ojs.call x5927 "push" [|(Ojs.float_to_js x5928)|])
                     | None -> ());
                    x5927))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Float64Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x5930 : float list) ->
        t_of_js
          (let x5933 = Ojs.get_prop_ascii Ojs.global "Float64Array" in
           Ojs.call (Ojs.get_prop_ascii x5933 "of") "apply"
             [|x5933;((let x5931 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x5932 : float) ->
                            ignore
                              (Ojs.call x5931 "push"
                                 [|(Ojs.float_to_js x5932)|])) x5930;
                       x5931))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x5934 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Float64Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x5934)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x5936 : 'T ArrayLike.t) ->
        fun ~mapfn:(x5937 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x5938 : any option) ->
            fun () ->
              t_of_js
                (let x5944 = Ojs.get_prop_ascii Ojs.global "Float64Array" in
                 Ojs.call (Ojs.get_prop_ascii x5944 "from") "apply"
                   [|x5944;((let x5939 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5939 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x5936)|]);
                             ignore
                               (Ojs.call x5939 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x5941 : Ojs.t) ->
                                          fun (x5942 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x5937 ~v:(Obj.magic x5941)
                                                 ~k:(Ojs.float_of_js x5942))))|]);
                             (match x5938 with
                              | Some x5940 ->
                                  ignore
                                    (Ojs.call x5939 "push"
                                       [|(any_to_js x5940)|])
                              | None -> ());
                             x5939))|])
    let cast_from = Obj.magic
  end
module Float32Array =
  struct
    type t =
      [ `Float32Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5946 : Ojs.t) -> t_of_js x5946
    and t_0_to_js : t_0 -> Ojs.t = fun (x5945 : t) -> t_to_js x5945
    type tags =
      [ `Float32Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Float32Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x5949 : Ojs.t) -> intf_of_js __tags_of_js x5949
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x5947 : __tags intf) -> intf_to_js __tags_to_js x5947
    let (at : 'tags this -> index:float -> float option) =
      fun (x5952 : 'tags this) ->
        fun ~index:(x5951 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x5952) "at"
               [|(Ojs.float_to_js x5951)|])
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x5959 : 'tags this) ->
        fun ~searchElement:(x5955 : float) ->
          fun ?fromIndex:(x5956 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x5961 = this_to_js Obj.magic x5959 in
                 Ojs.call (Ojs.get_prop_ascii x5961 "includes") "apply"
                   [|x5961;((let x5957 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5957 "push"
                                  [|(Ojs.float_to_js x5955)|]);
                             (match x5956 with
                              | Some x5958 ->
                                  ignore
                                    (Ojs.call x5957 "push"
                                       [|(Ojs.float_to_js x5958)|])
                              | None -> ());
                             x5957))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x5962 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x5964 : Ojs.t) ->
             let x5965 = x5964 in
             ((Ojs.float_of_js (Ojs.array_get x5965 0)),
               (Ojs.float_of_js (Ojs.array_get x5965 1))))
          (Ojs.call (this_to_js Obj.magic x5962) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x5966 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x5966) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x5969 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x5969) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x5972 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5972)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x5974 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5974) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x5976 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5976) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x5978 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5978) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x5985 : 'tags this) ->
        fun ~target:(x5980 : float) ->
          fun ~start:(x5981 : float) ->
            fun ?end_:(x5982 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x5987 = this_to_js Obj.magic x5985 in
                   Ojs.call (Ojs.get_prop_ascii x5987 "copyWithin") "apply"
                     [|x5987;((let x5983 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5983 "push"
                                    [|(Ojs.float_to_js x5980)|]);
                               ignore
                                 (Ojs.call x5983 "push"
                                    [|(Ojs.float_to_js x5981)|]);
                               (match x5982 with
                                | Some x5984 ->
                                    ignore
                                      (Ojs.call x5983 "push"
                                         [|(Ojs.float_to_js x5984)|])
                                | None -> ());
                               x5983))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x5996 : 'tags this) ->
        fun
          ~predicate:(x5989 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x5990 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x5998 = this_to_js Obj.magic x5996 in
                 Ojs.call (Ojs.get_prop_ascii x5998 "every") "apply"
                   [|x5998;((let x5991 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5991 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5993 : Ojs.t) ->
                                          fun (x5994 : Ojs.t) ->
                                            fun (x5995 : Ojs.t) ->
                                              unknown_to_js
                                                (x5989
                                                   ~value:(Ojs.float_of_js
                                                             x5993)
                                                   ~index:(Ojs.float_of_js
                                                             x5994)
                                                   ~array:(t_of_js x5995))))|]);
                             (match x5990 with
                              | Some x5992 ->
                                  ignore
                                    (Ojs.call x5991 "push"
                                       [|(any_to_js x5992)|])
                              | None -> ());
                             x5991))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x6005 : 'tags this) ->
        fun ~value:(x5999 : float) ->
          fun ?start:(x6000 : float option) ->
            fun ?end_:(x6001 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x6007 = this_to_js Obj.magic x6005 in
                   Ojs.call (Ojs.get_prop_ascii x6007 "fill") "apply"
                     [|x6007;((let x6002 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6002 "push"
                                    [|(Ojs.float_to_js x5999)|]);
                               (match x6000 with
                                | Some x6004 ->
                                    ignore
                                      (Ojs.call x6002 "push"
                                         [|(Ojs.float_to_js x6004)|])
                                | None -> ());
                               (match x6001 with
                                | Some x6003 ->
                                    ignore
                                      (Ojs.call x6002 "push"
                                         [|(Ojs.float_to_js x6003)|])
                                | None -> ());
                               x6002))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x6016 : 'tags this) ->
        fun ~predicate:(x6009 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x6010 : any option) ->
            fun () ->
              t_of_js
                (let x6018 = this_to_js Obj.magic x6016 in
                 Ojs.call (Ojs.get_prop_ascii x6018 "filter") "apply"
                   [|x6018;((let x6011 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6011 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6013 : Ojs.t) ->
                                          fun (x6014 : Ojs.t) ->
                                            fun (x6015 : Ojs.t) ->
                                              any_to_js
                                                (x6009
                                                   ~value:(Ojs.float_of_js
                                                             x6013)
                                                   ~index:(Ojs.float_of_js
                                                             x6014)
                                                   ~array:(t_of_js x6015))))|]);
                             (match x6010 with
                              | Some x6012 ->
                                  ignore
                                    (Ojs.call x6011 "push"
                                       [|(any_to_js x6012)|])
                              | None -> ());
                             x6011))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x6026 : 'tags this) ->
        fun ~predicate:(x6019 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x6020 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x6028 = this_to_js Obj.magic x6026 in
                 Ojs.call (Ojs.get_prop_ascii x6028 "find") "apply"
                   [|x6028;((let x6021 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6021 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6023 : Ojs.t) ->
                                          fun (x6024 : Ojs.t) ->
                                            fun (x6025 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x6019
                                                   ~value:(Ojs.float_of_js
                                                             x6023)
                                                   ~index:(Ojs.float_of_js
                                                             x6024)
                                                   ~obj:(t_of_js x6025))))|]);
                             (match x6020 with
                              | Some x6022 ->
                                  ignore
                                    (Ojs.call x6021 "push"
                                       [|(any_to_js x6022)|])
                              | None -> ());
                             x6021))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x6037 : 'tags this) ->
        fun ~predicate:(x6030 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x6031 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x6039 = this_to_js Obj.magic x6037 in
                 Ojs.call (Ojs.get_prop_ascii x6039 "findIndex") "apply"
                   [|x6039;((let x6032 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6032 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6034 : Ojs.t) ->
                                          fun (x6035 : Ojs.t) ->
                                            fun (x6036 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x6030
                                                   ~value:(Ojs.float_of_js
                                                             x6034)
                                                   ~index:(Ojs.float_of_js
                                                             x6035)
                                                   ~obj:(t_of_js x6036))))|]);
                             (match x6031 with
                              | Some x6033 ->
                                  ignore
                                    (Ojs.call x6032 "push"
                                       [|(any_to_js x6033)|])
                              | None -> ());
                             x6032))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x6047 : 'tags this) ->
        fun
          ~callbackfn:(x6040 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x6041 : any option) ->
            fun () ->
              ignore
                (let x6049 = this_to_js Obj.magic x6047 in
                 Ojs.call (Ojs.get_prop_ascii x6049 "forEach") "apply"
                   [|x6049;((let x6042 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6042 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6044 : Ojs.t) ->
                                          fun (x6045 : Ojs.t) ->
                                            fun (x6046 : Ojs.t) ->
                                              x6040
                                                ~value:(Ojs.float_of_js x6044)
                                                ~index:(Ojs.float_of_js x6045)
                                                ~array:(t_of_js x6046)))|]);
                             (match x6041 with
                              | Some x6043 ->
                                  ignore
                                    (Ojs.call x6042 "push"
                                       [|(any_to_js x6043)|])
                              | None -> ());
                             x6042))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x6054 : 'tags this) ->
        fun ~searchElement:(x6050 : float) ->
          fun ?fromIndex:(x6051 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x6056 = this_to_js Obj.magic x6054 in
                 Ojs.call (Ojs.get_prop_ascii x6056 "indexOf") "apply"
                   [|x6056;((let x6052 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6052 "push"
                                  [|(Ojs.float_to_js x6050)|]);
                             (match x6051 with
                              | Some x6053 ->
                                  ignore
                                    (Ojs.call x6052 "push"
                                       [|(Ojs.float_to_js x6053)|])
                              | None -> ());
                             x6052))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x6060 : 'tags this) ->
        fun ?separator:(x6057 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x6062 = this_to_js Obj.magic x6060 in
               Ojs.call (Ojs.get_prop_ascii x6062 "join") "apply"
                 [|x6062;((let x6058 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6057 with
                            | Some x6059 ->
                                ignore
                                  (Ojs.call x6058 "push"
                                     [|(Ojs.string_to_js x6059)|])
                            | None -> ());
                           x6058))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x6067 : 'tags this) ->
        fun ~searchElement:(x6063 : float) ->
          fun ?fromIndex:(x6064 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x6069 = this_to_js Obj.magic x6067 in
                 Ojs.call (Ojs.get_prop_ascii x6069 "lastIndexOf") "apply"
                   [|x6069;((let x6065 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6065 "push"
                                  [|(Ojs.float_to_js x6063)|]);
                             (match x6064 with
                              | Some x6066 ->
                                  ignore
                                    (Ojs.call x6065 "push"
                                       [|(Ojs.float_to_js x6066)|])
                              | None -> ());
                             x6065))|])
    let (get_length : 'tags this -> float) =
      fun (x6070 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6070) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x6079 : 'tags this) ->
        fun
          ~callbackfn:(x6072 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x6073 : any option) ->
            fun () ->
              t_of_js
                (let x6081 = this_to_js Obj.magic x6079 in
                 Ojs.call (Ojs.get_prop_ascii x6081 "map") "apply"
                   [|x6081;((let x6074 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6074 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6076 : Ojs.t) ->
                                          fun (x6077 : Ojs.t) ->
                                            fun (x6078 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x6072
                                                   ~value:(Ojs.float_of_js
                                                             x6076)
                                                   ~index:(Ojs.float_of_js
                                                             x6077)
                                                   ~array:(t_of_js x6078))))|]);
                             (match x6073 with
                              | Some x6075 ->
                                  ignore
                                    (Ojs.call x6074 "push"
                                       [|(any_to_js x6075)|])
                              | None -> ());
                             x6074))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x6087 : 'tags this) ->
        fun
          ~callbackfn:(x6082 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6087) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x6083 : Ojs.t) ->
                       fun (x6084 : Ojs.t) ->
                         fun (x6085 : Ojs.t) ->
                           fun (x6086 : Ojs.t) ->
                             Ojs.float_to_js
                               (x6082 ~previousValue:(Ojs.float_of_js x6083)
                                  ~currentValue:(Ojs.float_of_js x6084)
                                  ~currentIndex:(Ojs.float_of_js x6085)
                                  ~array:(t_of_js x6086))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x6095 : 'tags this) ->
        fun
          ~callbackfn:(x6089 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x6094 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x6095) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x6090 : Ojs.t) ->
                         fun (x6091 : Ojs.t) ->
                           fun (x6092 : Ojs.t) ->
                             fun (x6093 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x6089
                                    ~previousValue:(Ojs.float_of_js x6090)
                                    ~currentValue:(Ojs.float_of_js x6091)
                                    ~currentIndex:(Ojs.float_of_js x6092)
                                    ~array:(t_of_js x6093))));(Ojs.float_to_js
                                                                 x6094)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x6103 : 'tags this) ->
        fun
          ~callbackfn:(x6097 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x6102 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x6103) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x6098 : Ojs.t) ->
                         fun (x6099 : Ojs.t) ->
                           fun (x6100 : Ojs.t) ->
                             fun (x6101 : Ojs.t) ->
                               Obj.magic
                                 (x6097 ~previousValue:(Obj.magic x6098)
                                    ~currentValue:(Ojs.float_of_js x6099)
                                    ~currentIndex:(Ojs.float_of_js x6100)
                                    ~array:(t_of_js x6101))));(Obj.magic
                                                                 x6102)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x6110 : 'tags this) ->
        fun
          ~callbackfn:(x6105 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6110) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x6106 : Ojs.t) ->
                       fun (x6107 : Ojs.t) ->
                         fun (x6108 : Ojs.t) ->
                           fun (x6109 : Ojs.t) ->
                             Ojs.float_to_js
                               (x6105 ~previousValue:(Ojs.float_of_js x6106)
                                  ~currentValue:(Ojs.float_of_js x6107)
                                  ~currentIndex:(Ojs.float_of_js x6108)
                                  ~array:(t_of_js x6109))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x6118 : 'tags this) ->
        fun
          ~callbackfn:(x6112 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x6117 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x6118) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x6113 : Ojs.t) ->
                         fun (x6114 : Ojs.t) ->
                           fun (x6115 : Ojs.t) ->
                             fun (x6116 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x6112
                                    ~previousValue:(Ojs.float_of_js x6113)
                                    ~currentValue:(Ojs.float_of_js x6114)
                                    ~currentIndex:(Ojs.float_of_js x6115)
                                    ~array:(t_of_js x6116))));(Ojs.float_to_js
                                                                 x6117)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x6126 : 'tags this) ->
        fun
          ~callbackfn:(x6120 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x6125 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x6126) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x6121 : Ojs.t) ->
                         fun (x6122 : Ojs.t) ->
                           fun (x6123 : Ojs.t) ->
                             fun (x6124 : Ojs.t) ->
                               Obj.magic
                                 (x6120 ~previousValue:(Obj.magic x6121)
                                    ~currentValue:(Ojs.float_of_js x6122)
                                    ~currentIndex:(Ojs.float_of_js x6123)
                                    ~array:(t_of_js x6124))));(Obj.magic
                                                                 x6125)|])
    let (reverse : 'tags this -> t) =
      fun (x6128 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x6128) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x6135 : 'tags this) ->
        fun ~array:(x6130 : float ArrayLike.t) ->
          fun ?offset:(x6131 : float option) ->
            fun () ->
              ignore
                (let x6137 = this_to_js Obj.magic x6135 in
                 Ojs.call (Ojs.get_prop_ascii x6137 "set") "apply"
                   [|x6137;((let x6132 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6132 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x6130)|]);
                             (match x6131 with
                              | Some x6133 ->
                                  ignore
                                    (Ojs.call x6132 "push"
                                       [|(Ojs.float_to_js x6133)|])
                              | None -> ());
                             x6132))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x6143 : 'tags this) ->
        fun ?start:(x6138 : float option) ->
          fun ?end_:(x6139 : float option) ->
            fun () ->
              t_of_js
                (let x6145 = this_to_js Obj.magic x6143 in
                 Ojs.call (Ojs.get_prop_ascii x6145 "slice") "apply"
                   [|x6145;((let x6140 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x6138 with
                              | Some x6142 ->
                                  ignore
                                    (Ojs.call x6140 "push"
                                       [|(Ojs.float_to_js x6142)|])
                              | None -> ());
                             (match x6139 with
                              | Some x6141 ->
                                  ignore
                                    (Ojs.call x6140 "push"
                                       [|(Ojs.float_to_js x6141)|])
                              | None -> ());
                             x6140))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x6153 : 'tags this) ->
        fun
          ~predicate:(x6146 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x6147 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6155 = this_to_js Obj.magic x6153 in
                 Ojs.call (Ojs.get_prop_ascii x6155 "some") "apply"
                   [|x6155;((let x6148 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6148 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6150 : Ojs.t) ->
                                          fun (x6151 : Ojs.t) ->
                                            fun (x6152 : Ojs.t) ->
                                              unknown_to_js
                                                (x6146
                                                   ~value:(Ojs.float_of_js
                                                             x6150)
                                                   ~index:(Ojs.float_of_js
                                                             x6151)
                                                   ~array:(t_of_js x6152))))|]);
                             (match x6147 with
                              | Some x6149 ->
                                  ignore
                                    (Ojs.call x6148 "push"
                                       [|(any_to_js x6149)|])
                              | None -> ());
                             x6148))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x6161 : 'tags this) ->
        fun ?compareFn:(x6156 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x6163 = this_to_js Obj.magic x6161 in
               Ojs.call (Ojs.get_prop_ascii x6163 "sort") "apply"
                 [|x6163;((let x6157 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6156 with
                            | Some x6158 ->
                                ignore
                                  (Ojs.call x6157 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x6159 : Ojs.t) ->
                                             fun (x6160 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x6158
                                                    ~a:(Ojs.float_of_js x6159)
                                                    ~b:(Ojs.float_of_js x6160))))|])
                            | None -> ());
                           x6157))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x6170 : 'tags this) ->
        fun ?begin_:(x6165 : float option) ->
          fun ?end_:(x6166 : float option) ->
            fun () ->
              t_of_js
                (let x6172 = this_to_js Obj.magic x6170 in
                 Ojs.call (Ojs.get_prop_ascii x6172 "subarray") "apply"
                   [|x6172;((let x6167 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x6165 with
                              | Some x6169 ->
                                  ignore
                                    (Ojs.call x6167 "push"
                                       [|(Ojs.float_to_js x6169)|])
                              | None -> ());
                             (match x6166 with
                              | Some x6168 ->
                                  ignore
                                    (Ojs.call x6167 "push"
                                       [|(Ojs.float_to_js x6168)|])
                              | None -> ());
                             x6167))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x6173 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x6173) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x6175 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x6175) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x6177 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x6177) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x6179 : 'tags this) ->
        fun (x6181 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x6179)
               (Ojs.float_to_js x6181))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x6182 : 'tags this) ->
        fun (x6184 : float) ->
          fun (x6185 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x6182) (Ojs.float_to_js x6184)
              (Ojs.float_to_js x6185)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float32Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x6186 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float32Array")
             [|(Iterable.t_to_js Ojs.float_to_js x6186)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x6188 : float Iterable.t) ->
        fun ?mapfn:(x6189 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x6190 : any option) ->
            fun () ->
              t_of_js
                (let x6197 = Ojs.get_prop_ascii Ojs.global "Float32Array" in
                 Ojs.call (Ojs.get_prop_ascii x6197 "from") "apply"
                   [|x6197;((let x6191 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6191 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x6188)|]);
                             (match x6189 with
                              | Some x6193 ->
                                  ignore
                                    (Ojs.call x6191 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x6194 : Ojs.t) ->
                                               fun (x6195 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x6193
                                                      ~v:(Ojs.float_of_js
                                                            x6194)
                                                      ~k:(Ojs.float_of_js
                                                            x6195))))|])
                              | None -> ());
                             (match x6190 with
                              | Some x6192 ->
                                  ignore
                                    (Ojs.call x6191 "push"
                                       [|(any_to_js x6192)|])
                              | None -> ());
                             x6191))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Float32Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x6198 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float32Array")
             [|(Ojs.float_to_js x6198)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x6199 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float32Array")
             [|((match x6199 with
                 | `U1 x6200 -> ArrayLike.t_to_js Ojs.float_to_js x6200
                 | `U2 x6202 -> ArrayBufferLike.t_to_js x6202))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x6203 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x6204 : float option) ->
          fun ?length:(x6205 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Float32Array")
                   (let x6206 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x6206 "push"
                         [|(ArrayBufferLike.t_to_js x6203)|]);
                    (match x6204 with
                     | Some x6208 ->
                         ignore
                           (Ojs.call x6206 "push" [|(Ojs.float_to_js x6208)|])
                     | None -> ());
                    (match x6205 with
                     | Some x6207 ->
                         ignore
                           (Ojs.call x6206 "push" [|(Ojs.float_to_js x6207)|])
                     | None -> ());
                    x6206))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Float32Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x6209 : float list) ->
        t_of_js
          (let x6212 = Ojs.get_prop_ascii Ojs.global "Float32Array" in
           Ojs.call (Ojs.get_prop_ascii x6212 "of") "apply"
             [|x6212;((let x6210 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x6211 : float) ->
                            ignore
                              (Ojs.call x6210 "push"
                                 [|(Ojs.float_to_js x6211)|])) x6209;
                       x6210))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x6213 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Float32Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x6213)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x6215 : 'T ArrayLike.t) ->
        fun ~mapfn:(x6216 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x6217 : any option) ->
            fun () ->
              t_of_js
                (let x6223 = Ojs.get_prop_ascii Ojs.global "Float32Array" in
                 Ojs.call (Ojs.get_prop_ascii x6223 "from") "apply"
                   [|x6223;((let x6218 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6218 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x6215)|]);
                             ignore
                               (Ojs.call x6218 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x6220 : Ojs.t) ->
                                          fun (x6221 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x6216 ~v:(Obj.magic x6220)
                                                 ~k:(Ojs.float_of_js x6221))))|]);
                             (match x6217 with
                              | Some x6219 ->
                                  ignore
                                    (Ojs.call x6218 "push"
                                       [|(any_to_js x6219)|])
                              | None -> ());
                             x6218))|])
    let cast_from = Obj.magic
  end
module FinalizationRegistry =
  struct
    type 'T t = [ `FinalizationRegistry of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x6226 : Ojs.t) -> t_of_js __T_of_js x6226
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x6224 : __T t) -> t_to_js __T_to_js x6224
    type t_0 = any t
    let rec t_0_of_js : Ojs.t -> t_0 =
      fun (x6230 : Ojs.t) -> t_of_js any_of_js x6230
    and t_0_to_js : t_0 -> Ojs.t =
      fun (x6228 : any t) -> t_to_js any_to_js x6228
    type 'T tags = [ `FinalizationRegistry of 'T ]
    type 'T tags_1 = 'T tags
    type tags_0 = any tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `FinalizationRegistry of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x6234 : Ojs.t) -> intf_of_js __tags_of_js x6234
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x6232 : __tags intf) -> intf_to_js __tags_to_js x6232
    let (register :
      ('tags, 'T) this ->
        target:untyped_object ->
          heldValue:any -> ?unregisterToken:untyped_object -> unit -> unit)
      =
      fun (x6241 : ('tags, 'T) this) ->
        fun ~target:(x6236 : untyped_object) ->
          fun ~heldValue:(x6237 : any) ->
            fun ?unregisterToken:(x6238 : untyped_object option) ->
              fun () ->
                ignore
                  (let x6244 = this_to_js Obj.magic Obj.magic x6241 in
                   Ojs.call (Ojs.get_prop_ascii x6244 "register") "apply"
                     [|x6244;((let x6239 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6239 "push"
                                    [|(untyped_object_to_js x6236)|]);
                               ignore
                                 (Ojs.call x6239 "push" [|(any_to_js x6237)|]);
                               (match x6238 with
                                | Some x6240 ->
                                    ignore
                                      (Ojs.call x6239 "push"
                                         [|(untyped_object_to_js x6240)|])
                                | None -> ());
                               x6239))|])
    let (unregister :
      ('tags, 'T) this -> unregisterToken:untyped_object -> unit) =
      fun (x6246 : ('tags, 'T) this) ->
        fun ~unregisterToken:(x6245 : untyped_object) ->
          ignore
            (Ojs.call (this_to_js Obj.magic Obj.magic x6246) "unregister"
               [|(untyped_object_to_js x6245)|])
    let (register' :
      ('tags, 'T) this ->
        target:untyped_object ->
          heldValue:'T -> ?unregisterToken:untyped_object -> unit -> unit)
      =
      fun (x6254 : ('tags, 'T) this) ->
        fun ~target:(x6249 : untyped_object) ->
          fun ~heldValue:(x6250 : 'T) ->
            fun ?unregisterToken:(x6251 : untyped_object option) ->
              fun () ->
                ignore
                  (let x6257 = this_to_js Obj.magic Obj.magic x6254 in
                   Ojs.call (Ojs.get_prop_ascii x6257 "register") "apply"
                     [|x6257;((let x6252 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6252 "push"
                                    [|(untyped_object_to_js x6249)|]);
                               ignore
                                 (Ojs.call x6252 "push" [|(Obj.magic x6250)|]);
                               (match x6251 with
                                | Some x6253 ->
                                    ignore
                                      (Ojs.call x6252 "push"
                                         [|(untyped_object_to_js x6253)|])
                                | None -> ());
                               x6252))|])
    let (unregister' :
      ('tags, 'T) this -> unregisterToken:untyped_object -> unit) =
      fun (x6259 : ('tags, 'T) this) ->
        fun ~unregisterToken:(x6258 : untyped_object) ->
          ignore
            (Ojs.call (this_to_js Obj.magic Obj.magic x6259) "unregister"
               [|(untyped_object_to_js x6258)|])
    let (prototype : unit -> t_0) =
      fun () ->
        t_0_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             "prototype")
    let (create : (any -> unit) -> t_0) =
      fun (x6262 : any -> unit) ->
        t_0_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             [|(Ojs.fun_to_js 1
                  (fun (x6263 : Ojs.t) -> x6262 (any_of_js x6263)))|])
    let (prototype' : unit -> any t) =
      fun () ->
        t_of_js any_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             "prototype")
    let (create' : ('T -> unit) -> 'T t) =
      fun (x6265 : 'T -> unit) ->
        t_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             [|(Ojs.fun_to_js 1
                  (fun (x6266 : Ojs.t) -> x6265 (Obj.magic x6266)))|])
    let cast_from = Obj.magic
  end
module Extract =
  struct
    type ('T, 'U) t = any
    let rec t_of_js :
      'T 'U . (Ojs.t -> 'T) -> (Ojs.t -> 'U) -> Ojs.t -> ('T, 'U) t =
      fun (type __T) ->
        fun (type __U) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__U_of_js : Ojs.t -> __U) ->
              fun (x6269 : Ojs.t) -> any_of_js x6269
    and t_to_js :
      'T 'U . ('T -> Ojs.t) -> ('U -> Ojs.t) -> ('T, 'U) t -> Ojs.t =
      fun (type __T) ->
        fun (type __U) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__U_to_js : __U -> Ojs.t) ->
              fun (x6268 : any) -> any_to_js x6268
    type ('T, 'U) t_2 = ('T, 'U) t
    let rec t_2_of_js :
      'T 'U . (Ojs.t -> 'T) -> (Ojs.t -> 'U) -> Ojs.t -> ('T, 'U) t_2 =
      fun (type __T) ->
        fun (type __U) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__U_of_js : Ojs.t -> __U) ->
              fun (x6273 : Ojs.t) -> t_of_js __T_of_js __U_of_js x6273
    and t_2_to_js :
      'T 'U . ('T -> Ojs.t) -> ('U -> Ojs.t) -> ('T, 'U) t_2 -> Ojs.t =
      fun (type __T) ->
        fun (type __U) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__U_to_js : __U -> Ojs.t) ->
              fun (x6270 : (__T, __U) t) -> t_to_js __T_to_js __U_to_js x6270
  end
module EvalError =
  struct
    type t = [ `Error  | `EvalError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6277 : Ojs.t) -> t_of_js x6277
    and t_0_to_js : t_0 -> Ojs.t = fun (x6276 : t) -> t_to_js x6276
    type tags = [ `Error  | `EvalError ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `EvalError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x6280 : Ojs.t) -> intf_of_js __tags_of_js x6280
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x6278 : __tags intf) -> intf_to_js __tags_to_js x6278
    let (create : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x6282 : string option) ->
        fun ?options:(x6283 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "EvalError")
                 (let x6284 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  (match x6282 with
                   | Some x6286 ->
                       ignore
                         (Ojs.call x6284 "push" [|(Ojs.string_to_js x6286)|])
                   | None -> ());
                  (match x6283 with
                   | Some x6285 ->
                       ignore
                         (Ojs.call x6284 "push"
                            [|(ErrorOptions.t_to_js x6285)|])
                   | None -> ());
                  x6284))
    let (invoke : ?message:string -> ?options:ErrorOptions.t -> unit -> t) =
      fun ?message:(x6287 : string option) ->
        fun ?options:(x6288 : ErrorOptions.t option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "EvalError") "apply"
                 [|Ojs.null;((let x6289 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x6287 with
                               | Some x6291 ->
                                   ignore
                                     (Ojs.call x6289 "push"
                                        [|(Ojs.string_to_js x6291)|])
                               | None -> ());
                              (match x6288 with
                               | Some x6290 ->
                                   ignore
                                     (Ojs.call x6289 "push"
                                        [|(ErrorOptions.t_to_js x6290)|])
                               | None -> ());
                              x6289))|])
    let (create' : ?message:string -> unit -> t) =
      fun ?message:(x6292 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "EvalError")
               (let x6293 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x6292 with
                 | Some x6294 ->
                     ignore
                       (Ojs.call x6293 "push" [|(Ojs.string_to_js x6294)|])
                 | None -> ());
                x6293))
    let (invoke' : ?message:string -> unit -> t) =
      fun ?message:(x6295 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "EvalError") "apply"
               [|Ojs.null;((let x6296 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x6295 with
                             | Some x6297 ->
                                 ignore
                                   (Ojs.call x6296 "push"
                                      [|(Ojs.string_to_js x6297)|])
                             | None -> ());
                            x6296))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "EvalError")
             "prototype")
    let cast_from = Obj.magic
  end
module DataView =
  struct
    type t = [ `DataView ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6299 : Ojs.t) -> t_of_js x6299
    and t_0_to_js : t_0 -> Ojs.t = fun (x6298 : t) -> t_to_js x6298
    type tags = [ `DataView ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `DataView ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x6302 : Ojs.t) -> intf_of_js __tags_of_js x6302
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x6300 : __tags intf) -> intf_to_js __tags_to_js x6300
    let (getBigInt64 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> bigint)
      =
      fun (x6308 : 'tags this) ->
        fun ~byteOffset:(x6304 : float) ->
          fun ?littleEndian:(x6305 : bool option) ->
            fun () ->
              bigint_of_js
                (let x6310 = this_to_js Obj.magic x6308 in
                 Ojs.call (Ojs.get_prop_ascii x6310 "getBigInt64") "apply"
                   [|x6310;((let x6306 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6306 "push"
                                  [|(Ojs.float_to_js x6304)|]);
                             (match x6305 with
                              | Some x6307 ->
                                  ignore
                                    (Ojs.call x6306 "push"
                                       [|(Ojs.bool_to_js x6307)|])
                              | None -> ());
                             x6306))|])
    let (getBigUint64 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> bigint)
      =
      fun (x6315 : 'tags this) ->
        fun ~byteOffset:(x6311 : float) ->
          fun ?littleEndian:(x6312 : bool option) ->
            fun () ->
              bigint_of_js
                (let x6317 = this_to_js Obj.magic x6315 in
                 Ojs.call (Ojs.get_prop_ascii x6317 "getBigUint64") "apply"
                   [|x6317;((let x6313 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6313 "push"
                                  [|(Ojs.float_to_js x6311)|]);
                             (match x6312 with
                              | Some x6314 ->
                                  ignore
                                    (Ojs.call x6313 "push"
                                       [|(Ojs.bool_to_js x6314)|])
                              | None -> ());
                             x6313))|])
    let (setBigInt64 :
      'tags this ->
        byteOffset:float ->
          value:bigint -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x6323 : 'tags this) ->
        fun ~byteOffset:(x6318 : float) ->
          fun ~value:(x6319 : bigint) ->
            fun ?littleEndian:(x6320 : bool option) ->
              fun () ->
                ignore
                  (let x6325 = this_to_js Obj.magic x6323 in
                   Ojs.call (Ojs.get_prop_ascii x6325 "setBigInt64") "apply"
                     [|x6325;((let x6321 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6321 "push"
                                    [|(Ojs.float_to_js x6318)|]);
                               ignore
                                 (Ojs.call x6321 "push"
                                    [|(bigint_to_js x6319)|]);
                               (match x6320 with
                                | Some x6322 ->
                                    ignore
                                      (Ojs.call x6321 "push"
                                         [|(Ojs.bool_to_js x6322)|])
                                | None -> ());
                               x6321))|])
    let (setBigUint64 :
      'tags this ->
        byteOffset:float ->
          value:bigint -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x6331 : 'tags this) ->
        fun ~byteOffset:(x6326 : float) ->
          fun ~value:(x6327 : bigint) ->
            fun ?littleEndian:(x6328 : bool option) ->
              fun () ->
                ignore
                  (let x6333 = this_to_js Obj.magic x6331 in
                   Ojs.call (Ojs.get_prop_ascii x6333 "setBigUint64") "apply"
                     [|x6333;((let x6329 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6329 "push"
                                    [|(Ojs.float_to_js x6326)|]);
                               ignore
                                 (Ojs.call x6329 "push"
                                    [|(bigint_to_js x6327)|]);
                               (match x6328 with
                                | Some x6330 ->
                                    ignore
                                      (Ojs.call x6329 "push"
                                         [|(Ojs.bool_to_js x6330)|])
                                | None -> ());
                               x6329))|])
    let (get_buffer : 'tags this -> ArrayBuffer.t) =
      fun (x6334 : 'tags this) ->
        ArrayBuffer.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6334) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x6336 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6336) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x6338 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6338) "byteOffset")
    let (getFloat32 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x6344 : 'tags this) ->
        fun ~byteOffset:(x6340 : float) ->
          fun ?littleEndian:(x6341 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x6346 = this_to_js Obj.magic x6344 in
                 Ojs.call (Ojs.get_prop_ascii x6346 "getFloat32") "apply"
                   [|x6346;((let x6342 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6342 "push"
                                  [|(Ojs.float_to_js x6340)|]);
                             (match x6341 with
                              | Some x6343 ->
                                  ignore
                                    (Ojs.call x6342 "push"
                                       [|(Ojs.bool_to_js x6343)|])
                              | None -> ());
                             x6342))|])
    let (getFloat64 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x6351 : 'tags this) ->
        fun ~byteOffset:(x6347 : float) ->
          fun ?littleEndian:(x6348 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x6353 = this_to_js Obj.magic x6351 in
                 Ojs.call (Ojs.get_prop_ascii x6353 "getFloat64") "apply"
                   [|x6353;((let x6349 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6349 "push"
                                  [|(Ojs.float_to_js x6347)|]);
                             (match x6348 with
                              | Some x6350 ->
                                  ignore
                                    (Ojs.call x6349 "push"
                                       [|(Ojs.bool_to_js x6350)|])
                              | None -> ());
                             x6349))|])
    let (getInt8 : 'tags this -> byteOffset:float -> float) =
      fun (x6355 : 'tags this) ->
        fun ~byteOffset:(x6354 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6355) "getInt8"
               [|(Ojs.float_to_js x6354)|])
    let (getInt16 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x6361 : 'tags this) ->
        fun ~byteOffset:(x6357 : float) ->
          fun ?littleEndian:(x6358 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x6363 = this_to_js Obj.magic x6361 in
                 Ojs.call (Ojs.get_prop_ascii x6363 "getInt16") "apply"
                   [|x6363;((let x6359 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6359 "push"
                                  [|(Ojs.float_to_js x6357)|]);
                             (match x6358 with
                              | Some x6360 ->
                                  ignore
                                    (Ojs.call x6359 "push"
                                       [|(Ojs.bool_to_js x6360)|])
                              | None -> ());
                             x6359))|])
    let (getInt32 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x6368 : 'tags this) ->
        fun ~byteOffset:(x6364 : float) ->
          fun ?littleEndian:(x6365 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x6370 = this_to_js Obj.magic x6368 in
                 Ojs.call (Ojs.get_prop_ascii x6370 "getInt32") "apply"
                   [|x6370;((let x6366 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6366 "push"
                                  [|(Ojs.float_to_js x6364)|]);
                             (match x6365 with
                              | Some x6367 ->
                                  ignore
                                    (Ojs.call x6366 "push"
                                       [|(Ojs.bool_to_js x6367)|])
                              | None -> ());
                             x6366))|])
    let (getUint8 : 'tags this -> byteOffset:float -> float) =
      fun (x6372 : 'tags this) ->
        fun ~byteOffset:(x6371 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6372) "getUint8"
               [|(Ojs.float_to_js x6371)|])
    let (getUint16 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x6378 : 'tags this) ->
        fun ~byteOffset:(x6374 : float) ->
          fun ?littleEndian:(x6375 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x6380 = this_to_js Obj.magic x6378 in
                 Ojs.call (Ojs.get_prop_ascii x6380 "getUint16") "apply"
                   [|x6380;((let x6376 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6376 "push"
                                  [|(Ojs.float_to_js x6374)|]);
                             (match x6375 with
                              | Some x6377 ->
                                  ignore
                                    (Ojs.call x6376 "push"
                                       [|(Ojs.bool_to_js x6377)|])
                              | None -> ());
                             x6376))|])
    let (getUint32 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x6385 : 'tags this) ->
        fun ~byteOffset:(x6381 : float) ->
          fun ?littleEndian:(x6382 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x6387 = this_to_js Obj.magic x6385 in
                 Ojs.call (Ojs.get_prop_ascii x6387 "getUint32") "apply"
                   [|x6387;((let x6383 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6383 "push"
                                  [|(Ojs.float_to_js x6381)|]);
                             (match x6382 with
                              | Some x6384 ->
                                  ignore
                                    (Ojs.call x6383 "push"
                                       [|(Ojs.bool_to_js x6384)|])
                              | None -> ());
                             x6383))|])
    let (setFloat32 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x6393 : 'tags this) ->
        fun ~byteOffset:(x6388 : float) ->
          fun ~value:(x6389 : float) ->
            fun ?littleEndian:(x6390 : bool option) ->
              fun () ->
                ignore
                  (let x6395 = this_to_js Obj.magic x6393 in
                   Ojs.call (Ojs.get_prop_ascii x6395 "setFloat32") "apply"
                     [|x6395;((let x6391 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6391 "push"
                                    [|(Ojs.float_to_js x6388)|]);
                               ignore
                                 (Ojs.call x6391 "push"
                                    [|(Ojs.float_to_js x6389)|]);
                               (match x6390 with
                                | Some x6392 ->
                                    ignore
                                      (Ojs.call x6391 "push"
                                         [|(Ojs.bool_to_js x6392)|])
                                | None -> ());
                               x6391))|])
    let (setFloat64 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x6401 : 'tags this) ->
        fun ~byteOffset:(x6396 : float) ->
          fun ~value:(x6397 : float) ->
            fun ?littleEndian:(x6398 : bool option) ->
              fun () ->
                ignore
                  (let x6403 = this_to_js Obj.magic x6401 in
                   Ojs.call (Ojs.get_prop_ascii x6403 "setFloat64") "apply"
                     [|x6403;((let x6399 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6399 "push"
                                    [|(Ojs.float_to_js x6396)|]);
                               ignore
                                 (Ojs.call x6399 "push"
                                    [|(Ojs.float_to_js x6397)|]);
                               (match x6398 with
                                | Some x6400 ->
                                    ignore
                                      (Ojs.call x6399 "push"
                                         [|(Ojs.bool_to_js x6400)|])
                                | None -> ());
                               x6399))|])
    let (setInt8 : 'tags this -> byteOffset:float -> value:float -> unit) =
      fun (x6406 : 'tags this) ->
        fun ~byteOffset:(x6404 : float) ->
          fun ~value:(x6405 : float) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x6406) "setInt8"
                 [|(Ojs.float_to_js x6404);(Ojs.float_to_js x6405)|])
    let (setInt16 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x6413 : 'tags this) ->
        fun ~byteOffset:(x6408 : float) ->
          fun ~value:(x6409 : float) ->
            fun ?littleEndian:(x6410 : bool option) ->
              fun () ->
                ignore
                  (let x6415 = this_to_js Obj.magic x6413 in
                   Ojs.call (Ojs.get_prop_ascii x6415 "setInt16") "apply"
                     [|x6415;((let x6411 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6411 "push"
                                    [|(Ojs.float_to_js x6408)|]);
                               ignore
                                 (Ojs.call x6411 "push"
                                    [|(Ojs.float_to_js x6409)|]);
                               (match x6410 with
                                | Some x6412 ->
                                    ignore
                                      (Ojs.call x6411 "push"
                                         [|(Ojs.bool_to_js x6412)|])
                                | None -> ());
                               x6411))|])
    let (setInt32 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x6421 : 'tags this) ->
        fun ~byteOffset:(x6416 : float) ->
          fun ~value:(x6417 : float) ->
            fun ?littleEndian:(x6418 : bool option) ->
              fun () ->
                ignore
                  (let x6423 = this_to_js Obj.magic x6421 in
                   Ojs.call (Ojs.get_prop_ascii x6423 "setInt32") "apply"
                     [|x6423;((let x6419 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6419 "push"
                                    [|(Ojs.float_to_js x6416)|]);
                               ignore
                                 (Ojs.call x6419 "push"
                                    [|(Ojs.float_to_js x6417)|]);
                               (match x6418 with
                                | Some x6420 ->
                                    ignore
                                      (Ojs.call x6419 "push"
                                         [|(Ojs.bool_to_js x6420)|])
                                | None -> ());
                               x6419))|])
    let (setUint8 : 'tags this -> byteOffset:float -> value:float -> unit) =
      fun (x6426 : 'tags this) ->
        fun ~byteOffset:(x6424 : float) ->
          fun ~value:(x6425 : float) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x6426) "setUint8"
                 [|(Ojs.float_to_js x6424);(Ojs.float_to_js x6425)|])
    let (setUint16 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x6433 : 'tags this) ->
        fun ~byteOffset:(x6428 : float) ->
          fun ~value:(x6429 : float) ->
            fun ?littleEndian:(x6430 : bool option) ->
              fun () ->
                ignore
                  (let x6435 = this_to_js Obj.magic x6433 in
                   Ojs.call (Ojs.get_prop_ascii x6435 "setUint16") "apply"
                     [|x6435;((let x6431 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6431 "push"
                                    [|(Ojs.float_to_js x6428)|]);
                               ignore
                                 (Ojs.call x6431 "push"
                                    [|(Ojs.float_to_js x6429)|]);
                               (match x6430 with
                                | Some x6432 ->
                                    ignore
                                      (Ojs.call x6431 "push"
                                         [|(Ojs.bool_to_js x6432)|])
                                | None -> ());
                               x6431))|])
    let (setUint32 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x6441 : 'tags this) ->
        fun ~byteOffset:(x6436 : float) ->
          fun ~value:(x6437 : float) ->
            fun ?littleEndian:(x6438 : bool option) ->
              fun () ->
                ignore
                  (let x6443 = this_to_js Obj.magic x6441 in
                   Ojs.call (Ojs.get_prop_ascii x6443 "setUint32") "apply"
                     [|x6443;((let x6439 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6439 "push"
                                    [|(Ojs.float_to_js x6436)|]);
                               ignore
                                 (Ojs.call x6439 "push"
                                    [|(Ojs.float_to_js x6437)|]);
                               (match x6438 with
                                | Some x6440 ->
                                    ignore
                                      (Ojs.call x6439 "push"
                                         [|(Ojs.bool_to_js x6440)|])
                                | None -> ());
                               x6439))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "DataView")
             "prototype")
    let (create :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?byteLength:float -> unit -> t)
      =
      fun ~buffer:(x6444 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x6445 : float option) ->
          fun ?byteLength:(x6446 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "DataView")
                   (let x6447 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x6447 "push"
                         [|(ArrayBufferLike.t_to_js x6444)|]);
                    (match x6445 with
                     | Some x6449 ->
                         ignore
                           (Ojs.call x6447 "push" [|(Ojs.float_to_js x6449)|])
                     | None -> ());
                    (match x6446 with
                     | Some x6448 ->
                         ignore
                           (Ojs.call x6447 "push" [|(Ojs.float_to_js x6448)|])
                     | None -> ());
                    x6447))
    let cast_from = Obj.magic
  end
module ConstructorParameters =
  struct
    module AnonymousInterface8 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x6451 : Ojs.t) -> x6451
        and t_to_js : t -> Ojs.t = fun (x6450 : Ojs.t) -> x6450
        let (create : t -> args:any list -> any) =
          fun (x6455 : t) ->
            fun ~args:(x6452 : any list) ->
              any_of_js
                (Ojs.new_obj_arr (t_to_js x6455)
                   (let x6453 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    List.iter
                      (fun (x6454 : any) ->
                         ignore (Ojs.call x6453 "push" [|(any_to_js x6454)|]))
                      x6452;
                    x6453))
      end
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x6457 : Ojs.t) -> any_of_js x6457
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x6456 : any) -> any_to_js x6456
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x6460 : Ojs.t) -> t_of_js __T_of_js x6460
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x6458 : __T t) -> t_to_js __T_to_js x6458
  end
module ClassDecorator =
  struct
    type t = [ `ClassDecorator ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6463 : Ojs.t) -> t_of_js x6463
    and t_0_to_js : t_0 -> Ojs.t = fun (x6462 : t) -> t_to_js x6462
    type tags = [ `ClassDecorator ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ClassDecorator ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x6466 : Ojs.t) -> intf_of_js __tags_of_js x6466
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x6464 : __tags intf) -> intf_to_js __tags_to_js x6464
    let (apply :
      'tags this -> target:'TFunction -> ('TFunction, unit) union2) =
      fun (x6469 : 'tags this) ->
        fun ~target:(x6468 : 'TFunction) ->
          union2_of_js Obj.magic Ojs.unit_of_js
            (Ojs.apply (this_to_js Obj.magic x6469) [|(Obj.magic x6468)|])
    let cast_from = Obj.magic
  end
module Capitalize =
  struct
    type 'S t = Ojs.t
    let rec t_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t =
      fun (type __S) ->
        fun (__S_of_js : Ojs.t -> __S) -> fun (x6474 : Ojs.t) -> x6474
    and t_to_js : 'S . ('S -> Ojs.t) -> 'S t -> Ojs.t =
      fun (type __S) ->
        fun (__S_to_js : __S -> Ojs.t) -> fun (x6473 : Ojs.t) -> x6473
    type 'S t_1 = 'S t
    let rec t_1_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t_1 =
      fun (type __S) ->
        fun (__S_of_js : Ojs.t -> __S) ->
          fun (x6477 : Ojs.t) -> t_of_js __S_of_js x6477
    and t_1_to_js : 'S . ('S -> Ojs.t) -> 'S t_1 -> Ojs.t =
      fun (type __S) ->
        fun (__S_to_js : __S -> Ojs.t) ->
          fun (x6475 : __S t) -> t_to_js __S_to_js x6475
  end
module ThisParameterType =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x6480 : Ojs.t) -> any_of_js x6480
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x6479 : any) -> any_to_js x6479
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x6483 : Ojs.t) -> t_of_js __T_of_js x6483
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x6481 : __T t) -> t_to_js __T_to_js x6481
  end
module OmitThisParameter =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x6486 : Ojs.t) -> any_of_js x6486
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x6485 : any) -> any_to_js x6485
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x6489 : Ojs.t) -> t_of_js __T_of_js x6489
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x6487 : __T t) -> t_to_js __T_to_js x6487
  end
module CallableFunction =
  struct
    type t = [ `CallableFunction  | `Function  | `Function ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6492 : Ojs.t) -> t_of_js x6492
    and t_0_to_js : t_0 -> Ojs.t = fun (x6491 : t) -> t_to_js x6491
    type tags = [ `CallableFunction  | `Function  | `Function ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `CallableFunction ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x6495 : Ojs.t) -> intf_of_js __tags_of_js x6495
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x6493 : __tags intf) -> intf_to_js __tags_to_js x6493
    let (apply_ : 'tags this -> this:('T -> 'R) -> thisArg:'T -> 'R) =
      fun (x6500 : 'tags this) ->
        fun ~this:(x6497 : 'T -> 'R) ->
          fun ~thisArg:(x6499 : 'T) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x6500) "apply"
                 [|(Ojs.fun_to_js 1
                      (fun (x6498 : Ojs.t) ->
                         Obj.magic (x6497 (Obj.magic x6498))));(Obj.magic
                                                                  x6499)|])
    let (apply_' :
      'tags this ->
        this:(this:'T -> args:any list -> 'R) -> thisArg:'T -> args:'A -> 'R)
      =
      fun (x6507 : 'tags this) ->
        fun ~this:(x6502 : this:'T -> args:any list -> 'R) ->
          fun ~thisArg:(x6505 : 'T) ->
            fun ~args:(x6506 : 'A) ->
              Obj.magic
                (Ojs.call (this_to_js Obj.magic x6507) "apply"
                   [|(Ojs.fun_to_js_args
                        (fun (x6503 : _) ->
                           Obj.magic
                             (x6502 ~this:(Obj.magic (Ojs.array_get x6503 0))
                                ~args:(Ojs.list_of_js_from any_of_js x6503 1))));(
                     Obj.magic x6505);(Obj.magic x6506)|])
    let (call :
      'tags this ->
        this:(this:'T -> args:any list -> 'R) ->
          thisArg:'T -> args:any list -> 'R)
      =
      fun (x6516 : 'tags this) ->
        fun ~this:(x6509 : this:'T -> args:any list -> 'R) ->
          fun ~thisArg:(x6510 : 'T) ->
            fun ~args:(x6511 : any list) ->
              Obj.magic
                (let x6518 = this_to_js Obj.magic x6516 in
                 Ojs.call (Ojs.get_prop_ascii x6518 "call") "apply"
                   [|x6518;((let x6512 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6512 "push"
                                  [|(Ojs.fun_to_js_args
                                       (fun (x6514 : _) ->
                                          Obj.magic
                                            (x6509
                                               ~this:(Obj.magic
                                                        (Ojs.array_get x6514
                                                           0))
                                               ~args:(Ojs.list_of_js_from
                                                        any_of_js x6514 1))))|]);
                             ignore
                               (Ojs.call x6512 "push" [|(Obj.magic x6510)|]);
                             List.iter
                               (fun (x6513 : any) ->
                                  ignore
                                    (Ojs.call x6512 "push"
                                       [|(any_to_js x6513)|])) x6511;
                             x6512))|])
    let (bind :
      'tags this ->
        this:'T -> thisArg:'T ThisParameterType.t -> 'T OmitThisParameter.t)
      =
      fun (x6522 : 'tags this) ->
        fun ~this:(x6519 : 'T) ->
          fun ~thisArg:(x6520 : 'T ThisParameterType.t) ->
            OmitThisParameter.t_of_js Obj.magic
              (Ojs.call (this_to_js Obj.magic x6522) "bind"
                 [|(Obj.magic x6519);(ThisParameterType.t_to_js Obj.magic
                                        x6520)|])
    let (bind' :
      'tags this ->
        this:(this:'T -> arg0:'A0 -> args:any list -> 'R) ->
          thisArg:'T -> arg0:'A0 -> any list -> 'R)
      =
      fun (x6530 : 'tags this) ->
        fun ~this:(x6525 : this:'T -> arg0:'A0 -> args:any list -> 'R) ->
          fun ~thisArg:(x6528 : 'T) ->
            fun ~arg0:(x6529 : 'A0) ->
              fun (x6532 : any list) ->
                Obj.magic
                  (Ojs.call
                     (Ojs.call (this_to_js Obj.magic x6530) "bind"
                        [|(Ojs.fun_to_js_args
                             (fun (x6526 : _) ->
                                Obj.magic
                                  (x6525
                                     ~this:(Obj.magic (Ojs.array_get x6526 0))
                                     ~arg0:(Obj.magic (Ojs.array_get x6526 1))
                                     ~args:(Ojs.list_of_js_from any_of_js
                                              x6526 2))));(Obj.magic x6528);(
                          Obj.magic x6529)|]) "apply"
                     [|Ojs.null;((let x6533 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  List.iter
                                    (fun (x6534 : any) ->
                                       ignore
                                         (Ojs.call x6533 "push"
                                            [|(any_to_js x6534)|])) x6532;
                                  x6533))|])
    let (bind'' :
      'tags this ->
        this:(this:'T -> arg0:'A0 -> arg1:'A1 -> args:any list -> 'R) ->
          thisArg:'T -> arg0:'A0 -> arg1:'A1 -> any list -> 'R)
      =
      fun (x6541 : 'tags this) ->
        fun
          ~this:(x6535 :
                  this:'T -> arg0:'A0 -> arg1:'A1 -> args:any list -> 'R)
          ->
          fun ~thisArg:(x6538 : 'T) ->
            fun ~arg0:(x6539 : 'A0) ->
              fun ~arg1:(x6540 : 'A1) ->
                fun (x6543 : any list) ->
                  Obj.magic
                    (Ojs.call
                       (Ojs.call (this_to_js Obj.magic x6541) "bind"
                          [|(Ojs.fun_to_js_args
                               (fun (x6536 : _) ->
                                  Obj.magic
                                    (x6535
                                       ~this:(Obj.magic
                                                (Ojs.array_get x6536 0))
                                       ~arg0:(Obj.magic
                                                (Ojs.array_get x6536 1))
                                       ~arg1:(Obj.magic
                                                (Ojs.array_get x6536 2))
                                       ~args:(Ojs.list_of_js_from any_of_js
                                                x6536 3))));(Obj.magic x6538);(
                            Obj.magic x6539);(Obj.magic x6540)|]) "apply"
                       [|Ojs.null;((let x6544 =
                                      Ojs.new_obj
                                        (Ojs.get_prop_ascii Ojs.global
                                           "Array") [||] in
                                    List.iter
                                      (fun (x6545 : any) ->
                                         ignore
                                           (Ojs.call x6544 "push"
                                              [|(any_to_js x6545)|])) x6543;
                                    x6544))|])
    let (bind''' :
      'tags this ->
        this:(this:'T ->
                arg0:'A0 -> arg1:'A1 -> arg2:'A2 -> args:any list -> 'R)
          -> thisArg:'T -> arg0:'A0 -> arg1:'A1 -> arg2:'A2 -> any list -> 'R)
      =
      fun (x6553 : 'tags this) ->
        fun
          ~this:(x6546 :
                  this:'T ->
                    arg0:'A0 -> arg1:'A1 -> arg2:'A2 -> args:any list -> 'R)
          ->
          fun ~thisArg:(x6549 : 'T) ->
            fun ~arg0:(x6550 : 'A0) ->
              fun ~arg1:(x6551 : 'A1) ->
                fun ~arg2:(x6552 : 'A2) ->
                  fun (x6555 : any list) ->
                    Obj.magic
                      (Ojs.call
                         (Ojs.call (this_to_js Obj.magic x6553) "bind"
                            [|(Ojs.fun_to_js_args
                                 (fun (x6547 : _) ->
                                    Obj.magic
                                      (x6546
                                         ~this:(Obj.magic
                                                  (Ojs.array_get x6547 0))
                                         ~arg0:(Obj.magic
                                                  (Ojs.array_get x6547 1))
                                         ~arg1:(Obj.magic
                                                  (Ojs.array_get x6547 2))
                                         ~arg2:(Obj.magic
                                                  (Ojs.array_get x6547 3))
                                         ~args:(Ojs.list_of_js_from any_of_js
                                                  x6547 4))));(Obj.magic
                                                                 x6549);(
                              Obj.magic x6550);(Obj.magic x6551);(Obj.magic
                                                                    x6552)|])
                         "apply"
                         [|Ojs.null;((let x6556 =
                                        Ojs.new_obj
                                          (Ojs.get_prop_ascii Ojs.global
                                             "Array") [||] in
                                      List.iter
                                        (fun (x6557 : any) ->
                                           ignore
                                             (Ojs.call x6556 "push"
                                                [|(any_to_js x6557)|])) x6555;
                                      x6556))|])
    let (bind'''' :
      'tags this ->
        this:(this:'T ->
                arg0:'A0 ->
                  arg1:'A1 -> arg2:'A2 -> arg3:'A3 -> args:any list -> 'R)
          ->
          thisArg:'T ->
            arg0:'A0 -> arg1:'A1 -> arg2:'A2 -> arg3:'A3 -> any list -> 'R)
      =
      fun (x6566 : 'tags this) ->
        fun
          ~this:(x6558 :
                  this:'T ->
                    arg0:'A0 ->
                      arg1:'A1 -> arg2:'A2 -> arg3:'A3 -> args:any list -> 'R)
          ->
          fun ~thisArg:(x6561 : 'T) ->
            fun ~arg0:(x6562 : 'A0) ->
              fun ~arg1:(x6563 : 'A1) ->
                fun ~arg2:(x6564 : 'A2) ->
                  fun ~arg3:(x6565 : 'A3) ->
                    fun (x6568 : any list) ->
                      Obj.magic
                        (Ojs.call
                           (Ojs.call (this_to_js Obj.magic x6566) "bind"
                              [|(Ojs.fun_to_js_args
                                   (fun (x6559 : _) ->
                                      Obj.magic
                                        (x6558
                                           ~this:(Obj.magic
                                                    (Ojs.array_get x6559 0))
                                           ~arg0:(Obj.magic
                                                    (Ojs.array_get x6559 1))
                                           ~arg1:(Obj.magic
                                                    (Ojs.array_get x6559 2))
                                           ~arg2:(Obj.magic
                                                    (Ojs.array_get x6559 3))
                                           ~arg3:(Obj.magic
                                                    (Ojs.array_get x6559 4))
                                           ~args:(Ojs.list_of_js_from
                                                    any_of_js x6559 5))));(
                                Obj.magic x6561);(Obj.magic x6562);(Obj.magic
                                                                    x6563);(
                                Obj.magic x6564);(Obj.magic x6565)|]) "apply"
                           [|Ojs.null;((let x6569 =
                                          Ojs.new_obj
                                            (Ojs.get_prop_ascii Ojs.global
                                               "Array") [||] in
                                        List.iter
                                          (fun (x6570 : any) ->
                                             ignore
                                               (Ojs.call x6569 "push"
                                                  [|(any_to_js x6570)|]))
                                          x6568;
                                        x6569))|])
    let (bind''''' :
      'tags this ->
        this:(this:'T -> args:'AX list -> 'R) ->
          thisArg:'T -> args:'AX list -> 'AX list -> 'R)
      =
      fun (x6578 : 'tags this) ->
        fun ~this:(x6571 : this:'T -> args:'AX list -> 'R) ->
          fun ~thisArg:(x6572 : 'T) ->
            fun ~args:(x6573 : 'AX list) ->
              fun (x6581 : 'AX list) ->
                Obj.magic
                  (Ojs.call
                     (let x6580 = this_to_js Obj.magic x6578 in
                      Ojs.call (Ojs.get_prop_ascii x6580 "bind") "apply"
                        [|x6580;((let x6574 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  ignore
                                    (Ojs.call x6574 "push"
                                       [|(Ojs.fun_to_js_args
                                            (fun (x6576 : _) ->
                                               Obj.magic
                                                 (x6571
                                                    ~this:(Obj.magic
                                                             (Ojs.array_get
                                                                x6576 0))
                                                    ~args:(Ojs.list_of_js_from
                                                             Obj.magic x6576
                                                             1))))|]);
                                  ignore
                                    (Ojs.call x6574 "push"
                                       [|(Obj.magic x6572)|]);
                                  List.iter
                                    (fun (x6575 : 'AX) ->
                                       ignore
                                         (Ojs.call x6574 "push"
                                            [|(Obj.magic x6575)|])) x6573;
                                  x6574))|]) "apply"
                     [|Ojs.null;((let x6582 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  List.iter
                                    (fun (x6583 : 'AX) ->
                                       ignore
                                         (Ojs.call x6582 "push"
                                            [|(Obj.magic x6583)|])) x6581;
                                  x6582))|])
    let cast_from = Obj.magic
  end
module Boolean =
  struct
    type t = [ `Boolean ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6585 : Ojs.t) -> t_of_js x6585
    and t_0_to_js : t_0 -> Ojs.t = fun (x6584 : t) -> t_to_js x6584
    type tags = [ `Boolean ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Boolean ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x6588 : Ojs.t) -> intf_of_js __tags_of_js x6588
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x6586 : __tags intf) -> intf_to_js __tags_to_js x6586
    let (valueOf : 'tags this -> bool) =
      fun (x6590 : 'tags this) ->
        Ojs.bool_of_js (Ojs.call (this_to_js Obj.magic x6590) "valueOf" [||])
    let (create : ?value:any -> unit -> t) =
      fun ?value:(x6592 : any option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Boolean")
               (let x6593 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x6592 with
                 | Some x6594 ->
                     ignore (Ojs.call x6593 "push" [|(any_to_js x6594)|])
                 | None -> ());
                x6593))
    let (invoke : ?value:'T -> unit -> bool) =
      fun ?value:(x6595 : 'T option) ->
        fun () ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Boolean") "apply"
               [|Ojs.null;((let x6596 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x6595 with
                             | Some x6597 ->
                                 ignore
                                   (Ojs.call x6596 "push"
                                      [|(Obj.magic x6597)|])
                             | None -> ());
                            x6596))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Boolean")
             "prototype")
    let cast_from = Obj.magic
    let (of_ml : bool -> t) =
      fun (x6598 : bool) -> t_of_js (Ojs.bool_to_js x6598)
    let (to_ml : t -> bool) =
      fun (x6599 : t) ->
        Ojs.bool_of_js (Ojs.call (t_to_js x6599) "valueOf" [||])
  end
module BigIntToLocaleStringOptions =
  struct
    type t = [ `BigIntToLocaleStringOptions ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6601 : Ojs.t) -> t_of_js x6601
    and t_0_to_js : t_0 -> Ojs.t = fun (x6600 : t) -> t_to_js x6600
    type tags = [ `BigIntToLocaleStringOptions ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `BigIntToLocaleStringOptions ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x6604 : Ojs.t) -> intf_of_js __tags_of_js x6604
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x6602 : __tags intf) -> intf_to_js __tags_to_js x6602
    let (get_localeMatcher : 'tags this -> string) =
      fun (x6606 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6606) "localeMatcher")
    let (set_localeMatcher : 'tags this -> string -> unit) =
      fun (x6608 : 'tags this) ->
        fun (x6609 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6608) "localeMatcher"
            (Ojs.string_to_js x6609)
    let (get_style : 'tags this -> string) =
      fun (x6611 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6611) "style")
    let (set_style : 'tags this -> string -> unit) =
      fun (x6613 : 'tags this) ->
        fun (x6614 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6613) "style"
            (Ojs.string_to_js x6614)
    let (get_numberingSystem : 'tags this -> string) =
      fun (x6616 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6616) "numberingSystem")
    let (set_numberingSystem : 'tags this -> string -> unit) =
      fun (x6618 : 'tags this) ->
        fun (x6619 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6618) "numberingSystem"
            (Ojs.string_to_js x6619)
    let (get_unit : 'tags this -> string) =
      fun (x6621 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6621) "unit")
    let (set_unit : 'tags this -> string -> unit) =
      fun (x6623 : 'tags this) ->
        fun (x6624 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6623) "unit"
            (Ojs.string_to_js x6624)
    let (get_unitDisplay : 'tags this -> string) =
      fun (x6626 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6626) "unitDisplay")
    let (set_unitDisplay : 'tags this -> string -> unit) =
      fun (x6628 : 'tags this) ->
        fun (x6629 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6628) "unitDisplay"
            (Ojs.string_to_js x6629)
    let (get_currency : 'tags this -> string) =
      fun (x6631 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6631) "currency")
    let (set_currency : 'tags this -> string -> unit) =
      fun (x6633 : 'tags this) ->
        fun (x6634 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6633) "currency"
            (Ojs.string_to_js x6634)
    let (get_currencyDisplay : 'tags this -> string) =
      fun (x6636 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6636) "currencyDisplay")
    let (set_currencyDisplay : 'tags this -> string -> unit) =
      fun (x6638 : 'tags this) ->
        fun (x6639 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6638) "currencyDisplay"
            (Ojs.string_to_js x6639)
    let (get_useGrouping : 'tags this -> bool) =
      fun (x6641 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6641) "useGrouping")
    let (set_useGrouping : 'tags this -> bool -> unit) =
      fun (x6643 : 'tags this) ->
        fun (x6644 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6643) "useGrouping"
            (Ojs.bool_to_js x6644)
    let (get_minimumIntegerDigits :
      'tags this ->
        [ `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13  | `L_n_14 
        | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19  | `L_n_2 
        | `L_n_20  | `L_n_21  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ])
      =
      fun (x6646 : 'tags this) ->
        let x6648 =
          Ojs.get_prop_ascii (this_to_js Obj.magic x6646)
            "minimumIntegerDigits" in
        match Ojs.int_of_js x6648 with
        | 1 -> `L_n_1
        | 10 -> `L_n_10
        | 11 -> `L_n_11
        | 12 -> `L_n_12
        | 13 -> `L_n_13
        | 14 -> `L_n_14
        | 15 -> `L_n_15
        | 16 -> `L_n_16
        | 17 -> `L_n_17
        | 18 -> `L_n_18
        | 19 -> `L_n_19
        | 2 -> `L_n_2
        | 20 -> `L_n_20
        | 21 -> `L_n_21
        | 3 -> `L_n_3
        | 4 -> `L_n_4
        | 5 -> `L_n_5
        | 6 -> `L_n_6
        | 7 -> `L_n_7
        | 8 -> `L_n_8
        | 9 -> `L_n_9
        | _ -> assert false
    let (set_minimumIntegerDigits :
      'tags this ->
        [ `U1 of [ `L_n_1 ]  | `U2 of [ `L_n_2 ]  | `U3 of [ `L_n_3 ] 
        | `U4 of [ `L_n_4 ]  | `U5 of [ `L_n_5 ]  | `U6 of [ `L_n_6 ] 
        | `U7 of [ `L_n_7 ]  | `U8 of [ `L_n_8 ]  | `U9 of [ `L_n_9 ] 
        | `U10 of [ `L_n_10 ]  | `U11 of [ `L_n_11 ]  | `U12 of [ `L_n_12 ] 
        | `U13 of [ `L_n_13 ]  | `U14 of [ `L_n_14 ]  | `U15 of [ `L_n_15 ] 
        | `U16 of [ `L_n_16 ]  | `U17 of [ `L_n_17 ]  | `U18 of [ `L_n_18 ] 
        | `U19 of [ `L_n_19 ]  | `U20 of [ `L_n_20 ]  | `U21 of [ `L_n_21 ] ]
          -> unit)
      =
      fun (x6649 : 'tags this) ->
        fun
          (x6650 :
            [ `U1 of [ `L_n_1 ]  | `U2 of [ `L_n_2 ]  | `U3 of [ `L_n_3 ] 
            | `U4 of [ `L_n_4 ]  | `U5 of [ `L_n_5 ]  | `U6 of [ `L_n_6 ] 
            | `U7 of [ `L_n_7 ]  | `U8 of [ `L_n_8 ]  | `U9 of [ `L_n_9 ] 
            | `U10 of [ `L_n_10 ]  | `U11 of [ `L_n_11 ] 
            | `U12 of [ `L_n_12 ]  | `U13 of [ `L_n_13 ] 
            | `U14 of [ `L_n_14 ]  | `U15 of [ `L_n_15 ] 
            | `U16 of [ `L_n_16 ]  | `U17 of [ `L_n_17 ] 
            | `U18 of [ `L_n_18 ]  | `U19 of [ `L_n_19 ] 
            | `U20 of [ `L_n_20 ]  | `U21 of [ `L_n_21 ] ])
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6649)
            "minimumIntegerDigits"
            (match x6650 with
             | `U1 x6651 -> (match x6651 with | `L_n_1 -> Ojs.int_to_js 1)
             | `U2 x6652 -> (match x6652 with | `L_n_2 -> Ojs.int_to_js 2)
             | `U3 x6653 -> (match x6653 with | `L_n_3 -> Ojs.int_to_js 3)
             | `U4 x6654 -> (match x6654 with | `L_n_4 -> Ojs.int_to_js 4)
             | `U5 x6655 -> (match x6655 with | `L_n_5 -> Ojs.int_to_js 5)
             | `U6 x6656 -> (match x6656 with | `L_n_6 -> Ojs.int_to_js 6)
             | `U7 x6657 -> (match x6657 with | `L_n_7 -> Ojs.int_to_js 7)
             | `U8 x6658 -> (match x6658 with | `L_n_8 -> Ojs.int_to_js 8)
             | `U9 x6659 -> (match x6659 with | `L_n_9 -> Ojs.int_to_js 9)
             | `U10 x6660 -> (match x6660 with | `L_n_10 -> Ojs.int_to_js 10)
             | `U11 x6661 -> (match x6661 with | `L_n_11 -> Ojs.int_to_js 11)
             | `U12 x6662 -> (match x6662 with | `L_n_12 -> Ojs.int_to_js 12)
             | `U13 x6663 -> (match x6663 with | `L_n_13 -> Ojs.int_to_js 13)
             | `U14 x6664 -> (match x6664 with | `L_n_14 -> Ojs.int_to_js 14)
             | `U15 x6665 -> (match x6665 with | `L_n_15 -> Ojs.int_to_js 15)
             | `U16 x6666 -> (match x6666 with | `L_n_16 -> Ojs.int_to_js 16)
             | `U17 x6667 -> (match x6667 with | `L_n_17 -> Ojs.int_to_js 17)
             | `U18 x6668 -> (match x6668 with | `L_n_18 -> Ojs.int_to_js 18)
             | `U19 x6669 -> (match x6669 with | `L_n_19 -> Ojs.int_to_js 19)
             | `U20 x6670 -> (match x6670 with | `L_n_20 -> Ojs.int_to_js 20)
             | `U21 x6671 -> (match x6671 with | `L_n_21 -> Ojs.int_to_js 21))
    let (get_minimumFractionDigits :
      'tags this ->
        [ `L_n_0  | `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13 
        | `L_n_14  | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19 
        | `L_n_2  | `L_n_20  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ])
      =
      fun (x6673 : 'tags this) ->
        let x6675 =
          Ojs.get_prop_ascii (this_to_js Obj.magic x6673)
            "minimumFractionDigits" in
        match Ojs.int_of_js x6675 with
        | 0 -> `L_n_0
        | 1 -> `L_n_1
        | 10 -> `L_n_10
        | 11 -> `L_n_11
        | 12 -> `L_n_12
        | 13 -> `L_n_13
        | 14 -> `L_n_14
        | 15 -> `L_n_15
        | 16 -> `L_n_16
        | 17 -> `L_n_17
        | 18 -> `L_n_18
        | 19 -> `L_n_19
        | 2 -> `L_n_2
        | 20 -> `L_n_20
        | 3 -> `L_n_3
        | 4 -> `L_n_4
        | 5 -> `L_n_5
        | 6 -> `L_n_6
        | 7 -> `L_n_7
        | 8 -> `L_n_8
        | 9 -> `L_n_9
        | _ -> assert false
    let (set_minimumFractionDigits :
      'tags this ->
        [ `U1 of [ `L_n_0 ]  | `U2 of [ `L_n_1 ]  | `U3 of [ `L_n_2 ] 
        | `U4 of [ `L_n_3 ]  | `U5 of [ `L_n_4 ]  | `U6 of [ `L_n_5 ] 
        | `U7 of [ `L_n_6 ]  | `U8 of [ `L_n_7 ]  | `U9 of [ `L_n_8 ] 
        | `U10 of [ `L_n_9 ]  | `U11 of [ `L_n_10 ]  | `U12 of [ `L_n_11 ] 
        | `U13 of [ `L_n_12 ]  | `U14 of [ `L_n_13 ]  | `U15 of [ `L_n_14 ] 
        | `U16 of [ `L_n_15 ]  | `U17 of [ `L_n_16 ]  | `U18 of [ `L_n_17 ] 
        | `U19 of [ `L_n_18 ]  | `U20 of [ `L_n_19 ]  | `U21 of [ `L_n_20 ] ]
          -> unit)
      =
      fun (x6676 : 'tags this) ->
        fun
          (x6677 :
            [ `U1 of [ `L_n_0 ]  | `U2 of [ `L_n_1 ]  | `U3 of [ `L_n_2 ] 
            | `U4 of [ `L_n_3 ]  | `U5 of [ `L_n_4 ]  | `U6 of [ `L_n_5 ] 
            | `U7 of [ `L_n_6 ]  | `U8 of [ `L_n_7 ]  | `U9 of [ `L_n_8 ] 
            | `U10 of [ `L_n_9 ]  | `U11 of [ `L_n_10 ] 
            | `U12 of [ `L_n_11 ]  | `U13 of [ `L_n_12 ] 
            | `U14 of [ `L_n_13 ]  | `U15 of [ `L_n_14 ] 
            | `U16 of [ `L_n_15 ]  | `U17 of [ `L_n_16 ] 
            | `U18 of [ `L_n_17 ]  | `U19 of [ `L_n_18 ] 
            | `U20 of [ `L_n_19 ]  | `U21 of [ `L_n_20 ] ])
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6676)
            "minimumFractionDigits"
            (match x6677 with
             | `U1 x6678 -> (match x6678 with | `L_n_0 -> Ojs.int_to_js 0)
             | `U2 x6679 -> (match x6679 with | `L_n_1 -> Ojs.int_to_js 1)
             | `U3 x6680 -> (match x6680 with | `L_n_2 -> Ojs.int_to_js 2)
             | `U4 x6681 -> (match x6681 with | `L_n_3 -> Ojs.int_to_js 3)
             | `U5 x6682 -> (match x6682 with | `L_n_4 -> Ojs.int_to_js 4)
             | `U6 x6683 -> (match x6683 with | `L_n_5 -> Ojs.int_to_js 5)
             | `U7 x6684 -> (match x6684 with | `L_n_6 -> Ojs.int_to_js 6)
             | `U8 x6685 -> (match x6685 with | `L_n_7 -> Ojs.int_to_js 7)
             | `U9 x6686 -> (match x6686 with | `L_n_8 -> Ojs.int_to_js 8)
             | `U10 x6687 -> (match x6687 with | `L_n_9 -> Ojs.int_to_js 9)
             | `U11 x6688 -> (match x6688 with | `L_n_10 -> Ojs.int_to_js 10)
             | `U12 x6689 -> (match x6689 with | `L_n_11 -> Ojs.int_to_js 11)
             | `U13 x6690 -> (match x6690 with | `L_n_12 -> Ojs.int_to_js 12)
             | `U14 x6691 -> (match x6691 with | `L_n_13 -> Ojs.int_to_js 13)
             | `U15 x6692 -> (match x6692 with | `L_n_14 -> Ojs.int_to_js 14)
             | `U16 x6693 -> (match x6693 with | `L_n_15 -> Ojs.int_to_js 15)
             | `U17 x6694 -> (match x6694 with | `L_n_16 -> Ojs.int_to_js 16)
             | `U18 x6695 -> (match x6695 with | `L_n_17 -> Ojs.int_to_js 17)
             | `U19 x6696 -> (match x6696 with | `L_n_18 -> Ojs.int_to_js 18)
             | `U20 x6697 -> (match x6697 with | `L_n_19 -> Ojs.int_to_js 19)
             | `U21 x6698 -> (match x6698 with | `L_n_20 -> Ojs.int_to_js 20))
    let (get_maximumFractionDigits :
      'tags this ->
        [ `L_n_0  | `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13 
        | `L_n_14  | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19 
        | `L_n_2  | `L_n_20  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ])
      =
      fun (x6700 : 'tags this) ->
        let x6702 =
          Ojs.get_prop_ascii (this_to_js Obj.magic x6700)
            "maximumFractionDigits" in
        match Ojs.int_of_js x6702 with
        | 0 -> `L_n_0
        | 1 -> `L_n_1
        | 10 -> `L_n_10
        | 11 -> `L_n_11
        | 12 -> `L_n_12
        | 13 -> `L_n_13
        | 14 -> `L_n_14
        | 15 -> `L_n_15
        | 16 -> `L_n_16
        | 17 -> `L_n_17
        | 18 -> `L_n_18
        | 19 -> `L_n_19
        | 2 -> `L_n_2
        | 20 -> `L_n_20
        | 3 -> `L_n_3
        | 4 -> `L_n_4
        | 5 -> `L_n_5
        | 6 -> `L_n_6
        | 7 -> `L_n_7
        | 8 -> `L_n_8
        | 9 -> `L_n_9
        | _ -> assert false
    let (set_maximumFractionDigits :
      'tags this ->
        [ `U1 of [ `L_n_0 ]  | `U2 of [ `L_n_1 ]  | `U3 of [ `L_n_2 ] 
        | `U4 of [ `L_n_3 ]  | `U5 of [ `L_n_4 ]  | `U6 of [ `L_n_5 ] 
        | `U7 of [ `L_n_6 ]  | `U8 of [ `L_n_7 ]  | `U9 of [ `L_n_8 ] 
        | `U10 of [ `L_n_9 ]  | `U11 of [ `L_n_10 ]  | `U12 of [ `L_n_11 ] 
        | `U13 of [ `L_n_12 ]  | `U14 of [ `L_n_13 ]  | `U15 of [ `L_n_14 ] 
        | `U16 of [ `L_n_15 ]  | `U17 of [ `L_n_16 ]  | `U18 of [ `L_n_17 ] 
        | `U19 of [ `L_n_18 ]  | `U20 of [ `L_n_19 ]  | `U21 of [ `L_n_20 ] ]
          -> unit)
      =
      fun (x6703 : 'tags this) ->
        fun
          (x6704 :
            [ `U1 of [ `L_n_0 ]  | `U2 of [ `L_n_1 ]  | `U3 of [ `L_n_2 ] 
            | `U4 of [ `L_n_3 ]  | `U5 of [ `L_n_4 ]  | `U6 of [ `L_n_5 ] 
            | `U7 of [ `L_n_6 ]  | `U8 of [ `L_n_7 ]  | `U9 of [ `L_n_8 ] 
            | `U10 of [ `L_n_9 ]  | `U11 of [ `L_n_10 ] 
            | `U12 of [ `L_n_11 ]  | `U13 of [ `L_n_12 ] 
            | `U14 of [ `L_n_13 ]  | `U15 of [ `L_n_14 ] 
            | `U16 of [ `L_n_15 ]  | `U17 of [ `L_n_16 ] 
            | `U18 of [ `L_n_17 ]  | `U19 of [ `L_n_18 ] 
            | `U20 of [ `L_n_19 ]  | `U21 of [ `L_n_20 ] ])
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6703)
            "maximumFractionDigits"
            (match x6704 with
             | `U1 x6705 -> (match x6705 with | `L_n_0 -> Ojs.int_to_js 0)
             | `U2 x6706 -> (match x6706 with | `L_n_1 -> Ojs.int_to_js 1)
             | `U3 x6707 -> (match x6707 with | `L_n_2 -> Ojs.int_to_js 2)
             | `U4 x6708 -> (match x6708 with | `L_n_3 -> Ojs.int_to_js 3)
             | `U5 x6709 -> (match x6709 with | `L_n_4 -> Ojs.int_to_js 4)
             | `U6 x6710 -> (match x6710 with | `L_n_5 -> Ojs.int_to_js 5)
             | `U7 x6711 -> (match x6711 with | `L_n_6 -> Ojs.int_to_js 6)
             | `U8 x6712 -> (match x6712 with | `L_n_7 -> Ojs.int_to_js 7)
             | `U9 x6713 -> (match x6713 with | `L_n_8 -> Ojs.int_to_js 8)
             | `U10 x6714 -> (match x6714 with | `L_n_9 -> Ojs.int_to_js 9)
             | `U11 x6715 -> (match x6715 with | `L_n_10 -> Ojs.int_to_js 10)
             | `U12 x6716 -> (match x6716 with | `L_n_11 -> Ojs.int_to_js 11)
             | `U13 x6717 -> (match x6717 with | `L_n_12 -> Ojs.int_to_js 12)
             | `U14 x6718 -> (match x6718 with | `L_n_13 -> Ojs.int_to_js 13)
             | `U15 x6719 -> (match x6719 with | `L_n_14 -> Ojs.int_to_js 14)
             | `U16 x6720 -> (match x6720 with | `L_n_15 -> Ojs.int_to_js 15)
             | `U17 x6721 -> (match x6721 with | `L_n_16 -> Ojs.int_to_js 16)
             | `U18 x6722 -> (match x6722 with | `L_n_17 -> Ojs.int_to_js 17)
             | `U19 x6723 -> (match x6723 with | `L_n_18 -> Ojs.int_to_js 18)
             | `U20 x6724 -> (match x6724 with | `L_n_19 -> Ojs.int_to_js 19)
             | `U21 x6725 -> (match x6725 with | `L_n_20 -> Ojs.int_to_js 20))
    let (get_minimumSignificantDigits :
      'tags this ->
        [ `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13  | `L_n_14 
        | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19  | `L_n_2 
        | `L_n_20  | `L_n_21  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ])
      =
      fun (x6727 : 'tags this) ->
        let x6729 =
          Ojs.get_prop_ascii (this_to_js Obj.magic x6727)
            "minimumSignificantDigits" in
        match Ojs.int_of_js x6729 with
        | 1 -> `L_n_1
        | 10 -> `L_n_10
        | 11 -> `L_n_11
        | 12 -> `L_n_12
        | 13 -> `L_n_13
        | 14 -> `L_n_14
        | 15 -> `L_n_15
        | 16 -> `L_n_16
        | 17 -> `L_n_17
        | 18 -> `L_n_18
        | 19 -> `L_n_19
        | 2 -> `L_n_2
        | 20 -> `L_n_20
        | 21 -> `L_n_21
        | 3 -> `L_n_3
        | 4 -> `L_n_4
        | 5 -> `L_n_5
        | 6 -> `L_n_6
        | 7 -> `L_n_7
        | 8 -> `L_n_8
        | 9 -> `L_n_9
        | _ -> assert false
    let (set_minimumSignificantDigits :
      'tags this ->
        [ `U1 of [ `L_n_1 ]  | `U2 of [ `L_n_2 ]  | `U3 of [ `L_n_3 ] 
        | `U4 of [ `L_n_4 ]  | `U5 of [ `L_n_5 ]  | `U6 of [ `L_n_6 ] 
        | `U7 of [ `L_n_7 ]  | `U8 of [ `L_n_8 ]  | `U9 of [ `L_n_9 ] 
        | `U10 of [ `L_n_10 ]  | `U11 of [ `L_n_11 ]  | `U12 of [ `L_n_12 ] 
        | `U13 of [ `L_n_13 ]  | `U14 of [ `L_n_14 ]  | `U15 of [ `L_n_15 ] 
        | `U16 of [ `L_n_16 ]  | `U17 of [ `L_n_17 ]  | `U18 of [ `L_n_18 ] 
        | `U19 of [ `L_n_19 ]  | `U20 of [ `L_n_20 ]  | `U21 of [ `L_n_21 ] ]
          -> unit)
      =
      fun (x6730 : 'tags this) ->
        fun
          (x6731 :
            [ `U1 of [ `L_n_1 ]  | `U2 of [ `L_n_2 ]  | `U3 of [ `L_n_3 ] 
            | `U4 of [ `L_n_4 ]  | `U5 of [ `L_n_5 ]  | `U6 of [ `L_n_6 ] 
            | `U7 of [ `L_n_7 ]  | `U8 of [ `L_n_8 ]  | `U9 of [ `L_n_9 ] 
            | `U10 of [ `L_n_10 ]  | `U11 of [ `L_n_11 ] 
            | `U12 of [ `L_n_12 ]  | `U13 of [ `L_n_13 ] 
            | `U14 of [ `L_n_14 ]  | `U15 of [ `L_n_15 ] 
            | `U16 of [ `L_n_16 ]  | `U17 of [ `L_n_17 ] 
            | `U18 of [ `L_n_18 ]  | `U19 of [ `L_n_19 ] 
            | `U20 of [ `L_n_20 ]  | `U21 of [ `L_n_21 ] ])
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6730)
            "minimumSignificantDigits"
            (match x6731 with
             | `U1 x6732 -> (match x6732 with | `L_n_1 -> Ojs.int_to_js 1)
             | `U2 x6733 -> (match x6733 with | `L_n_2 -> Ojs.int_to_js 2)
             | `U3 x6734 -> (match x6734 with | `L_n_3 -> Ojs.int_to_js 3)
             | `U4 x6735 -> (match x6735 with | `L_n_4 -> Ojs.int_to_js 4)
             | `U5 x6736 -> (match x6736 with | `L_n_5 -> Ojs.int_to_js 5)
             | `U6 x6737 -> (match x6737 with | `L_n_6 -> Ojs.int_to_js 6)
             | `U7 x6738 -> (match x6738 with | `L_n_7 -> Ojs.int_to_js 7)
             | `U8 x6739 -> (match x6739 with | `L_n_8 -> Ojs.int_to_js 8)
             | `U9 x6740 -> (match x6740 with | `L_n_9 -> Ojs.int_to_js 9)
             | `U10 x6741 -> (match x6741 with | `L_n_10 -> Ojs.int_to_js 10)
             | `U11 x6742 -> (match x6742 with | `L_n_11 -> Ojs.int_to_js 11)
             | `U12 x6743 -> (match x6743 with | `L_n_12 -> Ojs.int_to_js 12)
             | `U13 x6744 -> (match x6744 with | `L_n_13 -> Ojs.int_to_js 13)
             | `U14 x6745 -> (match x6745 with | `L_n_14 -> Ojs.int_to_js 14)
             | `U15 x6746 -> (match x6746 with | `L_n_15 -> Ojs.int_to_js 15)
             | `U16 x6747 -> (match x6747 with | `L_n_16 -> Ojs.int_to_js 16)
             | `U17 x6748 -> (match x6748 with | `L_n_17 -> Ojs.int_to_js 17)
             | `U18 x6749 -> (match x6749 with | `L_n_18 -> Ojs.int_to_js 18)
             | `U19 x6750 -> (match x6750 with | `L_n_19 -> Ojs.int_to_js 19)
             | `U20 x6751 -> (match x6751 with | `L_n_20 -> Ojs.int_to_js 20)
             | `U21 x6752 -> (match x6752 with | `L_n_21 -> Ojs.int_to_js 21))
    let (get_maximumSignificantDigits :
      'tags this ->
        [ `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13  | `L_n_14 
        | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19  | `L_n_2 
        | `L_n_20  | `L_n_21  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ])
      =
      fun (x6754 : 'tags this) ->
        let x6756 =
          Ojs.get_prop_ascii (this_to_js Obj.magic x6754)
            "maximumSignificantDigits" in
        match Ojs.int_of_js x6756 with
        | 1 -> `L_n_1
        | 10 -> `L_n_10
        | 11 -> `L_n_11
        | 12 -> `L_n_12
        | 13 -> `L_n_13
        | 14 -> `L_n_14
        | 15 -> `L_n_15
        | 16 -> `L_n_16
        | 17 -> `L_n_17
        | 18 -> `L_n_18
        | 19 -> `L_n_19
        | 2 -> `L_n_2
        | 20 -> `L_n_20
        | 21 -> `L_n_21
        | 3 -> `L_n_3
        | 4 -> `L_n_4
        | 5 -> `L_n_5
        | 6 -> `L_n_6
        | 7 -> `L_n_7
        | 8 -> `L_n_8
        | 9 -> `L_n_9
        | _ -> assert false
    let (set_maximumSignificantDigits :
      'tags this ->
        [ `U1 of [ `L_n_1 ]  | `U2 of [ `L_n_2 ]  | `U3 of [ `L_n_3 ] 
        | `U4 of [ `L_n_4 ]  | `U5 of [ `L_n_5 ]  | `U6 of [ `L_n_6 ] 
        | `U7 of [ `L_n_7 ]  | `U8 of [ `L_n_8 ]  | `U9 of [ `L_n_9 ] 
        | `U10 of [ `L_n_10 ]  | `U11 of [ `L_n_11 ]  | `U12 of [ `L_n_12 ] 
        | `U13 of [ `L_n_13 ]  | `U14 of [ `L_n_14 ]  | `U15 of [ `L_n_15 ] 
        | `U16 of [ `L_n_16 ]  | `U17 of [ `L_n_17 ]  | `U18 of [ `L_n_18 ] 
        | `U19 of [ `L_n_19 ]  | `U20 of [ `L_n_20 ]  | `U21 of [ `L_n_21 ] ]
          -> unit)
      =
      fun (x6757 : 'tags this) ->
        fun
          (x6758 :
            [ `U1 of [ `L_n_1 ]  | `U2 of [ `L_n_2 ]  | `U3 of [ `L_n_3 ] 
            | `U4 of [ `L_n_4 ]  | `U5 of [ `L_n_5 ]  | `U6 of [ `L_n_6 ] 
            | `U7 of [ `L_n_7 ]  | `U8 of [ `L_n_8 ]  | `U9 of [ `L_n_9 ] 
            | `U10 of [ `L_n_10 ]  | `U11 of [ `L_n_11 ] 
            | `U12 of [ `L_n_12 ]  | `U13 of [ `L_n_13 ] 
            | `U14 of [ `L_n_14 ]  | `U15 of [ `L_n_15 ] 
            | `U16 of [ `L_n_16 ]  | `U17 of [ `L_n_17 ] 
            | `U18 of [ `L_n_18 ]  | `U19 of [ `L_n_19 ] 
            | `U20 of [ `L_n_20 ]  | `U21 of [ `L_n_21 ] ])
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6757)
            "maximumSignificantDigits"
            (match x6758 with
             | `U1 x6759 -> (match x6759 with | `L_n_1 -> Ojs.int_to_js 1)
             | `U2 x6760 -> (match x6760 with | `L_n_2 -> Ojs.int_to_js 2)
             | `U3 x6761 -> (match x6761 with | `L_n_3 -> Ojs.int_to_js 3)
             | `U4 x6762 -> (match x6762 with | `L_n_4 -> Ojs.int_to_js 4)
             | `U5 x6763 -> (match x6763 with | `L_n_5 -> Ojs.int_to_js 5)
             | `U6 x6764 -> (match x6764 with | `L_n_6 -> Ojs.int_to_js 6)
             | `U7 x6765 -> (match x6765 with | `L_n_7 -> Ojs.int_to_js 7)
             | `U8 x6766 -> (match x6766 with | `L_n_8 -> Ojs.int_to_js 8)
             | `U9 x6767 -> (match x6767 with | `L_n_9 -> Ojs.int_to_js 9)
             | `U10 x6768 -> (match x6768 with | `L_n_10 -> Ojs.int_to_js 10)
             | `U11 x6769 -> (match x6769 with | `L_n_11 -> Ojs.int_to_js 11)
             | `U12 x6770 -> (match x6770 with | `L_n_12 -> Ojs.int_to_js 12)
             | `U13 x6771 -> (match x6771 with | `L_n_13 -> Ojs.int_to_js 13)
             | `U14 x6772 -> (match x6772 with | `L_n_14 -> Ojs.int_to_js 14)
             | `U15 x6773 -> (match x6773 with | `L_n_15 -> Ojs.int_to_js 15)
             | `U16 x6774 -> (match x6774 with | `L_n_16 -> Ojs.int_to_js 16)
             | `U17 x6775 -> (match x6775 with | `L_n_17 -> Ojs.int_to_js 17)
             | `U18 x6776 -> (match x6776 with | `L_n_18 -> Ojs.int_to_js 18)
             | `U19 x6777 -> (match x6777 with | `L_n_19 -> Ojs.int_to_js 19)
             | `U20 x6778 -> (match x6778 with | `L_n_20 -> Ojs.int_to_js 20)
             | `U21 x6779 -> (match x6779 with | `L_n_21 -> Ojs.int_to_js 21))
    let (get_notation : 'tags this -> string) =
      fun (x6781 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6781) "notation")
    let (set_notation : 'tags this -> string -> unit) =
      fun (x6783 : 'tags this) ->
        fun (x6784 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6783) "notation"
            (Ojs.string_to_js x6784)
    let (get_compactDisplay : 'tags this -> string) =
      fun (x6786 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6786) "compactDisplay")
    let (set_compactDisplay : 'tags this -> string -> unit) =
      fun (x6788 : 'tags this) ->
        fun (x6789 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6788) "compactDisplay"
            (Ojs.string_to_js x6789)
    let (create :
      localeMatcher:string ->
        style:string ->
          numberingSystem:string ->
            unit:string ->
              unitDisplay:string ->
                currency:string ->
                  currencyDisplay:string ->
                    useGrouping:bool ->
                      minimumIntegerDigits:[ `L_n_1  | `L_n_10  | `L_n_11 
                                           | `L_n_12  | `L_n_13  | `L_n_14 
                                           | `L_n_15  | `L_n_16  | `L_n_17 
                                           | `L_n_18  | `L_n_19  | `L_n_2 
                                           | `L_n_20  | `L_n_21  | `L_n_3 
                                           | `L_n_4  | `L_n_5  | `L_n_6 
                                           | `L_n_7  | `L_n_8  | `L_n_9 ]
                        ->
                        minimumFractionDigits:[ `L_n_0  | `L_n_1  | `L_n_10 
                                              | `L_n_11  | `L_n_12 
                                              | `L_n_13  | `L_n_14 
                                              | `L_n_15  | `L_n_16 
                                              | `L_n_17  | `L_n_18 
                                              | `L_n_19  | `L_n_2  | 
                                                `L_n_20 
                                              | `L_n_3  | `L_n_4  | `L_n_5 
                                              | `L_n_6  | `L_n_7  | `L_n_8 
                                              | `L_n_9 ]
                          ->
                          maximumFractionDigits:[ `L_n_0  | `L_n_1 
                                                | `L_n_10  | `L_n_11 
                                                | `L_n_12  | `L_n_13 
                                                | `L_n_14  | `L_n_15 
                                                | `L_n_16  | `L_n_17 
                                                | `L_n_18  | `L_n_19 
                                                | `L_n_2  | `L_n_20 
                                                | `L_n_3  | `L_n_4  | 
                                                  `L_n_5 
                                                | `L_n_6  | `L_n_7  | 
                                                  `L_n_8 
                                                | `L_n_9 ]
                            ->
                            minimumSignificantDigits:[ `L_n_1  | `L_n_10 
                                                     | `L_n_11  | `L_n_12 
                                                     | `L_n_13  | `L_n_14 
                                                     | `L_n_15  | `L_n_16 
                                                     | `L_n_17  | `L_n_18 
                                                     | `L_n_19  | `L_n_2 
                                                     | `L_n_20  | `L_n_21 
                                                     | `L_n_3  | `L_n_4 
                                                     | `L_n_5  | `L_n_6 
                                                     | `L_n_7  | `L_n_8 
                                                     | `L_n_9 ]
                              ->
                              maximumSignificantDigits:[ `L_n_1  | `L_n_10 
                                                       | `L_n_11  | `L_n_12 
                                                       | `L_n_13  | `L_n_14 
                                                       | `L_n_15  | `L_n_16 
                                                       | `L_n_17  | `L_n_18 
                                                       | `L_n_19  | `L_n_2 
                                                       | `L_n_20  | `L_n_21 
                                                       | `L_n_3  | `L_n_4 
                                                       | `L_n_5  | `L_n_6 
                                                       | `L_n_7  | `L_n_8 
                                                       | `L_n_9 ]
                                ->
                                notation:string ->
                                  compactDisplay:string -> unit -> t)
      =
      fun ~localeMatcher:(x6791 : string) ->
        fun ~style:(x6792 : string) ->
          fun ~numberingSystem:(x6793 : string) ->
            fun ~unit:(x6794 : string) ->
              fun ~unitDisplay:(x6795 : string) ->
                fun ~currency:(x6796 : string) ->
                  fun ~currencyDisplay:(x6797 : string) ->
                    fun ~useGrouping:(x6798 : bool) ->
                      fun
                        ~minimumIntegerDigits:(x6799 :
                                                [ `L_n_1  | `L_n_10 
                                                | `L_n_11  | `L_n_12 
                                                | `L_n_13  | `L_n_14 
                                                | `L_n_15  | `L_n_16 
                                                | `L_n_17  | `L_n_18 
                                                | `L_n_19  | `L_n_2 
                                                | `L_n_20  | `L_n_21 
                                                | `L_n_3  | `L_n_4  | 
                                                  `L_n_5 
                                                | `L_n_6  | `L_n_7  | 
                                                  `L_n_8 
                                                | `L_n_9 ])
                        ->
                        fun
                          ~minimumFractionDigits:(x6800 :
                                                   [ `L_n_0  | `L_n_1 
                                                   | `L_n_10  | `L_n_11 
                                                   | `L_n_12  | `L_n_13 
                                                   | `L_n_14  | `L_n_15 
                                                   | `L_n_16  | `L_n_17 
                                                   | `L_n_18  | `L_n_19 
                                                   | `L_n_2  | `L_n_20 
                                                   | `L_n_3  | `L_n_4 
                                                   | `L_n_5  | `L_n_6 
                                                   | `L_n_7  | `L_n_8 
                                                   | `L_n_9 ])
                          ->
                          fun
                            ~maximumFractionDigits:(x6801 :
                                                     [ `L_n_0  | `L_n_1 
                                                     | `L_n_10  | `L_n_11 
                                                     | `L_n_12  | `L_n_13 
                                                     | `L_n_14  | `L_n_15 
                                                     | `L_n_16  | `L_n_17 
                                                     | `L_n_18  | `L_n_19 
                                                     | `L_n_2  | `L_n_20 
                                                     | `L_n_3  | `L_n_4 
                                                     | `L_n_5  | `L_n_6 
                                                     | `L_n_7  | `L_n_8 
                                                     | `L_n_9 ])
                            ->
                            fun
                              ~minimumSignificantDigits:(x6802 :
                                                          [ `L_n_1 
                                                          | `L_n_10 
                                                          | `L_n_11 
                                                          | `L_n_12 
                                                          | `L_n_13 
                                                          | `L_n_14 
                                                          | `L_n_15 
                                                          | `L_n_16 
                                                          | `L_n_17 
                                                          | `L_n_18 
                                                          | `L_n_19 
                                                          | `L_n_2 
                                                          | `L_n_20 
                                                          | `L_n_21 
                                                          | `L_n_3  | 
                                                            `L_n_4 
                                                          | `L_n_5  | 
                                                            `L_n_6 
                                                          | `L_n_7  | 
                                                            `L_n_8 
                                                          | `L_n_9 ])
                              ->
                              fun
                                ~maximumSignificantDigits:(x6803 :
                                                            [ `L_n_1 
                                                            | `L_n_10 
                                                            | `L_n_11 
                                                            | `L_n_12 
                                                            | `L_n_13 
                                                            | `L_n_14 
                                                            | `L_n_15 
                                                            | `L_n_16 
                                                            | `L_n_17 
                                                            | `L_n_18 
                                                            | `L_n_19 
                                                            | `L_n_2 
                                                            | `L_n_20 
                                                            | `L_n_21 
                                                            | `L_n_3 
                                                            | `L_n_4 
                                                            | `L_n_5 
                                                            | `L_n_6 
                                                            | `L_n_7 
                                                            | `L_n_8 
                                                            | `L_n_9 ])
                                ->
                                fun ~notation:(x6804 : string) ->
                                  fun ~compactDisplay:(x6805 : string) ->
                                    fun () ->
                                      let x6806 = Ojs.empty_obj () in
                                      Ojs.set_prop_ascii x6806
                                        "localeMatcher"
                                        (Ojs.string_to_js x6791);
                                      Ojs.set_prop_ascii x6806 "style"
                                        (Ojs.string_to_js x6792);
                                      Ojs.set_prop_ascii x6806
                                        "numberingSystem"
                                        (Ojs.string_to_js x6793);
                                      Ojs.set_prop_ascii x6806 "unit"
                                        (Ojs.string_to_js x6794);
                                      Ojs.set_prop_ascii x6806 "unitDisplay"
                                        (Ojs.string_to_js x6795);
                                      Ojs.set_prop_ascii x6806 "currency"
                                        (Ojs.string_to_js x6796);
                                      Ojs.set_prop_ascii x6806
                                        "currencyDisplay"
                                        (Ojs.string_to_js x6797);
                                      Ojs.set_prop_ascii x6806 "useGrouping"
                                        (Ojs.bool_to_js x6798);
                                      Ojs.set_prop_ascii x6806
                                        "minimumIntegerDigits"
                                        (match x6799 with
                                         | `L_n_1 -> Ojs.int_to_js 1
                                         | `L_n_10 -> Ojs.int_to_js 10
                                         | `L_n_11 -> Ojs.int_to_js 11
                                         | `L_n_12 -> Ojs.int_to_js 12
                                         | `L_n_13 -> Ojs.int_to_js 13
                                         | `L_n_14 -> Ojs.int_to_js 14
                                         | `L_n_15 -> Ojs.int_to_js 15
                                         | `L_n_16 -> Ojs.int_to_js 16
                                         | `L_n_17 -> Ojs.int_to_js 17
                                         | `L_n_18 -> Ojs.int_to_js 18
                                         | `L_n_19 -> Ojs.int_to_js 19
                                         | `L_n_2 -> Ojs.int_to_js 2
                                         | `L_n_20 -> Ojs.int_to_js 20
                                         | `L_n_21 -> Ojs.int_to_js 21
                                         | `L_n_3 -> Ojs.int_to_js 3
                                         | `L_n_4 -> Ojs.int_to_js 4
                                         | `L_n_5 -> Ojs.int_to_js 5
                                         | `L_n_6 -> Ojs.int_to_js 6
                                         | `L_n_7 -> Ojs.int_to_js 7
                                         | `L_n_8 -> Ojs.int_to_js 8
                                         | `L_n_9 -> Ojs.int_to_js 9);
                                      Ojs.set_prop_ascii x6806
                                        "minimumFractionDigits"
                                        (match x6800 with
                                         | `L_n_0 -> Ojs.int_to_js 0
                                         | `L_n_1 -> Ojs.int_to_js 1
                                         | `L_n_10 -> Ojs.int_to_js 10
                                         | `L_n_11 -> Ojs.int_to_js 11
                                         | `L_n_12 -> Ojs.int_to_js 12
                                         | `L_n_13 -> Ojs.int_to_js 13
                                         | `L_n_14 -> Ojs.int_to_js 14
                                         | `L_n_15 -> Ojs.int_to_js 15
                                         | `L_n_16 -> Ojs.int_to_js 16
                                         | `L_n_17 -> Ojs.int_to_js 17
                                         | `L_n_18 -> Ojs.int_to_js 18
                                         | `L_n_19 -> Ojs.int_to_js 19
                                         | `L_n_2 -> Ojs.int_to_js 2
                                         | `L_n_20 -> Ojs.int_to_js 20
                                         | `L_n_3 -> Ojs.int_to_js 3
                                         | `L_n_4 -> Ojs.int_to_js 4
                                         | `L_n_5 -> Ojs.int_to_js 5
                                         | `L_n_6 -> Ojs.int_to_js 6
                                         | `L_n_7 -> Ojs.int_to_js 7
                                         | `L_n_8 -> Ojs.int_to_js 8
                                         | `L_n_9 -> Ojs.int_to_js 9);
                                      Ojs.set_prop_ascii x6806
                                        "maximumFractionDigits"
                                        (match x6801 with
                                         | `L_n_0 -> Ojs.int_to_js 0
                                         | `L_n_1 -> Ojs.int_to_js 1
                                         | `L_n_10 -> Ojs.int_to_js 10
                                         | `L_n_11 -> Ojs.int_to_js 11
                                         | `L_n_12 -> Ojs.int_to_js 12
                                         | `L_n_13 -> Ojs.int_to_js 13
                                         | `L_n_14 -> Ojs.int_to_js 14
                                         | `L_n_15 -> Ojs.int_to_js 15
                                         | `L_n_16 -> Ojs.int_to_js 16
                                         | `L_n_17 -> Ojs.int_to_js 17
                                         | `L_n_18 -> Ojs.int_to_js 18
                                         | `L_n_19 -> Ojs.int_to_js 19
                                         | `L_n_2 -> Ojs.int_to_js 2
                                         | `L_n_20 -> Ojs.int_to_js 20
                                         | `L_n_3 -> Ojs.int_to_js 3
                                         | `L_n_4 -> Ojs.int_to_js 4
                                         | `L_n_5 -> Ojs.int_to_js 5
                                         | `L_n_6 -> Ojs.int_to_js 6
                                         | `L_n_7 -> Ojs.int_to_js 7
                                         | `L_n_8 -> Ojs.int_to_js 8
                                         | `L_n_9 -> Ojs.int_to_js 9);
                                      Ojs.set_prop_ascii x6806
                                        "minimumSignificantDigits"
                                        (match x6802 with
                                         | `L_n_1 -> Ojs.int_to_js 1
                                         | `L_n_10 -> Ojs.int_to_js 10
                                         | `L_n_11 -> Ojs.int_to_js 11
                                         | `L_n_12 -> Ojs.int_to_js 12
                                         | `L_n_13 -> Ojs.int_to_js 13
                                         | `L_n_14 -> Ojs.int_to_js 14
                                         | `L_n_15 -> Ojs.int_to_js 15
                                         | `L_n_16 -> Ojs.int_to_js 16
                                         | `L_n_17 -> Ojs.int_to_js 17
                                         | `L_n_18 -> Ojs.int_to_js 18
                                         | `L_n_19 -> Ojs.int_to_js 19
                                         | `L_n_2 -> Ojs.int_to_js 2
                                         | `L_n_20 -> Ojs.int_to_js 20
                                         | `L_n_21 -> Ojs.int_to_js 21
                                         | `L_n_3 -> Ojs.int_to_js 3
                                         | `L_n_4 -> Ojs.int_to_js 4
                                         | `L_n_5 -> Ojs.int_to_js 5
                                         | `L_n_6 -> Ojs.int_to_js 6
                                         | `L_n_7 -> Ojs.int_to_js 7
                                         | `L_n_8 -> Ojs.int_to_js 8
                                         | `L_n_9 -> Ojs.int_to_js 9);
                                      Ojs.set_prop_ascii x6806
                                        "maximumSignificantDigits"
                                        (match x6803 with
                                         | `L_n_1 -> Ojs.int_to_js 1
                                         | `L_n_10 -> Ojs.int_to_js 10
                                         | `L_n_11 -> Ojs.int_to_js 11
                                         | `L_n_12 -> Ojs.int_to_js 12
                                         | `L_n_13 -> Ojs.int_to_js 13
                                         | `L_n_14 -> Ojs.int_to_js 14
                                         | `L_n_15 -> Ojs.int_to_js 15
                                         | `L_n_16 -> Ojs.int_to_js 16
                                         | `L_n_17 -> Ojs.int_to_js 17
                                         | `L_n_18 -> Ojs.int_to_js 18
                                         | `L_n_19 -> Ojs.int_to_js 19
                                         | `L_n_2 -> Ojs.int_to_js 2
                                         | `L_n_20 -> Ojs.int_to_js 20
                                         | `L_n_21 -> Ojs.int_to_js 21
                                         | `L_n_3 -> Ojs.int_to_js 3
                                         | `L_n_4 -> Ojs.int_to_js 4
                                         | `L_n_5 -> Ojs.int_to_js 5
                                         | `L_n_6 -> Ojs.int_to_js 6
                                         | `L_n_7 -> Ojs.int_to_js 7
                                         | `L_n_8 -> Ojs.int_to_js 8
                                         | `L_n_9 -> Ojs.int_to_js 9);
                                      Ojs.set_prop_ascii x6806 "notation"
                                        (Ojs.string_to_js x6804);
                                      Ojs.set_prop_ascii x6806
                                        "compactDisplay"
                                        (Ojs.string_to_js x6805);
                                      t_of_js x6806
    let cast_from = Obj.magic
  end
module BigInt =
  struct
    type t = [ `BigInt ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6808 : Ojs.t) -> t_of_js x6808
    and t_0_to_js : t_0 -> Ojs.t = fun (x6807 : t) -> t_to_js x6807
    type tags = [ `BigInt ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `BigInt ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x6811 : Ojs.t) -> intf_of_js __tags_of_js x6811
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x6809 : __tags intf) -> intf_to_js __tags_to_js x6809
    let (toString : 'tags this -> ?radix:float -> unit -> string) =
      fun (x6816 : 'tags this) ->
        fun ?radix:(x6813 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x6818 = this_to_js Obj.magic x6816 in
               Ojs.call (Ojs.get_prop_ascii x6818 "toString") "apply"
                 [|x6818;((let x6814 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6813 with
                            | Some x6815 ->
                                ignore
                                  (Ojs.call x6814 "push"
                                     [|(Ojs.float_to_js x6815)|])
                            | None -> ());
                           x6814))|])
    let (toLocaleString :
      'tags this ->
        ?locales:string ->
          ?options:BigIntToLocaleStringOptions.t -> unit -> string)
      =
      fun (x6824 : 'tags this) ->
        fun ?locales:(x6819 : string option) ->
          fun ?options:(x6820 : BigIntToLocaleStringOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x6826 = this_to_js Obj.magic x6824 in
                 Ojs.call (Ojs.get_prop_ascii x6826 "toLocaleString") "apply"
                   [|x6826;((let x6821 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x6819 with
                              | Some x6823 ->
                                  ignore
                                    (Ojs.call x6821 "push"
                                       [|(Ojs.string_to_js x6823)|])
                              | None -> ());
                             (match x6820 with
                              | Some x6822 ->
                                  ignore
                                    (Ojs.call x6821 "push"
                                       [|(BigIntToLocaleStringOptions.t_to_js
                                            x6822)|])
                              | None -> ());
                             x6821))|])
    let (valueOf : 'tags this -> bigint) =
      fun (x6827 : 'tags this) ->
        bigint_of_js (Ojs.call (this_to_js Obj.magic x6827) "valueOf" [||])
    let (invoke :
      [ `U1 of bigint  | `U2 of bool  | `U3 of float  | `U4 of string ] ->
        bigint)
      =
      fun
        (x6829 :
          [ `U1 of bigint  | `U2 of bool  | `U3 of float  | `U4 of string ])
        ->
        bigint_of_js
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "BigInt")
             [|((match x6829 with
                 | `U1 x6830 -> bigint_to_js x6830
                 | `U2 x6831 -> Ojs.bool_to_js x6831
                 | `U3 x6832 -> Ojs.float_to_js x6832
                 | `U4 x6833 -> Ojs.string_to_js x6833))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "BigInt")
             "prototype")
    let (asIntN : bits:float -> int:bigint -> bigint) =
      fun ~bits:(x6834 : float) ->
        fun ~int:(x6835 : bigint) ->
          bigint_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "BigInt") "asIntN"
               [|(Ojs.float_to_js x6834);(bigint_to_js x6835)|])
    let (asUintN : bits:float -> int:bigint -> bigint) =
      fun ~bits:(x6836 : float) ->
        fun ~int:(x6837 : bigint) ->
          bigint_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "BigInt") "asUintN"
               [|(Ojs.float_to_js x6836);(bigint_to_js x6837)|])
    let cast_from = Obj.magic
  end
module Uint8Array =
  struct
    type t =
      [ `Uint8Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6839 : Ojs.t) -> t_of_js x6839
    and t_0_to_js : t_0 -> Ojs.t = fun (x6838 : t) -> t_to_js x6838
    type tags =
      [ `Uint8Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Uint8Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x6842 : Ojs.t) -> intf_of_js __tags_of_js x6842
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x6840 : __tags intf) -> intf_to_js __tags_to_js x6840
    let (at : 'tags this -> index:float -> float option) =
      fun (x6845 : 'tags this) ->
        fun ~index:(x6844 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6845) "at"
               [|(Ojs.float_to_js x6844)|])
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x6852 : 'tags this) ->
        fun ~searchElement:(x6848 : float) ->
          fun ?fromIndex:(x6849 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6854 = this_to_js Obj.magic x6852 in
                 Ojs.call (Ojs.get_prop_ascii x6854 "includes") "apply"
                   [|x6854;((let x6850 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6850 "push"
                                  [|(Ojs.float_to_js x6848)|]);
                             (match x6849 with
                              | Some x6851 ->
                                  ignore
                                    (Ojs.call x6850 "push"
                                       [|(Ojs.float_to_js x6851)|])
                              | None -> ());
                             x6850))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x6855 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x6857 : Ojs.t) ->
             let x6858 = x6857 in
             ((Ojs.float_of_js (Ojs.array_get x6858 0)),
               (Ojs.float_of_js (Ojs.array_get x6858 1))))
          (Ojs.call (this_to_js Obj.magic x6855) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x6859 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x6859) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x6862 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x6862) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x6865 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6865)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x6867 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6867) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x6869 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6869) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x6871 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6871) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x6878 : 'tags this) ->
        fun ~target:(x6873 : float) ->
          fun ~start:(x6874 : float) ->
            fun ?end_:(x6875 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x6880 = this_to_js Obj.magic x6878 in
                   Ojs.call (Ojs.get_prop_ascii x6880 "copyWithin") "apply"
                     [|x6880;((let x6876 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6876 "push"
                                    [|(Ojs.float_to_js x6873)|]);
                               ignore
                                 (Ojs.call x6876 "push"
                                    [|(Ojs.float_to_js x6874)|]);
                               (match x6875 with
                                | Some x6877 ->
                                    ignore
                                      (Ojs.call x6876 "push"
                                         [|(Ojs.float_to_js x6877)|])
                                | None -> ());
                               x6876))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x6889 : 'tags this) ->
        fun
          ~predicate:(x6882 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x6883 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6891 = this_to_js Obj.magic x6889 in
                 Ojs.call (Ojs.get_prop_ascii x6891 "every") "apply"
                   [|x6891;((let x6884 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6884 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6886 : Ojs.t) ->
                                          fun (x6887 : Ojs.t) ->
                                            fun (x6888 : Ojs.t) ->
                                              unknown_to_js
                                                (x6882
                                                   ~value:(Ojs.float_of_js
                                                             x6886)
                                                   ~index:(Ojs.float_of_js
                                                             x6887)
                                                   ~array:(t_of_js x6888))))|]);
                             (match x6883 with
                              | Some x6885 ->
                                  ignore
                                    (Ojs.call x6884 "push"
                                       [|(any_to_js x6885)|])
                              | None -> ());
                             x6884))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x6898 : 'tags this) ->
        fun ~value:(x6892 : float) ->
          fun ?start:(x6893 : float option) ->
            fun ?end_:(x6894 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x6900 = this_to_js Obj.magic x6898 in
                   Ojs.call (Ojs.get_prop_ascii x6900 "fill") "apply"
                     [|x6900;((let x6895 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6895 "push"
                                    [|(Ojs.float_to_js x6892)|]);
                               (match x6893 with
                                | Some x6897 ->
                                    ignore
                                      (Ojs.call x6895 "push"
                                         [|(Ojs.float_to_js x6897)|])
                                | None -> ());
                               (match x6894 with
                                | Some x6896 ->
                                    ignore
                                      (Ojs.call x6895 "push"
                                         [|(Ojs.float_to_js x6896)|])
                                | None -> ());
                               x6895))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x6909 : 'tags this) ->
        fun ~predicate:(x6902 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x6903 : any option) ->
            fun () ->
              t_of_js
                (let x6911 = this_to_js Obj.magic x6909 in
                 Ojs.call (Ojs.get_prop_ascii x6911 "filter") "apply"
                   [|x6911;((let x6904 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6904 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6906 : Ojs.t) ->
                                          fun (x6907 : Ojs.t) ->
                                            fun (x6908 : Ojs.t) ->
                                              any_to_js
                                                (x6902
                                                   ~value:(Ojs.float_of_js
                                                             x6906)
                                                   ~index:(Ojs.float_of_js
                                                             x6907)
                                                   ~array:(t_of_js x6908))))|]);
                             (match x6903 with
                              | Some x6905 ->
                                  ignore
                                    (Ojs.call x6904 "push"
                                       [|(any_to_js x6905)|])
                              | None -> ());
                             x6904))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x6919 : 'tags this) ->
        fun ~predicate:(x6912 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x6913 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x6921 = this_to_js Obj.magic x6919 in
                 Ojs.call (Ojs.get_prop_ascii x6921 "find") "apply"
                   [|x6921;((let x6914 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6914 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6916 : Ojs.t) ->
                                          fun (x6917 : Ojs.t) ->
                                            fun (x6918 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x6912
                                                   ~value:(Ojs.float_of_js
                                                             x6916)
                                                   ~index:(Ojs.float_of_js
                                                             x6917)
                                                   ~obj:(t_of_js x6918))))|]);
                             (match x6913 with
                              | Some x6915 ->
                                  ignore
                                    (Ojs.call x6914 "push"
                                       [|(any_to_js x6915)|])
                              | None -> ());
                             x6914))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x6930 : 'tags this) ->
        fun ~predicate:(x6923 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x6924 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x6932 = this_to_js Obj.magic x6930 in
                 Ojs.call (Ojs.get_prop_ascii x6932 "findIndex") "apply"
                   [|x6932;((let x6925 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6925 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6927 : Ojs.t) ->
                                          fun (x6928 : Ojs.t) ->
                                            fun (x6929 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x6923
                                                   ~value:(Ojs.float_of_js
                                                             x6927)
                                                   ~index:(Ojs.float_of_js
                                                             x6928)
                                                   ~obj:(t_of_js x6929))))|]);
                             (match x6924 with
                              | Some x6926 ->
                                  ignore
                                    (Ojs.call x6925 "push"
                                       [|(any_to_js x6926)|])
                              | None -> ());
                             x6925))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x6940 : 'tags this) ->
        fun
          ~callbackfn:(x6933 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x6934 : any option) ->
            fun () ->
              ignore
                (let x6942 = this_to_js Obj.magic x6940 in
                 Ojs.call (Ojs.get_prop_ascii x6942 "forEach") "apply"
                   [|x6942;((let x6935 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6935 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6937 : Ojs.t) ->
                                          fun (x6938 : Ojs.t) ->
                                            fun (x6939 : Ojs.t) ->
                                              x6933
                                                ~value:(Ojs.float_of_js x6937)
                                                ~index:(Ojs.float_of_js x6938)
                                                ~array:(t_of_js x6939)))|]);
                             (match x6934 with
                              | Some x6936 ->
                                  ignore
                                    (Ojs.call x6935 "push"
                                       [|(any_to_js x6936)|])
                              | None -> ());
                             x6935))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x6947 : 'tags this) ->
        fun ~searchElement:(x6943 : float) ->
          fun ?fromIndex:(x6944 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x6949 = this_to_js Obj.magic x6947 in
                 Ojs.call (Ojs.get_prop_ascii x6949 "indexOf") "apply"
                   [|x6949;((let x6945 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6945 "push"
                                  [|(Ojs.float_to_js x6943)|]);
                             (match x6944 with
                              | Some x6946 ->
                                  ignore
                                    (Ojs.call x6945 "push"
                                       [|(Ojs.float_to_js x6946)|])
                              | None -> ());
                             x6945))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x6953 : 'tags this) ->
        fun ?separator:(x6950 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x6955 = this_to_js Obj.magic x6953 in
               Ojs.call (Ojs.get_prop_ascii x6955 "join") "apply"
                 [|x6955;((let x6951 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6950 with
                            | Some x6952 ->
                                ignore
                                  (Ojs.call x6951 "push"
                                     [|(Ojs.string_to_js x6952)|])
                            | None -> ());
                           x6951))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x6960 : 'tags this) ->
        fun ~searchElement:(x6956 : float) ->
          fun ?fromIndex:(x6957 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x6962 = this_to_js Obj.magic x6960 in
                 Ojs.call (Ojs.get_prop_ascii x6962 "lastIndexOf") "apply"
                   [|x6962;((let x6958 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6958 "push"
                                  [|(Ojs.float_to_js x6956)|]);
                             (match x6957 with
                              | Some x6959 ->
                                  ignore
                                    (Ojs.call x6958 "push"
                                       [|(Ojs.float_to_js x6959)|])
                              | None -> ());
                             x6958))|])
    let (get_length : 'tags this -> float) =
      fun (x6963 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6963) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x6972 : 'tags this) ->
        fun
          ~callbackfn:(x6965 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x6966 : any option) ->
            fun () ->
              t_of_js
                (let x6974 = this_to_js Obj.magic x6972 in
                 Ojs.call (Ojs.get_prop_ascii x6974 "map") "apply"
                   [|x6974;((let x6967 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6967 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6969 : Ojs.t) ->
                                          fun (x6970 : Ojs.t) ->
                                            fun (x6971 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x6965
                                                   ~value:(Ojs.float_of_js
                                                             x6969)
                                                   ~index:(Ojs.float_of_js
                                                             x6970)
                                                   ~array:(t_of_js x6971))))|]);
                             (match x6966 with
                              | Some x6968 ->
                                  ignore
                                    (Ojs.call x6967 "push"
                                       [|(any_to_js x6968)|])
                              | None -> ());
                             x6967))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x6980 : 'tags this) ->
        fun
          ~callbackfn:(x6975 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6980) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x6976 : Ojs.t) ->
                       fun (x6977 : Ojs.t) ->
                         fun (x6978 : Ojs.t) ->
                           fun (x6979 : Ojs.t) ->
                             Ojs.float_to_js
                               (x6975 ~previousValue:(Ojs.float_of_js x6976)
                                  ~currentValue:(Ojs.float_of_js x6977)
                                  ~currentIndex:(Ojs.float_of_js x6978)
                                  ~array:(t_of_js x6979))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x6988 : 'tags this) ->
        fun
          ~callbackfn:(x6982 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x6987 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x6988) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x6983 : Ojs.t) ->
                         fun (x6984 : Ojs.t) ->
                           fun (x6985 : Ojs.t) ->
                             fun (x6986 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x6982
                                    ~previousValue:(Ojs.float_of_js x6983)
                                    ~currentValue:(Ojs.float_of_js x6984)
                                    ~currentIndex:(Ojs.float_of_js x6985)
                                    ~array:(t_of_js x6986))));(Ojs.float_to_js
                                                                 x6987)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x6996 : 'tags this) ->
        fun
          ~callbackfn:(x6990 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x6995 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x6996) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x6991 : Ojs.t) ->
                         fun (x6992 : Ojs.t) ->
                           fun (x6993 : Ojs.t) ->
                             fun (x6994 : Ojs.t) ->
                               Obj.magic
                                 (x6990 ~previousValue:(Obj.magic x6991)
                                    ~currentValue:(Ojs.float_of_js x6992)
                                    ~currentIndex:(Ojs.float_of_js x6993)
                                    ~array:(t_of_js x6994))));(Obj.magic
                                                                 x6995)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7003 : 'tags this) ->
        fun
          ~callbackfn:(x6998 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7003) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x6999 : Ojs.t) ->
                       fun (x7000 : Ojs.t) ->
                         fun (x7001 : Ojs.t) ->
                           fun (x7002 : Ojs.t) ->
                             Ojs.float_to_js
                               (x6998 ~previousValue:(Ojs.float_of_js x6999)
                                  ~currentValue:(Ojs.float_of_js x7000)
                                  ~currentIndex:(Ojs.float_of_js x7001)
                                  ~array:(t_of_js x7002))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7011 : 'tags this) ->
        fun
          ~callbackfn:(x7005 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7010 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7011) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7006 : Ojs.t) ->
                         fun (x7007 : Ojs.t) ->
                           fun (x7008 : Ojs.t) ->
                             fun (x7009 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7005
                                    ~previousValue:(Ojs.float_of_js x7006)
                                    ~currentValue:(Ojs.float_of_js x7007)
                                    ~currentIndex:(Ojs.float_of_js x7008)
                                    ~array:(t_of_js x7009))));(Ojs.float_to_js
                                                                 x7010)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7019 : 'tags this) ->
        fun
          ~callbackfn:(x7013 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7018 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7019) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7014 : Ojs.t) ->
                         fun (x7015 : Ojs.t) ->
                           fun (x7016 : Ojs.t) ->
                             fun (x7017 : Ojs.t) ->
                               Obj.magic
                                 (x7013 ~previousValue:(Obj.magic x7014)
                                    ~currentValue:(Ojs.float_of_js x7015)
                                    ~currentIndex:(Ojs.float_of_js x7016)
                                    ~array:(t_of_js x7017))));(Obj.magic
                                                                 x7018)|])
    let (reverse : 'tags this -> t) =
      fun (x7021 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7021) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x7028 : 'tags this) ->
        fun ~array:(x7023 : float ArrayLike.t) ->
          fun ?offset:(x7024 : float option) ->
            fun () ->
              ignore
                (let x7030 = this_to_js Obj.magic x7028 in
                 Ojs.call (Ojs.get_prop_ascii x7030 "set") "apply"
                   [|x7030;((let x7025 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7025 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x7023)|]);
                             (match x7024 with
                              | Some x7026 ->
                                  ignore
                                    (Ojs.call x7025 "push"
                                       [|(Ojs.float_to_js x7026)|])
                              | None -> ());
                             x7025))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x7036 : 'tags this) ->
        fun ?start:(x7031 : float option) ->
          fun ?end_:(x7032 : float option) ->
            fun () ->
              t_of_js
                (let x7038 = this_to_js Obj.magic x7036 in
                 Ojs.call (Ojs.get_prop_ascii x7038 "slice") "apply"
                   [|x7038;((let x7033 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7031 with
                              | Some x7035 ->
                                  ignore
                                    (Ojs.call x7033 "push"
                                       [|(Ojs.float_to_js x7035)|])
                              | None -> ());
                             (match x7032 with
                              | Some x7034 ->
                                  ignore
                                    (Ojs.call x7033 "push"
                                       [|(Ojs.float_to_js x7034)|])
                              | None -> ());
                             x7033))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7046 : 'tags this) ->
        fun
          ~predicate:(x7039 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7040 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7048 = this_to_js Obj.magic x7046 in
                 Ojs.call (Ojs.get_prop_ascii x7048 "some") "apply"
                   [|x7048;((let x7041 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7041 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7043 : Ojs.t) ->
                                          fun (x7044 : Ojs.t) ->
                                            fun (x7045 : Ojs.t) ->
                                              unknown_to_js
                                                (x7039
                                                   ~value:(Ojs.float_of_js
                                                             x7043)
                                                   ~index:(Ojs.float_of_js
                                                             x7044)
                                                   ~array:(t_of_js x7045))))|]);
                             (match x7040 with
                              | Some x7042 ->
                                  ignore
                                    (Ojs.call x7041 "push"
                                       [|(any_to_js x7042)|])
                              | None -> ());
                             x7041))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x7054 : 'tags this) ->
        fun ?compareFn:(x7049 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x7056 = this_to_js Obj.magic x7054 in
               Ojs.call (Ojs.get_prop_ascii x7056 "sort") "apply"
                 [|x7056;((let x7050 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7049 with
                            | Some x7051 ->
                                ignore
                                  (Ojs.call x7050 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x7052 : Ojs.t) ->
                                             fun (x7053 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x7051
                                                    ~a:(Ojs.float_of_js x7052)
                                                    ~b:(Ojs.float_of_js x7053))))|])
                            | None -> ());
                           x7050))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x7063 : 'tags this) ->
        fun ?begin_:(x7058 : float option) ->
          fun ?end_:(x7059 : float option) ->
            fun () ->
              t_of_js
                (let x7065 = this_to_js Obj.magic x7063 in
                 Ojs.call (Ojs.get_prop_ascii x7065 "subarray") "apply"
                   [|x7065;((let x7060 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7058 with
                              | Some x7062 ->
                                  ignore
                                    (Ojs.call x7060 "push"
                                       [|(Ojs.float_to_js x7062)|])
                              | None -> ());
                             (match x7059 with
                              | Some x7061 ->
                                  ignore
                                    (Ojs.call x7060 "push"
                                       [|(Ojs.float_to_js x7061)|])
                              | None -> ());
                             x7060))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x7066 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7066) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x7068 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7068) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x7070 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7070) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x7072 : 'tags this) ->
        fun (x7074 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x7072)
               (Ojs.float_to_js x7074))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x7075 : 'tags this) ->
        fun (x7077 : float) ->
          fun (x7078 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x7075) (Ojs.float_to_js x7077)
              (Ojs.float_to_js x7078)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x7079 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             [|(Iterable.t_to_js Ojs.float_to_js x7079)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7081 : float Iterable.t) ->
        fun ?mapfn:(x7082 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x7083 : any option) ->
            fun () ->
              t_of_js
                (let x7090 = Ojs.get_prop_ascii Ojs.global "Uint8Array" in
                 Ojs.call (Ojs.get_prop_ascii x7090 "from") "apply"
                   [|x7090;((let x7084 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7084 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x7081)|]);
                             (match x7082 with
                              | Some x7086 ->
                                  ignore
                                    (Ojs.call x7084 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x7087 : Ojs.t) ->
                                               fun (x7088 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x7086
                                                      ~v:(Ojs.float_of_js
                                                            x7087)
                                                      ~k:(Ojs.float_of_js
                                                            x7088))))|])
                              | None -> ());
                             (match x7083 with
                              | Some x7085 ->
                                  ignore
                                    (Ojs.call x7084 "push"
                                       [|(any_to_js x7085)|])
                              | None -> ());
                             x7084))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x7091 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             [|(Ojs.float_to_js x7091)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x7092 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             [|((match x7092 with
                 | `U1 x7093 -> ArrayLike.t_to_js Ojs.float_to_js x7093
                 | `U2 x7095 -> ArrayBufferLike.t_to_js x7095))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x7096 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x7097 : float option) ->
          fun ?length:(x7098 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Uint8Array")
                   (let x7099 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x7099 "push"
                         [|(ArrayBufferLike.t_to_js x7096)|]);
                    (match x7097 with
                     | Some x7101 ->
                         ignore
                           (Ojs.call x7099 "push" [|(Ojs.float_to_js x7101)|])
                     | None -> ());
                    (match x7098 with
                     | Some x7100 ->
                         ignore
                           (Ojs.call x7099 "push" [|(Ojs.float_to_js x7100)|])
                     | None -> ());
                    x7099))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x7102 : float list) ->
        t_of_js
          (let x7105 = Ojs.get_prop_ascii Ojs.global "Uint8Array" in
           Ojs.call (Ojs.get_prop_ascii x7105 "of") "apply"
             [|x7105;((let x7103 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x7104 : float) ->
                            ignore
                              (Ojs.call x7103 "push"
                                 [|(Ojs.float_to_js x7104)|])) x7102;
                       x7103))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x7106 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Uint8Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x7106)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7108 : 'T ArrayLike.t) ->
        fun ~mapfn:(x7109 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x7110 : any option) ->
            fun () ->
              t_of_js
                (let x7116 = Ojs.get_prop_ascii Ojs.global "Uint8Array" in
                 Ojs.call (Ojs.get_prop_ascii x7116 "from") "apply"
                   [|x7116;((let x7111 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7111 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x7108)|]);
                             ignore
                               (Ojs.call x7111 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x7113 : Ojs.t) ->
                                          fun (x7114 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x7109 ~v:(Obj.magic x7113)
                                                 ~k:(Ojs.float_of_js x7114))))|]);
                             (match x7110 with
                              | Some x7112 ->
                                  ignore
                                    (Ojs.call x7111 "push"
                                       [|(any_to_js x7112)|])
                              | None -> ());
                             x7111))|])
    let cast_from = Obj.magic
  end
module Uint32Array =
  struct
    type t =
      [ `Uint32Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x7118 : Ojs.t) -> t_of_js x7118
    and t_0_to_js : t_0 -> Ojs.t = fun (x7117 : t) -> t_to_js x7117
    type tags =
      [ `Uint32Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Uint32Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x7121 : Ojs.t) -> intf_of_js __tags_of_js x7121
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x7119 : __tags intf) -> intf_to_js __tags_to_js x7119
    let (at : 'tags this -> index:float -> float option) =
      fun (x7124 : 'tags this) ->
        fun ~index:(x7123 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7124) "at"
               [|(Ojs.float_to_js x7123)|])
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x7131 : 'tags this) ->
        fun ~searchElement:(x7127 : float) ->
          fun ?fromIndex:(x7128 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7133 = this_to_js Obj.magic x7131 in
                 Ojs.call (Ojs.get_prop_ascii x7133 "includes") "apply"
                   [|x7133;((let x7129 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7129 "push"
                                  [|(Ojs.float_to_js x7127)|]);
                             (match x7128 with
                              | Some x7130 ->
                                  ignore
                                    (Ojs.call x7129 "push"
                                       [|(Ojs.float_to_js x7130)|])
                              | None -> ());
                             x7129))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x7134 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x7136 : Ojs.t) ->
             let x7137 = x7136 in
             ((Ojs.float_of_js (Ojs.array_get x7137 0)),
               (Ojs.float_of_js (Ojs.array_get x7137 1))))
          (Ojs.call (this_to_js Obj.magic x7134) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x7138 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7138) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x7141 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7141) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x7144 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7144)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x7146 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7146) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x7148 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7148) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x7150 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7150) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7157 : 'tags this) ->
        fun ~target:(x7152 : float) ->
          fun ~start:(x7153 : float) ->
            fun ?end_:(x7154 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7159 = this_to_js Obj.magic x7157 in
                   Ojs.call (Ojs.get_prop_ascii x7159 "copyWithin") "apply"
                     [|x7159;((let x7155 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7155 "push"
                                    [|(Ojs.float_to_js x7152)|]);
                               ignore
                                 (Ojs.call x7155 "push"
                                    [|(Ojs.float_to_js x7153)|]);
                               (match x7154 with
                                | Some x7156 ->
                                    ignore
                                      (Ojs.call x7155 "push"
                                         [|(Ojs.float_to_js x7156)|])
                                | None -> ());
                               x7155))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7168 : 'tags this) ->
        fun
          ~predicate:(x7161 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7162 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7170 = this_to_js Obj.magic x7168 in
                 Ojs.call (Ojs.get_prop_ascii x7170 "every") "apply"
                   [|x7170;((let x7163 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7163 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7165 : Ojs.t) ->
                                          fun (x7166 : Ojs.t) ->
                                            fun (x7167 : Ojs.t) ->
                                              unknown_to_js
                                                (x7161
                                                   ~value:(Ojs.float_of_js
                                                             x7165)
                                                   ~index:(Ojs.float_of_js
                                                             x7166)
                                                   ~array:(t_of_js x7167))))|]);
                             (match x7162 with
                              | Some x7164 ->
                                  ignore
                                    (Ojs.call x7163 "push"
                                       [|(any_to_js x7164)|])
                              | None -> ());
                             x7163))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7177 : 'tags this) ->
        fun ~value:(x7171 : float) ->
          fun ?start:(x7172 : float option) ->
            fun ?end_:(x7173 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7179 = this_to_js Obj.magic x7177 in
                   Ojs.call (Ojs.get_prop_ascii x7179 "fill") "apply"
                     [|x7179;((let x7174 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7174 "push"
                                    [|(Ojs.float_to_js x7171)|]);
                               (match x7172 with
                                | Some x7176 ->
                                    ignore
                                      (Ojs.call x7174 "push"
                                         [|(Ojs.float_to_js x7176)|])
                                | None -> ());
                               (match x7173 with
                                | Some x7175 ->
                                    ignore
                                      (Ojs.call x7174 "push"
                                         [|(Ojs.float_to_js x7175)|])
                                | None -> ());
                               x7174))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7188 : 'tags this) ->
        fun ~predicate:(x7181 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x7182 : any option) ->
            fun () ->
              t_of_js
                (let x7190 = this_to_js Obj.magic x7188 in
                 Ojs.call (Ojs.get_prop_ascii x7190 "filter") "apply"
                   [|x7190;((let x7183 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7183 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7185 : Ojs.t) ->
                                          fun (x7186 : Ojs.t) ->
                                            fun (x7187 : Ojs.t) ->
                                              any_to_js
                                                (x7181
                                                   ~value:(Ojs.float_of_js
                                                             x7185)
                                                   ~index:(Ojs.float_of_js
                                                             x7186)
                                                   ~array:(t_of_js x7187))))|]);
                             (match x7182 with
                              | Some x7184 ->
                                  ignore
                                    (Ojs.call x7183 "push"
                                       [|(any_to_js x7184)|])
                              | None -> ());
                             x7183))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x7198 : 'tags this) ->
        fun ~predicate:(x7191 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7192 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x7200 = this_to_js Obj.magic x7198 in
                 Ojs.call (Ojs.get_prop_ascii x7200 "find") "apply"
                   [|x7200;((let x7193 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7193 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7195 : Ojs.t) ->
                                          fun (x7196 : Ojs.t) ->
                                            fun (x7197 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7191
                                                   ~value:(Ojs.float_of_js
                                                             x7195)
                                                   ~index:(Ojs.float_of_js
                                                             x7196)
                                                   ~obj:(t_of_js x7197))))|]);
                             (match x7192 with
                              | Some x7194 ->
                                  ignore
                                    (Ojs.call x7193 "push"
                                       [|(any_to_js x7194)|])
                              | None -> ());
                             x7193))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x7209 : 'tags this) ->
        fun ~predicate:(x7202 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7203 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x7211 = this_to_js Obj.magic x7209 in
                 Ojs.call (Ojs.get_prop_ascii x7211 "findIndex") "apply"
                   [|x7211;((let x7204 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7204 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7206 : Ojs.t) ->
                                          fun (x7207 : Ojs.t) ->
                                            fun (x7208 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7202
                                                   ~value:(Ojs.float_of_js
                                                             x7206)
                                                   ~index:(Ojs.float_of_js
                                                             x7207)
                                                   ~obj:(t_of_js x7208))))|]);
                             (match x7203 with
                              | Some x7205 ->
                                  ignore
                                    (Ojs.call x7204 "push"
                                       [|(any_to_js x7205)|])
                              | None -> ());
                             x7204))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x7219 : 'tags this) ->
        fun
          ~callbackfn:(x7212 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x7213 : any option) ->
            fun () ->
              ignore
                (let x7221 = this_to_js Obj.magic x7219 in
                 Ojs.call (Ojs.get_prop_ascii x7221 "forEach") "apply"
                   [|x7221;((let x7214 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7214 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7216 : Ojs.t) ->
                                          fun (x7217 : Ojs.t) ->
                                            fun (x7218 : Ojs.t) ->
                                              x7212
                                                ~value:(Ojs.float_of_js x7216)
                                                ~index:(Ojs.float_of_js x7217)
                                                ~array:(t_of_js x7218)))|]);
                             (match x7213 with
                              | Some x7215 ->
                                  ignore
                                    (Ojs.call x7214 "push"
                                       [|(any_to_js x7215)|])
                              | None -> ());
                             x7214))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7226 : 'tags this) ->
        fun ~searchElement:(x7222 : float) ->
          fun ?fromIndex:(x7223 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7228 = this_to_js Obj.magic x7226 in
                 Ojs.call (Ojs.get_prop_ascii x7228 "indexOf") "apply"
                   [|x7228;((let x7224 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7224 "push"
                                  [|(Ojs.float_to_js x7222)|]);
                             (match x7223 with
                              | Some x7225 ->
                                  ignore
                                    (Ojs.call x7224 "push"
                                       [|(Ojs.float_to_js x7225)|])
                              | None -> ());
                             x7224))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x7232 : 'tags this) ->
        fun ?separator:(x7229 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x7234 = this_to_js Obj.magic x7232 in
               Ojs.call (Ojs.get_prop_ascii x7234 "join") "apply"
                 [|x7234;((let x7230 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7229 with
                            | Some x7231 ->
                                ignore
                                  (Ojs.call x7230 "push"
                                     [|(Ojs.string_to_js x7231)|])
                            | None -> ());
                           x7230))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7239 : 'tags this) ->
        fun ~searchElement:(x7235 : float) ->
          fun ?fromIndex:(x7236 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7241 = this_to_js Obj.magic x7239 in
                 Ojs.call (Ojs.get_prop_ascii x7241 "lastIndexOf") "apply"
                   [|x7241;((let x7237 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7237 "push"
                                  [|(Ojs.float_to_js x7235)|]);
                             (match x7236 with
                              | Some x7238 ->
                                  ignore
                                    (Ojs.call x7237 "push"
                                       [|(Ojs.float_to_js x7238)|])
                              | None -> ());
                             x7237))|])
    let (get_length : 'tags this -> float) =
      fun (x7242 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7242) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7251 : 'tags this) ->
        fun
          ~callbackfn:(x7244 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x7245 : any option) ->
            fun () ->
              t_of_js
                (let x7253 = this_to_js Obj.magic x7251 in
                 Ojs.call (Ojs.get_prop_ascii x7253 "map") "apply"
                   [|x7253;((let x7246 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7246 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7248 : Ojs.t) ->
                                          fun (x7249 : Ojs.t) ->
                                            fun (x7250 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x7244
                                                   ~value:(Ojs.float_of_js
                                                             x7248)
                                                   ~index:(Ojs.float_of_js
                                                             x7249)
                                                   ~array:(t_of_js x7250))))|]);
                             (match x7245 with
                              | Some x7247 ->
                                  ignore
                                    (Ojs.call x7246 "push"
                                       [|(any_to_js x7247)|])
                              | None -> ());
                             x7246))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7259 : 'tags this) ->
        fun
          ~callbackfn:(x7254 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7259) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x7255 : Ojs.t) ->
                       fun (x7256 : Ojs.t) ->
                         fun (x7257 : Ojs.t) ->
                           fun (x7258 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7254 ~previousValue:(Ojs.float_of_js x7255)
                                  ~currentValue:(Ojs.float_of_js x7256)
                                  ~currentIndex:(Ojs.float_of_js x7257)
                                  ~array:(t_of_js x7258))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7267 : 'tags this) ->
        fun
          ~callbackfn:(x7261 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7266 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7267) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7262 : Ojs.t) ->
                         fun (x7263 : Ojs.t) ->
                           fun (x7264 : Ojs.t) ->
                             fun (x7265 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7261
                                    ~previousValue:(Ojs.float_of_js x7262)
                                    ~currentValue:(Ojs.float_of_js x7263)
                                    ~currentIndex:(Ojs.float_of_js x7264)
                                    ~array:(t_of_js x7265))));(Ojs.float_to_js
                                                                 x7266)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7275 : 'tags this) ->
        fun
          ~callbackfn:(x7269 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7274 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7275) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7270 : Ojs.t) ->
                         fun (x7271 : Ojs.t) ->
                           fun (x7272 : Ojs.t) ->
                             fun (x7273 : Ojs.t) ->
                               Obj.magic
                                 (x7269 ~previousValue:(Obj.magic x7270)
                                    ~currentValue:(Ojs.float_of_js x7271)
                                    ~currentIndex:(Ojs.float_of_js x7272)
                                    ~array:(t_of_js x7273))));(Obj.magic
                                                                 x7274)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7282 : 'tags this) ->
        fun
          ~callbackfn:(x7277 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7282) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x7278 : Ojs.t) ->
                       fun (x7279 : Ojs.t) ->
                         fun (x7280 : Ojs.t) ->
                           fun (x7281 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7277 ~previousValue:(Ojs.float_of_js x7278)
                                  ~currentValue:(Ojs.float_of_js x7279)
                                  ~currentIndex:(Ojs.float_of_js x7280)
                                  ~array:(t_of_js x7281))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7290 : 'tags this) ->
        fun
          ~callbackfn:(x7284 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7289 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7290) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7285 : Ojs.t) ->
                         fun (x7286 : Ojs.t) ->
                           fun (x7287 : Ojs.t) ->
                             fun (x7288 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7284
                                    ~previousValue:(Ojs.float_of_js x7285)
                                    ~currentValue:(Ojs.float_of_js x7286)
                                    ~currentIndex:(Ojs.float_of_js x7287)
                                    ~array:(t_of_js x7288))));(Ojs.float_to_js
                                                                 x7289)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7298 : 'tags this) ->
        fun
          ~callbackfn:(x7292 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7297 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7298) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7293 : Ojs.t) ->
                         fun (x7294 : Ojs.t) ->
                           fun (x7295 : Ojs.t) ->
                             fun (x7296 : Ojs.t) ->
                               Obj.magic
                                 (x7292 ~previousValue:(Obj.magic x7293)
                                    ~currentValue:(Ojs.float_of_js x7294)
                                    ~currentIndex:(Ojs.float_of_js x7295)
                                    ~array:(t_of_js x7296))));(Obj.magic
                                                                 x7297)|])
    let (reverse : 'tags this -> t) =
      fun (x7300 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7300) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x7307 : 'tags this) ->
        fun ~array:(x7302 : float ArrayLike.t) ->
          fun ?offset:(x7303 : float option) ->
            fun () ->
              ignore
                (let x7309 = this_to_js Obj.magic x7307 in
                 Ojs.call (Ojs.get_prop_ascii x7309 "set") "apply"
                   [|x7309;((let x7304 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7304 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x7302)|]);
                             (match x7303 with
                              | Some x7305 ->
                                  ignore
                                    (Ojs.call x7304 "push"
                                       [|(Ojs.float_to_js x7305)|])
                              | None -> ());
                             x7304))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x7315 : 'tags this) ->
        fun ?start:(x7310 : float option) ->
          fun ?end_:(x7311 : float option) ->
            fun () ->
              t_of_js
                (let x7317 = this_to_js Obj.magic x7315 in
                 Ojs.call (Ojs.get_prop_ascii x7317 "slice") "apply"
                   [|x7317;((let x7312 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7310 with
                              | Some x7314 ->
                                  ignore
                                    (Ojs.call x7312 "push"
                                       [|(Ojs.float_to_js x7314)|])
                              | None -> ());
                             (match x7311 with
                              | Some x7313 ->
                                  ignore
                                    (Ojs.call x7312 "push"
                                       [|(Ojs.float_to_js x7313)|])
                              | None -> ());
                             x7312))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7325 : 'tags this) ->
        fun
          ~predicate:(x7318 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7319 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7327 = this_to_js Obj.magic x7325 in
                 Ojs.call (Ojs.get_prop_ascii x7327 "some") "apply"
                   [|x7327;((let x7320 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7320 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7322 : Ojs.t) ->
                                          fun (x7323 : Ojs.t) ->
                                            fun (x7324 : Ojs.t) ->
                                              unknown_to_js
                                                (x7318
                                                   ~value:(Ojs.float_of_js
                                                             x7322)
                                                   ~index:(Ojs.float_of_js
                                                             x7323)
                                                   ~array:(t_of_js x7324))))|]);
                             (match x7319 with
                              | Some x7321 ->
                                  ignore
                                    (Ojs.call x7320 "push"
                                       [|(any_to_js x7321)|])
                              | None -> ());
                             x7320))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x7333 : 'tags this) ->
        fun ?compareFn:(x7328 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x7335 = this_to_js Obj.magic x7333 in
               Ojs.call (Ojs.get_prop_ascii x7335 "sort") "apply"
                 [|x7335;((let x7329 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7328 with
                            | Some x7330 ->
                                ignore
                                  (Ojs.call x7329 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x7331 : Ojs.t) ->
                                             fun (x7332 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x7330
                                                    ~a:(Ojs.float_of_js x7331)
                                                    ~b:(Ojs.float_of_js x7332))))|])
                            | None -> ());
                           x7329))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x7342 : 'tags this) ->
        fun ?begin_:(x7337 : float option) ->
          fun ?end_:(x7338 : float option) ->
            fun () ->
              t_of_js
                (let x7344 = this_to_js Obj.magic x7342 in
                 Ojs.call (Ojs.get_prop_ascii x7344 "subarray") "apply"
                   [|x7344;((let x7339 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7337 with
                              | Some x7341 ->
                                  ignore
                                    (Ojs.call x7339 "push"
                                       [|(Ojs.float_to_js x7341)|])
                              | None -> ());
                             (match x7338 with
                              | Some x7340 ->
                                  ignore
                                    (Ojs.call x7339 "push"
                                       [|(Ojs.float_to_js x7340)|])
                              | None -> ());
                             x7339))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x7345 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7345) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x7347 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7347) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x7349 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7349) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x7351 : 'tags this) ->
        fun (x7353 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x7351)
               (Ojs.float_to_js x7353))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x7354 : 'tags this) ->
        fun (x7356 : float) ->
          fun (x7357 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x7354) (Ojs.float_to_js x7356)
              (Ojs.float_to_js x7357)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint32Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x7358 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             [|(Iterable.t_to_js Ojs.float_to_js x7358)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7360 : float Iterable.t) ->
        fun ?mapfn:(x7361 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x7362 : any option) ->
            fun () ->
              t_of_js
                (let x7369 = Ojs.get_prop_ascii Ojs.global "Uint32Array" in
                 Ojs.call (Ojs.get_prop_ascii x7369 "from") "apply"
                   [|x7369;((let x7363 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7363 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x7360)|]);
                             (match x7361 with
                              | Some x7365 ->
                                  ignore
                                    (Ojs.call x7363 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x7366 : Ojs.t) ->
                                               fun (x7367 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x7365
                                                      ~v:(Ojs.float_of_js
                                                            x7366)
                                                      ~k:(Ojs.float_of_js
                                                            x7367))))|])
                              | None -> ());
                             (match x7362 with
                              | Some x7364 ->
                                  ignore
                                    (Ojs.call x7363 "push"
                                       [|(any_to_js x7364)|])
                              | None -> ());
                             x7363))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x7370 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             [|(Ojs.float_to_js x7370)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x7371 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             [|((match x7371 with
                 | `U1 x7372 -> ArrayLike.t_to_js Ojs.float_to_js x7372
                 | `U2 x7374 -> ArrayBufferLike.t_to_js x7374))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x7375 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x7376 : float option) ->
          fun ?length:(x7377 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Uint32Array")
                   (let x7378 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x7378 "push"
                         [|(ArrayBufferLike.t_to_js x7375)|]);
                    (match x7376 with
                     | Some x7380 ->
                         ignore
                           (Ojs.call x7378 "push" [|(Ojs.float_to_js x7380)|])
                     | None -> ());
                    (match x7377 with
                     | Some x7379 ->
                         ignore
                           (Ojs.call x7378 "push" [|(Ojs.float_to_js x7379)|])
                     | None -> ());
                    x7378))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x7381 : float list) ->
        t_of_js
          (let x7384 = Ojs.get_prop_ascii Ojs.global "Uint32Array" in
           Ojs.call (Ojs.get_prop_ascii x7384 "of") "apply"
             [|x7384;((let x7382 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x7383 : float) ->
                            ignore
                              (Ojs.call x7382 "push"
                                 [|(Ojs.float_to_js x7383)|])) x7381;
                       x7382))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x7385 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Uint32Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x7385)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7387 : 'T ArrayLike.t) ->
        fun ~mapfn:(x7388 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x7389 : any option) ->
            fun () ->
              t_of_js
                (let x7395 = Ojs.get_prop_ascii Ojs.global "Uint32Array" in
                 Ojs.call (Ojs.get_prop_ascii x7395 "from") "apply"
                   [|x7395;((let x7390 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7390 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x7387)|]);
                             ignore
                               (Ojs.call x7390 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x7392 : Ojs.t) ->
                                          fun (x7393 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x7388 ~v:(Obj.magic x7392)
                                                 ~k:(Ojs.float_of_js x7393))))|]);
                             (match x7389 with
                              | Some x7391 ->
                                  ignore
                                    (Ojs.call x7390 "push"
                                       [|(any_to_js x7391)|])
                              | None -> ());
                             x7390))|])
    let cast_from = Obj.magic
  end
module Uint16Array =
  struct
    type t =
      [ `Uint16Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x7397 : Ojs.t) -> t_of_js x7397
    and t_0_to_js : t_0 -> Ojs.t = fun (x7396 : t) -> t_to_js x7396
    type tags =
      [ `Uint16Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Uint16Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x7400 : Ojs.t) -> intf_of_js __tags_of_js x7400
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x7398 : __tags intf) -> intf_to_js __tags_to_js x7398
    let (at : 'tags this -> index:float -> float option) =
      fun (x7403 : 'tags this) ->
        fun ~index:(x7402 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7403) "at"
               [|(Ojs.float_to_js x7402)|])
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x7410 : 'tags this) ->
        fun ~searchElement:(x7406 : float) ->
          fun ?fromIndex:(x7407 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7412 = this_to_js Obj.magic x7410 in
                 Ojs.call (Ojs.get_prop_ascii x7412 "includes") "apply"
                   [|x7412;((let x7408 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7408 "push"
                                  [|(Ojs.float_to_js x7406)|]);
                             (match x7407 with
                              | Some x7409 ->
                                  ignore
                                    (Ojs.call x7408 "push"
                                       [|(Ojs.float_to_js x7409)|])
                              | None -> ());
                             x7408))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x7413 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x7415 : Ojs.t) ->
             let x7416 = x7415 in
             ((Ojs.float_of_js (Ojs.array_get x7416 0)),
               (Ojs.float_of_js (Ojs.array_get x7416 1))))
          (Ojs.call (this_to_js Obj.magic x7413) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x7417 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7417) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x7420 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7420) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x7423 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7423)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x7425 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7425) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x7427 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7427) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x7429 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7429) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7436 : 'tags this) ->
        fun ~target:(x7431 : float) ->
          fun ~start:(x7432 : float) ->
            fun ?end_:(x7433 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7438 = this_to_js Obj.magic x7436 in
                   Ojs.call (Ojs.get_prop_ascii x7438 "copyWithin") "apply"
                     [|x7438;((let x7434 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7434 "push"
                                    [|(Ojs.float_to_js x7431)|]);
                               ignore
                                 (Ojs.call x7434 "push"
                                    [|(Ojs.float_to_js x7432)|]);
                               (match x7433 with
                                | Some x7435 ->
                                    ignore
                                      (Ojs.call x7434 "push"
                                         [|(Ojs.float_to_js x7435)|])
                                | None -> ());
                               x7434))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7447 : 'tags this) ->
        fun
          ~predicate:(x7440 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7441 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7449 = this_to_js Obj.magic x7447 in
                 Ojs.call (Ojs.get_prop_ascii x7449 "every") "apply"
                   [|x7449;((let x7442 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7442 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7444 : Ojs.t) ->
                                          fun (x7445 : Ojs.t) ->
                                            fun (x7446 : Ojs.t) ->
                                              unknown_to_js
                                                (x7440
                                                   ~value:(Ojs.float_of_js
                                                             x7444)
                                                   ~index:(Ojs.float_of_js
                                                             x7445)
                                                   ~array:(t_of_js x7446))))|]);
                             (match x7441 with
                              | Some x7443 ->
                                  ignore
                                    (Ojs.call x7442 "push"
                                       [|(any_to_js x7443)|])
                              | None -> ());
                             x7442))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7456 : 'tags this) ->
        fun ~value:(x7450 : float) ->
          fun ?start:(x7451 : float option) ->
            fun ?end_:(x7452 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7458 = this_to_js Obj.magic x7456 in
                   Ojs.call (Ojs.get_prop_ascii x7458 "fill") "apply"
                     [|x7458;((let x7453 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7453 "push"
                                    [|(Ojs.float_to_js x7450)|]);
                               (match x7451 with
                                | Some x7455 ->
                                    ignore
                                      (Ojs.call x7453 "push"
                                         [|(Ojs.float_to_js x7455)|])
                                | None -> ());
                               (match x7452 with
                                | Some x7454 ->
                                    ignore
                                      (Ojs.call x7453 "push"
                                         [|(Ojs.float_to_js x7454)|])
                                | None -> ());
                               x7453))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7467 : 'tags this) ->
        fun ~predicate:(x7460 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x7461 : any option) ->
            fun () ->
              t_of_js
                (let x7469 = this_to_js Obj.magic x7467 in
                 Ojs.call (Ojs.get_prop_ascii x7469 "filter") "apply"
                   [|x7469;((let x7462 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7462 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7464 : Ojs.t) ->
                                          fun (x7465 : Ojs.t) ->
                                            fun (x7466 : Ojs.t) ->
                                              any_to_js
                                                (x7460
                                                   ~value:(Ojs.float_of_js
                                                             x7464)
                                                   ~index:(Ojs.float_of_js
                                                             x7465)
                                                   ~array:(t_of_js x7466))))|]);
                             (match x7461 with
                              | Some x7463 ->
                                  ignore
                                    (Ojs.call x7462 "push"
                                       [|(any_to_js x7463)|])
                              | None -> ());
                             x7462))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x7477 : 'tags this) ->
        fun ~predicate:(x7470 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7471 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x7479 = this_to_js Obj.magic x7477 in
                 Ojs.call (Ojs.get_prop_ascii x7479 "find") "apply"
                   [|x7479;((let x7472 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7472 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7474 : Ojs.t) ->
                                          fun (x7475 : Ojs.t) ->
                                            fun (x7476 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7470
                                                   ~value:(Ojs.float_of_js
                                                             x7474)
                                                   ~index:(Ojs.float_of_js
                                                             x7475)
                                                   ~obj:(t_of_js x7476))))|]);
                             (match x7471 with
                              | Some x7473 ->
                                  ignore
                                    (Ojs.call x7472 "push"
                                       [|(any_to_js x7473)|])
                              | None -> ());
                             x7472))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x7488 : 'tags this) ->
        fun ~predicate:(x7481 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7482 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x7490 = this_to_js Obj.magic x7488 in
                 Ojs.call (Ojs.get_prop_ascii x7490 "findIndex") "apply"
                   [|x7490;((let x7483 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7483 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7485 : Ojs.t) ->
                                          fun (x7486 : Ojs.t) ->
                                            fun (x7487 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7481
                                                   ~value:(Ojs.float_of_js
                                                             x7485)
                                                   ~index:(Ojs.float_of_js
                                                             x7486)
                                                   ~obj:(t_of_js x7487))))|]);
                             (match x7482 with
                              | Some x7484 ->
                                  ignore
                                    (Ojs.call x7483 "push"
                                       [|(any_to_js x7484)|])
                              | None -> ());
                             x7483))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x7498 : 'tags this) ->
        fun
          ~callbackfn:(x7491 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x7492 : any option) ->
            fun () ->
              ignore
                (let x7500 = this_to_js Obj.magic x7498 in
                 Ojs.call (Ojs.get_prop_ascii x7500 "forEach") "apply"
                   [|x7500;((let x7493 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7493 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7495 : Ojs.t) ->
                                          fun (x7496 : Ojs.t) ->
                                            fun (x7497 : Ojs.t) ->
                                              x7491
                                                ~value:(Ojs.float_of_js x7495)
                                                ~index:(Ojs.float_of_js x7496)
                                                ~array:(t_of_js x7497)))|]);
                             (match x7492 with
                              | Some x7494 ->
                                  ignore
                                    (Ojs.call x7493 "push"
                                       [|(any_to_js x7494)|])
                              | None -> ());
                             x7493))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7505 : 'tags this) ->
        fun ~searchElement:(x7501 : float) ->
          fun ?fromIndex:(x7502 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7507 = this_to_js Obj.magic x7505 in
                 Ojs.call (Ojs.get_prop_ascii x7507 "indexOf") "apply"
                   [|x7507;((let x7503 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7503 "push"
                                  [|(Ojs.float_to_js x7501)|]);
                             (match x7502 with
                              | Some x7504 ->
                                  ignore
                                    (Ojs.call x7503 "push"
                                       [|(Ojs.float_to_js x7504)|])
                              | None -> ());
                             x7503))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x7511 : 'tags this) ->
        fun ?separator:(x7508 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x7513 = this_to_js Obj.magic x7511 in
               Ojs.call (Ojs.get_prop_ascii x7513 "join") "apply"
                 [|x7513;((let x7509 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7508 with
                            | Some x7510 ->
                                ignore
                                  (Ojs.call x7509 "push"
                                     [|(Ojs.string_to_js x7510)|])
                            | None -> ());
                           x7509))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7518 : 'tags this) ->
        fun ~searchElement:(x7514 : float) ->
          fun ?fromIndex:(x7515 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7520 = this_to_js Obj.magic x7518 in
                 Ojs.call (Ojs.get_prop_ascii x7520 "lastIndexOf") "apply"
                   [|x7520;((let x7516 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7516 "push"
                                  [|(Ojs.float_to_js x7514)|]);
                             (match x7515 with
                              | Some x7517 ->
                                  ignore
                                    (Ojs.call x7516 "push"
                                       [|(Ojs.float_to_js x7517)|])
                              | None -> ());
                             x7516))|])
    let (get_length : 'tags this -> float) =
      fun (x7521 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7521) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7530 : 'tags this) ->
        fun
          ~callbackfn:(x7523 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x7524 : any option) ->
            fun () ->
              t_of_js
                (let x7532 = this_to_js Obj.magic x7530 in
                 Ojs.call (Ojs.get_prop_ascii x7532 "map") "apply"
                   [|x7532;((let x7525 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7525 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7527 : Ojs.t) ->
                                          fun (x7528 : Ojs.t) ->
                                            fun (x7529 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x7523
                                                   ~value:(Ojs.float_of_js
                                                             x7527)
                                                   ~index:(Ojs.float_of_js
                                                             x7528)
                                                   ~array:(t_of_js x7529))))|]);
                             (match x7524 with
                              | Some x7526 ->
                                  ignore
                                    (Ojs.call x7525 "push"
                                       [|(any_to_js x7526)|])
                              | None -> ());
                             x7525))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7538 : 'tags this) ->
        fun
          ~callbackfn:(x7533 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7538) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x7534 : Ojs.t) ->
                       fun (x7535 : Ojs.t) ->
                         fun (x7536 : Ojs.t) ->
                           fun (x7537 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7533 ~previousValue:(Ojs.float_of_js x7534)
                                  ~currentValue:(Ojs.float_of_js x7535)
                                  ~currentIndex:(Ojs.float_of_js x7536)
                                  ~array:(t_of_js x7537))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7546 : 'tags this) ->
        fun
          ~callbackfn:(x7540 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7545 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7546) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7541 : Ojs.t) ->
                         fun (x7542 : Ojs.t) ->
                           fun (x7543 : Ojs.t) ->
                             fun (x7544 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7540
                                    ~previousValue:(Ojs.float_of_js x7541)
                                    ~currentValue:(Ojs.float_of_js x7542)
                                    ~currentIndex:(Ojs.float_of_js x7543)
                                    ~array:(t_of_js x7544))));(Ojs.float_to_js
                                                                 x7545)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7554 : 'tags this) ->
        fun
          ~callbackfn:(x7548 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7553 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7554) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7549 : Ojs.t) ->
                         fun (x7550 : Ojs.t) ->
                           fun (x7551 : Ojs.t) ->
                             fun (x7552 : Ojs.t) ->
                               Obj.magic
                                 (x7548 ~previousValue:(Obj.magic x7549)
                                    ~currentValue:(Ojs.float_of_js x7550)
                                    ~currentIndex:(Ojs.float_of_js x7551)
                                    ~array:(t_of_js x7552))));(Obj.magic
                                                                 x7553)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7561 : 'tags this) ->
        fun
          ~callbackfn:(x7556 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7561) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x7557 : Ojs.t) ->
                       fun (x7558 : Ojs.t) ->
                         fun (x7559 : Ojs.t) ->
                           fun (x7560 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7556 ~previousValue:(Ojs.float_of_js x7557)
                                  ~currentValue:(Ojs.float_of_js x7558)
                                  ~currentIndex:(Ojs.float_of_js x7559)
                                  ~array:(t_of_js x7560))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7569 : 'tags this) ->
        fun
          ~callbackfn:(x7563 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7568 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7569) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7564 : Ojs.t) ->
                         fun (x7565 : Ojs.t) ->
                           fun (x7566 : Ojs.t) ->
                             fun (x7567 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7563
                                    ~previousValue:(Ojs.float_of_js x7564)
                                    ~currentValue:(Ojs.float_of_js x7565)
                                    ~currentIndex:(Ojs.float_of_js x7566)
                                    ~array:(t_of_js x7567))));(Ojs.float_to_js
                                                                 x7568)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7577 : 'tags this) ->
        fun
          ~callbackfn:(x7571 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7576 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7577) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7572 : Ojs.t) ->
                         fun (x7573 : Ojs.t) ->
                           fun (x7574 : Ojs.t) ->
                             fun (x7575 : Ojs.t) ->
                               Obj.magic
                                 (x7571 ~previousValue:(Obj.magic x7572)
                                    ~currentValue:(Ojs.float_of_js x7573)
                                    ~currentIndex:(Ojs.float_of_js x7574)
                                    ~array:(t_of_js x7575))));(Obj.magic
                                                                 x7576)|])
    let (reverse : 'tags this -> t) =
      fun (x7579 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7579) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x7586 : 'tags this) ->
        fun ~array:(x7581 : float ArrayLike.t) ->
          fun ?offset:(x7582 : float option) ->
            fun () ->
              ignore
                (let x7588 = this_to_js Obj.magic x7586 in
                 Ojs.call (Ojs.get_prop_ascii x7588 "set") "apply"
                   [|x7588;((let x7583 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7583 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x7581)|]);
                             (match x7582 with
                              | Some x7584 ->
                                  ignore
                                    (Ojs.call x7583 "push"
                                       [|(Ojs.float_to_js x7584)|])
                              | None -> ());
                             x7583))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x7594 : 'tags this) ->
        fun ?start:(x7589 : float option) ->
          fun ?end_:(x7590 : float option) ->
            fun () ->
              t_of_js
                (let x7596 = this_to_js Obj.magic x7594 in
                 Ojs.call (Ojs.get_prop_ascii x7596 "slice") "apply"
                   [|x7596;((let x7591 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7589 with
                              | Some x7593 ->
                                  ignore
                                    (Ojs.call x7591 "push"
                                       [|(Ojs.float_to_js x7593)|])
                              | None -> ());
                             (match x7590 with
                              | Some x7592 ->
                                  ignore
                                    (Ojs.call x7591 "push"
                                       [|(Ojs.float_to_js x7592)|])
                              | None -> ());
                             x7591))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7604 : 'tags this) ->
        fun
          ~predicate:(x7597 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7598 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7606 = this_to_js Obj.magic x7604 in
                 Ojs.call (Ojs.get_prop_ascii x7606 "some") "apply"
                   [|x7606;((let x7599 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7599 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7601 : Ojs.t) ->
                                          fun (x7602 : Ojs.t) ->
                                            fun (x7603 : Ojs.t) ->
                                              unknown_to_js
                                                (x7597
                                                   ~value:(Ojs.float_of_js
                                                             x7601)
                                                   ~index:(Ojs.float_of_js
                                                             x7602)
                                                   ~array:(t_of_js x7603))))|]);
                             (match x7598 with
                              | Some x7600 ->
                                  ignore
                                    (Ojs.call x7599 "push"
                                       [|(any_to_js x7600)|])
                              | None -> ());
                             x7599))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x7612 : 'tags this) ->
        fun ?compareFn:(x7607 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x7614 = this_to_js Obj.magic x7612 in
               Ojs.call (Ojs.get_prop_ascii x7614 "sort") "apply"
                 [|x7614;((let x7608 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7607 with
                            | Some x7609 ->
                                ignore
                                  (Ojs.call x7608 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x7610 : Ojs.t) ->
                                             fun (x7611 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x7609
                                                    ~a:(Ojs.float_of_js x7610)
                                                    ~b:(Ojs.float_of_js x7611))))|])
                            | None -> ());
                           x7608))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x7621 : 'tags this) ->
        fun ?begin_:(x7616 : float option) ->
          fun ?end_:(x7617 : float option) ->
            fun () ->
              t_of_js
                (let x7623 = this_to_js Obj.magic x7621 in
                 Ojs.call (Ojs.get_prop_ascii x7623 "subarray") "apply"
                   [|x7623;((let x7618 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7616 with
                              | Some x7620 ->
                                  ignore
                                    (Ojs.call x7618 "push"
                                       [|(Ojs.float_to_js x7620)|])
                              | None -> ());
                             (match x7617 with
                              | Some x7619 ->
                                  ignore
                                    (Ojs.call x7618 "push"
                                       [|(Ojs.float_to_js x7619)|])
                              | None -> ());
                             x7618))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x7624 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7624) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x7626 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7626) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x7628 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7628) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x7630 : 'tags this) ->
        fun (x7632 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x7630)
               (Ojs.float_to_js x7632))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x7633 : 'tags this) ->
        fun (x7635 : float) ->
          fun (x7636 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x7633) (Ojs.float_to_js x7635)
              (Ojs.float_to_js x7636)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint16Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x7637 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             [|(Iterable.t_to_js Ojs.float_to_js x7637)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7639 : float Iterable.t) ->
        fun ?mapfn:(x7640 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x7641 : any option) ->
            fun () ->
              t_of_js
                (let x7648 = Ojs.get_prop_ascii Ojs.global "Uint16Array" in
                 Ojs.call (Ojs.get_prop_ascii x7648 "from") "apply"
                   [|x7648;((let x7642 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7642 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x7639)|]);
                             (match x7640 with
                              | Some x7644 ->
                                  ignore
                                    (Ojs.call x7642 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x7645 : Ojs.t) ->
                                               fun (x7646 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x7644
                                                      ~v:(Ojs.float_of_js
                                                            x7645)
                                                      ~k:(Ojs.float_of_js
                                                            x7646))))|])
                              | None -> ());
                             (match x7641 with
                              | Some x7643 ->
                                  ignore
                                    (Ojs.call x7642 "push"
                                       [|(any_to_js x7643)|])
                              | None -> ());
                             x7642))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x7649 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             [|(Ojs.float_to_js x7649)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x7650 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             [|((match x7650 with
                 | `U1 x7651 -> ArrayLike.t_to_js Ojs.float_to_js x7651
                 | `U2 x7653 -> ArrayBufferLike.t_to_js x7653))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x7654 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x7655 : float option) ->
          fun ?length:(x7656 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Uint16Array")
                   (let x7657 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x7657 "push"
                         [|(ArrayBufferLike.t_to_js x7654)|]);
                    (match x7655 with
                     | Some x7659 ->
                         ignore
                           (Ojs.call x7657 "push" [|(Ojs.float_to_js x7659)|])
                     | None -> ());
                    (match x7656 with
                     | Some x7658 ->
                         ignore
                           (Ojs.call x7657 "push" [|(Ojs.float_to_js x7658)|])
                     | None -> ());
                    x7657))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x7660 : float list) ->
        t_of_js
          (let x7663 = Ojs.get_prop_ascii Ojs.global "Uint16Array" in
           Ojs.call (Ojs.get_prop_ascii x7663 "of") "apply"
             [|x7663;((let x7661 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x7662 : float) ->
                            ignore
                              (Ojs.call x7661 "push"
                                 [|(Ojs.float_to_js x7662)|])) x7660;
                       x7661))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x7664 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Uint16Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x7664)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7666 : 'T ArrayLike.t) ->
        fun ~mapfn:(x7667 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x7668 : any option) ->
            fun () ->
              t_of_js
                (let x7674 = Ojs.get_prop_ascii Ojs.global "Uint16Array" in
                 Ojs.call (Ojs.get_prop_ascii x7674 "from") "apply"
                   [|x7674;((let x7669 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7669 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x7666)|]);
                             ignore
                               (Ojs.call x7669 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x7671 : Ojs.t) ->
                                          fun (x7672 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x7667 ~v:(Obj.magic x7671)
                                                 ~k:(Ojs.float_of_js x7672))))|]);
                             (match x7668 with
                              | Some x7670 ->
                                  ignore
                                    (Ojs.call x7669 "push"
                                       [|(any_to_js x7670)|])
                              | None -> ());
                             x7669))|])
    let cast_from = Obj.magic
  end
module Int8Array =
  struct
    type t =
      [ `Int8Array  | float ArrayLike.tags_1 | float IterableIterator.tags_1]
        intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x7676 : Ojs.t) -> t_of_js x7676
    and t_0_to_js : t_0 -> Ojs.t = fun (x7675 : t) -> t_to_js x7675
    type tags =
      [ `Int8Array  | float ArrayLike.tags_1 | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Int8Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x7679 : Ojs.t) -> intf_of_js __tags_of_js x7679
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x7677 : __tags intf) -> intf_to_js __tags_to_js x7677
    let (at : 'tags this -> index:float -> float option) =
      fun (x7682 : 'tags this) ->
        fun ~index:(x7681 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7682) "at"
               [|(Ojs.float_to_js x7681)|])
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x7689 : 'tags this) ->
        fun ~searchElement:(x7685 : float) ->
          fun ?fromIndex:(x7686 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7691 = this_to_js Obj.magic x7689 in
                 Ojs.call (Ojs.get_prop_ascii x7691 "includes") "apply"
                   [|x7691;((let x7687 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7687 "push"
                                  [|(Ojs.float_to_js x7685)|]);
                             (match x7686 with
                              | Some x7688 ->
                                  ignore
                                    (Ojs.call x7687 "push"
                                       [|(Ojs.float_to_js x7688)|])
                              | None -> ());
                             x7687))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x7692 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x7694 : Ojs.t) ->
             let x7695 = x7694 in
             ((Ojs.float_of_js (Ojs.array_get x7695 0)),
               (Ojs.float_of_js (Ojs.array_get x7695 1))))
          (Ojs.call (this_to_js Obj.magic x7692) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x7696 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7696) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x7699 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7699) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x7702 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7702)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x7704 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7704) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x7706 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7706) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x7708 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7708) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7715 : 'tags this) ->
        fun ~target:(x7710 : float) ->
          fun ~start:(x7711 : float) ->
            fun ?end_:(x7712 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7717 = this_to_js Obj.magic x7715 in
                   Ojs.call (Ojs.get_prop_ascii x7717 "copyWithin") "apply"
                     [|x7717;((let x7713 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7713 "push"
                                    [|(Ojs.float_to_js x7710)|]);
                               ignore
                                 (Ojs.call x7713 "push"
                                    [|(Ojs.float_to_js x7711)|]);
                               (match x7712 with
                                | Some x7714 ->
                                    ignore
                                      (Ojs.call x7713 "push"
                                         [|(Ojs.float_to_js x7714)|])
                                | None -> ());
                               x7713))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7726 : 'tags this) ->
        fun
          ~predicate:(x7719 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7720 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7728 = this_to_js Obj.magic x7726 in
                 Ojs.call (Ojs.get_prop_ascii x7728 "every") "apply"
                   [|x7728;((let x7721 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7721 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7723 : Ojs.t) ->
                                          fun (x7724 : Ojs.t) ->
                                            fun (x7725 : Ojs.t) ->
                                              unknown_to_js
                                                (x7719
                                                   ~value:(Ojs.float_of_js
                                                             x7723)
                                                   ~index:(Ojs.float_of_js
                                                             x7724)
                                                   ~array:(t_of_js x7725))))|]);
                             (match x7720 with
                              | Some x7722 ->
                                  ignore
                                    (Ojs.call x7721 "push"
                                       [|(any_to_js x7722)|])
                              | None -> ());
                             x7721))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7735 : 'tags this) ->
        fun ~value:(x7729 : float) ->
          fun ?start:(x7730 : float option) ->
            fun ?end_:(x7731 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7737 = this_to_js Obj.magic x7735 in
                   Ojs.call (Ojs.get_prop_ascii x7737 "fill") "apply"
                     [|x7737;((let x7732 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7732 "push"
                                    [|(Ojs.float_to_js x7729)|]);
                               (match x7730 with
                                | Some x7734 ->
                                    ignore
                                      (Ojs.call x7732 "push"
                                         [|(Ojs.float_to_js x7734)|])
                                | None -> ());
                               (match x7731 with
                                | Some x7733 ->
                                    ignore
                                      (Ojs.call x7732 "push"
                                         [|(Ojs.float_to_js x7733)|])
                                | None -> ());
                               x7732))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7746 : 'tags this) ->
        fun ~predicate:(x7739 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x7740 : any option) ->
            fun () ->
              t_of_js
                (let x7748 = this_to_js Obj.magic x7746 in
                 Ojs.call (Ojs.get_prop_ascii x7748 "filter") "apply"
                   [|x7748;((let x7741 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7741 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7743 : Ojs.t) ->
                                          fun (x7744 : Ojs.t) ->
                                            fun (x7745 : Ojs.t) ->
                                              any_to_js
                                                (x7739
                                                   ~value:(Ojs.float_of_js
                                                             x7743)
                                                   ~index:(Ojs.float_of_js
                                                             x7744)
                                                   ~array:(t_of_js x7745))))|]);
                             (match x7740 with
                              | Some x7742 ->
                                  ignore
                                    (Ojs.call x7741 "push"
                                       [|(any_to_js x7742)|])
                              | None -> ());
                             x7741))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x7756 : 'tags this) ->
        fun ~predicate:(x7749 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7750 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x7758 = this_to_js Obj.magic x7756 in
                 Ojs.call (Ojs.get_prop_ascii x7758 "find") "apply"
                   [|x7758;((let x7751 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7751 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7753 : Ojs.t) ->
                                          fun (x7754 : Ojs.t) ->
                                            fun (x7755 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7749
                                                   ~value:(Ojs.float_of_js
                                                             x7753)
                                                   ~index:(Ojs.float_of_js
                                                             x7754)
                                                   ~obj:(t_of_js x7755))))|]);
                             (match x7750 with
                              | Some x7752 ->
                                  ignore
                                    (Ojs.call x7751 "push"
                                       [|(any_to_js x7752)|])
                              | None -> ());
                             x7751))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x7767 : 'tags this) ->
        fun ~predicate:(x7760 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7761 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x7769 = this_to_js Obj.magic x7767 in
                 Ojs.call (Ojs.get_prop_ascii x7769 "findIndex") "apply"
                   [|x7769;((let x7762 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7762 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7764 : Ojs.t) ->
                                          fun (x7765 : Ojs.t) ->
                                            fun (x7766 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7760
                                                   ~value:(Ojs.float_of_js
                                                             x7764)
                                                   ~index:(Ojs.float_of_js
                                                             x7765)
                                                   ~obj:(t_of_js x7766))))|]);
                             (match x7761 with
                              | Some x7763 ->
                                  ignore
                                    (Ojs.call x7762 "push"
                                       [|(any_to_js x7763)|])
                              | None -> ());
                             x7762))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x7777 : 'tags this) ->
        fun
          ~callbackfn:(x7770 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x7771 : any option) ->
            fun () ->
              ignore
                (let x7779 = this_to_js Obj.magic x7777 in
                 Ojs.call (Ojs.get_prop_ascii x7779 "forEach") "apply"
                   [|x7779;((let x7772 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7772 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7774 : Ojs.t) ->
                                          fun (x7775 : Ojs.t) ->
                                            fun (x7776 : Ojs.t) ->
                                              x7770
                                                ~value:(Ojs.float_of_js x7774)
                                                ~index:(Ojs.float_of_js x7775)
                                                ~array:(t_of_js x7776)))|]);
                             (match x7771 with
                              | Some x7773 ->
                                  ignore
                                    (Ojs.call x7772 "push"
                                       [|(any_to_js x7773)|])
                              | None -> ());
                             x7772))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7784 : 'tags this) ->
        fun ~searchElement:(x7780 : float) ->
          fun ?fromIndex:(x7781 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7786 = this_to_js Obj.magic x7784 in
                 Ojs.call (Ojs.get_prop_ascii x7786 "indexOf") "apply"
                   [|x7786;((let x7782 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7782 "push"
                                  [|(Ojs.float_to_js x7780)|]);
                             (match x7781 with
                              | Some x7783 ->
                                  ignore
                                    (Ojs.call x7782 "push"
                                       [|(Ojs.float_to_js x7783)|])
                              | None -> ());
                             x7782))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x7790 : 'tags this) ->
        fun ?separator:(x7787 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x7792 = this_to_js Obj.magic x7790 in
               Ojs.call (Ojs.get_prop_ascii x7792 "join") "apply"
                 [|x7792;((let x7788 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7787 with
                            | Some x7789 ->
                                ignore
                                  (Ojs.call x7788 "push"
                                     [|(Ojs.string_to_js x7789)|])
                            | None -> ());
                           x7788))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7797 : 'tags this) ->
        fun ~searchElement:(x7793 : float) ->
          fun ?fromIndex:(x7794 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7799 = this_to_js Obj.magic x7797 in
                 Ojs.call (Ojs.get_prop_ascii x7799 "lastIndexOf") "apply"
                   [|x7799;((let x7795 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7795 "push"
                                  [|(Ojs.float_to_js x7793)|]);
                             (match x7794 with
                              | Some x7796 ->
                                  ignore
                                    (Ojs.call x7795 "push"
                                       [|(Ojs.float_to_js x7796)|])
                              | None -> ());
                             x7795))|])
    let (get_length : 'tags this -> float) =
      fun (x7800 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7800) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7809 : 'tags this) ->
        fun
          ~callbackfn:(x7802 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x7803 : any option) ->
            fun () ->
              t_of_js
                (let x7811 = this_to_js Obj.magic x7809 in
                 Ojs.call (Ojs.get_prop_ascii x7811 "map") "apply"
                   [|x7811;((let x7804 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7804 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7806 : Ojs.t) ->
                                          fun (x7807 : Ojs.t) ->
                                            fun (x7808 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x7802
                                                   ~value:(Ojs.float_of_js
                                                             x7806)
                                                   ~index:(Ojs.float_of_js
                                                             x7807)
                                                   ~array:(t_of_js x7808))))|]);
                             (match x7803 with
                              | Some x7805 ->
                                  ignore
                                    (Ojs.call x7804 "push"
                                       [|(any_to_js x7805)|])
                              | None -> ());
                             x7804))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7817 : 'tags this) ->
        fun
          ~callbackfn:(x7812 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7817) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x7813 : Ojs.t) ->
                       fun (x7814 : Ojs.t) ->
                         fun (x7815 : Ojs.t) ->
                           fun (x7816 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7812 ~previousValue:(Ojs.float_of_js x7813)
                                  ~currentValue:(Ojs.float_of_js x7814)
                                  ~currentIndex:(Ojs.float_of_js x7815)
                                  ~array:(t_of_js x7816))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7825 : 'tags this) ->
        fun
          ~callbackfn:(x7819 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7824 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7825) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7820 : Ojs.t) ->
                         fun (x7821 : Ojs.t) ->
                           fun (x7822 : Ojs.t) ->
                             fun (x7823 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7819
                                    ~previousValue:(Ojs.float_of_js x7820)
                                    ~currentValue:(Ojs.float_of_js x7821)
                                    ~currentIndex:(Ojs.float_of_js x7822)
                                    ~array:(t_of_js x7823))));(Ojs.float_to_js
                                                                 x7824)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7833 : 'tags this) ->
        fun
          ~callbackfn:(x7827 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7832 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7833) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7828 : Ojs.t) ->
                         fun (x7829 : Ojs.t) ->
                           fun (x7830 : Ojs.t) ->
                             fun (x7831 : Ojs.t) ->
                               Obj.magic
                                 (x7827 ~previousValue:(Obj.magic x7828)
                                    ~currentValue:(Ojs.float_of_js x7829)
                                    ~currentIndex:(Ojs.float_of_js x7830)
                                    ~array:(t_of_js x7831))));(Obj.magic
                                                                 x7832)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7840 : 'tags this) ->
        fun
          ~callbackfn:(x7835 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7840) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x7836 : Ojs.t) ->
                       fun (x7837 : Ojs.t) ->
                         fun (x7838 : Ojs.t) ->
                           fun (x7839 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7835 ~previousValue:(Ojs.float_of_js x7836)
                                  ~currentValue:(Ojs.float_of_js x7837)
                                  ~currentIndex:(Ojs.float_of_js x7838)
                                  ~array:(t_of_js x7839))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7848 : 'tags this) ->
        fun
          ~callbackfn:(x7842 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7847 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7848) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7843 : Ojs.t) ->
                         fun (x7844 : Ojs.t) ->
                           fun (x7845 : Ojs.t) ->
                             fun (x7846 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7842
                                    ~previousValue:(Ojs.float_of_js x7843)
                                    ~currentValue:(Ojs.float_of_js x7844)
                                    ~currentIndex:(Ojs.float_of_js x7845)
                                    ~array:(t_of_js x7846))));(Ojs.float_to_js
                                                                 x7847)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7856 : 'tags this) ->
        fun
          ~callbackfn:(x7850 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7855 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7856) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7851 : Ojs.t) ->
                         fun (x7852 : Ojs.t) ->
                           fun (x7853 : Ojs.t) ->
                             fun (x7854 : Ojs.t) ->
                               Obj.magic
                                 (x7850 ~previousValue:(Obj.magic x7851)
                                    ~currentValue:(Ojs.float_of_js x7852)
                                    ~currentIndex:(Ojs.float_of_js x7853)
                                    ~array:(t_of_js x7854))));(Obj.magic
                                                                 x7855)|])
    let (reverse : 'tags this -> t) =
      fun (x7858 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7858) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x7865 : 'tags this) ->
        fun ~array:(x7860 : float ArrayLike.t) ->
          fun ?offset:(x7861 : float option) ->
            fun () ->
              ignore
                (let x7867 = this_to_js Obj.magic x7865 in
                 Ojs.call (Ojs.get_prop_ascii x7867 "set") "apply"
                   [|x7867;((let x7862 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7862 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x7860)|]);
                             (match x7861 with
                              | Some x7863 ->
                                  ignore
                                    (Ojs.call x7862 "push"
                                       [|(Ojs.float_to_js x7863)|])
                              | None -> ());
                             x7862))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x7873 : 'tags this) ->
        fun ?start:(x7868 : float option) ->
          fun ?end_:(x7869 : float option) ->
            fun () ->
              t_of_js
                (let x7875 = this_to_js Obj.magic x7873 in
                 Ojs.call (Ojs.get_prop_ascii x7875 "slice") "apply"
                   [|x7875;((let x7870 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7868 with
                              | Some x7872 ->
                                  ignore
                                    (Ojs.call x7870 "push"
                                       [|(Ojs.float_to_js x7872)|])
                              | None -> ());
                             (match x7869 with
                              | Some x7871 ->
                                  ignore
                                    (Ojs.call x7870 "push"
                                       [|(Ojs.float_to_js x7871)|])
                              | None -> ());
                             x7870))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7883 : 'tags this) ->
        fun
          ~predicate:(x7876 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7877 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7885 = this_to_js Obj.magic x7883 in
                 Ojs.call (Ojs.get_prop_ascii x7885 "some") "apply"
                   [|x7885;((let x7878 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7878 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7880 : Ojs.t) ->
                                          fun (x7881 : Ojs.t) ->
                                            fun (x7882 : Ojs.t) ->
                                              unknown_to_js
                                                (x7876
                                                   ~value:(Ojs.float_of_js
                                                             x7880)
                                                   ~index:(Ojs.float_of_js
                                                             x7881)
                                                   ~array:(t_of_js x7882))))|]);
                             (match x7877 with
                              | Some x7879 ->
                                  ignore
                                    (Ojs.call x7878 "push"
                                       [|(any_to_js x7879)|])
                              | None -> ());
                             x7878))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x7891 : 'tags this) ->
        fun ?compareFn:(x7886 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x7893 = this_to_js Obj.magic x7891 in
               Ojs.call (Ojs.get_prop_ascii x7893 "sort") "apply"
                 [|x7893;((let x7887 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7886 with
                            | Some x7888 ->
                                ignore
                                  (Ojs.call x7887 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x7889 : Ojs.t) ->
                                             fun (x7890 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x7888
                                                    ~a:(Ojs.float_of_js x7889)
                                                    ~b:(Ojs.float_of_js x7890))))|])
                            | None -> ());
                           x7887))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x7900 : 'tags this) ->
        fun ?begin_:(x7895 : float option) ->
          fun ?end_:(x7896 : float option) ->
            fun () ->
              t_of_js
                (let x7902 = this_to_js Obj.magic x7900 in
                 Ojs.call (Ojs.get_prop_ascii x7902 "subarray") "apply"
                   [|x7902;((let x7897 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7895 with
                              | Some x7899 ->
                                  ignore
                                    (Ojs.call x7897 "push"
                                       [|(Ojs.float_to_js x7899)|])
                              | None -> ());
                             (match x7896 with
                              | Some x7898 ->
                                  ignore
                                    (Ojs.call x7897 "push"
                                       [|(Ojs.float_to_js x7898)|])
                              | None -> ());
                             x7897))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x7903 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7903) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x7905 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7905) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x7907 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7907) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x7909 : 'tags this) ->
        fun (x7911 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x7909)
               (Ojs.float_to_js x7911))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x7912 : 'tags this) ->
        fun (x7914 : float) ->
          fun (x7915 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x7912) (Ojs.float_to_js x7914)
              (Ojs.float_to_js x7915)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int8Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x7916 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int8Array")
             [|(Iterable.t_to_js Ojs.float_to_js x7916)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7918 : float Iterable.t) ->
        fun ?mapfn:(x7919 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x7920 : any option) ->
            fun () ->
              t_of_js
                (let x7927 = Ojs.get_prop_ascii Ojs.global "Int8Array" in
                 Ojs.call (Ojs.get_prop_ascii x7927 "from") "apply"
                   [|x7927;((let x7921 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7921 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x7918)|]);
                             (match x7919 with
                              | Some x7923 ->
                                  ignore
                                    (Ojs.call x7921 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x7924 : Ojs.t) ->
                                               fun (x7925 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x7923
                                                      ~v:(Ojs.float_of_js
                                                            x7924)
                                                      ~k:(Ojs.float_of_js
                                                            x7925))))|])
                              | None -> ());
                             (match x7920 with
                              | Some x7922 ->
                                  ignore
                                    (Ojs.call x7921 "push"
                                       [|(any_to_js x7922)|])
                              | None -> ());
                             x7921))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int8Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x7928 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int8Array")
             [|(Ojs.float_to_js x7928)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x7929 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int8Array")
             [|((match x7929 with
                 | `U1 x7930 -> ArrayLike.t_to_js Ojs.float_to_js x7930
                 | `U2 x7932 -> ArrayBufferLike.t_to_js x7932))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x7933 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x7934 : float option) ->
          fun ?length:(x7935 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Int8Array")
                   (let x7936 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x7936 "push"
                         [|(ArrayBufferLike.t_to_js x7933)|]);
                    (match x7934 with
                     | Some x7938 ->
                         ignore
                           (Ojs.call x7936 "push" [|(Ojs.float_to_js x7938)|])
                     | None -> ());
                    (match x7935 with
                     | Some x7937 ->
                         ignore
                           (Ojs.call x7936 "push" [|(Ojs.float_to_js x7937)|])
                     | None -> ());
                    x7936))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int8Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x7939 : float list) ->
        t_of_js
          (let x7942 = Ojs.get_prop_ascii Ojs.global "Int8Array" in
           Ojs.call (Ojs.get_prop_ascii x7942 "of") "apply"
             [|x7942;((let x7940 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x7941 : float) ->
                            ignore
                              (Ojs.call x7940 "push"
                                 [|(Ojs.float_to_js x7941)|])) x7939;
                       x7940))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x7943 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Int8Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x7943)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7945 : 'T ArrayLike.t) ->
        fun ~mapfn:(x7946 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x7947 : any option) ->
            fun () ->
              t_of_js
                (let x7953 = Ojs.get_prop_ascii Ojs.global "Int8Array" in
                 Ojs.call (Ojs.get_prop_ascii x7953 "from") "apply"
                   [|x7953;((let x7948 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7948 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x7945)|]);
                             ignore
                               (Ojs.call x7948 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x7950 : Ojs.t) ->
                                          fun (x7951 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x7946 ~v:(Obj.magic x7950)
                                                 ~k:(Ojs.float_of_js x7951))))|]);
                             (match x7947 with
                              | Some x7949 ->
                                  ignore
                                    (Ojs.call x7948 "push"
                                       [|(any_to_js x7949)|])
                              | None -> ());
                             x7948))|])
    let cast_from = Obj.magic
  end
module Int32Array =
  struct
    type t =
      [ `Int32Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x7955 : Ojs.t) -> t_of_js x7955
    and t_0_to_js : t_0 -> Ojs.t = fun (x7954 : t) -> t_to_js x7954
    type tags =
      [ `Int32Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Int32Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x7958 : Ojs.t) -> intf_of_js __tags_of_js x7958
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x7956 : __tags intf) -> intf_to_js __tags_to_js x7956
    let (at : 'tags this -> index:float -> float option) =
      fun (x7961 : 'tags this) ->
        fun ~index:(x7960 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7961) "at"
               [|(Ojs.float_to_js x7960)|])
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x7968 : 'tags this) ->
        fun ~searchElement:(x7964 : float) ->
          fun ?fromIndex:(x7965 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7970 = this_to_js Obj.magic x7968 in
                 Ojs.call (Ojs.get_prop_ascii x7970 "includes") "apply"
                   [|x7970;((let x7966 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7966 "push"
                                  [|(Ojs.float_to_js x7964)|]);
                             (match x7965 with
                              | Some x7967 ->
                                  ignore
                                    (Ojs.call x7966 "push"
                                       [|(Ojs.float_to_js x7967)|])
                              | None -> ());
                             x7966))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x7971 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x7973 : Ojs.t) ->
             let x7974 = x7973 in
             ((Ojs.float_of_js (Ojs.array_get x7974 0)),
               (Ojs.float_of_js (Ojs.array_get x7974 1))))
          (Ojs.call (this_to_js Obj.magic x7971) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x7975 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7975) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x7978 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7978) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x7981 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7981)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x7983 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7983) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x7985 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7985) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x7987 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7987) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7994 : 'tags this) ->
        fun ~target:(x7989 : float) ->
          fun ~start:(x7990 : float) ->
            fun ?end_:(x7991 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7996 = this_to_js Obj.magic x7994 in
                   Ojs.call (Ojs.get_prop_ascii x7996 "copyWithin") "apply"
                     [|x7996;((let x7992 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7992 "push"
                                    [|(Ojs.float_to_js x7989)|]);
                               ignore
                                 (Ojs.call x7992 "push"
                                    [|(Ojs.float_to_js x7990)|]);
                               (match x7991 with
                                | Some x7993 ->
                                    ignore
                                      (Ojs.call x7992 "push"
                                         [|(Ojs.float_to_js x7993)|])
                                | None -> ());
                               x7992))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x8005 : 'tags this) ->
        fun
          ~predicate:(x7998 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7999 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8007 = this_to_js Obj.magic x8005 in
                 Ojs.call (Ojs.get_prop_ascii x8007 "every") "apply"
                   [|x8007;((let x8000 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8000 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8002 : Ojs.t) ->
                                          fun (x8003 : Ojs.t) ->
                                            fun (x8004 : Ojs.t) ->
                                              unknown_to_js
                                                (x7998
                                                   ~value:(Ojs.float_of_js
                                                             x8002)
                                                   ~index:(Ojs.float_of_js
                                                             x8003)
                                                   ~array:(t_of_js x8004))))|]);
                             (match x7999 with
                              | Some x8001 ->
                                  ignore
                                    (Ojs.call x8000 "push"
                                       [|(any_to_js x8001)|])
                              | None -> ());
                             x8000))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x8014 : 'tags this) ->
        fun ~value:(x8008 : float) ->
          fun ?start:(x8009 : float option) ->
            fun ?end_:(x8010 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x8016 = this_to_js Obj.magic x8014 in
                   Ojs.call (Ojs.get_prop_ascii x8016 "fill") "apply"
                     [|x8016;((let x8011 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x8011 "push"
                                    [|(Ojs.float_to_js x8008)|]);
                               (match x8009 with
                                | Some x8013 ->
                                    ignore
                                      (Ojs.call x8011 "push"
                                         [|(Ojs.float_to_js x8013)|])
                                | None -> ());
                               (match x8010 with
                                | Some x8012 ->
                                    ignore
                                      (Ojs.call x8011 "push"
                                         [|(Ojs.float_to_js x8012)|])
                                | None -> ());
                               x8011))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x8025 : 'tags this) ->
        fun ~predicate:(x8018 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x8019 : any option) ->
            fun () ->
              t_of_js
                (let x8027 = this_to_js Obj.magic x8025 in
                 Ojs.call (Ojs.get_prop_ascii x8027 "filter") "apply"
                   [|x8027;((let x8020 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8020 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8022 : Ojs.t) ->
                                          fun (x8023 : Ojs.t) ->
                                            fun (x8024 : Ojs.t) ->
                                              any_to_js
                                                (x8018
                                                   ~value:(Ojs.float_of_js
                                                             x8022)
                                                   ~index:(Ojs.float_of_js
                                                             x8023)
                                                   ~array:(t_of_js x8024))))|]);
                             (match x8019 with
                              | Some x8021 ->
                                  ignore
                                    (Ojs.call x8020 "push"
                                       [|(any_to_js x8021)|])
                              | None -> ());
                             x8020))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x8035 : 'tags this) ->
        fun ~predicate:(x8028 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x8029 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x8037 = this_to_js Obj.magic x8035 in
                 Ojs.call (Ojs.get_prop_ascii x8037 "find") "apply"
                   [|x8037;((let x8030 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8030 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8032 : Ojs.t) ->
                                          fun (x8033 : Ojs.t) ->
                                            fun (x8034 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8028
                                                   ~value:(Ojs.float_of_js
                                                             x8032)
                                                   ~index:(Ojs.float_of_js
                                                             x8033)
                                                   ~obj:(t_of_js x8034))))|]);
                             (match x8029 with
                              | Some x8031 ->
                                  ignore
                                    (Ojs.call x8030 "push"
                                       [|(any_to_js x8031)|])
                              | None -> ());
                             x8030))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x8046 : 'tags this) ->
        fun ~predicate:(x8039 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x8040 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x8048 = this_to_js Obj.magic x8046 in
                 Ojs.call (Ojs.get_prop_ascii x8048 "findIndex") "apply"
                   [|x8048;((let x8041 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8041 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8043 : Ojs.t) ->
                                          fun (x8044 : Ojs.t) ->
                                            fun (x8045 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8039
                                                   ~value:(Ojs.float_of_js
                                                             x8043)
                                                   ~index:(Ojs.float_of_js
                                                             x8044)
                                                   ~obj:(t_of_js x8045))))|]);
                             (match x8040 with
                              | Some x8042 ->
                                  ignore
                                    (Ojs.call x8041 "push"
                                       [|(any_to_js x8042)|])
                              | None -> ());
                             x8041))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x8056 : 'tags this) ->
        fun
          ~callbackfn:(x8049 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x8050 : any option) ->
            fun () ->
              ignore
                (let x8058 = this_to_js Obj.magic x8056 in
                 Ojs.call (Ojs.get_prop_ascii x8058 "forEach") "apply"
                   [|x8058;((let x8051 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8051 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8053 : Ojs.t) ->
                                          fun (x8054 : Ojs.t) ->
                                            fun (x8055 : Ojs.t) ->
                                              x8049
                                                ~value:(Ojs.float_of_js x8053)
                                                ~index:(Ojs.float_of_js x8054)
                                                ~array:(t_of_js x8055)))|]);
                             (match x8050 with
                              | Some x8052 ->
                                  ignore
                                    (Ojs.call x8051 "push"
                                       [|(any_to_js x8052)|])
                              | None -> ());
                             x8051))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x8063 : 'tags this) ->
        fun ~searchElement:(x8059 : float) ->
          fun ?fromIndex:(x8060 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x8065 = this_to_js Obj.magic x8063 in
                 Ojs.call (Ojs.get_prop_ascii x8065 "indexOf") "apply"
                   [|x8065;((let x8061 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8061 "push"
                                  [|(Ojs.float_to_js x8059)|]);
                             (match x8060 with
                              | Some x8062 ->
                                  ignore
                                    (Ojs.call x8061 "push"
                                       [|(Ojs.float_to_js x8062)|])
                              | None -> ());
                             x8061))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x8069 : 'tags this) ->
        fun ?separator:(x8066 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x8071 = this_to_js Obj.magic x8069 in
               Ojs.call (Ojs.get_prop_ascii x8071 "join") "apply"
                 [|x8071;((let x8067 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8066 with
                            | Some x8068 ->
                                ignore
                                  (Ojs.call x8067 "push"
                                     [|(Ojs.string_to_js x8068)|])
                            | None -> ());
                           x8067))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x8076 : 'tags this) ->
        fun ~searchElement:(x8072 : float) ->
          fun ?fromIndex:(x8073 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x8078 = this_to_js Obj.magic x8076 in
                 Ojs.call (Ojs.get_prop_ascii x8078 "lastIndexOf") "apply"
                   [|x8078;((let x8074 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8074 "push"
                                  [|(Ojs.float_to_js x8072)|]);
                             (match x8073 with
                              | Some x8075 ->
                                  ignore
                                    (Ojs.call x8074 "push"
                                       [|(Ojs.float_to_js x8075)|])
                              | None -> ());
                             x8074))|])
    let (get_length : 'tags this -> float) =
      fun (x8079 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8079) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x8088 : 'tags this) ->
        fun
          ~callbackfn:(x8081 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x8082 : any option) ->
            fun () ->
              t_of_js
                (let x8090 = this_to_js Obj.magic x8088 in
                 Ojs.call (Ojs.get_prop_ascii x8090 "map") "apply"
                   [|x8090;((let x8083 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8083 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8085 : Ojs.t) ->
                                          fun (x8086 : Ojs.t) ->
                                            fun (x8087 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x8081
                                                   ~value:(Ojs.float_of_js
                                                             x8085)
                                                   ~index:(Ojs.float_of_js
                                                             x8086)
                                                   ~array:(t_of_js x8087))))|]);
                             (match x8082 with
                              | Some x8084 ->
                                  ignore
                                    (Ojs.call x8083 "push"
                                       [|(any_to_js x8084)|])
                              | None -> ());
                             x8083))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x8096 : 'tags this) ->
        fun
          ~callbackfn:(x8091 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x8096) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x8092 : Ojs.t) ->
                       fun (x8093 : Ojs.t) ->
                         fun (x8094 : Ojs.t) ->
                           fun (x8095 : Ojs.t) ->
                             Ojs.float_to_js
                               (x8091 ~previousValue:(Ojs.float_of_js x8092)
                                  ~currentValue:(Ojs.float_of_js x8093)
                                  ~currentIndex:(Ojs.float_of_js x8094)
                                  ~array:(t_of_js x8095))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x8104 : 'tags this) ->
        fun
          ~callbackfn:(x8098 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x8103 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x8104) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x8099 : Ojs.t) ->
                         fun (x8100 : Ojs.t) ->
                           fun (x8101 : Ojs.t) ->
                             fun (x8102 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x8098
                                    ~previousValue:(Ojs.float_of_js x8099)
                                    ~currentValue:(Ojs.float_of_js x8100)
                                    ~currentIndex:(Ojs.float_of_js x8101)
                                    ~array:(t_of_js x8102))));(Ojs.float_to_js
                                                                 x8103)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x8112 : 'tags this) ->
        fun
          ~callbackfn:(x8106 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x8111 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x8112) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x8107 : Ojs.t) ->
                         fun (x8108 : Ojs.t) ->
                           fun (x8109 : Ojs.t) ->
                             fun (x8110 : Ojs.t) ->
                               Obj.magic
                                 (x8106 ~previousValue:(Obj.magic x8107)
                                    ~currentValue:(Ojs.float_of_js x8108)
                                    ~currentIndex:(Ojs.float_of_js x8109)
                                    ~array:(t_of_js x8110))));(Obj.magic
                                                                 x8111)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x8119 : 'tags this) ->
        fun
          ~callbackfn:(x8114 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x8119) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x8115 : Ojs.t) ->
                       fun (x8116 : Ojs.t) ->
                         fun (x8117 : Ojs.t) ->
                           fun (x8118 : Ojs.t) ->
                             Ojs.float_to_js
                               (x8114 ~previousValue:(Ojs.float_of_js x8115)
                                  ~currentValue:(Ojs.float_of_js x8116)
                                  ~currentIndex:(Ojs.float_of_js x8117)
                                  ~array:(t_of_js x8118))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x8127 : 'tags this) ->
        fun
          ~callbackfn:(x8121 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x8126 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x8127) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x8122 : Ojs.t) ->
                         fun (x8123 : Ojs.t) ->
                           fun (x8124 : Ojs.t) ->
                             fun (x8125 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x8121
                                    ~previousValue:(Ojs.float_of_js x8122)
                                    ~currentValue:(Ojs.float_of_js x8123)
                                    ~currentIndex:(Ojs.float_of_js x8124)
                                    ~array:(t_of_js x8125))));(Ojs.float_to_js
                                                                 x8126)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x8135 : 'tags this) ->
        fun
          ~callbackfn:(x8129 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x8134 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x8135) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x8130 : Ojs.t) ->
                         fun (x8131 : Ojs.t) ->
                           fun (x8132 : Ojs.t) ->
                             fun (x8133 : Ojs.t) ->
                               Obj.magic
                                 (x8129 ~previousValue:(Obj.magic x8130)
                                    ~currentValue:(Ojs.float_of_js x8131)
                                    ~currentIndex:(Ojs.float_of_js x8132)
                                    ~array:(t_of_js x8133))));(Obj.magic
                                                                 x8134)|])
    let (reverse : 'tags this -> t) =
      fun (x8137 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x8137) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x8144 : 'tags this) ->
        fun ~array:(x8139 : float ArrayLike.t) ->
          fun ?offset:(x8140 : float option) ->
            fun () ->
              ignore
                (let x8146 = this_to_js Obj.magic x8144 in
                 Ojs.call (Ojs.get_prop_ascii x8146 "set") "apply"
                   [|x8146;((let x8141 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8141 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x8139)|]);
                             (match x8140 with
                              | Some x8142 ->
                                  ignore
                                    (Ojs.call x8141 "push"
                                       [|(Ojs.float_to_js x8142)|])
                              | None -> ());
                             x8141))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x8152 : 'tags this) ->
        fun ?start:(x8147 : float option) ->
          fun ?end_:(x8148 : float option) ->
            fun () ->
              t_of_js
                (let x8154 = this_to_js Obj.magic x8152 in
                 Ojs.call (Ojs.get_prop_ascii x8154 "slice") "apply"
                   [|x8154;((let x8149 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8147 with
                              | Some x8151 ->
                                  ignore
                                    (Ojs.call x8149 "push"
                                       [|(Ojs.float_to_js x8151)|])
                              | None -> ());
                             (match x8148 with
                              | Some x8150 ->
                                  ignore
                                    (Ojs.call x8149 "push"
                                       [|(Ojs.float_to_js x8150)|])
                              | None -> ());
                             x8149))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x8162 : 'tags this) ->
        fun
          ~predicate:(x8155 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x8156 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8164 = this_to_js Obj.magic x8162 in
                 Ojs.call (Ojs.get_prop_ascii x8164 "some") "apply"
                   [|x8164;((let x8157 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8157 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8159 : Ojs.t) ->
                                          fun (x8160 : Ojs.t) ->
                                            fun (x8161 : Ojs.t) ->
                                              unknown_to_js
                                                (x8155
                                                   ~value:(Ojs.float_of_js
                                                             x8159)
                                                   ~index:(Ojs.float_of_js
                                                             x8160)
                                                   ~array:(t_of_js x8161))))|]);
                             (match x8156 with
                              | Some x8158 ->
                                  ignore
                                    (Ojs.call x8157 "push"
                                       [|(any_to_js x8158)|])
                              | None -> ());
                             x8157))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x8170 : 'tags this) ->
        fun ?compareFn:(x8165 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x8172 = this_to_js Obj.magic x8170 in
               Ojs.call (Ojs.get_prop_ascii x8172 "sort") "apply"
                 [|x8172;((let x8166 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8165 with
                            | Some x8167 ->
                                ignore
                                  (Ojs.call x8166 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x8168 : Ojs.t) ->
                                             fun (x8169 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x8167
                                                    ~a:(Ojs.float_of_js x8168)
                                                    ~b:(Ojs.float_of_js x8169))))|])
                            | None -> ());
                           x8166))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x8179 : 'tags this) ->
        fun ?begin_:(x8174 : float option) ->
          fun ?end_:(x8175 : float option) ->
            fun () ->
              t_of_js
                (let x8181 = this_to_js Obj.magic x8179 in
                 Ojs.call (Ojs.get_prop_ascii x8181 "subarray") "apply"
                   [|x8181;((let x8176 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8174 with
                              | Some x8178 ->
                                  ignore
                                    (Ojs.call x8176 "push"
                                       [|(Ojs.float_to_js x8178)|])
                              | None -> ());
                             (match x8175 with
                              | Some x8177 ->
                                  ignore
                                    (Ojs.call x8176 "push"
                                       [|(Ojs.float_to_js x8177)|])
                              | None -> ());
                             x8176))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x8182 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8182) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x8184 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8184) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x8186 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x8186) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x8188 : 'tags this) ->
        fun (x8190 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x8188)
               (Ojs.float_to_js x8190))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x8191 : 'tags this) ->
        fun (x8193 : float) ->
          fun (x8194 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x8191) (Ojs.float_to_js x8193)
              (Ojs.float_to_js x8194)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int32Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x8195 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int32Array")
             [|(Iterable.t_to_js Ojs.float_to_js x8195)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x8197 : float Iterable.t) ->
        fun ?mapfn:(x8198 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x8199 : any option) ->
            fun () ->
              t_of_js
                (let x8206 = Ojs.get_prop_ascii Ojs.global "Int32Array" in
                 Ojs.call (Ojs.get_prop_ascii x8206 "from") "apply"
                   [|x8206;((let x8200 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8200 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x8197)|]);
                             (match x8198 with
                              | Some x8202 ->
                                  ignore
                                    (Ojs.call x8200 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x8203 : Ojs.t) ->
                                               fun (x8204 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x8202
                                                      ~v:(Ojs.float_of_js
                                                            x8203)
                                                      ~k:(Ojs.float_of_js
                                                            x8204))))|])
                              | None -> ());
                             (match x8199 with
                              | Some x8201 ->
                                  ignore
                                    (Ojs.call x8200 "push"
                                       [|(any_to_js x8201)|])
                              | None -> ());
                             x8200))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int32Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x8207 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int32Array")
             [|(Ojs.float_to_js x8207)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x8208 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int32Array")
             [|((match x8208 with
                 | `U1 x8209 -> ArrayLike.t_to_js Ojs.float_to_js x8209
                 | `U2 x8211 -> ArrayBufferLike.t_to_js x8211))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x8212 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x8213 : float option) ->
          fun ?length:(x8214 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Int32Array")
                   (let x8215 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x8215 "push"
                         [|(ArrayBufferLike.t_to_js x8212)|]);
                    (match x8213 with
                     | Some x8217 ->
                         ignore
                           (Ojs.call x8215 "push" [|(Ojs.float_to_js x8217)|])
                     | None -> ());
                    (match x8214 with
                     | Some x8216 ->
                         ignore
                           (Ojs.call x8215 "push" [|(Ojs.float_to_js x8216)|])
                     | None -> ());
                    x8215))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int32Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x8218 : float list) ->
        t_of_js
          (let x8221 = Ojs.get_prop_ascii Ojs.global "Int32Array" in
           Ojs.call (Ojs.get_prop_ascii x8221 "of") "apply"
             [|x8221;((let x8219 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x8220 : float) ->
                            ignore
                              (Ojs.call x8219 "push"
                                 [|(Ojs.float_to_js x8220)|])) x8218;
                       x8219))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x8222 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Int32Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x8222)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x8224 : 'T ArrayLike.t) ->
        fun ~mapfn:(x8225 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x8226 : any option) ->
            fun () ->
              t_of_js
                (let x8232 = Ojs.get_prop_ascii Ojs.global "Int32Array" in
                 Ojs.call (Ojs.get_prop_ascii x8232 "from") "apply"
                   [|x8232;((let x8227 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8227 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x8224)|]);
                             ignore
                               (Ojs.call x8227 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x8229 : Ojs.t) ->
                                          fun (x8230 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x8225 ~v:(Obj.magic x8229)
                                                 ~k:(Ojs.float_of_js x8230))))|]);
                             (match x8226 with
                              | Some x8228 ->
                                  ignore
                                    (Ojs.call x8227 "push"
                                       [|(any_to_js x8228)|])
                              | None -> ());
                             x8227))|])
    let cast_from = Obj.magic
  end
module Int16Array =
  struct
    type t =
      [ `Int16Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8234 : Ojs.t) -> t_of_js x8234
    and t_0_to_js : t_0 -> Ojs.t = fun (x8233 : t) -> t_to_js x8233
    type tags =
      [ `Int16Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Int16Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x8237 : Ojs.t) -> intf_of_js __tags_of_js x8237
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x8235 : __tags intf) -> intf_to_js __tags_to_js x8235
    let (at : 'tags this -> index:float -> float option) =
      fun (x8240 : 'tags this) ->
        fun ~index:(x8239 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x8240) "at"
               [|(Ojs.float_to_js x8239)|])
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x8247 : 'tags this) ->
        fun ~searchElement:(x8243 : float) ->
          fun ?fromIndex:(x8244 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8249 = this_to_js Obj.magic x8247 in
                 Ojs.call (Ojs.get_prop_ascii x8249 "includes") "apply"
                   [|x8249;((let x8245 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8245 "push"
                                  [|(Ojs.float_to_js x8243)|]);
                             (match x8244 with
                              | Some x8246 ->
                                  ignore
                                    (Ojs.call x8245 "push"
                                       [|(Ojs.float_to_js x8246)|])
                              | None -> ());
                             x8245))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x8250 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x8252 : Ojs.t) ->
             let x8253 = x8252 in
             ((Ojs.float_of_js (Ojs.array_get x8253 0)),
               (Ojs.float_of_js (Ojs.array_get x8253 1))))
          (Ojs.call (this_to_js Obj.magic x8250) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x8254 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x8254) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x8257 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x8257) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x8260 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8260)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x8262 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8262) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x8264 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8264) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x8266 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8266) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x8273 : 'tags this) ->
        fun ~target:(x8268 : float) ->
          fun ~start:(x8269 : float) ->
            fun ?end_:(x8270 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x8275 = this_to_js Obj.magic x8273 in
                   Ojs.call (Ojs.get_prop_ascii x8275 "copyWithin") "apply"
                     [|x8275;((let x8271 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x8271 "push"
                                    [|(Ojs.float_to_js x8268)|]);
                               ignore
                                 (Ojs.call x8271 "push"
                                    [|(Ojs.float_to_js x8269)|]);
                               (match x8270 with
                                | Some x8272 ->
                                    ignore
                                      (Ojs.call x8271 "push"
                                         [|(Ojs.float_to_js x8272)|])
                                | None -> ());
                               x8271))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x8284 : 'tags this) ->
        fun
          ~predicate:(x8277 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x8278 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8286 = this_to_js Obj.magic x8284 in
                 Ojs.call (Ojs.get_prop_ascii x8286 "every") "apply"
                   [|x8286;((let x8279 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8279 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8281 : Ojs.t) ->
                                          fun (x8282 : Ojs.t) ->
                                            fun (x8283 : Ojs.t) ->
                                              unknown_to_js
                                                (x8277
                                                   ~value:(Ojs.float_of_js
                                                             x8281)
                                                   ~index:(Ojs.float_of_js
                                                             x8282)
                                                   ~array:(t_of_js x8283))))|]);
                             (match x8278 with
                              | Some x8280 ->
                                  ignore
                                    (Ojs.call x8279 "push"
                                       [|(any_to_js x8280)|])
                              | None -> ());
                             x8279))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x8293 : 'tags this) ->
        fun ~value:(x8287 : float) ->
          fun ?start:(x8288 : float option) ->
            fun ?end_:(x8289 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x8295 = this_to_js Obj.magic x8293 in
                   Ojs.call (Ojs.get_prop_ascii x8295 "fill") "apply"
                     [|x8295;((let x8290 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x8290 "push"
                                    [|(Ojs.float_to_js x8287)|]);
                               (match x8288 with
                                | Some x8292 ->
                                    ignore
                                      (Ojs.call x8290 "push"
                                         [|(Ojs.float_to_js x8292)|])
                                | None -> ());
                               (match x8289 with
                                | Some x8291 ->
                                    ignore
                                      (Ojs.call x8290 "push"
                                         [|(Ojs.float_to_js x8291)|])
                                | None -> ());
                               x8290))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x8304 : 'tags this) ->
        fun ~predicate:(x8297 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x8298 : any option) ->
            fun () ->
              t_of_js
                (let x8306 = this_to_js Obj.magic x8304 in
                 Ojs.call (Ojs.get_prop_ascii x8306 "filter") "apply"
                   [|x8306;((let x8299 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8299 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8301 : Ojs.t) ->
                                          fun (x8302 : Ojs.t) ->
                                            fun (x8303 : Ojs.t) ->
                                              any_to_js
                                                (x8297
                                                   ~value:(Ojs.float_of_js
                                                             x8301)
                                                   ~index:(Ojs.float_of_js
                                                             x8302)
                                                   ~array:(t_of_js x8303))))|]);
                             (match x8298 with
                              | Some x8300 ->
                                  ignore
                                    (Ojs.call x8299 "push"
                                       [|(any_to_js x8300)|])
                              | None -> ());
                             x8299))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x8314 : 'tags this) ->
        fun ~predicate:(x8307 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x8308 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x8316 = this_to_js Obj.magic x8314 in
                 Ojs.call (Ojs.get_prop_ascii x8316 "find") "apply"
                   [|x8316;((let x8309 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8309 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8311 : Ojs.t) ->
                                          fun (x8312 : Ojs.t) ->
                                            fun (x8313 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8307
                                                   ~value:(Ojs.float_of_js
                                                             x8311)
                                                   ~index:(Ojs.float_of_js
                                                             x8312)
                                                   ~obj:(t_of_js x8313))))|]);
                             (match x8308 with
                              | Some x8310 ->
                                  ignore
                                    (Ojs.call x8309 "push"
                                       [|(any_to_js x8310)|])
                              | None -> ());
                             x8309))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x8325 : 'tags this) ->
        fun ~predicate:(x8318 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x8319 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x8327 = this_to_js Obj.magic x8325 in
                 Ojs.call (Ojs.get_prop_ascii x8327 "findIndex") "apply"
                   [|x8327;((let x8320 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8320 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8322 : Ojs.t) ->
                                          fun (x8323 : Ojs.t) ->
                                            fun (x8324 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8318
                                                   ~value:(Ojs.float_of_js
                                                             x8322)
                                                   ~index:(Ojs.float_of_js
                                                             x8323)
                                                   ~obj:(t_of_js x8324))))|]);
                             (match x8319 with
                              | Some x8321 ->
                                  ignore
                                    (Ojs.call x8320 "push"
                                       [|(any_to_js x8321)|])
                              | None -> ());
                             x8320))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x8335 : 'tags this) ->
        fun
          ~callbackfn:(x8328 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x8329 : any option) ->
            fun () ->
              ignore
                (let x8337 = this_to_js Obj.magic x8335 in
                 Ojs.call (Ojs.get_prop_ascii x8337 "forEach") "apply"
                   [|x8337;((let x8330 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8330 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8332 : Ojs.t) ->
                                          fun (x8333 : Ojs.t) ->
                                            fun (x8334 : Ojs.t) ->
                                              x8328
                                                ~value:(Ojs.float_of_js x8332)
                                                ~index:(Ojs.float_of_js x8333)
                                                ~array:(t_of_js x8334)))|]);
                             (match x8329 with
                              | Some x8331 ->
                                  ignore
                                    (Ojs.call x8330 "push"
                                       [|(any_to_js x8331)|])
                              | None -> ());
                             x8330))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x8342 : 'tags this) ->
        fun ~searchElement:(x8338 : float) ->
          fun ?fromIndex:(x8339 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x8344 = this_to_js Obj.magic x8342 in
                 Ojs.call (Ojs.get_prop_ascii x8344 "indexOf") "apply"
                   [|x8344;((let x8340 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8340 "push"
                                  [|(Ojs.float_to_js x8338)|]);
                             (match x8339 with
                              | Some x8341 ->
                                  ignore
                                    (Ojs.call x8340 "push"
                                       [|(Ojs.float_to_js x8341)|])
                              | None -> ());
                             x8340))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x8348 : 'tags this) ->
        fun ?separator:(x8345 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x8350 = this_to_js Obj.magic x8348 in
               Ojs.call (Ojs.get_prop_ascii x8350 "join") "apply"
                 [|x8350;((let x8346 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8345 with
                            | Some x8347 ->
                                ignore
                                  (Ojs.call x8346 "push"
                                     [|(Ojs.string_to_js x8347)|])
                            | None -> ());
                           x8346))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x8355 : 'tags this) ->
        fun ~searchElement:(x8351 : float) ->
          fun ?fromIndex:(x8352 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x8357 = this_to_js Obj.magic x8355 in
                 Ojs.call (Ojs.get_prop_ascii x8357 "lastIndexOf") "apply"
                   [|x8357;((let x8353 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8353 "push"
                                  [|(Ojs.float_to_js x8351)|]);
                             (match x8352 with
                              | Some x8354 ->
                                  ignore
                                    (Ojs.call x8353 "push"
                                       [|(Ojs.float_to_js x8354)|])
                              | None -> ());
                             x8353))|])
    let (get_length : 'tags this -> float) =
      fun (x8358 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8358) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x8367 : 'tags this) ->
        fun
          ~callbackfn:(x8360 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x8361 : any option) ->
            fun () ->
              t_of_js
                (let x8369 = this_to_js Obj.magic x8367 in
                 Ojs.call (Ojs.get_prop_ascii x8369 "map") "apply"
                   [|x8369;((let x8362 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8362 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8364 : Ojs.t) ->
                                          fun (x8365 : Ojs.t) ->
                                            fun (x8366 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x8360
                                                   ~value:(Ojs.float_of_js
                                                             x8364)
                                                   ~index:(Ojs.float_of_js
                                                             x8365)
                                                   ~array:(t_of_js x8366))))|]);
                             (match x8361 with
                              | Some x8363 ->
                                  ignore
                                    (Ojs.call x8362 "push"
                                       [|(any_to_js x8363)|])
                              | None -> ());
                             x8362))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x8375 : 'tags this) ->
        fun
          ~callbackfn:(x8370 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x8375) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x8371 : Ojs.t) ->
                       fun (x8372 : Ojs.t) ->
                         fun (x8373 : Ojs.t) ->
                           fun (x8374 : Ojs.t) ->
                             Ojs.float_to_js
                               (x8370 ~previousValue:(Ojs.float_of_js x8371)
                                  ~currentValue:(Ojs.float_of_js x8372)
                                  ~currentIndex:(Ojs.float_of_js x8373)
                                  ~array:(t_of_js x8374))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x8383 : 'tags this) ->
        fun
          ~callbackfn:(x8377 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x8382 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x8383) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x8378 : Ojs.t) ->
                         fun (x8379 : Ojs.t) ->
                           fun (x8380 : Ojs.t) ->
                             fun (x8381 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x8377
                                    ~previousValue:(Ojs.float_of_js x8378)
                                    ~currentValue:(Ojs.float_of_js x8379)
                                    ~currentIndex:(Ojs.float_of_js x8380)
                                    ~array:(t_of_js x8381))));(Ojs.float_to_js
                                                                 x8382)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x8391 : 'tags this) ->
        fun
          ~callbackfn:(x8385 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x8390 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x8391) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x8386 : Ojs.t) ->
                         fun (x8387 : Ojs.t) ->
                           fun (x8388 : Ojs.t) ->
                             fun (x8389 : Ojs.t) ->
                               Obj.magic
                                 (x8385 ~previousValue:(Obj.magic x8386)
                                    ~currentValue:(Ojs.float_of_js x8387)
                                    ~currentIndex:(Ojs.float_of_js x8388)
                                    ~array:(t_of_js x8389))));(Obj.magic
                                                                 x8390)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x8398 : 'tags this) ->
        fun
          ~callbackfn:(x8393 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x8398) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x8394 : Ojs.t) ->
                       fun (x8395 : Ojs.t) ->
                         fun (x8396 : Ojs.t) ->
                           fun (x8397 : Ojs.t) ->
                             Ojs.float_to_js
                               (x8393 ~previousValue:(Ojs.float_of_js x8394)
                                  ~currentValue:(Ojs.float_of_js x8395)
                                  ~currentIndex:(Ojs.float_of_js x8396)
                                  ~array:(t_of_js x8397))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x8406 : 'tags this) ->
        fun
          ~callbackfn:(x8400 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x8405 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x8406) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x8401 : Ojs.t) ->
                         fun (x8402 : Ojs.t) ->
                           fun (x8403 : Ojs.t) ->
                             fun (x8404 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x8400
                                    ~previousValue:(Ojs.float_of_js x8401)
                                    ~currentValue:(Ojs.float_of_js x8402)
                                    ~currentIndex:(Ojs.float_of_js x8403)
                                    ~array:(t_of_js x8404))));(Ojs.float_to_js
                                                                 x8405)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x8414 : 'tags this) ->
        fun
          ~callbackfn:(x8408 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x8413 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x8414) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x8409 : Ojs.t) ->
                         fun (x8410 : Ojs.t) ->
                           fun (x8411 : Ojs.t) ->
                             fun (x8412 : Ojs.t) ->
                               Obj.magic
                                 (x8408 ~previousValue:(Obj.magic x8409)
                                    ~currentValue:(Ojs.float_of_js x8410)
                                    ~currentIndex:(Ojs.float_of_js x8411)
                                    ~array:(t_of_js x8412))));(Obj.magic
                                                                 x8413)|])
    let (reverse : 'tags this -> t) =
      fun (x8416 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x8416) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x8423 : 'tags this) ->
        fun ~array:(x8418 : float ArrayLike.t) ->
          fun ?offset:(x8419 : float option) ->
            fun () ->
              ignore
                (let x8425 = this_to_js Obj.magic x8423 in
                 Ojs.call (Ojs.get_prop_ascii x8425 "set") "apply"
                   [|x8425;((let x8420 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8420 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x8418)|]);
                             (match x8419 with
                              | Some x8421 ->
                                  ignore
                                    (Ojs.call x8420 "push"
                                       [|(Ojs.float_to_js x8421)|])
                              | None -> ());
                             x8420))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x8431 : 'tags this) ->
        fun ?start:(x8426 : float option) ->
          fun ?end_:(x8427 : float option) ->
            fun () ->
              t_of_js
                (let x8433 = this_to_js Obj.magic x8431 in
                 Ojs.call (Ojs.get_prop_ascii x8433 "slice") "apply"
                   [|x8433;((let x8428 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8426 with
                              | Some x8430 ->
                                  ignore
                                    (Ojs.call x8428 "push"
                                       [|(Ojs.float_to_js x8430)|])
                              | None -> ());
                             (match x8427 with
                              | Some x8429 ->
                                  ignore
                                    (Ojs.call x8428 "push"
                                       [|(Ojs.float_to_js x8429)|])
                              | None -> ());
                             x8428))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x8441 : 'tags this) ->
        fun
          ~predicate:(x8434 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x8435 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8443 = this_to_js Obj.magic x8441 in
                 Ojs.call (Ojs.get_prop_ascii x8443 "some") "apply"
                   [|x8443;((let x8436 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8436 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8438 : Ojs.t) ->
                                          fun (x8439 : Ojs.t) ->
                                            fun (x8440 : Ojs.t) ->
                                              unknown_to_js
                                                (x8434
                                                   ~value:(Ojs.float_of_js
                                                             x8438)
                                                   ~index:(Ojs.float_of_js
                                                             x8439)
                                                   ~array:(t_of_js x8440))))|]);
                             (match x8435 with
                              | Some x8437 ->
                                  ignore
                                    (Ojs.call x8436 "push"
                                       [|(any_to_js x8437)|])
                              | None -> ());
                             x8436))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x8449 : 'tags this) ->
        fun ?compareFn:(x8444 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x8451 = this_to_js Obj.magic x8449 in
               Ojs.call (Ojs.get_prop_ascii x8451 "sort") "apply"
                 [|x8451;((let x8445 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8444 with
                            | Some x8446 ->
                                ignore
                                  (Ojs.call x8445 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x8447 : Ojs.t) ->
                                             fun (x8448 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x8446
                                                    ~a:(Ojs.float_of_js x8447)
                                                    ~b:(Ojs.float_of_js x8448))))|])
                            | None -> ());
                           x8445))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x8458 : 'tags this) ->
        fun ?begin_:(x8453 : float option) ->
          fun ?end_:(x8454 : float option) ->
            fun () ->
              t_of_js
                (let x8460 = this_to_js Obj.magic x8458 in
                 Ojs.call (Ojs.get_prop_ascii x8460 "subarray") "apply"
                   [|x8460;((let x8455 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8453 with
                              | Some x8457 ->
                                  ignore
                                    (Ojs.call x8455 "push"
                                       [|(Ojs.float_to_js x8457)|])
                              | None -> ());
                             (match x8454 with
                              | Some x8456 ->
                                  ignore
                                    (Ojs.call x8455 "push"
                                       [|(Ojs.float_to_js x8456)|])
                              | None -> ());
                             x8455))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x8461 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8461) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x8463 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8463) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x8465 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x8465) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x8467 : 'tags this) ->
        fun (x8469 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x8467)
               (Ojs.float_to_js x8469))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x8470 : 'tags this) ->
        fun (x8472 : float) ->
          fun (x8473 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x8470) (Ojs.float_to_js x8472)
              (Ojs.float_to_js x8473)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int16Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x8474 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int16Array")
             [|(Iterable.t_to_js Ojs.float_to_js x8474)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x8476 : float Iterable.t) ->
        fun ?mapfn:(x8477 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x8478 : any option) ->
            fun () ->
              t_of_js
                (let x8485 = Ojs.get_prop_ascii Ojs.global "Int16Array" in
                 Ojs.call (Ojs.get_prop_ascii x8485 "from") "apply"
                   [|x8485;((let x8479 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8479 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x8476)|]);
                             (match x8477 with
                              | Some x8481 ->
                                  ignore
                                    (Ojs.call x8479 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x8482 : Ojs.t) ->
                                               fun (x8483 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x8481
                                                      ~v:(Ojs.float_of_js
                                                            x8482)
                                                      ~k:(Ojs.float_of_js
                                                            x8483))))|])
                              | None -> ());
                             (match x8478 with
                              | Some x8480 ->
                                  ignore
                                    (Ojs.call x8479 "push"
                                       [|(any_to_js x8480)|])
                              | None -> ());
                             x8479))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int16Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x8486 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int16Array")
             [|(Ojs.float_to_js x8486)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x8487 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int16Array")
             [|((match x8487 with
                 | `U1 x8488 -> ArrayLike.t_to_js Ojs.float_to_js x8488
                 | `U2 x8490 -> ArrayBufferLike.t_to_js x8490))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x8491 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x8492 : float option) ->
          fun ?length:(x8493 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Int16Array")
                   (let x8494 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x8494 "push"
                         [|(ArrayBufferLike.t_to_js x8491)|]);
                    (match x8492 with
                     | Some x8496 ->
                         ignore
                           (Ojs.call x8494 "push" [|(Ojs.float_to_js x8496)|])
                     | None -> ());
                    (match x8493 with
                     | Some x8495 ->
                         ignore
                           (Ojs.call x8494 "push" [|(Ojs.float_to_js x8495)|])
                     | None -> ());
                    x8494))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int16Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x8497 : float list) ->
        t_of_js
          (let x8500 = Ojs.get_prop_ascii Ojs.global "Int16Array" in
           Ojs.call (Ojs.get_prop_ascii x8500 "of") "apply"
             [|x8500;((let x8498 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x8499 : float) ->
                            ignore
                              (Ojs.call x8498 "push"
                                 [|(Ojs.float_to_js x8499)|])) x8497;
                       x8498))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x8501 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Int16Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x8501)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x8503 : 'T ArrayLike.t) ->
        fun ~mapfn:(x8504 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x8505 : any option) ->
            fun () ->
              t_of_js
                (let x8511 = Ojs.get_prop_ascii Ojs.global "Int16Array" in
                 Ojs.call (Ojs.get_prop_ascii x8511 "from") "apply"
                   [|x8511;((let x8506 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8506 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x8503)|]);
                             ignore
                               (Ojs.call x8506 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x8508 : Ojs.t) ->
                                          fun (x8509 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x8504 ~v:(Obj.magic x8508)
                                                 ~k:(Ojs.float_of_js x8509))))|]);
                             (match x8505 with
                              | Some x8507 ->
                                  ignore
                                    (Ojs.call x8506 "push"
                                       [|(any_to_js x8507)|])
                              | None -> ());
                             x8506))|])
    let cast_from = Obj.magic
  end
module BigUint64Array =
  struct
    type t =
      [ `BigUint64Array  | bigint ArrayLike.tags_1
      | bigint IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8513 : Ojs.t) -> t_of_js x8513
    and t_0_to_js : t_0 -> Ojs.t = fun (x8512 : t) -> t_to_js x8512
    type tags =
      [ `BigUint64Array  | bigint ArrayLike.tags_1
      | bigint IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `BigUint64Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x8516 : Ojs.t) -> intf_of_js __tags_of_js x8516
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x8514 : __tags intf) -> intf_to_js __tags_to_js x8514
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x8518 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8518)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x8520 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8520) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x8522 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8522) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x8524 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8524) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x8531 : 'tags this) ->
        fun ~target:(x8526 : float) ->
          fun ~start:(x8527 : float) ->
            fun ?end_:(x8528 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x8533 = this_to_js Obj.magic x8531 in
                   Ojs.call (Ojs.get_prop_ascii x8533 "copyWithin") "apply"
                     [|x8533;((let x8529 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x8529 "push"
                                    [|(Ojs.float_to_js x8526)|]);
                               ignore
                                 (Ojs.call x8529 "push"
                                    [|(Ojs.float_to_js x8527)|]);
                               (match x8528 with
                                | Some x8530 ->
                                    ignore
                                      (Ojs.call x8529 "push"
                                         [|(Ojs.float_to_js x8530)|])
                                | None -> ());
                               x8529))|])
    let (entries : 'tags this -> (float * bigint) IterableIterator.t) =
      fun (x8535 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x8537 : Ojs.t) ->
             let x8538 = x8537 in
             ((Ojs.float_of_js (Ojs.array_get x8538 0)),
               (bigint_of_js (Ojs.array_get x8538 1))))
          (Ojs.call (this_to_js Obj.magic x8535) "entries" [||])
    let (every :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x8546 : 'tags this) ->
        fun
          ~predicate:(x8539 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x8540 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8548 = this_to_js Obj.magic x8546 in
                 Ojs.call (Ojs.get_prop_ascii x8548 "every") "apply"
                   [|x8548;((let x8541 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8541 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8543 : Ojs.t) ->
                                          fun (x8544 : Ojs.t) ->
                                            fun (x8545 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8539
                                                   ~value:(bigint_of_js x8543)
                                                   ~index:(Ojs.float_of_js
                                                             x8544)
                                                   ~array:(t_of_js x8545))))|]);
                             (match x8540 with
                              | Some x8542 ->
                                  ignore
                                    (Ojs.call x8541 "push"
                                       [|(any_to_js x8542)|])
                              | None -> ());
                             x8541))|])
    let (fill :
      'tags this ->
        value:bigint -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x8555 : 'tags this) ->
        fun ~value:(x8549 : bigint) ->
          fun ?start:(x8550 : float option) ->
            fun ?end_:(x8551 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x8557 = this_to_js Obj.magic x8555 in
                   Ojs.call (Ojs.get_prop_ascii x8557 "fill") "apply"
                     [|x8557;((let x8552 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x8552 "push"
                                    [|(bigint_to_js x8549)|]);
                               (match x8550 with
                                | Some x8554 ->
                                    ignore
                                      (Ojs.call x8552 "push"
                                         [|(Ojs.float_to_js x8554)|])
                                | None -> ());
                               (match x8551 with
                                | Some x8553 ->
                                    ignore
                                      (Ojs.call x8552 "push"
                                         [|(Ojs.float_to_js x8553)|])
                                | None -> ());
                               x8552))|])
    let (filter :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x8566 : 'tags this) ->
        fun
          ~predicate:(x8559 : value:bigint -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x8560 : any option) ->
            fun () ->
              t_of_js
                (let x8568 = this_to_js Obj.magic x8566 in
                 Ojs.call (Ojs.get_prop_ascii x8568 "filter") "apply"
                   [|x8568;((let x8561 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8561 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8563 : Ojs.t) ->
                                          fun (x8564 : Ojs.t) ->
                                            fun (x8565 : Ojs.t) ->
                                              any_to_js
                                                (x8559
                                                   ~value:(bigint_of_js x8563)
                                                   ~index:(Ojs.float_of_js
                                                             x8564)
                                                   ~array:(t_of_js x8565))))|]);
                             (match x8560 with
                              | Some x8562 ->
                                  ignore
                                    (Ojs.call x8561 "push"
                                       [|(any_to_js x8562)|])
                              | None -> ());
                             x8561))|])
    let (find :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bigint option)
      =
      fun (x8576 : 'tags this) ->
        fun
          ~predicate:(x8569 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x8570 : any option) ->
            fun () ->
              Ojs.option_of_js bigint_of_js
                (let x8578 = this_to_js Obj.magic x8576 in
                 Ojs.call (Ojs.get_prop_ascii x8578 "find") "apply"
                   [|x8578;((let x8571 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8571 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8573 : Ojs.t) ->
                                          fun (x8574 : Ojs.t) ->
                                            fun (x8575 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8569
                                                   ~value:(bigint_of_js x8573)
                                                   ~index:(Ojs.float_of_js
                                                             x8574)
                                                   ~array:(t_of_js x8575))))|]);
                             (match x8570 with
                              | Some x8572 ->
                                  ignore
                                    (Ojs.call x8571 "push"
                                       [|(any_to_js x8572)|])
                              | None -> ());
                             x8571))|])
    let (findIndex :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x8587 : 'tags this) ->
        fun
          ~predicate:(x8580 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x8581 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x8589 = this_to_js Obj.magic x8587 in
                 Ojs.call (Ojs.get_prop_ascii x8589 "findIndex") "apply"
                   [|x8589;((let x8582 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8582 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8584 : Ojs.t) ->
                                          fun (x8585 : Ojs.t) ->
                                            fun (x8586 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8580
                                                   ~value:(bigint_of_js x8584)
                                                   ~index:(Ojs.float_of_js
                                                             x8585)
                                                   ~array:(t_of_js x8586))))|]);
                             (match x8581 with
                              | Some x8583 ->
                                  ignore
                                    (Ojs.call x8582 "push"
                                       [|(any_to_js x8583)|])
                              | None -> ());
                             x8582))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:bigint -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x8597 : 'tags this) ->
        fun
          ~callbackfn:(x8590 :
                        value:bigint -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x8591 : any option) ->
            fun () ->
              ignore
                (let x8599 = this_to_js Obj.magic x8597 in
                 Ojs.call (Ojs.get_prop_ascii x8599 "forEach") "apply"
                   [|x8599;((let x8592 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8592 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8594 : Ojs.t) ->
                                          fun (x8595 : Ojs.t) ->
                                            fun (x8596 : Ojs.t) ->
                                              x8590
                                                ~value:(bigint_of_js x8594)
                                                ~index:(Ojs.float_of_js x8595)
                                                ~array:(t_of_js x8596)))|]);
                             (match x8591 with
                              | Some x8593 ->
                                  ignore
                                    (Ojs.call x8592 "push"
                                       [|(any_to_js x8593)|])
                              | None -> ());
                             x8592))|])
    let (includes :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> bool)
      =
      fun (x8604 : 'tags this) ->
        fun ~searchElement:(x8600 : bigint) ->
          fun ?fromIndex:(x8601 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8606 = this_to_js Obj.magic x8604 in
                 Ojs.call (Ojs.get_prop_ascii x8606 "includes") "apply"
                   [|x8606;((let x8602 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8602 "push"
                                  [|(bigint_to_js x8600)|]);
                             (match x8601 with
                              | Some x8603 ->
                                  ignore
                                    (Ojs.call x8602 "push"
                                       [|(Ojs.float_to_js x8603)|])
                              | None -> ());
                             x8602))|])
    let (indexOf :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> float)
      =
      fun (x8611 : 'tags this) ->
        fun ~searchElement:(x8607 : bigint) ->
          fun ?fromIndex:(x8608 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x8613 = this_to_js Obj.magic x8611 in
                 Ojs.call (Ojs.get_prop_ascii x8613 "indexOf") "apply"
                   [|x8613;((let x8609 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8609 "push"
                                  [|(bigint_to_js x8607)|]);
                             (match x8608 with
                              | Some x8610 ->
                                  ignore
                                    (Ojs.call x8609 "push"
                                       [|(Ojs.float_to_js x8610)|])
                              | None -> ());
                             x8609))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x8617 : 'tags this) ->
        fun ?separator:(x8614 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x8619 = this_to_js Obj.magic x8617 in
               Ojs.call (Ojs.get_prop_ascii x8619 "join") "apply"
                 [|x8619;((let x8615 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8614 with
                            | Some x8616 ->
                                ignore
                                  (Ojs.call x8615 "push"
                                     [|(Ojs.string_to_js x8616)|])
                            | None -> ());
                           x8615))|])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x8620 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x8620) "keys" [||])
    let (lastIndexOf :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> float)
      =
      fun (x8627 : 'tags this) ->
        fun ~searchElement:(x8623 : bigint) ->
          fun ?fromIndex:(x8624 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x8629 = this_to_js Obj.magic x8627 in
                 Ojs.call (Ojs.get_prop_ascii x8629 "lastIndexOf") "apply"
                   [|x8629;((let x8625 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8625 "push"
                                  [|(bigint_to_js x8623)|]);
                             (match x8624 with
                              | Some x8626 ->
                                  ignore
                                    (Ojs.call x8625 "push"
                                       [|(Ojs.float_to_js x8626)|])
                              | None -> ());
                             x8625))|])
    let (get_length : 'tags this -> float) =
      fun (x8630 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8630) "length")
    let (map :
      'tags this ->
        callbackfn:(value:bigint -> index:float -> array:t -> bigint) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x8639 : 'tags this) ->
        fun
          ~callbackfn:(x8632 :
                        value:bigint -> index:float -> array:t -> bigint)
          ->
          fun ?thisArg:(x8633 : any option) ->
            fun () ->
              t_of_js
                (let x8641 = this_to_js Obj.magic x8639 in
                 Ojs.call (Ojs.get_prop_ascii x8641 "map") "apply"
                   [|x8641;((let x8634 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8634 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8636 : Ojs.t) ->
                                          fun (x8637 : Ojs.t) ->
                                            fun (x8638 : Ojs.t) ->
                                              bigint_to_js
                                                (x8632
                                                   ~value:(bigint_of_js x8636)
                                                   ~index:(Ojs.float_of_js
                                                             x8637)
                                                   ~array:(t_of_js x8638))))|]);
                             (match x8633 with
                              | Some x8635 ->
                                  ignore
                                    (Ojs.call x8634 "push"
                                       [|(any_to_js x8635)|])
                              | None -> ());
                             x8634))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:bigint ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> bigint)
          -> bigint)
      =
      fun (x8647 : 'tags this) ->
        fun
          ~callbackfn:(x8642 :
                        previousValue:bigint ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> bigint)
          ->
          bigint_of_js
            (Ojs.call (this_to_js Obj.magic x8647) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x8643 : Ojs.t) ->
                       fun (x8644 : Ojs.t) ->
                         fun (x8645 : Ojs.t) ->
                           fun (x8646 : Ojs.t) ->
                             bigint_to_js
                               (x8642 ~previousValue:(bigint_of_js x8643)
                                  ~currentValue:(bigint_of_js x8644)
                                  ~currentIndex:(Ojs.float_of_js x8645)
                                  ~array:(t_of_js x8646))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x8655 : 'tags this) ->
        fun
          ~callbackfn:(x8649 :
                        previousValue:'U ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x8654 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x8655) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x8650 : Ojs.t) ->
                         fun (x8651 : Ojs.t) ->
                           fun (x8652 : Ojs.t) ->
                             fun (x8653 : Ojs.t) ->
                               Obj.magic
                                 (x8649 ~previousValue:(Obj.magic x8650)
                                    ~currentValue:(bigint_of_js x8651)
                                    ~currentIndex:(Ojs.float_of_js x8652)
                                    ~array:(t_of_js x8653))));(Obj.magic
                                                                 x8654)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:bigint ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> bigint)
          -> bigint)
      =
      fun (x8662 : 'tags this) ->
        fun
          ~callbackfn:(x8657 :
                        previousValue:bigint ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> bigint)
          ->
          bigint_of_js
            (Ojs.call (this_to_js Obj.magic x8662) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x8658 : Ojs.t) ->
                       fun (x8659 : Ojs.t) ->
                         fun (x8660 : Ojs.t) ->
                           fun (x8661 : Ojs.t) ->
                             bigint_to_js
                               (x8657 ~previousValue:(bigint_of_js x8658)
                                  ~currentValue:(bigint_of_js x8659)
                                  ~currentIndex:(Ojs.float_of_js x8660)
                                  ~array:(t_of_js x8661))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x8670 : 'tags this) ->
        fun
          ~callbackfn:(x8664 :
                        previousValue:'U ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x8669 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x8670) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x8665 : Ojs.t) ->
                         fun (x8666 : Ojs.t) ->
                           fun (x8667 : Ojs.t) ->
                             fun (x8668 : Ojs.t) ->
                               Obj.magic
                                 (x8664 ~previousValue:(Obj.magic x8665)
                                    ~currentValue:(bigint_of_js x8666)
                                    ~currentIndex:(Ojs.float_of_js x8667)
                                    ~array:(t_of_js x8668))));(Obj.magic
                                                                 x8669)|])
    let (reverse : 'tags this -> 'tags this) =
      fun (x8672 : 'tags this) ->
        this_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic x8672) "reverse" [||])
    let (set_ :
      'tags this -> array:bigint ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x8680 : 'tags this) ->
        fun ~array:(x8675 : bigint ArrayLike.t) ->
          fun ?offset:(x8676 : float option) ->
            fun () ->
              ignore
                (let x8682 = this_to_js Obj.magic x8680 in
                 Ojs.call (Ojs.get_prop_ascii x8682 "set") "apply"
                   [|x8682;((let x8677 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8677 "push"
                                  [|(ArrayLike.t_to_js bigint_to_js x8675)|]);
                             (match x8676 with
                              | Some x8678 ->
                                  ignore
                                    (Ojs.call x8677 "push"
                                       [|(Ojs.float_to_js x8678)|])
                              | None -> ());
                             x8677))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x8688 : 'tags this) ->
        fun ?start:(x8683 : float option) ->
          fun ?end_:(x8684 : float option) ->
            fun () ->
              t_of_js
                (let x8690 = this_to_js Obj.magic x8688 in
                 Ojs.call (Ojs.get_prop_ascii x8690 "slice") "apply"
                   [|x8690;((let x8685 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8683 with
                              | Some x8687 ->
                                  ignore
                                    (Ojs.call x8685 "push"
                                       [|(Ojs.float_to_js x8687)|])
                              | None -> ());
                             (match x8684 with
                              | Some x8686 ->
                                  ignore
                                    (Ojs.call x8685 "push"
                                       [|(Ojs.float_to_js x8686)|])
                              | None -> ());
                             x8685))|])
    let (some :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x8698 : 'tags this) ->
        fun
          ~predicate:(x8691 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x8692 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8700 = this_to_js Obj.magic x8698 in
                 Ojs.call (Ojs.get_prop_ascii x8700 "some") "apply"
                   [|x8700;((let x8693 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8693 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8695 : Ojs.t) ->
                                          fun (x8696 : Ojs.t) ->
                                            fun (x8697 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8691
                                                   ~value:(bigint_of_js x8695)
                                                   ~index:(Ojs.float_of_js
                                                             x8696)
                                                   ~array:(t_of_js x8697))))|]);
                             (match x8692 with
                              | Some x8694 ->
                                  ignore
                                    (Ojs.call x8693 "push"
                                       [|(any_to_js x8694)|])
                              | None -> ());
                             x8693))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:bigint -> b:bigint -> [ `U1 of float  | `U2 of bigint ])
          -> unit -> 'tags this)
      =
      fun (x8708 : 'tags this) ->
        fun
          ?compareFn:(x8701 :
                       (a:bigint ->
                          b:bigint -> [ `U1 of float  | `U2 of bigint ])
                         option)
          ->
          fun () ->
            this_of_js Obj.magic
              (let x8710 = this_to_js Obj.magic x8708 in
               Ojs.call (Ojs.get_prop_ascii x8710 "sort") "apply"
                 [|x8710;((let x8702 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8701 with
                            | Some x8703 ->
                                ignore
                                  (Ojs.call x8702 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x8704 : Ojs.t) ->
                                             fun (x8705 : Ojs.t) ->
                                               match x8703
                                                       ~a:(bigint_of_js x8704)
                                                       ~b:(bigint_of_js x8705)
                                               with
                                               | `U1 x8706 ->
                                                   Ojs.float_to_js x8706
                                               | `U2 x8707 ->
                                                   bigint_to_js x8707))|])
                            | None -> ());
                           x8702))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x8717 : 'tags this) ->
        fun ?begin_:(x8712 : float option) ->
          fun ?end_:(x8713 : float option) ->
            fun () ->
              t_of_js
                (let x8719 = this_to_js Obj.magic x8717 in
                 Ojs.call (Ojs.get_prop_ascii x8719 "subarray") "apply"
                   [|x8719;((let x8714 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8712 with
                              | Some x8716 ->
                                  ignore
                                    (Ojs.call x8714 "push"
                                       [|(Ojs.float_to_js x8716)|])
                              | None -> ());
                             (match x8713 with
                              | Some x8715 ->
                                  ignore
                                    (Ojs.call x8714 "push"
                                       [|(Ojs.float_to_js x8715)|])
                              | None -> ());
                             x8714))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x8720 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8720) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x8722 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8722) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x8724 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x8724) "valueOf" [||])
    let (values : 'tags this -> bigint IterableIterator.t) =
      fun (x8726 : 'tags this) ->
        IterableIterator.t_of_js bigint_of_js
          (Ojs.call (this_to_js Obj.magic x8726) "values" [||])
    let (get : 'tags this -> float -> bigint) =
      fun (x8729 : 'tags this) ->
        fun (x8731 : float) ->
          bigint_of_js
            (Ojs.get_prop (this_to_js Obj.magic x8729)
               (Ojs.float_to_js x8731))
    let (set : 'tags this -> float -> bigint -> unit) =
      fun (x8732 : 'tags this) ->
        fun (x8734 : float) ->
          fun (x8735 : bigint) ->
            Ojs.set_prop (this_to_js Obj.magic x8732) (Ojs.float_to_js x8734)
              (bigint_to_js x8735)
    let (at : 'tags this -> index:float -> bigint option) =
      fun (x8737 : 'tags this) ->
        fun ~index:(x8736 : float) ->
          Ojs.option_of_js bigint_of_js
            (Ojs.call (this_to_js Obj.magic x8737) "at"
               [|(Ojs.float_to_js x8736)|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "BigUint64Array") "prototype")
    let (create : ?length:float -> unit -> t) =
      fun ?length:(x8740 : float option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "BigUint64Array")
               (let x8741 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x8740 with
                 | Some x8742 ->
                     ignore
                       (Ojs.call x8741 "push" [|(Ojs.float_to_js x8742)|])
                 | None -> ());
                x8741))
    let (create' : bigint Iterable.t -> t) =
      fun (x8743 : bigint Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "BigUint64Array")
             [|(Iterable.t_to_js bigint_to_js x8743)|])
    let (create'' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x8745 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x8746 : float option) ->
          fun ?length:(x8747 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "BigUint64Array")
                   (let x8748 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x8748 "push"
                         [|(ArrayBufferLike.t_to_js x8745)|]);
                    (match x8746 with
                     | Some x8750 ->
                         ignore
                           (Ojs.call x8748 "push" [|(Ojs.float_to_js x8750)|])
                     | None -> ());
                    (match x8747 with
                     | Some x8749 ->
                         ignore
                           (Ojs.call x8748 "push" [|(Ojs.float_to_js x8749)|])
                     | None -> ());
                    x8748))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "BigUint64Array")
             "BYTES_PER_ELEMENT")
    let (of_ : bigint list -> t) =
      fun (x8751 : bigint list) ->
        t_of_js
          (let x8754 = Ojs.get_prop_ascii Ojs.global "BigUint64Array" in
           Ojs.call (Ojs.get_prop_ascii x8754 "of") "apply"
             [|x8754;((let x8752 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x8753 : bigint) ->
                            ignore
                              (Ojs.call x8752 "push" [|(bigint_to_js x8753)|]))
                         x8751;
                       x8752))|])
    let (from : bigint ArrayLike.t -> t) =
      fun (x8755 : bigint ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "BigUint64Array") "from"
             [|(ArrayLike.t_to_js bigint_to_js x8755)|])
    let (from' :
      arrayLike:'U ArrayLike.t ->
        mapfn:(v:'U -> k:float -> bigint) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x8757 : 'U ArrayLike.t) ->
        fun ~mapfn:(x8758 : v:'U -> k:float -> bigint) ->
          fun ?thisArg:(x8759 : any option) ->
            fun () ->
              t_of_js
                (let x8765 = Ojs.get_prop_ascii Ojs.global "BigUint64Array" in
                 Ojs.call (Ojs.get_prop_ascii x8765 "from") "apply"
                   [|x8765;((let x8760 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8760 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x8757)|]);
                             ignore
                               (Ojs.call x8760 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x8762 : Ojs.t) ->
                                          fun (x8763 : Ojs.t) ->
                                            bigint_to_js
                                              (x8758 ~v:(Obj.magic x8762)
                                                 ~k:(Ojs.float_of_js x8763))))|]);
                             (match x8759 with
                              | Some x8761 ->
                                  ignore
                                    (Ojs.call x8760 "push"
                                       [|(any_to_js x8761)|])
                              | None -> ());
                             x8760))|])
    let cast_from = Obj.magic
  end
module BigInt64Array =
  struct
    type t =
      [ `BigInt64Array  | bigint ArrayLike.tags_1
      | bigint IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8767 : Ojs.t) -> t_of_js x8767
    and t_0_to_js : t_0 -> Ojs.t = fun (x8766 : t) -> t_to_js x8766
    type tags =
      [ `BigInt64Array  | bigint ArrayLike.tags_1
      | bigint IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `BigInt64Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x8770 : Ojs.t) -> intf_of_js __tags_of_js x8770
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x8768 : __tags intf) -> intf_to_js __tags_to_js x8768
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x8772 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8772)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x8774 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8774) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x8776 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8776) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x8778 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8778) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x8785 : 'tags this) ->
        fun ~target:(x8780 : float) ->
          fun ~start:(x8781 : float) ->
            fun ?end_:(x8782 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x8787 = this_to_js Obj.magic x8785 in
                   Ojs.call (Ojs.get_prop_ascii x8787 "copyWithin") "apply"
                     [|x8787;((let x8783 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x8783 "push"
                                    [|(Ojs.float_to_js x8780)|]);
                               ignore
                                 (Ojs.call x8783 "push"
                                    [|(Ojs.float_to_js x8781)|]);
                               (match x8782 with
                                | Some x8784 ->
                                    ignore
                                      (Ojs.call x8783 "push"
                                         [|(Ojs.float_to_js x8784)|])
                                | None -> ());
                               x8783))|])
    let (entries : 'tags this -> (float * bigint) IterableIterator.t) =
      fun (x8789 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x8791 : Ojs.t) ->
             let x8792 = x8791 in
             ((Ojs.float_of_js (Ojs.array_get x8792 0)),
               (bigint_of_js (Ojs.array_get x8792 1))))
          (Ojs.call (this_to_js Obj.magic x8789) "entries" [||])
    let (every :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x8800 : 'tags this) ->
        fun
          ~predicate:(x8793 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x8794 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8802 = this_to_js Obj.magic x8800 in
                 Ojs.call (Ojs.get_prop_ascii x8802 "every") "apply"
                   [|x8802;((let x8795 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8795 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8797 : Ojs.t) ->
                                          fun (x8798 : Ojs.t) ->
                                            fun (x8799 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8793
                                                   ~value:(bigint_of_js x8797)
                                                   ~index:(Ojs.float_of_js
                                                             x8798)
                                                   ~array:(t_of_js x8799))))|]);
                             (match x8794 with
                              | Some x8796 ->
                                  ignore
                                    (Ojs.call x8795 "push"
                                       [|(any_to_js x8796)|])
                              | None -> ());
                             x8795))|])
    let (fill :
      'tags this ->
        value:bigint -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x8809 : 'tags this) ->
        fun ~value:(x8803 : bigint) ->
          fun ?start:(x8804 : float option) ->
            fun ?end_:(x8805 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x8811 = this_to_js Obj.magic x8809 in
                   Ojs.call (Ojs.get_prop_ascii x8811 "fill") "apply"
                     [|x8811;((let x8806 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x8806 "push"
                                    [|(bigint_to_js x8803)|]);
                               (match x8804 with
                                | Some x8808 ->
                                    ignore
                                      (Ojs.call x8806 "push"
                                         [|(Ojs.float_to_js x8808)|])
                                | None -> ());
                               (match x8805 with
                                | Some x8807 ->
                                    ignore
                                      (Ojs.call x8806 "push"
                                         [|(Ojs.float_to_js x8807)|])
                                | None -> ());
                               x8806))|])
    let (filter :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x8820 : 'tags this) ->
        fun
          ~predicate:(x8813 : value:bigint -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x8814 : any option) ->
            fun () ->
              t_of_js
                (let x8822 = this_to_js Obj.magic x8820 in
                 Ojs.call (Ojs.get_prop_ascii x8822 "filter") "apply"
                   [|x8822;((let x8815 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8815 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8817 : Ojs.t) ->
                                          fun (x8818 : Ojs.t) ->
                                            fun (x8819 : Ojs.t) ->
                                              any_to_js
                                                (x8813
                                                   ~value:(bigint_of_js x8817)
                                                   ~index:(Ojs.float_of_js
                                                             x8818)
                                                   ~array:(t_of_js x8819))))|]);
                             (match x8814 with
                              | Some x8816 ->
                                  ignore
                                    (Ojs.call x8815 "push"
                                       [|(any_to_js x8816)|])
                              | None -> ());
                             x8815))|])
    let (find :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bigint option)
      =
      fun (x8830 : 'tags this) ->
        fun
          ~predicate:(x8823 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x8824 : any option) ->
            fun () ->
              Ojs.option_of_js bigint_of_js
                (let x8832 = this_to_js Obj.magic x8830 in
                 Ojs.call (Ojs.get_prop_ascii x8832 "find") "apply"
                   [|x8832;((let x8825 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8825 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8827 : Ojs.t) ->
                                          fun (x8828 : Ojs.t) ->
                                            fun (x8829 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8823
                                                   ~value:(bigint_of_js x8827)
                                                   ~index:(Ojs.float_of_js
                                                             x8828)
                                                   ~array:(t_of_js x8829))))|]);
                             (match x8824 with
                              | Some x8826 ->
                                  ignore
                                    (Ojs.call x8825 "push"
                                       [|(any_to_js x8826)|])
                              | None -> ());
                             x8825))|])
    let (findIndex :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x8841 : 'tags this) ->
        fun
          ~predicate:(x8834 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x8835 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x8843 = this_to_js Obj.magic x8841 in
                 Ojs.call (Ojs.get_prop_ascii x8843 "findIndex") "apply"
                   [|x8843;((let x8836 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8836 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8838 : Ojs.t) ->
                                          fun (x8839 : Ojs.t) ->
                                            fun (x8840 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8834
                                                   ~value:(bigint_of_js x8838)
                                                   ~index:(Ojs.float_of_js
                                                             x8839)
                                                   ~array:(t_of_js x8840))))|]);
                             (match x8835 with
                              | Some x8837 ->
                                  ignore
                                    (Ojs.call x8836 "push"
                                       [|(any_to_js x8837)|])
                              | None -> ());
                             x8836))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:bigint -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x8851 : 'tags this) ->
        fun
          ~callbackfn:(x8844 :
                        value:bigint -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x8845 : any option) ->
            fun () ->
              ignore
                (let x8853 = this_to_js Obj.magic x8851 in
                 Ojs.call (Ojs.get_prop_ascii x8853 "forEach") "apply"
                   [|x8853;((let x8846 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8846 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8848 : Ojs.t) ->
                                          fun (x8849 : Ojs.t) ->
                                            fun (x8850 : Ojs.t) ->
                                              x8844
                                                ~value:(bigint_of_js x8848)
                                                ~index:(Ojs.float_of_js x8849)
                                                ~array:(t_of_js x8850)))|]);
                             (match x8845 with
                              | Some x8847 ->
                                  ignore
                                    (Ojs.call x8846 "push"
                                       [|(any_to_js x8847)|])
                              | None -> ());
                             x8846))|])
    let (includes :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> bool)
      =
      fun (x8858 : 'tags this) ->
        fun ~searchElement:(x8854 : bigint) ->
          fun ?fromIndex:(x8855 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8860 = this_to_js Obj.magic x8858 in
                 Ojs.call (Ojs.get_prop_ascii x8860 "includes") "apply"
                   [|x8860;((let x8856 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8856 "push"
                                  [|(bigint_to_js x8854)|]);
                             (match x8855 with
                              | Some x8857 ->
                                  ignore
                                    (Ojs.call x8856 "push"
                                       [|(Ojs.float_to_js x8857)|])
                              | None -> ());
                             x8856))|])
    let (indexOf :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> float)
      =
      fun (x8865 : 'tags this) ->
        fun ~searchElement:(x8861 : bigint) ->
          fun ?fromIndex:(x8862 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x8867 = this_to_js Obj.magic x8865 in
                 Ojs.call (Ojs.get_prop_ascii x8867 "indexOf") "apply"
                   [|x8867;((let x8863 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8863 "push"
                                  [|(bigint_to_js x8861)|]);
                             (match x8862 with
                              | Some x8864 ->
                                  ignore
                                    (Ojs.call x8863 "push"
                                       [|(Ojs.float_to_js x8864)|])
                              | None -> ());
                             x8863))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x8871 : 'tags this) ->
        fun ?separator:(x8868 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x8873 = this_to_js Obj.magic x8871 in
               Ojs.call (Ojs.get_prop_ascii x8873 "join") "apply"
                 [|x8873;((let x8869 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8868 with
                            | Some x8870 ->
                                ignore
                                  (Ojs.call x8869 "push"
                                     [|(Ojs.string_to_js x8870)|])
                            | None -> ());
                           x8869))|])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x8874 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x8874) "keys" [||])
    let (lastIndexOf :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> float)
      =
      fun (x8881 : 'tags this) ->
        fun ~searchElement:(x8877 : bigint) ->
          fun ?fromIndex:(x8878 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x8883 = this_to_js Obj.magic x8881 in
                 Ojs.call (Ojs.get_prop_ascii x8883 "lastIndexOf") "apply"
                   [|x8883;((let x8879 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8879 "push"
                                  [|(bigint_to_js x8877)|]);
                             (match x8878 with
                              | Some x8880 ->
                                  ignore
                                    (Ojs.call x8879 "push"
                                       [|(Ojs.float_to_js x8880)|])
                              | None -> ());
                             x8879))|])
    let (get_length : 'tags this -> float) =
      fun (x8884 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8884) "length")
    let (map :
      'tags this ->
        callbackfn:(value:bigint -> index:float -> array:t -> bigint) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x8893 : 'tags this) ->
        fun
          ~callbackfn:(x8886 :
                        value:bigint -> index:float -> array:t -> bigint)
          ->
          fun ?thisArg:(x8887 : any option) ->
            fun () ->
              t_of_js
                (let x8895 = this_to_js Obj.magic x8893 in
                 Ojs.call (Ojs.get_prop_ascii x8895 "map") "apply"
                   [|x8895;((let x8888 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8888 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8890 : Ojs.t) ->
                                          fun (x8891 : Ojs.t) ->
                                            fun (x8892 : Ojs.t) ->
                                              bigint_to_js
                                                (x8886
                                                   ~value:(bigint_of_js x8890)
                                                   ~index:(Ojs.float_of_js
                                                             x8891)
                                                   ~array:(t_of_js x8892))))|]);
                             (match x8887 with
                              | Some x8889 ->
                                  ignore
                                    (Ojs.call x8888 "push"
                                       [|(any_to_js x8889)|])
                              | None -> ());
                             x8888))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:bigint ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> bigint)
          -> bigint)
      =
      fun (x8901 : 'tags this) ->
        fun
          ~callbackfn:(x8896 :
                        previousValue:bigint ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> bigint)
          ->
          bigint_of_js
            (Ojs.call (this_to_js Obj.magic x8901) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x8897 : Ojs.t) ->
                       fun (x8898 : Ojs.t) ->
                         fun (x8899 : Ojs.t) ->
                           fun (x8900 : Ojs.t) ->
                             bigint_to_js
                               (x8896 ~previousValue:(bigint_of_js x8897)
                                  ~currentValue:(bigint_of_js x8898)
                                  ~currentIndex:(Ojs.float_of_js x8899)
                                  ~array:(t_of_js x8900))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x8909 : 'tags this) ->
        fun
          ~callbackfn:(x8903 :
                        previousValue:'U ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x8908 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x8909) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x8904 : Ojs.t) ->
                         fun (x8905 : Ojs.t) ->
                           fun (x8906 : Ojs.t) ->
                             fun (x8907 : Ojs.t) ->
                               Obj.magic
                                 (x8903 ~previousValue:(Obj.magic x8904)
                                    ~currentValue:(bigint_of_js x8905)
                                    ~currentIndex:(Ojs.float_of_js x8906)
                                    ~array:(t_of_js x8907))));(Obj.magic
                                                                 x8908)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:bigint ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> bigint)
          -> bigint)
      =
      fun (x8916 : 'tags this) ->
        fun
          ~callbackfn:(x8911 :
                        previousValue:bigint ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> bigint)
          ->
          bigint_of_js
            (Ojs.call (this_to_js Obj.magic x8916) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x8912 : Ojs.t) ->
                       fun (x8913 : Ojs.t) ->
                         fun (x8914 : Ojs.t) ->
                           fun (x8915 : Ojs.t) ->
                             bigint_to_js
                               (x8911 ~previousValue:(bigint_of_js x8912)
                                  ~currentValue:(bigint_of_js x8913)
                                  ~currentIndex:(Ojs.float_of_js x8914)
                                  ~array:(t_of_js x8915))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x8924 : 'tags this) ->
        fun
          ~callbackfn:(x8918 :
                        previousValue:'U ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x8923 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x8924) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x8919 : Ojs.t) ->
                         fun (x8920 : Ojs.t) ->
                           fun (x8921 : Ojs.t) ->
                             fun (x8922 : Ojs.t) ->
                               Obj.magic
                                 (x8918 ~previousValue:(Obj.magic x8919)
                                    ~currentValue:(bigint_of_js x8920)
                                    ~currentIndex:(Ojs.float_of_js x8921)
                                    ~array:(t_of_js x8922))));(Obj.magic
                                                                 x8923)|])
    let (reverse : 'tags this -> 'tags this) =
      fun (x8926 : 'tags this) ->
        this_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic x8926) "reverse" [||])
    let (set_ :
      'tags this -> array:bigint ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x8934 : 'tags this) ->
        fun ~array:(x8929 : bigint ArrayLike.t) ->
          fun ?offset:(x8930 : float option) ->
            fun () ->
              ignore
                (let x8936 = this_to_js Obj.magic x8934 in
                 Ojs.call (Ojs.get_prop_ascii x8936 "set") "apply"
                   [|x8936;((let x8931 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8931 "push"
                                  [|(ArrayLike.t_to_js bigint_to_js x8929)|]);
                             (match x8930 with
                              | Some x8932 ->
                                  ignore
                                    (Ojs.call x8931 "push"
                                       [|(Ojs.float_to_js x8932)|])
                              | None -> ());
                             x8931))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x8942 : 'tags this) ->
        fun ?start:(x8937 : float option) ->
          fun ?end_:(x8938 : float option) ->
            fun () ->
              t_of_js
                (let x8944 = this_to_js Obj.magic x8942 in
                 Ojs.call (Ojs.get_prop_ascii x8944 "slice") "apply"
                   [|x8944;((let x8939 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8937 with
                              | Some x8941 ->
                                  ignore
                                    (Ojs.call x8939 "push"
                                       [|(Ojs.float_to_js x8941)|])
                              | None -> ());
                             (match x8938 with
                              | Some x8940 ->
                                  ignore
                                    (Ojs.call x8939 "push"
                                       [|(Ojs.float_to_js x8940)|])
                              | None -> ());
                             x8939))|])
    let (some :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x8952 : 'tags this) ->
        fun
          ~predicate:(x8945 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x8946 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8954 = this_to_js Obj.magic x8952 in
                 Ojs.call (Ojs.get_prop_ascii x8954 "some") "apply"
                   [|x8954;((let x8947 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8947 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8949 : Ojs.t) ->
                                          fun (x8950 : Ojs.t) ->
                                            fun (x8951 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8945
                                                   ~value:(bigint_of_js x8949)
                                                   ~index:(Ojs.float_of_js
                                                             x8950)
                                                   ~array:(t_of_js x8951))))|]);
                             (match x8946 with
                              | Some x8948 ->
                                  ignore
                                    (Ojs.call x8947 "push"
                                       [|(any_to_js x8948)|])
                              | None -> ());
                             x8947))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:bigint -> b:bigint -> [ `U1 of float  | `U2 of bigint ])
          -> unit -> 'tags this)
      =
      fun (x8962 : 'tags this) ->
        fun
          ?compareFn:(x8955 :
                       (a:bigint ->
                          b:bigint -> [ `U1 of float  | `U2 of bigint ])
                         option)
          ->
          fun () ->
            this_of_js Obj.magic
              (let x8964 = this_to_js Obj.magic x8962 in
               Ojs.call (Ojs.get_prop_ascii x8964 "sort") "apply"
                 [|x8964;((let x8956 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8955 with
                            | Some x8957 ->
                                ignore
                                  (Ojs.call x8956 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x8958 : Ojs.t) ->
                                             fun (x8959 : Ojs.t) ->
                                               match x8957
                                                       ~a:(bigint_of_js x8958)
                                                       ~b:(bigint_of_js x8959)
                                               with
                                               | `U1 x8960 ->
                                                   Ojs.float_to_js x8960
                                               | `U2 x8961 ->
                                                   bigint_to_js x8961))|])
                            | None -> ());
                           x8956))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x8971 : 'tags this) ->
        fun ?begin_:(x8966 : float option) ->
          fun ?end_:(x8967 : float option) ->
            fun () ->
              t_of_js
                (let x8973 = this_to_js Obj.magic x8971 in
                 Ojs.call (Ojs.get_prop_ascii x8973 "subarray") "apply"
                   [|x8973;((let x8968 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8966 with
                              | Some x8970 ->
                                  ignore
                                    (Ojs.call x8968 "push"
                                       [|(Ojs.float_to_js x8970)|])
                              | None -> ());
                             (match x8967 with
                              | Some x8969 ->
                                  ignore
                                    (Ojs.call x8968 "push"
                                       [|(Ojs.float_to_js x8969)|])
                              | None -> ());
                             x8968))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x8974 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8974) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x8976 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8976) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x8978 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x8978) "valueOf" [||])
    let (values : 'tags this -> bigint IterableIterator.t) =
      fun (x8980 : 'tags this) ->
        IterableIterator.t_of_js bigint_of_js
          (Ojs.call (this_to_js Obj.magic x8980) "values" [||])
    let (get : 'tags this -> float -> bigint) =
      fun (x8983 : 'tags this) ->
        fun (x8985 : float) ->
          bigint_of_js
            (Ojs.get_prop (this_to_js Obj.magic x8983)
               (Ojs.float_to_js x8985))
    let (set : 'tags this -> float -> bigint -> unit) =
      fun (x8986 : 'tags this) ->
        fun (x8988 : float) ->
          fun (x8989 : bigint) ->
            Ojs.set_prop (this_to_js Obj.magic x8986) (Ojs.float_to_js x8988)
              (bigint_to_js x8989)
    let (at : 'tags this -> index:float -> bigint option) =
      fun (x8991 : 'tags this) ->
        fun ~index:(x8990 : float) ->
          Ojs.option_of_js bigint_of_js
            (Ojs.call (this_to_js Obj.magic x8991) "at"
               [|(Ojs.float_to_js x8990)|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "BigInt64Array")
             "prototype")
    let (create : ?length:float -> unit -> t) =
      fun ?length:(x8994 : float option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "BigInt64Array")
               (let x8995 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x8994 with
                 | Some x8996 ->
                     ignore
                       (Ojs.call x8995 "push" [|(Ojs.float_to_js x8996)|])
                 | None -> ());
                x8995))
    let (create' : bigint Iterable.t -> t) =
      fun (x8997 : bigint Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "BigInt64Array")
             [|(Iterable.t_to_js bigint_to_js x8997)|])
    let (create'' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x8999 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x9000 : float option) ->
          fun ?length:(x9001 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "BigInt64Array")
                   (let x9002 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x9002 "push"
                         [|(ArrayBufferLike.t_to_js x8999)|]);
                    (match x9000 with
                     | Some x9004 ->
                         ignore
                           (Ojs.call x9002 "push" [|(Ojs.float_to_js x9004)|])
                     | None -> ());
                    (match x9001 with
                     | Some x9003 ->
                         ignore
                           (Ojs.call x9002 "push" [|(Ojs.float_to_js x9003)|])
                     | None -> ());
                    x9002))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "BigInt64Array")
             "BYTES_PER_ELEMENT")
    let (of_ : bigint list -> t) =
      fun (x9005 : bigint list) ->
        t_of_js
          (let x9008 = Ojs.get_prop_ascii Ojs.global "BigInt64Array" in
           Ojs.call (Ojs.get_prop_ascii x9008 "of") "apply"
             [|x9008;((let x9006 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x9007 : bigint) ->
                            ignore
                              (Ojs.call x9006 "push" [|(bigint_to_js x9007)|]))
                         x9005;
                       x9006))|])
    let (from : bigint ArrayLike.t -> t) =
      fun (x9009 : bigint ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "BigInt64Array") "from"
             [|(ArrayLike.t_to_js bigint_to_js x9009)|])
    let (from' :
      arrayLike:'U ArrayLike.t ->
        mapfn:(v:'U -> k:float -> bigint) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x9011 : 'U ArrayLike.t) ->
        fun ~mapfn:(x9012 : v:'U -> k:float -> bigint) ->
          fun ?thisArg:(x9013 : any option) ->
            fun () ->
              t_of_js
                (let x9019 = Ojs.get_prop_ascii Ojs.global "BigInt64Array" in
                 Ojs.call (Ojs.get_prop_ascii x9019 "from") "apply"
                   [|x9019;((let x9014 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9014 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x9011)|]);
                             ignore
                               (Ojs.call x9014 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x9016 : Ojs.t) ->
                                          fun (x9017 : Ojs.t) ->
                                            bigint_to_js
                                              (x9012 ~v:(Obj.magic x9016)
                                                 ~k:(Ojs.float_of_js x9017))))|]);
                             (match x9013 with
                              | Some x9015 ->
                                  ignore
                                    (Ojs.call x9014 "push"
                                       [|(any_to_js x9015)|])
                              | None -> ());
                             x9014))|])
    let cast_from = Obj.magic
  end
module Atomics =
  struct
    let (add :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float -> value:bigint -> bigint)
      =
      fun
        ~typedArray:(x9020 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x9023 : float) ->
          fun ~value:(x9024 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "add"
                 [|((match x9020 with
                     | `U1 x9021 -> BigInt64Array.t_to_js x9021
                     | `U2 x9022 -> BigUint64Array.t_to_js x9022));(Ojs.float_to_js
                                                                    x9023);(
                   bigint_to_js x9024)|])
    let (and_ :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float -> value:bigint -> bigint)
      =
      fun
        ~typedArray:(x9025 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x9028 : float) ->
          fun ~value:(x9029 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "and"
                 [|((match x9025 with
                     | `U1 x9026 -> BigInt64Array.t_to_js x9026
                     | `U2 x9027 -> BigUint64Array.t_to_js x9027));(Ojs.float_to_js
                                                                    x9028);(
                   bigint_to_js x9029)|])
    let (compareExchange :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float ->
          expectedValue:bigint -> replacementValue:bigint -> bigint)
      =
      fun
        ~typedArray:(x9030 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x9033 : float) ->
          fun ~expectedValue:(x9034 : bigint) ->
            fun ~replacementValue:(x9035 : bigint) ->
              bigint_of_js
                (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics")
                   "compareExchange"
                   [|((match x9030 with
                       | `U1 x9031 -> BigInt64Array.t_to_js x9031
                       | `U2 x9032 -> BigUint64Array.t_to_js x9032));(
                     Ojs.float_to_js x9033);(bigint_to_js x9034);(bigint_to_js
                                                                    x9035)|])
    let (exchange :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float -> value:bigint -> bigint)
      =
      fun
        ~typedArray:(x9036 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x9039 : float) ->
          fun ~value:(x9040 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "exchange"
                 [|((match x9036 with
                     | `U1 x9037 -> BigInt64Array.t_to_js x9037
                     | `U2 x9038 -> BigUint64Array.t_to_js x9038));(Ojs.float_to_js
                                                                    x9039);(
                   bigint_to_js x9040)|])
    let (load :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float -> bigint)
      =
      fun
        ~typedArray:(x9041 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x9044 : float) ->
          bigint_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "load"
               [|((match x9041 with
                   | `U1 x9042 -> BigInt64Array.t_to_js x9042
                   | `U2 x9043 -> BigUint64Array.t_to_js x9043));(Ojs.float_to_js
                                                                    x9044)|])
    let (or_ :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float -> value:bigint -> bigint)
      =
      fun
        ~typedArray:(x9045 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x9048 : float) ->
          fun ~value:(x9049 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "or"
                 [|((match x9045 with
                     | `U1 x9046 -> BigInt64Array.t_to_js x9046
                     | `U2 x9047 -> BigUint64Array.t_to_js x9047));(Ojs.float_to_js
                                                                    x9048);(
                   bigint_to_js x9049)|])
    let (store :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float -> value:bigint -> bigint)
      =
      fun
        ~typedArray:(x9050 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x9053 : float) ->
          fun ~value:(x9054 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "store"
                 [|((match x9050 with
                     | `U1 x9051 -> BigInt64Array.t_to_js x9051
                     | `U2 x9052 -> BigUint64Array.t_to_js x9052));(Ojs.float_to_js
                                                                    x9053);(
                   bigint_to_js x9054)|])
    let (sub :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float -> value:bigint -> bigint)
      =
      fun
        ~typedArray:(x9055 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x9058 : float) ->
          fun ~value:(x9059 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "sub"
                 [|((match x9055 with
                     | `U1 x9056 -> BigInt64Array.t_to_js x9056
                     | `U2 x9057 -> BigUint64Array.t_to_js x9057));(Ojs.float_to_js
                                                                    x9058);(
                   bigint_to_js x9059)|])
    let (wait :
      typedArray:BigInt64Array.t ->
        index:float ->
          value:bigint ->
            ?timeout:float ->
              unit -> [ `L_s71_not_equal  | `L_s74_ok  | `L_s94_timed_out ])
      =
      fun ~typedArray:(x9060 : BigInt64Array.t) ->
        fun ~index:(x9061 : float) ->
          fun ~value:(x9062 : bigint) ->
            fun ?timeout:(x9063 : float option) ->
              fun () ->
                let x9067 =
                  let x9066 = Ojs.get_prop_ascii Ojs.global "Atomics" in
                  Ojs.call (Ojs.get_prop_ascii x9066 "wait") "apply"
                    [|x9066;((let x9064 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x9064 "push"
                                   [|(BigInt64Array.t_to_js x9060)|]);
                              ignore
                                (Ojs.call x9064 "push"
                                   [|(Ojs.float_to_js x9061)|]);
                              ignore
                                (Ojs.call x9064 "push"
                                   [|(bigint_to_js x9062)|]);
                              (match x9063 with
                               | Some x9065 ->
                                   ignore
                                     (Ojs.call x9064 "push"
                                        [|(Ojs.float_to_js x9065)|])
                               | None -> ());
                              x9064))|] in
                match Ojs.string_of_js x9067 with
                | "not-equal" -> `L_s71_not_equal
                | "ok" -> `L_s74_ok
                | "timed-out" -> `L_s94_timed_out
                | _ -> assert false
    let (notify :
      typedArray:BigInt64Array.t ->
        index:float -> ?count:float -> unit -> float)
      =
      fun ~typedArray:(x9068 : BigInt64Array.t) ->
        fun ~index:(x9069 : float) ->
          fun ?count:(x9070 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x9073 = Ojs.get_prop_ascii Ojs.global "Atomics" in
                 Ojs.call (Ojs.get_prop_ascii x9073 "notify") "apply"
                   [|x9073;((let x9071 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9071 "push"
                                  [|(BigInt64Array.t_to_js x9068)|]);
                             ignore
                               (Ojs.call x9071 "push"
                                  [|(Ojs.float_to_js x9069)|]);
                             (match x9070 with
                              | Some x9072 ->
                                  ignore
                                    (Ojs.call x9071 "push"
                                       [|(Ojs.float_to_js x9072)|])
                              | None -> ());
                             x9071))|])
    let (xor :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float -> value:bigint -> bigint)
      =
      fun
        ~typedArray:(x9074 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x9077 : float) ->
          fun ~value:(x9078 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "xor"
                 [|((match x9074 with
                     | `U1 x9075 -> BigInt64Array.t_to_js x9075
                     | `U2 x9076 -> BigUint64Array.t_to_js x9076));(Ojs.float_to_js
                                                                    x9077);(
                   bigint_to_js x9078)|])
    let (add' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        -> index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x9079 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x9086 : float) ->
          fun ~value:(x9087 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "add"
                 [|((match x9079 with
                     | `U1 x9080 -> Int8Array.t_to_js x9080
                     | `U2 x9081 -> Uint8Array.t_to_js x9081
                     | `U3 x9082 -> Int16Array.t_to_js x9082
                     | `U4 x9083 -> Uint16Array.t_to_js x9083
                     | `U5 x9084 -> Int32Array.t_to_js x9084
                     | `U6 x9085 -> Uint32Array.t_to_js x9085));(Ojs.float_to_js
                                                                   x9086);(
                   Ojs.float_to_js x9087)|])
    let (and_' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        -> index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x9088 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x9095 : float) ->
          fun ~value:(x9096 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "and"
                 [|((match x9088 with
                     | `U1 x9089 -> Int8Array.t_to_js x9089
                     | `U2 x9090 -> Uint8Array.t_to_js x9090
                     | `U3 x9091 -> Int16Array.t_to_js x9091
                     | `U4 x9092 -> Uint16Array.t_to_js x9092
                     | `U5 x9093 -> Int32Array.t_to_js x9093
                     | `U6 x9094 -> Uint32Array.t_to_js x9094));(Ojs.float_to_js
                                                                   x9095);(
                   Ojs.float_to_js x9096)|])
    let (compareExchange' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        ->
        index:float -> expectedValue:float -> replacementValue:float -> float)
      =
      fun
        ~typedArray:(x9097 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x9104 : float) ->
          fun ~expectedValue:(x9105 : float) ->
            fun ~replacementValue:(x9106 : float) ->
              Ojs.float_of_js
                (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics")
                   "compareExchange"
                   [|((match x9097 with
                       | `U1 x9098 -> Int8Array.t_to_js x9098
                       | `U2 x9099 -> Uint8Array.t_to_js x9099
                       | `U3 x9100 -> Int16Array.t_to_js x9100
                       | `U4 x9101 -> Uint16Array.t_to_js x9101
                       | `U5 x9102 -> Int32Array.t_to_js x9102
                       | `U6 x9103 -> Uint32Array.t_to_js x9103));(Ojs.float_to_js
                                                                    x9104);(
                     Ojs.float_to_js x9105);(Ojs.float_to_js x9106)|])
    let (exchange' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        -> index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x9107 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x9114 : float) ->
          fun ~value:(x9115 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "exchange"
                 [|((match x9107 with
                     | `U1 x9108 -> Int8Array.t_to_js x9108
                     | `U2 x9109 -> Uint8Array.t_to_js x9109
                     | `U3 x9110 -> Int16Array.t_to_js x9110
                     | `U4 x9111 -> Uint16Array.t_to_js x9111
                     | `U5 x9112 -> Int32Array.t_to_js x9112
                     | `U6 x9113 -> Uint32Array.t_to_js x9113));(Ojs.float_to_js
                                                                   x9114);(
                   Ojs.float_to_js x9115)|])
    let (isLockFree : float -> bool) =
      fun (x9116 : float) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "isLockFree"
             [|(Ojs.float_to_js x9116)|])
    let (load' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        -> index:float -> float)
      =
      fun
        ~typedArray:(x9117 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x9124 : float) ->
          Ojs.float_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "load"
               [|((match x9117 with
                   | `U1 x9118 -> Int8Array.t_to_js x9118
                   | `U2 x9119 -> Uint8Array.t_to_js x9119
                   | `U3 x9120 -> Int16Array.t_to_js x9120
                   | `U4 x9121 -> Uint16Array.t_to_js x9121
                   | `U5 x9122 -> Int32Array.t_to_js x9122
                   | `U6 x9123 -> Uint32Array.t_to_js x9123));(Ojs.float_to_js
                                                                 x9124)|])
    let (or_' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        -> index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x9125 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x9132 : float) ->
          fun ~value:(x9133 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "or"
                 [|((match x9125 with
                     | `U1 x9126 -> Int8Array.t_to_js x9126
                     | `U2 x9127 -> Uint8Array.t_to_js x9127
                     | `U3 x9128 -> Int16Array.t_to_js x9128
                     | `U4 x9129 -> Uint16Array.t_to_js x9129
                     | `U5 x9130 -> Int32Array.t_to_js x9130
                     | `U6 x9131 -> Uint32Array.t_to_js x9131));(Ojs.float_to_js
                                                                   x9132);(
                   Ojs.float_to_js x9133)|])
    let (store' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        -> index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x9134 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x9141 : float) ->
          fun ~value:(x9142 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "store"
                 [|((match x9134 with
                     | `U1 x9135 -> Int8Array.t_to_js x9135
                     | `U2 x9136 -> Uint8Array.t_to_js x9136
                     | `U3 x9137 -> Int16Array.t_to_js x9137
                     | `U4 x9138 -> Uint16Array.t_to_js x9138
                     | `U5 x9139 -> Int32Array.t_to_js x9139
                     | `U6 x9140 -> Uint32Array.t_to_js x9140));(Ojs.float_to_js
                                                                   x9141);(
                   Ojs.float_to_js x9142)|])
    let (sub' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        -> index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x9143 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x9150 : float) ->
          fun ~value:(x9151 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "sub"
                 [|((match x9143 with
                     | `U1 x9144 -> Int8Array.t_to_js x9144
                     | `U2 x9145 -> Uint8Array.t_to_js x9145
                     | `U3 x9146 -> Int16Array.t_to_js x9146
                     | `U4 x9147 -> Uint16Array.t_to_js x9147
                     | `U5 x9148 -> Int32Array.t_to_js x9148
                     | `U6 x9149 -> Uint32Array.t_to_js x9149));(Ojs.float_to_js
                                                                   x9150);(
                   Ojs.float_to_js x9151)|])
    let (wait' :
      typedArray:Int32Array.t ->
        index:float ->
          value:float ->
            ?timeout:float ->
              unit -> [ `L_s71_not_equal  | `L_s74_ok  | `L_s94_timed_out ])
      =
      fun ~typedArray:(x9152 : Int32Array.t) ->
        fun ~index:(x9153 : float) ->
          fun ~value:(x9154 : float) ->
            fun ?timeout:(x9155 : float option) ->
              fun () ->
                let x9159 =
                  let x9158 = Ojs.get_prop_ascii Ojs.global "Atomics" in
                  Ojs.call (Ojs.get_prop_ascii x9158 "wait") "apply"
                    [|x9158;((let x9156 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x9156 "push"
                                   [|(Int32Array.t_to_js x9152)|]);
                              ignore
                                (Ojs.call x9156 "push"
                                   [|(Ojs.float_to_js x9153)|]);
                              ignore
                                (Ojs.call x9156 "push"
                                   [|(Ojs.float_to_js x9154)|]);
                              (match x9155 with
                               | Some x9157 ->
                                   ignore
                                     (Ojs.call x9156 "push"
                                        [|(Ojs.float_to_js x9157)|])
                               | None -> ());
                              x9156))|] in
                match Ojs.string_of_js x9159 with
                | "not-equal" -> `L_s71_not_equal
                | "ok" -> `L_s74_ok
                | "timed-out" -> `L_s94_timed_out
                | _ -> assert false
    let (notify' :
      typedArray:Int32Array.t -> index:float -> ?count:float -> unit -> float)
      =
      fun ~typedArray:(x9160 : Int32Array.t) ->
        fun ~index:(x9161 : float) ->
          fun ?count:(x9162 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x9165 = Ojs.get_prop_ascii Ojs.global "Atomics" in
                 Ojs.call (Ojs.get_prop_ascii x9165 "notify") "apply"
                   [|x9165;((let x9163 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9163 "push"
                                  [|(Int32Array.t_to_js x9160)|]);
                             ignore
                               (Ojs.call x9163 "push"
                                  [|(Ojs.float_to_js x9161)|]);
                             (match x9162 with
                              | Some x9164 ->
                                  ignore
                                    (Ojs.call x9163 "push"
                                       [|(Ojs.float_to_js x9164)|])
                              | None -> ());
                             x9163))|])
    let (xor' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        -> index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x9166 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x9173 : float) ->
          fun ~value:(x9174 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "xor"
                 [|((match x9166 with
                     | `U1 x9167 -> Int8Array.t_to_js x9167
                     | `U2 x9168 -> Uint8Array.t_to_js x9168
                     | `U3 x9169 -> Int16Array.t_to_js x9169
                     | `U4 x9170 -> Uint16Array.t_to_js x9170
                     | `U5 x9171 -> Int32Array.t_to_js x9171
                     | `U6 x9172 -> Uint32Array.t_to_js x9172));(Ojs.float_to_js
                                                                   x9173);(
                   Ojs.float_to_js x9174)|])
  end
module PromiseRejectedResult =
  struct
    type t = [ `PromiseRejectedResult ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x9176 : Ojs.t) -> t_of_js x9176
    and t_0_to_js : t_0 -> Ojs.t = fun (x9175 : t) -> t_to_js x9175
    type tags = [ `PromiseRejectedResult ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `PromiseRejectedResult ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x9179 : Ojs.t) -> intf_of_js __tags_of_js x9179
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x9177 : __tags intf) -> intf_to_js __tags_to_js x9177
    let (get_status : 'tags this -> [ `L_s84_rejected ]) =
      fun (x9181 : 'tags this) ->
        let x9183 = Ojs.get_prop_ascii (this_to_js Obj.magic x9181) "status" in
        match Ojs.string_of_js x9183 with
        | "rejected" -> `L_s84_rejected
        | _ -> assert false
    let (set_status : 'tags this -> [ `L_s84_rejected ] -> unit) =
      fun (x9184 : 'tags this) ->
        fun (x9185 : [ `L_s84_rejected ]) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9184) "status"
            (match x9185 with
             | `L_s84_rejected -> Ojs.string_to_js "rejected")
    let (get_reason : 'tags this -> any) =
      fun (x9187 : 'tags this) ->
        any_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x9187) "reason")
    let (set_reason : 'tags this -> any -> unit) =
      fun (x9189 : 'tags this) ->
        fun (x9190 : any) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9189) "reason"
            (any_to_js x9190)
    let (create : status:[ `L_s84_rejected ] -> reason:any -> unit -> t) =
      fun ~status:(x9192 : [ `L_s84_rejected ]) ->
        fun ~reason:(x9193 : any) ->
          fun () ->
            let x9194 = Ojs.empty_obj () in
            Ojs.set_prop_ascii x9194 "status"
              (match x9192 with
               | `L_s84_rejected -> Ojs.string_to_js "rejected");
            Ojs.set_prop_ascii x9194 "reason" (any_to_js x9193);
            t_of_js x9194
    let cast_from = Obj.magic
  end
module PromiseFulfilledResult =
  struct
    type 'T t = [ `PromiseFulfilledResult of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x9197 : Ojs.t) -> t_of_js __T_of_js x9197
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x9195 : __T t) -> t_to_js __T_to_js x9195
    type 'T tags = [ `PromiseFulfilledResult of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `PromiseFulfilledResult of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x9201 : Ojs.t) -> intf_of_js __tags_of_js x9201
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x9199 : __tags intf) -> intf_to_js __tags_to_js x9199
    let (get_status : ('tags, 'T) this -> [ `L_s43_fulfilled ]) =
      fun (x9203 : ('tags, 'T) this) ->
        let x9206 =
          Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x9203) "status" in
        match Ojs.string_of_js x9206 with
        | "fulfilled" -> `L_s43_fulfilled
        | _ -> assert false
    let (set_status : ('tags, 'T) this -> [ `L_s43_fulfilled ] -> unit) =
      fun (x9207 : ('tags, 'T) this) ->
        fun (x9208 : [ `L_s43_fulfilled ]) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x9207) "status"
            (match x9208 with
             | `L_s43_fulfilled -> Ojs.string_to_js "fulfilled")
    let (get_value : ('tags, 'T) this -> 'T) =
      fun (x9211 : ('tags, 'T) this) ->
        Obj.magic
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x9211) "value")
    let (set_value : ('tags, 'T) this -> 'T -> unit) =
      fun (x9214 : ('tags, 'T) this) ->
        fun (x9215 : 'T) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x9214) "value"
            (Obj.magic x9215)
    let (create : status:[ `L_s43_fulfilled ] -> value:'T -> unit -> 'T t) =
      fun ~status:(x9218 : [ `L_s43_fulfilled ]) ->
        fun ~value:(x9219 : 'T) ->
          fun () ->
            let x9220 = Ojs.empty_obj () in
            Ojs.set_prop_ascii x9220 "status"
              (match x9218 with
               | `L_s43_fulfilled -> Ojs.string_to_js "fulfilled");
            Ojs.set_prop_ascii x9220 "value" (Obj.magic x9219);
            t_of_js Obj.magic x9220
    let cast_from = Obj.magic
  end
module PromiseSettledResult =
  struct
    type 'T t =
      [ `U_s43_fulfilled of 'T PromiseFulfilledResult.t 
      | `U_s84_rejected of PromiseRejectedResult.t ]
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x9226 : Ojs.t) ->
            let x9227 = x9226 in
            match Ojs.string_of_js (Ojs.get_prop_ascii x9227 "status") with
            | "fulfilled" ->
                `U_s43_fulfilled
                  (PromiseFulfilledResult.t_of_js __T_of_js x9227)
            | "rejected" ->
                `U_s84_rejected (PromiseRejectedResult.t_of_js x9227)
            | _ -> assert false
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun
            (x9222 :
              [ `U_s43_fulfilled of __T PromiseFulfilledResult.t 
              | `U_s84_rejected of PromiseRejectedResult.t ])
            ->
            match x9222 with
            | `U_s43_fulfilled x9223 ->
                PromiseFulfilledResult.t_to_js __T_to_js x9223
            | `U_s84_rejected x9225 -> PromiseRejectedResult.t_to_js x9225
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x9231 : Ojs.t) -> t_of_js __T_of_js x9231
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x9229 : __T t) -> t_to_js __T_to_js x9229
  end
module Awaited =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x9234 : Ojs.t) -> any_of_js x9234
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x9233 : any) -> any_to_js x9233
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x9237 : Ojs.t) -> t_of_js __T_of_js x9237
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x9235 : __T t) -> t_to_js __T_to_js x9235
  end
module Promise =
  struct
    type 'T t = [ `Promise of 'T  | 'T PromiseLike.tags_1] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x9241 : Ojs.t) -> t_of_js __T_of_js x9241
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x9239 : __T t) -> t_to_js __T_to_js x9239
    type 'T tags = [ `Promise of 'T  | 'T PromiseLike.tags_1]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this = 'tags intf constraint 'tags = [> `Promise of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x9245 : Ojs.t) -> intf_of_js __tags_of_js x9245
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x9243 : __tags intf) -> intf_to_js __tags_to_js x9243
    let (finally :
      ('tags, 'T) this ->
        ?onfinally:[ `Null  | `Undefined of undefined 
                   | `U1 of unit -> unit ]
          -> unit -> 'T t)
      =
      fun (x9252 : ('tags, 'T) this) ->
        fun
          ?onfinally:(x9247 :
                       [ `Null  | `Undefined of undefined 
                       | `U1 of unit -> unit ] option)
          ->
          fun () ->
            t_of_js Obj.magic
              (let x9255 = this_to_js Obj.magic Obj.magic x9252 in
               Ojs.call (Ojs.get_prop_ascii x9255 "finally") "apply"
                 [|x9255;((let x9248 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9247 with
                            | Some x9249 ->
                                ignore
                                  (Ojs.call x9248 "push"
                                     [|((match x9249 with
                                         | `Null -> Ojs.null
                                         | `Undefined x9250 ->
                                             undefined_to_js x9250
                                         | `U1 x9251 ->
                                             Ojs.fun_to_js 1
                                               (fun _ -> x9251 ())))|])
                            | None -> ());
                           x9248))|])
    let (then_ :
      ('tags, 'T) this ->
        ?onfulfilled:[ `Null  | `Undefined of undefined 
                     | `U1 of
                         'T ->
                           [ `U1 of 'TResult1 
                           | `U2 of 'TResult1 PromiseLike.t ]
                         ]
          ->
          ?onrejected:[ `Null  | `Undefined of undefined 
                      | `U1 of
                          any ->
                            [ `U1 of 'TResult2 
                            | `U2 of 'TResult2 PromiseLike.t ]
                          ]
            -> unit -> ('TResult1, 'TResult2) union2 t)
      =
      fun (x9274 : ('tags, 'T) this) ->
        fun
          ?onfulfilled:(x9257 :
                         [ `Null  | `Undefined of undefined 
                         | `U1 of
                             'T ->
                               [ `U1 of 'TResult1 
                               | `U2 of 'TResult1 PromiseLike.t ]
                             ]
                           option)
          ->
          fun
            ?onrejected:(x9258 :
                          [ `Null  | `Undefined of undefined 
                          | `U1 of
                              any ->
                                [ `U1 of 'TResult2 
                                | `U2 of 'TResult2 PromiseLike.t ]
                              ]
                            option)
            ->
            fun () ->
              t_of_js
                (fun (x9278 : Ojs.t) ->
                   union2_of_js Obj.magic Obj.magic x9278)
                (let x9277 = this_to_js Obj.magic Obj.magic x9274 in
                 Ojs.call (Ojs.get_prop_ascii x9277 "then") "apply"
                   [|x9277;((let x9259 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x9257 with
                              | Some x9267 ->
                                  ignore
                                    (Ojs.call x9259 "push"
                                       [|((match x9267 with
                                           | `Null -> Ojs.null
                                           | `Undefined x9268 ->
                                               undefined_to_js x9268
                                           | `U1 x9269 ->
                                               Ojs.fun_to_js 1
                                                 (fun (x9270 : Ojs.t) ->
                                                    match x9269
                                                            (Obj.magic x9270)
                                                    with
                                                    | `U1 x9271 ->
                                                        Obj.magic x9271
                                                    | `U2 x9272 ->
                                                        PromiseLike.t_to_js
                                                          Obj.magic x9272)))|])
                              | None -> ());
                             (match x9258 with
                              | Some x9260 ->
                                  ignore
                                    (Ojs.call x9259 "push"
                                       [|((match x9260 with
                                           | `Null -> Ojs.null
                                           | `Undefined x9261 ->
                                               undefined_to_js x9261
                                           | `U1 x9262 ->
                                               Ojs.fun_to_js 1
                                                 (fun (x9263 : Ojs.t) ->
                                                    match x9262
                                                            (any_of_js x9263)
                                                    with
                                                    | `U1 x9264 ->
                                                        Obj.magic x9264
                                                    | `U2 x9265 ->
                                                        PromiseLike.t_to_js
                                                          Obj.magic x9265)))|])
                              | None -> ());
                             x9259))|])
    let (catch :
      ('tags, 'T) this ->
        ?onrejected:[ `Null  | `Undefined of undefined 
                    | `U1 of
                        any ->
                          [ `U1 of 'TResult 
                          | `U2 of 'TResult PromiseLike.t ]
                        ]
          -> unit -> ('T, 'TResult) union2 t)
      =
      fun (x9290 : ('tags, 'T) this) ->
        fun
          ?onrejected:(x9281 :
                        [ `Null  | `Undefined of undefined 
                        | `U1 of
                            any ->
                              [ `U1 of 'TResult 
                              | `U2 of 'TResult PromiseLike.t ]
                            ]
                          option)
          ->
          fun () ->
            t_of_js
              (fun (x9294 : Ojs.t) -> union2_of_js Obj.magic Obj.magic x9294)
              (let x9293 = this_to_js Obj.magic Obj.magic x9290 in
               Ojs.call (Ojs.get_prop_ascii x9293 "catch") "apply"
                 [|x9293;((let x9282 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9281 with
                            | Some x9283 ->
                                ignore
                                  (Ojs.call x9282 "push"
                                     [|((match x9283 with
                                         | `Null -> Ojs.null
                                         | `Undefined x9284 ->
                                             undefined_to_js x9284
                                         | `U1 x9285 ->
                                             Ojs.fun_to_js 1
                                               (fun (x9286 : Ojs.t) ->
                                                  match x9285
                                                          (any_of_js x9286)
                                                  with
                                                  | `U1 x9287 ->
                                                      Obj.magic x9287
                                                  | `U2 x9288 ->
                                                      PromiseLike.t_to_js
                                                        Obj.magic x9288)))|])
                            | None -> ());
                           x9282))|])
    let (any :
      [ `U1 of [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] list 
      | `U2 of [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t ] -> 
        'T t)
      =
      fun
        (x9297 :
          [ `U1 of [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] list 
          | `U2 of [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t ])
        ->
        t_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "any"
             [|((match x9297 with
                 | `U1 x9298 ->
                     Ojs.list_to_js
                       (fun
                          (x9299 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ])
                          ->
                          match x9299 with
                          | `U1 x9300 -> Obj.magic x9300
                          | `U2 x9301 -> PromiseLike.t_to_js Obj.magic x9301)
                       x9298
                 | `U2 x9303 ->
                     Iterable.t_to_js
                       (fun
                          (x9304 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ])
                          ->
                          match x9304 with
                          | `U1 x9305 -> Obj.magic x9305
                          | `U2 x9306 -> PromiseLike.t_to_js Obj.magic x9306)
                       x9303))|])
    let (any' : 'T -> any Awaited.t t) =
      fun (x9309 : 'T) ->
        t_of_js (fun (x9310 : Ojs.t) -> Awaited.t_of_js any_of_js x9310)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "any"
             [|(Obj.magic x9309)|])
    let (any'' :
      [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t -> 'T Awaited.t t)
      =
      fun (x9312 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t) ->
        t_of_js (fun (x9317 : Ojs.t) -> Awaited.t_of_js Obj.magic x9317)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "any"
             [|(Iterable.t_to_js
                  (fun (x9313 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ]) ->
                     match x9313 with
                     | `U1 x9314 -> Obj.magic x9314
                     | `U2 x9315 -> PromiseLike.t_to_js Obj.magic x9315)
                  x9312)|])
    let (allSettled : 'T -> any t) =
      fun (x9319 : 'T) ->
        t_of_js any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "allSettled"
             [|(Obj.magic x9319)|])
    let (allSettled' :
      [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t ->
        'T Awaited.t PromiseSettledResult.t list t)
      =
      fun (x9321 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t) ->
        t_of_js
          (fun (x9326 : Ojs.t) ->
             Ojs.list_of_js
               (fun (x9327 : Ojs.t) ->
                  PromiseSettledResult.t_of_js
                    (fun (x9328 : Ojs.t) -> Awaited.t_of_js Obj.magic x9328)
                    x9327) x9326)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "allSettled"
             [|(Iterable.t_to_js
                  (fun (x9322 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ]) ->
                     match x9322 with
                     | `U1 x9323 -> Obj.magic x9323
                     | `U2 x9324 -> PromiseLike.t_to_js Obj.magic x9324)
                  x9321)|])
    let (prototype : unit -> any t) =
      fun () ->
        t_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Promise")
             "prototype")
    let (create :
      (resolve:([ `U1 of 'T  | `U2 of 'T PromiseLike.t ] -> unit) ->
         reject:(?reason:any -> unit -> unit) -> unit)
        -> 'T t)
      =
      fun
        (x9331 :
          resolve:([ `U1 of 'T  | `U2 of 'T PromiseLike.t ] -> unit) ->
            reject:(?reason:any -> unit -> unit) -> unit)
        ->
        t_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Promise")
             [|(Ojs.fun_to_js 2
                  (fun (x9332 : Ojs.t) ->
                     fun (x9337 : Ojs.t) ->
                       x9331
                         ~resolve:(fun
                                     (x9333 :
                                       [ `U1 of 'T 
                                       | `U2 of 'T PromiseLike.t ])
                                     ->
                                     ignore
                                       (Ojs.apply x9332
                                          [|((match x9333 with
                                              | `U1 x9334 -> Obj.magic x9334
                                              | `U2 x9335 ->
                                                  PromiseLike.t_to_js
                                                    Obj.magic x9335))|]))
                         ~reject:(fun ?reason:(x9338 : any option) ->
                                    fun () ->
                                      ignore
                                        (Ojs.call x9337 "apply"
                                           [|Ojs.null;((let x9339 =
                                                          Ojs.new_obj
                                                            (Ojs.get_prop_ascii
                                                               Ojs.global
                                                               "Array") 
                                                            [||] in
                                                        (match x9338 with
                                                         | Some x9340 ->
                                                             ignore
                                                               (Ojs.call
                                                                  x9339
                                                                  "push"
                                                                  [|(
                                                                    any_to_js
                                                                    x9340)|])
                                                         | None -> ());
                                                        x9339))|]))))|])
    let (all : 'T -> any t) =
      fun (x9342 : 'T) ->
        t_of_js any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "all"
             [|(Obj.magic x9342)|])
    let (race : 'T -> any Awaited.t t) =
      fun (x9344 : 'T) ->
        t_of_js (fun (x9345 : Ojs.t) -> Awaited.t_of_js any_of_js x9345)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "race"
             [|(Obj.magic x9344)|])
    let (reject : ?reason:any -> unit -> 'T t) =
      fun ?reason:(x9347 : any option) ->
        fun () ->
          t_of_js Obj.magic
            (let x9350 = Ojs.get_prop_ascii Ojs.global "Promise" in
             Ojs.call (Ojs.get_prop_ascii x9350 "reject") "apply"
               [|x9350;((let x9348 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         (match x9347 with
                          | Some x9349 ->
                              ignore
                                (Ojs.call x9348 "push" [|(any_to_js x9349)|])
                          | None -> ());
                         x9348))|])
    let (resolve : unit -> unit t) =
      fun () ->
        t_of_js Ojs.unit_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "resolve" [||])
    let (resolve' : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] -> 'T t) =
      fun (x9353 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ]) ->
        t_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "resolve"
             [|((match x9353 with
                 | `U1 x9354 -> Obj.magic x9354
                 | `U2 x9355 -> PromiseLike.t_to_js Obj.magic x9355))|])
    let (all' :
      [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t ->
        'T Awaited.t list t)
      =
      fun (x9358 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t) ->
        t_of_js
          (fun (x9363 : Ojs.t) ->
             Ojs.list_of_js
               (fun (x9364 : Ojs.t) -> Awaited.t_of_js Obj.magic x9364) x9363)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "all"
             [|(Iterable.t_to_js
                  (fun (x9359 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ]) ->
                     match x9359 with
                     | `U1 x9360 -> Obj.magic x9360
                     | `U2 x9361 -> PromiseLike.t_to_js Obj.magic x9361)
                  x9358)|])
    let (race' :
      [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t -> 'T Awaited.t t)
      =
      fun (x9366 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t) ->
        t_of_js (fun (x9371 : Ojs.t) -> Awaited.t_of_js Obj.magic x9371)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "race"
             [|(Iterable.t_to_js
                  (fun (x9367 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ]) ->
                     match x9367 with
                     | `U1 x9368 -> Obj.magic x9368
                     | `U2 x9369 -> PromiseLike.t_to_js Obj.magic x9369)
                  x9366)|])
    let cast_from = Obj.magic
  end
module AsyncIterator =
  struct
    type ('T, 'TReturn, 'TNext) t =
      [ `AsyncIterator of ('T * 'TReturn * 'TNext) ] intf
    let rec t_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    and t_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t -> Ojs.t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    type ('T, 'TReturn, 'TNext) t_3 = ('T, 'TReturn, 'TNext) t
    let rec t_3_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t_3
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
                fun (__TNext_of_js : Ojs.t -> __TNext) ->
                  fun (x9377 : Ojs.t) ->
                    t_of_js __T_of_js __TReturn_of_js __TNext_of_js x9377
    and t_3_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t_3 -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
                fun (__TNext_to_js : __TNext -> Ojs.t) ->
                  fun (x9373 : (__T, __TReturn, __TNext) t) ->
                    t_to_js __T_to_js __TReturn_to_js __TNext_to_js x9373
    type ('T, 'TReturn) t_2 = ('T, 'TReturn, undefined) t
    let rec t_2_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t_2
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
              fun (x9385 : Ojs.t) ->
                t_of_js __T_of_js __TReturn_of_js undefined_of_js x9385
    and t_2_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t_2 -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
              fun (x9381 : (__T, __TReturn, undefined) t) ->
                t_to_js __T_to_js __TReturn_to_js undefined_to_js x9381
    type 'T t_1 = ('T, any, undefined) t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x9393 : Ojs.t) ->
            t_of_js __T_of_js any_of_js undefined_of_js x9393
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x9389 : (__T, any, undefined) t) ->
            t_to_js __T_to_js any_to_js undefined_to_js x9389
    type ('T, 'TReturn, 'TNext) tags =
      [ `AsyncIterator of ('T * 'TReturn * 'TNext) ]
    type ('T, 'TReturn, 'TNext) tags_3 = ('T, 'TReturn, 'TNext) tags
    type ('T, 'TReturn) tags_2 = ('T, 'TReturn, undefined) tags
    type 'T tags_1 = ('T, any, undefined) tags
    type ('tags, 'T, 'TReturn, 'TNext) this =
      'tags intf constraint 'tags =
                  [> `AsyncIterator of ('T * 'TReturn * 'TNext) ]
    let rec this_of_js :
      'tags 'T 'TReturn 'TNext .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'T) ->
            (Ojs.t -> 'TReturn) ->
              (Ojs.t -> 'TNext) ->
                Ojs.t -> ('tags, 'T, 'TReturn, 'TNext) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (type __TReturn) ->
            fun (type __TNext) ->
              fun (__tags_of_js : Ojs.t -> __tags) ->
                fun (__T_of_js : Ojs.t -> __T) ->
                  fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
                    fun (__TNext_of_js : Ojs.t -> __TNext) ->
                      fun (x9399 : Ojs.t) -> intf_of_js __tags_of_js x9399
    and this_to_js :
      'tags 'T 'TReturn 'TNext .
        ('tags -> Ojs.t) ->
          ('T -> Ojs.t) ->
            ('TReturn -> Ojs.t) ->
              ('TNext -> Ojs.t) ->
                ('tags, 'T, 'TReturn, 'TNext) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (type __TReturn) ->
            fun (type __TNext) ->
              fun (__tags_to_js : __tags -> Ojs.t) ->
                fun (__T_to_js : __T -> Ojs.t) ->
                  fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
                    fun (__TNext_to_js : __TNext -> Ojs.t) ->
                      fun (x9397 : __tags intf) ->
                        intf_to_js __tags_to_js x9397
    let (next :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        args:any list -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x9404 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~args:(x9401 : any list) ->
          Promise.t_of_js
            (fun (x9410 : Ojs.t) ->
               IteratorResult.t_of_js Obj.magic Obj.magic x9410)
            (let x9409 =
               this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x9404 in
             Ojs.call (Ojs.get_prop_ascii x9409 "next") "apply"
               [|x9409;((let x9402 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x9403 : any) ->
                              ignore
                                (Ojs.call x9402 "push" [|(any_to_js x9403)|]))
                           x9401;
                         x9402))|])
    let (return :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        ?value:[ `U1 of 'TReturn  | `U2 of 'TReturn PromiseLike.t ] ->
          unit -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x9419 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun
          ?value:(x9413 :
                   [ `U1 of 'TReturn  | `U2 of 'TReturn PromiseLike.t ]
                     option)
          ->
          fun () ->
            Promise.t_of_js
              (fun (x9425 : Ojs.t) ->
                 IteratorResult.t_of_js Obj.magic Obj.magic x9425)
              (let x9424 =
                 this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x9419 in
               Ojs.call (Ojs.get_prop_ascii x9424 "return") "apply"
                 [|x9424;((let x9414 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9413 with
                            | Some x9415 ->
                                ignore
                                  (Ojs.call x9414 "push"
                                     [|((match x9415 with
                                         | `U1 x9416 -> Obj.magic x9416
                                         | `U2 x9417 ->
                                             PromiseLike.t_to_js Obj.magic
                                               x9417))|])
                            | None -> ());
                           x9414))|])
    let (throw :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        ?e:any -> unit -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x9431 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ?e:(x9428 : any option) ->
          fun () ->
            Promise.t_of_js
              (fun (x9437 : Ojs.t) ->
                 IteratorResult.t_of_js Obj.magic Obj.magic x9437)
              (let x9436 =
                 this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x9431 in
               Ojs.call (Ojs.get_prop_ascii x9436 "throw") "apply"
                 [|x9436;((let x9429 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9428 with
                            | Some x9430 ->
                                ignore
                                  (Ojs.call x9429 "push"
                                     [|(any_to_js x9430)|])
                            | None -> ());
                           x9429))|])
    let cast_from = Obj.magic
  end
module AsyncIterableIterator =
  struct
    type 'T t =
      [ `AsyncIterableIterator of 'T 
      | `AsyncIterator of ('T * any * undefined) ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x9442 : Ojs.t) -> t_of_js __T_of_js x9442
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x9440 : __T t) -> t_to_js __T_to_js x9440
    type 'T tags =
      [ `AsyncIterableIterator of 'T 
      | `AsyncIterator of ('T * any * undefined) ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `AsyncIterableIterator of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x9446 : Ojs.t) -> intf_of_js __tags_of_js x9446
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x9444 : __tags intf) -> intf_to_js __tags_to_js x9444
    let cast_from = Obj.magic
  end
module AsyncIterable =
  struct
    type 'T t = [ `AsyncIterable of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x9450 : Ojs.t) -> t_of_js __T_of_js x9450
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x9448 : __T t) -> t_to_js __T_to_js x9448
    type 'T tags = [ `AsyncIterable of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `AsyncIterable of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (x9454 : Ojs.t) -> intf_of_js __tags_of_js x9454
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (x9452 : __tags intf) -> intf_to_js __tags_to_js x9452
    let cast_from = Obj.magic
  end
module AsyncGenerator =
  struct
    type ('T, 'TReturn, 'TNext) t =
      [ `AsyncGenerator of ('T * 'TReturn * 'TNext) 
      | `AsyncIterator of ('T * 'TReturn * 'TNext) ] intf
    let rec t_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    and t_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t -> Ojs.t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    type ('T, 'TReturn, 'TNext) t_3 = ('T, 'TReturn, 'TNext) t
    let rec t_3_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t_3
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
                fun (__TNext_of_js : Ojs.t -> __TNext) ->
                  fun (x9460 : Ojs.t) ->
                    t_of_js __T_of_js __TReturn_of_js __TNext_of_js x9460
    and t_3_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t_3 -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
                fun (__TNext_to_js : __TNext -> Ojs.t) ->
                  fun (x9456 : (__T, __TReturn, __TNext) t) ->
                    t_to_js __T_to_js __TReturn_to_js __TNext_to_js x9456
    type ('T, 'TReturn) t_2 = ('T, 'TReturn, unknown) t
    let rec t_2_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t_2
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_of_js : Ojs.t -> __T) ->
            fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
              fun (x9468 : Ojs.t) ->
                t_of_js __T_of_js __TReturn_of_js unknown_of_js x9468
    and t_2_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t_2 -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (__T_to_js : __T -> Ojs.t) ->
            fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
              fun (x9464 : (__T, __TReturn, unknown) t) ->
                t_to_js __T_to_js __TReturn_to_js unknown_to_js x9464
    type 'T t_1 = ('T, any, unknown) t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x9476 : Ojs.t) ->
            t_of_js __T_of_js any_of_js unknown_of_js x9476
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x9472 : (__T, any, unknown) t) ->
            t_to_js __T_to_js any_to_js unknown_to_js x9472
    type t_0 = (unknown, any, unknown) t
    let rec t_0_of_js : Ojs.t -> t_0 =
      fun (x9484 : Ojs.t) ->
        t_of_js unknown_of_js any_of_js unknown_of_js x9484
    and t_0_to_js : t_0 -> Ojs.t =
      fun (x9480 : (unknown, any, unknown) t) ->
        t_to_js unknown_to_js any_to_js unknown_to_js x9480
    type ('T, 'TReturn, 'TNext) tags =
      [ `AsyncGenerator of ('T * 'TReturn * 'TNext) 
      | `AsyncIterator of ('T * 'TReturn * 'TNext) ]
    type ('T, 'TReturn, 'TNext) tags_3 = ('T, 'TReturn, 'TNext) tags
    type ('T, 'TReturn) tags_2 = ('T, 'TReturn, unknown) tags
    type 'T tags_1 = ('T, any, unknown) tags
    type tags_0 = (unknown, any, unknown) tags
    type ('tags, 'T, 'TReturn, 'TNext) this =
      'tags intf constraint 'tags =
                  [> `AsyncGenerator of ('T * 'TReturn * 'TNext) ]
    let rec this_of_js :
      'tags 'T 'TReturn 'TNext .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'T) ->
            (Ojs.t -> 'TReturn) ->
              (Ojs.t -> 'TNext) ->
                Ojs.t -> ('tags, 'T, 'TReturn, 'TNext) this
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (type __TReturn) ->
            fun (type __TNext) ->
              fun (__tags_of_js : Ojs.t -> __tags) ->
                fun (__T_of_js : Ojs.t -> __T) ->
                  fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
                    fun (__TNext_of_js : Ojs.t -> __TNext) ->
                      fun (x9490 : Ojs.t) -> intf_of_js __tags_of_js x9490
    and this_to_js :
      'tags 'T 'TReturn 'TNext .
        ('tags -> Ojs.t) ->
          ('T -> Ojs.t) ->
            ('TReturn -> Ojs.t) ->
              ('TNext -> Ojs.t) ->
                ('tags, 'T, 'TReturn, 'TNext) this -> Ojs.t
      =
      fun (type __tags) ->
        fun (type __T) ->
          fun (type __TReturn) ->
            fun (type __TNext) ->
              fun (__tags_to_js : __tags -> Ojs.t) ->
                fun (__T_to_js : __T -> Ojs.t) ->
                  fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
                    fun (__TNext_to_js : __TNext -> Ojs.t) ->
                      fun (x9488 : __tags intf) ->
                        intf_to_js __tags_to_js x9488
    let (next :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        args:any list -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x9495 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~args:(x9492 : any list) ->
          Promise.t_of_js
            (fun (x9501 : Ojs.t) ->
               IteratorResult.t_of_js Obj.magic Obj.magic x9501)
            (let x9500 =
               this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x9495 in
             Ojs.call (Ojs.get_prop_ascii x9500 "next") "apply"
               [|x9500;((let x9493 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x9494 : any) ->
                              ignore
                                (Ojs.call x9493 "push" [|(any_to_js x9494)|]))
                           x9492;
                         x9493))|])
    let (return :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        value:[ `U1 of 'TReturn  | `U2 of 'TReturn PromiseLike.t ] ->
          ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x9508 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun
          ~value:(x9504 :
                   [ `U1 of 'TReturn  | `U2 of 'TReturn PromiseLike.t ])
          ->
          Promise.t_of_js
            (fun (x9513 : Ojs.t) ->
               IteratorResult.t_of_js Obj.magic Obj.magic x9513)
            (Ojs.call
               (this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x9508)
               "return"
               [|((match x9504 with
                   | `U1 x9505 -> Obj.magic x9505
                   | `U2 x9506 -> PromiseLike.t_to_js Obj.magic x9506))|])
    let (throw :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        e:any -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x9517 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~e:(x9516 : any) ->
          Promise.t_of_js
            (fun (x9522 : Ojs.t) ->
               IteratorResult.t_of_js Obj.magic Obj.magic x9522)
            (Ojs.call
               (this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x9517)
               "throw" [|(any_to_js x9516)|])
    let cast_from = Obj.magic
  end
module AsyncGeneratorFunction =
  struct
    type t = [ `AsyncGeneratorFunction ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x9526 : Ojs.t) -> t_of_js x9526
    and t_0_to_js : t_0 -> Ojs.t = fun (x9525 : t) -> t_to_js x9525
    type tags = [ `AsyncGeneratorFunction ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `AsyncGeneratorFunction ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x9529 : Ojs.t) -> intf_of_js __tags_of_js x9529
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x9527 : __tags intf) -> intf_to_js __tags_to_js x9527
    let (create : 'tags this -> args:any list -> AsyncGenerator.t_0) =
      fun (x9534 : 'tags this) ->
        fun ~args:(x9531 : any list) ->
          AsyncGenerator.t_0_of_js
            (Ojs.new_obj_arr (this_to_js Obj.magic x9534)
               (let x9532 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                List.iter
                  (fun (x9533 : any) ->
                     ignore (Ojs.call x9532 "push" [|(any_to_js x9533)|]))
                  x9531;
                x9532))
    let (apply : 'tags this -> args:any list -> AsyncGenerator.t_0) =
      fun (x9539 : 'tags this) ->
        fun ~args:(x9536 : any list) ->
          AsyncGenerator.t_0_of_js
            (Ojs.call (this_to_js Obj.magic x9539) "apply"
               [|Ojs.null;((let x9537 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            List.iter
                              (fun (x9538 : any) ->
                                 ignore
                                   (Ojs.call x9537 "push"
                                      [|(any_to_js x9538)|])) x9536;
                            x9537))|])
    let (get_length : 'tags this -> float) =
      fun (x9541 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9541) "length")
    let (get_name : 'tags this -> string) =
      fun (x9543 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9543) "name")
    let (get_prototype : 'tags this -> AsyncGenerator.t_0) =
      fun (x9545 : 'tags this) ->
        AsyncGenerator.t_0_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9545) "prototype")
    let cast_from = Obj.magic
  end
module AsyncGeneratorFunctionConstructor =
  struct
    type t = [ `AsyncGeneratorFunctionConstructor ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x9548 : Ojs.t) -> t_of_js x9548
    and t_0_to_js : t_0 -> Ojs.t = fun (x9547 : t) -> t_to_js x9547
    type tags = [ `AsyncGeneratorFunctionConstructor ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `AsyncGeneratorFunctionConstructor ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x9551 : Ojs.t) -> intf_of_js __tags_of_js x9551
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x9549 : __tags intf) -> intf_to_js __tags_to_js x9549
    let (create : 'tags this -> args:string list -> AsyncGeneratorFunction.t)
      =
      fun (x9556 : 'tags this) ->
        fun ~args:(x9553 : string list) ->
          AsyncGeneratorFunction.t_of_js
            (Ojs.new_obj_arr (this_to_js Obj.magic x9556)
               (let x9554 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                List.iter
                  (fun (x9555 : string) ->
                     ignore
                       (Ojs.call x9554 "push" [|(Ojs.string_to_js x9555)|]))
                  x9553;
                x9554))
    let (apply : 'tags this -> args:string list -> AsyncGeneratorFunction.t)
      =
      fun (x9561 : 'tags this) ->
        fun ~args:(x9558 : string list) ->
          AsyncGeneratorFunction.t_of_js
            (Ojs.call (this_to_js Obj.magic x9561) "apply"
               [|Ojs.null;((let x9559 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            List.iter
                              (fun (x9560 : string) ->
                                 ignore
                                   (Ojs.call x9559 "push"
                                      [|(Ojs.string_to_js x9560)|])) x9558;
                            x9559))|])
    let (get_length : 'tags this -> float) =
      fun (x9563 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9563) "length")
    let (get_name : 'tags this -> string) =
      fun (x9565 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9565) "name")
    let (get_prototype : 'tags this -> AsyncGeneratorFunction.t) =
      fun (x9567 : 'tags this) ->
        AsyncGeneratorFunction.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9567) "prototype")
    let cast_from = Obj.magic
  end
module ArrayBufferView =
  struct
    type t = [ `ArrayBufferView ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x9570 : Ojs.t) -> t_of_js x9570
    and t_0_to_js : t_0 -> Ojs.t = fun (x9569 : t) -> t_to_js x9569
    type tags = [ `ArrayBufferView ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ArrayBufferView ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x9573 : Ojs.t) -> intf_of_js __tags_of_js x9573
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x9571 : __tags intf) -> intf_to_js __tags_to_js x9571
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x9575 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9575) "buffer")
    let (set_buffer : 'tags this -> ArrayBufferLike.t -> unit) =
      fun (x9577 : 'tags this) ->
        fun (x9578 : ArrayBufferLike.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9577) "buffer"
            (ArrayBufferLike.t_to_js x9578)
    let (get_byteLength : 'tags this -> float) =
      fun (x9580 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9580) "byteLength")
    let (set_byteLength : 'tags this -> float -> unit) =
      fun (x9582 : 'tags this) ->
        fun (x9583 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9582) "byteLength"
            (Ojs.float_to_js x9583)
    let (get_byteOffset : 'tags this -> float) =
      fun (x9585 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9585) "byteOffset")
    let (set_byteOffset : 'tags this -> float -> unit) =
      fun (x9587 : 'tags this) ->
        fun (x9588 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9587) "byteOffset"
            (Ojs.float_to_js x9588)
    let (create :
      buffer:ArrayBufferLike.t ->
        byteLength:float -> byteOffset:float -> unit -> t)
      =
      fun ~buffer:(x9590 : ArrayBufferLike.t) ->
        fun ~byteLength:(x9591 : float) ->
          fun ~byteOffset:(x9592 : float) ->
            fun () ->
              let x9593 = Ojs.empty_obj () in
              Ojs.set_prop_ascii x9593 "buffer"
                (ArrayBufferLike.t_to_js x9590);
              Ojs.set_prop_ascii x9593 "byteLength" (Ojs.float_to_js x9591);
              Ojs.set_prop_ascii x9593 "byteOffset" (Ojs.float_to_js x9592);
              t_of_js x9593
    let cast_from = Obj.magic
  end
module ArrayBufferTypes =
  struct
    type t = [ `ArrayBufferTypes ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x9595 : Ojs.t) -> t_of_js x9595
    and t_0_to_js : t_0 -> Ojs.t = fun (x9594 : t) -> t_to_js x9594
    type tags = [ `ArrayBufferTypes ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ArrayBufferTypes ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x9598 : Ojs.t) -> intf_of_js __tags_of_js x9598
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x9596 : __tags intf) -> intf_to_js __tags_to_js x9596
    let (get_SharedArrayBuffer : 'tags this -> SharedArrayBuffer.t) =
      fun (x9600 : 'tags this) ->
        SharedArrayBuffer.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9600)
             "SharedArrayBuffer")
    let (set_SharedArrayBuffer : 'tags this -> SharedArrayBuffer.t -> unit) =
      fun (x9602 : 'tags this) ->
        fun (x9603 : SharedArrayBuffer.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9602) "SharedArrayBuffer"
            (SharedArrayBuffer.t_to_js x9603)
    let (get_ArrayBuffer : 'tags this -> ArrayBuffer.t) =
      fun (x9605 : 'tags this) ->
        ArrayBuffer.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9605) "ArrayBuffer")
    let (set_ArrayBuffer : 'tags this -> ArrayBuffer.t -> unit) =
      fun (x9607 : 'tags this) ->
        fun (x9608 : ArrayBuffer.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9607) "ArrayBuffer"
            (ArrayBuffer.t_to_js x9608)
    let (create :
      sharedArrayBuffer:SharedArrayBuffer.t ->
        arrayBuffer:ArrayBuffer.t -> unit -> t)
      =
      fun ~sharedArrayBuffer:(x9610 : SharedArrayBuffer.t) ->
        fun ~arrayBuffer:(x9611 : ArrayBuffer.t) ->
          fun () ->
            let x9612 = Ojs.empty_obj () in
            Ojs.set_prop_ascii x9612 "SharedArrayBuffer"
              (SharedArrayBuffer.t_to_js x9610);
            Ojs.set_prop_ascii x9612 "ArrayBuffer"
              (ArrayBuffer.t_to_js x9611);
            t_of_js x9612
    let cast_from = Obj.magic
  end
module AggregateError =
  struct
    type t = [ `AggregateError  | `Error ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x9614 : Ojs.t) -> t_of_js x9614
    and t_0_to_js : t_0 -> Ojs.t = fun (x9613 : t) -> t_to_js x9613
    type tags = [ `AggregateError  | `Error ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `AggregateError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
        fun (__tags_of_js : Ojs.t -> __tags) ->
          fun (x9617 : Ojs.t) -> intf_of_js __tags_of_js x9617
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
      fun (type __tags) ->
        fun (__tags_to_js : __tags -> Ojs.t) ->
          fun (x9615 : __tags intf) -> intf_to_js __tags_to_js x9615
    let (get_errors : 'tags this -> any list) =
      fun (x9619 : 'tags this) ->
        Ojs.list_of_js any_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9619) "errors")
    let (set_errors : 'tags this -> any list -> unit) =
      fun (x9622 : 'tags this) ->
        fun (x9623 : any list) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9622) "errors"
            (Ojs.list_to_js any_to_js x9623)
    let (get_errors' : 'tags this -> any list) =
      fun (x9626 : 'tags this) ->
        Ojs.list_of_js any_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9626) "errors")
    let (set_errors' : 'tags this -> any list -> unit) =
      fun (x9629 : 'tags this) ->
        fun (x9630 : any list) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9629) "errors"
            (Ojs.list_to_js any_to_js x9630)
    let (create : errors:any Iterable.t -> ?message:string -> unit -> t) =
      fun ~errors:(x9633 : any Iterable.t) ->
        fun ?message:(x9634 : string option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr
                 (Ojs.get_prop_ascii Ojs.global "AggregateError")
                 (let x9635 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore
                    (Ojs.call x9635 "push"
                       [|(Iterable.t_to_js any_to_js x9633)|]);
                  (match x9634 with
                   | Some x9636 ->
                       ignore
                         (Ojs.call x9635 "push" [|(Ojs.string_to_js x9636)|])
                   | None -> ());
                  x9635))
    let (invoke : errors:any Iterable.t -> ?message:string -> unit -> t) =
      fun ~errors:(x9638 : any Iterable.t) ->
        fun ?message:(x9639 : string option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "AggregateError")
                 "apply"
                 [|Ojs.null;((let x9640 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x9640 "push"
                                   [|(Iterable.t_to_js any_to_js x9638)|]);
                              (match x9639 with
                               | Some x9641 ->
                                   ignore
                                     (Ojs.call x9640 "push"
                                        [|(Ojs.string_to_js x9641)|])
                               | None -> ());
                              x9640))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "AggregateError") "prototype")
    let (create' :
      errors:any Iterable.t ->
        ?message:string -> ?options:ErrorOptions.t -> unit -> t)
      =
      fun ~errors:(x9643 : any Iterable.t) ->
        fun ?message:(x9644 : string option) ->
          fun ?options:(x9645 : ErrorOptions.t option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "AggregateError")
                   (let x9646 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x9646 "push"
                         [|(Iterable.t_to_js any_to_js x9643)|]);
                    (match x9644 with
                     | Some x9648 ->
                         ignore
                           (Ojs.call x9646 "push"
                              [|(Ojs.string_to_js x9648)|])
                     | None -> ());
                    (match x9645 with
                     | Some x9647 ->
                         ignore
                           (Ojs.call x9646 "push"
                              [|(ErrorOptions.t_to_js x9647)|])
                     | None -> ());
                    x9646))
    let (invoke' :
      errors:any Iterable.t ->
        ?message:string -> ?options:ErrorOptions.t -> unit -> t)
      =
      fun ~errors:(x9650 : any Iterable.t) ->
        fun ?message:(x9651 : string option) ->
          fun ?options:(x9652 : ErrorOptions.t option) ->
            fun () ->
              t_of_js
                (Ojs.call (Ojs.get_prop_ascii Ojs.global "AggregateError")
                   "apply"
                   [|Ojs.null;((let x9653 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                ignore
                                  (Ojs.call x9653 "push"
                                     [|(Iterable.t_to_js any_to_js x9650)|]);
                                (match x9651 with
                                 | Some x9655 ->
                                     ignore
                                       (Ojs.call x9653 "push"
                                          [|(Ojs.string_to_js x9655)|])
                                 | None -> ());
                                (match x9652 with
                                 | Some x9654 ->
                                     ignore
                                       (Ojs.call x9653 "push"
                                          [|(ErrorOptions.t_to_js x9654)|])
                                 | None -> ());
                                x9653))|])
    let (create'' : errors:any Iterable.t -> ?message:string -> unit -> t) =
      fun ~errors:(x9657 : any Iterable.t) ->
        fun ?message:(x9658 : string option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr
                 (Ojs.get_prop_ascii Ojs.global "AggregateError")
                 (let x9659 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore
                    (Ojs.call x9659 "push"
                       [|(Iterable.t_to_js any_to_js x9657)|]);
                  (match x9658 with
                   | Some x9660 ->
                       ignore
                         (Ojs.call x9659 "push" [|(Ojs.string_to_js x9660)|])
                   | None -> ());
                  x9659))
    let (invoke'' : errors:any Iterable.t -> ?message:string -> unit -> t) =
      fun ~errors:(x9662 : any Iterable.t) ->
        fun ?message:(x9663 : string option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "AggregateError")
                 "apply"
                 [|Ojs.null;((let x9664 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x9664 "push"
                                   [|(Iterable.t_to_js any_to_js x9662)|]);
                              (match x9663 with
                               | Some x9665 ->
                                   ignore
                                     (Ojs.call x9664 "push"
                                        [|(Ojs.string_to_js x9665)|])
                               | None -> ());
                              x9664))|])
    let (prototype' : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "AggregateError") "prototype")
    let (create''' : errors:any list -> errors:any list -> unit -> t) =
      fun ~errors:(x9667 : any list) ->
        fun ~errors:(x9668 : any list) ->
          fun () ->
            let x9669 = Ojs.empty_obj () in
            Ojs.set_prop_ascii x9669 "errors"
              (Ojs.list_to_js any_to_js x9667);
            Ojs.set_prop_ascii x9669 "errors"
              (Ojs.list_to_js any_to_js x9668);
            t_of_js x9669
    let cast_from = Obj.magic
  end
module ReadonlyArray_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T ReadonlyArray.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x9674 : Ojs.t) -> ReadonlyArray.t_of_js __T_of_js x9674
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x9672 : __T ReadonlyArray.t) ->
            ReadonlyArray.t_to_js __T_to_js x9672
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x9678 : Ojs.t) -> parent_of_js T.t_of_js x9678
    and t_to_js : t -> Ojs.t =
      fun (x9676 : T.t parent) -> parent_to_js T.t_to_js x9676
    let (flatMap :
      t ->
        callback:(this:'This ->
                    value:T.t ->
                      index:float ->
                        array:T.t list -> [ `U1 of 'U  | `U2 of 'U parent ])
          -> ?thisArg:'This -> unit -> 'U list)
      =
      fun (x9692 : t) ->
        fun
          ~callback:(x9680 :
                      this:'This ->
                        value:T.t ->
                          index:float ->
                            array:T.t list ->
                              [ `U1 of 'U  | `U2 of 'U parent ])
          ->
          fun ?thisArg:(x9681 : 'This option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x9693 = t_to_js x9692 in
                 Ojs.call (Ojs.get_prop_ascii x9693 "flatMap") "apply"
                   [|x9693;((let x9682 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9682 "push"
                                  [|(Ojs.fun_to_js 4
                                       (fun (x9684 : Ojs.t) ->
                                          fun (x9685 : Ojs.t) ->
                                            fun (x9686 : Ojs.t) ->
                                              fun (x9687 : Ojs.t) ->
                                                match x9680
                                                        ~this:(Obj.magic
                                                                 x9684)
                                                        ~value:(T.t_of_js
                                                                  x9685)
                                                        ~index:(Ojs.float_of_js
                                                                  x9686)
                                                        ~array:(Ojs.list_of_js
                                                                  T.t_of_js
                                                                  x9687)
                                                with
                                                | `U1 x9689 ->
                                                    Obj.magic x9689
                                                | `U2 x9690 ->
                                                    parent_to_js Obj.magic
                                                      x9690))|]);
                             (match x9681 with
                              | Some x9683 ->
                                  ignore
                                    (Ojs.call x9682 "push"
                                       [|(Obj.magic x9683)|])
                              | None -> ());
                             x9682))|])
    let (flat :
      t -> this:'A -> ?depth:'D -> unit -> ('A, 'D) FlatArray.t list) =
      fun (x9699 : t) ->
        fun ~this:(x9695 : 'A) ->
          fun ?depth:(x9696 : 'D option) ->
            fun () ->
              Ojs.list_of_js
                (fun (x9701 : Ojs.t) ->
                   FlatArray.t_of_js Obj.magic Obj.magic x9701)
                (let x9700 = t_to_js x9699 in
                 Ojs.call (Ojs.get_prop_ascii x9700 "flat") "apply"
                   [|x9700;((let x9697 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9697 "push" [|(Obj.magic x9695)|]);
                             (match x9696 with
                              | Some x9698 ->
                                  ignore
                                    (Ojs.call x9697 "push"
                                       [|(Obj.magic x9698)|])
                              | None -> ());
                             x9697))|])
    let (at : t -> index:float -> T.t option) =
      fun (x9705 : t) ->
        fun ~index:(x9704 : float) ->
          Ojs.option_of_js T.t_of_js
            (Ojs.call (t_to_js x9705) "at" [|(Ojs.float_to_js x9704)|])
    let (includes :
      t -> searchElement:T.t -> ?fromIndex:float -> unit -> bool) =
      fun (x9711 : t) ->
        fun ~searchElement:(x9707 : T.t) ->
          fun ?fromIndex:(x9708 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x9712 = t_to_js x9711 in
                 Ojs.call (Ojs.get_prop_ascii x9712 "includes") "apply"
                   [|x9712;((let x9709 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9709 "push" [|(T.t_to_js x9707)|]);
                             (match x9708 with
                              | Some x9710 ->
                                  ignore
                                    (Ojs.call x9709 "push"
                                       [|(Ojs.float_to_js x9710)|])
                              | None -> ());
                             x9709))|])
    let (entries : t -> (float * T.t) IterableIterator.t) =
      fun (x9713 : t) ->
        IterableIterator.t_of_js
          (fun (x9714 : Ojs.t) ->
             let x9715 = x9714 in
             ((Ojs.float_of_js (Ojs.array_get x9715 0)),
               (T.t_of_js (Ojs.array_get x9715 1))))
          (Ojs.call (t_to_js x9713) "entries" [||])
    let (keys : t -> float IterableIterator.t) =
      fun (x9716 : t) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (t_to_js x9716) "keys" [||])
    let (values : t -> T.t IterableIterator.t) =
      fun (x9718 : t) ->
        IterableIterator.t_of_js T.t_of_js
          (Ojs.call (t_to_js x9718) "values" [||])
    let (find :
      t ->
        predicate:(this:unit ->
                     value:T.t -> index:float -> obj:T.t list -> bool)
          -> ?thisArg:any -> unit -> 'S option)
      =
      fun (x9729 : t) ->
        fun
          ~predicate:(x9720 :
                       this:unit ->
                         value:T.t -> index:float -> obj:T.t list -> bool)
          ->
          fun ?thisArg:(x9721 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x9730 = t_to_js x9729 in
                 Ojs.call (Ojs.get_prop_ascii x9730 "find") "apply"
                   [|x9730;((let x9722 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9722 "push"
                                  [|(Ojs.fun_to_js 4
                                       (fun (x9724 : Ojs.t) ->
                                          fun (x9725 : Ojs.t) ->
                                            fun (x9726 : Ojs.t) ->
                                              fun (x9727 : Ojs.t) ->
                                                Ojs.bool_to_js
                                                  (x9720
                                                     ~this:(Ojs.unit_of_js
                                                              x9724)
                                                     ~value:(T.t_of_js x9725)
                                                     ~index:(Ojs.float_of_js
                                                               x9726)
                                                     ~obj:(Ojs.list_of_js
                                                             T.t_of_js x9727))))|]);
                             (match x9721 with
                              | Some x9723 ->
                                  ignore
                                    (Ojs.call x9722 "push"
                                       [|(any_to_js x9723)|])
                              | None -> ());
                             x9722))|])
    let (find' :
      t ->
        predicate:(value:T.t -> index:float -> obj:T.t list -> unknown) ->
          ?thisArg:any -> unit -> T.t option)
      =
      fun (x9740 : t) ->
        fun
          ~predicate:(x9732 :
                       value:T.t -> index:float -> obj:T.t list -> unknown)
          ->
          fun ?thisArg:(x9733 : any option) ->
            fun () ->
              Ojs.option_of_js T.t_of_js
                (let x9741 = t_to_js x9740 in
                 Ojs.call (Ojs.get_prop_ascii x9741 "find") "apply"
                   [|x9741;((let x9734 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9734 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9736 : Ojs.t) ->
                                          fun (x9737 : Ojs.t) ->
                                            fun (x9738 : Ojs.t) ->
                                              unknown_to_js
                                                (x9732
                                                   ~value:(T.t_of_js x9736)
                                                   ~index:(Ojs.float_of_js
                                                             x9737)
                                                   ~obj:(Ojs.list_of_js
                                                           T.t_of_js x9738))))|]);
                             (match x9733 with
                              | Some x9735 ->
                                  ignore
                                    (Ojs.call x9734 "push"
                                       [|(any_to_js x9735)|])
                              | None -> ());
                             x9734))|])
    let (findIndex :
      t ->
        predicate:(value:T.t -> index:float -> obj:T.t list -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x9751 : t) ->
        fun
          ~predicate:(x9743 :
                       value:T.t -> index:float -> obj:T.t list -> unknown)
          ->
          fun ?thisArg:(x9744 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x9752 = t_to_js x9751 in
                 Ojs.call (Ojs.get_prop_ascii x9752 "findIndex") "apply"
                   [|x9752;((let x9745 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9745 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9747 : Ojs.t) ->
                                          fun (x9748 : Ojs.t) ->
                                            fun (x9749 : Ojs.t) ->
                                              unknown_to_js
                                                (x9743
                                                   ~value:(T.t_of_js x9747)
                                                   ~index:(Ojs.float_of_js
                                                             x9748)
                                                   ~obj:(Ojs.list_of_js
                                                           T.t_of_js x9749))))|]);
                             (match x9744 with
                              | Some x9746 ->
                                  ignore
                                    (Ojs.call x9745 "push"
                                       [|(any_to_js x9746)|])
                              | None -> ());
                             x9745))|])
    let (get_length : t -> float) =
      fun (x9753 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x9753) "length")
    let (toString : t -> string) =
      fun (x9754 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x9754) "toString" [||])
    let (toLocaleString : t -> string) =
      fun (x9755 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x9755) "toLocaleString" [||])
    let (concat : t -> items:T.t ConcatArray.t list -> T.t list) =
      fun (x9760 : t) ->
        fun ~items:(x9756 : T.t ConcatArray.t list) ->
          Ojs.list_of_js T.t_of_js
            (let x9761 = t_to_js x9760 in
             Ojs.call (Ojs.get_prop_ascii x9761 "concat") "apply"
               [|x9761;((let x9757 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x9758 : T.t ConcatArray.t) ->
                              ignore
                                (Ojs.call x9757 "push"
                                   [|(ConcatArray.t_to_js T.t_to_js x9758)|]))
                           x9756;
                         x9757))|])
    let (concat' :
      t -> items:[ `U1 of T.t  | `U2 of T.t ConcatArray.t ] list -> T.t list)
      =
      fun (x9769 : t) ->
        fun ~items:(x9763 : [ `U1 of T.t  | `U2 of T.t ConcatArray.t ] list)
          ->
          Ojs.list_of_js T.t_of_js
            (let x9770 = t_to_js x9769 in
             Ojs.call (Ojs.get_prop_ascii x9770 "concat") "apply"
               [|x9770;((let x9764 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun
                              (x9765 :
                                [ `U1 of T.t  | `U2 of T.t ConcatArray.t ])
                              ->
                              ignore
                                (Ojs.call x9764 "push"
                                   [|((match x9765 with
                                       | `U1 x9766 -> T.t_to_js x9766
                                       | `U2 x9767 ->
                                           ConcatArray.t_to_js T.t_to_js
                                             x9767))|])) x9763;
                         x9764))|])
    let (join : t -> ?separator:string -> unit -> string) =
      fun (x9775 : t) ->
        fun ?separator:(x9772 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x9776 = t_to_js x9775 in
               Ojs.call (Ojs.get_prop_ascii x9776 "join") "apply"
                 [|x9776;((let x9773 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9772 with
                            | Some x9774 ->
                                ignore
                                  (Ojs.call x9773 "push"
                                     [|(Ojs.string_to_js x9774)|])
                            | None -> ());
                           x9773))|])
    let (slice : t -> ?start:float -> ?end_:float -> unit -> T.t list) =
      fun (x9782 : t) ->
        fun ?start:(x9777 : float option) ->
          fun ?end_:(x9778 : float option) ->
            fun () ->
              Ojs.list_of_js T.t_of_js
                (let x9783 = t_to_js x9782 in
                 Ojs.call (Ojs.get_prop_ascii x9783 "slice") "apply"
                   [|x9783;((let x9779 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x9777 with
                              | Some x9781 ->
                                  ignore
                                    (Ojs.call x9779 "push"
                                       [|(Ojs.float_to_js x9781)|])
                              | None -> ());
                             (match x9778 with
                              | Some x9780 ->
                                  ignore
                                    (Ojs.call x9779 "push"
                                       [|(Ojs.float_to_js x9780)|])
                              | None -> ());
                             x9779))|])
    let (indexOf :
      t -> searchElement:T.t -> ?fromIndex:float -> unit -> float) =
      fun (x9789 : t) ->
        fun ~searchElement:(x9785 : T.t) ->
          fun ?fromIndex:(x9786 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x9790 = t_to_js x9789 in
                 Ojs.call (Ojs.get_prop_ascii x9790 "indexOf") "apply"
                   [|x9790;((let x9787 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9787 "push" [|(T.t_to_js x9785)|]);
                             (match x9786 with
                              | Some x9788 ->
                                  ignore
                                    (Ojs.call x9787 "push"
                                       [|(Ojs.float_to_js x9788)|])
                              | None -> ());
                             x9787))|])
    let (lastIndexOf :
      t -> searchElement:T.t -> ?fromIndex:float -> unit -> float) =
      fun (x9795 : t) ->
        fun ~searchElement:(x9791 : T.t) ->
          fun ?fromIndex:(x9792 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x9796 = t_to_js x9795 in
                 Ojs.call (Ojs.get_prop_ascii x9796 "lastIndexOf") "apply"
                   [|x9796;((let x9793 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9793 "push" [|(T.t_to_js x9791)|]);
                             (match x9792 with
                              | Some x9794 ->
                                  ignore
                                    (Ojs.call x9793 "push"
                                       [|(Ojs.float_to_js x9794)|])
                              | None -> ());
                             x9793))|])
    let (every :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x9805 : t) ->
        fun
          ~predicate:(x9797 :
                       value:T.t -> index:float -> array:T.t list -> bool)
          ->
          fun ?thisArg:(x9798 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x9806 = t_to_js x9805 in
                 Ojs.call (Ojs.get_prop_ascii x9806 "every") "apply"
                   [|x9806;((let x9799 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9799 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9801 : Ojs.t) ->
                                          fun (x9802 : Ojs.t) ->
                                            fun (x9803 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x9797
                                                   ~value:(T.t_of_js x9801)
                                                   ~index:(Ojs.float_of_js
                                                             x9802)
                                                   ~array:(Ojs.list_of_js
                                                             T.t_of_js x9803))))|]);
                             (match x9798 with
                              | Some x9800 ->
                                  ignore
                                    (Ojs.call x9799 "push"
                                       [|(any_to_js x9800)|])
                              | None -> ());
                             x9799))|])
    let (every' :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x9815 : t) ->
        fun
          ~predicate:(x9807 :
                       value:T.t -> index:float -> array:T.t list -> unknown)
          ->
          fun ?thisArg:(x9808 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x9816 = t_to_js x9815 in
                 Ojs.call (Ojs.get_prop_ascii x9816 "every") "apply"
                   [|x9816;((let x9809 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9809 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9811 : Ojs.t) ->
                                          fun (x9812 : Ojs.t) ->
                                            fun (x9813 : Ojs.t) ->
                                              unknown_to_js
                                                (x9807
                                                   ~value:(T.t_of_js x9811)
                                                   ~index:(Ojs.float_of_js
                                                             x9812)
                                                   ~array:(Ojs.list_of_js
                                                             T.t_of_js x9813))))|]);
                             (match x9808 with
                              | Some x9810 ->
                                  ignore
                                    (Ojs.call x9809 "push"
                                       [|(any_to_js x9810)|])
                              | None -> ());
                             x9809))|])
    let (some :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x9825 : t) ->
        fun
          ~predicate:(x9817 :
                       value:T.t -> index:float -> array:T.t list -> unknown)
          ->
          fun ?thisArg:(x9818 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x9826 = t_to_js x9825 in
                 Ojs.call (Ojs.get_prop_ascii x9826 "some") "apply"
                   [|x9826;((let x9819 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9819 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9821 : Ojs.t) ->
                                          fun (x9822 : Ojs.t) ->
                                            fun (x9823 : Ojs.t) ->
                                              unknown_to_js
                                                (x9817
                                                   ~value:(T.t_of_js x9821)
                                                   ~index:(Ojs.float_of_js
                                                             x9822)
                                                   ~array:(Ojs.list_of_js
                                                             T.t_of_js x9823))))|]);
                             (match x9818 with
                              | Some x9820 ->
                                  ignore
                                    (Ojs.call x9819 "push"
                                       [|(any_to_js x9820)|])
                              | None -> ());
                             x9819))|])
    let (forEach :
      t ->
        callbackfn:(value:T.t -> index:float -> array:T.t list -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x9835 : t) ->
        fun
          ~callbackfn:(x9827 :
                        value:T.t -> index:float -> array:T.t list -> unit)
          ->
          fun ?thisArg:(x9828 : any option) ->
            fun () ->
              ignore
                (let x9836 = t_to_js x9835 in
                 Ojs.call (Ojs.get_prop_ascii x9836 "forEach") "apply"
                   [|x9836;((let x9829 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9829 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9831 : Ojs.t) ->
                                          fun (x9832 : Ojs.t) ->
                                            fun (x9833 : Ojs.t) ->
                                              x9827 ~value:(T.t_of_js x9831)
                                                ~index:(Ojs.float_of_js x9832)
                                                ~array:(Ojs.list_of_js
                                                          T.t_of_js x9833)))|]);
                             (match x9828 with
                              | Some x9830 ->
                                  ignore
                                    (Ojs.call x9829 "push"
                                       [|(any_to_js x9830)|])
                              | None -> ());
                             x9829))|])
    let (map :
      t ->
        callbackfn:(value:T.t -> index:float -> array:T.t list -> 'U) ->
          ?thisArg:any -> unit -> 'U list)
      =
      fun (x9845 : t) ->
        fun
          ~callbackfn:(x9837 :
                        value:T.t -> index:float -> array:T.t list -> 'U)
          ->
          fun ?thisArg:(x9838 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x9846 = t_to_js x9845 in
                 Ojs.call (Ojs.get_prop_ascii x9846 "map") "apply"
                   [|x9846;((let x9839 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9839 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9841 : Ojs.t) ->
                                          fun (x9842 : Ojs.t) ->
                                            fun (x9843 : Ojs.t) ->
                                              Obj.magic
                                                (x9837
                                                   ~value:(T.t_of_js x9841)
                                                   ~index:(Ojs.float_of_js
                                                             x9842)
                                                   ~array:(Ojs.list_of_js
                                                             T.t_of_js x9843))))|]);
                             (match x9838 with
                              | Some x9840 ->
                                  ignore
                                    (Ojs.call x9839 "push"
                                       [|(any_to_js x9840)|])
                              | None -> ());
                             x9839))|])
    let (filter :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> bool) ->
          ?thisArg:any -> unit -> 'S list)
      =
      fun (x9856 : t) ->
        fun
          ~predicate:(x9848 :
                       value:T.t -> index:float -> array:T.t list -> bool)
          ->
          fun ?thisArg:(x9849 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x9857 = t_to_js x9856 in
                 Ojs.call (Ojs.get_prop_ascii x9857 "filter") "apply"
                   [|x9857;((let x9850 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9850 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9852 : Ojs.t) ->
                                          fun (x9853 : Ojs.t) ->
                                            fun (x9854 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x9848
                                                   ~value:(T.t_of_js x9852)
                                                   ~index:(Ojs.float_of_js
                                                             x9853)
                                                   ~array:(Ojs.list_of_js
                                                             T.t_of_js x9854))))|]);
                             (match x9849 with
                              | Some x9851 ->
                                  ignore
                                    (Ojs.call x9850 "push"
                                       [|(any_to_js x9851)|])
                              | None -> ());
                             x9850))|])
    let (filter' :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> unknown) ->
          ?thisArg:any -> unit -> T.t list)
      =
      fun (x9867 : t) ->
        fun
          ~predicate:(x9859 :
                       value:T.t -> index:float -> array:T.t list -> unknown)
          ->
          fun ?thisArg:(x9860 : any option) ->
            fun () ->
              Ojs.list_of_js T.t_of_js
                (let x9868 = t_to_js x9867 in
                 Ojs.call (Ojs.get_prop_ascii x9868 "filter") "apply"
                   [|x9868;((let x9861 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9861 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9863 : Ojs.t) ->
                                          fun (x9864 : Ojs.t) ->
                                            fun (x9865 : Ojs.t) ->
                                              unknown_to_js
                                                (x9859
                                                   ~value:(T.t_of_js x9863)
                                                   ~index:(Ojs.float_of_js
                                                             x9864)
                                                   ~array:(Ojs.list_of_js
                                                             T.t_of_js x9865))))|]);
                             (match x9860 with
                              | Some x9862 ->
                                  ignore
                                    (Ojs.call x9861 "push"
                                       [|(any_to_js x9862)|])
                              | None -> ());
                             x9861))|])
    let (reduce :
      t ->
        callbackfn:(previousValue:T.t ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> T.t)
          -> T.t)
      =
      fun (x9876 : t) ->
        fun
          ~callbackfn:(x9870 :
                        previousValue:T.t ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> T.t)
          ->
          T.t_of_js
            (Ojs.call (t_to_js x9876) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x9871 : Ojs.t) ->
                       fun (x9872 : Ojs.t) ->
                         fun (x9873 : Ojs.t) ->
                           fun (x9874 : Ojs.t) ->
                             T.t_to_js
                               (x9870 ~previousValue:(T.t_of_js x9871)
                                  ~currentValue:(T.t_of_js x9872)
                                  ~currentIndex:(Ojs.float_of_js x9873)
                                  ~array:(Ojs.list_of_js T.t_of_js x9874))))|])
    let (reduce' :
      t ->
        callbackfn:(previousValue:T.t ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> T.t)
          -> initialValue:T.t -> T.t)
      =
      fun (x9884 : t) ->
        fun
          ~callbackfn:(x9877 :
                        previousValue:T.t ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> T.t)
          ->
          fun ~initialValue:(x9883 : T.t) ->
            T.t_of_js
              (Ojs.call (t_to_js x9884) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x9878 : Ojs.t) ->
                         fun (x9879 : Ojs.t) ->
                           fun (x9880 : Ojs.t) ->
                             fun (x9881 : Ojs.t) ->
                               T.t_to_js
                                 (x9877 ~previousValue:(T.t_of_js x9878)
                                    ~currentValue:(T.t_of_js x9879)
                                    ~currentIndex:(Ojs.float_of_js x9880)
                                    ~array:(Ojs.list_of_js T.t_of_js x9881))));(
                   T.t_to_js x9883)|])
    let (reduce'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x9892 : t) ->
        fun
          ~callbackfn:(x9885 :
                        previousValue:'U ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> 'U)
          ->
          fun ~initialValue:(x9891 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x9892) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x9886 : Ojs.t) ->
                         fun (x9887 : Ojs.t) ->
                           fun (x9888 : Ojs.t) ->
                             fun (x9889 : Ojs.t) ->
                               Obj.magic
                                 (x9885 ~previousValue:(Obj.magic x9886)
                                    ~currentValue:(T.t_of_js x9887)
                                    ~currentIndex:(Ojs.float_of_js x9888)
                                    ~array:(Ojs.list_of_js T.t_of_js x9889))));(
                   Obj.magic x9891)|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:T.t ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> T.t)
          -> T.t)
      =
      fun (x9899 : t) ->
        fun
          ~callbackfn:(x9893 :
                        previousValue:T.t ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> T.t)
          ->
          T.t_of_js
            (Ojs.call (t_to_js x9899) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x9894 : Ojs.t) ->
                       fun (x9895 : Ojs.t) ->
                         fun (x9896 : Ojs.t) ->
                           fun (x9897 : Ojs.t) ->
                             T.t_to_js
                               (x9893 ~previousValue:(T.t_of_js x9894)
                                  ~currentValue:(T.t_of_js x9895)
                                  ~currentIndex:(Ojs.float_of_js x9896)
                                  ~array:(Ojs.list_of_js T.t_of_js x9897))))|])
    let (reduceRight' :
      t ->
        callbackfn:(previousValue:T.t ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> T.t)
          -> initialValue:T.t -> T.t)
      =
      fun (x9907 : t) ->
        fun
          ~callbackfn:(x9900 :
                        previousValue:T.t ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> T.t)
          ->
          fun ~initialValue:(x9906 : T.t) ->
            T.t_of_js
              (Ojs.call (t_to_js x9907) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x9901 : Ojs.t) ->
                         fun (x9902 : Ojs.t) ->
                           fun (x9903 : Ojs.t) ->
                             fun (x9904 : Ojs.t) ->
                               T.t_to_js
                                 (x9900 ~previousValue:(T.t_of_js x9901)
                                    ~currentValue:(T.t_of_js x9902)
                                    ~currentIndex:(Ojs.float_of_js x9903)
                                    ~array:(Ojs.list_of_js T.t_of_js x9904))));(
                   T.t_to_js x9906)|])
    let (reduceRight'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x9915 : t) ->
        fun
          ~callbackfn:(x9908 :
                        previousValue:'U ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> 'U)
          ->
          fun ~initialValue:(x9914 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x9915) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x9909 : Ojs.t) ->
                         fun (x9910 : Ojs.t) ->
                           fun (x9911 : Ojs.t) ->
                             fun (x9912 : Ojs.t) ->
                               Obj.magic
                                 (x9908 ~previousValue:(Obj.magic x9909)
                                    ~currentValue:(T.t_of_js x9910)
                                    ~currentIndex:(Ojs.float_of_js x9911)
                                    ~array:(Ojs.list_of_js T.t_of_js x9912))));(
                   Obj.magic x9914)|])
    let (get : t -> float -> T.t) =
      fun (x9916 : t) ->
        fun (x9917 : float) ->
          T.t_of_js (Ojs.get_prop (t_to_js x9916) (Ojs.float_to_js x9917))
  end
module ConcatArray_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T ConcatArray.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x9920 : Ojs.t) -> ConcatArray.t_of_js __T_of_js x9920
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x9918 : __T ConcatArray.t) ->
            ConcatArray.t_to_js __T_to_js x9918
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x9924 : Ojs.t) -> parent_of_js T.t_of_js x9924
    and t_to_js : t -> Ojs.t =
      fun (x9922 : T.t parent) -> parent_to_js T.t_to_js x9922
    let (get_length : t -> float) =
      fun (x9926 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x9926) "length")
    let (get : t -> float -> T.t) =
      fun (x9927 : t) ->
        fun (x9928 : float) ->
          T.t_of_js (Ojs.get_prop (t_to_js x9927) (Ojs.float_to_js x9928))
    let (join : t -> ?separator:string -> unit -> string) =
      fun (x9932 : t) ->
        fun ?separator:(x9929 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x9933 = t_to_js x9932 in
               Ojs.call (Ojs.get_prop_ascii x9933 "join") "apply"
                 [|x9933;((let x9930 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9929 with
                            | Some x9931 ->
                                ignore
                                  (Ojs.call x9930 "push"
                                     [|(Ojs.string_to_js x9931)|])
                            | None -> ());
                           x9930))|])
    let (slice : t -> ?start:float -> ?end_:float -> unit -> T.t list) =
      fun (x9939 : t) ->
        fun ?start:(x9934 : float option) ->
          fun ?end_:(x9935 : float option) ->
            fun () ->
              Ojs.list_of_js T.t_of_js
                (let x9940 = t_to_js x9939 in
                 Ojs.call (Ojs.get_prop_ascii x9940 "slice") "apply"
                   [|x9940;((let x9936 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x9934 with
                              | Some x9938 ->
                                  ignore
                                    (Ojs.call x9936 "push"
                                       [|(Ojs.float_to_js x9938)|])
                              | None -> ());
                             (match x9935 with
                              | Some x9937 ->
                                  ignore
                                    (Ojs.call x9936 "push"
                                       [|(Ojs.float_to_js x9937)|])
                              | None -> ());
                             x9936))|])
  end
module Array_Make(T:Ojs.T) =
  struct
    module AnonymousInterface0 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x9943 : Ojs.t) -> x9943
        and t_to_js : t -> Ojs.t = fun (x9942 : Ojs.t) -> x9942
        let (get_copyWithin : t -> bool) =
          fun (x9944 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x9944) "copyWithin")
        let (set_copyWithin : t -> bool -> unit) =
          fun (x9945 : t) ->
            fun (x9946 : bool) ->
              Ojs.set_prop_ascii (t_to_js x9945) "copyWithin"
                (Ojs.bool_to_js x9946)
        let (get_entries : t -> bool) =
          fun (x9947 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x9947) "entries")
        let (set_entries : t -> bool -> unit) =
          fun (x9948 : t) ->
            fun (x9949 : bool) ->
              Ojs.set_prop_ascii (t_to_js x9948) "entries"
                (Ojs.bool_to_js x9949)
        let (get_fill : t -> bool) =
          fun (x9950 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x9950) "fill")
        let (set_fill : t -> bool -> unit) =
          fun (x9951 : t) ->
            fun (x9952 : bool) ->
              Ojs.set_prop_ascii (t_to_js x9951) "fill"
                (Ojs.bool_to_js x9952)
        let (get_find : t -> bool) =
          fun (x9953 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x9953) "find")
        let (set_find : t -> bool -> unit) =
          fun (x9954 : t) ->
            fun (x9955 : bool) ->
              Ojs.set_prop_ascii (t_to_js x9954) "find"
                (Ojs.bool_to_js x9955)
        let (get_findIndex : t -> bool) =
          fun (x9956 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x9956) "findIndex")
        let (set_findIndex : t -> bool -> unit) =
          fun (x9957 : t) ->
            fun (x9958 : bool) ->
              Ojs.set_prop_ascii (t_to_js x9957) "findIndex"
                (Ojs.bool_to_js x9958)
        let (get_keys : t -> bool) =
          fun (x9959 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x9959) "keys")
        let (set_keys : t -> bool -> unit) =
          fun (x9960 : t) ->
            fun (x9961 : bool) ->
              Ojs.set_prop_ascii (t_to_js x9960) "keys"
                (Ojs.bool_to_js x9961)
        let (get_values : t -> bool) =
          fun (x9962 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x9962) "values")
        let (set_values : t -> bool -> unit) =
          fun (x9963 : t) ->
            fun (x9964 : bool) ->
              Ojs.set_prop_ascii (t_to_js x9963) "values"
                (Ojs.bool_to_js x9964)
        let (create :
          copyWithin:bool ->
            entries:bool ->
              fill:bool ->
                find:bool ->
                  findIndex:bool -> keys:bool -> values:bool -> unit -> t)
          =
          fun ~copyWithin:(x9965 : bool) ->
            fun ~entries:(x9966 : bool) ->
              fun ~fill:(x9967 : bool) ->
                fun ~find:(x9968 : bool) ->
                  fun ~findIndex:(x9969 : bool) ->
                    fun ~keys:(x9970 : bool) ->
                      fun ~values:(x9971 : bool) ->
                        fun () ->
                          let x9972 = Ojs.empty_obj () in
                          Ojs.set_prop_ascii x9972 "copyWithin"
                            (Ojs.bool_to_js x9965);
                          Ojs.set_prop_ascii x9972 "entries"
                            (Ojs.bool_to_js x9966);
                          Ojs.set_prop_ascii x9972 "fill"
                            (Ojs.bool_to_js x9967);
                          Ojs.set_prop_ascii x9972 "find"
                            (Ojs.bool_to_js x9968);
                          Ojs.set_prop_ascii x9972 "findIndex"
                            (Ojs.bool_to_js x9969);
                          Ojs.set_prop_ascii x9972 "keys"
                            (Ojs.bool_to_js x9970);
                          Ojs.set_prop_ascii x9972 "values"
                            (Ojs.bool_to_js x9971);
                          t_of_js x9972
      end
    type 'T parent = 'T Array.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x9975 : Ojs.t) -> Array.t_of_js __T_of_js x9975
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x9973 : __T Array.t) -> Array.t_to_js __T_to_js x9973
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x9979 : Ojs.t) -> parent_of_js T.t_of_js x9979
    and t_to_js : t -> Ojs.t =
      fun (x9977 : T.t parent) -> parent_to_js T.t_to_js x9977
    let (flatMap :
      t ->
        callback:(this:'This ->
                    value:T.t ->
                      index:float ->
                        array:T.t list ->
                          [ `U1 of 'U  | `U2 of 'U ReadonlyArray.t ])
          -> ?thisArg:'This -> unit -> 'U list)
      =
      fun (x9993 : t) ->
        fun
          ~callback:(x9981 :
                      this:'This ->
                        value:T.t ->
                          index:float ->
                            array:T.t list ->
                              [ `U1 of 'U  | `U2 of 'U ReadonlyArray.t ])
          ->
          fun ?thisArg:(x9982 : 'This option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x9994 = t_to_js x9993 in
                 Ojs.call (Ojs.get_prop_ascii x9994 "flatMap") "apply"
                   [|x9994;((let x9983 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9983 "push"
                                  [|(Ojs.fun_to_js 4
                                       (fun (x9985 : Ojs.t) ->
                                          fun (x9986 : Ojs.t) ->
                                            fun (x9987 : Ojs.t) ->
                                              fun (x9988 : Ojs.t) ->
                                                match x9981
                                                        ~this:(Obj.magic
                                                                 x9985)
                                                        ~value:(T.t_of_js
                                                                  x9986)
                                                        ~index:(Ojs.float_of_js
                                                                  x9987)
                                                        ~array:(Ojs.list_of_js
                                                                  T.t_of_js
                                                                  x9988)
                                                with
                                                | `U1 x9990 ->
                                                    Obj.magic x9990
                                                | `U2 x9991 ->
                                                    ReadonlyArray.t_to_js
                                                      Obj.magic x9991))|]);
                             (match x9982 with
                              | Some x9984 ->
                                  ignore
                                    (Ojs.call x9983 "push"
                                       [|(Obj.magic x9984)|])
                              | None -> ());
                             x9983))|])
    let (flat :
      t -> this:'A -> ?depth:'D -> unit -> ('A, 'D) FlatArray.t list) =
      fun (x10000 : t) ->
        fun ~this:(x9996 : 'A) ->
          fun ?depth:(x9997 : 'D option) ->
            fun () ->
              Ojs.list_of_js
                (fun (x10002 : Ojs.t) ->
                   FlatArray.t_of_js Obj.magic Obj.magic x10002)
                (let x10001 = t_to_js x10000 in
                 Ojs.call (Ojs.get_prop_ascii x10001 "flat") "apply"
                   [|x10001;((let x9998 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x9998 "push" [|(Obj.magic x9996)|]);
                              (match x9997 with
                               | Some x9999 ->
                                   ignore
                                     (Ojs.call x9998 "push"
                                        [|(Obj.magic x9999)|])
                               | None -> ());
                              x9998))|])
    let (at : t -> index:float -> T.t option) =
      fun (x10006 : t) ->
        fun ~index:(x10005 : float) ->
          Ojs.option_of_js T.t_of_js
            (Ojs.call (t_to_js x10006) "at" [|(Ojs.float_to_js x10005)|])
    let (includes :
      t -> searchElement:T.t -> ?fromIndex:float -> unit -> bool) =
      fun (x10012 : t) ->
        fun ~searchElement:(x10008 : T.t) ->
          fun ?fromIndex:(x10009 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x10013 = t_to_js x10012 in
                 Ojs.call (Ojs.get_prop_ascii x10013 "includes") "apply"
                   [|x10013;((let x10010 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10010 "push"
                                   [|(T.t_to_js x10008)|]);
                              (match x10009 with
                               | Some x10011 ->
                                   ignore
                                     (Ojs.call x10010 "push"
                                        [|(Ojs.float_to_js x10011)|])
                               | None -> ());
                              x10010))|])
    let (entries : t -> (float * T.t) IterableIterator.t) =
      fun (x10014 : t) ->
        IterableIterator.t_of_js
          (fun (x10015 : Ojs.t) ->
             let x10016 = x10015 in
             ((Ojs.float_of_js (Ojs.array_get x10016 0)),
               (T.t_of_js (Ojs.array_get x10016 1))))
          (Ojs.call (t_to_js x10014) "entries" [||])
    let (keys : t -> float IterableIterator.t) =
      fun (x10017 : t) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (t_to_js x10017) "keys" [||])
    let (values : t -> T.t IterableIterator.t) =
      fun (x10019 : t) ->
        IterableIterator.t_of_js T.t_of_js
          (Ojs.call (t_to_js x10019) "values" [||])
    let (find :
      t ->
        predicate:(this:unit ->
                     value:T.t -> index:float -> obj:T.t list -> bool)
          -> ?thisArg:any -> unit -> 'S option)
      =
      fun (x10030 : t) ->
        fun
          ~predicate:(x10021 :
                       this:unit ->
                         value:T.t -> index:float -> obj:T.t list -> bool)
          ->
          fun ?thisArg:(x10022 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x10031 = t_to_js x10030 in
                 Ojs.call (Ojs.get_prop_ascii x10031 "find") "apply"
                   [|x10031;((let x10023 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10023 "push"
                                   [|(Ojs.fun_to_js 4
                                        (fun (x10025 : Ojs.t) ->
                                           fun (x10026 : Ojs.t) ->
                                             fun (x10027 : Ojs.t) ->
                                               fun (x10028 : Ojs.t) ->
                                                 Ojs.bool_to_js
                                                   (x10021
                                                      ~this:(Ojs.unit_of_js
                                                               x10025)
                                                      ~value:(T.t_of_js
                                                                x10026)
                                                      ~index:(Ojs.float_of_js
                                                                x10027)
                                                      ~obj:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10028))))|]);
                              (match x10022 with
                               | Some x10024 ->
                                   ignore
                                     (Ojs.call x10023 "push"
                                        [|(any_to_js x10024)|])
                               | None -> ());
                              x10023))|])
    let (find' :
      t ->
        predicate:(value:T.t -> index:float -> obj:T.t list -> unknown) ->
          ?thisArg:any -> unit -> T.t option)
      =
      fun (x10041 : t) ->
        fun
          ~predicate:(x10033 :
                       value:T.t -> index:float -> obj:T.t list -> unknown)
          ->
          fun ?thisArg:(x10034 : any option) ->
            fun () ->
              Ojs.option_of_js T.t_of_js
                (let x10042 = t_to_js x10041 in
                 Ojs.call (Ojs.get_prop_ascii x10042 "find") "apply"
                   [|x10042;((let x10035 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10035 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10037 : Ojs.t) ->
                                           fun (x10038 : Ojs.t) ->
                                             fun (x10039 : Ojs.t) ->
                                               unknown_to_js
                                                 (x10033
                                                    ~value:(T.t_of_js x10037)
                                                    ~index:(Ojs.float_of_js
                                                              x10038)
                                                    ~obj:(Ojs.list_of_js
                                                            T.t_of_js x10039))))|]);
                              (match x10034 with
                               | Some x10036 ->
                                   ignore
                                     (Ojs.call x10035 "push"
                                        [|(any_to_js x10036)|])
                               | None -> ());
                              x10035))|])
    let (findIndex :
      t ->
        predicate:(value:T.t -> index:float -> obj:T.t list -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x10052 : t) ->
        fun
          ~predicate:(x10044 :
                       value:T.t -> index:float -> obj:T.t list -> unknown)
          ->
          fun ?thisArg:(x10045 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x10053 = t_to_js x10052 in
                 Ojs.call (Ojs.get_prop_ascii x10053 "findIndex") "apply"
                   [|x10053;((let x10046 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10046 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10048 : Ojs.t) ->
                                           fun (x10049 : Ojs.t) ->
                                             fun (x10050 : Ojs.t) ->
                                               unknown_to_js
                                                 (x10044
                                                    ~value:(T.t_of_js x10048)
                                                    ~index:(Ojs.float_of_js
                                                              x10049)
                                                    ~obj:(Ojs.list_of_js
                                                            T.t_of_js x10050))))|]);
                              (match x10045 with
                               | Some x10047 ->
                                   ignore
                                     (Ojs.call x10046 "push"
                                        [|(any_to_js x10047)|])
                               | None -> ());
                              x10046))|])
    let (fill : t -> value:T.t -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x10060 : t) ->
        fun ~value:(x10054 : T.t) ->
          fun ?start:(x10055 : float option) ->
            fun ?end_:(x10056 : float option) ->
              fun () ->
                t_of_js
                  (let x10061 = t_to_js x10060 in
                   Ojs.call (Ojs.get_prop_ascii x10061 "fill") "apply"
                     [|x10061;((let x10057 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                ignore
                                  (Ojs.call x10057 "push"
                                     [|(T.t_to_js x10054)|]);
                                (match x10055 with
                                 | Some x10059 ->
                                     ignore
                                       (Ojs.call x10057 "push"
                                          [|(Ojs.float_to_js x10059)|])
                                 | None -> ());
                                (match x10056 with
                                 | Some x10058 ->
                                     ignore
                                       (Ojs.call x10057 "push"
                                          [|(Ojs.float_to_js x10058)|])
                                 | None -> ());
                                x10057))|])
    let (copyWithin :
      t -> target:float -> start:float -> ?end_:float -> unit -> t) =
      fun (x10067 : t) ->
        fun ~target:(x10062 : float) ->
          fun ~start:(x10063 : float) ->
            fun ?end_:(x10064 : float option) ->
              fun () ->
                t_of_js
                  (let x10068 = t_to_js x10067 in
                   Ojs.call (Ojs.get_prop_ascii x10068 "copyWithin") "apply"
                     [|x10068;((let x10065 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                ignore
                                  (Ojs.call x10065 "push"
                                     [|(Ojs.float_to_js x10062)|]);
                                ignore
                                  (Ojs.call x10065 "push"
                                     [|(Ojs.float_to_js x10063)|]);
                                (match x10064 with
                                 | Some x10066 ->
                                     ignore
                                       (Ojs.call x10065 "push"
                                          [|(Ojs.float_to_js x10066)|])
                                 | None -> ());
                                x10065))|])
    let (get_length : t -> float) =
      fun (x10069 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x10069) "length")
    let (set_length : t -> float -> unit) =
      fun (x10070 : t) ->
        fun (x10071 : float) ->
          Ojs.set_prop_ascii (t_to_js x10070) "length"
            (Ojs.float_to_js x10071)
    let (toString : t -> string) =
      fun (x10072 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x10072) "toString" [||])
    let (toLocaleString : t -> string) =
      fun (x10073 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x10073) "toLocaleString" [||])
    let (pop : t -> T.t option) =
      fun (x10074 : t) ->
        Ojs.option_of_js T.t_of_js (Ojs.call (t_to_js x10074) "pop" [||])
    let (push : t -> items:T.t list -> float) =
      fun (x10079 : t) ->
        fun ~items:(x10076 : T.t list) ->
          Ojs.float_of_js
            (let x10080 = t_to_js x10079 in
             Ojs.call (Ojs.get_prop_ascii x10080 "push") "apply"
               [|x10080;((let x10077 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x10078 : T.t) ->
                               ignore
                                 (Ojs.call x10077 "push"
                                    [|(T.t_to_js x10078)|])) x10076;
                          x10077))|])
    let (concat : t -> items:T.t ConcatArray.t list -> T.t list) =
      fun (x10085 : t) ->
        fun ~items:(x10081 : T.t ConcatArray.t list) ->
          Ojs.list_of_js T.t_of_js
            (let x10086 = t_to_js x10085 in
             Ojs.call (Ojs.get_prop_ascii x10086 "concat") "apply"
               [|x10086;((let x10082 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x10083 : T.t ConcatArray.t) ->
                               ignore
                                 (Ojs.call x10082 "push"
                                    [|(ConcatArray.t_to_js T.t_to_js x10083)|]))
                            x10081;
                          x10082))|])
    let (concat' :
      t -> items:[ `U1 of T.t  | `U2 of T.t ConcatArray.t ] list -> T.t list)
      =
      fun (x10094 : t) ->
        fun ~items:(x10088 : [ `U1 of T.t  | `U2 of T.t ConcatArray.t ] list)
          ->
          Ojs.list_of_js T.t_of_js
            (let x10095 = t_to_js x10094 in
             Ojs.call (Ojs.get_prop_ascii x10095 "concat") "apply"
               [|x10095;((let x10089 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun
                               (x10090 :
                                 [ `U1 of T.t  | `U2 of T.t ConcatArray.t ])
                               ->
                               ignore
                                 (Ojs.call x10089 "push"
                                    [|((match x10090 with
                                        | `U1 x10091 -> T.t_to_js x10091
                                        | `U2 x10092 ->
                                            ConcatArray.t_to_js T.t_to_js
                                              x10092))|])) x10088;
                          x10089))|])
    let (join : t -> ?separator:string -> unit -> string) =
      fun (x10100 : t) ->
        fun ?separator:(x10097 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x10101 = t_to_js x10100 in
               Ojs.call (Ojs.get_prop_ascii x10101 "join") "apply"
                 [|x10101;((let x10098 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10097 with
                             | Some x10099 ->
                                 ignore
                                   (Ojs.call x10098 "push"
                                      [|(Ojs.string_to_js x10099)|])
                             | None -> ());
                            x10098))|])
    let (reverse : t -> T.t list) =
      fun (x10102 : t) ->
        Ojs.list_of_js T.t_of_js (Ojs.call (t_to_js x10102) "reverse" [||])
    let (shift : t -> T.t option) =
      fun (x10104 : t) ->
        Ojs.option_of_js T.t_of_js (Ojs.call (t_to_js x10104) "shift" [||])
    let (slice : t -> ?start:float -> ?end_:float -> unit -> T.t list) =
      fun (x10111 : t) ->
        fun ?start:(x10106 : float option) ->
          fun ?end_:(x10107 : float option) ->
            fun () ->
              Ojs.list_of_js T.t_of_js
                (let x10112 = t_to_js x10111 in
                 Ojs.call (Ojs.get_prop_ascii x10112 "slice") "apply"
                   [|x10112;((let x10108 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x10106 with
                               | Some x10110 ->
                                   ignore
                                     (Ojs.call x10108 "push"
                                        [|(Ojs.float_to_js x10110)|])
                               | None -> ());
                              (match x10107 with
                               | Some x10109 ->
                                   ignore
                                     (Ojs.call x10108 "push"
                                        [|(Ojs.float_to_js x10109)|])
                               | None -> ());
                              x10108))|])
    let (sort : t -> ?compareFn:(a:T.t -> b:T.t -> float) -> unit -> t) =
      fun (x10119 : t) ->
        fun ?compareFn:(x10114 : (a:T.t -> b:T.t -> float) option) ->
          fun () ->
            t_of_js
              (let x10120 = t_to_js x10119 in
               Ojs.call (Ojs.get_prop_ascii x10120 "sort") "apply"
                 [|x10120;((let x10115 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10114 with
                             | Some x10116 ->
                                 ignore
                                   (Ojs.call x10115 "push"
                                      [|(Ojs.fun_to_js 2
                                           (fun (x10117 : Ojs.t) ->
                                              fun (x10118 : Ojs.t) ->
                                                Ojs.float_to_js
                                                  (x10116
                                                     ~a:(T.t_of_js x10117)
                                                     ~b:(T.t_of_js x10118))))|])
                             | None -> ());
                            x10115))|])
    let (splice : t -> start:float -> ?deleteCount:float -> unit -> T.t list)
      =
      fun (x10125 : t) ->
        fun ~start:(x10121 : float) ->
          fun ?deleteCount:(x10122 : float option) ->
            fun () ->
              Ojs.list_of_js T.t_of_js
                (let x10126 = t_to_js x10125 in
                 Ojs.call (Ojs.get_prop_ascii x10126 "splice") "apply"
                   [|x10126;((let x10123 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10123 "push"
                                   [|(Ojs.float_to_js x10121)|]);
                              (match x10122 with
                               | Some x10124 ->
                                   ignore
                                     (Ojs.call x10123 "push"
                                        [|(Ojs.float_to_js x10124)|])
                               | None -> ());
                              x10123))|])
    let (splice' :
      t -> start:float -> deleteCount:float -> items:T.t list -> T.t list) =
      fun (x10133 : t) ->
        fun ~start:(x10128 : float) ->
          fun ~deleteCount:(x10129 : float) ->
            fun ~items:(x10130 : T.t list) ->
              Ojs.list_of_js T.t_of_js
                (let x10134 = t_to_js x10133 in
                 Ojs.call (Ojs.get_prop_ascii x10134 "splice") "apply"
                   [|x10134;((let x10131 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10131 "push"
                                   [|(Ojs.float_to_js x10128)|]);
                              ignore
                                (Ojs.call x10131 "push"
                                   [|(Ojs.float_to_js x10129)|]);
                              List.iter
                                (fun (x10132 : T.t) ->
                                   ignore
                                     (Ojs.call x10131 "push"
                                        [|(T.t_to_js x10132)|])) x10130;
                              x10131))|])
    let (unshift : t -> items:T.t list -> float) =
      fun (x10139 : t) ->
        fun ~items:(x10136 : T.t list) ->
          Ojs.float_of_js
            (let x10140 = t_to_js x10139 in
             Ojs.call (Ojs.get_prop_ascii x10140 "unshift") "apply"
               [|x10140;((let x10137 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x10138 : T.t) ->
                               ignore
                                 (Ojs.call x10137 "push"
                                    [|(T.t_to_js x10138)|])) x10136;
                          x10137))|])
    let (indexOf :
      t -> searchElement:T.t -> ?fromIndex:float -> unit -> float) =
      fun (x10145 : t) ->
        fun ~searchElement:(x10141 : T.t) ->
          fun ?fromIndex:(x10142 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x10146 = t_to_js x10145 in
                 Ojs.call (Ojs.get_prop_ascii x10146 "indexOf") "apply"
                   [|x10146;((let x10143 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10143 "push"
                                   [|(T.t_to_js x10141)|]);
                              (match x10142 with
                               | Some x10144 ->
                                   ignore
                                     (Ojs.call x10143 "push"
                                        [|(Ojs.float_to_js x10144)|])
                               | None -> ());
                              x10143))|])
    let (lastIndexOf :
      t -> searchElement:T.t -> ?fromIndex:float -> unit -> float) =
      fun (x10151 : t) ->
        fun ~searchElement:(x10147 : T.t) ->
          fun ?fromIndex:(x10148 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x10152 = t_to_js x10151 in
                 Ojs.call (Ojs.get_prop_ascii x10152 "lastIndexOf") "apply"
                   [|x10152;((let x10149 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10149 "push"
                                   [|(T.t_to_js x10147)|]);
                              (match x10148 with
                               | Some x10150 ->
                                   ignore
                                     (Ojs.call x10149 "push"
                                        [|(Ojs.float_to_js x10150)|])
                               | None -> ());
                              x10149))|])
    let (every :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x10161 : t) ->
        fun
          ~predicate:(x10153 :
                       value:T.t -> index:float -> array:T.t list -> bool)
          ->
          fun ?thisArg:(x10154 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x10162 = t_to_js x10161 in
                 Ojs.call (Ojs.get_prop_ascii x10162 "every") "apply"
                   [|x10162;((let x10155 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10155 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10157 : Ojs.t) ->
                                           fun (x10158 : Ojs.t) ->
                                             fun (x10159 : Ojs.t) ->
                                               Ojs.bool_to_js
                                                 (x10153
                                                    ~value:(T.t_of_js x10157)
                                                    ~index:(Ojs.float_of_js
                                                              x10158)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10159))))|]);
                              (match x10154 with
                               | Some x10156 ->
                                   ignore
                                     (Ojs.call x10155 "push"
                                        [|(any_to_js x10156)|])
                               | None -> ());
                              x10155))|])
    let (every' :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x10171 : t) ->
        fun
          ~predicate:(x10163 :
                       value:T.t -> index:float -> array:T.t list -> unknown)
          ->
          fun ?thisArg:(x10164 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x10172 = t_to_js x10171 in
                 Ojs.call (Ojs.get_prop_ascii x10172 "every") "apply"
                   [|x10172;((let x10165 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10165 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10167 : Ojs.t) ->
                                           fun (x10168 : Ojs.t) ->
                                             fun (x10169 : Ojs.t) ->
                                               unknown_to_js
                                                 (x10163
                                                    ~value:(T.t_of_js x10167)
                                                    ~index:(Ojs.float_of_js
                                                              x10168)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10169))))|]);
                              (match x10164 with
                               | Some x10166 ->
                                   ignore
                                     (Ojs.call x10165 "push"
                                        [|(any_to_js x10166)|])
                               | None -> ());
                              x10165))|])
    let (some :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x10181 : t) ->
        fun
          ~predicate:(x10173 :
                       value:T.t -> index:float -> array:T.t list -> unknown)
          ->
          fun ?thisArg:(x10174 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x10182 = t_to_js x10181 in
                 Ojs.call (Ojs.get_prop_ascii x10182 "some") "apply"
                   [|x10182;((let x10175 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10175 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10177 : Ojs.t) ->
                                           fun (x10178 : Ojs.t) ->
                                             fun (x10179 : Ojs.t) ->
                                               unknown_to_js
                                                 (x10173
                                                    ~value:(T.t_of_js x10177)
                                                    ~index:(Ojs.float_of_js
                                                              x10178)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10179))))|]);
                              (match x10174 with
                               | Some x10176 ->
                                   ignore
                                     (Ojs.call x10175 "push"
                                        [|(any_to_js x10176)|])
                               | None -> ());
                              x10175))|])
    let (forEach :
      t ->
        callbackfn:(value:T.t -> index:float -> array:T.t list -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x10191 : t) ->
        fun
          ~callbackfn:(x10183 :
                        value:T.t -> index:float -> array:T.t list -> unit)
          ->
          fun ?thisArg:(x10184 : any option) ->
            fun () ->
              ignore
                (let x10192 = t_to_js x10191 in
                 Ojs.call (Ojs.get_prop_ascii x10192 "forEach") "apply"
                   [|x10192;((let x10185 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10185 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10187 : Ojs.t) ->
                                           fun (x10188 : Ojs.t) ->
                                             fun (x10189 : Ojs.t) ->
                                               x10183
                                                 ~value:(T.t_of_js x10187)
                                                 ~index:(Ojs.float_of_js
                                                           x10188)
                                                 ~array:(Ojs.list_of_js
                                                           T.t_of_js x10189)))|]);
                              (match x10184 with
                               | Some x10186 ->
                                   ignore
                                     (Ojs.call x10185 "push"
                                        [|(any_to_js x10186)|])
                               | None -> ());
                              x10185))|])
    let (map :
      t ->
        callbackfn:(value:T.t -> index:float -> array:T.t list -> 'U) ->
          ?thisArg:any -> unit -> 'U list)
      =
      fun (x10201 : t) ->
        fun
          ~callbackfn:(x10193 :
                        value:T.t -> index:float -> array:T.t list -> 'U)
          ->
          fun ?thisArg:(x10194 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x10202 = t_to_js x10201 in
                 Ojs.call (Ojs.get_prop_ascii x10202 "map") "apply"
                   [|x10202;((let x10195 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10195 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10197 : Ojs.t) ->
                                           fun (x10198 : Ojs.t) ->
                                             fun (x10199 : Ojs.t) ->
                                               Obj.magic
                                                 (x10193
                                                    ~value:(T.t_of_js x10197)
                                                    ~index:(Ojs.float_of_js
                                                              x10198)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10199))))|]);
                              (match x10194 with
                               | Some x10196 ->
                                   ignore
                                     (Ojs.call x10195 "push"
                                        [|(any_to_js x10196)|])
                               | None -> ());
                              x10195))|])
    let (filter :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> bool) ->
          ?thisArg:any -> unit -> 'S list)
      =
      fun (x10212 : t) ->
        fun
          ~predicate:(x10204 :
                       value:T.t -> index:float -> array:T.t list -> bool)
          ->
          fun ?thisArg:(x10205 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x10213 = t_to_js x10212 in
                 Ojs.call (Ojs.get_prop_ascii x10213 "filter") "apply"
                   [|x10213;((let x10206 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10206 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10208 : Ojs.t) ->
                                           fun (x10209 : Ojs.t) ->
                                             fun (x10210 : Ojs.t) ->
                                               Ojs.bool_to_js
                                                 (x10204
                                                    ~value:(T.t_of_js x10208)
                                                    ~index:(Ojs.float_of_js
                                                              x10209)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10210))))|]);
                              (match x10205 with
                               | Some x10207 ->
                                   ignore
                                     (Ojs.call x10206 "push"
                                        [|(any_to_js x10207)|])
                               | None -> ());
                              x10206))|])
    let (filter' :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> unknown) ->
          ?thisArg:any -> unit -> T.t list)
      =
      fun (x10223 : t) ->
        fun
          ~predicate:(x10215 :
                       value:T.t -> index:float -> array:T.t list -> unknown)
          ->
          fun ?thisArg:(x10216 : any option) ->
            fun () ->
              Ojs.list_of_js T.t_of_js
                (let x10224 = t_to_js x10223 in
                 Ojs.call (Ojs.get_prop_ascii x10224 "filter") "apply"
                   [|x10224;((let x10217 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10217 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10219 : Ojs.t) ->
                                           fun (x10220 : Ojs.t) ->
                                             fun (x10221 : Ojs.t) ->
                                               unknown_to_js
                                                 (x10215
                                                    ~value:(T.t_of_js x10219)
                                                    ~index:(Ojs.float_of_js
                                                              x10220)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10221))))|]);
                              (match x10216 with
                               | Some x10218 ->
                                   ignore
                                     (Ojs.call x10217 "push"
                                        [|(any_to_js x10218)|])
                               | None -> ());
                              x10217))|])
    let (reduce :
      t ->
        callbackfn:(previousValue:T.t ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> T.t)
          -> T.t)
      =
      fun (x10232 : t) ->
        fun
          ~callbackfn:(x10226 :
                        previousValue:T.t ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> T.t)
          ->
          T.t_of_js
            (Ojs.call (t_to_js x10232) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x10227 : Ojs.t) ->
                       fun (x10228 : Ojs.t) ->
                         fun (x10229 : Ojs.t) ->
                           fun (x10230 : Ojs.t) ->
                             T.t_to_js
                               (x10226 ~previousValue:(T.t_of_js x10227)
                                  ~currentValue:(T.t_of_js x10228)
                                  ~currentIndex:(Ojs.float_of_js x10229)
                                  ~array:(Ojs.list_of_js T.t_of_js x10230))))|])
    let (reduce' :
      t ->
        callbackfn:(previousValue:T.t ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> T.t)
          -> initialValue:T.t -> T.t)
      =
      fun (x10240 : t) ->
        fun
          ~callbackfn:(x10233 :
                        previousValue:T.t ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> T.t)
          ->
          fun ~initialValue:(x10239 : T.t) ->
            T.t_of_js
              (Ojs.call (t_to_js x10240) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x10234 : Ojs.t) ->
                         fun (x10235 : Ojs.t) ->
                           fun (x10236 : Ojs.t) ->
                             fun (x10237 : Ojs.t) ->
                               T.t_to_js
                                 (x10233 ~previousValue:(T.t_of_js x10234)
                                    ~currentValue:(T.t_of_js x10235)
                                    ~currentIndex:(Ojs.float_of_js x10236)
                                    ~array:(Ojs.list_of_js T.t_of_js x10237))));(
                   T.t_to_js x10239)|])
    let (reduce'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x10248 : t) ->
        fun
          ~callbackfn:(x10241 :
                        previousValue:'U ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> 'U)
          ->
          fun ~initialValue:(x10247 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x10248) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x10242 : Ojs.t) ->
                         fun (x10243 : Ojs.t) ->
                           fun (x10244 : Ojs.t) ->
                             fun (x10245 : Ojs.t) ->
                               Obj.magic
                                 (x10241 ~previousValue:(Obj.magic x10242)
                                    ~currentValue:(T.t_of_js x10243)
                                    ~currentIndex:(Ojs.float_of_js x10244)
                                    ~array:(Ojs.list_of_js T.t_of_js x10245))));(
                   Obj.magic x10247)|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:T.t ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> T.t)
          -> T.t)
      =
      fun (x10255 : t) ->
        fun
          ~callbackfn:(x10249 :
                        previousValue:T.t ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> T.t)
          ->
          T.t_of_js
            (Ojs.call (t_to_js x10255) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x10250 : Ojs.t) ->
                       fun (x10251 : Ojs.t) ->
                         fun (x10252 : Ojs.t) ->
                           fun (x10253 : Ojs.t) ->
                             T.t_to_js
                               (x10249 ~previousValue:(T.t_of_js x10250)
                                  ~currentValue:(T.t_of_js x10251)
                                  ~currentIndex:(Ojs.float_of_js x10252)
                                  ~array:(Ojs.list_of_js T.t_of_js x10253))))|])
    let (reduceRight' :
      t ->
        callbackfn:(previousValue:T.t ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> T.t)
          -> initialValue:T.t -> T.t)
      =
      fun (x10263 : t) ->
        fun
          ~callbackfn:(x10256 :
                        previousValue:T.t ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> T.t)
          ->
          fun ~initialValue:(x10262 : T.t) ->
            T.t_of_js
              (Ojs.call (t_to_js x10263) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x10257 : Ojs.t) ->
                         fun (x10258 : Ojs.t) ->
                           fun (x10259 : Ojs.t) ->
                             fun (x10260 : Ojs.t) ->
                               T.t_to_js
                                 (x10256 ~previousValue:(T.t_of_js x10257)
                                    ~currentValue:(T.t_of_js x10258)
                                    ~currentIndex:(Ojs.float_of_js x10259)
                                    ~array:(Ojs.list_of_js T.t_of_js x10260))));(
                   T.t_to_js x10262)|])
    let (reduceRight'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x10271 : t) ->
        fun
          ~callbackfn:(x10264 :
                        previousValue:'U ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> 'U)
          ->
          fun ~initialValue:(x10270 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x10271) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x10265 : Ojs.t) ->
                         fun (x10266 : Ojs.t) ->
                           fun (x10267 : Ojs.t) ->
                             fun (x10268 : Ojs.t) ->
                               Obj.magic
                                 (x10264 ~previousValue:(Obj.magic x10265)
                                    ~currentValue:(T.t_of_js x10266)
                                    ~currentIndex:(Ojs.float_of_js x10267)
                                    ~array:(Ojs.list_of_js T.t_of_js x10268))));(
                   Obj.magic x10270)|])
    let (get : t -> float -> T.t) =
      fun (x10272 : t) ->
        fun (x10273 : float) ->
          T.t_of_js (Ojs.get_prop (t_to_js x10272) (Ojs.float_to_js x10273))
    let (set : t -> float -> T.t -> unit) =
      fun (x10274 : t) ->
        fun (x10275 : float) ->
          fun (x10276 : T.t) ->
            Ojs.set_prop (t_to_js x10274) (Ojs.float_to_js x10275)
              (T.t_to_js x10276)
    let (from :
      [ `U1 of T.t Iterable.t  | `U2 of T.t ArrayLike.t ] -> T.t list) =
      fun (x10277 : [ `U1 of T.t Iterable.t  | `U2 of T.t ArrayLike.t ]) ->
        Ojs.list_of_js T.t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "from"
             [|((match x10277 with
                 | `U1 x10278 -> Iterable.t_to_js T.t_to_js x10278
                 | `U2 x10280 -> ArrayLike.t_to_js T.t_to_js x10280))|])
    let (from' :
      iterable:[ `U1 of T.t Iterable.t  | `U2 of T.t ArrayLike.t ] ->
        mapfn:(v:T.t -> k:float -> 'U) -> ?thisArg:any -> unit -> 'U list)
      =
      fun
        ~iterable:(x10283 :
                    [ `U1 of T.t Iterable.t  | `U2 of T.t ArrayLike.t ])
        ->
        fun ~mapfn:(x10284 : v:T.t -> k:float -> 'U) ->
          fun ?thisArg:(x10285 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x10294 = Ojs.get_prop_ascii Ojs.global "Array" in
                 Ojs.call (Ojs.get_prop_ascii x10294 "from") "apply"
                   [|x10294;((let x10286 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10286 "push"
                                   [|((match x10283 with
                                       | `U1 x10290 ->
                                           Iterable.t_to_js T.t_to_js x10290
                                       | `U2 x10292 ->
                                           ArrayLike.t_to_js T.t_to_js x10292))|]);
                              ignore
                                (Ojs.call x10286 "push"
                                   [|(Ojs.fun_to_js 2
                                        (fun (x10288 : Ojs.t) ->
                                           fun (x10289 : Ojs.t) ->
                                             Obj.magic
                                               (x10284 ~v:(T.t_of_js x10288)
                                                  ~k:(Ojs.float_of_js x10289))))|]);
                              (match x10285 with
                               | Some x10287 ->
                                   ignore
                                     (Ojs.call x10286 "push"
                                        [|(any_to_js x10287)|])
                               | None -> ());
                              x10286))|])
    let (from'' : T.t ArrayLike.t -> T.t list) =
      fun (x10296 : T.t ArrayLike.t) ->
        Ojs.list_of_js T.t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "from"
             [|(ArrayLike.t_to_js T.t_to_js x10296)|])
    let (from''' :
      arrayLike:T.t ArrayLike.t ->
        mapfn:(v:T.t -> k:float -> 'U) -> ?thisArg:any -> unit -> 'U list)
      =
      fun ~arrayLike:(x10299 : T.t ArrayLike.t) ->
        fun ~mapfn:(x10300 : v:T.t -> k:float -> 'U) ->
          fun ?thisArg:(x10301 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x10307 = Ojs.get_prop_ascii Ojs.global "Array" in
                 Ojs.call (Ojs.get_prop_ascii x10307 "from") "apply"
                   [|x10307;((let x10302 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10302 "push"
                                   [|(ArrayLike.t_to_js T.t_to_js x10299)|]);
                              ignore
                                (Ojs.call x10302 "push"
                                   [|(Ojs.fun_to_js 2
                                        (fun (x10304 : Ojs.t) ->
                                           fun (x10305 : Ojs.t) ->
                                             Obj.magic
                                               (x10300 ~v:(T.t_of_js x10304)
                                                  ~k:(Ojs.float_of_js x10305))))|]);
                              (match x10301 with
                               | Some x10303 ->
                                   ignore
                                     (Ojs.call x10302 "push"
                                        [|(any_to_js x10303)|])
                               | None -> ());
                              x10302))|])
    let (of_ : T.t list -> T.t list) =
      fun (x10309 : T.t list) ->
        Ojs.list_of_js T.t_of_js
          (let x10312 = Ojs.get_prop_ascii Ojs.global "Array" in
           Ojs.call (Ojs.get_prop_ascii x10312 "of") "apply"
             [|x10312;((let x10310 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x10311 : T.t) ->
                             ignore
                               (Ojs.call x10310 "push" [|(T.t_to_js x10311)|]))
                          x10309;
                        x10310))|])
    let (create : ?arrayLength:float -> unit -> any list) =
      fun ?arrayLength:(x10314 : float option) ->
        fun () ->
          Ojs.list_of_js any_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Array")
               (let x10315 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x10314 with
                 | Some x10316 ->
                     ignore
                       (Ojs.call x10315 "push" [|(Ojs.float_to_js x10316)|])
                 | None -> ());
                x10315))
    let (create' : float -> T.t list) =
      fun (x10318 : float) ->
        Ojs.list_of_js T.t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
             [|(Ojs.float_to_js x10318)|])
    let (create'' : T.t list -> T.t list) =
      fun (x10320 : T.t list) ->
        Ojs.list_of_js T.t_of_js
          (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Array")
             (let x10321 =
                Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
              List.iter
                (fun (x10322 : T.t) ->
                   ignore (Ojs.call x10321 "push" [|(T.t_to_js x10322)|]))
                x10320;
              x10321))
    let (invoke : ?arrayLength:float -> unit -> any list) =
      fun ?arrayLength:(x10324 : float option) ->
        fun () ->
          Ojs.list_of_js any_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "apply"
               [|Ojs.null;((let x10325 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10324 with
                             | Some x10326 ->
                                 ignore
                                   (Ojs.call x10325 "push"
                                      [|(Ojs.float_to_js x10326)|])
                             | None -> ());
                            x10325))|])
    let (invoke' : float -> T.t list) =
      fun (x10328 : float) ->
        Ojs.list_of_js T.t_of_js
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "Array")
             [|(Ojs.float_to_js x10328)|])
    let (invoke'' : T.t list -> T.t list) =
      fun (x10330 : T.t list) ->
        Ojs.list_of_js T.t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "apply"
             [|Ojs.null;((let x10331 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x10332 : T.t) ->
                               ignore
                                 (Ojs.call x10331 "push"
                                    [|(T.t_to_js x10332)|])) x10330;
                          x10331))|])
    let (isArray : any -> bool) =
      fun (x10334 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "isArray"
             [|(any_to_js x10334)|])
    let (prototype : unit -> any list) =
      fun () ->
        Ojs.list_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Array")
             "prototype")
  end
module TypedPropertyDescriptor_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T TypedPropertyDescriptor.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x10338 : Ojs.t) ->
            TypedPropertyDescriptor.t_of_js __T_of_js x10338
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x10336 : __T TypedPropertyDescriptor.t) ->
            TypedPropertyDescriptor.t_to_js __T_to_js x10336
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10342 : Ojs.t) -> parent_of_js T.t_of_js x10342
    and t_to_js : t -> Ojs.t =
      fun (x10340 : T.t parent) -> parent_to_js T.t_to_js x10340
    let (get_enumerable : t -> bool) =
      fun (x10344 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x10344) "enumerable")
    let (set_enumerable : t -> bool -> unit) =
      fun (x10345 : t) ->
        fun (x10346 : bool) ->
          Ojs.set_prop_ascii (t_to_js x10345) "enumerable"
            (Ojs.bool_to_js x10346)
    let (get_configurable : t -> bool) =
      fun (x10347 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x10347) "configurable")
    let (set_configurable : t -> bool -> unit) =
      fun (x10348 : t) ->
        fun (x10349 : bool) ->
          Ojs.set_prop_ascii (t_to_js x10348) "configurable"
            (Ojs.bool_to_js x10349)
    let (get_writable : t -> bool) =
      fun (x10350 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x10350) "writable")
    let (set_writable : t -> bool -> unit) =
      fun (x10351 : t) ->
        fun (x10352 : bool) ->
          Ojs.set_prop_ascii (t_to_js x10351) "writable"
            (Ojs.bool_to_js x10352)
    let (get_value : t -> T.t) =
      fun (x10353 : t) ->
        T.t_of_js (Ojs.get_prop_ascii (t_to_js x10353) "value")
    let (set_value : t -> T.t -> unit) =
      fun (x10354 : t) ->
        fun (x10355 : T.t) ->
          Ojs.set_prop_ascii (t_to_js x10354) "value" (T.t_to_js x10355)
    let (get_ : t -> T.t) =
      fun (x10356 : t) -> T.t_of_js (Ojs.call (t_to_js x10356) "get" [||])
    let (set_ : t -> value:T.t -> unit) =
      fun (x10358 : t) ->
        fun ~value:(x10357 : T.t) ->
          ignore (Ojs.call (t_to_js x10358) "set" [|(T.t_to_js x10357)|])
  end
module PromiseLike_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T PromiseLike.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x10361 : Ojs.t) -> PromiseLike.t_of_js __T_of_js x10361
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x10359 : __T PromiseLike.t) ->
            PromiseLike.t_to_js __T_to_js x10359
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10365 : Ojs.t) -> parent_of_js T.t_of_js x10365
    and t_to_js : t -> Ojs.t =
      fun (x10363 : T.t parent) -> parent_to_js T.t_to_js x10363
    let (then_ :
      t ->
        ?onfulfilled:[ `Null  | `Undefined of undefined 
                     | `U1 of
                         T.t ->
                           [ `U1 of 'TResult1  | `U2 of 'TResult1 parent ]
                         ]
          ->
          ?onrejected:[ `Null  | `Undefined of undefined 
                      | `U1 of
                          any ->
                            [ `U1 of 'TResult2  | `U2 of 'TResult2 parent ]
                          ]
            -> unit -> ('TResult1, 'TResult2) union2 parent)
      =
      fun (x10384 : t) ->
        fun
          ?onfulfilled:(x10367 :
                         [ `Null  | `Undefined of undefined 
                         | `U1 of
                             T.t ->
                               [ `U1 of 'TResult1 
                               | `U2 of 'TResult1 parent ]
                             ]
                           option)
          ->
          fun
            ?onrejected:(x10368 :
                          [ `Null  | `Undefined of undefined 
                          | `U1 of
                              any ->
                                [ `U1 of 'TResult2 
                                | `U2 of 'TResult2 parent ]
                              ]
                            option)
            ->
            fun () ->
              parent_of_js
                (fun (x10386 : Ojs.t) ->
                   union2_of_js Obj.magic Obj.magic x10386)
                (let x10385 = t_to_js x10384 in
                 Ojs.call (Ojs.get_prop_ascii x10385 "then") "apply"
                   [|x10385;((let x10369 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x10367 with
                               | Some x10377 ->
                                   ignore
                                     (Ojs.call x10369 "push"
                                        [|((match x10377 with
                                            | `Null -> Ojs.null
                                            | `Undefined x10378 ->
                                                undefined_to_js x10378
                                            | `U1 x10379 ->
                                                Ojs.fun_to_js 1
                                                  (fun (x10380 : Ojs.t) ->
                                                     match x10379
                                                             (T.t_of_js
                                                                x10380)
                                                     with
                                                     | `U1 x10381 ->
                                                         Obj.magic x10381
                                                     | `U2 x10382 ->
                                                         parent_to_js
                                                           Obj.magic x10382)))|])
                               | None -> ());
                              (match x10368 with
                               | Some x10370 ->
                                   ignore
                                     (Ojs.call x10369 "push"
                                        [|((match x10370 with
                                            | `Null -> Ojs.null
                                            | `Undefined x10371 ->
                                                undefined_to_js x10371
                                            | `U1 x10372 ->
                                                Ojs.fun_to_js 1
                                                  (fun (x10373 : Ojs.t) ->
                                                     match x10372
                                                             (any_of_js
                                                                x10373)
                                                     with
                                                     | `U1 x10374 ->
                                                         Obj.magic x10374
                                                     | `U2 x10375 ->
                                                         parent_to_js
                                                           Obj.magic x10375)))|])
                               | None -> ());
                              x10369))|])
  end
module ArrayLike_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T ArrayLike.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x10391 : Ojs.t) -> ArrayLike.t_of_js __T_of_js x10391
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x10389 : __T ArrayLike.t) ->
            ArrayLike.t_to_js __T_to_js x10389
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10395 : Ojs.t) -> parent_of_js T.t_of_js x10395
    and t_to_js : t -> Ojs.t =
      fun (x10393 : T.t parent) -> parent_to_js T.t_to_js x10393
    let (get_length : t -> float) =
      fun (x10397 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x10397) "length")
    let (get : t -> float -> T.t) =
      fun (x10398 : t) ->
        fun (x10399 : float) ->
          T.t_of_js (Ojs.get_prop (t_to_js x10398) (Ojs.float_to_js x10399))
  end
module Map_Make(K:Ojs.T)(V:Ojs.T) =
  struct
    type ('K, 'V) parent = ('K, 'V) Map.t
    let rec parent_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) parent =
      fun (type __K) ->
        fun (type __V) ->
          fun (__K_of_js : Ojs.t -> __K) ->
            fun (__V_of_js : Ojs.t -> __V) ->
              fun (x10403 : Ojs.t) -> Map.t_of_js __K_of_js __V_of_js x10403
    and parent_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) parent -> Ojs.t =
      fun (type __K) ->
        fun (type __V) ->
          fun (__K_to_js : __K -> Ojs.t) ->
            fun (__V_to_js : __V -> Ojs.t) ->
              fun (x10400 : (__K, __V) Map.t) ->
                Map.t_to_js __K_to_js __V_to_js x10400
    type t = (K.t, V.t) parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10409 : Ojs.t) -> parent_of_js K.t_of_js V.t_of_js x10409
    and t_to_js : t -> Ojs.t =
      fun (x10406 : (K.t, V.t) parent) ->
        parent_to_js K.t_to_js V.t_to_js x10406
    let (entries : t -> (K.t * V.t) IterableIterator.t) =
      fun (x10412 : t) ->
        IterableIterator.t_of_js
          (fun (x10413 : Ojs.t) ->
             let x10414 = x10413 in
             ((K.t_of_js (Ojs.array_get x10414 0)),
               (V.t_of_js (Ojs.array_get x10414 1))))
          (Ojs.call (t_to_js x10412) "entries" [||])
    let (keys : t -> K.t IterableIterator.t) =
      fun (x10415 : t) ->
        IterableIterator.t_of_js K.t_of_js
          (Ojs.call (t_to_js x10415) "keys" [||])
    let (values : t -> V.t IterableIterator.t) =
      fun (x10417 : t) ->
        IterableIterator.t_of_js V.t_of_js
          (Ojs.call (t_to_js x10417) "values" [||])
    let (clear : t -> unit) =
      fun (x10419 : t) -> ignore (Ojs.call (t_to_js x10419) "clear" [||])
    let (delete : t -> key:K.t -> bool) =
      fun (x10421 : t) ->
        fun ~key:(x10420 : K.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x10421) "delete" [|(K.t_to_js x10420)|])
    let (forEach :
      t ->
        callbackfn:(value:V.t -> key:K.t -> map:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x10429 : t) ->
        fun ~callbackfn:(x10422 : value:V.t -> key:K.t -> map:t -> unit) ->
          fun ?thisArg:(x10423 : any option) ->
            fun () ->
              ignore
                (let x10430 = t_to_js x10429 in
                 Ojs.call (Ojs.get_prop_ascii x10430 "forEach") "apply"
                   [|x10430;((let x10424 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10424 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10426 : Ojs.t) ->
                                           fun (x10427 : Ojs.t) ->
                                             fun (x10428 : Ojs.t) ->
                                               x10422
                                                 ~value:(V.t_of_js x10426)
                                                 ~key:(K.t_of_js x10427)
                                                 ~map:(t_of_js x10428)))|]);
                              (match x10423 with
                               | Some x10425 ->
                                   ignore
                                     (Ojs.call x10424 "push"
                                        [|(any_to_js x10425)|])
                               | None -> ());
                              x10424))|])
    let (get_ : t -> key:K.t -> V.t option) =
      fun (x10432 : t) ->
        fun ~key:(x10431 : K.t) ->
          Ojs.option_of_js V.t_of_js
            (Ojs.call (t_to_js x10432) "get" [|(K.t_to_js x10431)|])
    let (has : t -> key:K.t -> bool) =
      fun (x10435 : t) ->
        fun ~key:(x10434 : K.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x10435) "has" [|(K.t_to_js x10434)|])
    let (set_ : t -> key:K.t -> value:V.t -> t) =
      fun (x10438 : t) ->
        fun ~key:(x10436 : K.t) ->
          fun ~value:(x10437 : V.t) ->
            t_of_js
              (Ojs.call (t_to_js x10438) "set"
                 [|(K.t_to_js x10436);(V.t_to_js x10437)|])
    let (get_size : t -> float) =
      fun (x10439 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x10439) "size")
    let (create : unit -> (any, any) parent) =
      fun () ->
        parent_of_js any_of_js any_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Map") [||])
    let (create' : ?iterable:(K.t * V.t) Iterable.t option -> unit -> t) =
      fun ?iterable:(x10442 : (K.t * V.t) Iterable.t option option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Map")
               (let x10443 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x10442 with
                 | Some x10444 ->
                     ignore
                       (Ojs.call x10443 "push"
                          [|(Ojs.option_to_js
                               (fun (x10445 : (K.t * V.t) Iterable.t) ->
                                  Iterable.t_to_js
                                    (fun (x10446 : (K.t * V.t)) ->
                                       let (x10447, x10448) = x10446 in
                                       let x10449 = Ojs.array_make 2 in
                                       Ojs.array_set x10449 0
                                         (K.t_to_js x10447);
                                       Ojs.array_set x10449 1
                                         (V.t_to_js x10448);
                                       x10449) x10445) x10444)|])
                 | None -> ());
                x10443))
    let (create'' : unit -> (any, any) parent) =
      fun () ->
        parent_of_js any_of_js any_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Map") [||])
    let (create''' : ?entries:(K.t * V.t) list option -> unit -> t) =
      fun ?entries:(x10452 : (K.t * V.t) list option option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Map")
               (let x10453 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x10452 with
                 | Some x10454 ->
                     ignore
                       (Ojs.call x10453 "push"
                          [|(Ojs.option_to_js
                               (fun (x10455 : (K.t * V.t) list) ->
                                  Ojs.list_to_js
                                    (fun (x10456 : (K.t * V.t)) ->
                                       let (x10457, x10458) = x10456 in
                                       let x10459 = Ojs.array_make 2 in
                                       Ojs.array_set x10459 0
                                         (K.t_to_js x10457);
                                       Ojs.array_set x10459 1
                                         (V.t_to_js x10458);
                                       x10459) x10455) x10454)|])
                 | None -> ());
                x10453))
    let (prototype : unit -> (any, any) parent) =
      fun () ->
        parent_of_js any_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Map")
             "prototype")
  end
module ReadonlyMap_Make(K:Ojs.T)(V:Ojs.T) =
  struct
    type ('K, 'V) parent = ('K, 'V) ReadonlyMap.t
    let rec parent_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) parent =
      fun (type __K) ->
        fun (type __V) ->
          fun (__K_of_js : Ojs.t -> __K) ->
            fun (__V_of_js : Ojs.t -> __V) ->
              fun (x10465 : Ojs.t) ->
                ReadonlyMap.t_of_js __K_of_js __V_of_js x10465
    and parent_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) parent -> Ojs.t =
      fun (type __K) ->
        fun (type __V) ->
          fun (__K_to_js : __K -> Ojs.t) ->
            fun (__V_to_js : __V -> Ojs.t) ->
              fun (x10462 : (__K, __V) ReadonlyMap.t) ->
                ReadonlyMap.t_to_js __K_to_js __V_to_js x10462
    type t = (K.t, V.t) parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10471 : Ojs.t) -> parent_of_js K.t_of_js V.t_of_js x10471
    and t_to_js : t -> Ojs.t =
      fun (x10468 : (K.t, V.t) parent) ->
        parent_to_js K.t_to_js V.t_to_js x10468
    let (entries : t -> (K.t * V.t) IterableIterator.t) =
      fun (x10474 : t) ->
        IterableIterator.t_of_js
          (fun (x10475 : Ojs.t) ->
             let x10476 = x10475 in
             ((K.t_of_js (Ojs.array_get x10476 0)),
               (V.t_of_js (Ojs.array_get x10476 1))))
          (Ojs.call (t_to_js x10474) "entries" [||])
    let (keys : t -> K.t IterableIterator.t) =
      fun (x10477 : t) ->
        IterableIterator.t_of_js K.t_of_js
          (Ojs.call (t_to_js x10477) "keys" [||])
    let (values : t -> V.t IterableIterator.t) =
      fun (x10479 : t) ->
        IterableIterator.t_of_js V.t_of_js
          (Ojs.call (t_to_js x10479) "values" [||])
    let (forEach :
      t ->
        callbackfn:(value:V.t -> key:K.t -> map:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x10488 : t) ->
        fun ~callbackfn:(x10481 : value:V.t -> key:K.t -> map:t -> unit) ->
          fun ?thisArg:(x10482 : any option) ->
            fun () ->
              ignore
                (let x10489 = t_to_js x10488 in
                 Ojs.call (Ojs.get_prop_ascii x10489 "forEach") "apply"
                   [|x10489;((let x10483 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10483 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10485 : Ojs.t) ->
                                           fun (x10486 : Ojs.t) ->
                                             fun (x10487 : Ojs.t) ->
                                               x10481
                                                 ~value:(V.t_of_js x10485)
                                                 ~key:(K.t_of_js x10486)
                                                 ~map:(t_of_js x10487)))|]);
                              (match x10482 with
                               | Some x10484 ->
                                   ignore
                                     (Ojs.call x10483 "push"
                                        [|(any_to_js x10484)|])
                               | None -> ());
                              x10483))|])
    let (get_ : t -> key:K.t -> V.t option) =
      fun (x10491 : t) ->
        fun ~key:(x10490 : K.t) ->
          Ojs.option_of_js V.t_of_js
            (Ojs.call (t_to_js x10491) "get" [|(K.t_to_js x10490)|])
    let (has : t -> key:K.t -> bool) =
      fun (x10494 : t) ->
        fun ~key:(x10493 : K.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x10494) "has" [|(K.t_to_js x10493)|])
    let (get_size : t -> float) =
      fun (x10495 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x10495) "size")
  end
module WeakMap_Make(K:Ojs.T)(V:Ojs.T) =
  struct
    type ('K, 'V) parent = ('K, 'V) WeakMap.t
    let rec parent_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) parent =
      fun (type __K) ->
        fun (type __V) ->
          fun (__K_of_js : Ojs.t -> __K) ->
            fun (__V_of_js : Ojs.t -> __V) ->
              fun (x10499 : Ojs.t) ->
                WeakMap.t_of_js __K_of_js __V_of_js x10499
    and parent_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) parent -> Ojs.t =
      fun (type __K) ->
        fun (type __V) ->
          fun (__K_to_js : __K -> Ojs.t) ->
            fun (__V_to_js : __V -> Ojs.t) ->
              fun (x10496 : (__K, __V) WeakMap.t) ->
                WeakMap.t_to_js __K_to_js __V_to_js x10496
    type t = (K.t, V.t) parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10505 : Ojs.t) -> parent_of_js K.t_of_js V.t_of_js x10505
    and t_to_js : t -> Ojs.t =
      fun (x10502 : (K.t, V.t) parent) ->
        parent_to_js K.t_to_js V.t_to_js x10502
    let (delete : t -> key:K.t -> bool) =
      fun (x10509 : t) ->
        fun ~key:(x10508 : K.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x10509) "delete" [|(K.t_to_js x10508)|])
    let (get_ : t -> key:K.t -> V.t option) =
      fun (x10511 : t) ->
        fun ~key:(x10510 : K.t) ->
          Ojs.option_of_js V.t_of_js
            (Ojs.call (t_to_js x10511) "get" [|(K.t_to_js x10510)|])
    let (has : t -> key:K.t -> bool) =
      fun (x10514 : t) ->
        fun ~key:(x10513 : K.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x10514) "has" [|(K.t_to_js x10513)|])
    let (set_ : t -> key:K.t -> value:V.t -> t) =
      fun (x10517 : t) ->
        fun ~key:(x10515 : K.t) ->
          fun ~value:(x10516 : V.t) ->
            t_of_js
              (Ojs.call (t_to_js x10517) "set"
                 [|(K.t_to_js x10515);(V.t_to_js x10516)|])
    let (create : (K.t * V.t) Iterable.t -> t) =
      fun (x10518 : (K.t * V.t) Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WeakMap")
             [|(Iterable.t_to_js
                  (fun (x10519 : (K.t * V.t)) ->
                     let (x10520, x10521) = x10519 in
                     let x10522 = Ojs.array_make 2 in
                     Ojs.array_set x10522 0 (K.t_to_js x10520);
                     Ojs.array_set x10522 1 (V.t_to_js x10521);
                     x10522) x10518)|])
    let (create' : ?entries:(K.t * V.t) list option -> unit -> t) =
      fun ?entries:(x10523 : (K.t * V.t) list option option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "WeakMap")
               (let x10524 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x10523 with
                 | Some x10525 ->
                     ignore
                       (Ojs.call x10524 "push"
                          [|(Ojs.option_to_js
                               (fun (x10526 : (K.t * V.t) list) ->
                                  Ojs.list_to_js
                                    (fun (x10527 : (K.t * V.t)) ->
                                       let (x10528, x10529) = x10527 in
                                       let x10530 = Ojs.array_make 2 in
                                       Ojs.array_set x10530 0
                                         (K.t_to_js x10528);
                                       Ojs.array_set x10530 1
                                         (V.t_to_js x10529);
                                       x10530) x10526) x10525)|])
                 | None -> ());
                x10524))
    let (prototype : unit -> (untyped_object, any) parent) =
      fun () ->
        parent_of_js untyped_object_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakMap")
             "prototype")
  end
module Set_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T Set.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x10535 : Ojs.t) -> Set.t_of_js __T_of_js x10535
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x10533 : __T Set.t) -> Set.t_to_js __T_to_js x10533
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10539 : Ojs.t) -> parent_of_js T.t_of_js x10539
    and t_to_js : t -> Ojs.t =
      fun (x10537 : T.t parent) -> parent_to_js T.t_to_js x10537
    let (entries : t -> (T.t * T.t) IterableIterator.t) =
      fun (x10541 : t) ->
        IterableIterator.t_of_js
          (fun (x10542 : Ojs.t) ->
             let x10543 = x10542 in
             ((T.t_of_js (Ojs.array_get x10543 0)),
               (T.t_of_js (Ojs.array_get x10543 1))))
          (Ojs.call (t_to_js x10541) "entries" [||])
    let (keys : t -> T.t IterableIterator.t) =
      fun (x10544 : t) ->
        IterableIterator.t_of_js T.t_of_js
          (Ojs.call (t_to_js x10544) "keys" [||])
    let (values : t -> T.t IterableIterator.t) =
      fun (x10546 : t) ->
        IterableIterator.t_of_js T.t_of_js
          (Ojs.call (t_to_js x10546) "values" [||])
    let (add : t -> value:T.t -> t) =
      fun (x10549 : t) ->
        fun ~value:(x10548 : T.t) ->
          t_of_js (Ojs.call (t_to_js x10549) "add" [|(T.t_to_js x10548)|])
    let (clear : t -> unit) =
      fun (x10550 : t) -> ignore (Ojs.call (t_to_js x10550) "clear" [||])
    let (delete : t -> value:T.t -> bool) =
      fun (x10552 : t) ->
        fun ~value:(x10551 : T.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x10552) "delete" [|(T.t_to_js x10551)|])
    let (forEach :
      t ->
        callbackfn:(value:T.t -> value2:T.t -> set_:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x10560 : t) ->
        fun ~callbackfn:(x10553 : value:T.t -> value2:T.t -> set_:t -> unit)
          ->
          fun ?thisArg:(x10554 : any option) ->
            fun () ->
              ignore
                (let x10561 = t_to_js x10560 in
                 Ojs.call (Ojs.get_prop_ascii x10561 "forEach") "apply"
                   [|x10561;((let x10555 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10555 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10557 : Ojs.t) ->
                                           fun (x10558 : Ojs.t) ->
                                             fun (x10559 : Ojs.t) ->
                                               x10553
                                                 ~value:(T.t_of_js x10557)
                                                 ~value2:(T.t_of_js x10558)
                                                 ~set_:(t_of_js x10559)))|]);
                              (match x10554 with
                               | Some x10556 ->
                                   ignore
                                     (Ojs.call x10555 "push"
                                        [|(any_to_js x10556)|])
                               | None -> ());
                              x10555))|])
    let (has : t -> value:T.t -> bool) =
      fun (x10563 : t) ->
        fun ~value:(x10562 : T.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x10563) "has" [|(T.t_to_js x10562)|])
    let (get_size : t -> float) =
      fun (x10564 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x10564) "size")
    let (create : ?iterable:T.t Iterable.t option -> unit -> t) =
      fun ?iterable:(x10565 : T.t Iterable.t option option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Set")
               (let x10566 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x10565 with
                 | Some x10567 ->
                     ignore
                       (Ojs.call x10566 "push"
                          [|(Ojs.option_to_js
                               (fun (x10568 : T.t Iterable.t) ->
                                  Iterable.t_to_js T.t_to_js x10568) x10567)|])
                 | None -> ());
                x10566))
    let (create' : ?values:T.t list option -> unit -> t) =
      fun ?values:(x10570 : T.t list option option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Set")
               (let x10571 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x10570 with
                 | Some x10572 ->
                     ignore
                       (Ojs.call x10571 "push"
                          [|(Ojs.option_to_js
                               (fun (x10573 : T.t list) ->
                                  Ojs.list_to_js T.t_to_js x10573) x10572)|])
                 | None -> ());
                x10571))
    let (prototype : unit -> any parent) =
      fun () ->
        parent_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Set")
             "prototype")
  end
module ReadonlySet_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T ReadonlySet.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x10578 : Ojs.t) -> ReadonlySet.t_of_js __T_of_js x10578
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x10576 : __T ReadonlySet.t) ->
            ReadonlySet.t_to_js __T_to_js x10576
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10582 : Ojs.t) -> parent_of_js T.t_of_js x10582
    and t_to_js : t -> Ojs.t =
      fun (x10580 : T.t parent) -> parent_to_js T.t_to_js x10580
    let (entries : t -> (T.t * T.t) IterableIterator.t) =
      fun (x10584 : t) ->
        IterableIterator.t_of_js
          (fun (x10585 : Ojs.t) ->
             let x10586 = x10585 in
             ((T.t_of_js (Ojs.array_get x10586 0)),
               (T.t_of_js (Ojs.array_get x10586 1))))
          (Ojs.call (t_to_js x10584) "entries" [||])
    let (keys : t -> T.t IterableIterator.t) =
      fun (x10587 : t) ->
        IterableIterator.t_of_js T.t_of_js
          (Ojs.call (t_to_js x10587) "keys" [||])
    let (values : t -> T.t IterableIterator.t) =
      fun (x10589 : t) ->
        IterableIterator.t_of_js T.t_of_js
          (Ojs.call (t_to_js x10589) "values" [||])
    let (forEach :
      t ->
        callbackfn:(value:T.t -> value2:T.t -> set_:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x10598 : t) ->
        fun ~callbackfn:(x10591 : value:T.t -> value2:T.t -> set_:t -> unit)
          ->
          fun ?thisArg:(x10592 : any option) ->
            fun () ->
              ignore
                (let x10599 = t_to_js x10598 in
                 Ojs.call (Ojs.get_prop_ascii x10599 "forEach") "apply"
                   [|x10599;((let x10593 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10593 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10595 : Ojs.t) ->
                                           fun (x10596 : Ojs.t) ->
                                             fun (x10597 : Ojs.t) ->
                                               x10591
                                                 ~value:(T.t_of_js x10595)
                                                 ~value2:(T.t_of_js x10596)
                                                 ~set_:(t_of_js x10597)))|]);
                              (match x10592 with
                               | Some x10594 ->
                                   ignore
                                     (Ojs.call x10593 "push"
                                        [|(any_to_js x10594)|])
                               | None -> ());
                              x10593))|])
    let (has : t -> value:T.t -> bool) =
      fun (x10601 : t) ->
        fun ~value:(x10600 : T.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x10601) "has" [|(T.t_to_js x10600)|])
    let (get_size : t -> float) =
      fun (x10602 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x10602) "size")
  end
module WeakSet_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T WeakSet.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x10605 : Ojs.t) -> WeakSet.t_of_js __T_of_js x10605
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x10603 : __T WeakSet.t) -> WeakSet.t_to_js __T_to_js x10603
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10609 : Ojs.t) -> parent_of_js T.t_of_js x10609
    and t_to_js : t -> Ojs.t =
      fun (x10607 : T.t parent) -> parent_to_js T.t_to_js x10607
    let (add : t -> value:T.t -> t) =
      fun (x10612 : t) ->
        fun ~value:(x10611 : T.t) ->
          t_of_js (Ojs.call (t_to_js x10612) "add" [|(T.t_to_js x10611)|])
    let (delete : t -> value:T.t -> bool) =
      fun (x10614 : t) ->
        fun ~value:(x10613 : T.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x10614) "delete" [|(T.t_to_js x10613)|])
    let (has : t -> value:T.t -> bool) =
      fun (x10616 : t) ->
        fun ~value:(x10615 : T.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x10616) "has" [|(T.t_to_js x10615)|])
    let (create : T.t Iterable.t -> t) =
      fun (x10617 : T.t Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WeakSet")
             [|(Iterable.t_to_js T.t_to_js x10617)|])
    let (create' : ?values:T.t list option -> unit -> t) =
      fun ?values:(x10619 : T.t list option option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "WeakSet")
               (let x10620 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x10619 with
                 | Some x10621 ->
                     ignore
                       (Ojs.call x10620 "push"
                          [|(Ojs.option_to_js
                               (fun (x10622 : T.t list) ->
                                  Ojs.list_to_js T.t_to_js x10622) x10621)|])
                 | None -> ());
                x10620))
    let (prototype : unit -> untyped_object parent) =
      fun () ->
        parent_of_js untyped_object_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakSet")
             "prototype")
  end
module Generator_Make(T:Ojs.T)(TReturn:Ojs.T)(TNext:Ojs.T) =
  struct
    type ('T, 'TReturn, 'TNext) parent = ('T, 'TReturn, 'TNext) Generator.t
    let rec parent_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) parent
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
                fun (__TNext_of_js : Ojs.t -> __TNext) ->
                  fun (x10629 : Ojs.t) ->
                    Generator.t_of_js __T_of_js __TReturn_of_js __TNext_of_js
                      x10629
    and parent_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) parent -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
                fun (__TNext_to_js : __TNext -> Ojs.t) ->
                  fun (x10625 : (__T, __TReturn, __TNext) Generator.t) ->
                    Generator.t_to_js __T_to_js __TReturn_to_js __TNext_to_js
                      x10625
    type t = (T.t, TReturn.t, TNext.t) parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10637 : Ojs.t) ->
        parent_of_js T.t_of_js TReturn.t_of_js TNext.t_of_js x10637
    and t_to_js : t -> Ojs.t =
      fun (x10633 : (T.t, TReturn.t, TNext.t) parent) ->
        parent_to_js T.t_to_js TReturn.t_to_js TNext.t_to_js x10633
    let (next : t -> args:any list -> (T.t, TReturn.t) IteratorResult.t) =
      fun (x10644 : t) ->
        fun ~args:(x10641 : any list) ->
          IteratorResult.t_of_js T.t_of_js TReturn.t_of_js
            (let x10645 = t_to_js x10644 in
             Ojs.call (Ojs.get_prop_ascii x10645 "next") "apply"
               [|x10645;((let x10642 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x10643 : any) ->
                               ignore
                                 (Ojs.call x10642 "push"
                                    [|(any_to_js x10643)|])) x10641;
                          x10642))|])
    let (return : t -> value:TReturn.t -> (T.t, TReturn.t) IteratorResult.t)
      =
      fun (x10649 : t) ->
        fun ~value:(x10648 : TReturn.t) ->
          IteratorResult.t_of_js T.t_of_js TReturn.t_of_js
            (Ojs.call (t_to_js x10649) "return" [|(TReturn.t_to_js x10648)|])
    let (throw : t -> e:any -> (T.t, TReturn.t) IteratorResult.t) =
      fun (x10653 : t) ->
        fun ~e:(x10652 : any) ->
          IteratorResult.t_of_js T.t_of_js TReturn.t_of_js
            (Ojs.call (t_to_js x10653) "throw" [|(any_to_js x10652)|])
  end
module IteratorYieldResult_Make(TYield:Ojs.T) =
  struct
    type 'TYield parent = 'TYield IteratorYieldResult.t
    let rec parent_of_js :
      'TYield . (Ojs.t -> 'TYield) -> Ojs.t -> 'TYield parent =
      fun (type __TYield) ->
        fun (__TYield_of_js : Ojs.t -> __TYield) ->
          fun (x10658 : Ojs.t) ->
            IteratorYieldResult.t_of_js __TYield_of_js x10658
    and parent_to_js :
      'TYield . ('TYield -> Ojs.t) -> 'TYield parent -> Ojs.t =
      fun (type __TYield) ->
        fun (__TYield_to_js : __TYield -> Ojs.t) ->
          fun (x10656 : __TYield IteratorYieldResult.t) ->
            IteratorYieldResult.t_to_js __TYield_to_js x10656
    type t = TYield.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10662 : Ojs.t) -> parent_of_js TYield.t_of_js x10662
    and t_to_js : t -> Ojs.t =
      fun (x10660 : TYield.t parent) -> parent_to_js TYield.t_to_js x10660
    let (get_done : t -> [ `L_b_false ]) =
      fun (x10664 : t) ->
        let x10665 = Ojs.get_prop_ascii (t_to_js x10664) "done" in
        match Ojs.bool_of_js x10665 with
        | false -> `L_b_false
        | _ -> assert false
    let (set_done : t -> [ `L_b_false ] -> unit) =
      fun (x10666 : t) ->
        fun (x10667 : [ `L_b_false ]) ->
          Ojs.set_prop_ascii (t_to_js x10666) "done"
            (match x10667 with | `L_b_false -> Ojs.bool_to_js false)
    let (get_value : t -> TYield.t) =
      fun (x10668 : t) ->
        TYield.t_of_js (Ojs.get_prop_ascii (t_to_js x10668) "value")
    let (set_value : t -> TYield.t -> unit) =
      fun (x10669 : t) ->
        fun (x10670 : TYield.t) ->
          Ojs.set_prop_ascii (t_to_js x10669) "value" (TYield.t_to_js x10670)
  end
module IteratorReturnResult_Make(TReturn:Ojs.T) =
  struct
    type 'TReturn parent = 'TReturn IteratorReturnResult.t
    let rec parent_of_js :
      'TReturn . (Ojs.t -> 'TReturn) -> Ojs.t -> 'TReturn parent =
      fun (type __TReturn) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (x10673 : Ojs.t) ->
            IteratorReturnResult.t_of_js __TReturn_of_js x10673
    and parent_to_js :
      'TReturn . ('TReturn -> Ojs.t) -> 'TReturn parent -> Ojs.t =
      fun (type __TReturn) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (x10671 : __TReturn IteratorReturnResult.t) ->
            IteratorReturnResult.t_to_js __TReturn_to_js x10671
    type t = TReturn.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10677 : Ojs.t) -> parent_of_js TReturn.t_of_js x10677
    and t_to_js : t -> Ojs.t =
      fun (x10675 : TReturn.t parent) -> parent_to_js TReturn.t_to_js x10675
    let (get_done : t -> [ `L_b_true ]) =
      fun (x10679 : t) ->
        let x10680 = Ojs.get_prop_ascii (t_to_js x10679) "done" in
        match Ojs.bool_of_js x10680 with
        | true -> `L_b_true
        | _ -> assert false
    let (set_done : t -> [ `L_b_true ] -> unit) =
      fun (x10681 : t) ->
        fun (x10682 : [ `L_b_true ]) ->
          Ojs.set_prop_ascii (t_to_js x10681) "done"
            (match x10682 with | `L_b_true -> Ojs.bool_to_js true)
    let (get_value : t -> TReturn.t) =
      fun (x10683 : t) ->
        TReturn.t_of_js (Ojs.get_prop_ascii (t_to_js x10683) "value")
    let (set_value : t -> TReturn.t -> unit) =
      fun (x10684 : t) ->
        fun (x10685 : TReturn.t) ->
          Ojs.set_prop_ascii (t_to_js x10684) "value"
            (TReturn.t_to_js x10685)
  end
module Iterator_Make(T:Ojs.T)(TReturn:Ojs.T)(TNext:Ojs.T) =
  struct
    type ('T, 'TReturn, 'TNext) parent = ('T, 'TReturn, 'TNext) Iterator.t
    let rec parent_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) parent
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
                fun (__TNext_of_js : Ojs.t -> __TNext) ->
                  fun (x10690 : Ojs.t) ->
                    Iterator.t_of_js __T_of_js __TReturn_of_js __TNext_of_js
                      x10690
    and parent_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) parent -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
                fun (__TNext_to_js : __TNext -> Ojs.t) ->
                  fun (x10686 : (__T, __TReturn, __TNext) Iterator.t) ->
                    Iterator.t_to_js __T_to_js __TReturn_to_js __TNext_to_js
                      x10686
    type t = (T.t, TReturn.t, TNext.t) parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10698 : Ojs.t) ->
        parent_of_js T.t_of_js TReturn.t_of_js TNext.t_of_js x10698
    and t_to_js : t -> Ojs.t =
      fun (x10694 : (T.t, TReturn.t, TNext.t) parent) ->
        parent_to_js T.t_to_js TReturn.t_to_js TNext.t_to_js x10694
    let (next : t -> args:any list -> (T.t, TReturn.t) IteratorResult.t) =
      fun (x10705 : t) ->
        fun ~args:(x10702 : any list) ->
          IteratorResult.t_of_js T.t_of_js TReturn.t_of_js
            (let x10706 = t_to_js x10705 in
             Ojs.call (Ojs.get_prop_ascii x10706 "next") "apply"
               [|x10706;((let x10703 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x10704 : any) ->
                               ignore
                                 (Ojs.call x10703 "push"
                                    [|(any_to_js x10704)|])) x10702;
                          x10703))|])
    let (return :
      t -> ?value:TReturn.t -> unit -> (T.t, TReturn.t) IteratorResult.t) =
      fun (x10712 : t) ->
        fun ?value:(x10709 : TReturn.t option) ->
          fun () ->
            IteratorResult.t_of_js T.t_of_js TReturn.t_of_js
              (let x10713 = t_to_js x10712 in
               Ojs.call (Ojs.get_prop_ascii x10713 "return") "apply"
                 [|x10713;((let x10710 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10709 with
                             | Some x10711 ->
                                 ignore
                                   (Ojs.call x10710 "push"
                                      [|(TReturn.t_to_js x10711)|])
                             | None -> ());
                            x10710))|])
    let (throw : t -> ?e:any -> unit -> (T.t, TReturn.t) IteratorResult.t) =
      fun (x10719 : t) ->
        fun ?e:(x10716 : any option) ->
          fun () ->
            IteratorResult.t_of_js T.t_of_js TReturn.t_of_js
              (let x10720 = t_to_js x10719 in
               Ojs.call (Ojs.get_prop_ascii x10720 "throw") "apply"
                 [|x10720;((let x10717 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10716 with
                             | Some x10718 ->
                                 ignore
                                   (Ojs.call x10717 "push"
                                      [|(any_to_js x10718)|])
                             | None -> ());
                            x10717))|])
  end
module Promise_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T Promise.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x10725 : Ojs.t) -> Promise.t_of_js __T_of_js x10725
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x10723 : __T Promise.t) -> Promise.t_to_js __T_to_js x10723
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10729 : Ojs.t) -> parent_of_js T.t_of_js x10729
    and t_to_js : t -> Ojs.t =
      fun (x10727 : T.t parent) -> parent_to_js T.t_to_js x10727
    let (finally :
      t ->
        ?onfinally:[ `Null  | `Undefined of undefined 
                   | `U1 of unit -> unit ]
          -> unit -> t)
      =
      fun (x10736 : t) ->
        fun
          ?onfinally:(x10731 :
                       [ `Null  | `Undefined of undefined 
                       | `U1 of unit -> unit ] option)
          ->
          fun () ->
            t_of_js
              (let x10737 = t_to_js x10736 in
               Ojs.call (Ojs.get_prop_ascii x10737 "finally") "apply"
                 [|x10737;((let x10732 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10731 with
                             | Some x10733 ->
                                 ignore
                                   (Ojs.call x10732 "push"
                                      [|((match x10733 with
                                          | `Null -> Ojs.null
                                          | `Undefined x10734 ->
                                              undefined_to_js x10734
                                          | `U1 x10735 ->
                                              Ojs.fun_to_js 1
                                                (fun _ -> x10735 ())))|])
                             | None -> ());
                            x10732))|])
    let (then_ :
      t ->
        ?onfulfilled:[ `Null  | `Undefined of undefined 
                     | `U1 of
                         T.t ->
                           [ `U1 of 'TResult1 
                           | `U2 of 'TResult1 PromiseLike.t ]
                         ]
          ->
          ?onrejected:[ `Null  | `Undefined of undefined 
                      | `U1 of
                          any ->
                            [ `U1 of 'TResult2 
                            | `U2 of 'TResult2 PromiseLike.t ]
                          ]
            -> unit -> ('TResult1, 'TResult2) union2 parent)
      =
      fun (x10755 : t) ->
        fun
          ?onfulfilled:(x10738 :
                         [ `Null  | `Undefined of undefined 
                         | `U1 of
                             T.t ->
                               [ `U1 of 'TResult1 
                               | `U2 of 'TResult1 PromiseLike.t ]
                             ]
                           option)
          ->
          fun
            ?onrejected:(x10739 :
                          [ `Null  | `Undefined of undefined 
                          | `U1 of
                              any ->
                                [ `U1 of 'TResult2 
                                | `U2 of 'TResult2 PromiseLike.t ]
                              ]
                            option)
            ->
            fun () ->
              parent_of_js
                (fun (x10757 : Ojs.t) ->
                   union2_of_js Obj.magic Obj.magic x10757)
                (let x10756 = t_to_js x10755 in
                 Ojs.call (Ojs.get_prop_ascii x10756 "then") "apply"
                   [|x10756;((let x10740 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x10738 with
                               | Some x10748 ->
                                   ignore
                                     (Ojs.call x10740 "push"
                                        [|((match x10748 with
                                            | `Null -> Ojs.null
                                            | `Undefined x10749 ->
                                                undefined_to_js x10749
                                            | `U1 x10750 ->
                                                Ojs.fun_to_js 1
                                                  (fun (x10751 : Ojs.t) ->
                                                     match x10750
                                                             (T.t_of_js
                                                                x10751)
                                                     with
                                                     | `U1 x10752 ->
                                                         Obj.magic x10752
                                                     | `U2 x10753 ->
                                                         PromiseLike.t_to_js
                                                           Obj.magic x10753)))|])
                               | None -> ());
                              (match x10739 with
                               | Some x10741 ->
                                   ignore
                                     (Ojs.call x10740 "push"
                                        [|((match x10741 with
                                            | `Null -> Ojs.null
                                            | `Undefined x10742 ->
                                                undefined_to_js x10742
                                            | `U1 x10743 ->
                                                Ojs.fun_to_js 1
                                                  (fun (x10744 : Ojs.t) ->
                                                     match x10743
                                                             (any_of_js
                                                                x10744)
                                                     with
                                                     | `U1 x10745 ->
                                                         Obj.magic x10745
                                                     | `U2 x10746 ->
                                                         PromiseLike.t_to_js
                                                           Obj.magic x10746)))|])
                               | None -> ());
                              x10740))|])
    let (catch :
      t ->
        ?onrejected:[ `Null  | `Undefined of undefined 
                    | `U1 of
                        any ->
                          [ `U1 of 'TResult 
                          | `U2 of 'TResult PromiseLike.t ]
                        ]
          -> unit -> ('TResult, (T.t, 'TResult) union2) union2 parent)
      =
      fun (x10769 : t) ->
        fun
          ?onrejected:(x10760 :
                        [ `Null  | `Undefined of undefined 
                        | `U1 of
                            any ->
                              [ `U1 of 'TResult 
                              | `U2 of 'TResult PromiseLike.t ]
                            ]
                          option)
          ->
          fun () ->
            parent_of_js
              (fun (x10771 : Ojs.t) ->
                 union2_of_js Obj.magic
                   (fun (x10773 : Ojs.t) ->
                      union2_of_js T.t_of_js Obj.magic x10773) x10771)
              (let x10770 = t_to_js x10769 in
               Ojs.call (Ojs.get_prop_ascii x10770 "catch") "apply"
                 [|x10770;((let x10761 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10760 with
                             | Some x10762 ->
                                 ignore
                                   (Ojs.call x10761 "push"
                                      [|((match x10762 with
                                          | `Null -> Ojs.null
                                          | `Undefined x10763 ->
                                              undefined_to_js x10763
                                          | `U1 x10764 ->
                                              Ojs.fun_to_js 1
                                                (fun (x10765 : Ojs.t) ->
                                                   match x10764
                                                           (any_of_js x10765)
                                                   with
                                                   | `U1 x10766 ->
                                                       Obj.magic x10766
                                                   | `U2 x10767 ->
                                                       PromiseLike.t_to_js
                                                         Obj.magic x10767)))|])
                             | None -> ());
                            x10761))|])
    let (any :
      [ `U1 of [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] list 
      | `U2 of [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t ] -> 
        t)
      =
      fun
        (x10776 :
          [ `U1 of [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] list 
          | `U2 of [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t ])
        ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "any"
             [|((match x10776 with
                 | `U1 x10777 ->
                     Ojs.list_to_js
                       (fun
                          (x10778 :
                            [ `U1 of T.t  | `U2 of T.t PromiseLike.t ])
                          ->
                          match x10778 with
                          | `U1 x10779 -> T.t_to_js x10779
                          | `U2 x10780 ->
                              PromiseLike.t_to_js T.t_to_js x10780) x10777
                 | `U2 x10782 ->
                     Iterable.t_to_js
                       (fun
                          (x10783 :
                            [ `U1 of T.t  | `U2 of T.t PromiseLike.t ])
                          ->
                          match x10783 with
                          | `U1 x10784 -> T.t_to_js x10784
                          | `U2 x10785 ->
                              PromiseLike.t_to_js T.t_to_js x10785) x10782))|])
    let (any' : T.t -> any Awaited.t parent) =
      fun (x10787 : T.t) ->
        parent_of_js
          (fun (x10788 : Ojs.t) -> Awaited.t_of_js any_of_js x10788)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "any"
             [|(T.t_to_js x10787)|])
    let (any'' :
      [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t ->
        T.t Awaited.t Awaited.t parent)
      =
      fun (x10790 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t) ->
        parent_of_js
          (fun (x10795 : Ojs.t) ->
             Awaited.t_of_js
               (fun (x10796 : Ojs.t) -> Awaited.t_of_js T.t_of_js x10796)
               x10795)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "any"
             [|(Iterable.t_to_js
                  (fun (x10791 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ])
                     ->
                     match x10791 with
                     | `U1 x10792 -> T.t_to_js x10792
                     | `U2 x10793 -> PromiseLike.t_to_js T.t_to_js x10793)
                  x10790)|])
    let (allSettled : T.t -> any parent) =
      fun (x10798 : T.t) ->
        parent_of_js any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "allSettled"
             [|(T.t_to_js x10798)|])
    let (allSettled' :
      [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t ->
        T.t Awaited.t PromiseSettledResult.t list Awaited.t
          PromiseSettledResult.t list parent)
      =
      fun (x10800 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t) ->
        parent_of_js
          (fun (x10805 : Ojs.t) ->
             Ojs.list_of_js
               (fun (x10806 : Ojs.t) ->
                  PromiseSettledResult.t_of_js
                    (fun (x10807 : Ojs.t) ->
                       Awaited.t_of_js
                         (fun (x10808 : Ojs.t) ->
                            Ojs.list_of_js
                              (fun (x10809 : Ojs.t) ->
                                 PromiseSettledResult.t_of_js
                                   (fun (x10810 : Ojs.t) ->
                                      Awaited.t_of_js T.t_of_js x10810)
                                   x10809) x10808) x10807) x10806) x10805)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "allSettled"
             [|(Iterable.t_to_js
                  (fun (x10801 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ])
                     ->
                     match x10801 with
                     | `U1 x10802 -> T.t_to_js x10802
                     | `U2 x10803 -> PromiseLike.t_to_js T.t_to_js x10803)
                  x10800)|])
    let (prototype : unit -> any parent) =
      fun () ->
        parent_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Promise")
             "prototype")
    let (create :
      (resolve:([ `U1 of T.t  | `U2 of T.t PromiseLike.t ] -> unit) ->
         reject:(?reason:any -> unit -> unit) -> unit)
        -> t)
      =
      fun
        (x10813 :
          resolve:([ `U1 of T.t  | `U2 of T.t PromiseLike.t ] -> unit) ->
            reject:(?reason:any -> unit -> unit) -> unit)
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Promise")
             [|(Ojs.fun_to_js 2
                  (fun (x10814 : Ojs.t) ->
                     fun (x10819 : Ojs.t) ->
                       x10813
                         ~resolve:(fun
                                     (x10815 :
                                       [ `U1 of T.t 
                                       | `U2 of T.t PromiseLike.t ])
                                     ->
                                     ignore
                                       (Ojs.apply x10814
                                          [|((match x10815 with
                                              | `U1 x10816 ->
                                                  T.t_to_js x10816
                                              | `U2 x10817 ->
                                                  PromiseLike.t_to_js
                                                    T.t_to_js x10817))|]))
                         ~reject:(fun ?reason:(x10820 : any option) ->
                                    fun () ->
                                      ignore
                                        (Ojs.call x10819 "apply"
                                           [|Ojs.null;((let x10821 =
                                                          Ojs.new_obj
                                                            (Ojs.get_prop_ascii
                                                               Ojs.global
                                                               "Array") 
                                                            [||] in
                                                        (match x10820 with
                                                         | Some x10822 ->
                                                             ignore
                                                               (Ojs.call
                                                                  x10821
                                                                  "push"
                                                                  [|(
                                                                    any_to_js
                                                                    x10822)|])
                                                         | None -> ());
                                                        x10821))|]))))|])
    let (all : T.t -> any parent) =
      fun (x10823 : T.t) ->
        parent_of_js any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "all"
             [|(T.t_to_js x10823)|])
    let (race : T.t -> any Awaited.t parent) =
      fun (x10825 : T.t) ->
        parent_of_js
          (fun (x10826 : Ojs.t) -> Awaited.t_of_js any_of_js x10826)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "race"
             [|(T.t_to_js x10825)|])
    let (reject : ?reason:any -> unit -> t) =
      fun ?reason:(x10828 : any option) ->
        fun () ->
          t_of_js
            (let x10831 = Ojs.get_prop_ascii Ojs.global "Promise" in
             Ojs.call (Ojs.get_prop_ascii x10831 "reject") "apply"
               [|x10831;((let x10829 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x10828 with
                           | Some x10830 ->
                               ignore
                                 (Ojs.call x10829 "push"
                                    [|(any_to_js x10830)|])
                           | None -> ());
                          x10829))|])
    let (resolve : unit -> unit parent) =
      fun () ->
        parent_of_js Ojs.unit_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "resolve" [||])
    let (resolve' : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] -> t) =
      fun (x10833 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ]) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "resolve"
             [|((match x10833 with
                 | `U1 x10834 -> T.t_to_js x10834
                 | `U2 x10835 -> PromiseLike.t_to_js T.t_to_js x10835))|])
    let (all' :
      [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t ->
        T.t Awaited.t list Awaited.t list parent)
      =
      fun (x10837 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t) ->
        parent_of_js
          (fun (x10842 : Ojs.t) ->
             Ojs.list_of_js
               (fun (x10843 : Ojs.t) ->
                  Awaited.t_of_js
                    (fun (x10844 : Ojs.t) ->
                       Ojs.list_of_js
                         (fun (x10845 : Ojs.t) ->
                            Awaited.t_of_js T.t_of_js x10845) x10844) x10843)
               x10842)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "all"
             [|(Iterable.t_to_js
                  (fun (x10838 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ])
                     ->
                     match x10838 with
                     | `U1 x10839 -> T.t_to_js x10839
                     | `U2 x10840 -> PromiseLike.t_to_js T.t_to_js x10840)
                  x10837)|])
    let (race' :
      [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t ->
        T.t Awaited.t Awaited.t parent)
      =
      fun (x10847 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t) ->
        parent_of_js
          (fun (x10852 : Ojs.t) ->
             Awaited.t_of_js
               (fun (x10853 : Ojs.t) -> Awaited.t_of_js T.t_of_js x10853)
               x10852)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "race"
             [|(Iterable.t_to_js
                  (fun (x10848 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ])
                     ->
                     match x10848 with
                     | `U1 x10849 -> T.t_to_js x10849
                     | `U2 x10850 -> PromiseLike.t_to_js T.t_to_js x10850)
                  x10847)|])
  end
module ProxyHandler_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T ProxyHandler.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x10857 : Ojs.t) -> ProxyHandler.t_of_js __T_of_js x10857
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x10855 : __T ProxyHandler.t) ->
            ProxyHandler.t_to_js __T_to_js x10855
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10861 : Ojs.t) -> parent_of_js T.t_of_js x10861
    and t_to_js : t -> Ojs.t =
      fun (x10859 : T.t parent) -> parent_to_js T.t_to_js x10859
    let (apply_ : t -> target:T.t -> thisArg:any -> argArray:any list -> any)
      =
      fun (x10867 : t) ->
        fun ~target:(x10863 : T.t) ->
          fun ~thisArg:(x10864 : any) ->
            fun ~argArray:(x10865 : any list) ->
              any_of_js
                (Ojs.call (t_to_js x10867) "apply"
                   [|(T.t_to_js x10863);(any_to_js x10864);(Ojs.list_to_js
                                                              any_to_js
                                                              x10865)|])
    let (construct :
      t ->
        target:T.t ->
          argArray:any list -> newTarget:Function.t -> untyped_object)
      =
      fun (x10872 : t) ->
        fun ~target:(x10868 : T.t) ->
          fun ~argArray:(x10869 : any list) ->
            fun ~newTarget:(x10871 : Function.t) ->
              untyped_object_of_js
                (Ojs.call (t_to_js x10872) "construct"
                   [|(T.t_to_js x10868);(Ojs.list_to_js any_to_js x10869);(
                     Function.t_to_js x10871)|])
    let (defineProperty :
      t ->
        target:T.t ->
          p:[ `U1 of string  | `U2 of symbol ] ->
            attributes:PropertyDescriptor.t -> bool)
      =
      fun (x10878 : t) ->
        fun ~target:(x10873 : T.t) ->
          fun ~p:(x10874 : [ `U1 of string  | `U2 of symbol ]) ->
            fun ~attributes:(x10877 : PropertyDescriptor.t) ->
              Ojs.bool_of_js
                (Ojs.call (t_to_js x10878) "defineProperty"
                   [|(T.t_to_js x10873);((match x10874 with
                                          | `U1 x10875 ->
                                              Ojs.string_to_js x10875
                                          | `U2 x10876 -> symbol_to_js x10876));(
                     PropertyDescriptor.t_to_js x10877)|])
    let (deleteProperty :
      t -> target:T.t -> p:[ `U1 of string  | `U2 of symbol ] -> bool) =
      fun (x10883 : t) ->
        fun ~target:(x10879 : T.t) ->
          fun ~p:(x10880 : [ `U1 of string  | `U2 of symbol ]) ->
            Ojs.bool_of_js
              (Ojs.call (t_to_js x10883) "deleteProperty"
                 [|(T.t_to_js x10879);((match x10880 with
                                        | `U1 x10881 ->
                                            Ojs.string_to_js x10881
                                        | `U2 x10882 -> symbol_to_js x10882))|])
    let (get_ :
      t ->
        target:T.t ->
          p:[ `U1 of string  | `U2 of symbol ] -> receiver:any -> any)
      =
      fun (x10889 : t) ->
        fun ~target:(x10884 : T.t) ->
          fun ~p:(x10885 : [ `U1 of string  | `U2 of symbol ]) ->
            fun ~receiver:(x10888 : any) ->
              any_of_js
                (Ojs.call (t_to_js x10889) "get"
                   [|(T.t_to_js x10884);((match x10885 with
                                          | `U1 x10886 ->
                                              Ojs.string_to_js x10886
                                          | `U2 x10887 -> symbol_to_js x10887));(
                     any_to_js x10888)|])
    let (getOwnPropertyDescriptor :
      t ->
        target:T.t ->
          p:[ `U1 of string  | `U2 of symbol ] -> PropertyDescriptor.t option)
      =
      fun (x10894 : t) ->
        fun ~target:(x10890 : T.t) ->
          fun ~p:(x10891 : [ `U1 of string  | `U2 of symbol ]) ->
            Ojs.option_of_js PropertyDescriptor.t_of_js
              (Ojs.call (t_to_js x10894) "getOwnPropertyDescriptor"
                 [|(T.t_to_js x10890);((match x10891 with
                                        | `U1 x10892 ->
                                            Ojs.string_to_js x10892
                                        | `U2 x10893 -> symbol_to_js x10893))|])
    let (getPrototypeOf : t -> target:T.t -> untyped_object option) =
      fun (x10897 : t) ->
        fun ~target:(x10896 : T.t) ->
          Ojs.option_of_js untyped_object_of_js
            (Ojs.call (t_to_js x10897) "getPrototypeOf"
               [|(T.t_to_js x10896)|])
    let (has :
      t -> target:T.t -> p:[ `U1 of string  | `U2 of symbol ] -> bool) =
      fun (x10903 : t) ->
        fun ~target:(x10899 : T.t) ->
          fun ~p:(x10900 : [ `U1 of string  | `U2 of symbol ]) ->
            Ojs.bool_of_js
              (Ojs.call (t_to_js x10903) "has"
                 [|(T.t_to_js x10899);((match x10900 with
                                        | `U1 x10901 ->
                                            Ojs.string_to_js x10901
                                        | `U2 x10902 -> symbol_to_js x10902))|])
    let (isExtensible : t -> target:T.t -> bool) =
      fun (x10905 : t) ->
        fun ~target:(x10904 : T.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x10905) "isExtensible" [|(T.t_to_js x10904)|])
    let (ownKeys :
      t ->
        target:T.t ->
          [ `String of string  | `Symbol of symbol ] Primitive.t ArrayLike.t)
      =
      fun (x10907 : t) ->
        fun ~target:(x10906 : T.t) ->
          ArrayLike.t_of_js
            (fun (x10908 : Ojs.t) ->
               Primitive.t_of_js
                 (fun (x10909 : Ojs.t) ->
                    let x10910 = x10909 in
                    match Ojs.string_of_js
                            (Ojs.get_prop_ascii x10910 "dummy")
                    with
                    | "String" -> `String (Ojs.string_of_js x10910)
                    | "Symbol" -> `Symbol (symbol_of_js x10910)
                    | _ -> assert false) x10908)
            (Ojs.call (t_to_js x10907) "ownKeys" [|(T.t_to_js x10906)|])
    let (preventExtensions : t -> target:T.t -> bool) =
      fun (x10912 : t) ->
        fun ~target:(x10911 : T.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x10912) "preventExtensions"
               [|(T.t_to_js x10911)|])
    let (set_ :
      t ->
        target:T.t ->
          p:[ `U1 of string  | `U2 of symbol ] ->
            value:any -> receiver:any -> bool)
      =
      fun (x10919 : t) ->
        fun ~target:(x10913 : T.t) ->
          fun ~p:(x10914 : [ `U1 of string  | `U2 of symbol ]) ->
            fun ~value:(x10917 : any) ->
              fun ~receiver:(x10918 : any) ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x10919) "set"
                     [|(T.t_to_js x10913);((match x10914 with
                                            | `U1 x10915 ->
                                                Ojs.string_to_js x10915
                                            | `U2 x10916 ->
                                                symbol_to_js x10916));(
                       any_to_js x10917);(any_to_js x10918)|])
    let (setPrototypeOf : t -> target:T.t -> v:untyped_object option -> bool)
      =
      fun (x10923 : t) ->
        fun ~target:(x10920 : T.t) ->
          fun ~v:(x10921 : untyped_object option) ->
            Ojs.bool_of_js
              (Ojs.call (t_to_js x10923) "setPrototypeOf"
                 [|(T.t_to_js x10920);(Ojs.option_to_js untyped_object_to_js
                                         x10921)|])
  end
module AsyncGenerator_Make(T:Ojs.T)(TReturn:Ojs.T)(TNext:Ojs.T) =
  struct
    type ('T, 'TReturn, 'TNext) parent =
      ('T, 'TReturn, 'TNext) AsyncGenerator.t
    let rec parent_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) parent
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
                fun (__TNext_of_js : Ojs.t -> __TNext) ->
                  fun (x10928 : Ojs.t) ->
                    AsyncGenerator.t_of_js __T_of_js __TReturn_of_js
                      __TNext_of_js x10928
    and parent_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) parent -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
                fun (__TNext_to_js : __TNext -> Ojs.t) ->
                  fun (x10924 : (__T, __TReturn, __TNext) AsyncGenerator.t)
                    ->
                    AsyncGenerator.t_to_js __T_to_js __TReturn_to_js
                      __TNext_to_js x10924
    type t = (T.t, TReturn.t, TNext.t) parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10936 : Ojs.t) ->
        parent_of_js T.t_of_js TReturn.t_of_js TNext.t_of_js x10936
    and t_to_js : t -> Ojs.t =
      fun (x10932 : (T.t, TReturn.t, TNext.t) parent) ->
        parent_to_js T.t_to_js TReturn.t_to_js TNext.t_to_js x10932
    let (next :
      t -> args:any list -> (T.t, TReturn.t) IteratorResult.t Promise.t) =
      fun (x10943 : t) ->
        fun ~args:(x10940 : any list) ->
          Promise.t_of_js
            (fun (x10945 : Ojs.t) ->
               IteratorResult.t_of_js T.t_of_js TReturn.t_of_js x10945)
            (let x10944 = t_to_js x10943 in
             Ojs.call (Ojs.get_prop_ascii x10944 "next") "apply"
               [|x10944;((let x10941 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x10942 : any) ->
                               ignore
                                 (Ojs.call x10941 "push"
                                    [|(any_to_js x10942)|])) x10940;
                          x10941))|])
    let (return :
      t ->
        value:[ `U1 of TReturn.t  | `U2 of TReturn.t PromiseLike.t ] ->
          (T.t, TReturn.t) IteratorResult.t Promise.t)
      =
      fun (x10952 : t) ->
        fun
          ~value:(x10948 :
                   [ `U1 of TReturn.t  | `U2 of TReturn.t PromiseLike.t ])
          ->
          Promise.t_of_js
            (fun (x10953 : Ojs.t) ->
               IteratorResult.t_of_js T.t_of_js TReturn.t_of_js x10953)
            (Ojs.call (t_to_js x10952) "return"
               [|((match x10948 with
                   | `U1 x10949 -> TReturn.t_to_js x10949
                   | `U2 x10950 -> PromiseLike.t_to_js TReturn.t_to_js x10950))|])
    let (throw : t -> e:any -> (T.t, TReturn.t) IteratorResult.t Promise.t) =
      fun (x10957 : t) ->
        fun ~e:(x10956 : any) ->
          Promise.t_of_js
            (fun (x10958 : Ojs.t) ->
               IteratorResult.t_of_js T.t_of_js TReturn.t_of_js x10958)
            (Ojs.call (t_to_js x10957) "throw" [|(any_to_js x10956)|])
  end
module AsyncIterator_Make(T:Ojs.T)(TReturn:Ojs.T)(TNext:Ojs.T) =
  struct
    type ('T, 'TReturn, 'TNext) parent =
      ('T, 'TReturn, 'TNext) AsyncIterator.t
    let rec parent_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) parent
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_of_js : Ojs.t -> __T) ->
              fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
                fun (__TNext_of_js : Ojs.t -> __TNext) ->
                  fun (x10965 : Ojs.t) ->
                    AsyncIterator.t_of_js __T_of_js __TReturn_of_js
                      __TNext_of_js x10965
    and parent_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) parent -> Ojs.t
      =
      fun (type __T) ->
        fun (type __TReturn) ->
          fun (type __TNext) ->
            fun (__T_to_js : __T -> Ojs.t) ->
              fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
                fun (__TNext_to_js : __TNext -> Ojs.t) ->
                  fun (x10961 : (__T, __TReturn, __TNext) AsyncIterator.t) ->
                    AsyncIterator.t_to_js __T_to_js __TReturn_to_js
                      __TNext_to_js x10961
    type t = (T.t, TReturn.t, TNext.t) parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10973 : Ojs.t) ->
        parent_of_js T.t_of_js TReturn.t_of_js TNext.t_of_js x10973
    and t_to_js : t -> Ojs.t =
      fun (x10969 : (T.t, TReturn.t, TNext.t) parent) ->
        parent_to_js T.t_to_js TReturn.t_to_js TNext.t_to_js x10969
    let (next :
      t -> args:any list -> (T.t, TReturn.t) IteratorResult.t Promise.t) =
      fun (x10980 : t) ->
        fun ~args:(x10977 : any list) ->
          Promise.t_of_js
            (fun (x10982 : Ojs.t) ->
               IteratorResult.t_of_js T.t_of_js TReturn.t_of_js x10982)
            (let x10981 = t_to_js x10980 in
             Ojs.call (Ojs.get_prop_ascii x10981 "next") "apply"
               [|x10981;((let x10978 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x10979 : any) ->
                               ignore
                                 (Ojs.call x10978 "push"
                                    [|(any_to_js x10979)|])) x10977;
                          x10978))|])
    let (return :
      t ->
        ?value:[ `U1 of TReturn.t  | `U2 of TReturn.t PromiseLike.t ] ->
          unit -> (T.t, TReturn.t) IteratorResult.t Promise.t)
      =
      fun (x10991 : t) ->
        fun
          ?value:(x10985 :
                   [ `U1 of TReturn.t  | `U2 of TReturn.t PromiseLike.t ]
                     option)
          ->
          fun () ->
            Promise.t_of_js
              (fun (x10993 : Ojs.t) ->
                 IteratorResult.t_of_js T.t_of_js TReturn.t_of_js x10993)
              (let x10992 = t_to_js x10991 in
               Ojs.call (Ojs.get_prop_ascii x10992 "return") "apply"
                 [|x10992;((let x10986 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10985 with
                             | Some x10987 ->
                                 ignore
                                   (Ojs.call x10986 "push"
                                      [|((match x10987 with
                                          | `U1 x10988 ->
                                              TReturn.t_to_js x10988
                                          | `U2 x10989 ->
                                              PromiseLike.t_to_js
                                                TReturn.t_to_js x10989))|])
                             | None -> ());
                            x10986))|])
    let (throw :
      t -> ?e:any -> unit -> (T.t, TReturn.t) IteratorResult.t Promise.t) =
      fun (x10999 : t) ->
        fun ?e:(x10996 : any option) ->
          fun () ->
            Promise.t_of_js
              (fun (x11001 : Ojs.t) ->
                 IteratorResult.t_of_js T.t_of_js TReturn.t_of_js x11001)
              (let x11000 = t_to_js x10999 in
               Ojs.call (Ojs.get_prop_ascii x11000 "throw") "apply"
                 [|x11000;((let x10997 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10996 with
                             | Some x10998 ->
                                 ignore
                                   (Ojs.call x10997 "push"
                                      [|(any_to_js x10998)|])
                             | None -> ());
                            x10997))|])
  end
module PromiseFulfilledResult_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T PromiseFulfilledResult.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x11006 : Ojs.t) ->
            PromiseFulfilledResult.t_of_js __T_of_js x11006
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x11004 : __T PromiseFulfilledResult.t) ->
            PromiseFulfilledResult.t_to_js __T_to_js x11004
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11010 : Ojs.t) -> parent_of_js T.t_of_js x11010
    and t_to_js : t -> Ojs.t =
      fun (x11008 : T.t parent) -> parent_to_js T.t_to_js x11008
    let (get_status : t -> [ `L_s43_fulfilled ]) =
      fun (x11012 : t) ->
        let x11013 = Ojs.get_prop_ascii (t_to_js x11012) "status" in
        match Ojs.string_of_js x11013 with
        | "fulfilled" -> `L_s43_fulfilled
        | _ -> assert false
    let (set_status : t -> [ `L_s43_fulfilled ] -> unit) =
      fun (x11014 : t) ->
        fun (x11015 : [ `L_s43_fulfilled ]) ->
          Ojs.set_prop_ascii (t_to_js x11014) "status"
            (match x11015 with
             | `L_s43_fulfilled -> Ojs.string_to_js "fulfilled")
    let (get_value : t -> T.t) =
      fun (x11016 : t) ->
        T.t_of_js (Ojs.get_prop_ascii (t_to_js x11016) "value")
    let (set_value : t -> T.t -> unit) =
      fun (x11017 : t) ->
        fun (x11018 : T.t) ->
          Ojs.set_prop_ascii (t_to_js x11017) "value" (T.t_to_js x11018)
  end
module WeakRef_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T WeakRef.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x11021 : Ojs.t) -> WeakRef.t_of_js __T_of_js x11021
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x11019 : __T WeakRef.t) -> WeakRef.t_to_js __T_to_js x11019
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11025 : Ojs.t) -> parent_of_js T.t_of_js x11025
    and t_to_js : t -> Ojs.t =
      fun (x11023 : T.t parent) -> parent_to_js T.t_to_js x11023
    let (deref : t -> T.t option) =
      fun (x11027 : t) ->
        Ojs.option_of_js T.t_of_js (Ojs.call (t_to_js x11027) "deref" [||])
    let (deref' : t -> T.t option) =
      fun (x11029 : t) ->
        Ojs.option_of_js T.t_of_js (Ojs.call (t_to_js x11029) "deref" [||])
    let (prototype : unit -> any parent) =
      fun () ->
        parent_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakRef")
             "prototype")
    let (create : ?target:T.t -> unit -> t) =
      fun ?target:(x11032 : T.t option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "WeakRef")
               (let x11033 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x11032 with
                 | Some x11034 ->
                     ignore (Ojs.call x11033 "push" [|(T.t_to_js x11034)|])
                 | None -> ());
                x11033))
    let (prototype' : unit -> any parent) =
      fun () ->
        parent_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakRef")
             "prototype")
    let (create' : T.t -> t) =
      fun (x11036 : T.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WeakRef")
             [|(T.t_to_js x11036)|])
  end
module FinalizationRegistry_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T FinalizationRegistry.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
      fun (type __T) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x11039 : Ojs.t) ->
            FinalizationRegistry.t_of_js __T_of_js x11039
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t =
      fun (type __T) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x11037 : __T FinalizationRegistry.t) ->
            FinalizationRegistry.t_to_js __T_to_js x11037
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x11043 : Ojs.t) -> parent_of_js T.t_of_js x11043
    and t_to_js : t -> Ojs.t =
      fun (x11041 : T.t parent) -> parent_to_js T.t_to_js x11041
    let (register :
      t ->
        target:untyped_object ->
          heldValue:any -> ?unregisterToken:untyped_object -> unit -> unit)
      =
      fun (x11050 : t) ->
        fun ~target:(x11045 : untyped_object) ->
          fun ~heldValue:(x11046 : any) ->
            fun ?unregisterToken:(x11047 : untyped_object option) ->
              fun () ->
                ignore
                  (let x11051 = t_to_js x11050 in
                   Ojs.call (Ojs.get_prop_ascii x11051 "register") "apply"
                     [|x11051;((let x11048 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                ignore
                                  (Ojs.call x11048 "push"
                                     [|(untyped_object_to_js x11045)|]);
                                ignore
                                  (Ojs.call x11048 "push"
                                     [|(any_to_js x11046)|]);
                                (match x11047 with
                                 | Some x11049 ->
                                     ignore
                                       (Ojs.call x11048 "push"
                                          [|(untyped_object_to_js x11049)|])
                                 | None -> ());
                                x11048))|])
    let (unregister : t -> unregisterToken:untyped_object -> unit) =
      fun (x11053 : t) ->
        fun ~unregisterToken:(x11052 : untyped_object) ->
          ignore
            (Ojs.call (t_to_js x11053) "unregister"
               [|(untyped_object_to_js x11052)|])
    let (register' :
      t ->
        target:untyped_object ->
          heldValue:T.t -> ?unregisterToken:untyped_object -> unit -> unit)
      =
      fun (x11059 : t) ->
        fun ~target:(x11054 : untyped_object) ->
          fun ~heldValue:(x11055 : T.t) ->
            fun ?unregisterToken:(x11056 : untyped_object option) ->
              fun () ->
                ignore
                  (let x11060 = t_to_js x11059 in
                   Ojs.call (Ojs.get_prop_ascii x11060 "register") "apply"
                     [|x11060;((let x11057 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                ignore
                                  (Ojs.call x11057 "push"
                                     [|(untyped_object_to_js x11054)|]);
                                ignore
                                  (Ojs.call x11057 "push"
                                     [|(T.t_to_js x11055)|]);
                                (match x11056 with
                                 | Some x11058 ->
                                     ignore
                                       (Ojs.call x11057 "push"
                                          [|(untyped_object_to_js x11058)|])
                                 | None -> ());
                                x11057))|])
    let (unregister' : t -> unregisterToken:untyped_object -> unit) =
      fun (x11062 : t) ->
        fun ~unregisterToken:(x11061 : untyped_object) ->
          ignore
            (Ojs.call (t_to_js x11062) "unregister"
               [|(untyped_object_to_js x11061)|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             "prototype")
    let (create : (any -> unit) -> t) =
      fun (x11063 : any -> unit) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             [|(Ojs.fun_to_js 1
                  (fun (x11064 : Ojs.t) -> x11063 (any_of_js x11064)))|])
    let (prototype' : unit -> any parent) =
      fun () ->
        parent_of_js any_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             "prototype")
    let (create' : (T.t -> unit) -> t) =
      fun (x11066 : T.t -> unit) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             [|(Ojs.fun_to_js 1
                  (fun (x11067 : Ojs.t) -> x11066 (T.t_of_js x11067)))|])
  end
let (nan : unit -> float) =
  fun () -> Ojs.float_of_js (Ojs.get_prop_ascii Ojs.global "NaN")
let (infinity : unit -> float) =
  fun () -> Ojs.float_of_js (Ojs.get_prop_ascii Ojs.global "Infinity")
let (eval : string -> any) =
  fun (x11068 : string) ->
    any_of_js (Ojs.call Ojs.global "eval" [|(Ojs.string_to_js x11068)|])
let (parseInt : string:string -> ?radix:float -> unit -> float) =
  fun ~string:(x11069 : string) ->
    fun ?radix:(x11070 : float option) ->
      fun () ->
        Ojs.float_of_js
          (let x11073 = Ojs.global in
           Ojs.call (Ojs.get_prop_ascii x11073 "parseInt") "apply"
             [|x11073;((let x11071 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        ignore
                          (Ojs.call x11071 "push"
                             [|(Ojs.string_to_js x11069)|]);
                        (match x11070 with
                         | Some x11072 ->
                             ignore
                               (Ojs.call x11071 "push"
                                  [|(Ojs.float_to_js x11072)|])
                         | None -> ());
                        x11071))|])
let (parseFloat : string -> float) =
  fun (x11074 : string) ->
    Ojs.float_of_js
      (Ojs.call Ojs.global "parseFloat" [|(Ojs.string_to_js x11074)|])
let (isNaN : float -> bool) =
  fun (x11075 : float) ->
    Ojs.bool_of_js (Ojs.call Ojs.global "isNaN" [|(Ojs.float_to_js x11075)|])
let (isFinite : float -> bool) =
  fun (x11076 : float) ->
    Ojs.bool_of_js
      (Ojs.call Ojs.global "isFinite" [|(Ojs.float_to_js x11076)|])
let (decodeURI : string -> string) =
  fun (x11077 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "decodeURI" [|(Ojs.string_to_js x11077)|])
let (decodeURIComponent : string -> string) =
  fun (x11078 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "decodeURIComponent" [|(Ojs.string_to_js x11078)|])
let (encodeURI : string -> string) =
  fun (x11079 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "encodeURI" [|(Ojs.string_to_js x11079)|])
let (encodeURIComponent :
  [ `Number of float  | `String of string  | `Boolean of bool ] Primitive.t
    -> string)
  =
  fun
    (x11080 :
      [ `Number of float  | `String of string  | `Boolean of bool ]
        Primitive.t)
    ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "encodeURIComponent"
         [|(Primitive.t_to_js
              (fun
                 (x11081 :
                   [ `Number of float  | `String of string 
                   | `Boolean of bool ])
                 ->
                 match x11081 with
                 | `Number x11082 -> Ojs.float_to_js x11082
                 | `String x11083 -> Ojs.string_to_js x11083
                 | `Boolean x11084 -> Ojs.bool_to_js x11084) x11080)|])
let (escape : string -> string) =
  fun (x11085 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "escape" [|(Ojs.string_to_js x11085)|])
let (unescape : string -> string) =
  fun (x11086 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "unescape" [|(Ojs.string_to_js x11086)|])
let (proxy : unit -> ProxyConstructor.t) =
  fun () -> ProxyConstructor.t_of_js (Ojs.get_prop_ascii Ojs.global "Proxy")
