[@@@js.dummy "!! This code has been generated by gen_js_api !!"]
[@@@ocaml.warning "-7-32-39"]
[@@@ocaml.warning "-7-11-32-33-39"]
open Ts2ocaml_min
module IteratorYieldResult =
  struct
    type 'TYield t = [ `IteratorYieldResult of 'TYield ] intf
    let rec t_of_js : 'TYield . (Ojs.t -> 'TYield) -> Ojs.t -> 'TYield t =
      fun _TYield -> Obj.magic
    and t_to_js : 'TYield . ('TYield -> Ojs.t) -> 'TYield t -> Ojs.t =
      fun _TYield -> Obj.magic
    type 'TYield t_1 = 'TYield t
    let rec t_1_of_js : 'TYield . (Ojs.t -> 'TYield) -> Ojs.t -> 'TYield t_1
      = fun (type __TYield) ->
      fun (__TYield_of_js : Ojs.t -> __TYield) ->
        fun (x3 : Ojs.t) -> t_of_js __TYield_of_js x3
    and t_1_to_js : 'TYield . ('TYield -> Ojs.t) -> 'TYield t_1 -> Ojs.t =
      fun (type __TYield) ->
      fun (__TYield_to_js : __TYield -> Ojs.t) ->
        fun (x1 : __TYield t) -> t_to_js __TYield_to_js x1
    type 'TYield tags = [ `IteratorYieldResult of 'TYield ]
    type 'TYield tags_1 = 'TYield tags
    type ('tags, 'TYield) this =
      'tags intf constraint 'tags = [> `IteratorYieldResult of 'TYield ]
    let rec this_of_js :
      'tags 'TYield .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'TYield) -> Ojs.t -> ('tags, 'TYield) this
      = fun (type __tags) -> fun (type __TYield) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__TYield_of_js : Ojs.t -> __TYield) ->
          fun (x7 : Ojs.t) -> intf_of_js __tags_of_js x7
    and this_to_js :
      'tags 'TYield .
        ('tags -> Ojs.t) ->
          ('TYield -> Ojs.t) -> ('tags, 'TYield) this -> Ojs.t
      = fun (type __tags) -> fun (type __TYield) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__TYield_to_js : __TYield -> Ojs.t) ->
          fun (x5 : __tags intf) -> intf_to_js __tags_to_js x5
    let (get_done : ('tags, 'TYield) this -> [ `L_b_false ]) =
      fun (x9 : ('tags, 'TYield) this) ->
        let x12 =
          Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x9) "done" in
        match Ojs.bool_of_js x12 with
        | false -> `L_b_false
        | _ -> assert false
    let (set_done : ('tags, 'TYield) this -> [ `L_b_false ] -> unit) =
      fun (x13 : ('tags, 'TYield) this) ->
        fun (x14 : [ `L_b_false ]) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x13) "done"
            (match x14 with | `L_b_false -> Ojs.bool_to_js false)
    let (get_value : ('tags, 'TYield) this -> 'TYield) =
      fun (x17 : ('tags, 'TYield) this) ->
        Obj.magic
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x17) "value")
    let (set_value : ('tags, 'TYield) this -> 'TYield -> unit) =
      fun (x20 : ('tags, 'TYield) this) ->
        fun (x21 : 'TYield) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x20) "value"
            (Obj.magic x21)
    let (create : done_:[ `L_b_false ] -> value:'TYield -> unit -> 'TYield t)
      =
      fun ~done_:(x24 : [ `L_b_false ]) ->
        fun ~value:(x25 : 'TYield) ->
          fun () ->
            let x26 = Ojs.empty_obj () in
            Ojs.set_prop_ascii x26 "done"
              (match x24 with | `L_b_false -> Ojs.bool_to_js false);
            Ojs.set_prop_ascii x26 "value" (Obj.magic x25);
            t_of_js Obj.magic x26
    let cast_from = Obj.magic
  end
module IteratorReturnResult =
  struct
    type 'TReturn t = [ `IteratorReturnResult of 'TReturn ] intf
    let rec t_of_js : 'TReturn . (Ojs.t -> 'TReturn) -> Ojs.t -> 'TReturn t =
      fun _TReturn -> Obj.magic
    and t_to_js : 'TReturn . ('TReturn -> Ojs.t) -> 'TReturn t -> Ojs.t =
      fun _TReturn -> Obj.magic
    type 'TReturn t_1 = 'TReturn t
    let rec t_1_of_js :
      'TReturn . (Ojs.t -> 'TReturn) -> Ojs.t -> 'TReturn t_1 = fun (type
      __TReturn) ->
      fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
        fun (x30 : Ojs.t) -> t_of_js __TReturn_of_js x30
    and t_1_to_js : 'TReturn . ('TReturn -> Ojs.t) -> 'TReturn t_1 -> Ojs.t =
      fun (type __TReturn) ->
      fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
        fun (x28 : __TReturn t) -> t_to_js __TReturn_to_js x28
    type 'TReturn tags = [ `IteratorReturnResult of 'TReturn ]
    type 'TReturn tags_1 = 'TReturn tags
    type ('tags, 'TReturn) this =
      'tags intf constraint 'tags = [> `IteratorReturnResult of 'TReturn ]
    let rec this_of_js :
      'tags 'TReturn .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'TReturn) -> Ojs.t -> ('tags, 'TReturn) this
      = fun (type __tags) -> fun (type __TReturn) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (x34 : Ojs.t) -> intf_of_js __tags_of_js x34
    and this_to_js :
      'tags 'TReturn .
        ('tags -> Ojs.t) ->
          ('TReturn -> Ojs.t) -> ('tags, 'TReturn) this -> Ojs.t
      = fun (type __tags) -> fun (type __TReturn) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (x32 : __tags intf) -> intf_to_js __tags_to_js x32
    let (get_done : ('tags, 'TReturn) this -> [ `L_b_true ]) =
      fun (x36 : ('tags, 'TReturn) this) ->
        let x39 =
          Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x36) "done" in
        match Ojs.bool_of_js x39 with | true -> `L_b_true | _ -> assert false
    let (set_done : ('tags, 'TReturn) this -> [ `L_b_true ] -> unit) =
      fun (x40 : ('tags, 'TReturn) this) ->
        fun (x41 : [ `L_b_true ]) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x40) "done"
            (match x41 with | `L_b_true -> Ojs.bool_to_js true)
    let (get_value : ('tags, 'TReturn) this -> 'TReturn) =
      fun (x44 : ('tags, 'TReturn) this) ->
        Obj.magic
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x44) "value")
    let (set_value : ('tags, 'TReturn) this -> 'TReturn -> unit) =
      fun (x47 : ('tags, 'TReturn) this) ->
        fun (x48 : 'TReturn) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x47) "value"
            (Obj.magic x48)
    let (create :
      done_:[ `L_b_true ] -> value:'TReturn -> unit -> 'TReturn t) =
      fun ~done_:(x51 : [ `L_b_true ]) ->
        fun ~value:(x52 : 'TReturn) ->
          fun () ->
            let x53 = Ojs.empty_obj () in
            Ojs.set_prop_ascii x53 "done"
              (match x51 with | `L_b_true -> Ojs.bool_to_js true);
            Ojs.set_prop_ascii x53 "value" (Obj.magic x52);
            t_of_js Obj.magic x53
    let cast_from = Obj.magic
  end
module IteratorResult =
  struct
    type ('T, 'TReturn) t =
      [ `U_b_false of 'T IteratorYieldResult.t 
      | `U_b_true of 'TReturn IteratorReturnResult.t ]
    let rec t_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (x60 : Ojs.t) ->
            let x61 = x60 in
            match Ojs.bool_of_js (Ojs.get_prop_ascii x61 "done") with
            | false -> `U_b_false (IteratorYieldResult.t_of_js __T_of_js x61)
            | true ->
                `U_b_true (IteratorReturnResult.t_of_js __TReturn_of_js x61)
    and t_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun
            (x55 :
              [ `U_b_false of __T IteratorYieldResult.t 
              | `U_b_true of __TReturn IteratorReturnResult.t ])
            ->
            match x55 with
            | `U_b_false x56 -> IteratorYieldResult.t_to_js __T_to_js x56
            | `U_b_true x58 ->
                IteratorReturnResult.t_to_js __TReturn_to_js x58
    type ('T, 'TReturn) t_2 = ('T, 'TReturn) t
    let rec t_2_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t_2
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (x67 : Ojs.t) -> t_of_js __T_of_js __TReturn_of_js x67
    and t_2_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t_2 -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (x64 : (__T, __TReturn) t) ->
            t_to_js __T_to_js __TReturn_to_js x64
    type 'T t_1 = ('T, any) t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x73 : Ojs.t) -> t_of_js __T_of_js any_of_js x73
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x70 : (__T, any) t) -> t_to_js __T_to_js any_to_js x70
  end
module Iterator =
  struct
    type ('T, 'TReturn, 'TNext) t =
      [ `Iterator of ('T * 'TReturn * 'TNext) ] intf
    let rec t_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    and t_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t -> Ojs.t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    type ('T, 'TReturn, 'TNext) t_3 = ('T, 'TReturn, 'TNext) t
    let rec t_3_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t_3
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (__TNext_of_js : Ojs.t -> __TNext) ->
            fun (x80 : Ojs.t) ->
              t_of_js __T_of_js __TReturn_of_js __TNext_of_js x80
    and t_3_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t_3 -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (__TNext_to_js : __TNext -> Ojs.t) ->
            fun (x76 : (__T, __TReturn, __TNext) t) ->
              t_to_js __T_to_js __TReturn_to_js __TNext_to_js x76
    type ('T, 'TReturn) t_2 = ('T, 'TReturn, undefined) t
    let rec t_2_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t_2
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (x88 : Ojs.t) ->
            t_of_js __T_of_js __TReturn_of_js undefined_of_js x88
    and t_2_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t_2 -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (x84 : (__T, __TReturn, undefined) t) ->
            t_to_js __T_to_js __TReturn_to_js undefined_to_js x84
    type 'T t_1 = ('T, any, undefined) t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x96 : Ojs.t) -> t_of_js __T_of_js any_of_js undefined_of_js x96
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x92 : (__T, any, undefined) t) ->
          t_to_js __T_to_js any_to_js undefined_to_js x92
    type ('T, 'TReturn, 'TNext) tags =
      [ `Iterator of ('T * 'TReturn * 'TNext) ]
    type ('T, 'TReturn, 'TNext) tags_3 = ('T, 'TReturn, 'TNext) tags
    type ('T, 'TReturn) tags_2 = ('T, 'TReturn, undefined) tags
    type 'T tags_1 = ('T, any, undefined) tags
    type ('tags, 'T, 'TReturn, 'TNext) this =
      'tags intf constraint 'tags =
                  [> `Iterator of ('T * 'TReturn * 'TNext) ]
    let rec this_of_js :
      'tags 'T 'TReturn 'TNext .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'T) ->
            (Ojs.t -> 'TReturn) ->
              (Ojs.t -> 'TNext) ->
                Ojs.t -> ('tags, 'T, 'TReturn, 'TNext) this
      = fun (type __tags) -> fun (type __T) -> fun (type __TReturn) -> fun
      (type __TNext) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
            fun (__TNext_of_js : Ojs.t -> __TNext) ->
              fun (x102 : Ojs.t) -> intf_of_js __tags_of_js x102
    and this_to_js :
      'tags 'T 'TReturn 'TNext .
        ('tags -> Ojs.t) ->
          ('T -> Ojs.t) ->
            ('TReturn -> Ojs.t) ->
              ('TNext -> Ojs.t) ->
                ('tags, 'T, 'TReturn, 'TNext) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) -> fun (type __TReturn) -> fun
      (type __TNext) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
            fun (__TNext_to_js : __TNext -> Ojs.t) ->
              fun (x100 : __tags intf) -> intf_to_js __tags_to_js x100
    let (next :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        args:any list -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x107 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~args:(x104 : any list) ->
          IteratorResult.t_of_js Obj.magic Obj.magic
            (let x112 =
               this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x107 in
             Ojs.call (Ojs.get_prop_ascii x112 "next") "apply"
               [|x112;((let x105 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x106 : any) ->
                             ignore
                               (Ojs.call x105 "push" [|(any_to_js x106)|]))
                          x104;
                        x105))|])
    let (return :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        ?value:'TReturn -> unit -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x118 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ?value:(x115 : 'TReturn option) ->
          fun () ->
            IteratorResult.t_of_js Obj.magic Obj.magic
              (let x123 =
                 this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x118 in
               Ojs.call (Ojs.get_prop_ascii x123 "return") "apply"
                 [|x123;((let x116 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x115 with
                           | Some x117 ->
                               ignore
                                 (Ojs.call x116 "push" [|(Obj.magic x117)|])
                           | None -> ());
                          x116))|])
    let (throw :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        ?e:any -> unit -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x129 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ?e:(x126 : any option) ->
          fun () ->
            IteratorResult.t_of_js Obj.magic Obj.magic
              (let x134 =
                 this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x129 in
               Ojs.call (Ojs.get_prop_ascii x134 "throw") "apply"
                 [|x134;((let x127 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x126 with
                           | Some x128 ->
                               ignore
                                 (Ojs.call x127 "push" [|(any_to_js x128)|])
                           | None -> ());
                          x127))|])
    let cast_from = Obj.magic
  end
module Iterable =
  struct
    type 'T t = [ `Iterable of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x139 : Ojs.t) -> t_of_js __T_of_js x139
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x137 : __T t) -> t_to_js __T_to_js x137
    type 'T tags = [ `Iterable of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `Iterable of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x143 : Ojs.t) -> intf_of_js __tags_of_js x143
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x141 : __tags intf) -> intf_to_js __tags_to_js x141
    let cast_from = Obj.magic
  end
module WeakSet =
  struct
    type 'T t = [ `WeakSet of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x147 : Ojs.t) -> t_of_js __T_of_js x147
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x145 : __T t) -> t_to_js __T_to_js x145
    type 'T tags = [ `WeakSet of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this = 'tags intf constraint 'tags = [> `WeakSet of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x151 : Ojs.t) -> intf_of_js __tags_of_js x151
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x149 : __tags intf) -> intf_to_js __tags_to_js x149
    let (add : ('tags, 'T) this -> value:'T -> ('tags, 'T) this) =
      fun (x154 : ('tags, 'T) this) ->
        fun ~value:(x153 : 'T) ->
          this_of_js Obj.magic Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x154) "add"
               [|(Obj.magic x153)|])
    let (delete : ('tags, 'T) this -> value:'T -> bool) =
      fun (x160 : ('tags, 'T) this) ->
        fun ~value:(x159 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x160) "delete"
               [|(Obj.magic x159)|])
    let (has : ('tags, 'T) this -> value:'T -> bool) =
      fun (x164 : ('tags, 'T) this) ->
        fun ~value:(x163 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x164) "has"
               [|(Obj.magic x163)|])
    let (create : 'T Iterable.t -> 'T t) =
      fun (x167 : 'T Iterable.t) ->
        t_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WeakSet")
             [|(Iterable.t_to_js Obj.magic x167)|])
    let (create' : ?values:'T list option -> unit -> 'T t) =
      fun ?values:(x170 : 'T list option option) ->
        fun () ->
          t_of_js Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "WeakSet")
               (let x171 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x170 with
                 | Some x172 ->
                     ignore
                       (Ojs.call x171 "push"
                          [|(Ojs.option_to_js
                               (fun (x173 : 'T list) ->
                                  Ojs.list_to_js Obj.magic x173) x172)|])
                 | None -> ());
                x171))
    let (prototype : unit -> untyped_object t) =
      fun () ->
        t_of_js untyped_object_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakSet")
             "prototype")
    let cast_from = Obj.magic
  end
module WeakRef =
  struct
    type 'T t = [ `WeakRef of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x179 : Ojs.t) -> t_of_js __T_of_js x179
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x177 : __T t) -> t_to_js __T_to_js x177
    type 'T tags = [ `WeakRef of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this = 'tags intf constraint 'tags = [> `WeakRef of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x183 : Ojs.t) -> intf_of_js __tags_of_js x183
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x181 : __tags intf) -> intf_to_js __tags_to_js x181
    let (deref : ('tags, 'T) this -> 'T option) =
      fun (x185 : ('tags, 'T) this) ->
        Ojs.option_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x185) "deref" [||])
    let (deref' : ('tags, 'T) this -> 'T option) =
      fun (x189 : ('tags, 'T) this) ->
        Ojs.option_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x189) "deref" [||])
    let (prototype : unit -> any t) =
      fun () ->
        t_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakRef")
             "prototype")
    let (create : ?target:'T -> unit -> 'T t) =
      fun ?target:(x194 : 'T option) ->
        fun () ->
          t_of_js Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "WeakRef")
               (let x195 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x194 with
                 | Some x196 ->
                     ignore (Ojs.call x195 "push" [|(Obj.magic x196)|])
                 | None -> ());
                x195))
    let (prototype' : unit -> any t) =
      fun () ->
        t_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakRef")
             "prototype")
    let (create' : 'T -> 'T t) =
      fun (x199 : 'T) ->
        t_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WeakRef")
             [|(Obj.magic x199)|])
    let cast_from = Obj.magic
  end
module WeakMap =
  struct
    type ('K, 'V) t = [ `WeakMap of ('K * 'V) ] intf
    let rec t_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) t =
      fun _K -> fun _V -> Obj.magic
    and t_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) t -> Ojs.t =
      fun _K -> fun _V -> Obj.magic
    type ('K, 'V) t_2 = ('K, 'V) t
    let rec t_2_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) t_2 = fun
      (type __K) -> fun (type __V) ->
      fun (__K_of_js : Ojs.t -> __K) ->
        fun (__V_of_js : Ojs.t -> __V) ->
          fun (x204 : Ojs.t) -> t_of_js __K_of_js __V_of_js x204
    and t_2_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) t_2 -> Ojs.t = fun
      (type __K) -> fun (type __V) ->
      fun (__K_to_js : __K -> Ojs.t) ->
        fun (__V_to_js : __V -> Ojs.t) ->
          fun (x201 : (__K, __V) t) -> t_to_js __K_to_js __V_to_js x201
    type ('K, 'V) tags = [ `WeakMap of ('K * 'V) ]
    type ('K, 'V) tags_2 = ('K, 'V) tags
    type ('tags, 'K, 'V) this =
      'tags intf constraint 'tags = [> `WeakMap of ('K * 'V) ]
    let rec this_of_js :
      'tags 'K 'V .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('tags, 'K, 'V) this
      = fun (type __tags) -> fun (type __K) -> fun (type __V) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__K_of_js : Ojs.t -> __K) ->
          fun (__V_of_js : Ojs.t -> __V) ->
            fun (x209 : Ojs.t) -> intf_of_js __tags_of_js x209
    and this_to_js :
      'tags 'K 'V .
        ('tags -> Ojs.t) ->
          ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('tags, 'K, 'V) this -> Ojs.t
      = fun (type __tags) -> fun (type __K) -> fun (type __V) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__K_to_js : __K -> Ojs.t) ->
          fun (__V_to_js : __V -> Ojs.t) ->
            fun (x207 : __tags intf) -> intf_to_js __tags_to_js x207
    let (delete : ('tags, 'K, 'V) this -> key:'K -> bool) =
      fun (x212 : ('tags, 'K, 'V) this) ->
        fun ~key:(x211 : 'K) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x212)
               "delete" [|(Obj.magic x211)|])
    let (get_ : ('tags, 'K, 'V) this -> key:'K -> 'V option) =
      fun (x217 : ('tags, 'K, 'V) this) ->
        fun ~key:(x216 : 'K) ->
          Ojs.option_of_js Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x217) "get"
               [|(Obj.magic x216)|])
    let (has : ('tags, 'K, 'V) this -> key:'K -> bool) =
      fun (x223 : ('tags, 'K, 'V) this) ->
        fun ~key:(x222 : 'K) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x223) "has"
               [|(Obj.magic x222)|])
    let (set_ :
      ('tags, 'K, 'V) this -> key:'K -> value:'V -> ('tags, 'K, 'V) this) =
      fun (x229 : ('tags, 'K, 'V) this) ->
        fun ~key:(x227 : 'K) ->
          fun ~value:(x228 : 'V) ->
            this_of_js Obj.magic Obj.magic Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x229) "set"
                 [|(Obj.magic x227);(Obj.magic x228)|])
    let (create : ('K * 'V) Iterable.t -> ('K, 'V) t) =
      fun (x236 : ('K * 'V) Iterable.t) ->
        t_of_js Obj.magic Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WeakMap")
             [|(Iterable.t_to_js
                  (fun (x237 : ('K * 'V)) ->
                     let (x238, x239) = x237 in
                     let x240 = Ojs.array_make 2 in
                     Ojs.array_set x240 0 (Obj.magic x238);
                     Ojs.array_set x240 1 (Obj.magic x239);
                     x240) x236)|])
    let (create' : ?entries:('K * 'V) list option -> unit -> ('K, 'V) t) =
      fun ?entries:(x243 : ('K * 'V) list option option) ->
        fun () ->
          t_of_js Obj.magic Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "WeakMap")
               (let x244 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x243 with
                 | Some x245 ->
                     ignore
                       (Ojs.call x244 "push"
                          [|(Ojs.option_to_js
                               (fun (x246 : ('K * 'V) list) ->
                                  Ojs.list_to_js
                                    (fun (x247 : ('K * 'V)) ->
                                       let (x248, x249) = x247 in
                                       let x250 = Ojs.array_make 2 in
                                       Ojs.array_set x250 0 (Obj.magic x248);
                                       Ojs.array_set x250 1 (Obj.magic x249);
                                       x250) x246) x245)|])
                 | None -> ());
                x244))
    let (prototype : unit -> (untyped_object, any) t) =
      fun () ->
        t_of_js untyped_object_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakMap")
             "prototype")
    let cast_from = Obj.magic
  end
module Uppercase =
  struct
    type 'S t = Ojs.t
    let rec t_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t = fun (type __S) ->
      fun (__S_of_js : Ojs.t -> __S) -> fun (x256 : Ojs.t) -> x256
    and t_to_js : 'S . ('S -> Ojs.t) -> 'S t -> Ojs.t = fun (type __S) ->
      fun (__S_to_js : __S -> Ojs.t) -> fun (x255 : Ojs.t) -> x255
    type 'S t_1 = 'S t
    let rec t_1_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t_1 = fun (type
      __S) ->
      fun (__S_of_js : Ojs.t -> __S) ->
        fun (x259 : Ojs.t) -> t_of_js __S_of_js x259
    and t_1_to_js : 'S . ('S -> Ojs.t) -> 'S t_1 -> Ojs.t = fun (type __S) ->
      fun (__S_to_js : __S -> Ojs.t) ->
        fun (x257 : __S t) -> t_to_js __S_to_js x257
  end
module Uncapitalize =
  struct
    type 'S t = Ojs.t
    let rec t_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t = fun (type __S) ->
      fun (__S_of_js : Ojs.t -> __S) -> fun (x262 : Ojs.t) -> x262
    and t_to_js : 'S . ('S -> Ojs.t) -> 'S t -> Ojs.t = fun (type __S) ->
      fun (__S_to_js : __S -> Ojs.t) -> fun (x261 : Ojs.t) -> x261
    type 'S t_1 = 'S t
    let rec t_1_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t_1 = fun (type
      __S) ->
      fun (__S_of_js : Ojs.t -> __S) ->
        fun (x265 : Ojs.t) -> t_of_js __S_of_js x265
    and t_1_to_js : 'S . ('S -> Ojs.t) -> 'S t_1 -> Ojs.t = fun (type __S) ->
      fun (__S_to_js : __S -> Ojs.t) ->
        fun (x263 : __S t) -> t_to_js __S_to_js x263
  end
module SharedArrayBuffer =
  struct
    type t = [ `SharedArrayBuffer ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x268 : Ojs.t) -> t_of_js x268
    and t_0_to_js : t_0 -> Ojs.t = fun (x267 : t) -> t_to_js x267
    type tags = [ `SharedArrayBuffer ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `SharedArrayBuffer ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x271 : Ojs.t) -> intf_of_js __tags_of_js x271
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x269 : __tags intf) -> intf_to_js __tags_to_js x269
    let (get_byteLength : 'tags this -> float) =
      fun (x273 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x273) "byteLength")
    let (slice : 'tags this -> begin_:float -> ?end_:float -> unit -> t) =
      fun (x279 : 'tags this) ->
        fun ~begin_:(x275 : float) ->
          fun ?end_:(x276 : float option) ->
            fun () ->
              t_of_js
                (let x281 = this_to_js Obj.magic x279 in
                 Ojs.call (Ojs.get_prop_ascii x281 "slice") "apply"
                   [|x281;((let x277 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x277 "push"
                                 [|(Ojs.float_to_js x275)|]);
                            (match x276 with
                             | Some x278 ->
                                 ignore
                                   (Ojs.call x277 "push"
                                      [|(Ojs.float_to_js x278)|])
                             | None -> ());
                            x277))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "SharedArrayBuffer") "prototype")
    let (create : float -> t) =
      fun (x282 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "SharedArrayBuffer")
             [|(Ojs.float_to_js x282)|])
    let cast_from = Obj.magic
  end
module ArrayBuffer =
  struct
    type t = [ `ArrayBuffer ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x284 : Ojs.t) -> t_of_js x284
    and t_0_to_js : t_0 -> Ojs.t = fun (x283 : t) -> t_to_js x283
    type tags = [ `ArrayBuffer ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ArrayBuffer ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x287 : Ojs.t) -> intf_of_js __tags_of_js x287
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x285 : __tags intf) -> intf_to_js __tags_to_js x285
    let (get_byteLength : 'tags this -> float) =
      fun (x289 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x289) "byteLength")
    let (slice : 'tags this -> begin_:float -> ?end_:float -> unit -> t) =
      fun (x295 : 'tags this) ->
        fun ~begin_:(x291 : float) ->
          fun ?end_:(x292 : float option) ->
            fun () ->
              t_of_js
                (let x297 = this_to_js Obj.magic x295 in
                 Ojs.call (Ojs.get_prop_ascii x297 "slice") "apply"
                   [|x297;((let x293 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x293 "push"
                                 [|(Ojs.float_to_js x291)|]);
                            (match x292 with
                             | Some x294 ->
                                 ignore
                                   (Ojs.call x293 "push"
                                      [|(Ojs.float_to_js x294)|])
                             | None -> ());
                            x293))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "ArrayBuffer")
             "prototype")
    let (create : float -> t) =
      fun (x298 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "ArrayBuffer")
             [|(Ojs.float_to_js x298)|])
    let (isView : any -> bool) =
      fun (x299 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "ArrayBuffer") "isView"
             [|(any_to_js x299)|])
    let cast_from = Obj.magic
  end
module ArrayBufferLike =
  struct
    type t = (ArrayBuffer.t, SharedArrayBuffer.t) union2
    let rec t_of_js : Ojs.t -> t =
      fun (x303 : Ojs.t) ->
        union2_of_js ArrayBuffer.t_of_js SharedArrayBuffer.t_of_js x303
    and t_to_js : t -> Ojs.t =
      fun (x300 : (ArrayBuffer.t, SharedArrayBuffer.t) union2) ->
        union2_to_js ArrayBuffer.t_to_js SharedArrayBuffer.t_to_js x300
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x307 : Ojs.t) -> t_of_js x307
    and t_0_to_js : t_0 -> Ojs.t = fun (x306 : t) -> t_to_js x306
  end
module IterableIterator =
  struct
    type 'T t =
      [ `IterableIterator of 'T  | `Iterator of ('T * any * undefined) ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x310 : Ojs.t) -> t_of_js __T_of_js x310
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x308 : __T t) -> t_to_js __T_to_js x308
    type 'T tags =
      [ `IterableIterator of 'T  | `Iterator of ('T * any * undefined) ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `IterableIterator of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x314 : Ojs.t) -> intf_of_js __tags_of_js x314
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x312 : __tags intf) -> intf_to_js __tags_to_js x312
    let cast_from = Obj.magic
  end
module ArrayLike =
  struct
    type 'T t = [ `ArrayLike of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x318 : Ojs.t) -> t_of_js __T_of_js x318
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x316 : __T t) -> t_to_js __T_to_js x316
    type 'T tags = [ `ArrayLike of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ArrayLike of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x322 : Ojs.t) -> intf_of_js __tags_of_js x322
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x320 : __tags intf) -> intf_to_js __tags_to_js x320
    let (get_length : ('tags, 'T) this -> float) =
      fun (x324 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x324) "length")
    let (get : ('tags, 'T) this -> float -> 'T) =
      fun (x327 : ('tags, 'T) this) ->
        fun (x330 : float) ->
          Obj.magic
            (Ojs.get_prop (this_to_js Obj.magic Obj.magic x327)
               (Ojs.float_to_js x330))
    let cast_from = Obj.magic
    let (of_ml : 'T list -> 'T t) =
      fun (x331 : 'T list) ->
        t_of_js Obj.magic (Ojs.list_to_js Obj.magic x331)
    let (to_ml : 'T t -> 'T list) =
      fun (x334 : 'T t) -> Ojs.list_of_js Obj.magic (t_to_js Obj.magic x334)
  end
module Uint8ClampedArray =
  struct
    type t =
      [ `Uint8ClampedArray  | float ArrayLike.tags_1
      | float IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x338 : Ojs.t) -> t_of_js x338
    and t_0_to_js : t_0 -> Ojs.t = fun (x337 : t) -> t_to_js x337
    type tags =
      [ `Uint8ClampedArray  | float ArrayLike.tags_1
      | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Uint8ClampedArray ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x341 : Ojs.t) -> intf_of_js __tags_of_js x341
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x339 : __tags intf) -> intf_to_js __tags_to_js x339
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x347 : 'tags this) ->
        fun ~searchElement:(x343 : float) ->
          fun ?fromIndex:(x344 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x349 = this_to_js Obj.magic x347 in
                 Ojs.call (Ojs.get_prop_ascii x349 "includes") "apply"
                   [|x349;((let x345 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x345 "push"
                                 [|(Ojs.float_to_js x343)|]);
                            (match x344 with
                             | Some x346 ->
                                 ignore
                                   (Ojs.call x345 "push"
                                      [|(Ojs.float_to_js x346)|])
                             | None -> ());
                            x345))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x350 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x352 : Ojs.t) ->
             let x353 = x352 in
             ((Ojs.float_of_js (Ojs.array_get x353 0)),
               (Ojs.float_of_js (Ojs.array_get x353 1))))
          (Ojs.call (this_to_js Obj.magic x350) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x354 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x354) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x357 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x357) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x360 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x360) "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x362 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x362) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x364 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x364) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x366 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x366) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x373 : 'tags this) ->
        fun ~target:(x368 : float) ->
          fun ~start:(x369 : float) ->
            fun ?end_:(x370 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x375 = this_to_js Obj.magic x373 in
                   Ojs.call (Ojs.get_prop_ascii x375 "copyWithin") "apply"
                     [|x375;((let x371 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x371 "push"
                                   [|(Ojs.float_to_js x368)|]);
                              ignore
                                (Ojs.call x371 "push"
                                   [|(Ojs.float_to_js x369)|]);
                              (match x370 with
                               | Some x372 ->
                                   ignore
                                     (Ojs.call x371 "push"
                                        [|(Ojs.float_to_js x372)|])
                               | None -> ());
                              x371))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x384 : 'tags this) ->
        fun
          ~predicate:(x377 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x378 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x386 = this_to_js Obj.magic x384 in
                 Ojs.call (Ojs.get_prop_ascii x386 "every") "apply"
                   [|x386;((let x379 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x379 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x381 : Ojs.t) ->
                                         fun (x382 : Ojs.t) ->
                                           fun (x383 : Ojs.t) ->
                                             unknown_to_js
                                               (x377
                                                  ~value:(Ojs.float_of_js
                                                            x381)
                                                  ~index:(Ojs.float_of_js
                                                            x382)
                                                  ~array:(t_of_js x383))))|]);
                            (match x378 with
                             | Some x380 ->
                                 ignore
                                   (Ojs.call x379 "push" [|(any_to_js x380)|])
                             | None -> ());
                            x379))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x393 : 'tags this) ->
        fun ~value:(x387 : float) ->
          fun ?start:(x388 : float option) ->
            fun ?end_:(x389 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x395 = this_to_js Obj.magic x393 in
                   Ojs.call (Ojs.get_prop_ascii x395 "fill") "apply"
                     [|x395;((let x390 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x390 "push"
                                   [|(Ojs.float_to_js x387)|]);
                              (match x388 with
                               | Some x392 ->
                                   ignore
                                     (Ojs.call x390 "push"
                                        [|(Ojs.float_to_js x392)|])
                               | None -> ());
                              (match x389 with
                               | Some x391 ->
                                   ignore
                                     (Ojs.call x390 "push"
                                        [|(Ojs.float_to_js x391)|])
                               | None -> ());
                              x390))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x404 : 'tags this) ->
        fun ~predicate:(x397 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x398 : any option) ->
            fun () ->
              t_of_js
                (let x406 = this_to_js Obj.magic x404 in
                 Ojs.call (Ojs.get_prop_ascii x406 "filter") "apply"
                   [|x406;((let x399 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x399 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x401 : Ojs.t) ->
                                         fun (x402 : Ojs.t) ->
                                           fun (x403 : Ojs.t) ->
                                             any_to_js
                                               (x397
                                                  ~value:(Ojs.float_of_js
                                                            x401)
                                                  ~index:(Ojs.float_of_js
                                                            x402)
                                                  ~array:(t_of_js x403))))|]);
                            (match x398 with
                             | Some x400 ->
                                 ignore
                                   (Ojs.call x399 "push" [|(any_to_js x400)|])
                             | None -> ());
                            x399))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x414 : 'tags this) ->
        fun ~predicate:(x407 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x408 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x416 = this_to_js Obj.magic x414 in
                 Ojs.call (Ojs.get_prop_ascii x416 "find") "apply"
                   [|x416;((let x409 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x409 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x411 : Ojs.t) ->
                                         fun (x412 : Ojs.t) ->
                                           fun (x413 : Ojs.t) ->
                                             Ojs.bool_to_js
                                               (x407
                                                  ~value:(Ojs.float_of_js
                                                            x411)
                                                  ~index:(Ojs.float_of_js
                                                            x412)
                                                  ~obj:(t_of_js x413))))|]);
                            (match x408 with
                             | Some x410 ->
                                 ignore
                                   (Ojs.call x409 "push" [|(any_to_js x410)|])
                             | None -> ());
                            x409))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x425 : 'tags this) ->
        fun ~predicate:(x418 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x419 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x427 = this_to_js Obj.magic x425 in
                 Ojs.call (Ojs.get_prop_ascii x427 "findIndex") "apply"
                   [|x427;((let x420 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x420 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x422 : Ojs.t) ->
                                         fun (x423 : Ojs.t) ->
                                           fun (x424 : Ojs.t) ->
                                             Ojs.bool_to_js
                                               (x418
                                                  ~value:(Ojs.float_of_js
                                                            x422)
                                                  ~index:(Ojs.float_of_js
                                                            x423)
                                                  ~obj:(t_of_js x424))))|]);
                            (match x419 with
                             | Some x421 ->
                                 ignore
                                   (Ojs.call x420 "push" [|(any_to_js x421)|])
                             | None -> ());
                            x420))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x435 : 'tags this) ->
        fun
          ~callbackfn:(x428 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x429 : any option) ->
            fun () ->
              ignore
                (let x437 = this_to_js Obj.magic x435 in
                 Ojs.call (Ojs.get_prop_ascii x437 "forEach") "apply"
                   [|x437;((let x430 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x430 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x432 : Ojs.t) ->
                                         fun (x433 : Ojs.t) ->
                                           fun (x434 : Ojs.t) ->
                                             x428
                                               ~value:(Ojs.float_of_js x432)
                                               ~index:(Ojs.float_of_js x433)
                                               ~array:(t_of_js x434)))|]);
                            (match x429 with
                             | Some x431 ->
                                 ignore
                                   (Ojs.call x430 "push" [|(any_to_js x431)|])
                             | None -> ());
                            x430))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x442 : 'tags this) ->
        fun ~searchElement:(x438 : float) ->
          fun ?fromIndex:(x439 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x444 = this_to_js Obj.magic x442 in
                 Ojs.call (Ojs.get_prop_ascii x444 "indexOf") "apply"
                   [|x444;((let x440 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x440 "push"
                                 [|(Ojs.float_to_js x438)|]);
                            (match x439 with
                             | Some x441 ->
                                 ignore
                                   (Ojs.call x440 "push"
                                      [|(Ojs.float_to_js x441)|])
                             | None -> ());
                            x440))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x448 : 'tags this) ->
        fun ?separator:(x445 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x450 = this_to_js Obj.magic x448 in
               Ojs.call (Ojs.get_prop_ascii x450 "join") "apply"
                 [|x450;((let x446 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x445 with
                           | Some x447 ->
                               ignore
                                 (Ojs.call x446 "push"
                                    [|(Ojs.string_to_js x447)|])
                           | None -> ());
                          x446))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x455 : 'tags this) ->
        fun ~searchElement:(x451 : float) ->
          fun ?fromIndex:(x452 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x457 = this_to_js Obj.magic x455 in
                 Ojs.call (Ojs.get_prop_ascii x457 "lastIndexOf") "apply"
                   [|x457;((let x453 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x453 "push"
                                 [|(Ojs.float_to_js x451)|]);
                            (match x452 with
                             | Some x454 ->
                                 ignore
                                   (Ojs.call x453 "push"
                                      [|(Ojs.float_to_js x454)|])
                             | None -> ());
                            x453))|])
    let (get_length : 'tags this -> float) =
      fun (x458 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x458) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x467 : 'tags this) ->
        fun
          ~callbackfn:(x460 : value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x461 : any option) ->
            fun () ->
              t_of_js
                (let x469 = this_to_js Obj.magic x467 in
                 Ojs.call (Ojs.get_prop_ascii x469 "map") "apply"
                   [|x469;((let x462 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x462 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x464 : Ojs.t) ->
                                         fun (x465 : Ojs.t) ->
                                           fun (x466 : Ojs.t) ->
                                             Ojs.float_to_js
                                               (x460
                                                  ~value:(Ojs.float_of_js
                                                            x464)
                                                  ~index:(Ojs.float_of_js
                                                            x465)
                                                  ~array:(t_of_js x466))))|]);
                            (match x461 with
                             | Some x463 ->
                                 ignore
                                   (Ojs.call x462 "push" [|(any_to_js x463)|])
                             | None -> ());
                            x462))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x475 : 'tags this) ->
        fun
          ~callbackfn:(x470 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x475) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x471 : Ojs.t) ->
                       fun (x472 : Ojs.t) ->
                         fun (x473 : Ojs.t) ->
                           fun (x474 : Ojs.t) ->
                             Ojs.float_to_js
                               (x470 ~previousValue:(Ojs.float_of_js x471)
                                  ~currentValue:(Ojs.float_of_js x472)
                                  ~currentIndex:(Ojs.float_of_js x473)
                                  ~array:(t_of_js x474))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x483 : 'tags this) ->
        fun
          ~callbackfn:(x477 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x482 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x483) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x478 : Ojs.t) ->
                         fun (x479 : Ojs.t) ->
                           fun (x480 : Ojs.t) ->
                             fun (x481 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x477 ~previousValue:(Ojs.float_of_js x478)
                                    ~currentValue:(Ojs.float_of_js x479)
                                    ~currentIndex:(Ojs.float_of_js x480)
                                    ~array:(t_of_js x481))));(Ojs.float_to_js
                                                                x482)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x491 : 'tags this) ->
        fun
          ~callbackfn:(x485 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x490 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x491) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x486 : Ojs.t) ->
                         fun (x487 : Ojs.t) ->
                           fun (x488 : Ojs.t) ->
                             fun (x489 : Ojs.t) ->
                               Obj.magic
                                 (x485 ~previousValue:(Obj.magic x486)
                                    ~currentValue:(Ojs.float_of_js x487)
                                    ~currentIndex:(Ojs.float_of_js x488)
                                    ~array:(t_of_js x489))));(Obj.magic x490)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x498 : 'tags this) ->
        fun
          ~callbackfn:(x493 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x498) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x494 : Ojs.t) ->
                       fun (x495 : Ojs.t) ->
                         fun (x496 : Ojs.t) ->
                           fun (x497 : Ojs.t) ->
                             Ojs.float_to_js
                               (x493 ~previousValue:(Ojs.float_of_js x494)
                                  ~currentValue:(Ojs.float_of_js x495)
                                  ~currentIndex:(Ojs.float_of_js x496)
                                  ~array:(t_of_js x497))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x506 : 'tags this) ->
        fun
          ~callbackfn:(x500 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x505 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x506) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x501 : Ojs.t) ->
                         fun (x502 : Ojs.t) ->
                           fun (x503 : Ojs.t) ->
                             fun (x504 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x500 ~previousValue:(Ojs.float_of_js x501)
                                    ~currentValue:(Ojs.float_of_js x502)
                                    ~currentIndex:(Ojs.float_of_js x503)
                                    ~array:(t_of_js x504))));(Ojs.float_to_js
                                                                x505)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x514 : 'tags this) ->
        fun
          ~callbackfn:(x508 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x513 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x514) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x509 : Ojs.t) ->
                         fun (x510 : Ojs.t) ->
                           fun (x511 : Ojs.t) ->
                             fun (x512 : Ojs.t) ->
                               Obj.magic
                                 (x508 ~previousValue:(Obj.magic x509)
                                    ~currentValue:(Ojs.float_of_js x510)
                                    ~currentIndex:(Ojs.float_of_js x511)
                                    ~array:(t_of_js x512))));(Obj.magic x513)|])
    let (reverse : 'tags this -> t) =
      fun (x516 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x516) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x523 : 'tags this) ->
        fun ~array:(x518 : float ArrayLike.t) ->
          fun ?offset:(x519 : float option) ->
            fun () ->
              ignore
                (let x525 = this_to_js Obj.magic x523 in
                 Ojs.call (Ojs.get_prop_ascii x525 "set") "apply"
                   [|x525;((let x520 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x520 "push"
                                 [|(ArrayLike.t_to_js Ojs.float_to_js x518)|]);
                            (match x519 with
                             | Some x521 ->
                                 ignore
                                   (Ojs.call x520 "push"
                                      [|(Ojs.float_to_js x521)|])
                             | None -> ());
                            x520))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x531 : 'tags this) ->
        fun ?start:(x526 : float option) ->
          fun ?end_:(x527 : float option) ->
            fun () ->
              t_of_js
                (let x533 = this_to_js Obj.magic x531 in
                 Ojs.call (Ojs.get_prop_ascii x533 "slice") "apply"
                   [|x533;((let x528 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x526 with
                             | Some x530 ->
                                 ignore
                                   (Ojs.call x528 "push"
                                      [|(Ojs.float_to_js x530)|])
                             | None -> ());
                            (match x527 with
                             | Some x529 ->
                                 ignore
                                   (Ojs.call x528 "push"
                                      [|(Ojs.float_to_js x529)|])
                             | None -> ());
                            x528))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x541 : 'tags this) ->
        fun
          ~predicate:(x534 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x535 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x543 = this_to_js Obj.magic x541 in
                 Ojs.call (Ojs.get_prop_ascii x543 "some") "apply"
                   [|x543;((let x536 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x536 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x538 : Ojs.t) ->
                                         fun (x539 : Ojs.t) ->
                                           fun (x540 : Ojs.t) ->
                                             unknown_to_js
                                               (x534
                                                  ~value:(Ojs.float_of_js
                                                            x538)
                                                  ~index:(Ojs.float_of_js
                                                            x539)
                                                  ~array:(t_of_js x540))))|]);
                            (match x535 with
                             | Some x537 ->
                                 ignore
                                   (Ojs.call x536 "push" [|(any_to_js x537)|])
                             | None -> ());
                            x536))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x549 : 'tags this) ->
        fun ?compareFn:(x544 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x551 = this_to_js Obj.magic x549 in
               Ojs.call (Ojs.get_prop_ascii x551 "sort") "apply"
                 [|x551;((let x545 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x544 with
                           | Some x546 ->
                               ignore
                                 (Ojs.call x545 "push"
                                    [|(Ojs.fun_to_js 2
                                         (fun (x547 : Ojs.t) ->
                                            fun (x548 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x546
                                                   ~a:(Ojs.float_of_js x547)
                                                   ~b:(Ojs.float_of_js x548))))|])
                           | None -> ());
                          x545))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x558 : 'tags this) ->
        fun ?begin_:(x553 : float option) ->
          fun ?end_:(x554 : float option) ->
            fun () ->
              t_of_js
                (let x560 = this_to_js Obj.magic x558 in
                 Ojs.call (Ojs.get_prop_ascii x560 "subarray") "apply"
                   [|x560;((let x555 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x553 with
                             | Some x557 ->
                                 ignore
                                   (Ojs.call x555 "push"
                                      [|(Ojs.float_to_js x557)|])
                             | None -> ());
                            (match x554 with
                             | Some x556 ->
                                 ignore
                                   (Ojs.call x555 "push"
                                      [|(Ojs.float_to_js x556)|])
                             | None -> ());
                            x555))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x561 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x561) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x563 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x563) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x565 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x565) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x567 : 'tags this) ->
        fun (x569 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x567) (Ojs.float_to_js x569))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x570 : 'tags this) ->
        fun (x572 : float) ->
          fun (x573 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x570) (Ojs.float_to_js x572)
              (Ojs.float_to_js x573)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             [||])
    let (create' : float Iterable.t -> t) =
      fun (x574 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             [|(Iterable.t_to_js Ojs.float_to_js x574)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x576 : float Iterable.t) ->
        fun ?mapfn:(x577 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x578 : any option) ->
            fun () ->
              t_of_js
                (let x585 = Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray" in
                 Ojs.call (Ojs.get_prop_ascii x585 "from") "apply"
                   [|x585;((let x579 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x579 "push"
                                 [|(Iterable.t_to_js Ojs.float_to_js x576)|]);
                            (match x577 with
                             | Some x581 ->
                                 ignore
                                   (Ojs.call x579 "push"
                                      [|(Ojs.fun_to_js 2
                                           (fun (x582 : Ojs.t) ->
                                              fun (x583 : Ojs.t) ->
                                                Ojs.float_to_js
                                                  (x581
                                                     ~v:(Ojs.float_of_js x582)
                                                     ~k:(Ojs.float_of_js x583))))|])
                             | None -> ());
                            (match x578 with
                             | Some x580 ->
                                 ignore
                                   (Ojs.call x579 "push" [|(any_to_js x580)|])
                             | None -> ());
                            x579))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray") "prototype")
    let (create'' : float -> t) =
      fun (x586 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             [|(Ojs.float_to_js x586)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x587 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             [|((match x587 with
                 | `U1 x588 -> ArrayLike.t_to_js Ojs.float_to_js x588
                 | `U2 x590 -> ArrayBufferLike.t_to_js x590))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x591 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x592 : float option) ->
          fun ?length:(x593 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
                   (let x594 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x594 "push"
                         [|(ArrayBufferLike.t_to_js x591)|]);
                    (match x592 with
                     | Some x596 ->
                         ignore
                           (Ojs.call x594 "push" [|(Ojs.float_to_js x596)|])
                     | None -> ());
                    (match x593 with
                     | Some x595 ->
                         ignore
                           (Ojs.call x594 "push" [|(Ojs.float_to_js x595)|])
                     | None -> ());
                    x594))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x597 : float list) ->
        t_of_js
          (let x600 = Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray" in
           Ojs.call (Ojs.get_prop_ascii x600 "of") "apply"
             [|x600;((let x598 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      List.iter
                        (fun (x599 : float) ->
                           ignore
                             (Ojs.call x598 "push" [|(Ojs.float_to_js x599)|]))
                        x597;
                      x598))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x601 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray")
             "from" [|(ArrayLike.t_to_js Ojs.float_to_js x601)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x603 : 'T ArrayLike.t) ->
        fun ~mapfn:(x604 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x605 : any option) ->
            fun () ->
              t_of_js
                (let x611 = Ojs.get_prop_ascii Ojs.global "Uint8ClampedArray" in
                 Ojs.call (Ojs.get_prop_ascii x611 "from") "apply"
                   [|x611;((let x606 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x606 "push"
                                 [|(ArrayLike.t_to_js Obj.magic x603)|]);
                            ignore
                              (Ojs.call x606 "push"
                                 [|(Ojs.fun_to_js 2
                                      (fun (x608 : Ojs.t) ->
                                         fun (x609 : Ojs.t) ->
                                           Ojs.float_to_js
                                             (x604 ~v:(Obj.magic x608)
                                                ~k:(Ojs.float_of_js x609))))|]);
                            (match x605 with
                             | Some x607 ->
                                 ignore
                                   (Ojs.call x606 "push" [|(any_to_js x607)|])
                             | None -> ());
                            x606))|])
    let cast_from = Obj.magic
  end
module Error =
  struct
    type t = [ `Error ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x613 : Ojs.t) -> t_of_js x613
    and t_0_to_js : t_0 -> Ojs.t = fun (x612 : t) -> t_to_js x612
    type tags = [ `Error ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Error ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x616 : Ojs.t) -> intf_of_js __tags_of_js x616
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x614 : __tags intf) -> intf_to_js __tags_to_js x614
    let (get_name : 'tags this -> string) =
      fun (x618 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x618) "name")
    let (set_name : 'tags this -> string -> unit) =
      fun (x620 : 'tags this) ->
        fun (x621 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x620) "name"
            (Ojs.string_to_js x621)
    let (get_message : 'tags this -> string) =
      fun (x623 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x623) "message")
    let (set_message : 'tags this -> string -> unit) =
      fun (x625 : 'tags this) ->
        fun (x626 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x625) "message"
            (Ojs.string_to_js x626)
    let (get_stack : 'tags this -> string) =
      fun (x628 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x628) "stack")
    let (set_stack : 'tags this -> string -> unit) =
      fun (x630 : 'tags this) ->
        fun (x631 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x630) "stack"
            (Ojs.string_to_js x631)
    let (create : ?message:string -> unit -> t) =
      fun ?message:(x633 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Error")
               (let x634 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x633 with
                 | Some x635 ->
                     ignore
                       (Ojs.call x634 "push" [|(Ojs.string_to_js x635)|])
                 | None -> ());
                x634))
    let (invoke : ?message:string -> unit -> t) =
      fun ?message:(x636 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Error") "apply"
               [|Ojs.null;((let x637 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x636 with
                             | Some x638 ->
                                 ignore
                                   (Ojs.call x637 "push"
                                      [|(Ojs.string_to_js x638)|])
                             | None -> ());
                            x637))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Error")
             "prototype")
    let (create' :
      name:string -> message:string -> stack:string -> unit -> t) =
      fun ~name:(x639 : string) ->
        fun ~message:(x640 : string) ->
          fun ~stack:(x641 : string) ->
            fun () ->
              let x642 = Ojs.empty_obj () in
              Ojs.set_prop_ascii x642 "name" (Ojs.string_to_js x639);
              Ojs.set_prop_ascii x642 "message" (Ojs.string_to_js x640);
              Ojs.set_prop_ascii x642 "stack" (Ojs.string_to_js x641);
              t_of_js x642
    let cast_from = Obj.magic
  end
module URIError =
  struct
    type t = [ `Error  | `URIError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x644 : Ojs.t) -> t_of_js x644
    and t_0_to_js : t_0 -> Ojs.t = fun (x643 : t) -> t_to_js x643
    type tags = [ `Error  | `URIError ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `URIError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x647 : Ojs.t) -> intf_of_js __tags_of_js x647
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x645 : __tags intf) -> intf_to_js __tags_to_js x645
    let (create : ?message:string -> unit -> t) =
      fun ?message:(x649 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "URIError")
               (let x650 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x649 with
                 | Some x651 ->
                     ignore
                       (Ojs.call x650 "push" [|(Ojs.string_to_js x651)|])
                 | None -> ());
                x650))
    let (invoke : ?message:string -> unit -> t) =
      fun ?message:(x652 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "URIError") "apply"
               [|Ojs.null;((let x653 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x652 with
                             | Some x654 ->
                                 ignore
                                   (Ojs.call x653 "push"
                                      [|(Ojs.string_to_js x654)|])
                             | None -> ());
                            x653))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "URIError")
             "prototype")
    let cast_from = Obj.magic
  end
module TypeError =
  struct
    type t = [ `Error  | `TypeError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x656 : Ojs.t) -> t_of_js x656
    and t_0_to_js : t_0 -> Ojs.t = fun (x655 : t) -> t_to_js x655
    type tags = [ `Error  | `TypeError ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `TypeError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x659 : Ojs.t) -> intf_of_js __tags_of_js x659
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x657 : __tags intf) -> intf_to_js __tags_to_js x657
    let (create : ?message:string -> unit -> t) =
      fun ?message:(x661 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "TypeError")
               (let x662 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x661 with
                 | Some x663 ->
                     ignore
                       (Ojs.call x662 "push" [|(Ojs.string_to_js x663)|])
                 | None -> ());
                x662))
    let (invoke : ?message:string -> unit -> t) =
      fun ?message:(x664 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "TypeError") "apply"
               [|Ojs.null;((let x665 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x664 with
                             | Some x666 ->
                                 ignore
                                   (Ojs.call x665 "push"
                                      [|(Ojs.string_to_js x666)|])
                             | None -> ());
                            x665))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "TypeError")
             "prototype")
    let cast_from = Obj.magic
  end
module FlatArray =
  struct
    type ('Arr, 'Depth) t = any
    let rec t_of_js :
      'Arr 'Depth .
        (Ojs.t -> 'Arr) -> (Ojs.t -> 'Depth) -> Ojs.t -> ('Arr, 'Depth) t
      = fun (type __Arr) -> fun (type __Depth) ->
      fun (__Arr_of_js : Ojs.t -> __Arr) ->
        fun (__Depth_of_js : Ojs.t -> __Depth) ->
          fun (x668 : Ojs.t) -> any_of_js x668
    and t_to_js :
      'Arr 'Depth .
        ('Arr -> Ojs.t) -> ('Depth -> Ojs.t) -> ('Arr, 'Depth) t -> Ojs.t
      = fun (type __Arr) -> fun (type __Depth) ->
      fun (__Arr_to_js : __Arr -> Ojs.t) ->
        fun (__Depth_to_js : __Depth -> Ojs.t) ->
          fun (x667 : any) -> any_to_js x667
    type ('Arr, 'Depth) t_2 = ('Arr, 'Depth) t
    let rec t_2_of_js :
      'Arr 'Depth .
        (Ojs.t -> 'Arr) -> (Ojs.t -> 'Depth) -> Ojs.t -> ('Arr, 'Depth) t_2
      = fun (type __Arr) -> fun (type __Depth) ->
      fun (__Arr_of_js : Ojs.t -> __Arr) ->
        fun (__Depth_of_js : Ojs.t -> __Depth) ->
          fun (x672 : Ojs.t) -> t_of_js __Arr_of_js __Depth_of_js x672
    and t_2_to_js :
      'Arr 'Depth .
        ('Arr -> Ojs.t) -> ('Depth -> Ojs.t) -> ('Arr, 'Depth) t_2 -> Ojs.t
      = fun (type __Arr) -> fun (type __Depth) ->
      fun (__Arr_to_js : __Arr -> Ojs.t) ->
        fun (__Depth_to_js : __Depth -> Ojs.t) ->
          fun (x669 : (__Arr, __Depth) t) ->
            t_to_js __Arr_to_js __Depth_to_js x669
  end
module ConcatArray =
  struct
    type 'T t = [ `ConcatArray of 'T  | 'T ArrayLike.tags_1] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x677 : Ojs.t) -> t_of_js __T_of_js x677
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x675 : __T t) -> t_to_js __T_to_js x675
    type 'T tags = [ `ConcatArray of 'T  | 'T ArrayLike.tags_1]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ConcatArray of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x681 : Ojs.t) -> intf_of_js __tags_of_js x681
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x679 : __tags intf) -> intf_to_js __tags_to_js x679
    let (get_length : ('tags, 'T) this -> float) =
      fun (x683 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x683) "length")
    let (get : ('tags, 'T) this -> float -> 'T) =
      fun (x686 : ('tags, 'T) this) ->
        fun (x689 : float) ->
          Obj.magic
            (Ojs.get_prop (this_to_js Obj.magic Obj.magic x686)
               (Ojs.float_to_js x689))
    let (join : ('tags, 'T) this -> ?separator:string -> unit -> string) =
      fun (x693 : ('tags, 'T) this) ->
        fun ?separator:(x690 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x696 = this_to_js Obj.magic Obj.magic x693 in
               Ojs.call (Ojs.get_prop_ascii x696 "join") "apply"
                 [|x696;((let x691 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x690 with
                           | Some x692 ->
                               ignore
                                 (Ojs.call x691 "push"
                                    [|(Ojs.string_to_js x692)|])
                           | None -> ());
                          x691))|])
    let (slice :
      ('tags, 'T) this -> ?start:float -> ?end_:float -> unit -> 'T list) =
      fun (x702 : ('tags, 'T) this) ->
        fun ?start:(x697 : float option) ->
          fun ?end_:(x698 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x705 = this_to_js Obj.magic Obj.magic x702 in
                 Ojs.call (Ojs.get_prop_ascii x705 "slice") "apply"
                   [|x705;((let x699 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x697 with
                             | Some x701 ->
                                 ignore
                                   (Ojs.call x699 "push"
                                      [|(Ojs.float_to_js x701)|])
                             | None -> ());
                            (match x698 with
                             | Some x700 ->
                                 ignore
                                   (Ojs.call x699 "push"
                                      [|(Ojs.float_to_js x700)|])
                             | None -> ());
                            x699))|])
    let cast_from = Obj.magic
  end
module ReadonlyArray =
  struct
    type 'T t =
      [ `ReadonlyArray of 'T  | 'T ArrayLike.tags_1
      | 'T IterableIterator.tags_1] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x709 : Ojs.t) -> t_of_js __T_of_js x709
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x707 : __T t) -> t_to_js __T_to_js x707
    type 'T tags =
      [ `ReadonlyArray of 'T  | 'T ArrayLike.tags_1
      | 'T IterableIterator.tags_1]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ReadonlyArray of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x713 : Ojs.t) -> intf_of_js __tags_of_js x713
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x711 : __tags intf) -> intf_to_js __tags_to_js x711
    let (flatMap :
      ('tags, 'T) this ->
        callback:(this:'This ->
                    value:'T ->
                      index:float ->
                        array:'T list -> [ `U1 of 'U  | `U2 of 'U t ])
          -> ?thisArg:'This -> unit -> 'U list)
      =
      fun (x727 : ('tags, 'T) this) ->
        fun
          ~callback:(x715 :
                      this:'This ->
                        value:'T ->
                          index:float ->
                            array:'T list -> [ `U1 of 'U  | `U2 of 'U t ])
          ->
          fun ?thisArg:(x716 : 'This option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x730 = this_to_js Obj.magic Obj.magic x727 in
                 Ojs.call (Ojs.get_prop_ascii x730 "flatMap") "apply"
                   [|x730;((let x717 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x717 "push"
                                 [|(Ojs.fun_to_js 4
                                      (fun (x719 : Ojs.t) ->
                                         fun (x720 : Ojs.t) ->
                                           fun (x721 : Ojs.t) ->
                                             fun (x722 : Ojs.t) ->
                                               match x715
                                                       ~this:(Obj.magic x719)
                                                       ~value:(Obj.magic x720)
                                                       ~index:(Ojs.float_of_js
                                                                 x721)
                                                       ~array:(Ojs.list_of_js
                                                                 Obj.magic
                                                                 x722)
                                               with
                                               | `U1 x724 -> Obj.magic x724
                                               | `U2 x725 ->
                                                   t_to_js Obj.magic x725))|]);
                            (match x716 with
                             | Some x718 ->
                                 ignore
                                   (Ojs.call x717 "push" [|(Obj.magic x718)|])
                             | None -> ());
                            x717))|])
    let (flat :
      ('tags, 'T) this ->
        this:'A -> ?depth:'D -> unit -> ('A, 'D) FlatArray.t list)
      =
      fun (x736 : ('tags, 'T) this) ->
        fun ~this:(x732 : 'A) ->
          fun ?depth:(x733 : 'D option) ->
            fun () ->
              Ojs.list_of_js
                (fun (x740 : Ojs.t) ->
                   FlatArray.t_of_js Obj.magic Obj.magic x740)
                (let x739 = this_to_js Obj.magic Obj.magic x736 in
                 Ojs.call (Ojs.get_prop_ascii x739 "flat") "apply"
                   [|x739;((let x734 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x734 "push" [|(Obj.magic x732)|]);
                            (match x733 with
                             | Some x735 ->
                                 ignore
                                   (Ojs.call x734 "push" [|(Obj.magic x735)|])
                             | None -> ());
                            x734))|])
    let (includes :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> bool)
      =
      fun (x747 : ('tags, 'T) this) ->
        fun ~searchElement:(x743 : 'T) ->
          fun ?fromIndex:(x744 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x750 = this_to_js Obj.magic Obj.magic x747 in
                 Ojs.call (Ojs.get_prop_ascii x750 "includes") "apply"
                   [|x750;((let x745 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x745 "push" [|(Obj.magic x743)|]);
                            (match x744 with
                             | Some x746 ->
                                 ignore
                                   (Ojs.call x745 "push"
                                      [|(Ojs.float_to_js x746)|])
                             | None -> ());
                            x745))|])
    let (entries : ('tags, 'T) this -> (float * 'T) IterableIterator.t) =
      fun (x751 : ('tags, 'T) this) ->
        IterableIterator.t_of_js
          (fun (x754 : Ojs.t) ->
             let x755 = x754 in
             ((Ojs.float_of_js (Ojs.array_get x755 0)),
               (Obj.magic (Ojs.array_get x755 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic x751) "entries" [||])
    let (keys : ('tags, 'T) this -> float IterableIterator.t) =
      fun (x756 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x756) "keys" [||])
    let (values : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x760 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x760) "values" [||])
    let (find :
      ('tags, 'T) this ->
        predicate:(this:unit ->
                     value:'T -> index:float -> obj:'T list -> bool)
          -> ?thisArg:any -> unit -> 'S option)
      =
      fun (x773 : ('tags, 'T) this) ->
        fun
          ~predicate:(x764 :
                       this:unit ->
                         value:'T -> index:float -> obj:'T list -> bool)
          ->
          fun ?thisArg:(x765 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x776 = this_to_js Obj.magic Obj.magic x773 in
                 Ojs.call (Ojs.get_prop_ascii x776 "find") "apply"
                   [|x776;((let x766 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x766 "push"
                                 [|(Ojs.fun_to_js 4
                                      (fun (x768 : Ojs.t) ->
                                         fun (x769 : Ojs.t) ->
                                           fun (x770 : Ojs.t) ->
                                             fun (x771 : Ojs.t) ->
                                               Ojs.bool_to_js
                                                 (x764
                                                    ~this:(Ojs.unit_of_js
                                                             x768)
                                                    ~value:(Obj.magic x769)
                                                    ~index:(Ojs.float_of_js
                                                              x770)
                                                    ~obj:(Ojs.list_of_js
                                                            Obj.magic x771))))|]);
                            (match x765 with
                             | Some x767 ->
                                 ignore
                                   (Ojs.call x766 "push" [|(any_to_js x767)|])
                             | None -> ());
                            x766))|])
    let (find' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> obj:'T list -> unknown) ->
          ?thisArg:any -> unit -> 'T option)
      =
      fun (x786 : ('tags, 'T) this) ->
        fun
          ~predicate:(x778 :
                       value:'T -> index:float -> obj:'T list -> unknown)
          ->
          fun ?thisArg:(x779 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x789 = this_to_js Obj.magic Obj.magic x786 in
                 Ojs.call (Ojs.get_prop_ascii x789 "find") "apply"
                   [|x789;((let x780 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x780 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x782 : Ojs.t) ->
                                         fun (x783 : Ojs.t) ->
                                           fun (x784 : Ojs.t) ->
                                             unknown_to_js
                                               (x778 ~value:(Obj.magic x782)
                                                  ~index:(Ojs.float_of_js
                                                            x783)
                                                  ~obj:(Ojs.list_of_js
                                                          Obj.magic x784))))|]);
                            (match x779 with
                             | Some x781 ->
                                 ignore
                                   (Ojs.call x780 "push" [|(any_to_js x781)|])
                             | None -> ());
                            x780))|])
    let (findIndex :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> obj:'T list -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x799 : ('tags, 'T) this) ->
        fun
          ~predicate:(x791 :
                       value:'T -> index:float -> obj:'T list -> unknown)
          ->
          fun ?thisArg:(x792 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x802 = this_to_js Obj.magic Obj.magic x799 in
                 Ojs.call (Ojs.get_prop_ascii x802 "findIndex") "apply"
                   [|x802;((let x793 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x793 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x795 : Ojs.t) ->
                                         fun (x796 : Ojs.t) ->
                                           fun (x797 : Ojs.t) ->
                                             unknown_to_js
                                               (x791 ~value:(Obj.magic x795)
                                                  ~index:(Ojs.float_of_js
                                                            x796)
                                                  ~obj:(Ojs.list_of_js
                                                          Obj.magic x797))))|]);
                            (match x792 with
                             | Some x794 ->
                                 ignore
                                   (Ojs.call x793 "push" [|(any_to_js x794)|])
                             | None -> ());
                            x793))|])
    let (get_length : ('tags, 'T) this -> float) =
      fun (x803 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x803) "length")
    let (toString : ('tags, 'T) this -> string) =
      fun (x806 : ('tags, 'T) this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x806) "toString" [||])
    let (toLocaleString : ('tags, 'T) this -> string) =
      fun (x809 : ('tags, 'T) this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x809) "toLocaleString"
             [||])
    let (concat : ('tags, 'T) this -> items:'T ConcatArray.t list -> 'T list)
      =
      fun (x816 : ('tags, 'T) this) ->
        fun ~items:(x812 : 'T ConcatArray.t list) ->
          Ojs.list_of_js Obj.magic
            (let x819 = this_to_js Obj.magic Obj.magic x816 in
             Ojs.call (Ojs.get_prop_ascii x819 "concat") "apply"
               [|x819;((let x813 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x814 : 'T ConcatArray.t) ->
                             ignore
                               (Ojs.call x813 "push"
                                  [|(ConcatArray.t_to_js Obj.magic x814)|]))
                          x812;
                        x813))|])
    let (concat' :
      ('tags, 'T) this ->
        items:[ `U1 of 'T  | `U2 of 'T ConcatArray.t ] list -> 'T list)
      =
      fun (x827 : ('tags, 'T) this) ->
        fun ~items:(x821 : [ `U1 of 'T  | `U2 of 'T ConcatArray.t ] list) ->
          Ojs.list_of_js Obj.magic
            (let x830 = this_to_js Obj.magic Obj.magic x827 in
             Ojs.call (Ojs.get_prop_ascii x830 "concat") "apply"
               [|x830;((let x822 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun
                             (x823 :
                               [ `U1 of 'T  | `U2 of 'T ConcatArray.t ])
                             ->
                             ignore
                               (Ojs.call x822 "push"
                                  [|((match x823 with
                                      | `U1 x824 -> Obj.magic x824
                                      | `U2 x825 ->
                                          ConcatArray.t_to_js Obj.magic x825))|]))
                          x821;
                        x822))|])
    let (join : ('tags, 'T) this -> ?separator:string -> unit -> string) =
      fun (x835 : ('tags, 'T) this) ->
        fun ?separator:(x832 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x838 = this_to_js Obj.magic Obj.magic x835 in
               Ojs.call (Ojs.get_prop_ascii x838 "join") "apply"
                 [|x838;((let x833 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x832 with
                           | Some x834 ->
                               ignore
                                 (Ojs.call x833 "push"
                                    [|(Ojs.string_to_js x834)|])
                           | None -> ());
                          x833))|])
    let (slice :
      ('tags, 'T) this -> ?start:float -> ?end_:float -> unit -> 'T list) =
      fun (x844 : ('tags, 'T) this) ->
        fun ?start:(x839 : float option) ->
          fun ?end_:(x840 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x847 = this_to_js Obj.magic Obj.magic x844 in
                 Ojs.call (Ojs.get_prop_ascii x847 "slice") "apply"
                   [|x847;((let x841 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x839 with
                             | Some x843 ->
                                 ignore
                                   (Ojs.call x841 "push"
                                      [|(Ojs.float_to_js x843)|])
                             | None -> ());
                            (match x840 with
                             | Some x842 ->
                                 ignore
                                   (Ojs.call x841 "push"
                                      [|(Ojs.float_to_js x842)|])
                             | None -> ());
                            x841))|])
    let (indexOf :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> float)
      =
      fun (x853 : ('tags, 'T) this) ->
        fun ~searchElement:(x849 : 'T) ->
          fun ?fromIndex:(x850 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x856 = this_to_js Obj.magic Obj.magic x853 in
                 Ojs.call (Ojs.get_prop_ascii x856 "indexOf") "apply"
                   [|x856;((let x851 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x851 "push" [|(Obj.magic x849)|]);
                            (match x850 with
                             | Some x852 ->
                                 ignore
                                   (Ojs.call x851 "push"
                                      [|(Ojs.float_to_js x852)|])
                             | None -> ());
                            x851))|])
    let (lastIndexOf :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> float)
      =
      fun (x861 : ('tags, 'T) this) ->
        fun ~searchElement:(x857 : 'T) ->
          fun ?fromIndex:(x858 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x864 = this_to_js Obj.magic Obj.magic x861 in
                 Ojs.call (Ojs.get_prop_ascii x864 "lastIndexOf") "apply"
                   [|x864;((let x859 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x859 "push" [|(Obj.magic x857)|]);
                            (match x858 with
                             | Some x860 ->
                                 ignore
                                   (Ojs.call x859 "push"
                                      [|(Ojs.float_to_js x860)|])
                             | None -> ());
                            x859))|])
    let (every :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x873 : ('tags, 'T) this) ->
        fun
          ~predicate:(x865 :
                       value:'T -> index:float -> array:'T list -> bool)
          ->
          fun ?thisArg:(x866 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x876 = this_to_js Obj.magic Obj.magic x873 in
                 Ojs.call (Ojs.get_prop_ascii x876 "every") "apply"
                   [|x876;((let x867 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x867 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x869 : Ojs.t) ->
                                         fun (x870 : Ojs.t) ->
                                           fun (x871 : Ojs.t) ->
                                             Ojs.bool_to_js
                                               (x865 ~value:(Obj.magic x869)
                                                  ~index:(Ojs.float_of_js
                                                            x870)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x871))))|]);
                            (match x866 with
                             | Some x868 ->
                                 ignore
                                   (Ojs.call x867 "push" [|(any_to_js x868)|])
                             | None -> ());
                            x867))|])
    let (every' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x885 : ('tags, 'T) this) ->
        fun
          ~predicate:(x877 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x878 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x888 = this_to_js Obj.magic Obj.magic x885 in
                 Ojs.call (Ojs.get_prop_ascii x888 "every") "apply"
                   [|x888;((let x879 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x879 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x881 : Ojs.t) ->
                                         fun (x882 : Ojs.t) ->
                                           fun (x883 : Ojs.t) ->
                                             unknown_to_js
                                               (x877 ~value:(Obj.magic x881)
                                                  ~index:(Ojs.float_of_js
                                                            x882)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x883))))|]);
                            (match x878 with
                             | Some x880 ->
                                 ignore
                                   (Ojs.call x879 "push" [|(any_to_js x880)|])
                             | None -> ());
                            x879))|])
    let (some :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x897 : ('tags, 'T) this) ->
        fun
          ~predicate:(x889 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x890 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x900 = this_to_js Obj.magic Obj.magic x897 in
                 Ojs.call (Ojs.get_prop_ascii x900 "some") "apply"
                   [|x900;((let x891 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x891 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x893 : Ojs.t) ->
                                         fun (x894 : Ojs.t) ->
                                           fun (x895 : Ojs.t) ->
                                             unknown_to_js
                                               (x889 ~value:(Obj.magic x893)
                                                  ~index:(Ojs.float_of_js
                                                            x894)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x895))))|]);
                            (match x890 with
                             | Some x892 ->
                                 ignore
                                   (Ojs.call x891 "push" [|(any_to_js x892)|])
                             | None -> ());
                            x891))|])
    let (forEach :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> index:float -> array:'T list -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x909 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x901 :
                        value:'T -> index:float -> array:'T list -> unit)
          ->
          fun ?thisArg:(x902 : any option) ->
            fun () ->
              ignore
                (let x912 = this_to_js Obj.magic Obj.magic x909 in
                 Ojs.call (Ojs.get_prop_ascii x912 "forEach") "apply"
                   [|x912;((let x903 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x903 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x905 : Ojs.t) ->
                                         fun (x906 : Ojs.t) ->
                                           fun (x907 : Ojs.t) ->
                                             x901 ~value:(Obj.magic x905)
                                               ~index:(Ojs.float_of_js x906)
                                               ~array:(Ojs.list_of_js
                                                         Obj.magic x907)))|]);
                            (match x902 with
                             | Some x904 ->
                                 ignore
                                   (Ojs.call x903 "push" [|(any_to_js x904)|])
                             | None -> ());
                            x903))|])
    let (map :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> index:float -> array:'T list -> 'U) ->
          ?thisArg:any -> unit -> 'U list)
      =
      fun (x921 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x913 : value:'T -> index:float -> array:'T list -> 'U)
          ->
          fun ?thisArg:(x914 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x924 = this_to_js Obj.magic Obj.magic x921 in
                 Ojs.call (Ojs.get_prop_ascii x924 "map") "apply"
                   [|x924;((let x915 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x915 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x917 : Ojs.t) ->
                                         fun (x918 : Ojs.t) ->
                                           fun (x919 : Ojs.t) ->
                                             Obj.magic
                                               (x913 ~value:(Obj.magic x917)
                                                  ~index:(Ojs.float_of_js
                                                            x918)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x919))))|]);
                            (match x914 with
                             | Some x916 ->
                                 ignore
                                   (Ojs.call x915 "push" [|(any_to_js x916)|])
                             | None -> ());
                            x915))|])
    let (filter :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> 'S list)
      =
      fun (x934 : ('tags, 'T) this) ->
        fun
          ~predicate:(x926 :
                       value:'T -> index:float -> array:'T list -> bool)
          ->
          fun ?thisArg:(x927 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x937 = this_to_js Obj.magic Obj.magic x934 in
                 Ojs.call (Ojs.get_prop_ascii x937 "filter") "apply"
                   [|x937;((let x928 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x928 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x930 : Ojs.t) ->
                                         fun (x931 : Ojs.t) ->
                                           fun (x932 : Ojs.t) ->
                                             Ojs.bool_to_js
                                               (x926 ~value:(Obj.magic x930)
                                                  ~index:(Ojs.float_of_js
                                                            x931)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x932))))|]);
                            (match x927 with
                             | Some x929 ->
                                 ignore
                                   (Ojs.call x928 "push" [|(any_to_js x929)|])
                             | None -> ());
                            x928))|])
    let (filter' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> 'T list)
      =
      fun (x947 : ('tags, 'T) this) ->
        fun
          ~predicate:(x939 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x940 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x950 = this_to_js Obj.magic Obj.magic x947 in
                 Ojs.call (Ojs.get_prop_ascii x950 "filter") "apply"
                   [|x950;((let x941 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x941 "push"
                                 [|(Ojs.fun_to_js 3
                                      (fun (x943 : Ojs.t) ->
                                         fun (x944 : Ojs.t) ->
                                           fun (x945 : Ojs.t) ->
                                             unknown_to_js
                                               (x939 ~value:(Obj.magic x943)
                                                  ~index:(Ojs.float_of_js
                                                            x944)
                                                  ~array:(Ojs.list_of_js
                                                            Obj.magic x945))))|]);
                            (match x940 with
                             | Some x942 ->
                                 ignore
                                   (Ojs.call x941 "push" [|(any_to_js x942)|])
                             | None -> ());
                            x941))|])
    let (reduce :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> 'T)
      =
      fun (x958 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x952 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x958) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x953 : Ojs.t) ->
                       fun (x954 : Ojs.t) ->
                         fun (x955 : Ojs.t) ->
                           fun (x956 : Ojs.t) ->
                             Obj.magic
                               (x952 ~previousValue:(Obj.magic x953)
                                  ~currentValue:(Obj.magic x954)
                                  ~currentIndex:(Ojs.float_of_js x955)
                                  ~array:(Ojs.list_of_js Obj.magic x956))))|])
    let (reduce' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> initialValue:'T -> 'T)
      =
      fun (x968 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x961 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          fun ~initialValue:(x967 : 'T) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x968) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x962 : Ojs.t) ->
                         fun (x963 : Ojs.t) ->
                           fun (x964 : Ojs.t) ->
                             fun (x965 : Ojs.t) ->
                               Obj.magic
                                 (x961 ~previousValue:(Obj.magic x962)
                                    ~currentValue:(Obj.magic x963)
                                    ~currentIndex:(Ojs.float_of_js x964)
                                    ~array:(Ojs.list_of_js Obj.magic x965))));(
                   Obj.magic x967)|])
    let (reduce'' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'U ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x978 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x971 :
                        previousValue:'U ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'U)
          ->
          fun ~initialValue:(x977 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x978) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x972 : Ojs.t) ->
                         fun (x973 : Ojs.t) ->
                           fun (x974 : Ojs.t) ->
                             fun (x975 : Ojs.t) ->
                               Obj.magic
                                 (x971 ~previousValue:(Obj.magic x972)
                                    ~currentValue:(Obj.magic x973)
                                    ~currentIndex:(Ojs.float_of_js x974)
                                    ~array:(Ojs.list_of_js Obj.magic x975))));(
                   Obj.magic x977)|])
    let (reduceRight :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> 'T)
      =
      fun (x987 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x981 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x987) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x982 : Ojs.t) ->
                       fun (x983 : Ojs.t) ->
                         fun (x984 : Ojs.t) ->
                           fun (x985 : Ojs.t) ->
                             Obj.magic
                               (x981 ~previousValue:(Obj.magic x982)
                                  ~currentValue:(Obj.magic x983)
                                  ~currentIndex:(Ojs.float_of_js x984)
                                  ~array:(Ojs.list_of_js Obj.magic x985))))|])
    let (reduceRight' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> initialValue:'T -> 'T)
      =
      fun (x997 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x990 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          fun ~initialValue:(x996 : 'T) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x997) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x991 : Ojs.t) ->
                         fun (x992 : Ojs.t) ->
                           fun (x993 : Ojs.t) ->
                             fun (x994 : Ojs.t) ->
                               Obj.magic
                                 (x990 ~previousValue:(Obj.magic x991)
                                    ~currentValue:(Obj.magic x992)
                                    ~currentIndex:(Ojs.float_of_js x993)
                                    ~array:(Ojs.list_of_js Obj.magic x994))));(
                   Obj.magic x996)|])
    let (reduceRight'' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'U ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x1007 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1000 :
                        previousValue:'U ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'U)
          ->
          fun ~initialValue:(x1006 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1007) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x1001 : Ojs.t) ->
                         fun (x1002 : Ojs.t) ->
                           fun (x1003 : Ojs.t) ->
                             fun (x1004 : Ojs.t) ->
                               Obj.magic
                                 (x1000 ~previousValue:(Obj.magic x1001)
                                    ~currentValue:(Obj.magic x1002)
                                    ~currentIndex:(Ojs.float_of_js x1003)
                                    ~array:(Ojs.list_of_js Obj.magic x1004))));(
                   Obj.magic x1006)|])
    let (get : ('tags, 'T) this -> float -> 'T) =
      fun (x1010 : ('tags, 'T) this) ->
        fun (x1013 : float) ->
          Obj.magic
            (Ojs.get_prop (this_to_js Obj.magic Obj.magic x1010)
               (Ojs.float_to_js x1013))
    let cast_from = Obj.magic
    let (of_ml : 'T list -> 'T t) =
      fun (x1014 : 'T list) ->
        t_of_js Obj.magic (Ojs.list_to_js Obj.magic x1014)
    let (to_ml : 'T t -> 'T list) =
      fun (x1017 : 'T t) ->
        Ojs.list_of_js Obj.magic (t_to_js Obj.magic x1017)
  end
module TemplateStringsArray =
  struct
    type t =
      [ `ReadonlyArray of string  | `ReadonlyArray of string 
      | `TemplateStringsArray  | string ArrayLike.tags_1
      | string IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1021 : Ojs.t) -> t_of_js x1021
    and t_0_to_js : t_0 -> Ojs.t = fun (x1020 : t) -> t_to_js x1020
    type tags =
      [ `ReadonlyArray of string  | `ReadonlyArray of string 
      | `TemplateStringsArray  | string ArrayLike.tags_1
      | string IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `TemplateStringsArray ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x1024 : Ojs.t) -> intf_of_js __tags_of_js x1024
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x1022 : __tags intf) -> intf_to_js __tags_to_js x1022
    let (get_raw : 'tags this -> string list) =
      fun (x1026 : 'tags this) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1026) "raw")
    let (create : raw:string list -> unit -> t) =
      fun ~raw:(x1029 : string list) ->
        fun () ->
          let x1030 = Ojs.empty_obj () in
          Ojs.set_prop_ascii x1030 "raw"
            (Ojs.list_to_js Ojs.string_to_js x1029);
          t_of_js x1030
    let cast_from = Obj.magic
  end
module SyntaxError =
  struct
    type t = [ `Error  | `SyntaxError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1033 : Ojs.t) -> t_of_js x1033
    and t_0_to_js : t_0 -> Ojs.t = fun (x1032 : t) -> t_to_js x1032
    type tags = [ `Error  | `SyntaxError ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `SyntaxError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x1036 : Ojs.t) -> intf_of_js __tags_of_js x1036
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x1034 : __tags intf) -> intf_to_js __tags_to_js x1034
    let (create : ?message:string -> unit -> t) =
      fun ?message:(x1038 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "SyntaxError")
               (let x1039 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x1038 with
                 | Some x1040 ->
                     ignore
                       (Ojs.call x1039 "push" [|(Ojs.string_to_js x1040)|])
                 | None -> ());
                x1039))
    let (invoke : ?message:string -> unit -> t) =
      fun ?message:(x1041 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "SyntaxError") "apply"
               [|Ojs.null;((let x1042 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x1041 with
                             | Some x1043 ->
                                 ignore
                                   (Ojs.call x1042 "push"
                                      [|(Ojs.string_to_js x1043)|])
                             | None -> ());
                            x1042))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "SyntaxError")
             "prototype")
    let cast_from = Obj.magic
  end
module Symbol =
  struct
    type t = [ `Symbol ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1045 : Ojs.t) -> t_of_js x1045
    and t_0_to_js : t_0 -> Ojs.t = fun (x1044 : t) -> t_to_js x1044
    type tags = [ `Symbol ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Symbol ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x1048 : Ojs.t) -> intf_of_js __tags_of_js x1048
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x1046 : __tags intf) -> intf_to_js __tags_to_js x1046
    let (get_description : 'tags this -> string option) =
      fun (x1050 : 'tags this) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1050) "description")
    let (toString : 'tags this -> string) =
      fun (x1053 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1053) "toString" [||])
    let (valueOf : 'tags this -> symbol) =
      fun (x1055 : 'tags this) ->
        symbol_of_js (Ojs.call (this_to_js Obj.magic x1055) "valueOf" [||])
    let (matchAll : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "matchAll")
    let (asyncIterator : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "asyncIterator")
    let (hasInstance : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "hasInstance")
    let (isConcatSpreadable : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "isConcatSpreadable")
    let (match_ : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "match")
    let (replace : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "replace")
    let (search : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "search")
    let (species : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "species")
    let (split : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "split")
    let (toPrimitive : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "toPrimitive")
    let (toStringTag : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "toStringTag")
    let (unscopables : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "unscopables")
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "prototype")
    let (invoke :
      ?description:[ `U1 of string  | `U2 of float ] -> unit -> symbol) =
      fun ?description:(x1057 : [ `U1 of string  | `U2 of float ] option) ->
        fun () ->
          symbol_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Symbol") "apply"
               [|Ojs.null;((let x1058 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x1057 with
                             | Some x1059 ->
                                 ignore
                                   (Ojs.call x1058 "push"
                                      [|((match x1059 with
                                          | `U1 x1060 ->
                                              Ojs.string_to_js x1060
                                          | `U2 x1061 ->
                                              Ojs.float_to_js x1061))|])
                             | None -> ());
                            x1058))|])
    let (for_ : string -> symbol) =
      fun (x1062 : string) ->
        symbol_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Symbol") "for"
             [|(Ojs.string_to_js x1062)|])
    let (keyFor : symbol -> string option) =
      fun (x1063 : symbol) ->
        Ojs.option_of_js Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Symbol") "keyFor"
             [|(symbol_to_js x1063)|])
    let (iterator : unit -> symbol) =
      fun () ->
        symbol_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Symbol")
             "iterator")
    let cast_from = Obj.magic
  end
module Array =
  struct
    module AnonymousInterface0 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x1066 : Ojs.t) -> x1066
        and t_to_js : t -> Ojs.t = fun (x1065 : Ojs.t) -> x1065
        let (get_copyWithin : t -> bool) =
          fun (x1067 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1067) "copyWithin")
        let (set_copyWithin : t -> bool -> unit) =
          fun (x1068 : t) ->
            fun (x1069 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1068) "copyWithin"
                (Ojs.bool_to_js x1069)
        let (get_entries : t -> bool) =
          fun (x1070 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1070) "entries")
        let (set_entries : t -> bool -> unit) =
          fun (x1071 : t) ->
            fun (x1072 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1071) "entries"
                (Ojs.bool_to_js x1072)
        let (get_fill : t -> bool) =
          fun (x1073 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1073) "fill")
        let (set_fill : t -> bool -> unit) =
          fun (x1074 : t) ->
            fun (x1075 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1074) "fill"
                (Ojs.bool_to_js x1075)
        let (get_find : t -> bool) =
          fun (x1076 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1076) "find")
        let (set_find : t -> bool -> unit) =
          fun (x1077 : t) ->
            fun (x1078 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1077) "find"
                (Ojs.bool_to_js x1078)
        let (get_findIndex : t -> bool) =
          fun (x1079 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1079) "findIndex")
        let (set_findIndex : t -> bool -> unit) =
          fun (x1080 : t) ->
            fun (x1081 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1080) "findIndex"
                (Ojs.bool_to_js x1081)
        let (get_keys : t -> bool) =
          fun (x1082 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1082) "keys")
        let (set_keys : t -> bool -> unit) =
          fun (x1083 : t) ->
            fun (x1084 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1083) "keys"
                (Ojs.bool_to_js x1084)
        let (get_values : t -> bool) =
          fun (x1085 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x1085) "values")
        let (set_values : t -> bool -> unit) =
          fun (x1086 : t) ->
            fun (x1087 : bool) ->
              Ojs.set_prop_ascii (t_to_js x1086) "values"
                (Ojs.bool_to_js x1087)
        let (create :
          copyWithin:bool ->
            entries:bool ->
              fill:bool ->
                find:bool ->
                  findIndex:bool -> keys:bool -> values:bool -> unit -> t)
          =
          fun ~copyWithin:(x1088 : bool) ->
            fun ~entries:(x1089 : bool) ->
              fun ~fill:(x1090 : bool) ->
                fun ~find:(x1091 : bool) ->
                  fun ~findIndex:(x1092 : bool) ->
                    fun ~keys:(x1093 : bool) ->
                      fun ~values:(x1094 : bool) ->
                        fun () ->
                          let x1095 = Ojs.empty_obj () in
                          Ojs.set_prop_ascii x1095 "copyWithin"
                            (Ojs.bool_to_js x1088);
                          Ojs.set_prop_ascii x1095 "entries"
                            (Ojs.bool_to_js x1089);
                          Ojs.set_prop_ascii x1095 "fill"
                            (Ojs.bool_to_js x1090);
                          Ojs.set_prop_ascii x1095 "find"
                            (Ojs.bool_to_js x1091);
                          Ojs.set_prop_ascii x1095 "findIndex"
                            (Ojs.bool_to_js x1092);
                          Ojs.set_prop_ascii x1095 "keys"
                            (Ojs.bool_to_js x1093);
                          Ojs.set_prop_ascii x1095 "values"
                            (Ojs.bool_to_js x1094);
                          t_of_js x1095
      end
    type 'T t =
      [ `Array of 'T  | 'T ArrayLike.tags_1 | 'T IterableIterator.tags_1]
        intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x1098 : Ojs.t) -> t_of_js __T_of_js x1098
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x1096 : __T t) -> t_to_js __T_to_js x1096
    type 'T tags =
      [ `Array of 'T  | 'T ArrayLike.tags_1 | 'T IterableIterator.tags_1]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this = 'tags intf constraint 'tags = [> `Array of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x1102 : Ojs.t) -> intf_of_js __tags_of_js x1102
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x1100 : __tags intf) -> intf_to_js __tags_to_js x1100
    let (flatMap :
      ('tags, 'T) this ->
        callback:(this:'This ->
                    value:'T ->
                      index:float ->
                        array:'T list ->
                          [ `U1 of 'U  | `U2 of 'U ReadonlyArray.t ])
          -> ?thisArg:'This -> unit -> 'U list)
      =
      fun (x1116 : ('tags, 'T) this) ->
        fun
          ~callback:(x1104 :
                      this:'This ->
                        value:'T ->
                          index:float ->
                            array:'T list ->
                              [ `U1 of 'U  | `U2 of 'U ReadonlyArray.t ])
          ->
          fun ?thisArg:(x1105 : 'This option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1119 = this_to_js Obj.magic Obj.magic x1116 in
                 Ojs.call (Ojs.get_prop_ascii x1119 "flatMap") "apply"
                   [|x1119;((let x1106 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1106 "push"
                                  [|(Ojs.fun_to_js 4
                                       (fun (x1108 : Ojs.t) ->
                                          fun (x1109 : Ojs.t) ->
                                            fun (x1110 : Ojs.t) ->
                                              fun (x1111 : Ojs.t) ->
                                                match x1104
                                                        ~this:(Obj.magic
                                                                 x1108)
                                                        ~value:(Obj.magic
                                                                  x1109)
                                                        ~index:(Ojs.float_of_js
                                                                  x1110)
                                                        ~array:(Ojs.list_of_js
                                                                  Obj.magic
                                                                  x1111)
                                                with
                                                | `U1 x1113 ->
                                                    Obj.magic x1113
                                                | `U2 x1114 ->
                                                    ReadonlyArray.t_to_js
                                                      Obj.magic x1114))|]);
                             (match x1105 with
                              | Some x1107 ->
                                  ignore
                                    (Ojs.call x1106 "push"
                                       [|(Obj.magic x1107)|])
                              | None -> ());
                             x1106))|])
    let (flat :
      ('tags, 'T) this ->
        this:'A -> ?depth:'D -> unit -> ('A, 'D) FlatArray.t list)
      =
      fun (x1125 : ('tags, 'T) this) ->
        fun ~this:(x1121 : 'A) ->
          fun ?depth:(x1122 : 'D option) ->
            fun () ->
              Ojs.list_of_js
                (fun (x1129 : Ojs.t) ->
                   FlatArray.t_of_js Obj.magic Obj.magic x1129)
                (let x1128 = this_to_js Obj.magic Obj.magic x1125 in
                 Ojs.call (Ojs.get_prop_ascii x1128 "flat") "apply"
                   [|x1128;((let x1123 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1123 "push" [|(Obj.magic x1121)|]);
                             (match x1122 with
                              | Some x1124 ->
                                  ignore
                                    (Ojs.call x1123 "push"
                                       [|(Obj.magic x1124)|])
                              | None -> ());
                             x1123))|])
    let (includes :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> bool)
      =
      fun (x1136 : ('tags, 'T) this) ->
        fun ~searchElement:(x1132 : 'T) ->
          fun ?fromIndex:(x1133 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1139 = this_to_js Obj.magic Obj.magic x1136 in
                 Ojs.call (Ojs.get_prop_ascii x1139 "includes") "apply"
                   [|x1139;((let x1134 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1134 "push" [|(Obj.magic x1132)|]);
                             (match x1133 with
                              | Some x1135 ->
                                  ignore
                                    (Ojs.call x1134 "push"
                                       [|(Ojs.float_to_js x1135)|])
                              | None -> ());
                             x1134))|])
    let (entries : ('tags, 'T) this -> (float * 'T) IterableIterator.t) =
      fun (x1140 : ('tags, 'T) this) ->
        IterableIterator.t_of_js
          (fun (x1143 : Ojs.t) ->
             let x1144 = x1143 in
             ((Ojs.float_of_js (Ojs.array_get x1144 0)),
               (Obj.magic (Ojs.array_get x1144 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic x1140) "entries" [||])
    let (keys : ('tags, 'T) this -> float IterableIterator.t) =
      fun (x1145 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x1145) "keys" [||])
    let (values : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x1149 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x1149) "values" [||])
    let (find :
      ('tags, 'T) this ->
        predicate:(this:unit ->
                     value:'T -> index:float -> obj:'T list -> bool)
          -> ?thisArg:any -> unit -> 'S option)
      =
      fun (x1162 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1153 :
                       this:unit ->
                         value:'T -> index:float -> obj:'T list -> bool)
          ->
          fun ?thisArg:(x1154 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x1165 = this_to_js Obj.magic Obj.magic x1162 in
                 Ojs.call (Ojs.get_prop_ascii x1165 "find") "apply"
                   [|x1165;((let x1155 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1155 "push"
                                  [|(Ojs.fun_to_js 4
                                       (fun (x1157 : Ojs.t) ->
                                          fun (x1158 : Ojs.t) ->
                                            fun (x1159 : Ojs.t) ->
                                              fun (x1160 : Ojs.t) ->
                                                Ojs.bool_to_js
                                                  (x1153
                                                     ~this:(Ojs.unit_of_js
                                                              x1157)
                                                     ~value:(Obj.magic x1158)
                                                     ~index:(Ojs.float_of_js
                                                               x1159)
                                                     ~obj:(Ojs.list_of_js
                                                             Obj.magic x1160))))|]);
                             (match x1154 with
                              | Some x1156 ->
                                  ignore
                                    (Ojs.call x1155 "push"
                                       [|(any_to_js x1156)|])
                              | None -> ());
                             x1155))|])
    let (find' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> obj:'T list -> unknown) ->
          ?thisArg:any -> unit -> 'T option)
      =
      fun (x1175 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1167 :
                       value:'T -> index:float -> obj:'T list -> unknown)
          ->
          fun ?thisArg:(x1168 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x1178 = this_to_js Obj.magic Obj.magic x1175 in
                 Ojs.call (Ojs.get_prop_ascii x1178 "find") "apply"
                   [|x1178;((let x1169 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1169 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1171 : Ojs.t) ->
                                          fun (x1172 : Ojs.t) ->
                                            fun (x1173 : Ojs.t) ->
                                              unknown_to_js
                                                (x1167
                                                   ~value:(Obj.magic x1171)
                                                   ~index:(Ojs.float_of_js
                                                             x1172)
                                                   ~obj:(Ojs.list_of_js
                                                           Obj.magic x1173))))|]);
                             (match x1168 with
                              | Some x1170 ->
                                  ignore
                                    (Ojs.call x1169 "push"
                                       [|(any_to_js x1170)|])
                              | None -> ());
                             x1169))|])
    let (findIndex :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> obj:'T list -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x1188 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1180 :
                       value:'T -> index:float -> obj:'T list -> unknown)
          ->
          fun ?thisArg:(x1181 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x1191 = this_to_js Obj.magic Obj.magic x1188 in
                 Ojs.call (Ojs.get_prop_ascii x1191 "findIndex") "apply"
                   [|x1191;((let x1182 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1182 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1184 : Ojs.t) ->
                                          fun (x1185 : Ojs.t) ->
                                            fun (x1186 : Ojs.t) ->
                                              unknown_to_js
                                                (x1180
                                                   ~value:(Obj.magic x1184)
                                                   ~index:(Ojs.float_of_js
                                                             x1185)
                                                   ~obj:(Ojs.list_of_js
                                                           Obj.magic x1186))))|]);
                             (match x1181 with
                              | Some x1183 ->
                                  ignore
                                    (Ojs.call x1182 "push"
                                       [|(any_to_js x1183)|])
                              | None -> ());
                             x1182))|])
    let (fill :
      ('tags, 'T) this ->
        value:'T -> ?start:float -> ?end_:float -> unit -> ('tags, 'T) this)
      =
      fun (x1198 : ('tags, 'T) this) ->
        fun ~value:(x1192 : 'T) ->
          fun ?start:(x1193 : float option) ->
            fun ?end_:(x1194 : float option) ->
              fun () ->
                this_of_js Obj.magic Obj.magic
                  (let x1201 = this_to_js Obj.magic Obj.magic x1198 in
                   Ojs.call (Ojs.get_prop_ascii x1201 "fill") "apply"
                     [|x1201;((let x1195 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1195 "push" [|(Obj.magic x1192)|]);
                               (match x1193 with
                                | Some x1197 ->
                                    ignore
                                      (Ojs.call x1195 "push"
                                         [|(Ojs.float_to_js x1197)|])
                                | None -> ());
                               (match x1194 with
                                | Some x1196 ->
                                    ignore
                                      (Ojs.call x1195 "push"
                                         [|(Ojs.float_to_js x1196)|])
                                | None -> ());
                               x1195))|])
    let (copyWithin :
      ('tags, 'T) this ->
        target:float ->
          start:float -> ?end_:float -> unit -> ('tags, 'T) this)
      =
      fun (x1209 : ('tags, 'T) this) ->
        fun ~target:(x1204 : float) ->
          fun ~start:(x1205 : float) ->
            fun ?end_:(x1206 : float option) ->
              fun () ->
                this_of_js Obj.magic Obj.magic
                  (let x1212 = this_to_js Obj.magic Obj.magic x1209 in
                   Ojs.call (Ojs.get_prop_ascii x1212 "copyWithin") "apply"
                     [|x1212;((let x1207 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1207 "push"
                                    [|(Ojs.float_to_js x1204)|]);
                               ignore
                                 (Ojs.call x1207 "push"
                                    [|(Ojs.float_to_js x1205)|]);
                               (match x1206 with
                                | Some x1208 ->
                                    ignore
                                      (Ojs.call x1207 "push"
                                         [|(Ojs.float_to_js x1208)|])
                                | None -> ());
                               x1207))|])
    let (get_length : ('tags, 'T) this -> float) =
      fun (x1215 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x1215) "length")
    let (set_length : ('tags, 'T) this -> float -> unit) =
      fun (x1218 : ('tags, 'T) this) ->
        fun (x1219 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x1218) "length"
            (Ojs.float_to_js x1219)
    let (toString : ('tags, 'T) this -> string) =
      fun (x1222 : ('tags, 'T) this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x1222) "toString" [||])
    let (toLocaleString : ('tags, 'T) this -> string) =
      fun (x1225 : ('tags, 'T) this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic Obj.magic x1225) "toLocaleString"
             [||])
    let (pop : ('tags, 'T) this -> 'T option) =
      fun (x1228 : ('tags, 'T) this) ->
        Ojs.option_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x1228) "pop" [||])
    let (push : ('tags, 'T) this -> items:'T list -> float) =
      fun (x1235 : ('tags, 'T) this) ->
        fun ~items:(x1232 : 'T list) ->
          Ojs.float_of_js
            (let x1238 = this_to_js Obj.magic Obj.magic x1235 in
             Ojs.call (Ojs.get_prop_ascii x1238 "push") "apply"
               [|x1238;((let x1233 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x1234 : 'T) ->
                              ignore
                                (Ojs.call x1233 "push" [|(Obj.magic x1234)|]))
                           x1232;
                         x1233))|])
    let (concat : ('tags, 'T) this -> items:'T ConcatArray.t list -> 'T list)
      =
      fun (x1243 : ('tags, 'T) this) ->
        fun ~items:(x1239 : 'T ConcatArray.t list) ->
          Ojs.list_of_js Obj.magic
            (let x1246 = this_to_js Obj.magic Obj.magic x1243 in
             Ojs.call (Ojs.get_prop_ascii x1246 "concat") "apply"
               [|x1246;((let x1240 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x1241 : 'T ConcatArray.t) ->
                              ignore
                                (Ojs.call x1240 "push"
                                   [|(ConcatArray.t_to_js Obj.magic x1241)|]))
                           x1239;
                         x1240))|])
    let (concat' :
      ('tags, 'T) this ->
        items:[ `U1 of 'T  | `U2 of 'T ConcatArray.t ] list -> 'T list)
      =
      fun (x1254 : ('tags, 'T) this) ->
        fun ~items:(x1248 : [ `U1 of 'T  | `U2 of 'T ConcatArray.t ] list) ->
          Ojs.list_of_js Obj.magic
            (let x1257 = this_to_js Obj.magic Obj.magic x1254 in
             Ojs.call (Ojs.get_prop_ascii x1257 "concat") "apply"
               [|x1257;((let x1249 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun
                              (x1250 :
                                [ `U1 of 'T  | `U2 of 'T ConcatArray.t ])
                              ->
                              ignore
                                (Ojs.call x1249 "push"
                                   [|((match x1250 with
                                       | `U1 x1251 -> Obj.magic x1251
                                       | `U2 x1252 ->
                                           ConcatArray.t_to_js Obj.magic
                                             x1252))|])) x1248;
                         x1249))|])
    let (join : ('tags, 'T) this -> ?separator:string -> unit -> string) =
      fun (x1262 : ('tags, 'T) this) ->
        fun ?separator:(x1259 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x1265 = this_to_js Obj.magic Obj.magic x1262 in
               Ojs.call (Ojs.get_prop_ascii x1265 "join") "apply"
                 [|x1265;((let x1260 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x1259 with
                            | Some x1261 ->
                                ignore
                                  (Ojs.call x1260 "push"
                                     [|(Ojs.string_to_js x1261)|])
                            | None -> ());
                           x1260))|])
    let (reverse : ('tags, 'T) this -> 'T list) =
      fun (x1266 : ('tags, 'T) this) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x1266) "reverse" [||])
    let (shift : ('tags, 'T) this -> 'T option) =
      fun (x1270 : ('tags, 'T) this) ->
        Ojs.option_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x1270) "shift" [||])
    let (slice :
      ('tags, 'T) this -> ?start:float -> ?end_:float -> unit -> 'T list) =
      fun (x1279 : ('tags, 'T) this) ->
        fun ?start:(x1274 : float option) ->
          fun ?end_:(x1275 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1282 = this_to_js Obj.magic Obj.magic x1279 in
                 Ojs.call (Ojs.get_prop_ascii x1282 "slice") "apply"
                   [|x1282;((let x1276 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1274 with
                              | Some x1278 ->
                                  ignore
                                    (Ojs.call x1276 "push"
                                       [|(Ojs.float_to_js x1278)|])
                              | None -> ());
                             (match x1275 with
                              | Some x1277 ->
                                  ignore
                                    (Ojs.call x1276 "push"
                                       [|(Ojs.float_to_js x1277)|])
                              | None -> ());
                             x1276))|])
    let (sort :
      ('tags, 'T) this ->
        ?compareFn:(a:'T -> b:'T -> float) -> unit -> ('tags, 'T) this)
      =
      fun (x1289 : ('tags, 'T) this) ->
        fun ?compareFn:(x1284 : (a:'T -> b:'T -> float) option) ->
          fun () ->
            this_of_js Obj.magic Obj.magic
              (let x1292 = this_to_js Obj.magic Obj.magic x1289 in
               Ojs.call (Ojs.get_prop_ascii x1292 "sort") "apply"
                 [|x1292;((let x1285 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x1284 with
                            | Some x1286 ->
                                ignore
                                  (Ojs.call x1285 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x1287 : Ojs.t) ->
                                             fun (x1288 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x1286 ~a:(Obj.magic x1287)
                                                    ~b:(Obj.magic x1288))))|])
                            | None -> ());
                           x1285))|])
    let (splice :
      ('tags, 'T) this ->
        start:float -> ?deleteCount:float -> unit -> 'T list)
      =
      fun (x1299 : ('tags, 'T) this) ->
        fun ~start:(x1295 : float) ->
          fun ?deleteCount:(x1296 : float option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1302 = this_to_js Obj.magic Obj.magic x1299 in
                 Ojs.call (Ojs.get_prop_ascii x1302 "splice") "apply"
                   [|x1302;((let x1297 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1297 "push"
                                  [|(Ojs.float_to_js x1295)|]);
                             (match x1296 with
                              | Some x1298 ->
                                  ignore
                                    (Ojs.call x1297 "push"
                                       [|(Ojs.float_to_js x1298)|])
                              | None -> ());
                             x1297))|])
    let (splice' :
      ('tags, 'T) this ->
        start:float -> deleteCount:float -> items:'T list -> 'T list)
      =
      fun (x1309 : ('tags, 'T) this) ->
        fun ~start:(x1304 : float) ->
          fun ~deleteCount:(x1305 : float) ->
            fun ~items:(x1306 : 'T list) ->
              Ojs.list_of_js Obj.magic
                (let x1312 = this_to_js Obj.magic Obj.magic x1309 in
                 Ojs.call (Ojs.get_prop_ascii x1312 "splice") "apply"
                   [|x1312;((let x1307 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1307 "push"
                                  [|(Ojs.float_to_js x1304)|]);
                             ignore
                               (Ojs.call x1307 "push"
                                  [|(Ojs.float_to_js x1305)|]);
                             List.iter
                               (fun (x1308 : 'T) ->
                                  ignore
                                    (Ojs.call x1307 "push"
                                       [|(Obj.magic x1308)|])) x1306;
                             x1307))|])
    let (unshift : ('tags, 'T) this -> items:'T list -> float) =
      fun (x1317 : ('tags, 'T) this) ->
        fun ~items:(x1314 : 'T list) ->
          Ojs.float_of_js
            (let x1320 = this_to_js Obj.magic Obj.magic x1317 in
             Ojs.call (Ojs.get_prop_ascii x1320 "unshift") "apply"
               [|x1320;((let x1315 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x1316 : 'T) ->
                              ignore
                                (Ojs.call x1315 "push" [|(Obj.magic x1316)|]))
                           x1314;
                         x1315))|])
    let (indexOf :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> float)
      =
      fun (x1325 : ('tags, 'T) this) ->
        fun ~searchElement:(x1321 : 'T) ->
          fun ?fromIndex:(x1322 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1328 = this_to_js Obj.magic Obj.magic x1325 in
                 Ojs.call (Ojs.get_prop_ascii x1328 "indexOf") "apply"
                   [|x1328;((let x1323 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1323 "push" [|(Obj.magic x1321)|]);
                             (match x1322 with
                              | Some x1324 ->
                                  ignore
                                    (Ojs.call x1323 "push"
                                       [|(Ojs.float_to_js x1324)|])
                              | None -> ());
                             x1323))|])
    let (lastIndexOf :
      ('tags, 'T) this ->
        searchElement:'T -> ?fromIndex:float -> unit -> float)
      =
      fun (x1333 : ('tags, 'T) this) ->
        fun ~searchElement:(x1329 : 'T) ->
          fun ?fromIndex:(x1330 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1336 = this_to_js Obj.magic Obj.magic x1333 in
                 Ojs.call (Ojs.get_prop_ascii x1336 "lastIndexOf") "apply"
                   [|x1336;((let x1331 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1331 "push" [|(Obj.magic x1329)|]);
                             (match x1330 with
                              | Some x1332 ->
                                  ignore
                                    (Ojs.call x1331 "push"
                                       [|(Ojs.float_to_js x1332)|])
                              | None -> ());
                             x1331))|])
    let (every :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x1345 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1337 :
                       value:'T -> index:float -> array:'T list -> bool)
          ->
          fun ?thisArg:(x1338 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1348 = this_to_js Obj.magic Obj.magic x1345 in
                 Ojs.call (Ojs.get_prop_ascii x1348 "every") "apply"
                   [|x1348;((let x1339 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1339 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1341 : Ojs.t) ->
                                          fun (x1342 : Ojs.t) ->
                                            fun (x1343 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x1337
                                                   ~value:(Obj.magic x1341)
                                                   ~index:(Ojs.float_of_js
                                                             x1342)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1343))))|]);
                             (match x1338 with
                              | Some x1340 ->
                                  ignore
                                    (Ojs.call x1339 "push"
                                       [|(any_to_js x1340)|])
                              | None -> ());
                             x1339))|])
    let (every' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x1357 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1349 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x1350 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1360 = this_to_js Obj.magic Obj.magic x1357 in
                 Ojs.call (Ojs.get_prop_ascii x1360 "every") "apply"
                   [|x1360;((let x1351 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1351 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1353 : Ojs.t) ->
                                          fun (x1354 : Ojs.t) ->
                                            fun (x1355 : Ojs.t) ->
                                              unknown_to_js
                                                (x1349
                                                   ~value:(Obj.magic x1353)
                                                   ~index:(Ojs.float_of_js
                                                             x1354)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1355))))|]);
                             (match x1350 with
                              | Some x1352 ->
                                  ignore
                                    (Ojs.call x1351 "push"
                                       [|(any_to_js x1352)|])
                              | None -> ());
                             x1351))|])
    let (some :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x1369 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1361 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x1362 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x1372 = this_to_js Obj.magic Obj.magic x1369 in
                 Ojs.call (Ojs.get_prop_ascii x1372 "some") "apply"
                   [|x1372;((let x1363 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1363 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1365 : Ojs.t) ->
                                          fun (x1366 : Ojs.t) ->
                                            fun (x1367 : Ojs.t) ->
                                              unknown_to_js
                                                (x1361
                                                   ~value:(Obj.magic x1365)
                                                   ~index:(Ojs.float_of_js
                                                             x1366)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1367))))|]);
                             (match x1362 with
                              | Some x1364 ->
                                  ignore
                                    (Ojs.call x1363 "push"
                                       [|(any_to_js x1364)|])
                              | None -> ());
                             x1363))|])
    let (forEach :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> index:float -> array:'T list -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x1381 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1373 :
                        value:'T -> index:float -> array:'T list -> unit)
          ->
          fun ?thisArg:(x1374 : any option) ->
            fun () ->
              ignore
                (let x1384 = this_to_js Obj.magic Obj.magic x1381 in
                 Ojs.call (Ojs.get_prop_ascii x1384 "forEach") "apply"
                   [|x1384;((let x1375 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1375 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1377 : Ojs.t) ->
                                          fun (x1378 : Ojs.t) ->
                                            fun (x1379 : Ojs.t) ->
                                              x1373 ~value:(Obj.magic x1377)
                                                ~index:(Ojs.float_of_js x1378)
                                                ~array:(Ojs.list_of_js
                                                          Obj.magic x1379)))|]);
                             (match x1374 with
                              | Some x1376 ->
                                  ignore
                                    (Ojs.call x1375 "push"
                                       [|(any_to_js x1376)|])
                              | None -> ());
                             x1375))|])
    let (map :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> index:float -> array:'T list -> 'U) ->
          ?thisArg:any -> unit -> 'U list)
      =
      fun (x1393 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1385 :
                        value:'T -> index:float -> array:'T list -> 'U)
          ->
          fun ?thisArg:(x1386 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1396 = this_to_js Obj.magic Obj.magic x1393 in
                 Ojs.call (Ojs.get_prop_ascii x1396 "map") "apply"
                   [|x1396;((let x1387 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1387 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1389 : Ojs.t) ->
                                          fun (x1390 : Ojs.t) ->
                                            fun (x1391 : Ojs.t) ->
                                              Obj.magic
                                                (x1385
                                                   ~value:(Obj.magic x1389)
                                                   ~index:(Ojs.float_of_js
                                                             x1390)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1391))))|]);
                             (match x1386 with
                              | Some x1388 ->
                                  ignore
                                    (Ojs.call x1387 "push"
                                       [|(any_to_js x1388)|])
                              | None -> ());
                             x1387))|])
    let (filter :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> bool) ->
          ?thisArg:any -> unit -> 'S list)
      =
      fun (x1406 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1398 :
                       value:'T -> index:float -> array:'T list -> bool)
          ->
          fun ?thisArg:(x1399 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1409 = this_to_js Obj.magic Obj.magic x1406 in
                 Ojs.call (Ojs.get_prop_ascii x1409 "filter") "apply"
                   [|x1409;((let x1400 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1400 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1402 : Ojs.t) ->
                                          fun (x1403 : Ojs.t) ->
                                            fun (x1404 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x1398
                                                   ~value:(Obj.magic x1402)
                                                   ~index:(Ojs.float_of_js
                                                             x1403)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1404))))|]);
                             (match x1399 with
                              | Some x1401 ->
                                  ignore
                                    (Ojs.call x1400 "push"
                                       [|(any_to_js x1401)|])
                              | None -> ());
                             x1400))|])
    let (filter' :
      ('tags, 'T) this ->
        predicate:(value:'T -> index:float -> array:'T list -> unknown) ->
          ?thisArg:any -> unit -> 'T list)
      =
      fun (x1419 : ('tags, 'T) this) ->
        fun
          ~predicate:(x1411 :
                       value:'T -> index:float -> array:'T list -> unknown)
          ->
          fun ?thisArg:(x1412 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1422 = this_to_js Obj.magic Obj.magic x1419 in
                 Ojs.call (Ojs.get_prop_ascii x1422 "filter") "apply"
                   [|x1422;((let x1413 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1413 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x1415 : Ojs.t) ->
                                          fun (x1416 : Ojs.t) ->
                                            fun (x1417 : Ojs.t) ->
                                              unknown_to_js
                                                (x1411
                                                   ~value:(Obj.magic x1415)
                                                   ~index:(Ojs.float_of_js
                                                             x1416)
                                                   ~array:(Ojs.list_of_js
                                                             Obj.magic x1417))))|]);
                             (match x1412 with
                              | Some x1414 ->
                                  ignore
                                    (Ojs.call x1413 "push"
                                       [|(any_to_js x1414)|])
                              | None -> ());
                             x1413))|])
    let (reduce :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> 'T)
      =
      fun (x1430 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1424 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x1430) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x1425 : Ojs.t) ->
                       fun (x1426 : Ojs.t) ->
                         fun (x1427 : Ojs.t) ->
                           fun (x1428 : Ojs.t) ->
                             Obj.magic
                               (x1424 ~previousValue:(Obj.magic x1425)
                                  ~currentValue:(Obj.magic x1426)
                                  ~currentIndex:(Ojs.float_of_js x1427)
                                  ~array:(Ojs.list_of_js Obj.magic x1428))))|])
    let (reduce' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> initialValue:'T -> 'T)
      =
      fun (x1440 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1433 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          fun ~initialValue:(x1439 : 'T) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1440) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x1434 : Ojs.t) ->
                         fun (x1435 : Ojs.t) ->
                           fun (x1436 : Ojs.t) ->
                             fun (x1437 : Ojs.t) ->
                               Obj.magic
                                 (x1433 ~previousValue:(Obj.magic x1434)
                                    ~currentValue:(Obj.magic x1435)
                                    ~currentIndex:(Ojs.float_of_js x1436)
                                    ~array:(Ojs.list_of_js Obj.magic x1437))));(
                   Obj.magic x1439)|])
    let (reduce'' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'U ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x1450 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1443 :
                        previousValue:'U ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'U)
          ->
          fun ~initialValue:(x1449 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1450) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x1444 : Ojs.t) ->
                         fun (x1445 : Ojs.t) ->
                           fun (x1446 : Ojs.t) ->
                             fun (x1447 : Ojs.t) ->
                               Obj.magic
                                 (x1443 ~previousValue:(Obj.magic x1444)
                                    ~currentValue:(Obj.magic x1445)
                                    ~currentIndex:(Ojs.float_of_js x1446)
                                    ~array:(Ojs.list_of_js Obj.magic x1447))));(
                   Obj.magic x1449)|])
    let (reduceRight :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> 'T)
      =
      fun (x1459 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1453 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x1459) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x1454 : Ojs.t) ->
                       fun (x1455 : Ojs.t) ->
                         fun (x1456 : Ojs.t) ->
                           fun (x1457 : Ojs.t) ->
                             Obj.magic
                               (x1453 ~previousValue:(Obj.magic x1454)
                                  ~currentValue:(Obj.magic x1455)
                                  ~currentIndex:(Ojs.float_of_js x1456)
                                  ~array:(Ojs.list_of_js Obj.magic x1457))))|])
    let (reduceRight' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'T ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'T)
          -> initialValue:'T -> 'T)
      =
      fun (x1469 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1462 :
                        previousValue:'T ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'T)
          ->
          fun ~initialValue:(x1468 : 'T) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1469) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x1463 : Ojs.t) ->
                         fun (x1464 : Ojs.t) ->
                           fun (x1465 : Ojs.t) ->
                             fun (x1466 : Ojs.t) ->
                               Obj.magic
                                 (x1462 ~previousValue:(Obj.magic x1463)
                                    ~currentValue:(Obj.magic x1464)
                                    ~currentIndex:(Ojs.float_of_js x1465)
                                    ~array:(Ojs.list_of_js Obj.magic x1466))));(
                   Obj.magic x1468)|])
    let (reduceRight'' :
      ('tags, 'T) this ->
        callbackfn:(previousValue:'U ->
                      currentValue:'T ->
                        currentIndex:float -> array:'T list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x1479 : ('tags, 'T) this) ->
        fun
          ~callbackfn:(x1472 :
                        previousValue:'U ->
                          currentValue:'T ->
                            currentIndex:float -> array:'T list -> 'U)
          ->
          fun ~initialValue:(x1478 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic x1479) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x1473 : Ojs.t) ->
                         fun (x1474 : Ojs.t) ->
                           fun (x1475 : Ojs.t) ->
                             fun (x1476 : Ojs.t) ->
                               Obj.magic
                                 (x1472 ~previousValue:(Obj.magic x1473)
                                    ~currentValue:(Obj.magic x1474)
                                    ~currentIndex:(Ojs.float_of_js x1475)
                                    ~array:(Ojs.list_of_js Obj.magic x1476))));(
                   Obj.magic x1478)|])
    let (get : ('tags, 'T) this -> float -> 'T) =
      fun (x1482 : ('tags, 'T) this) ->
        fun (x1485 : float) ->
          Obj.magic
            (Ojs.get_prop (this_to_js Obj.magic Obj.magic x1482)
               (Ojs.float_to_js x1485))
    let (set : ('tags, 'T) this -> float -> 'T -> unit) =
      fun (x1486 : ('tags, 'T) this) ->
        fun (x1489 : float) ->
          fun (x1490 : 'T) ->
            Ojs.set_prop (this_to_js Obj.magic Obj.magic x1486)
              (Ojs.float_to_js x1489) (Obj.magic x1490)
    let (from : [ `U1 of 'T Iterable.t  | `U2 of 'T ArrayLike.t ] -> 'T list)
      =
      fun (x1491 : [ `U1 of 'T Iterable.t  | `U2 of 'T ArrayLike.t ]) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "from"
             [|((match x1491 with
                 | `U1 x1492 -> Iterable.t_to_js Obj.magic x1492
                 | `U2 x1494 -> ArrayLike.t_to_js Obj.magic x1494))|])
    let (from' :
      iterable:[ `U1 of 'T Iterable.t  | `U2 of 'T ArrayLike.t ] ->
        mapfn:(v:'T -> k:float -> 'U) -> ?thisArg:any -> unit -> 'U list)
      =
      fun
        ~iterable:(x1497 : [ `U1 of 'T Iterable.t  | `U2 of 'T ArrayLike.t ])
        ->
        fun ~mapfn:(x1498 : v:'T -> k:float -> 'U) ->
          fun ?thisArg:(x1499 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1508 = Ojs.get_prop_ascii Ojs.global "Array" in
                 Ojs.call (Ojs.get_prop_ascii x1508 "from") "apply"
                   [|x1508;((let x1500 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1500 "push"
                                  [|((match x1497 with
                                      | `U1 x1504 ->
                                          Iterable.t_to_js Obj.magic x1504
                                      | `U2 x1506 ->
                                          ArrayLike.t_to_js Obj.magic x1506))|]);
                             ignore
                               (Ojs.call x1500 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x1502 : Ojs.t) ->
                                          fun (x1503 : Ojs.t) ->
                                            Obj.magic
                                              (x1498 ~v:(Obj.magic x1502)
                                                 ~k:(Ojs.float_of_js x1503))))|]);
                             (match x1499 with
                              | Some x1501 ->
                                  ignore
                                    (Ojs.call x1500 "push"
                                       [|(any_to_js x1501)|])
                              | None -> ());
                             x1500))|])
    let (from'' : 'T ArrayLike.t -> 'T list) =
      fun (x1510 : 'T ArrayLike.t) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "from"
             [|(ArrayLike.t_to_js Obj.magic x1510)|])
    let (from''' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> 'U) -> ?thisArg:any -> unit -> 'U list)
      =
      fun ~arrayLike:(x1513 : 'T ArrayLike.t) ->
        fun ~mapfn:(x1514 : v:'T -> k:float -> 'U) ->
          fun ?thisArg:(x1515 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x1521 = Ojs.get_prop_ascii Ojs.global "Array" in
                 Ojs.call (Ojs.get_prop_ascii x1521 "from") "apply"
                   [|x1521;((let x1516 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1516 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x1513)|]);
                             ignore
                               (Ojs.call x1516 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x1518 : Ojs.t) ->
                                          fun (x1519 : Ojs.t) ->
                                            Obj.magic
                                              (x1514 ~v:(Obj.magic x1518)
                                                 ~k:(Ojs.float_of_js x1519))))|]);
                             (match x1515 with
                              | Some x1517 ->
                                  ignore
                                    (Ojs.call x1516 "push"
                                       [|(any_to_js x1517)|])
                              | None -> ());
                             x1516))|])
    let (of_ : 'T list -> 'T list) =
      fun (x1523 : 'T list) ->
        Ojs.list_of_js Obj.magic
          (let x1526 = Ojs.get_prop_ascii Ojs.global "Array" in
           Ojs.call (Ojs.get_prop_ascii x1526 "of") "apply"
             [|x1526;((let x1524 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x1525 : 'T) ->
                            ignore
                              (Ojs.call x1524 "push" [|(Obj.magic x1525)|]))
                         x1523;
                       x1524))|])
    let (create : ?arrayLength:float -> unit -> any list) =
      fun ?arrayLength:(x1528 : float option) ->
        fun () ->
          Ojs.list_of_js any_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Array")
               (let x1529 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x1528 with
                 | Some x1530 ->
                     ignore
                       (Ojs.call x1529 "push" [|(Ojs.float_to_js x1530)|])
                 | None -> ());
                x1529))
    let (create' : float -> 'T list) =
      fun (x1532 : float) ->
        Ojs.list_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
             [|(Ojs.float_to_js x1532)|])
    let (create'' : 'T list -> 'T list) =
      fun (x1534 : 'T list) ->
        Ojs.list_of_js Obj.magic
          (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Array")
             (let x1535 =
                Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
              List.iter
                (fun (x1536 : 'T) ->
                   ignore (Ojs.call x1535 "push" [|(Obj.magic x1536)|]))
                x1534;
              x1535))
    let (invoke : ?arrayLength:float -> unit -> any list) =
      fun ?arrayLength:(x1538 : float option) ->
        fun () ->
          Ojs.list_of_js any_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "apply"
               [|Ojs.null;((let x1539 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x1538 with
                             | Some x1540 ->
                                 ignore
                                   (Ojs.call x1539 "push"
                                      [|(Ojs.float_to_js x1540)|])
                             | None -> ());
                            x1539))|])
    let (invoke' : float -> 'T list) =
      fun (x1542 : float) ->
        Ojs.list_of_js Obj.magic
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "Array")
             [|(Ojs.float_to_js x1542)|])
    let (invoke'' : 'T list -> 'T list) =
      fun (x1544 : 'T list) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "apply"
             [|Ojs.null;((let x1545 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x1546 : 'T) ->
                               ignore
                                 (Ojs.call x1545 "push" [|(Obj.magic x1546)|]))
                            x1544;
                          x1545))|])
    let (isArray : any -> bool) =
      fun (x1548 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "isArray"
             [|(any_to_js x1548)|])
    let (prototype : unit -> any list) =
      fun () ->
        Ojs.list_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Array")
             "prototype")
    let cast_from = Obj.magic
    let (of_ml : 'T list -> 'T t) =
      fun (x1550 : 'T list) ->
        t_of_js Obj.magic (Ojs.list_to_js Obj.magic x1550)
    let (to_ml : 'T t -> 'T list) =
      fun (x1553 : 'T t) ->
        Ojs.list_of_js Obj.magic (t_to_js Obj.magic x1553)
  end
module RegExpMatchArray =
  struct
    module AnonymousInterface16 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x1557 : Ojs.t) -> x1557
        and t_to_js : t -> Ojs.t = fun (x1556 : Ojs.t) -> x1556
        let (get : t -> string -> string) =
          fun (x1558 : t) ->
            fun (x1559 : string) ->
              Ojs.string_of_js
                (Ojs.get_prop (t_to_js x1558) (Ojs.string_to_js x1559))
        let (set : t -> string -> string -> unit) =
          fun (x1560 : t) ->
            fun (x1561 : string) ->
              fun (x1562 : string) ->
                Ojs.set_prop (t_to_js x1560) (Ojs.string_to_js x1561)
                  (Ojs.string_to_js x1562)
      end
    type t =
      [ `Array of string  | `Array of string  | `RegExpMatchArray 
      | string ArrayLike.tags_1 | string IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1564 : Ojs.t) -> t_of_js x1564
    and t_0_to_js : t_0 -> Ojs.t = fun (x1563 : t) -> t_to_js x1563
    type tags =
      [ `Array of string  | `Array of string  | `RegExpMatchArray 
      | string ArrayLike.tags_1 | string IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `RegExpMatchArray ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x1567 : Ojs.t) -> intf_of_js __tags_of_js x1567
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x1565 : __tags intf) -> intf_to_js __tags_to_js x1565
    let (get_groups : 'tags this -> AnonymousInterface16.t) =
      fun (x1569 : 'tags this) ->
        AnonymousInterface16.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1569) "groups")
    let (set_groups : 'tags this -> AnonymousInterface16.t -> unit) =
      fun (x1571 : 'tags this) ->
        fun (x1572 : AnonymousInterface16.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1571) "groups"
            (AnonymousInterface16.t_to_js x1572)
    let (get_index : 'tags this -> float) =
      fun (x1574 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1574) "index")
    let (set_index : 'tags this -> float -> unit) =
      fun (x1576 : 'tags this) ->
        fun (x1577 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1576) "index"
            (Ojs.float_to_js x1577)
    let (get_input : 'tags this -> string) =
      fun (x1579 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1579) "input")
    let (set_input : 'tags this -> string -> unit) =
      fun (x1581 : 'tags this) ->
        fun (x1582 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1581) "input"
            (Ojs.string_to_js x1582)
    let (create :
      groups:AnonymousInterface16.t ->
        index:float -> input:string -> unit -> t)
      =
      fun ~groups:(x1584 : AnonymousInterface16.t) ->
        fun ~index:(x1585 : float) ->
          fun ~input:(x1586 : string) ->
            fun () ->
              let x1587 = Ojs.empty_obj () in
              Ojs.set_prop_ascii x1587 "groups"
                (AnonymousInterface16.t_to_js x1584);
              Ojs.set_prop_ascii x1587 "index" (Ojs.float_to_js x1585);
              Ojs.set_prop_ascii x1587 "input" (Ojs.string_to_js x1586);
              t_of_js x1587
    let cast_from = Obj.magic
  end
module RegExpExecArray =
  struct
    module AnonymousInterface16 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x1589 : Ojs.t) -> x1589
        and t_to_js : t -> Ojs.t = fun (x1588 : Ojs.t) -> x1588
        let (get : t -> string -> string) =
          fun (x1590 : t) ->
            fun (x1591 : string) ->
              Ojs.string_of_js
                (Ojs.get_prop (t_to_js x1590) (Ojs.string_to_js x1591))
        let (set : t -> string -> string -> unit) =
          fun (x1592 : t) ->
            fun (x1593 : string) ->
              fun (x1594 : string) ->
                Ojs.set_prop (t_to_js x1592) (Ojs.string_to_js x1593)
                  (Ojs.string_to_js x1594)
      end
    type t =
      [ `Array of string  | `Array of string  | `RegExpExecArray 
      | string ArrayLike.tags_1 | string IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1596 : Ojs.t) -> t_of_js x1596
    and t_0_to_js : t_0 -> Ojs.t = fun (x1595 : t) -> t_to_js x1595
    type tags =
      [ `Array of string  | `Array of string  | `RegExpExecArray 
      | string ArrayLike.tags_1 | string IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `RegExpExecArray ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x1599 : Ojs.t) -> intf_of_js __tags_of_js x1599
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x1597 : __tags intf) -> intf_to_js __tags_to_js x1597
    let (get_groups : 'tags this -> AnonymousInterface16.t) =
      fun (x1601 : 'tags this) ->
        AnonymousInterface16.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1601) "groups")
    let (set_groups : 'tags this -> AnonymousInterface16.t -> unit) =
      fun (x1603 : 'tags this) ->
        fun (x1604 : AnonymousInterface16.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1603) "groups"
            (AnonymousInterface16.t_to_js x1604)
    let (get_index : 'tags this -> float) =
      fun (x1606 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1606) "index")
    let (set_index : 'tags this -> float -> unit) =
      fun (x1608 : 'tags this) ->
        fun (x1609 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1608) "index"
            (Ojs.float_to_js x1609)
    let (get_input : 'tags this -> string) =
      fun (x1611 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1611) "input")
    let (set_input : 'tags this -> string -> unit) =
      fun (x1613 : 'tags this) ->
        fun (x1614 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1613) "input"
            (Ojs.string_to_js x1614)
    let (create :
      groups:AnonymousInterface16.t ->
        index:float -> input:string -> unit -> t)
      =
      fun ~groups:(x1616 : AnonymousInterface16.t) ->
        fun ~index:(x1617 : float) ->
          fun ~input:(x1618 : string) ->
            fun () ->
              let x1619 = Ojs.empty_obj () in
              Ojs.set_prop_ascii x1619 "groups"
                (AnonymousInterface16.t_to_js x1616);
              Ojs.set_prop_ascii x1619 "index" (Ojs.float_to_js x1617);
              Ojs.set_prop_ascii x1619 "input" (Ojs.string_to_js x1618);
              t_of_js x1619
    let cast_from = Obj.magic
  end
module RegExp =
  struct
    type t = [ `RegExp ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1621 : Ojs.t) -> t_of_js x1621
    and t_0_to_js : t_0 -> Ojs.t = fun (x1620 : t) -> t_to_js x1620
    type tags = [ `RegExp ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `RegExp ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x1624 : Ojs.t) -> intf_of_js __tags_of_js x1624
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x1622 : __tags intf) -> intf_to_js __tags_to_js x1622
    let (get_dotAll : 'tags this -> bool) =
      fun (x1626 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1626) "dotAll")
    let (get_flags : 'tags this -> string) =
      fun (x1628 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1628) "flags")
    let (get_sticky : 'tags this -> bool) =
      fun (x1630 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1630) "sticky")
    let (get_unicode : 'tags this -> bool) =
      fun (x1632 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1632) "unicode")
    let (exec : 'tags this -> string:string -> RegExpExecArray.t option) =
      fun (x1635 : 'tags this) ->
        fun ~string:(x1634 : string) ->
          Ojs.option_of_js RegExpExecArray.t_of_js
            (Ojs.call (this_to_js Obj.magic x1635) "exec"
               [|(Ojs.string_to_js x1634)|])
    let (test : 'tags this -> string:string -> bool) =
      fun (x1639 : 'tags this) ->
        fun ~string:(x1638 : string) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic x1639) "test"
               [|(Ojs.string_to_js x1638)|])
    let (get_source : 'tags this -> string) =
      fun (x1641 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1641) "source")
    let (get_global : 'tags this -> bool) =
      fun (x1643 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1643) "global")
    let (get_ignoreCase : 'tags this -> bool) =
      fun (x1645 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1645) "ignoreCase")
    let (get_multiline : 'tags this -> bool) =
      fun (x1647 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1647) "multiline")
    let (get_lastIndex : 'tags this -> float) =
      fun (x1649 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x1649) "lastIndex")
    let (set_lastIndex : 'tags this -> float -> unit) =
      fun (x1651 : 'tags this) ->
        fun (x1652 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x1651) "lastIndex"
            (Ojs.float_to_js x1652)
    let (compile :
      'tags this -> pattern:string -> ?flags:string -> unit -> 'tags this) =
      fun (x1658 : 'tags this) ->
        fun ~pattern:(x1654 : string) ->
          fun ?flags:(x1655 : string option) ->
            fun () ->
              this_of_js Obj.magic
                (let x1660 = this_to_js Obj.magic x1658 in
                 Ojs.call (Ojs.get_prop_ascii x1660 "compile") "apply"
                   [|x1660;((let x1656 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1656 "push"
                                  [|(Ojs.string_to_js x1654)|]);
                             (match x1655 with
                              | Some x1657 ->
                                  ignore
                                    (Ojs.call x1656 "push"
                                       [|(Ojs.string_to_js x1657)|])
                              | None -> ());
                             x1656))|])
    let (create :
      pattern:[ `U1 of t  | `U2 of string ] -> ?flags:string -> unit -> t) =
      fun ~pattern:(x1662 : [ `U1 of t  | `U2 of string ]) ->
        fun ?flags:(x1663 : string option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "RegExp")
                 (let x1664 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore
                    (Ojs.call x1664 "push"
                       [|((match x1662 with
                           | `U1 x1666 -> t_to_js x1666
                           | `U2 x1667 -> Ojs.string_to_js x1667))|]);
                  (match x1663 with
                   | Some x1665 ->
                       ignore
                         (Ojs.call x1664 "push" [|(Ojs.string_to_js x1665)|])
                   | None -> ());
                  x1664))
    let (invoke :
      pattern:[ `U1 of t  | `U2 of string ] -> ?flags:string -> unit -> t) =
      fun ~pattern:(x1668 : [ `U1 of t  | `U2 of string ]) ->
        fun ?flags:(x1669 : string option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "apply"
                 [|Ojs.null;((let x1670 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x1670 "push"
                                   [|((match x1668 with
                                       | `U1 x1672 -> t_to_js x1672
                                       | `U2 x1673 -> Ojs.string_to_js x1673))|]);
                              (match x1669 with
                               | Some x1671 ->
                                   ignore
                                     (Ojs.call x1670 "push"
                                        [|(Ojs.string_to_js x1671)|])
                               | None -> ());
                              x1670))|])
    let (create' : [ `U1 of t  | `U2 of string ] -> t) =
      fun (x1674 : [ `U1 of t  | `U2 of string ]) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "RegExp")
             [|((match x1674 with
                 | `U1 x1675 -> t_to_js x1675
                 | `U2 x1676 -> Ojs.string_to_js x1676))|])
    let (create'' : pattern:string -> ?flags:string -> unit -> t) =
      fun ~pattern:(x1677 : string) ->
        fun ?flags:(x1678 : string option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "RegExp")
                 (let x1679 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore (Ojs.call x1679 "push" [|(Ojs.string_to_js x1677)|]);
                  (match x1678 with
                   | Some x1680 ->
                       ignore
                         (Ojs.call x1679 "push" [|(Ojs.string_to_js x1680)|])
                   | None -> ());
                  x1679))
    let (invoke' : [ `U1 of t  | `U2 of string ] -> t) =
      fun (x1681 : [ `U1 of t  | `U2 of string ]) ->
        t_of_js
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "RegExp")
             [|((match x1681 with
                 | `U1 x1682 -> t_to_js x1682
                 | `U2 x1683 -> Ojs.string_to_js x1683))|])
    let (invoke'' : pattern:string -> ?flags:string -> unit -> t) =
      fun ~pattern:(x1684 : string) ->
        fun ?flags:(x1685 : string option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "RegExp") "apply"
                 [|Ojs.null;((let x1686 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x1686 "push"
                                   [|(Ojs.string_to_js x1684)|]);
                              (match x1685 with
                               | Some x1687 ->
                                   ignore
                                     (Ojs.call x1686 "push"
                                        [|(Ojs.string_to_js x1687)|])
                               | None -> ());
                              x1686))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "prototype")
    let (_1 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$1")
    let (_2 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$2")
    let (_3 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$3")
    let (_4 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$4")
    let (_5 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$5")
    let (_6 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$6")
    let (_7 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$7")
    let (_8 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$8")
    let (_9 : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$9")
    let (input : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "input")
    let (__ : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$_")
    let (lastMatch : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "lastMatch")
    let (__' : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$&")
    let (lastParen : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "lastParen")
    let (__'' : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$+")
    let (leftContext : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "leftContext")
    let (__''' : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$`")
    let (rightContext : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp")
             "rightContext")
    let (__'''' : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RegExp") "$'")
    let cast_from = Obj.magic
  end
module Partial =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x1689 : Ojs.t) -> any_of_js x1689
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x1688 : any) -> any_to_js x1688
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x1692 : Ojs.t) -> t_of_js __T_of_js x1692
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x1690 : __T t) -> t_to_js __T_to_js x1690
  end
module rec
  Date:sig
         type t = [ `Date ] intf
         type t_0 = t
         [@@@js.stop ]
         type tags = [ `Date ]
         type tags_0 = tags
         [@@@js.start ]
         [@@@js.implem type tags = [ `Date ]
           type tags_0 = tags]
         type 'tags this = 'tags intf constraint 'tags = [> `Date ]
         val t_to_js : t -> Ojs.t
         val t_of_js : Ojs.t -> t
         val t_0_to_js : t_0 -> Ojs.t
         val t_0_of_js : Ojs.t -> t_0
         val toLocaleString :
           'tags this ->
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:Intl.DateTimeFormatOptions.t -> unit -> string
         val toLocaleDateString :
           'tags this ->
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:Intl.DateTimeFormatOptions.t -> unit -> string
         val toLocaleTimeString :
           'tags this ->
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:Intl.DateTimeFormatOptions.t -> unit -> string
         val toString : 'tags this -> string
         val toDateString : 'tags this -> string
         val toTimeString : 'tags this -> string
         val toLocaleString' : 'tags this -> string
         val toLocaleDateString' : 'tags this -> string
         val toLocaleTimeString' : 'tags this -> string
         val valueOf : 'tags this -> float
         val getTime : 'tags this -> float
         val getFullYear : 'tags this -> float
         val getUTCFullYear : 'tags this -> float
         val getMonth : 'tags this -> float
         val getUTCMonth : 'tags this -> float
         val getDate : 'tags this -> float
         val getUTCDate : 'tags this -> float
         val getDay : 'tags this -> float
         val getUTCDay : 'tags this -> float
         val getHours : 'tags this -> float
         val getUTCHours : 'tags this -> float
         val getMinutes : 'tags this -> float
         val getUTCMinutes : 'tags this -> float
         val getSeconds : 'tags this -> float
         val getUTCSeconds : 'tags this -> float
         val getMilliseconds : 'tags this -> float
         val getUTCMilliseconds : 'tags this -> float
         val getTimezoneOffset : 'tags this -> float
         val setTime : 'tags this -> time:float -> float
         val setMilliseconds : 'tags this -> ms:float -> float
         val setUTCMilliseconds : 'tags this -> ms:float -> float
         val setSeconds :
           'tags this -> sec:float -> ?ms:float -> unit -> float
         val setUTCSeconds :
           'tags this -> sec:float -> ?ms:float -> unit -> float
         val setMinutes :
           'tags this ->
             min:float -> ?sec:float -> ?ms:float -> unit -> float
         val setUTCMinutes :
           'tags this ->
             min:float -> ?sec:float -> ?ms:float -> unit -> float
         val setHours :
           'tags this ->
             hours:float ->
               ?min:float -> ?sec:float -> ?ms:float -> unit -> float
         val setUTCHours :
           'tags this ->
             hours:float ->
               ?min:float -> ?sec:float -> ?ms:float -> unit -> float
         val setDate : 'tags this -> date:float -> float
         val setUTCDate : 'tags this -> date:float -> float
         val setMonth :
           'tags this -> month:float -> ?date:float -> unit -> float
         val setUTCMonth :
           'tags this -> month:float -> ?date:float -> unit -> float
         val setFullYear :
           'tags this ->
             year:float -> ?month:float -> ?date:float -> unit -> float
         val setUTCFullYear :
           'tags this ->
             year:float -> ?month:float -> ?date:float -> unit -> float
         val toUTCString : 'tags this -> string
         val toISOString : 'tags this -> string
         val toJSON : 'tags this -> ?key:any -> unit -> string
         val create : [ `U1 of float  | `U2 of string  | `U3 of t ] -> t
         val create' : unit -> t
         val create'' : [ `U1 of float  | `U2 of string ] -> t
         val create''' :
           year:float ->
             month:float ->
               ?date:float ->
                 ?hours:float ->
                   ?minutes:float -> ?seconds:float -> ?ms:float -> unit -> t
         val invoke : unit -> string
         val prototype : unit -> t
         val parse : string -> float
         val utc :
           year:float ->
             month:float ->
               ?date:float ->
                 ?hours:float ->
                   ?minutes:float ->
                     ?seconds:float -> ?ms:float -> unit -> float
         val now : unit -> float
         val cast_from : 'tags this -> t
       end =
  struct
    type t = [ `Date ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x1695 : Ojs.t) -> t_of_js x1695
    and t_0_to_js : t_0 -> Ojs.t = fun (x1694 : t) -> t_to_js x1694
    type tags = [ `Date ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Date ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x1698 : Ojs.t) -> intf_of_js __tags_of_js x1698
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x1696 : __tags intf) -> intf_to_js __tags_to_js x1696
    let (toLocaleString :
      'tags this ->
        ?locales:[ `U1 of string  | `U2 of string list ] ->
          ?options:Intl.DateTimeFormatOptions.t -> unit -> string)
      =
      fun (x1708 : 'tags this) ->
        fun ?locales:(x1700 : [ `U1 of string  | `U2 of string list ] option)
          ->
          fun ?options:(x1701 : Intl.DateTimeFormatOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x1710 = this_to_js Obj.magic x1708 in
                 Ojs.call (Ojs.get_prop_ascii x1710 "toLocaleString") "apply"
                   [|x1710;((let x1702 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1700 with
                              | Some x1704 ->
                                  ignore
                                    (Ojs.call x1702 "push"
                                       [|((match x1704 with
                                           | `U1 x1705 ->
                                               Ojs.string_to_js x1705
                                           | `U2 x1706 ->
                                               Ojs.list_to_js
                                                 Ojs.string_to_js x1706))|])
                              | None -> ());
                             (match x1701 with
                              | Some x1703 ->
                                  ignore
                                    (Ojs.call x1702 "push"
                                       [|(Intl.DateTimeFormatOptions.t_to_js
                                            x1703)|])
                              | None -> ());
                             x1702))|])
    let (toLocaleDateString :
      'tags this ->
        ?locales:[ `U1 of string  | `U2 of string list ] ->
          ?options:Intl.DateTimeFormatOptions.t -> unit -> string)
      =
      fun (x1719 : 'tags this) ->
        fun ?locales:(x1711 : [ `U1 of string  | `U2 of string list ] option)
          ->
          fun ?options:(x1712 : Intl.DateTimeFormatOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x1721 = this_to_js Obj.magic x1719 in
                 Ojs.call (Ojs.get_prop_ascii x1721 "toLocaleDateString")
                   "apply"
                   [|x1721;((let x1713 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1711 with
                              | Some x1715 ->
                                  ignore
                                    (Ojs.call x1713 "push"
                                       [|((match x1715 with
                                           | `U1 x1716 ->
                                               Ojs.string_to_js x1716
                                           | `U2 x1717 ->
                                               Ojs.list_to_js
                                                 Ojs.string_to_js x1717))|])
                              | None -> ());
                             (match x1712 with
                              | Some x1714 ->
                                  ignore
                                    (Ojs.call x1713 "push"
                                       [|(Intl.DateTimeFormatOptions.t_to_js
                                            x1714)|])
                              | None -> ());
                             x1713))|])
    let (toLocaleTimeString :
      'tags this ->
        ?locales:[ `U1 of string  | `U2 of string list ] ->
          ?options:Intl.DateTimeFormatOptions.t -> unit -> string)
      =
      fun (x1730 : 'tags this) ->
        fun ?locales:(x1722 : [ `U1 of string  | `U2 of string list ] option)
          ->
          fun ?options:(x1723 : Intl.DateTimeFormatOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x1732 = this_to_js Obj.magic x1730 in
                 Ojs.call (Ojs.get_prop_ascii x1732 "toLocaleTimeString")
                   "apply"
                   [|x1732;((let x1724 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x1722 with
                              | Some x1726 ->
                                  ignore
                                    (Ojs.call x1724 "push"
                                       [|((match x1726 with
                                           | `U1 x1727 ->
                                               Ojs.string_to_js x1727
                                           | `U2 x1728 ->
                                               Ojs.list_to_js
                                                 Ojs.string_to_js x1728))|])
                              | None -> ());
                             (match x1723 with
                              | Some x1725 ->
                                  ignore
                                    (Ojs.call x1724 "push"
                                       [|(Intl.DateTimeFormatOptions.t_to_js
                                            x1725)|])
                              | None -> ());
                             x1724))|])
    let (toString : 'tags this -> string) =
      fun (x1733 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1733) "toString" [||])
    let (toDateString : 'tags this -> string) =
      fun (x1735 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1735) "toDateString" [||])
    let (toTimeString : 'tags this -> string) =
      fun (x1737 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1737) "toTimeString" [||])
    let (toLocaleString' : 'tags this -> string) =
      fun (x1739 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1739) "toLocaleString" [||])
    let (toLocaleDateString' : 'tags this -> string) =
      fun (x1741 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1741) "toLocaleDateString" [||])
    let (toLocaleTimeString' : 'tags this -> string) =
      fun (x1743 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1743) "toLocaleTimeString" [||])
    let (valueOf : 'tags this -> float) =
      fun (x1745 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1745) "valueOf" [||])
    let (getTime : 'tags this -> float) =
      fun (x1747 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1747) "getTime" [||])
    let (getFullYear : 'tags this -> float) =
      fun (x1749 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1749) "getFullYear" [||])
    let (getUTCFullYear : 'tags this -> float) =
      fun (x1751 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1751) "getUTCFullYear" [||])
    let (getMonth : 'tags this -> float) =
      fun (x1753 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1753) "getMonth" [||])
    let (getUTCMonth : 'tags this -> float) =
      fun (x1755 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1755) "getUTCMonth" [||])
    let (getDate : 'tags this -> float) =
      fun (x1757 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1757) "getDate" [||])
    let (getUTCDate : 'tags this -> float) =
      fun (x1759 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1759) "getUTCDate" [||])
    let (getDay : 'tags this -> float) =
      fun (x1761 : 'tags this) ->
        Ojs.float_of_js (Ojs.call (this_to_js Obj.magic x1761) "getDay" [||])
    let (getUTCDay : 'tags this -> float) =
      fun (x1763 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1763) "getUTCDay" [||])
    let (getHours : 'tags this -> float) =
      fun (x1765 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1765) "getHours" [||])
    let (getUTCHours : 'tags this -> float) =
      fun (x1767 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1767) "getUTCHours" [||])
    let (getMinutes : 'tags this -> float) =
      fun (x1769 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1769) "getMinutes" [||])
    let (getUTCMinutes : 'tags this -> float) =
      fun (x1771 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1771) "getUTCMinutes" [||])
    let (getSeconds : 'tags this -> float) =
      fun (x1773 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1773) "getSeconds" [||])
    let (getUTCSeconds : 'tags this -> float) =
      fun (x1775 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1775) "getUTCSeconds" [||])
    let (getMilliseconds : 'tags this -> float) =
      fun (x1777 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1777) "getMilliseconds" [||])
    let (getUTCMilliseconds : 'tags this -> float) =
      fun (x1779 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1779) "getUTCMilliseconds" [||])
    let (getTimezoneOffset : 'tags this -> float) =
      fun (x1781 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x1781) "getTimezoneOffset" [||])
    let (setTime : 'tags this -> time:float -> float) =
      fun (x1784 : 'tags this) ->
        fun ~time:(x1783 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x1784) "setTime"
               [|(Ojs.float_to_js x1783)|])
    let (setMilliseconds : 'tags this -> ms:float -> float) =
      fun (x1787 : 'tags this) ->
        fun ~ms:(x1786 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x1787) "setMilliseconds"
               [|(Ojs.float_to_js x1786)|])
    let (setUTCMilliseconds : 'tags this -> ms:float -> float) =
      fun (x1790 : 'tags this) ->
        fun ~ms:(x1789 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x1790) "setUTCMilliseconds"
               [|(Ojs.float_to_js x1789)|])
    let (setSeconds : 'tags this -> sec:float -> ?ms:float -> unit -> float)
      =
      fun (x1796 : 'tags this) ->
        fun ~sec:(x1792 : float) ->
          fun ?ms:(x1793 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1798 = this_to_js Obj.magic x1796 in
                 Ojs.call (Ojs.get_prop_ascii x1798 "setSeconds") "apply"
                   [|x1798;((let x1794 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1794 "push"
                                  [|(Ojs.float_to_js x1792)|]);
                             (match x1793 with
                              | Some x1795 ->
                                  ignore
                                    (Ojs.call x1794 "push"
                                       [|(Ojs.float_to_js x1795)|])
                              | None -> ());
                             x1794))|])
    let (setUTCSeconds :
      'tags this -> sec:float -> ?ms:float -> unit -> float) =
      fun (x1803 : 'tags this) ->
        fun ~sec:(x1799 : float) ->
          fun ?ms:(x1800 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1805 = this_to_js Obj.magic x1803 in
                 Ojs.call (Ojs.get_prop_ascii x1805 "setUTCSeconds") "apply"
                   [|x1805;((let x1801 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1801 "push"
                                  [|(Ojs.float_to_js x1799)|]);
                             (match x1800 with
                              | Some x1802 ->
                                  ignore
                                    (Ojs.call x1801 "push"
                                       [|(Ojs.float_to_js x1802)|])
                              | None -> ());
                             x1801))|])
    let (setMinutes :
      'tags this -> min:float -> ?sec:float -> ?ms:float -> unit -> float) =
      fun (x1812 : 'tags this) ->
        fun ~min:(x1806 : float) ->
          fun ?sec:(x1807 : float option) ->
            fun ?ms:(x1808 : float option) ->
              fun () ->
                Ojs.float_of_js
                  (let x1814 = this_to_js Obj.magic x1812 in
                   Ojs.call (Ojs.get_prop_ascii x1814 "setMinutes") "apply"
                     [|x1814;((let x1809 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1809 "push"
                                    [|(Ojs.float_to_js x1806)|]);
                               (match x1807 with
                                | Some x1811 ->
                                    ignore
                                      (Ojs.call x1809 "push"
                                         [|(Ojs.float_to_js x1811)|])
                                | None -> ());
                               (match x1808 with
                                | Some x1810 ->
                                    ignore
                                      (Ojs.call x1809 "push"
                                         [|(Ojs.float_to_js x1810)|])
                                | None -> ());
                               x1809))|])
    let (setUTCMinutes :
      'tags this -> min:float -> ?sec:float -> ?ms:float -> unit -> float) =
      fun (x1821 : 'tags this) ->
        fun ~min:(x1815 : float) ->
          fun ?sec:(x1816 : float option) ->
            fun ?ms:(x1817 : float option) ->
              fun () ->
                Ojs.float_of_js
                  (let x1823 = this_to_js Obj.magic x1821 in
                   Ojs.call (Ojs.get_prop_ascii x1823 "setUTCMinutes")
                     "apply"
                     [|x1823;((let x1818 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1818 "push"
                                    [|(Ojs.float_to_js x1815)|]);
                               (match x1816 with
                                | Some x1820 ->
                                    ignore
                                      (Ojs.call x1818 "push"
                                         [|(Ojs.float_to_js x1820)|])
                                | None -> ());
                               (match x1817 with
                                | Some x1819 ->
                                    ignore
                                      (Ojs.call x1818 "push"
                                         [|(Ojs.float_to_js x1819)|])
                                | None -> ());
                               x1818))|])
    let (setHours :
      'tags this ->
        hours:float -> ?min:float -> ?sec:float -> ?ms:float -> unit -> float)
      =
      fun (x1832 : 'tags this) ->
        fun ~hours:(x1824 : float) ->
          fun ?min:(x1825 : float option) ->
            fun ?sec:(x1826 : float option) ->
              fun ?ms:(x1827 : float option) ->
                fun () ->
                  Ojs.float_of_js
                    (let x1834 = this_to_js Obj.magic x1832 in
                     Ojs.call (Ojs.get_prop_ascii x1834 "setHours") "apply"
                       [|x1834;((let x1828 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1828 "push"
                                      [|(Ojs.float_to_js x1824)|]);
                                 (match x1825 with
                                  | Some x1831 ->
                                      ignore
                                        (Ojs.call x1828 "push"
                                           [|(Ojs.float_to_js x1831)|])
                                  | None -> ());
                                 (match x1826 with
                                  | Some x1830 ->
                                      ignore
                                        (Ojs.call x1828 "push"
                                           [|(Ojs.float_to_js x1830)|])
                                  | None -> ());
                                 (match x1827 with
                                  | Some x1829 ->
                                      ignore
                                        (Ojs.call x1828 "push"
                                           [|(Ojs.float_to_js x1829)|])
                                  | None -> ());
                                 x1828))|])
    let (setUTCHours :
      'tags this ->
        hours:float -> ?min:float -> ?sec:float -> ?ms:float -> unit -> float)
      =
      fun (x1843 : 'tags this) ->
        fun ~hours:(x1835 : float) ->
          fun ?min:(x1836 : float option) ->
            fun ?sec:(x1837 : float option) ->
              fun ?ms:(x1838 : float option) ->
                fun () ->
                  Ojs.float_of_js
                    (let x1845 = this_to_js Obj.magic x1843 in
                     Ojs.call (Ojs.get_prop_ascii x1845 "setUTCHours")
                       "apply"
                       [|x1845;((let x1839 =
                                   Ojs.new_obj
                                     (Ojs.get_prop_ascii Ojs.global "Array")
                                     [||] in
                                 ignore
                                   (Ojs.call x1839 "push"
                                      [|(Ojs.float_to_js x1835)|]);
                                 (match x1836 with
                                  | Some x1842 ->
                                      ignore
                                        (Ojs.call x1839 "push"
                                           [|(Ojs.float_to_js x1842)|])
                                  | None -> ());
                                 (match x1837 with
                                  | Some x1841 ->
                                      ignore
                                        (Ojs.call x1839 "push"
                                           [|(Ojs.float_to_js x1841)|])
                                  | None -> ());
                                 (match x1838 with
                                  | Some x1840 ->
                                      ignore
                                        (Ojs.call x1839 "push"
                                           [|(Ojs.float_to_js x1840)|])
                                  | None -> ());
                                 x1839))|])
    let (setDate : 'tags this -> date:float -> float) =
      fun (x1847 : 'tags this) ->
        fun ~date:(x1846 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x1847) "setDate"
               [|(Ojs.float_to_js x1846)|])
    let (setUTCDate : 'tags this -> date:float -> float) =
      fun (x1850 : 'tags this) ->
        fun ~date:(x1849 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x1850) "setUTCDate"
               [|(Ojs.float_to_js x1849)|])
    let (setMonth :
      'tags this -> month:float -> ?date:float -> unit -> float) =
      fun (x1856 : 'tags this) ->
        fun ~month:(x1852 : float) ->
          fun ?date:(x1853 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1858 = this_to_js Obj.magic x1856 in
                 Ojs.call (Ojs.get_prop_ascii x1858 "setMonth") "apply"
                   [|x1858;((let x1854 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1854 "push"
                                  [|(Ojs.float_to_js x1852)|]);
                             (match x1853 with
                              | Some x1855 ->
                                  ignore
                                    (Ojs.call x1854 "push"
                                       [|(Ojs.float_to_js x1855)|])
                              | None -> ());
                             x1854))|])
    let (setUTCMonth :
      'tags this -> month:float -> ?date:float -> unit -> float) =
      fun (x1863 : 'tags this) ->
        fun ~month:(x1859 : float) ->
          fun ?date:(x1860 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x1865 = this_to_js Obj.magic x1863 in
                 Ojs.call (Ojs.get_prop_ascii x1865 "setUTCMonth") "apply"
                   [|x1865;((let x1861 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x1861 "push"
                                  [|(Ojs.float_to_js x1859)|]);
                             (match x1860 with
                              | Some x1862 ->
                                  ignore
                                    (Ojs.call x1861 "push"
                                       [|(Ojs.float_to_js x1862)|])
                              | None -> ());
                             x1861))|])
    let (setFullYear :
      'tags this ->
        year:float -> ?month:float -> ?date:float -> unit -> float)
      =
      fun (x1872 : 'tags this) ->
        fun ~year:(x1866 : float) ->
          fun ?month:(x1867 : float option) ->
            fun ?date:(x1868 : float option) ->
              fun () ->
                Ojs.float_of_js
                  (let x1874 = this_to_js Obj.magic x1872 in
                   Ojs.call (Ojs.get_prop_ascii x1874 "setFullYear") "apply"
                     [|x1874;((let x1869 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1869 "push"
                                    [|(Ojs.float_to_js x1866)|]);
                               (match x1867 with
                                | Some x1871 ->
                                    ignore
                                      (Ojs.call x1869 "push"
                                         [|(Ojs.float_to_js x1871)|])
                                | None -> ());
                               (match x1868 with
                                | Some x1870 ->
                                    ignore
                                      (Ojs.call x1869 "push"
                                         [|(Ojs.float_to_js x1870)|])
                                | None -> ());
                               x1869))|])
    let (setUTCFullYear :
      'tags this ->
        year:float -> ?month:float -> ?date:float -> unit -> float)
      =
      fun (x1881 : 'tags this) ->
        fun ~year:(x1875 : float) ->
          fun ?month:(x1876 : float option) ->
            fun ?date:(x1877 : float option) ->
              fun () ->
                Ojs.float_of_js
                  (let x1883 = this_to_js Obj.magic x1881 in
                   Ojs.call (Ojs.get_prop_ascii x1883 "setUTCFullYear")
                     "apply"
                     [|x1883;((let x1878 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x1878 "push"
                                    [|(Ojs.float_to_js x1875)|]);
                               (match x1876 with
                                | Some x1880 ->
                                    ignore
                                      (Ojs.call x1878 "push"
                                         [|(Ojs.float_to_js x1880)|])
                                | None -> ());
                               (match x1877 with
                                | Some x1879 ->
                                    ignore
                                      (Ojs.call x1878 "push"
                                         [|(Ojs.float_to_js x1879)|])
                                | None -> ());
                               x1878))|])
    let (toUTCString : 'tags this -> string) =
      fun (x1884 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1884) "toUTCString" [||])
    let (toISOString : 'tags this -> string) =
      fun (x1886 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x1886) "toISOString" [||])
    let (toJSON : 'tags this -> ?key:any -> unit -> string) =
      fun (x1891 : 'tags this) ->
        fun ?key:(x1888 : any option) ->
          fun () ->
            Ojs.string_of_js
              (let x1893 = this_to_js Obj.magic x1891 in
               Ojs.call (Ojs.get_prop_ascii x1893 "toJSON") "apply"
                 [|x1893;((let x1889 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x1888 with
                            | Some x1890 ->
                                ignore
                                  (Ojs.call x1889 "push"
                                     [|(any_to_js x1890)|])
                            | None -> ());
                           x1889))|])
    let (create : [ `U1 of float  | `U2 of string  | `U3 of t ] -> t) =
      fun (x1894 : [ `U1 of float  | `U2 of string  | `U3 of t ]) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Date")
             [|((match x1894 with
                 | `U1 x1895 -> Ojs.float_to_js x1895
                 | `U2 x1896 -> Ojs.string_to_js x1896
                 | `U3 x1897 -> t_to_js x1897))|])
    let (create' : unit -> t) =
      fun () ->
        t_of_js (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Date") [||])
    let (create'' : [ `U1 of float  | `U2 of string ] -> t) =
      fun (x1898 : [ `U1 of float  | `U2 of string ]) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Date")
             [|((match x1898 with
                 | `U1 x1899 -> Ojs.float_to_js x1899
                 | `U2 x1900 -> Ojs.string_to_js x1900))|])
    let (create''' :
      year:float ->
        month:float ->
          ?date:float ->
            ?hours:float ->
              ?minutes:float -> ?seconds:float -> ?ms:float -> unit -> t)
      =
      fun ~year:(x1901 : float) ->
        fun ~month:(x1902 : float) ->
          fun ?date:(x1903 : float option) ->
            fun ?hours:(x1904 : float option) ->
              fun ?minutes:(x1905 : float option) ->
                fun ?seconds:(x1906 : float option) ->
                  fun ?ms:(x1907 : float option) ->
                    fun () ->
                      t_of_js
                        (Ojs.new_obj_arr
                           (Ojs.get_prop_ascii Ojs.global "Date")
                           (let x1908 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x1908 "push"
                                 [|(Ojs.float_to_js x1901)|]);
                            ignore
                              (Ojs.call x1908 "push"
                                 [|(Ojs.float_to_js x1902)|]);
                            (match x1903 with
                             | Some x1913 ->
                                 ignore
                                   (Ojs.call x1908 "push"
                                      [|(Ojs.float_to_js x1913)|])
                             | None -> ());
                            (match x1904 with
                             | Some x1912 ->
                                 ignore
                                   (Ojs.call x1908 "push"
                                      [|(Ojs.float_to_js x1912)|])
                             | None -> ());
                            (match x1905 with
                             | Some x1911 ->
                                 ignore
                                   (Ojs.call x1908 "push"
                                      [|(Ojs.float_to_js x1911)|])
                             | None -> ());
                            (match x1906 with
                             | Some x1910 ->
                                 ignore
                                   (Ojs.call x1908 "push"
                                      [|(Ojs.float_to_js x1910)|])
                             | None -> ());
                            (match x1907 with
                             | Some x1909 ->
                                 ignore
                                   (Ojs.call x1908 "push"
                                      [|(Ojs.float_to_js x1909)|])
                             | None -> ());
                            x1908))
    let (invoke : unit -> string) =
      fun () ->
        Ojs.string_of_js
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "Date") [||])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Date")
             "prototype")
    let (parse : string -> float) =
      fun (x1914 : string) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Date") "parse"
             [|(Ojs.string_to_js x1914)|])
    let (utc :
      year:float ->
        month:float ->
          ?date:float ->
            ?hours:float ->
              ?minutes:float -> ?seconds:float -> ?ms:float -> unit -> float)
      =
      fun ~year:(x1915 : float) ->
        fun ~month:(x1916 : float) ->
          fun ?date:(x1917 : float option) ->
            fun ?hours:(x1918 : float option) ->
              fun ?minutes:(x1919 : float option) ->
                fun ?seconds:(x1920 : float option) ->
                  fun ?ms:(x1921 : float option) ->
                    fun () ->
                      Ojs.float_of_js
                        (let x1928 = Ojs.get_prop_ascii Ojs.global "Date" in
                         Ojs.call (Ojs.get_prop_ascii x1928 "UTC") "apply"
                           [|x1928;((let x1922 =
                                       Ojs.new_obj
                                         (Ojs.get_prop_ascii Ojs.global
                                            "Array") [||] in
                                     ignore
                                       (Ojs.call x1922 "push"
                                          [|(Ojs.float_to_js x1915)|]);
                                     ignore
                                       (Ojs.call x1922 "push"
                                          [|(Ojs.float_to_js x1916)|]);
                                     (match x1917 with
                                      | Some x1927 ->
                                          ignore
                                            (Ojs.call x1922 "push"
                                               [|(Ojs.float_to_js x1927)|])
                                      | None -> ());
                                     (match x1918 with
                                      | Some x1926 ->
                                          ignore
                                            (Ojs.call x1922 "push"
                                               [|(Ojs.float_to_js x1926)|])
                                      | None -> ());
                                     (match x1919 with
                                      | Some x1925 ->
                                          ignore
                                            (Ojs.call x1922 "push"
                                               [|(Ojs.float_to_js x1925)|])
                                      | None -> ());
                                     (match x1920 with
                                      | Some x1924 ->
                                          ignore
                                            (Ojs.call x1922 "push"
                                               [|(Ojs.float_to_js x1924)|])
                                      | None -> ());
                                     (match x1921 with
                                      | Some x1923 ->
                                          ignore
                                            (Ojs.call x1922 "push"
                                               [|(Ojs.float_to_js x1923)|])
                                      | None -> ());
                                     x1922))|])
    let (now : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Date") "now" [||])
    let cast_from = Obj.magic
  end
 and
  Intl:sig
         module UnicodeBCP47LocaleIdentifier :
         sig
           type t = string
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module RelativeTimeFormatNumeric :
         sig
           type t = [ `L_s21_always  | `L_s22_auto ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module RelativeTimeFormatStyle :
         sig
           type t = [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module ResolvedRelativeTimeFormatOptions :
         sig
           type t = [ `Intl_ResolvedRelativeTimeFormatOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_ResolvedRelativeTimeFormatOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_ResolvedRelativeTimeFormatOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_ResolvedRelativeTimeFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_locale : 'tags this -> UnicodeBCP47LocaleIdentifier.t
           val set_locale :
             'tags this -> UnicodeBCP47LocaleIdentifier.t -> unit
           val get_style : 'tags this -> RelativeTimeFormatStyle.t
           val set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit
           val get_numeric : 'tags this -> RelativeTimeFormatNumeric.t
           val set_numeric :
             'tags this -> RelativeTimeFormatNumeric.t -> unit
           val get_numberingSystem : 'tags this -> string
           val set_numberingSystem : 'tags this -> string -> unit
           val create :
             locale:UnicodeBCP47LocaleIdentifier.t ->
               style:RelativeTimeFormatStyle.t ->
                 numeric:RelativeTimeFormatNumeric.t ->
                   numberingSystem:string -> unit -> t
           val cast_from : 'tags this -> t
         end
         module RelativeTimeFormatUnit :
         sig
           type t =
             [ `L_s100_weeks  | `L_s101_year  | `L_s102_years  | `L_s29_day 
             | `L_s31_days  | `L_s49_hour  | `L_s50_hours  | `L_s61_minute 
             | `L_s62_minutes  | `L_s63_month  | `L_s64_months 
             | `L_s80_quarter  | `L_s81_quarters  | `L_s86_second 
             | `L_s87_seconds  | `L_s98_week ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module RelativeTimeFormatPart :
         sig
           type t = [ `Intl_RelativeTimeFormatPart ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_RelativeTimeFormatPart ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_RelativeTimeFormatPart ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_RelativeTimeFormatPart ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_type : 'tags this -> string
           val set_type : 'tags this -> string -> unit
           val get_value : 'tags this -> string
           val set_value : 'tags this -> string -> unit
           val get_unit : 'tags this -> RelativeTimeFormatUnit.t
           val set_unit : 'tags this -> RelativeTimeFormatUnit.t -> unit
           val create :
             type_:string ->
               value:string -> unit:RelativeTimeFormatUnit.t -> unit -> t
           val cast_from : 'tags this -> t
         end
         module RelativeTimeFormatLocaleMatcher :
         sig
           type t = [ `L_s24_best_fit  | `L_s56_lookup ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module RelativeTimeFormatOptions :
         sig
           type t = [ `Intl_RelativeTimeFormatOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_RelativeTimeFormatOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_RelativeTimeFormatOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_RelativeTimeFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_localeMatcher :
             'tags this -> RelativeTimeFormatLocaleMatcher.t
           val set_localeMatcher :
             'tags this -> RelativeTimeFormatLocaleMatcher.t -> unit
           val get_numeric : 'tags this -> RelativeTimeFormatNumeric.t
           val set_numeric :
             'tags this -> RelativeTimeFormatNumeric.t -> unit
           val get_style : 'tags this -> RelativeTimeFormatStyle.t
           val set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit
           val create :
             localeMatcher:RelativeTimeFormatLocaleMatcher.t ->
               numeric:RelativeTimeFormatNumeric.t ->
                 style:RelativeTimeFormatStyle.t -> unit -> t
           val cast_from : 'tags this -> t
         end
         module RelativeTimeFormat :
         sig
           type t = [ `Intl_RelativeTimeFormat ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_RelativeTimeFormat ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_RelativeTimeFormat ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_RelativeTimeFormat ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val format :
             'tags this ->
               value:float -> unit:RelativeTimeFormatUnit.t -> string
           val formatToParts :
             'tags this ->
               value:float ->
                 unit:RelativeTimeFormatUnit.t ->
                   RelativeTimeFormatPart.t list
           val resolvedOptions :
             'tags this -> ResolvedRelativeTimeFormatOptions.t
           val cast_from : 'tags this -> t
           val create :
             ?locales:[ `U1 of UnicodeBCP47LocaleIdentifier.t 
                      | `U2 of UnicodeBCP47LocaleIdentifier.t list ]
               -> ?options:RelativeTimeFormatOptions.t -> unit -> t
           val supportedLocalesOf :
             ?locales:[ `U1 of UnicodeBCP47LocaleIdentifier.t 
                      | `U2 of UnicodeBCP47LocaleIdentifier.t list ]
               ->
               ?options:RelativeTimeFormatOptions.t ->
                 unit -> UnicodeBCP47LocaleIdentifier.t list
         end
         module PluralRuleType :
         sig
           type t = [ `L_s25_cardinal  | `L_s75_ordinal ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module LDMLPluralRule :
         sig
           type t =
             [ `L_s103_zero  | `L_s40_few  | `L_s58_many  | `L_s74_one 
             | `L_s76_other  | `L_s94_two ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module ResolvedPluralRulesOptions :
         sig
           type t = [ `Intl_ResolvedPluralRulesOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_ResolvedPluralRulesOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_ResolvedPluralRulesOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_ResolvedPluralRulesOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_locale : 'tags this -> string
           val set_locale : 'tags this -> string -> unit
           val get_pluralCategories : 'tags this -> LDMLPluralRule.t list
           val set_pluralCategories :
             'tags this -> LDMLPluralRule.t list -> unit
           val get_type : 'tags this -> PluralRuleType.t
           val set_type : 'tags this -> PluralRuleType.t -> unit
           val get_minimumIntegerDigits : 'tags this -> float
           val set_minimumIntegerDigits : 'tags this -> float -> unit
           val get_minimumFractionDigits : 'tags this -> float
           val set_minimumFractionDigits : 'tags this -> float -> unit
           val get_maximumFractionDigits : 'tags this -> float
           val set_maximumFractionDigits : 'tags this -> float -> unit
           val get_minimumSignificantDigits : 'tags this -> float
           val set_minimumSignificantDigits : 'tags this -> float -> unit
           val get_maximumSignificantDigits : 'tags this -> float
           val set_maximumSignificantDigits : 'tags this -> float -> unit
           val create :
             locale:string ->
               pluralCategories:LDMLPluralRule.t list ->
                 type_:PluralRuleType.t ->
                   minimumIntegerDigits:float ->
                     minimumFractionDigits:float ->
                       maximumFractionDigits:float ->
                         minimumSignificantDigits:float ->
                           maximumSignificantDigits:float -> unit -> t
           val cast_from : 'tags this -> t
         end
         module PluralRulesOptions :
         sig
           type t = [ `Intl_PluralRulesOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_PluralRulesOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_PluralRulesOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_PluralRulesOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_localeMatcher :
             'tags this -> [ `L_s24_best_fit  | `L_s56_lookup ] option
           val set_localeMatcher :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s56_lookup ] 
               | `U2 of [ `L_s24_best_fit ] ] -> unit
           val get_type : 'tags this -> PluralRuleType.t option
           val set_type :
             'tags this ->
               [ `Undefined of undefined  | `U1 of PluralRuleType.t ] -> unit
           val get_minimumIntegerDigits : 'tags this -> float option
           val set_minimumIntegerDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val get_minimumFractionDigits : 'tags this -> float option
           val set_minimumFractionDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val get_maximumFractionDigits : 'tags this -> float option
           val set_maximumFractionDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val get_minimumSignificantDigits : 'tags this -> float option
           val set_minimumSignificantDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val get_maximumSignificantDigits : 'tags this -> float option
           val set_maximumSignificantDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val create :
             ?localeMatcher:[ `L_s24_best_fit  | `L_s56_lookup ] ->
               ?type_:PluralRuleType.t ->
                 ?minimumIntegerDigits:float ->
                   ?minimumFractionDigits:float ->
                     ?maximumFractionDigits:float ->
                       ?minimumSignificantDigits:float ->
                         ?maximumSignificantDigits:float -> unit -> t
           val cast_from : 'tags this -> t
         end
         module PluralRules :
         sig
           module AnonymousInterface4 :
           sig
             type t = private Ojs.t
             val t_to_js : t -> Ojs.t
             val t_of_js : Ojs.t -> t
             val get_localeMatcher :
               t -> [ `L_s24_best_fit  | `L_s56_lookup ]
             val set_localeMatcher :
               t ->
                 [ `U1 of [ `L_s56_lookup ]  | `U2 of [ `L_s24_best_fit ] ]
                   -> unit
             val create :
               localeMatcher:[ `L_s24_best_fit  | `L_s56_lookup ] ->
                 unit -> t
           end
           type t = [ `Intl_PluralRules ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_PluralRules ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_PluralRules ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_PluralRules ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val resolvedOptions : 'tags this -> ResolvedPluralRulesOptions.t
           val select : 'tags this -> n:float -> LDMLPluralRule.t
           val cast_from : 'tags this -> t
           val create :
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:PluralRulesOptions.t -> unit -> t
           val invoke :
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:PluralRulesOptions.t -> unit -> t
           val supportedLocalesOf :
             locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:AnonymousInterface4.t -> unit -> string list
         end
         module ResolvedNumberFormatOptions :
         sig
           type t = [ `Intl_ResolvedNumberFormatOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_ResolvedNumberFormatOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_ResolvedNumberFormatOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_ResolvedNumberFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_compactDisplay :
             'tags this -> [ `L_s55_long  | `L_s88_short ]
           val set_compactDisplay :
             'tags this ->
               [ `U1 of [ `L_s88_short ]  | `U2 of [ `L_s55_long ] ] -> unit
           val get_notation :
             'tags this ->
               [ `L_s27_compact  | `L_s34_engineering  | `L_s84_scientific 
               | `L_s89_standard ]
           val set_notation :
             'tags this ->
               [ `U1 of [ `L_s89_standard ]  | `U2 of [ `L_s84_scientific ] 
               | `U3 of [ `L_s34_engineering ]  | `U4 of [ `L_s27_compact ] ]
                 -> unit
           val get_signDisplay :
             'tags this -> [ `L_s21_always  | `L_s22_auto  | `L_s68_never ]
           val set_signDisplay :
             'tags this ->
               [ `U1 of [ `L_s22_auto ]  | `U2 of [ `L_s68_never ] 
               | `U3 of [ `L_s21_always ] ] -> unit
           val get_unit : 'tags this -> string
           val set_unit : 'tags this -> string -> unit
           val get_unitDisplay :
             'tags this -> [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ]
           val set_unitDisplay :
             'tags this ->
               [ `U1 of [ `L_s88_short ]  | `U2 of [ `L_s55_long ] 
               | `U3 of [ `L_s67_narrow ] ] -> unit
           val get_locale : 'tags this -> string
           val set_locale : 'tags this -> string -> unit
           val get_numberingSystem : 'tags this -> string
           val set_numberingSystem : 'tags this -> string -> unit
           val get_style : 'tags this -> string
           val set_style : 'tags this -> string -> unit
           val get_currency : 'tags this -> string
           val set_currency : 'tags this -> string -> unit
           val get_currencyDisplay : 'tags this -> string
           val set_currencyDisplay : 'tags this -> string -> unit
           val get_minimumIntegerDigits : 'tags this -> float
           val set_minimumIntegerDigits : 'tags this -> float -> unit
           val get_minimumFractionDigits : 'tags this -> float
           val set_minimumFractionDigits : 'tags this -> float -> unit
           val get_maximumFractionDigits : 'tags this -> float
           val set_maximumFractionDigits : 'tags this -> float -> unit
           val get_minimumSignificantDigits : 'tags this -> float
           val set_minimumSignificantDigits : 'tags this -> float -> unit
           val get_maximumSignificantDigits : 'tags this -> float
           val set_maximumSignificantDigits : 'tags this -> float -> unit
           val get_useGrouping : 'tags this -> bool
           val set_useGrouping : 'tags this -> bool -> unit
           val create :
             compactDisplay:[ `L_s55_long  | `L_s88_short ] ->
               notation:[ `L_s27_compact  | `L_s34_engineering 
                        | `L_s84_scientific  | `L_s89_standard ]
                 ->
                 signDisplay:[ `L_s21_always  | `L_s22_auto  | `L_s68_never ]
                   ->
                   unit:string ->
                     unitDisplay:[ `L_s55_long  | `L_s67_narrow 
                                 | `L_s88_short ]
                       ->
                       locale:string ->
                         numberingSystem:string ->
                           style:string ->
                             currency:string ->
                               currencyDisplay:string ->
                                 minimumIntegerDigits:float ->
                                   minimumFractionDigits:float ->
                                     maximumFractionDigits:float ->
                                       minimumSignificantDigits:float ->
                                         maximumSignificantDigits:float ->
                                           useGrouping:bool -> unit -> t
           val cast_from : 'tags this -> t
         end
         module ES2020NumberFormatPartType :
         sig
           type t =
             [ `L_s27_compact  | `L_s36_exponentInteger 
             | `L_s37_exponentMinusSign  | `L_s38_exponentSeparator 
             | `L_s95_unit  | `L_s96_unknown ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module ES2018NumberFormatPartType :
         sig
           type t =
             [ `L_s26_code  | `L_s28_currency  | `L_s32_decimal 
             | `L_s41_fraction  | `L_s44_group  | `L_s51_infinity 
             | `L_s52_integer  | `L_s54_literal  | `L_s60_minusSign 
             | `L_s65_name  | `L_s66_nan  | `L_s77_percent 
             | `L_s78_percentSign  | `L_s79_plusSign  | `L_s91_symbol ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module NumberFormatPartTypes :
         sig
           type t =
             [ `L_s26_code  | `L_s27_compact  | `L_s28_currency 
             | `L_s32_decimal  | `L_s36_exponentInteger 
             | `L_s37_exponentMinusSign  | `L_s38_exponentSeparator 
             | `L_s41_fraction  | `L_s44_group  | `L_s51_infinity 
             | `L_s52_integer  | `L_s54_literal  | `L_s60_minusSign 
             | `L_s65_name  | `L_s66_nan  | `L_s77_percent 
             | `L_s78_percentSign  | `L_s79_plusSign  | `L_s91_symbol 
             | `L_s95_unit  | `L_s96_unknown ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module NumberFormatPart :
         sig
           type t = [ `Intl_NumberFormatPart ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_NumberFormatPart ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_NumberFormatPart ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_NumberFormatPart ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_type : 'tags this -> NumberFormatPartTypes.t
           val set_type : 'tags this -> NumberFormatPartTypes.t -> unit
           val get_value : 'tags this -> string
           val set_value : 'tags this -> string -> unit
           val create :
             type_:NumberFormatPartTypes.t -> value:string -> unit -> t
           val cast_from : 'tags this -> t
         end
         module NumberFormatOptions :
         sig
           type t = [ `Intl_NumberFormatOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_NumberFormatOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_NumberFormatOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_NumberFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_compactDisplay :
             'tags this -> [ `L_s55_long  | `L_s88_short ] option
           val set_compactDisplay :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s88_short ] 
               | `U2 of [ `L_s55_long ] ] -> unit
           val get_notation :
             'tags this ->
               [ `L_s27_compact  | `L_s34_engineering  | `L_s84_scientific 
               | `L_s89_standard ] option
           val set_notation :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s89_standard ] 
               | `U2 of [ `L_s84_scientific ] 
               | `U3 of [ `L_s34_engineering ]  | `U4 of [ `L_s27_compact ] ]
                 -> unit
           val get_signDisplay :
             'tags this ->
               [ `L_s21_always  | `L_s22_auto  | `L_s68_never ] option
           val set_signDisplay :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s22_auto ] 
               | `U2 of [ `L_s68_never ]  | `U3 of [ `L_s21_always ] ] ->
                 unit
           val get_unit : 'tags this -> string option
           val set_unit :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_unitDisplay :
             'tags this ->
               [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] option
           val set_unitDisplay :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s88_short ] 
               | `U2 of [ `L_s55_long ]  | `U3 of [ `L_s67_narrow ] ] -> 
                 unit
           val get_localeMatcher : 'tags this -> string option
           val set_localeMatcher :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_style : 'tags this -> string option
           val set_style :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_currency : 'tags this -> string option
           val set_currency :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_currencyDisplay : 'tags this -> string option
           val set_currencyDisplay :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_currencySign : 'tags this -> string option
           val set_currencySign :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_useGrouping : 'tags this -> bool option
           val set_useGrouping :
             'tags this -> [ `Undefined of undefined  | `U1 of bool ] -> unit
           val get_minimumIntegerDigits : 'tags this -> float option
           val set_minimumIntegerDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val get_minimumFractionDigits : 'tags this -> float option
           val set_minimumFractionDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val get_maximumFractionDigits : 'tags this -> float option
           val set_maximumFractionDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val get_minimumSignificantDigits : 'tags this -> float option
           val set_minimumSignificantDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val get_maximumSignificantDigits : 'tags this -> float option
           val set_maximumSignificantDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of float ] -> unit
           val create :
             ?compactDisplay:[ `L_s55_long  | `L_s88_short ] ->
               ?notation:[ `L_s27_compact  | `L_s34_engineering 
                         | `L_s84_scientific  | `L_s89_standard ]
                 ->
                 ?signDisplay:[ `L_s21_always  | `L_s22_auto 
                              | `L_s68_never ]
                   ->
                   ?unit:string ->
                     ?unitDisplay:[ `L_s55_long  | `L_s67_narrow 
                                  | `L_s88_short ]
                       ->
                       ?localeMatcher:string ->
                         ?style:string ->
                           ?currency:string ->
                             ?currencyDisplay:string ->
                               ?currencySign:string ->
                                 ?useGrouping:bool ->
                                   ?minimumIntegerDigits:float ->
                                     ?minimumFractionDigits:float ->
                                       ?maximumFractionDigits:float ->
                                         ?minimumSignificantDigits:float ->
                                           ?maximumSignificantDigits:float ->
                                             unit -> t
           val cast_from : 'tags this -> t
         end
         module NumberFormat :
         sig
           type t = [ `Intl_NumberFormat ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_NumberFormat ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_NumberFormat ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_NumberFormat ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val formatRange :
             'tags this ->
               startDate:[ `U1 of float  | `U2 of bigint ] ->
                 endDate:[ `U1 of float  | `U2 of bigint ] -> string
           val formatRangeToParts :
             'tags this ->
               startDate:[ `U1 of float  | `U2 of bigint ] ->
                 endDate:[ `U1 of float  | `U2 of bigint ] ->
                   NumberFormatPart.t list
           val format :
             'tags this -> value:[ `U1 of float  | `U2 of bigint ] -> string
           val resolvedOptions : 'tags this -> ResolvedNumberFormatOptions.t
           val formatToParts :
             'tags this ->
               ?number:[ `U1 of float  | `U2 of bigint ] ->
                 unit -> NumberFormatPart.t list
           val format' : 'tags this -> value:float -> string
           val resolvedOptions' : 'tags this -> ResolvedNumberFormatOptions.t
           val cast_from : 'tags this -> t
           val create :
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:NumberFormatOptions.t -> unit -> t
           val invoke :
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:NumberFormatOptions.t -> unit -> t
           val supportedLocalesOf :
             locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:NumberFormatOptions.t -> unit -> string list
         end
         module LocaleHourCycleKey :
         sig
           type t = [ `L_s45_h11  | `L_s46_h12  | `L_s47_h23  | `L_s48_h24 ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module LocaleCollationCaseFirst :
         sig
           type t = [ `L_s39_false  | `L_s57_lower  | `L_s97_upper ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module LocaleOptions :
         sig
           type t = [ `Intl_LocaleOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_LocaleOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_LocaleOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_LocaleOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_baseName : 'tags this -> string
           val set_baseName : 'tags this -> string -> unit
           val get_calendar : 'tags this -> string
           val set_calendar : 'tags this -> string -> unit
           val get_caseFirst : 'tags this -> LocaleCollationCaseFirst.t
           val set_caseFirst :
             'tags this -> LocaleCollationCaseFirst.t -> unit
           val get_collation : 'tags this -> string
           val set_collation : 'tags this -> string -> unit
           val get_hourCycle : 'tags this -> LocaleHourCycleKey.t
           val set_hourCycle : 'tags this -> LocaleHourCycleKey.t -> unit
           val get_language : 'tags this -> string
           val set_language : 'tags this -> string -> unit
           val get_numberingSystem : 'tags this -> string
           val set_numberingSystem : 'tags this -> string -> unit
           val get_numeric : 'tags this -> bool
           val set_numeric : 'tags this -> bool -> unit
           val get_region : 'tags this -> string
           val set_region : 'tags this -> string -> unit
           val get_script : 'tags this -> string
           val set_script : 'tags this -> string -> unit
           val create :
             baseName:string ->
               calendar:string ->
                 caseFirst:LocaleCollationCaseFirst.t ->
                   collation:string ->
                     hourCycle:LocaleHourCycleKey.t ->
                       language:string ->
                         numberingSystem:string ->
                           numeric:bool ->
                             region:string -> script:string -> unit -> t
           val cast_from : 'tags this -> t
         end
         module BCP47LanguageTag :
         sig
           type t = string
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module Locale :
         sig
           type t = [ `Intl_Locale  | `Intl_LocaleOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_Locale  | `Intl_LocaleOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_Locale  | `Intl_LocaleOptions ]
             type tags_0 = tags]
           type 'tags this = 'tags intf constraint 'tags = [> `Intl_Locale ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val maximize : 'tags this -> t
           val minimize : 'tags this -> t
           val toString : 'tags this -> BCP47LanguageTag.t
           val cast_from : 'tags this -> t
           val create :
             ?tag:BCP47LanguageTag.t -> ?options:LocaleOptions.t -> unit -> t
         end
         module DisplayNamesOptions :
         sig
           type t = [ `Intl_DisplayNamesOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_DisplayNamesOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_DisplayNamesOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_DisplayNamesOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_localeMatcher :
             'tags this -> RelativeTimeFormatLocaleMatcher.t
           val set_localeMatcher :
             'tags this -> RelativeTimeFormatLocaleMatcher.t -> unit
           val get_style : 'tags this -> RelativeTimeFormatStyle.t
           val set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit
           val get_type :
             'tags this ->
               [ `L_s28_currency  | `L_s53_language  | `L_s82_region 
               | `L_s85_script ]
           val set_type :
             'tags this ->
               [ `U1 of [ `L_s53_language ]  | `U2 of [ `L_s82_region ] 
               | `U3 of [ `L_s85_script ]  | `U4 of [ `L_s28_currency ] ] ->
                 unit
           val get_fallback : 'tags this -> [ `L_s26_code  | `L_s69_none ]
           val set_fallback :
             'tags this ->
               [ `U1 of [ `L_s26_code ]  | `U2 of [ `L_s69_none ] ] -> unit
           val create :
             localeMatcher:RelativeTimeFormatLocaleMatcher.t ->
               style:RelativeTimeFormatStyle.t ->
                 type_:[ `L_s28_currency  | `L_s53_language  | `L_s82_region 
                       | `L_s85_script ]
                   -> fallback:[ `L_s26_code  | `L_s69_none ] -> unit -> t
           val cast_from : 'tags this -> t
         end
         module DisplayNames :
         sig
           module AnonymousInterface2 :
           sig
             type t = private Ojs.t
             val t_to_js : t -> Ojs.t
             val t_of_js : Ojs.t -> t
             val get_localeMatcher : t -> RelativeTimeFormatLocaleMatcher.t
             val set_localeMatcher :
               t -> RelativeTimeFormatLocaleMatcher.t -> unit
             val create :
               localeMatcher:RelativeTimeFormatLocaleMatcher.t -> unit -> t
           end
           type t = [ `Intl_DisplayNames ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_DisplayNames ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_DisplayNames ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_DisplayNames ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val of_ : 'tags this -> code:string -> string
           val resolvedOptions : 'tags this -> DisplayNamesOptions.t
           val cast_from : 'tags this -> t
           val prototype : unit -> t
           val create :
             ?locales:[ `U1 of BCP47LanguageTag.t 
                      | `U2 of BCP47LanguageTag.t list ]
               -> ?options:DisplayNamesOptions.t Partial.t -> unit -> t
           val supportedLocalesOf :
             locales:[ `U1 of BCP47LanguageTag.t 
                     | `U2 of BCP47LanguageTag.t list ]
               ->
               ?options:AnonymousInterface2.t ->
                 unit -> BCP47LanguageTag.t list
         end
         module ResolvedDateTimeFormatOptions :
         sig
           type t = [ `Intl_ResolvedDateTimeFormatOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_ResolvedDateTimeFormatOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_ResolvedDateTimeFormatOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags =
                         [> `Intl_ResolvedDateTimeFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_formatMatcher :
             'tags this -> [ `L_s23_basic  | `L_s24_best_fit ]
           val set_formatMatcher :
             'tags this ->
               [ `U1 of [ `L_s23_basic ]  | `U2 of [ `L_s24_best_fit ] 
               | `U3 of [ `L_s24_best_fit ] ] -> unit
           val get_dateStyle :
             'tags this ->
               [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
               | `L_s88_short ]
           val set_dateStyle :
             'tags this ->
               [ `U1 of [ `L_s43_full ]  | `U2 of [ `L_s55_long ] 
               | `U3 of [ `L_s59_medium ]  | `U4 of [ `L_s88_short ] ] ->
                 unit
           val get_timeStyle :
             'tags this ->
               [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
               | `L_s88_short ]
           val set_timeStyle :
             'tags this ->
               [ `U1 of [ `L_s43_full ]  | `U2 of [ `L_s55_long ] 
               | `U3 of [ `L_s59_medium ]  | `U4 of [ `L_s88_short ] ] ->
                 unit
           val get_hourCycle :
             'tags this ->
               [ `L_s45_h11  | `L_s46_h12  | `L_s47_h23  | `L_s48_h24 ]
           val set_hourCycle :
             'tags this ->
               [ `U1 of [ `L_s45_h11 ]  | `U2 of [ `L_s46_h12 ] 
               | `U3 of [ `L_s47_h23 ]  | `U4 of [ `L_s48_h24 ] ] -> 
                 unit
           val get_dayPeriod :
             'tags this -> [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ]
           val set_dayPeriod :
             'tags this ->
               [ `U1 of [ `L_s67_narrow ]  | `U2 of [ `L_s88_short ] 
               | `U3 of [ `L_s55_long ] ] -> unit
           val get_fractionalSecondDigits :
             'tags this -> [ `L_n_0  | `L_n_1  | `L_n_2  | `L_n_3 ]
           val set_fractionalSecondDigits :
             'tags this ->
               [ `U1 of [ `L_n_0 ]  | `U2 of [ `L_n_1 ]  | `U3 of [ `L_n_2 ] 
               | `U4 of [ `L_n_3 ] ] -> unit
           val get_locale : 'tags this -> string
           val set_locale : 'tags this -> string -> unit
           val get_calendar : 'tags this -> string
           val set_calendar : 'tags this -> string -> unit
           val get_numberingSystem : 'tags this -> string
           val set_numberingSystem : 'tags this -> string -> unit
           val get_timeZone : 'tags this -> string
           val set_timeZone : 'tags this -> string -> unit
           val get_hour12 : 'tags this -> bool
           val set_hour12 : 'tags this -> bool -> unit
           val get_weekday : 'tags this -> string
           val set_weekday : 'tags this -> string -> unit
           val get_era : 'tags this -> string
           val set_era : 'tags this -> string -> unit
           val get_year : 'tags this -> string
           val set_year : 'tags this -> string -> unit
           val get_month : 'tags this -> string
           val set_month : 'tags this -> string -> unit
           val get_day : 'tags this -> string
           val set_day : 'tags this -> string -> unit
           val get_hour : 'tags this -> string
           val set_hour : 'tags this -> string -> unit
           val get_minute : 'tags this -> string
           val set_minute : 'tags this -> string -> unit
           val get_second : 'tags this -> string
           val set_second : 'tags this -> string -> unit
           val get_timeZoneName : 'tags this -> string
           val set_timeZoneName : 'tags this -> string -> unit
           val create :
             formatMatcher:[ `L_s23_basic  | `L_s24_best_fit ] ->
               dateStyle:[ `L_s43_full  | `L_s55_long  | `L_s59_medium 
                         | `L_s88_short ]
                 ->
                 timeStyle:[ `L_s43_full  | `L_s55_long  | `L_s59_medium 
                           | `L_s88_short ]
                   ->
                   hourCycle:[ `L_s45_h11  | `L_s46_h12  | `L_s47_h23 
                             | `L_s48_h24 ]
                     ->
                     dayPeriod:[ `L_s55_long  | `L_s67_narrow 
                               | `L_s88_short ]
                       ->
                       fractionalSecondDigits:[ `L_n_0  | `L_n_1  | `L_n_2 
                                              | `L_n_3 ]
                         ->
                         locale:string ->
                           calendar:string ->
                             numberingSystem:string ->
                               timeZone:string ->
                                 hour12:bool ->
                                   weekday:string ->
                                     era:string ->
                                       year:string ->
                                         month:string ->
                                           day:string ->
                                             hour:string ->
                                               minute:string ->
                                                 second:string ->
                                                   timeZoneName:string ->
                                                     unit -> t
           val cast_from : 'tags this -> t
         end
         module DateTimeFormatPartTypes :
         sig
           type t =
             [ `L_s101_year  | `L_s29_day  | `L_s30_dayPeriod  | `L_s35_era 
             | `L_s49_hour  | `L_s54_literal  | `L_s61_minute 
             | `L_s63_month  | `L_s86_second  | `L_s92_timeZoneName 
             | `L_s99_weekday ]
           type t_0 = t
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
         end
         module DateTimeFormatPart :
         sig
           type t = [ `Intl_DateTimeFormatPart ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_DateTimeFormatPart ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_DateTimeFormatPart ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_DateTimeFormatPart ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_type : 'tags this -> DateTimeFormatPartTypes.t
           val set_type : 'tags this -> DateTimeFormatPartTypes.t -> unit
           val get_value : 'tags this -> string
           val set_value : 'tags this -> string -> unit
           val create :
             type_:DateTimeFormatPartTypes.t -> value:string -> unit -> t
           val cast_from : 'tags this -> t
         end
         module DateTimeFormatOptions :
         sig
           type t = [ `Intl_DateTimeFormatOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_DateTimeFormatOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_DateTimeFormatOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_DateTimeFormatOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_formatMatcher :
             'tags this -> [ `L_s23_basic  | `L_s24_best_fit ] option
           val set_formatMatcher :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s23_basic ] 
               | `U2 of [ `L_s24_best_fit ]  | `U3 of [ `L_s24_best_fit ] ]
                 -> unit
           val get_dateStyle :
             'tags this ->
               [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
               | `L_s88_short ] option
           val set_dateStyle :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s43_full ] 
               | `U2 of [ `L_s55_long ]  | `U3 of [ `L_s59_medium ] 
               | `U4 of [ `L_s88_short ] ] -> unit
           val get_timeStyle :
             'tags this ->
               [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
               | `L_s88_short ] option
           val set_timeStyle :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s43_full ] 
               | `U2 of [ `L_s55_long ]  | `U3 of [ `L_s59_medium ] 
               | `U4 of [ `L_s88_short ] ] -> unit
           val get_dayPeriod :
             'tags this ->
               [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] option
           val set_dayPeriod :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s67_narrow ] 
               | `U2 of [ `L_s88_short ]  | `U3 of [ `L_s55_long ] ] -> 
                 unit
           val get_fractionalSecondDigits :
             'tags this -> [ `L_n_0  | `L_n_1  | `L_n_2  | `L_n_3 ] option
           val set_fractionalSecondDigits :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_n_0 ] 
               | `U2 of [ `L_n_1 ]  | `U3 of [ `L_n_2 ] 
               | `U4 of [ `L_n_3 ] ] -> unit
           val get_calendar : 'tags this -> string option
           val set_calendar :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_dayPeriod' :
             'tags this ->
               [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] option
           val set_dayPeriod' :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s67_narrow ] 
               | `U2 of [ `L_s88_short ]  | `U3 of [ `L_s55_long ] ] -> 
                 unit
           val get_numberingSystem : 'tags this -> string option
           val set_numberingSystem :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_dateStyle' :
             'tags this ->
               [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
               | `L_s88_short ] option
           val set_dateStyle' :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s43_full ] 
               | `U2 of [ `L_s55_long ]  | `U3 of [ `L_s59_medium ] 
               | `U4 of [ `L_s88_short ] ] -> unit
           val get_timeStyle' :
             'tags this ->
               [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
               | `L_s88_short ] option
           val set_timeStyle' :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s43_full ] 
               | `U2 of [ `L_s55_long ]  | `U3 of [ `L_s59_medium ] 
               | `U4 of [ `L_s88_short ] ] -> unit
           val get_hourCycle :
             'tags this ->
               [ `L_s45_h11  | `L_s46_h12  | `L_s47_h23  | `L_s48_h24 ]
                 option
           val set_hourCycle :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s45_h11 ] 
               | `U2 of [ `L_s46_h12 ]  | `U3 of [ `L_s47_h23 ] 
               | `U4 of [ `L_s48_h24 ] ] -> unit
           val get_localeMatcher :
             'tags this -> [ `L_s24_best_fit  | `L_s56_lookup ] option
           val set_localeMatcher :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s24_best_fit ] 
               | `U2 of [ `L_s56_lookup ] ] -> unit
           val get_weekday :
             'tags this ->
               [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] option
           val set_weekday :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s55_long ] 
               | `U2 of [ `L_s88_short ]  | `U3 of [ `L_s67_narrow ] ] ->
                 unit
           val get_era :
             'tags this ->
               [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] option
           val set_era :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s55_long ] 
               | `U2 of [ `L_s88_short ]  | `U3 of [ `L_s67_narrow ] ] ->
                 unit
           val get_year :
             'tags this -> [ `L_s0_2_digit  | `L_s72_numeric ] option
           val set_year :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s72_numeric ] 
               | `U2 of [ `L_s0_2_digit ] ] -> unit
           val get_month :
             'tags this ->
               [ `L_s0_2_digit  | `L_s55_long  | `L_s67_narrow 
               | `L_s72_numeric  | `L_s88_short ] option
           val set_month :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s72_numeric ] 
               | `U2 of [ `L_s0_2_digit ]  | `U3 of [ `L_s55_long ] 
               | `U4 of [ `L_s88_short ]  | `U5 of [ `L_s67_narrow ] ] ->
                 unit
           val get_day :
             'tags this -> [ `L_s0_2_digit  | `L_s72_numeric ] option
           val set_day :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s72_numeric ] 
               | `U2 of [ `L_s0_2_digit ] ] -> unit
           val get_hour :
             'tags this -> [ `L_s0_2_digit  | `L_s72_numeric ] option
           val set_hour :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s72_numeric ] 
               | `U2 of [ `L_s0_2_digit ] ] -> unit
           val get_minute :
             'tags this -> [ `L_s0_2_digit  | `L_s72_numeric ] option
           val set_minute :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s72_numeric ] 
               | `U2 of [ `L_s0_2_digit ] ] -> unit
           val get_second :
             'tags this -> [ `L_s0_2_digit  | `L_s72_numeric ] option
           val set_second :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s72_numeric ] 
               | `U2 of [ `L_s0_2_digit ] ] -> unit
           val get_timeZoneName :
             'tags this -> [ `L_s55_long  | `L_s88_short ] option
           val set_timeZoneName :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s55_long ] 
               | `U2 of [ `L_s88_short ] ] -> unit
           val get_formatMatcher' :
             'tags this -> [ `L_s23_basic  | `L_s24_best_fit ] option
           val set_formatMatcher' :
             'tags this ->
               [ `Undefined of undefined  | `U1 of [ `L_s24_best_fit ] 
               | `U2 of [ `L_s23_basic ] ] -> unit
           val get_hour12 : 'tags this -> bool option
           val set_hour12 :
             'tags this -> [ `Undefined of undefined  | `U1 of bool ] -> unit
           val get_timeZone : 'tags this -> string option
           val set_timeZone :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val create :
             ?formatMatcher:[ `L_s23_basic  | `L_s24_best_fit ] ->
               ?dateStyle:[ `L_s43_full  | `L_s55_long  | `L_s59_medium 
                          | `L_s88_short ]
                 ->
                 ?timeStyle:[ `L_s43_full  | `L_s55_long  | `L_s59_medium 
                            | `L_s88_short ]
                   ->
                   ?dayPeriod:[ `L_s55_long  | `L_s67_narrow 
                              | `L_s88_short ]
                     ->
                     ?fractionalSecondDigits:[ `L_n_0  | `L_n_1  | `L_n_2 
                                             | `L_n_3 ]
                       ->
                       ?calendar:string ->
                         ?dayPeriod:[ `L_s55_long  | `L_s67_narrow 
                                    | `L_s88_short ]
                           ->
                           ?numberingSystem:string ->
                             ?dateStyle:[ `L_s43_full  | `L_s55_long 
                                        | `L_s59_medium  | `L_s88_short ]
                               ->
                               ?timeStyle:[ `L_s43_full  | `L_s55_long 
                                          | `L_s59_medium  | `L_s88_short ]
                                 ->
                                 ?hourCycle:[ `L_s45_h11  | `L_s46_h12 
                                            | `L_s47_h23  | `L_s48_h24 ]
                                   ->
                                   ?localeMatcher:[ `L_s24_best_fit 
                                                  | `L_s56_lookup ]
                                     ->
                                     ?weekday:[ `L_s55_long  | `L_s67_narrow 
                                              | `L_s88_short ]
                                       ->
                                       ?era:[ `L_s55_long  | `L_s67_narrow 
                                            | `L_s88_short ]
                                         ->
                                         ?year:[ `L_s0_2_digit 
                                               | `L_s72_numeric ]
                                           ->
                                           ?month:[ `L_s0_2_digit 
                                                  | `L_s55_long 
                                                  | `L_s67_narrow 
                                                  | `L_s72_numeric 
                                                  | `L_s88_short ]
                                             ->
                                             ?day:[ `L_s0_2_digit 
                                                  | `L_s72_numeric ]
                                               ->
                                               ?hour:[ `L_s0_2_digit 
                                                     | `L_s72_numeric ]
                                                 ->
                                                 ?minute:[ `L_s0_2_digit 
                                                         | `L_s72_numeric ]
                                                   ->
                                                   ?second:[ `L_s0_2_digit 
                                                           | `L_s72_numeric ]
                                                     ->
                                                     ?timeZoneName:[
                                                                    `L_s55_long
                                                                     | 
                                                                    `L_s88_short
                                                                    ]
                                                       ->
                                                       ?formatMatcher:
                                                         [ `L_s23_basic 
                                                         | `L_s24_best_fit ]
                                                         ->
                                                         ?hour12:bool ->
                                                           ?timeZone:string
                                                             -> unit -> t
           val cast_from : 'tags this -> t
         end
         module DateTimeFormat :
         sig
           type t = [ `Intl_DateTimeFormat ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_DateTimeFormat ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_DateTimeFormat ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_DateTimeFormat ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val formatToParts :
             'tags this ->
               ?date:[ `U1 of Date.t  | `U2 of float ] ->
                 unit -> DateTimeFormatPart.t list
           val format :
             'tags this ->
               ?date:[ `U1 of Date.t  | `U2 of float ] -> unit -> string
           val resolvedOptions :
             'tags this -> ResolvedDateTimeFormatOptions.t
           val cast_from : 'tags this -> t
           val create :
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:DateTimeFormatOptions.t -> unit -> t
           val invoke :
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:DateTimeFormatOptions.t -> unit -> t
           val supportedLocalesOf :
             locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:DateTimeFormatOptions.t -> unit -> string list
         end
         module ResolvedCollatorOptions :
         sig
           type t = [ `Intl_ResolvedCollatorOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_ResolvedCollatorOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_ResolvedCollatorOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_ResolvedCollatorOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_locale : 'tags this -> string
           val set_locale : 'tags this -> string -> unit
           val get_usage : 'tags this -> string
           val set_usage : 'tags this -> string -> unit
           val get_sensitivity : 'tags this -> string
           val set_sensitivity : 'tags this -> string -> unit
           val get_ignorePunctuation : 'tags this -> bool
           val set_ignorePunctuation : 'tags this -> bool -> unit
           val get_collation : 'tags this -> string
           val set_collation : 'tags this -> string -> unit
           val get_caseFirst : 'tags this -> string
           val set_caseFirst : 'tags this -> string -> unit
           val get_numeric : 'tags this -> bool
           val set_numeric : 'tags this -> bool -> unit
           val create :
             locale:string ->
               usage:string ->
                 sensitivity:string ->
                   ignorePunctuation:bool ->
                     collation:string ->
                       caseFirst:string -> numeric:bool -> unit -> t
           val cast_from : 'tags this -> t
         end
         module CollatorOptions :
         sig
           type t = [ `Intl_CollatorOptions ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_CollatorOptions ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem
             type tags = [ `Intl_CollatorOptions ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_CollatorOptions ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val get_usage : 'tags this -> string option
           val set_usage :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_localeMatcher : 'tags this -> string option
           val set_localeMatcher :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_numeric : 'tags this -> bool option
           val set_numeric :
             'tags this -> [ `Undefined of undefined  | `U1 of bool ] -> unit
           val get_caseFirst : 'tags this -> string option
           val set_caseFirst :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_sensitivity : 'tags this -> string option
           val set_sensitivity :
             'tags this ->
               [ `Undefined of undefined  | `U1 of string ] -> unit
           val get_ignorePunctuation : 'tags this -> bool option
           val set_ignorePunctuation :
             'tags this -> [ `Undefined of undefined  | `U1 of bool ] -> unit
           val create :
             ?usage:string ->
               ?localeMatcher:string ->
                 ?numeric:bool ->
                   ?caseFirst:string ->
                     ?sensitivity:string ->
                       ?ignorePunctuation:bool -> unit -> t
           val cast_from : 'tags this -> t
         end
         module Collator :
         sig
           type t = [ `Intl_Collator ] intf
           type t_0 = t
           [@@@js.stop ]
           type tags = [ `Intl_Collator ]
           type tags_0 = tags
           [@@@js.start ]
           [@@@js.implem type tags = [ `Intl_Collator ]
             type tags_0 = tags]
           type 'tags this =
             'tags intf constraint 'tags = [> `Intl_Collator ]
           val t_to_js : t -> Ojs.t
           val t_of_js : Ojs.t -> t
           val t_0_to_js : t_0 -> Ojs.t
           val t_0_of_js : Ojs.t -> t_0
           val compare : 'tags this -> x:string -> y:string -> float
           val resolvedOptions : 'tags this -> ResolvedCollatorOptions.t
           val cast_from : 'tags this -> t
           val create :
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:CollatorOptions.t -> unit -> t
           val invoke :
             ?locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:CollatorOptions.t -> unit -> t
           val supportedLocalesOf :
             locales:[ `U1 of string  | `U2 of string list ] ->
               ?options:CollatorOptions.t -> unit -> string list
         end
       end =
  struct
    module UnicodeBCP47LocaleIdentifier =
      struct
        type t = string
        let rec t_of_js : Ojs.t -> t =
          fun (x1930 : Ojs.t) -> Ojs.string_of_js x1930
        and t_to_js : t -> Ojs.t =
          fun (x1929 : string) -> Ojs.string_to_js x1929
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x1932 : Ojs.t) -> t_of_js x1932
        and t_0_to_js : t_0 -> Ojs.t = fun (x1931 : t) -> t_to_js x1931
      end
    module RelativeTimeFormatNumeric =
      struct
        type t = [ `L_s21_always  | `L_s22_auto ]
        let rec t_of_js : Ojs.t -> t =
          fun (x1934 : Ojs.t) ->
            let x1935 = x1934 in
            match Ojs.string_of_js x1935 with
            | "always" -> `L_s21_always
            | "auto" -> `L_s22_auto
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x1933 : [ `L_s21_always  | `L_s22_auto ]) ->
            match x1933 with
            | `L_s21_always -> Ojs.string_to_js "always"
            | `L_s22_auto -> Ojs.string_to_js "auto"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x1937 : Ojs.t) -> t_of_js x1937
        and t_0_to_js : t_0 -> Ojs.t = fun (x1936 : t) -> t_to_js x1936
      end
    module RelativeTimeFormatStyle =
      struct
        type t = [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ]
        let rec t_of_js : Ojs.t -> t =
          fun (x1939 : Ojs.t) ->
            let x1940 = x1939 in
            match Ojs.string_of_js x1940 with
            | "long" -> `L_s55_long
            | "narrow" -> `L_s67_narrow
            | "short" -> `L_s88_short
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x1938 : [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ]) ->
            match x1938 with
            | `L_s55_long -> Ojs.string_to_js "long"
            | `L_s67_narrow -> Ojs.string_to_js "narrow"
            | `L_s88_short -> Ojs.string_to_js "short"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x1942 : Ojs.t) -> t_of_js x1942
        and t_0_to_js : t_0 -> Ojs.t = fun (x1941 : t) -> t_to_js x1941
      end
    module ResolvedRelativeTimeFormatOptions =
      struct
        type t = [ `Intl_ResolvedRelativeTimeFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x1944 : Ojs.t) -> t_of_js x1944
        and t_0_to_js : t_0 -> Ojs.t = fun (x1943 : t) -> t_to_js x1943
        type tags = [ `Intl_ResolvedRelativeTimeFormatOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags =
                      [> `Intl_ResolvedRelativeTimeFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x1947 : Ojs.t) -> intf_of_js __tags_of_js x1947
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x1945 : __tags intf) -> intf_to_js __tags_to_js x1945
        let (get_locale : 'tags this -> UnicodeBCP47LocaleIdentifier.t) =
          fun (x1949 : 'tags this) ->
            UnicodeBCP47LocaleIdentifier.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x1949) "locale")
        let (set_locale :
          'tags this -> UnicodeBCP47LocaleIdentifier.t -> unit) =
          fun (x1951 : 'tags this) ->
            fun (x1952 : UnicodeBCP47LocaleIdentifier.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x1951) "locale"
                (UnicodeBCP47LocaleIdentifier.t_to_js x1952)
        let (get_style : 'tags this -> RelativeTimeFormatStyle.t) =
          fun (x1954 : 'tags this) ->
            RelativeTimeFormatStyle.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x1954) "style")
        let (set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit) =
          fun (x1956 : 'tags this) ->
            fun (x1957 : RelativeTimeFormatStyle.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x1956) "style"
                (RelativeTimeFormatStyle.t_to_js x1957)
        let (get_numeric : 'tags this -> RelativeTimeFormatNumeric.t) =
          fun (x1959 : 'tags this) ->
            RelativeTimeFormatNumeric.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x1959) "numeric")
        let (set_numeric : 'tags this -> RelativeTimeFormatNumeric.t -> unit)
          =
          fun (x1961 : 'tags this) ->
            fun (x1962 : RelativeTimeFormatNumeric.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x1961) "numeric"
                (RelativeTimeFormatNumeric.t_to_js x1962)
        let (get_numberingSystem : 'tags this -> string) =
          fun (x1964 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x1964)
                 "numberingSystem")
        let (set_numberingSystem : 'tags this -> string -> unit) =
          fun (x1966 : 'tags this) ->
            fun (x1967 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x1966)
                "numberingSystem" (Ojs.string_to_js x1967)
        let (create :
          locale:UnicodeBCP47LocaleIdentifier.t ->
            style:RelativeTimeFormatStyle.t ->
              numeric:RelativeTimeFormatNumeric.t ->
                numberingSystem:string -> unit -> t)
          =
          fun ~locale:(x1969 : UnicodeBCP47LocaleIdentifier.t) ->
            fun ~style:(x1970 : RelativeTimeFormatStyle.t) ->
              fun ~numeric:(x1971 : RelativeTimeFormatNumeric.t) ->
                fun ~numberingSystem:(x1972 : string) ->
                  fun () ->
                    let x1973 = Ojs.empty_obj () in
                    Ojs.set_prop_ascii x1973 "locale"
                      (UnicodeBCP47LocaleIdentifier.t_to_js x1969);
                    Ojs.set_prop_ascii x1973 "style"
                      (RelativeTimeFormatStyle.t_to_js x1970);
                    Ojs.set_prop_ascii x1973 "numeric"
                      (RelativeTimeFormatNumeric.t_to_js x1971);
                    Ojs.set_prop_ascii x1973 "numberingSystem"
                      (Ojs.string_to_js x1972);
                    t_of_js x1973
        let cast_from = Obj.magic
      end
    module RelativeTimeFormatUnit =
      struct
        type t =
          [ `L_s100_weeks  | `L_s101_year  | `L_s102_years  | `L_s29_day 
          | `L_s31_days  | `L_s49_hour  | `L_s50_hours  | `L_s61_minute 
          | `L_s62_minutes  | `L_s63_month  | `L_s64_months 
          | `L_s80_quarter  | `L_s81_quarters  | `L_s86_second 
          | `L_s87_seconds  | `L_s98_week ]
        let rec t_of_js : Ojs.t -> t =
          fun (x1975 : Ojs.t) ->
            let x1976 = x1975 in
            match Ojs.string_of_js x1976 with
            | "weeks" -> `L_s100_weeks
            | "year" -> `L_s101_year
            | "years" -> `L_s102_years
            | "day" -> `L_s29_day
            | "days" -> `L_s31_days
            | "hour" -> `L_s49_hour
            | "hours" -> `L_s50_hours
            | "minute" -> `L_s61_minute
            | "minutes" -> `L_s62_minutes
            | "month" -> `L_s63_month
            | "months" -> `L_s64_months
            | "quarter" -> `L_s80_quarter
            | "quarters" -> `L_s81_quarters
            | "second" -> `L_s86_second
            | "seconds" -> `L_s87_seconds
            | "week" -> `L_s98_week
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x1974 :
              [ `L_s100_weeks  | `L_s101_year  | `L_s102_years  | `L_s29_day 
              | `L_s31_days  | `L_s49_hour  | `L_s50_hours  | `L_s61_minute 
              | `L_s62_minutes  | `L_s63_month  | `L_s64_months 
              | `L_s80_quarter  | `L_s81_quarters  | `L_s86_second 
              | `L_s87_seconds  | `L_s98_week ])
            ->
            match x1974 with
            | `L_s100_weeks -> Ojs.string_to_js "weeks"
            | `L_s101_year -> Ojs.string_to_js "year"
            | `L_s102_years -> Ojs.string_to_js "years"
            | `L_s29_day -> Ojs.string_to_js "day"
            | `L_s31_days -> Ojs.string_to_js "days"
            | `L_s49_hour -> Ojs.string_to_js "hour"
            | `L_s50_hours -> Ojs.string_to_js "hours"
            | `L_s61_minute -> Ojs.string_to_js "minute"
            | `L_s62_minutes -> Ojs.string_to_js "minutes"
            | `L_s63_month -> Ojs.string_to_js "month"
            | `L_s64_months -> Ojs.string_to_js "months"
            | `L_s80_quarter -> Ojs.string_to_js "quarter"
            | `L_s81_quarters -> Ojs.string_to_js "quarters"
            | `L_s86_second -> Ojs.string_to_js "second"
            | `L_s87_seconds -> Ojs.string_to_js "seconds"
            | `L_s98_week -> Ojs.string_to_js "week"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x1978 : Ojs.t) -> t_of_js x1978
        and t_0_to_js : t_0 -> Ojs.t = fun (x1977 : t) -> t_to_js x1977
      end
    module RelativeTimeFormatPart =
      struct
        type t = [ `Intl_RelativeTimeFormatPart ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x1980 : Ojs.t) -> t_of_js x1980
        and t_0_to_js : t_0 -> Ojs.t = fun (x1979 : t) -> t_to_js x1979
        type tags = [ `Intl_RelativeTimeFormatPart ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_RelativeTimeFormatPart ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x1983 : Ojs.t) -> intf_of_js __tags_of_js x1983
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x1981 : __tags intf) -> intf_to_js __tags_to_js x1981
        let (get_type : 'tags this -> string) =
          fun (x1985 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x1985) "type")
        let (set_type : 'tags this -> string -> unit) =
          fun (x1987 : 'tags this) ->
            fun (x1988 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x1987) "type"
                (Ojs.string_to_js x1988)
        let (get_value : 'tags this -> string) =
          fun (x1990 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x1990) "value")
        let (set_value : 'tags this -> string -> unit) =
          fun (x1992 : 'tags this) ->
            fun (x1993 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x1992) "value"
                (Ojs.string_to_js x1993)
        let (get_unit : 'tags this -> RelativeTimeFormatUnit.t) =
          fun (x1995 : 'tags this) ->
            RelativeTimeFormatUnit.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x1995) "unit")
        let (set_unit : 'tags this -> RelativeTimeFormatUnit.t -> unit) =
          fun (x1997 : 'tags this) ->
            fun (x1998 : RelativeTimeFormatUnit.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x1997) "unit"
                (RelativeTimeFormatUnit.t_to_js x1998)
        let (create :
          type_:string ->
            value:string -> unit:RelativeTimeFormatUnit.t -> unit -> t)
          =
          fun ~type_:(x2000 : string) ->
            fun ~value:(x2001 : string) ->
              fun ~unit:(x2002 : RelativeTimeFormatUnit.t) ->
                fun () ->
                  let x2003 = Ojs.empty_obj () in
                  Ojs.set_prop_ascii x2003 "type" (Ojs.string_to_js x2000);
                  Ojs.set_prop_ascii x2003 "value" (Ojs.string_to_js x2001);
                  Ojs.set_prop_ascii x2003 "unit"
                    (RelativeTimeFormatUnit.t_to_js x2002);
                  t_of_js x2003
        let cast_from = Obj.magic
      end
    module RelativeTimeFormatLocaleMatcher =
      struct
        type t = [ `L_s24_best_fit  | `L_s56_lookup ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2005 : Ojs.t) ->
            let x2006 = x2005 in
            match Ojs.string_of_js x2006 with
            | "best fit" -> `L_s24_best_fit
            | "lookup" -> `L_s56_lookup
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x2004 : [ `L_s24_best_fit  | `L_s56_lookup ]) ->
            match x2004 with
            | `L_s24_best_fit -> Ojs.string_to_js "best fit"
            | `L_s56_lookup -> Ojs.string_to_js "lookup"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2008 : Ojs.t) -> t_of_js x2008
        and t_0_to_js : t_0 -> Ojs.t = fun (x2007 : t) -> t_to_js x2007
      end
    module RelativeTimeFormatOptions =
      struct
        type t = [ `Intl_RelativeTimeFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2010 : Ojs.t) -> t_of_js x2010
        and t_0_to_js : t_0 -> Ojs.t = fun (x2009 : t) -> t_to_js x2009
        type tags = [ `Intl_RelativeTimeFormatOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_RelativeTimeFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2013 : Ojs.t) -> intf_of_js __tags_of_js x2013
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2011 : __tags intf) -> intf_to_js __tags_to_js x2011
        let (get_localeMatcher :
          'tags this -> RelativeTimeFormatLocaleMatcher.t) =
          fun (x2015 : 'tags this) ->
            RelativeTimeFormatLocaleMatcher.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2015)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this -> RelativeTimeFormatLocaleMatcher.t -> unit) =
          fun (x2017 : 'tags this) ->
            fun (x2018 : RelativeTimeFormatLocaleMatcher.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2017) "localeMatcher"
                (RelativeTimeFormatLocaleMatcher.t_to_js x2018)
        let (get_numeric : 'tags this -> RelativeTimeFormatNumeric.t) =
          fun (x2020 : 'tags this) ->
            RelativeTimeFormatNumeric.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2020) "numeric")
        let (set_numeric : 'tags this -> RelativeTimeFormatNumeric.t -> unit)
          =
          fun (x2022 : 'tags this) ->
            fun (x2023 : RelativeTimeFormatNumeric.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2022) "numeric"
                (RelativeTimeFormatNumeric.t_to_js x2023)
        let (get_style : 'tags this -> RelativeTimeFormatStyle.t) =
          fun (x2025 : 'tags this) ->
            RelativeTimeFormatStyle.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2025) "style")
        let (set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit) =
          fun (x2027 : 'tags this) ->
            fun (x2028 : RelativeTimeFormatStyle.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2027) "style"
                (RelativeTimeFormatStyle.t_to_js x2028)
        let (create :
          localeMatcher:RelativeTimeFormatLocaleMatcher.t ->
            numeric:RelativeTimeFormatNumeric.t ->
              style:RelativeTimeFormatStyle.t -> unit -> t)
          =
          fun ~localeMatcher:(x2030 : RelativeTimeFormatLocaleMatcher.t) ->
            fun ~numeric:(x2031 : RelativeTimeFormatNumeric.t) ->
              fun ~style:(x2032 : RelativeTimeFormatStyle.t) ->
                fun () ->
                  let x2033 = Ojs.empty_obj () in
                  Ojs.set_prop_ascii x2033 "localeMatcher"
                    (RelativeTimeFormatLocaleMatcher.t_to_js x2030);
                  Ojs.set_prop_ascii x2033 "numeric"
                    (RelativeTimeFormatNumeric.t_to_js x2031);
                  Ojs.set_prop_ascii x2033 "style"
                    (RelativeTimeFormatStyle.t_to_js x2032);
                  t_of_js x2033
        let cast_from = Obj.magic
      end
    module RelativeTimeFormat =
      struct
        type t = [ `Intl_RelativeTimeFormat ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2035 : Ojs.t) -> t_of_js x2035
        and t_0_to_js : t_0 -> Ojs.t = fun (x2034 : t) -> t_to_js x2034
        type tags = [ `Intl_RelativeTimeFormat ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_RelativeTimeFormat ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2038 : Ojs.t) -> intf_of_js __tags_of_js x2038
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2036 : __tags intf) -> intf_to_js __tags_to_js x2036
        let (format :
          'tags this ->
            value:float -> unit:RelativeTimeFormatUnit.t -> string)
          =
          fun (x2042 : 'tags this) ->
            fun ~value:(x2040 : float) ->
              fun ~unit:(x2041 : RelativeTimeFormatUnit.t) ->
                Ojs.string_of_js
                  (Ojs.call (this_to_js Obj.magic x2042) "format"
                     [|(Ojs.float_to_js x2040);(RelativeTimeFormatUnit.t_to_js
                                                  x2041)|])
        let (formatToParts :
          'tags this ->
            value:float ->
              unit:RelativeTimeFormatUnit.t -> RelativeTimeFormatPart.t list)
          =
          fun (x2046 : 'tags this) ->
            fun ~value:(x2044 : float) ->
              fun ~unit:(x2045 : RelativeTimeFormatUnit.t) ->
                Ojs.list_of_js RelativeTimeFormatPart.t_of_js
                  (Ojs.call (this_to_js Obj.magic x2046) "formatToParts"
                     [|(Ojs.float_to_js x2044);(RelativeTimeFormatUnit.t_to_js
                                                  x2045)|])
        let (resolvedOptions :
          'tags this -> ResolvedRelativeTimeFormatOptions.t) =
          fun (x2049 : 'tags this) ->
            ResolvedRelativeTimeFormatOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x2049) "resolvedOptions" [||])
        let cast_from = Obj.magic
        let (create :
          ?locales:[ `U1 of UnicodeBCP47LocaleIdentifier.t 
                   | `U2 of UnicodeBCP47LocaleIdentifier.t list ]
            -> ?options:RelativeTimeFormatOptions.t -> unit -> t)
          =
          fun
            ?locales:(x2051 :
                       [ `U1 of UnicodeBCP47LocaleIdentifier.t 
                       | `U2 of UnicodeBCP47LocaleIdentifier.t list ] option)
            ->
            fun ?options:(x2052 : RelativeTimeFormatOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl")
                        "RelativeTimeFormat")
                     (let x2053 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x2051 with
                       | Some x2055 ->
                           ignore
                             (Ojs.call x2053 "push"
                                [|((match x2055 with
                                    | `U1 x2056 ->
                                        UnicodeBCP47LocaleIdentifier.t_to_js
                                          x2056
                                    | `U2 x2057 ->
                                        Ojs.list_to_js
                                          UnicodeBCP47LocaleIdentifier.t_to_js
                                          x2057))|])
                       | None -> ());
                      (match x2052 with
                       | Some x2054 ->
                           ignore
                             (Ojs.call x2053 "push"
                                [|(RelativeTimeFormatOptions.t_to_js x2054)|])
                       | None -> ());
                      x2053))
        let (supportedLocalesOf :
          ?locales:[ `U1 of UnicodeBCP47LocaleIdentifier.t 
                   | `U2 of UnicodeBCP47LocaleIdentifier.t list ]
            ->
            ?options:RelativeTimeFormatOptions.t ->
              unit -> UnicodeBCP47LocaleIdentifier.t list)
          =
          fun
            ?locales:(x2059 :
                       [ `U1 of UnicodeBCP47LocaleIdentifier.t 
                       | `U2 of UnicodeBCP47LocaleIdentifier.t list ] option)
            ->
            fun ?options:(x2060 : RelativeTimeFormatOptions.t option) ->
              fun () ->
                Ojs.list_of_js UnicodeBCP47LocaleIdentifier.t_of_js
                  (let x2067 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl")
                       "RelativeTimeFormat" in
                   Ojs.call (Ojs.get_prop_ascii x2067 "supportedLocalesOf")
                     "apply"
                     [|x2067;((let x2061 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x2059 with
                                | Some x2063 ->
                                    ignore
                                      (Ojs.call x2061 "push"
                                         [|((match x2063 with
                                             | `U1 x2064 ->
                                                 UnicodeBCP47LocaleIdentifier.t_to_js
                                                   x2064
                                             | `U2 x2065 ->
                                                 Ojs.list_to_js
                                                   UnicodeBCP47LocaleIdentifier.t_to_js
                                                   x2065))|])
                                | None -> ());
                               (match x2060 with
                                | Some x2062 ->
                                    ignore
                                      (Ojs.call x2061 "push"
                                         [|(RelativeTimeFormatOptions.t_to_js
                                              x2062)|])
                                | None -> ());
                               x2061))|])
      end
    module PluralRuleType =
      struct
        type t = [ `L_s25_cardinal  | `L_s75_ordinal ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2070 : Ojs.t) ->
            let x2071 = x2070 in
            match Ojs.string_of_js x2071 with
            | "cardinal" -> `L_s25_cardinal
            | "ordinal" -> `L_s75_ordinal
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x2069 : [ `L_s25_cardinal  | `L_s75_ordinal ]) ->
            match x2069 with
            | `L_s25_cardinal -> Ojs.string_to_js "cardinal"
            | `L_s75_ordinal -> Ojs.string_to_js "ordinal"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2073 : Ojs.t) -> t_of_js x2073
        and t_0_to_js : t_0 -> Ojs.t = fun (x2072 : t) -> t_to_js x2072
      end
    module LDMLPluralRule =
      struct
        type t =
          [ `L_s103_zero  | `L_s40_few  | `L_s58_many  | `L_s74_one 
          | `L_s76_other  | `L_s94_two ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2075 : Ojs.t) ->
            let x2076 = x2075 in
            match Ojs.string_of_js x2076 with
            | "zero" -> `L_s103_zero
            | "few" -> `L_s40_few
            | "many" -> `L_s58_many
            | "one" -> `L_s74_one
            | "other" -> `L_s76_other
            | "two" -> `L_s94_two
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x2074 :
              [ `L_s103_zero  | `L_s40_few  | `L_s58_many  | `L_s74_one 
              | `L_s76_other  | `L_s94_two ])
            ->
            match x2074 with
            | `L_s103_zero -> Ojs.string_to_js "zero"
            | `L_s40_few -> Ojs.string_to_js "few"
            | `L_s58_many -> Ojs.string_to_js "many"
            | `L_s74_one -> Ojs.string_to_js "one"
            | `L_s76_other -> Ojs.string_to_js "other"
            | `L_s94_two -> Ojs.string_to_js "two"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2078 : Ojs.t) -> t_of_js x2078
        and t_0_to_js : t_0 -> Ojs.t = fun (x2077 : t) -> t_to_js x2077
      end
    module ResolvedPluralRulesOptions =
      struct
        type t = [ `Intl_ResolvedPluralRulesOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2080 : Ojs.t) -> t_of_js x2080
        and t_0_to_js : t_0 -> Ojs.t = fun (x2079 : t) -> t_to_js x2079
        type tags = [ `Intl_ResolvedPluralRulesOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_ResolvedPluralRulesOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2083 : Ojs.t) -> intf_of_js __tags_of_js x2083
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2081 : __tags intf) -> intf_to_js __tags_to_js x2081
        let (get_locale : 'tags this -> string) =
          fun (x2085 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2085) "locale")
        let (set_locale : 'tags this -> string -> unit) =
          fun (x2087 : 'tags this) ->
            fun (x2088 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2087) "locale"
                (Ojs.string_to_js x2088)
        let (get_pluralCategories : 'tags this -> LDMLPluralRule.t list) =
          fun (x2090 : 'tags this) ->
            Ojs.list_of_js LDMLPluralRule.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2090)
                 "pluralCategories")
        let (set_pluralCategories :
          'tags this -> LDMLPluralRule.t list -> unit) =
          fun (x2093 : 'tags this) ->
            fun (x2094 : LDMLPluralRule.t list) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2093)
                "pluralCategories"
                (Ojs.list_to_js LDMLPluralRule.t_to_js x2094)
        let (get_type : 'tags this -> PluralRuleType.t) =
          fun (x2097 : 'tags this) ->
            PluralRuleType.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2097) "type")
        let (set_type : 'tags this -> PluralRuleType.t -> unit) =
          fun (x2099 : 'tags this) ->
            fun (x2100 : PluralRuleType.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2099) "type"
                (PluralRuleType.t_to_js x2100)
        let (get_minimumIntegerDigits : 'tags this -> float) =
          fun (x2102 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2102)
                 "minimumIntegerDigits")
        let (set_minimumIntegerDigits : 'tags this -> float -> unit) =
          fun (x2104 : 'tags this) ->
            fun (x2105 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2104)
                "minimumIntegerDigits" (Ojs.float_to_js x2105)
        let (get_minimumFractionDigits : 'tags this -> float) =
          fun (x2107 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2107)
                 "minimumFractionDigits")
        let (set_minimumFractionDigits : 'tags this -> float -> unit) =
          fun (x2109 : 'tags this) ->
            fun (x2110 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2109)
                "minimumFractionDigits" (Ojs.float_to_js x2110)
        let (get_maximumFractionDigits : 'tags this -> float) =
          fun (x2112 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2112)
                 "maximumFractionDigits")
        let (set_maximumFractionDigits : 'tags this -> float -> unit) =
          fun (x2114 : 'tags this) ->
            fun (x2115 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2114)
                "maximumFractionDigits" (Ojs.float_to_js x2115)
        let (get_minimumSignificantDigits : 'tags this -> float) =
          fun (x2117 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2117)
                 "minimumSignificantDigits")
        let (set_minimumSignificantDigits : 'tags this -> float -> unit) =
          fun (x2119 : 'tags this) ->
            fun (x2120 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2119)
                "minimumSignificantDigits" (Ojs.float_to_js x2120)
        let (get_maximumSignificantDigits : 'tags this -> float) =
          fun (x2122 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2122)
                 "maximumSignificantDigits")
        let (set_maximumSignificantDigits : 'tags this -> float -> unit) =
          fun (x2124 : 'tags this) ->
            fun (x2125 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2124)
                "maximumSignificantDigits" (Ojs.float_to_js x2125)
        let (create :
          locale:string ->
            pluralCategories:LDMLPluralRule.t list ->
              type_:PluralRuleType.t ->
                minimumIntegerDigits:float ->
                  minimumFractionDigits:float ->
                    maximumFractionDigits:float ->
                      minimumSignificantDigits:float ->
                        maximumSignificantDigits:float -> unit -> t)
          =
          fun ~locale:(x2127 : string) ->
            fun ~pluralCategories:(x2128 : LDMLPluralRule.t list) ->
              fun ~type_:(x2129 : PluralRuleType.t) ->
                fun ~minimumIntegerDigits:(x2130 : float) ->
                  fun ~minimumFractionDigits:(x2131 : float) ->
                    fun ~maximumFractionDigits:(x2132 : float) ->
                      fun ~minimumSignificantDigits:(x2133 : float) ->
                        fun ~maximumSignificantDigits:(x2134 : float) ->
                          fun () ->
                            let x2135 = Ojs.empty_obj () in
                            Ojs.set_prop_ascii x2135 "locale"
                              (Ojs.string_to_js x2127);
                            Ojs.set_prop_ascii x2135 "pluralCategories"
                              (Ojs.list_to_js LDMLPluralRule.t_to_js x2128);
                            Ojs.set_prop_ascii x2135 "type"
                              (PluralRuleType.t_to_js x2129);
                            Ojs.set_prop_ascii x2135 "minimumIntegerDigits"
                              (Ojs.float_to_js x2130);
                            Ojs.set_prop_ascii x2135 "minimumFractionDigits"
                              (Ojs.float_to_js x2131);
                            Ojs.set_prop_ascii x2135 "maximumFractionDigits"
                              (Ojs.float_to_js x2132);
                            Ojs.set_prop_ascii x2135
                              "minimumSignificantDigits"
                              (Ojs.float_to_js x2133);
                            Ojs.set_prop_ascii x2135
                              "maximumSignificantDigits"
                              (Ojs.float_to_js x2134);
                            t_of_js x2135
        let cast_from = Obj.magic
      end
    module PluralRulesOptions =
      struct
        type t = [ `Intl_PluralRulesOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2138 : Ojs.t) -> t_of_js x2138
        and t_0_to_js : t_0 -> Ojs.t = fun (x2137 : t) -> t_to_js x2137
        type tags = [ `Intl_PluralRulesOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_PluralRulesOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2141 : Ojs.t) -> intf_of_js __tags_of_js x2141
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2139 : __tags intf) -> intf_to_js __tags_to_js x2139
        let (get_localeMatcher :
          'tags this -> [ `L_s24_best_fit  | `L_s56_lookup ] option) =
          fun (x2143 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2145 : Ojs.t) ->
                 let x2146 = x2145 in
                 match Ojs.string_of_js x2146 with
                 | "best fit" -> `L_s24_best_fit
                 | "lookup" -> `L_s56_lookup
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2143)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s56_lookup ] 
            | `U2 of [ `L_s24_best_fit ] ] -> unit)
          =
          fun (x2147 : 'tags this) ->
            fun
              (x2148 :
                [ `Undefined of undefined  | `U1 of [ `L_s56_lookup ] 
                | `U2 of [ `L_s24_best_fit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2147) "localeMatcher"
                (match x2148 with
                 | `Undefined x2149 -> undefined_to_js x2149
                 | `U1 x2150 ->
                     (match x2150 with
                      | `L_s56_lookup -> Ojs.string_to_js "lookup")
                 | `U2 x2151 ->
                     (match x2151 with
                      | `L_s24_best_fit -> Ojs.string_to_js "best fit"))
        let (get_type : 'tags this -> PluralRuleType.t option) =
          fun (x2153 : 'tags this) ->
            Ojs.option_of_js PluralRuleType.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2153) "type")
        let (set_type :
          'tags this ->
            [ `Undefined of undefined  | `U1 of PluralRuleType.t ] -> unit)
          =
          fun (x2156 : 'tags this) ->
            fun
              (x2157 :
                [ `Undefined of undefined  | `U1 of PluralRuleType.t ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2156) "type"
                (match x2157 with
                 | `Undefined x2158 -> undefined_to_js x2158
                 | `U1 x2159 -> PluralRuleType.t_to_js x2159)
        let (get_minimumIntegerDigits : 'tags this -> float option) =
          fun (x2161 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2161)
                 "minimumIntegerDigits")
        let (set_minimumIntegerDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2164 : 'tags this) ->
            fun (x2165 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2164)
                "minimumIntegerDigits"
                (match x2165 with
                 | `Undefined x2166 -> undefined_to_js x2166
                 | `U1 x2167 -> Ojs.float_to_js x2167)
        let (get_minimumFractionDigits : 'tags this -> float option) =
          fun (x2169 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2169)
                 "minimumFractionDigits")
        let (set_minimumFractionDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2172 : 'tags this) ->
            fun (x2173 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2172)
                "minimumFractionDigits"
                (match x2173 with
                 | `Undefined x2174 -> undefined_to_js x2174
                 | `U1 x2175 -> Ojs.float_to_js x2175)
        let (get_maximumFractionDigits : 'tags this -> float option) =
          fun (x2177 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2177)
                 "maximumFractionDigits")
        let (set_maximumFractionDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2180 : 'tags this) ->
            fun (x2181 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2180)
                "maximumFractionDigits"
                (match x2181 with
                 | `Undefined x2182 -> undefined_to_js x2182
                 | `U1 x2183 -> Ojs.float_to_js x2183)
        let (get_minimumSignificantDigits : 'tags this -> float option) =
          fun (x2185 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2185)
                 "minimumSignificantDigits")
        let (set_minimumSignificantDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2188 : 'tags this) ->
            fun (x2189 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2188)
                "minimumSignificantDigits"
                (match x2189 with
                 | `Undefined x2190 -> undefined_to_js x2190
                 | `U1 x2191 -> Ojs.float_to_js x2191)
        let (get_maximumSignificantDigits : 'tags this -> float option) =
          fun (x2193 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2193)
                 "maximumSignificantDigits")
        let (set_maximumSignificantDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2196 : 'tags this) ->
            fun (x2197 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2196)
                "maximumSignificantDigits"
                (match x2197 with
                 | `Undefined x2198 -> undefined_to_js x2198
                 | `U1 x2199 -> Ojs.float_to_js x2199)
        let (create :
          ?localeMatcher:[ `L_s24_best_fit  | `L_s56_lookup ] ->
            ?type_:PluralRuleType.t ->
              ?minimumIntegerDigits:float ->
                ?minimumFractionDigits:float ->
                  ?maximumFractionDigits:float ->
                    ?minimumSignificantDigits:float ->
                      ?maximumSignificantDigits:float -> unit -> t)
          =
          fun
            ?localeMatcher:(x2201 :
                             [ `L_s24_best_fit  | `L_s56_lookup ] option)
            ->
            fun ?type_:(x2202 : PluralRuleType.t option) ->
              fun ?minimumIntegerDigits:(x2203 : float option) ->
                fun ?minimumFractionDigits:(x2204 : float option) ->
                  fun ?maximumFractionDigits:(x2205 : float option) ->
                    fun ?minimumSignificantDigits:(x2206 : float option) ->
                      fun ?maximumSignificantDigits:(x2207 : float option) ->
                        fun () ->
                          let x2208 = Ojs.empty_obj () in
                          (match x2201 with
                           | Some x2215 ->
                               Ojs.set_prop_ascii x2208 "localeMatcher"
                                 (match x2215 with
                                  | `L_s24_best_fit ->
                                      Ojs.string_to_js "best fit"
                                  | `L_s56_lookup ->
                                      Ojs.string_to_js "lookup")
                           | None -> ());
                          (match x2202 with
                           | Some x2214 ->
                               Ojs.set_prop_ascii x2208 "type"
                                 (PluralRuleType.t_to_js x2214)
                           | None -> ());
                          (match x2203 with
                           | Some x2213 ->
                               Ojs.set_prop_ascii x2208
                                 "minimumIntegerDigits"
                                 (Ojs.float_to_js x2213)
                           | None -> ());
                          (match x2204 with
                           | Some x2212 ->
                               Ojs.set_prop_ascii x2208
                                 "minimumFractionDigits"
                                 (Ojs.float_to_js x2212)
                           | None -> ());
                          (match x2205 with
                           | Some x2211 ->
                               Ojs.set_prop_ascii x2208
                                 "maximumFractionDigits"
                                 (Ojs.float_to_js x2211)
                           | None -> ());
                          (match x2206 with
                           | Some x2210 ->
                               Ojs.set_prop_ascii x2208
                                 "minimumSignificantDigits"
                                 (Ojs.float_to_js x2210)
                           | None -> ());
                          (match x2207 with
                           | Some x2209 ->
                               Ojs.set_prop_ascii x2208
                                 "maximumSignificantDigits"
                                 (Ojs.float_to_js x2209)
                           | None -> ());
                          t_of_js x2208
        let cast_from = Obj.magic
      end
    module PluralRules =
      struct
        module AnonymousInterface4 =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x2217 : Ojs.t) -> x2217
            and t_to_js : t -> Ojs.t = fun (x2216 : Ojs.t) -> x2216
            let (get_localeMatcher :
              t -> [ `L_s24_best_fit  | `L_s56_lookup ]) =
              fun (x2218 : t) ->
                let x2219 =
                  Ojs.get_prop_ascii (t_to_js x2218) "localeMatcher" in
                match Ojs.string_of_js x2219 with
                | "best fit" -> `L_s24_best_fit
                | "lookup" -> `L_s56_lookup
                | _ -> assert false
            let (set_localeMatcher :
              t ->
                [ `U1 of [ `L_s56_lookup ]  | `U2 of [ `L_s24_best_fit ] ] ->
                  unit)
              =
              fun (x2220 : t) ->
                fun
                  (x2221 :
                    [ `U1 of [ `L_s56_lookup ] 
                    | `U2 of [ `L_s24_best_fit ] ])
                  ->
                  Ojs.set_prop_ascii (t_to_js x2220) "localeMatcher"
                    (match x2221 with
                     | `U1 x2222 ->
                         (match x2222 with
                          | `L_s56_lookup -> Ojs.string_to_js "lookup")
                     | `U2 x2223 ->
                         (match x2223 with
                          | `L_s24_best_fit -> Ojs.string_to_js "best fit"))
            let (create :
              localeMatcher:[ `L_s24_best_fit  | `L_s56_lookup ] -> unit -> t)
              =
              fun
                ~localeMatcher:(x2224 : [ `L_s24_best_fit  | `L_s56_lookup ])
                ->
                fun () ->
                  let x2225 = Ojs.empty_obj () in
                  Ojs.set_prop_ascii x2225 "localeMatcher"
                    (match x2224 with
                     | `L_s24_best_fit -> Ojs.string_to_js "best fit"
                     | `L_s56_lookup -> Ojs.string_to_js "lookup");
                  t_of_js x2225
          end
        type t = [ `Intl_PluralRules ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2227 : Ojs.t) -> t_of_js x2227
        and t_0_to_js : t_0 -> Ojs.t = fun (x2226 : t) -> t_to_js x2226
        type tags = [ `Intl_PluralRules ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_PluralRules ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2230 : Ojs.t) -> intf_of_js __tags_of_js x2230
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2228 : __tags intf) -> intf_to_js __tags_to_js x2228
        let (resolvedOptions : 'tags this -> ResolvedPluralRulesOptions.t) =
          fun (x2232 : 'tags this) ->
            ResolvedPluralRulesOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x2232) "resolvedOptions" [||])
        let (select : 'tags this -> n:float -> LDMLPluralRule.t) =
          fun (x2235 : 'tags this) ->
            fun ~n:(x2234 : float) ->
              LDMLPluralRule.t_of_js
                (Ojs.call (this_to_js Obj.magic x2235) "select"
                   [|(Ojs.float_to_js x2234)|])
        let cast_from = Obj.magic
        let (create :
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:PluralRulesOptions.t -> unit -> t)
          =
          fun
            ?locales:(x2237 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x2238 : PluralRulesOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "PluralRules")
                     (let x2239 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x2237 with
                       | Some x2241 ->
                           ignore
                             (Ojs.call x2239 "push"
                                [|((match x2241 with
                                    | `U1 x2242 -> Ojs.string_to_js x2242
                                    | `U2 x2243 ->
                                        Ojs.list_to_js Ojs.string_to_js x2243))|])
                       | None -> ());
                      (match x2238 with
                       | Some x2240 ->
                           ignore
                             (Ojs.call x2239 "push"
                                [|(PluralRulesOptions.t_to_js x2240)|])
                       | None -> ());
                      x2239))
        let (invoke :
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:PluralRulesOptions.t -> unit -> t)
          =
          fun
            ?locales:(x2245 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x2246 : PluralRulesOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "PluralRules")
                     "apply"
                     [|Ojs.null;((let x2247 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  (match x2245 with
                                   | Some x2249 ->
                                       ignore
                                         (Ojs.call x2247 "push"
                                            [|((match x2249 with
                                                | `U1 x2250 ->
                                                    Ojs.string_to_js x2250
                                                | `U2 x2251 ->
                                                    Ojs.list_to_js
                                                      Ojs.string_to_js x2251))|])
                                   | None -> ());
                                  (match x2246 with
                                   | Some x2248 ->
                                       ignore
                                         (Ojs.call x2247 "push"
                                            [|(PluralRulesOptions.t_to_js
                                                 x2248)|])
                                   | None -> ());
                                  x2247))|])
        let (supportedLocalesOf :
          locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:AnonymousInterface4.t -> unit -> string list)
          =
          fun ~locales:(x2253 : [ `U1 of string  | `U2 of string list ]) ->
            fun ?options:(x2254 : AnonymousInterface4.t option) ->
              fun () ->
                Ojs.list_of_js Ojs.string_of_js
                  (let x2260 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl") "PluralRules" in
                   Ojs.call (Ojs.get_prop_ascii x2260 "supportedLocalesOf")
                     "apply"
                     [|x2260;((let x2255 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2255 "push"
                                    [|((match x2253 with
                                        | `U1 x2257 -> Ojs.string_to_js x2257
                                        | `U2 x2258 ->
                                            Ojs.list_to_js Ojs.string_to_js
                                              x2258))|]);
                               (match x2254 with
                                | Some x2256 ->
                                    ignore
                                      (Ojs.call x2255 "push"
                                         [|(AnonymousInterface4.t_to_js x2256)|])
                                | None -> ());
                               x2255))|])
      end
    module ResolvedNumberFormatOptions =
      struct
        type t = [ `Intl_ResolvedNumberFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2263 : Ojs.t) -> t_of_js x2263
        and t_0_to_js : t_0 -> Ojs.t = fun (x2262 : t) -> t_to_js x2262
        type tags = [ `Intl_ResolvedNumberFormatOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags =
                      [> `Intl_ResolvedNumberFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2266 : Ojs.t) -> intf_of_js __tags_of_js x2266
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2264 : __tags intf) -> intf_to_js __tags_to_js x2264
        let (get_compactDisplay :
          'tags this -> [ `L_s55_long  | `L_s88_short ]) =
          fun (x2268 : 'tags this) ->
            let x2270 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2268)
                "compactDisplay" in
            match Ojs.string_of_js x2270 with
            | "long" -> `L_s55_long
            | "short" -> `L_s88_short
            | _ -> assert false
        let (set_compactDisplay :
          'tags this ->
            [ `U1 of [ `L_s88_short ]  | `U2 of [ `L_s55_long ] ] -> unit)
          =
          fun (x2271 : 'tags this) ->
            fun
              (x2272 : [ `U1 of [ `L_s88_short ]  | `U2 of [ `L_s55_long ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2271)
                "compactDisplay"
                (match x2272 with
                 | `U1 x2273 ->
                     (match x2273 with
                      | `L_s88_short -> Ojs.string_to_js "short")
                 | `U2 x2274 ->
                     (match x2274 with
                      | `L_s55_long -> Ojs.string_to_js "long"))
        let (get_notation :
          'tags this ->
            [ `L_s27_compact  | `L_s34_engineering  | `L_s84_scientific 
            | `L_s89_standard ])
          =
          fun (x2276 : 'tags this) ->
            let x2278 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2276) "notation" in
            match Ojs.string_of_js x2278 with
            | "compact" -> `L_s27_compact
            | "engineering" -> `L_s34_engineering
            | "scientific" -> `L_s84_scientific
            | "standard" -> `L_s89_standard
            | _ -> assert false
        let (set_notation :
          'tags this ->
            [ `U1 of [ `L_s89_standard ]  | `U2 of [ `L_s84_scientific ] 
            | `U3 of [ `L_s34_engineering ]  | `U4 of [ `L_s27_compact ] ] ->
              unit)
          =
          fun (x2279 : 'tags this) ->
            fun
              (x2280 :
                [ `U1 of [ `L_s89_standard ]  | `U2 of [ `L_s84_scientific ] 
                | `U3 of [ `L_s34_engineering ] 
                | `U4 of [ `L_s27_compact ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2279) "notation"
                (match x2280 with
                 | `U1 x2281 ->
                     (match x2281 with
                      | `L_s89_standard -> Ojs.string_to_js "standard")
                 | `U2 x2282 ->
                     (match x2282 with
                      | `L_s84_scientific -> Ojs.string_to_js "scientific")
                 | `U3 x2283 ->
                     (match x2283 with
                      | `L_s34_engineering -> Ojs.string_to_js "engineering")
                 | `U4 x2284 ->
                     (match x2284 with
                      | `L_s27_compact -> Ojs.string_to_js "compact"))
        let (get_signDisplay :
          'tags this -> [ `L_s21_always  | `L_s22_auto  | `L_s68_never ]) =
          fun (x2286 : 'tags this) ->
            let x2288 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2286) "signDisplay" in
            match Ojs.string_of_js x2288 with
            | "always" -> `L_s21_always
            | "auto" -> `L_s22_auto
            | "never" -> `L_s68_never
            | _ -> assert false
        let (set_signDisplay :
          'tags this ->
            [ `U1 of [ `L_s22_auto ]  | `U2 of [ `L_s68_never ] 
            | `U3 of [ `L_s21_always ] ] -> unit)
          =
          fun (x2289 : 'tags this) ->
            fun
              (x2290 :
                [ `U1 of [ `L_s22_auto ]  | `U2 of [ `L_s68_never ] 
                | `U3 of [ `L_s21_always ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2289) "signDisplay"
                (match x2290 with
                 | `U1 x2291 ->
                     (match x2291 with
                      | `L_s22_auto -> Ojs.string_to_js "auto")
                 | `U2 x2292 ->
                     (match x2292 with
                      | `L_s68_never -> Ojs.string_to_js "never")
                 | `U3 x2293 ->
                     (match x2293 with
                      | `L_s21_always -> Ojs.string_to_js "always"))
        let (get_unit : 'tags this -> string) =
          fun (x2295 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2295) "unit")
        let (set_unit : 'tags this -> string -> unit) =
          fun (x2297 : 'tags this) ->
            fun (x2298 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2297) "unit"
                (Ojs.string_to_js x2298)
        let (get_unitDisplay :
          'tags this -> [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ]) =
          fun (x2300 : 'tags this) ->
            let x2302 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2300) "unitDisplay" in
            match Ojs.string_of_js x2302 with
            | "long" -> `L_s55_long
            | "narrow" -> `L_s67_narrow
            | "short" -> `L_s88_short
            | _ -> assert false
        let (set_unitDisplay :
          'tags this ->
            [ `U1 of [ `L_s88_short ]  | `U2 of [ `L_s55_long ] 
            | `U3 of [ `L_s67_narrow ] ] -> unit)
          =
          fun (x2303 : 'tags this) ->
            fun
              (x2304 :
                [ `U1 of [ `L_s88_short ]  | `U2 of [ `L_s55_long ] 
                | `U3 of [ `L_s67_narrow ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2303) "unitDisplay"
                (match x2304 with
                 | `U1 x2305 ->
                     (match x2305 with
                      | `L_s88_short -> Ojs.string_to_js "short")
                 | `U2 x2306 ->
                     (match x2306 with
                      | `L_s55_long -> Ojs.string_to_js "long")
                 | `U3 x2307 ->
                     (match x2307 with
                      | `L_s67_narrow -> Ojs.string_to_js "narrow"))
        let (get_locale : 'tags this -> string) =
          fun (x2309 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2309) "locale")
        let (set_locale : 'tags this -> string -> unit) =
          fun (x2311 : 'tags this) ->
            fun (x2312 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2311) "locale"
                (Ojs.string_to_js x2312)
        let (get_numberingSystem : 'tags this -> string) =
          fun (x2314 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2314)
                 "numberingSystem")
        let (set_numberingSystem : 'tags this -> string -> unit) =
          fun (x2316 : 'tags this) ->
            fun (x2317 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2316)
                "numberingSystem" (Ojs.string_to_js x2317)
        let (get_style : 'tags this -> string) =
          fun (x2319 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2319) "style")
        let (set_style : 'tags this -> string -> unit) =
          fun (x2321 : 'tags this) ->
            fun (x2322 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2321) "style"
                (Ojs.string_to_js x2322)
        let (get_currency : 'tags this -> string) =
          fun (x2324 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2324) "currency")
        let (set_currency : 'tags this -> string -> unit) =
          fun (x2326 : 'tags this) ->
            fun (x2327 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2326) "currency"
                (Ojs.string_to_js x2327)
        let (get_currencyDisplay : 'tags this -> string) =
          fun (x2329 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2329)
                 "currencyDisplay")
        let (set_currencyDisplay : 'tags this -> string -> unit) =
          fun (x2331 : 'tags this) ->
            fun (x2332 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2331)
                "currencyDisplay" (Ojs.string_to_js x2332)
        let (get_minimumIntegerDigits : 'tags this -> float) =
          fun (x2334 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2334)
                 "minimumIntegerDigits")
        let (set_minimumIntegerDigits : 'tags this -> float -> unit) =
          fun (x2336 : 'tags this) ->
            fun (x2337 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2336)
                "minimumIntegerDigits" (Ojs.float_to_js x2337)
        let (get_minimumFractionDigits : 'tags this -> float) =
          fun (x2339 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2339)
                 "minimumFractionDigits")
        let (set_minimumFractionDigits : 'tags this -> float -> unit) =
          fun (x2341 : 'tags this) ->
            fun (x2342 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2341)
                "minimumFractionDigits" (Ojs.float_to_js x2342)
        let (get_maximumFractionDigits : 'tags this -> float) =
          fun (x2344 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2344)
                 "maximumFractionDigits")
        let (set_maximumFractionDigits : 'tags this -> float -> unit) =
          fun (x2346 : 'tags this) ->
            fun (x2347 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2346)
                "maximumFractionDigits" (Ojs.float_to_js x2347)
        let (get_minimumSignificantDigits : 'tags this -> float) =
          fun (x2349 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2349)
                 "minimumSignificantDigits")
        let (set_minimumSignificantDigits : 'tags this -> float -> unit) =
          fun (x2351 : 'tags this) ->
            fun (x2352 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2351)
                "minimumSignificantDigits" (Ojs.float_to_js x2352)
        let (get_maximumSignificantDigits : 'tags this -> float) =
          fun (x2354 : 'tags this) ->
            Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2354)
                 "maximumSignificantDigits")
        let (set_maximumSignificantDigits : 'tags this -> float -> unit) =
          fun (x2356 : 'tags this) ->
            fun (x2357 : float) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2356)
                "maximumSignificantDigits" (Ojs.float_to_js x2357)
        let (get_useGrouping : 'tags this -> bool) =
          fun (x2359 : 'tags this) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2359) "useGrouping")
        let (set_useGrouping : 'tags this -> bool -> unit) =
          fun (x2361 : 'tags this) ->
            fun (x2362 : bool) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2361) "useGrouping"
                (Ojs.bool_to_js x2362)
        let (create :
          compactDisplay:[ `L_s55_long  | `L_s88_short ] ->
            notation:[ `L_s27_compact  | `L_s34_engineering 
                     | `L_s84_scientific  | `L_s89_standard ]
              ->
              signDisplay:[ `L_s21_always  | `L_s22_auto  | `L_s68_never ] ->
                unit:string ->
                  unitDisplay:[ `L_s55_long  | `L_s67_narrow 
                              | `L_s88_short ]
                    ->
                    locale:string ->
                      numberingSystem:string ->
                        style:string ->
                          currency:string ->
                            currencyDisplay:string ->
                              minimumIntegerDigits:float ->
                                minimumFractionDigits:float ->
                                  maximumFractionDigits:float ->
                                    minimumSignificantDigits:float ->
                                      maximumSignificantDigits:float ->
                                        useGrouping:bool -> unit -> t)
          =
          fun ~compactDisplay:(x2364 : [ `L_s55_long  | `L_s88_short ]) ->
            fun
              ~notation:(x2365 :
                          [ `L_s27_compact  | `L_s34_engineering 
                          | `L_s84_scientific  | `L_s89_standard ])
              ->
              fun
                ~signDisplay:(x2366 :
                               [ `L_s21_always  | `L_s22_auto 
                               | `L_s68_never ])
                ->
                fun ~unit:(x2367 : string) ->
                  fun
                    ~unitDisplay:(x2368 :
                                   [ `L_s55_long  | `L_s67_narrow 
                                   | `L_s88_short ])
                    ->
                    fun ~locale:(x2369 : string) ->
                      fun ~numberingSystem:(x2370 : string) ->
                        fun ~style:(x2371 : string) ->
                          fun ~currency:(x2372 : string) ->
                            fun ~currencyDisplay:(x2373 : string) ->
                              fun ~minimumIntegerDigits:(x2374 : float) ->
                                fun ~minimumFractionDigits:(x2375 : float) ->
                                  fun ~maximumFractionDigits:(x2376 : float)
                                    ->
                                    fun
                                      ~minimumSignificantDigits:(x2377 :
                                                                  float)
                                      ->
                                      fun
                                        ~maximumSignificantDigits:(x2378 :
                                                                    float)
                                        ->
                                        fun ~useGrouping:(x2379 : bool) ->
                                          fun () ->
                                            let x2380 = Ojs.empty_obj () in
                                            Ojs.set_prop_ascii x2380
                                              "compactDisplay"
                                              (match x2364 with
                                               | `L_s55_long ->
                                                   Ojs.string_to_js "long"
                                               | `L_s88_short ->
                                                   Ojs.string_to_js "short");
                                            Ojs.set_prop_ascii x2380
                                              "notation"
                                              (match x2365 with
                                               | `L_s27_compact ->
                                                   Ojs.string_to_js "compact"
                                               | `L_s34_engineering ->
                                                   Ojs.string_to_js
                                                     "engineering"
                                               | `L_s84_scientific ->
                                                   Ojs.string_to_js
                                                     "scientific"
                                               | `L_s89_standard ->
                                                   Ojs.string_to_js
                                                     "standard");
                                            Ojs.set_prop_ascii x2380
                                              "signDisplay"
                                              (match x2366 with
                                               | `L_s21_always ->
                                                   Ojs.string_to_js "always"
                                               | `L_s22_auto ->
                                                   Ojs.string_to_js "auto"
                                               | `L_s68_never ->
                                                   Ojs.string_to_js "never");
                                            Ojs.set_prop_ascii x2380 "unit"
                                              (Ojs.string_to_js x2367);
                                            Ojs.set_prop_ascii x2380
                                              "unitDisplay"
                                              (match x2368 with
                                               | `L_s55_long ->
                                                   Ojs.string_to_js "long"
                                               | `L_s67_narrow ->
                                                   Ojs.string_to_js "narrow"
                                               | `L_s88_short ->
                                                   Ojs.string_to_js "short");
                                            Ojs.set_prop_ascii x2380 "locale"
                                              (Ojs.string_to_js x2369);
                                            Ojs.set_prop_ascii x2380
                                              "numberingSystem"
                                              (Ojs.string_to_js x2370);
                                            Ojs.set_prop_ascii x2380 "style"
                                              (Ojs.string_to_js x2371);
                                            Ojs.set_prop_ascii x2380
                                              "currency"
                                              (Ojs.string_to_js x2372);
                                            Ojs.set_prop_ascii x2380
                                              "currencyDisplay"
                                              (Ojs.string_to_js x2373);
                                            Ojs.set_prop_ascii x2380
                                              "minimumIntegerDigits"
                                              (Ojs.float_to_js x2374);
                                            Ojs.set_prop_ascii x2380
                                              "minimumFractionDigits"
                                              (Ojs.float_to_js x2375);
                                            Ojs.set_prop_ascii x2380
                                              "maximumFractionDigits"
                                              (Ojs.float_to_js x2376);
                                            Ojs.set_prop_ascii x2380
                                              "minimumSignificantDigits"
                                              (Ojs.float_to_js x2377);
                                            Ojs.set_prop_ascii x2380
                                              "maximumSignificantDigits"
                                              (Ojs.float_to_js x2378);
                                            Ojs.set_prop_ascii x2380
                                              "useGrouping"
                                              (Ojs.bool_to_js x2379);
                                            t_of_js x2380
        let cast_from = Obj.magic
      end
    module ES2020NumberFormatPartType =
      struct
        type t =
          [ `L_s27_compact  | `L_s36_exponentInteger 
          | `L_s37_exponentMinusSign  | `L_s38_exponentSeparator 
          | `L_s95_unit  | `L_s96_unknown ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2382 : Ojs.t) ->
            let x2383 = x2382 in
            match Ojs.string_of_js x2383 with
            | "compact" -> `L_s27_compact
            | "exponentInteger" -> `L_s36_exponentInteger
            | "exponentMinusSign" -> `L_s37_exponentMinusSign
            | "exponentSeparator" -> `L_s38_exponentSeparator
            | "unit" -> `L_s95_unit
            | "unknown" -> `L_s96_unknown
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x2381 :
              [ `L_s27_compact  | `L_s36_exponentInteger 
              | `L_s37_exponentMinusSign  | `L_s38_exponentSeparator 
              | `L_s95_unit  | `L_s96_unknown ])
            ->
            match x2381 with
            | `L_s27_compact -> Ojs.string_to_js "compact"
            | `L_s36_exponentInteger -> Ojs.string_to_js "exponentInteger"
            | `L_s37_exponentMinusSign ->
                Ojs.string_to_js "exponentMinusSign"
            | `L_s38_exponentSeparator ->
                Ojs.string_to_js "exponentSeparator"
            | `L_s95_unit -> Ojs.string_to_js "unit"
            | `L_s96_unknown -> Ojs.string_to_js "unknown"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2385 : Ojs.t) -> t_of_js x2385
        and t_0_to_js : t_0 -> Ojs.t = fun (x2384 : t) -> t_to_js x2384
      end
    module ES2018NumberFormatPartType =
      struct
        type t =
          [ `L_s26_code  | `L_s28_currency  | `L_s32_decimal 
          | `L_s41_fraction  | `L_s44_group  | `L_s51_infinity 
          | `L_s52_integer  | `L_s54_literal  | `L_s60_minusSign 
          | `L_s65_name  | `L_s66_nan  | `L_s77_percent 
          | `L_s78_percentSign  | `L_s79_plusSign  | `L_s91_symbol ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2387 : Ojs.t) ->
            let x2388 = x2387 in
            match Ojs.string_of_js x2388 with
            | "code" -> `L_s26_code
            | "currency" -> `L_s28_currency
            | "decimal" -> `L_s32_decimal
            | "fraction" -> `L_s41_fraction
            | "group" -> `L_s44_group
            | "infinity" -> `L_s51_infinity
            | "integer" -> `L_s52_integer
            | "literal" -> `L_s54_literal
            | "minusSign" -> `L_s60_minusSign
            | "name" -> `L_s65_name
            | "nan" -> `L_s66_nan
            | "percent" -> `L_s77_percent
            | "percentSign" -> `L_s78_percentSign
            | "plusSign" -> `L_s79_plusSign
            | "symbol" -> `L_s91_symbol
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x2386 :
              [ `L_s26_code  | `L_s28_currency  | `L_s32_decimal 
              | `L_s41_fraction  | `L_s44_group  | `L_s51_infinity 
              | `L_s52_integer  | `L_s54_literal  | `L_s60_minusSign 
              | `L_s65_name  | `L_s66_nan  | `L_s77_percent 
              | `L_s78_percentSign  | `L_s79_plusSign  | `L_s91_symbol ])
            ->
            match x2386 with
            | `L_s26_code -> Ojs.string_to_js "code"
            | `L_s28_currency -> Ojs.string_to_js "currency"
            | `L_s32_decimal -> Ojs.string_to_js "decimal"
            | `L_s41_fraction -> Ojs.string_to_js "fraction"
            | `L_s44_group -> Ojs.string_to_js "group"
            | `L_s51_infinity -> Ojs.string_to_js "infinity"
            | `L_s52_integer -> Ojs.string_to_js "integer"
            | `L_s54_literal -> Ojs.string_to_js "literal"
            | `L_s60_minusSign -> Ojs.string_to_js "minusSign"
            | `L_s65_name -> Ojs.string_to_js "name"
            | `L_s66_nan -> Ojs.string_to_js "nan"
            | `L_s77_percent -> Ojs.string_to_js "percent"
            | `L_s78_percentSign -> Ojs.string_to_js "percentSign"
            | `L_s79_plusSign -> Ojs.string_to_js "plusSign"
            | `L_s91_symbol -> Ojs.string_to_js "symbol"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2390 : Ojs.t) -> t_of_js x2390
        and t_0_to_js : t_0 -> Ojs.t = fun (x2389 : t) -> t_to_js x2389
      end
    module NumberFormatPartTypes =
      struct
        type t =
          [ `L_s26_code  | `L_s27_compact  | `L_s28_currency 
          | `L_s32_decimal  | `L_s36_exponentInteger 
          | `L_s37_exponentMinusSign  | `L_s38_exponentSeparator 
          | `L_s41_fraction  | `L_s44_group  | `L_s51_infinity 
          | `L_s52_integer  | `L_s54_literal  | `L_s60_minusSign 
          | `L_s65_name  | `L_s66_nan  | `L_s77_percent 
          | `L_s78_percentSign  | `L_s79_plusSign  | `L_s91_symbol 
          | `L_s95_unit  | `L_s96_unknown ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2392 : Ojs.t) ->
            let x2393 = x2392 in
            match Ojs.string_of_js x2393 with
            | "code" -> `L_s26_code
            | "compact" -> `L_s27_compact
            | "currency" -> `L_s28_currency
            | "decimal" -> `L_s32_decimal
            | "exponentInteger" -> `L_s36_exponentInteger
            | "exponentMinusSign" -> `L_s37_exponentMinusSign
            | "exponentSeparator" -> `L_s38_exponentSeparator
            | "fraction" -> `L_s41_fraction
            | "group" -> `L_s44_group
            | "infinity" -> `L_s51_infinity
            | "integer" -> `L_s52_integer
            | "literal" -> `L_s54_literal
            | "minusSign" -> `L_s60_minusSign
            | "name" -> `L_s65_name
            | "nan" -> `L_s66_nan
            | "percent" -> `L_s77_percent
            | "percentSign" -> `L_s78_percentSign
            | "plusSign" -> `L_s79_plusSign
            | "symbol" -> `L_s91_symbol
            | "unit" -> `L_s95_unit
            | "unknown" -> `L_s96_unknown
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x2391 :
              [ `L_s26_code  | `L_s27_compact  | `L_s28_currency 
              | `L_s32_decimal  | `L_s36_exponentInteger 
              | `L_s37_exponentMinusSign  | `L_s38_exponentSeparator 
              | `L_s41_fraction  | `L_s44_group  | `L_s51_infinity 
              | `L_s52_integer  | `L_s54_literal  | `L_s60_minusSign 
              | `L_s65_name  | `L_s66_nan  | `L_s77_percent 
              | `L_s78_percentSign  | `L_s79_plusSign  | `L_s91_symbol 
              | `L_s95_unit  | `L_s96_unknown ])
            ->
            match x2391 with
            | `L_s26_code -> Ojs.string_to_js "code"
            | `L_s27_compact -> Ojs.string_to_js "compact"
            | `L_s28_currency -> Ojs.string_to_js "currency"
            | `L_s32_decimal -> Ojs.string_to_js "decimal"
            | `L_s36_exponentInteger -> Ojs.string_to_js "exponentInteger"
            | `L_s37_exponentMinusSign ->
                Ojs.string_to_js "exponentMinusSign"
            | `L_s38_exponentSeparator ->
                Ojs.string_to_js "exponentSeparator"
            | `L_s41_fraction -> Ojs.string_to_js "fraction"
            | `L_s44_group -> Ojs.string_to_js "group"
            | `L_s51_infinity -> Ojs.string_to_js "infinity"
            | `L_s52_integer -> Ojs.string_to_js "integer"
            | `L_s54_literal -> Ojs.string_to_js "literal"
            | `L_s60_minusSign -> Ojs.string_to_js "minusSign"
            | `L_s65_name -> Ojs.string_to_js "name"
            | `L_s66_nan -> Ojs.string_to_js "nan"
            | `L_s77_percent -> Ojs.string_to_js "percent"
            | `L_s78_percentSign -> Ojs.string_to_js "percentSign"
            | `L_s79_plusSign -> Ojs.string_to_js "plusSign"
            | `L_s91_symbol -> Ojs.string_to_js "symbol"
            | `L_s95_unit -> Ojs.string_to_js "unit"
            | `L_s96_unknown -> Ojs.string_to_js "unknown"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2395 : Ojs.t) -> t_of_js x2395
        and t_0_to_js : t_0 -> Ojs.t = fun (x2394 : t) -> t_to_js x2394
      end
    module NumberFormatPart =
      struct
        type t = [ `Intl_NumberFormatPart ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2397 : Ojs.t) -> t_of_js x2397
        and t_0_to_js : t_0 -> Ojs.t = fun (x2396 : t) -> t_to_js x2396
        type tags = [ `Intl_NumberFormatPart ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_NumberFormatPart ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2400 : Ojs.t) -> intf_of_js __tags_of_js x2400
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2398 : __tags intf) -> intf_to_js __tags_to_js x2398
        let (get_type : 'tags this -> NumberFormatPartTypes.t) =
          fun (x2402 : 'tags this) ->
            NumberFormatPartTypes.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2402) "type")
        let (set_type : 'tags this -> NumberFormatPartTypes.t -> unit) =
          fun (x2404 : 'tags this) ->
            fun (x2405 : NumberFormatPartTypes.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2404) "type"
                (NumberFormatPartTypes.t_to_js x2405)
        let (get_value : 'tags this -> string) =
          fun (x2407 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2407) "value")
        let (set_value : 'tags this -> string -> unit) =
          fun (x2409 : 'tags this) ->
            fun (x2410 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2409) "value"
                (Ojs.string_to_js x2410)
        let (create :
          type_:NumberFormatPartTypes.t -> value:string -> unit -> t) =
          fun ~type_:(x2412 : NumberFormatPartTypes.t) ->
            fun ~value:(x2413 : string) ->
              fun () ->
                let x2414 = Ojs.empty_obj () in
                Ojs.set_prop_ascii x2414 "type"
                  (NumberFormatPartTypes.t_to_js x2412);
                Ojs.set_prop_ascii x2414 "value" (Ojs.string_to_js x2413);
                t_of_js x2414
        let cast_from = Obj.magic
      end
    module NumberFormatOptions =
      struct
        type t = [ `Intl_NumberFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2416 : Ojs.t) -> t_of_js x2416
        and t_0_to_js : t_0 -> Ojs.t = fun (x2415 : t) -> t_to_js x2415
        type tags = [ `Intl_NumberFormatOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_NumberFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2419 : Ojs.t) -> intf_of_js __tags_of_js x2419
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2417 : __tags intf) -> intf_to_js __tags_to_js x2417
        let (get_compactDisplay :
          'tags this -> [ `L_s55_long  | `L_s88_short ] option) =
          fun (x2421 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2423 : Ojs.t) ->
                 let x2424 = x2423 in
                 match Ojs.string_of_js x2424 with
                 | "long" -> `L_s55_long
                 | "short" -> `L_s88_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2421)
                 "compactDisplay")
        let (set_compactDisplay :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s88_short ] 
            | `U2 of [ `L_s55_long ] ] -> unit)
          =
          fun (x2425 : 'tags this) ->
            fun
              (x2426 :
                [ `Undefined of undefined  | `U1 of [ `L_s88_short ] 
                | `U2 of [ `L_s55_long ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2425)
                "compactDisplay"
                (match x2426 with
                 | `Undefined x2427 -> undefined_to_js x2427
                 | `U1 x2428 ->
                     (match x2428 with
                      | `L_s88_short -> Ojs.string_to_js "short")
                 | `U2 x2429 ->
                     (match x2429 with
                      | `L_s55_long -> Ojs.string_to_js "long"))
        let (get_notation :
          'tags this ->
            [ `L_s27_compact  | `L_s34_engineering  | `L_s84_scientific 
            | `L_s89_standard ] option)
          =
          fun (x2431 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2433 : Ojs.t) ->
                 let x2434 = x2433 in
                 match Ojs.string_of_js x2434 with
                 | "compact" -> `L_s27_compact
                 | "engineering" -> `L_s34_engineering
                 | "scientific" -> `L_s84_scientific
                 | "standard" -> `L_s89_standard
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2431) "notation")
        let (set_notation :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s89_standard ] 
            | `U2 of [ `L_s84_scientific ]  | `U3 of [ `L_s34_engineering ] 
            | `U4 of [ `L_s27_compact ] ] -> unit)
          =
          fun (x2435 : 'tags this) ->
            fun
              (x2436 :
                [ `Undefined of undefined  | `U1 of [ `L_s89_standard ] 
                | `U2 of [ `L_s84_scientific ] 
                | `U3 of [ `L_s34_engineering ] 
                | `U4 of [ `L_s27_compact ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2435) "notation"
                (match x2436 with
                 | `Undefined x2437 -> undefined_to_js x2437
                 | `U1 x2438 ->
                     (match x2438 with
                      | `L_s89_standard -> Ojs.string_to_js "standard")
                 | `U2 x2439 ->
                     (match x2439 with
                      | `L_s84_scientific -> Ojs.string_to_js "scientific")
                 | `U3 x2440 ->
                     (match x2440 with
                      | `L_s34_engineering -> Ojs.string_to_js "engineering")
                 | `U4 x2441 ->
                     (match x2441 with
                      | `L_s27_compact -> Ojs.string_to_js "compact"))
        let (get_signDisplay :
          'tags this ->
            [ `L_s21_always  | `L_s22_auto  | `L_s68_never ] option)
          =
          fun (x2443 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2445 : Ojs.t) ->
                 let x2446 = x2445 in
                 match Ojs.string_of_js x2446 with
                 | "always" -> `L_s21_always
                 | "auto" -> `L_s22_auto
                 | "never" -> `L_s68_never
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2443) "signDisplay")
        let (set_signDisplay :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s22_auto ] 
            | `U2 of [ `L_s68_never ]  | `U3 of [ `L_s21_always ] ] -> 
              unit)
          =
          fun (x2447 : 'tags this) ->
            fun
              (x2448 :
                [ `Undefined of undefined  | `U1 of [ `L_s22_auto ] 
                | `U2 of [ `L_s68_never ]  | `U3 of [ `L_s21_always ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2447) "signDisplay"
                (match x2448 with
                 | `Undefined x2449 -> undefined_to_js x2449
                 | `U1 x2450 ->
                     (match x2450 with
                      | `L_s22_auto -> Ojs.string_to_js "auto")
                 | `U2 x2451 ->
                     (match x2451 with
                      | `L_s68_never -> Ojs.string_to_js "never")
                 | `U3 x2452 ->
                     (match x2452 with
                      | `L_s21_always -> Ojs.string_to_js "always"))
        let (get_unit : 'tags this -> string option) =
          fun (x2454 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2454) "unit")
        let (set_unit :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x2457 : 'tags this) ->
            fun (x2458 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2457) "unit"
                (match x2458 with
                 | `Undefined x2459 -> undefined_to_js x2459
                 | `U1 x2460 -> Ojs.string_to_js x2460)
        let (get_unitDisplay :
          'tags this ->
            [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] option)
          =
          fun (x2462 : 'tags this) ->
            Ojs.option_of_js
              (fun (x2464 : Ojs.t) ->
                 let x2465 = x2464 in
                 match Ojs.string_of_js x2465 with
                 | "long" -> `L_s55_long
                 | "narrow" -> `L_s67_narrow
                 | "short" -> `L_s88_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2462) "unitDisplay")
        let (set_unitDisplay :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s88_short ] 
            | `U2 of [ `L_s55_long ]  | `U3 of [ `L_s67_narrow ] ] -> 
              unit)
          =
          fun (x2466 : 'tags this) ->
            fun
              (x2467 :
                [ `Undefined of undefined  | `U1 of [ `L_s88_short ] 
                | `U2 of [ `L_s55_long ]  | `U3 of [ `L_s67_narrow ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2466) "unitDisplay"
                (match x2467 with
                 | `Undefined x2468 -> undefined_to_js x2468
                 | `U1 x2469 ->
                     (match x2469 with
                      | `L_s88_short -> Ojs.string_to_js "short")
                 | `U2 x2470 ->
                     (match x2470 with
                      | `L_s55_long -> Ojs.string_to_js "long")
                 | `U3 x2471 ->
                     (match x2471 with
                      | `L_s67_narrow -> Ojs.string_to_js "narrow"))
        let (get_localeMatcher : 'tags this -> string option) =
          fun (x2473 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2473)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x2476 : 'tags this) ->
            fun (x2477 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2476) "localeMatcher"
                (match x2477 with
                 | `Undefined x2478 -> undefined_to_js x2478
                 | `U1 x2479 -> Ojs.string_to_js x2479)
        let (get_style : 'tags this -> string option) =
          fun (x2481 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2481) "style")
        let (set_style :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x2484 : 'tags this) ->
            fun (x2485 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2484) "style"
                (match x2485 with
                 | `Undefined x2486 -> undefined_to_js x2486
                 | `U1 x2487 -> Ojs.string_to_js x2487)
        let (get_currency : 'tags this -> string option) =
          fun (x2489 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2489) "currency")
        let (set_currency :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x2492 : 'tags this) ->
            fun (x2493 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2492) "currency"
                (match x2493 with
                 | `Undefined x2494 -> undefined_to_js x2494
                 | `U1 x2495 -> Ojs.string_to_js x2495)
        let (get_currencyDisplay : 'tags this -> string option) =
          fun (x2497 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2497)
                 "currencyDisplay")
        let (set_currencyDisplay :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x2500 : 'tags this) ->
            fun (x2501 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2500)
                "currencyDisplay"
                (match x2501 with
                 | `Undefined x2502 -> undefined_to_js x2502
                 | `U1 x2503 -> Ojs.string_to_js x2503)
        let (get_currencySign : 'tags this -> string option) =
          fun (x2505 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2505) "currencySign")
        let (set_currencySign :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x2508 : 'tags this) ->
            fun (x2509 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2508) "currencySign"
                (match x2509 with
                 | `Undefined x2510 -> undefined_to_js x2510
                 | `U1 x2511 -> Ojs.string_to_js x2511)
        let (get_useGrouping : 'tags this -> bool option) =
          fun (x2513 : 'tags this) ->
            Ojs.option_of_js Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2513) "useGrouping")
        let (set_useGrouping :
          'tags this -> [ `Undefined of undefined  | `U1 of bool ] -> unit) =
          fun (x2516 : 'tags this) ->
            fun (x2517 : [ `Undefined of undefined  | `U1 of bool ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2516) "useGrouping"
                (match x2517 with
                 | `Undefined x2518 -> undefined_to_js x2518
                 | `U1 x2519 -> Ojs.bool_to_js x2519)
        let (get_minimumIntegerDigits : 'tags this -> float option) =
          fun (x2521 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2521)
                 "minimumIntegerDigits")
        let (set_minimumIntegerDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2524 : 'tags this) ->
            fun (x2525 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2524)
                "minimumIntegerDigits"
                (match x2525 with
                 | `Undefined x2526 -> undefined_to_js x2526
                 | `U1 x2527 -> Ojs.float_to_js x2527)
        let (get_minimumFractionDigits : 'tags this -> float option) =
          fun (x2529 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2529)
                 "minimumFractionDigits")
        let (set_minimumFractionDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2532 : 'tags this) ->
            fun (x2533 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2532)
                "minimumFractionDigits"
                (match x2533 with
                 | `Undefined x2534 -> undefined_to_js x2534
                 | `U1 x2535 -> Ojs.float_to_js x2535)
        let (get_maximumFractionDigits : 'tags this -> float option) =
          fun (x2537 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2537)
                 "maximumFractionDigits")
        let (set_maximumFractionDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2540 : 'tags this) ->
            fun (x2541 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2540)
                "maximumFractionDigits"
                (match x2541 with
                 | `Undefined x2542 -> undefined_to_js x2542
                 | `U1 x2543 -> Ojs.float_to_js x2543)
        let (get_minimumSignificantDigits : 'tags this -> float option) =
          fun (x2545 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2545)
                 "minimumSignificantDigits")
        let (set_minimumSignificantDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2548 : 'tags this) ->
            fun (x2549 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2548)
                "minimumSignificantDigits"
                (match x2549 with
                 | `Undefined x2550 -> undefined_to_js x2550
                 | `U1 x2551 -> Ojs.float_to_js x2551)
        let (get_maximumSignificantDigits : 'tags this -> float option) =
          fun (x2553 : 'tags this) ->
            Ojs.option_of_js Ojs.float_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2553)
                 "maximumSignificantDigits")
        let (set_maximumSignificantDigits :
          'tags this -> [ `Undefined of undefined  | `U1 of float ] -> unit)
          =
          fun (x2556 : 'tags this) ->
            fun (x2557 : [ `Undefined of undefined  | `U1 of float ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2556)
                "maximumSignificantDigits"
                (match x2557 with
                 | `Undefined x2558 -> undefined_to_js x2558
                 | `U1 x2559 -> Ojs.float_to_js x2559)
        let (create :
          ?compactDisplay:[ `L_s55_long  | `L_s88_short ] ->
            ?notation:[ `L_s27_compact  | `L_s34_engineering 
                      | `L_s84_scientific  | `L_s89_standard ]
              ->
              ?signDisplay:[ `L_s21_always  | `L_s22_auto  | `L_s68_never ]
                ->
                ?unit:string ->
                  ?unitDisplay:[ `L_s55_long  | `L_s67_narrow 
                               | `L_s88_short ]
                    ->
                    ?localeMatcher:string ->
                      ?style:string ->
                        ?currency:string ->
                          ?currencyDisplay:string ->
                            ?currencySign:string ->
                              ?useGrouping:bool ->
                                ?minimumIntegerDigits:float ->
                                  ?minimumFractionDigits:float ->
                                    ?maximumFractionDigits:float ->
                                      ?minimumSignificantDigits:float ->
                                        ?maximumSignificantDigits:float ->
                                          unit -> t)
          =
          fun
            ?compactDisplay:(x2561 : [ `L_s55_long  | `L_s88_short ] option)
            ->
            fun
              ?notation:(x2562 :
                          [ `L_s27_compact  | `L_s34_engineering 
                          | `L_s84_scientific  | `L_s89_standard ] option)
              ->
              fun
                ?signDisplay:(x2563 :
                               [ `L_s21_always  | `L_s22_auto 
                               | `L_s68_never ] option)
                ->
                fun ?unit:(x2564 : string option) ->
                  fun
                    ?unitDisplay:(x2565 :
                                   [ `L_s55_long  | `L_s67_narrow 
                                   | `L_s88_short ] option)
                    ->
                    fun ?localeMatcher:(x2566 : string option) ->
                      fun ?style:(x2567 : string option) ->
                        fun ?currency:(x2568 : string option) ->
                          fun ?currencyDisplay:(x2569 : string option) ->
                            fun ?currencySign:(x2570 : string option) ->
                              fun ?useGrouping:(x2571 : bool option) ->
                                fun
                                  ?minimumIntegerDigits:(x2572 :
                                                          float option)
                                  ->
                                  fun
                                    ?minimumFractionDigits:(x2573 :
                                                             float option)
                                    ->
                                    fun
                                      ?maximumFractionDigits:(x2574 :
                                                               float option)
                                      ->
                                      fun
                                        ?minimumSignificantDigits:(x2575 :
                                                                    float
                                                                    option)
                                        ->
                                        fun
                                          ?maximumSignificantDigits:(x2576 :
                                                                    float
                                                                    option)
                                          ->
                                          fun () ->
                                            let x2577 = Ojs.empty_obj () in
                                            (match x2561 with
                                             | Some x2593 ->
                                                 Ojs.set_prop_ascii x2577
                                                   "compactDisplay"
                                                   (match x2593 with
                                                    | `L_s55_long ->
                                                        Ojs.string_to_js
                                                          "long"
                                                    | `L_s88_short ->
                                                        Ojs.string_to_js
                                                          "short")
                                             | None -> ());
                                            (match x2562 with
                                             | Some x2592 ->
                                                 Ojs.set_prop_ascii x2577
                                                   "notation"
                                                   (match x2592 with
                                                    | `L_s27_compact ->
                                                        Ojs.string_to_js
                                                          "compact"
                                                    | `L_s34_engineering ->
                                                        Ojs.string_to_js
                                                          "engineering"
                                                    | `L_s84_scientific ->
                                                        Ojs.string_to_js
                                                          "scientific"
                                                    | `L_s89_standard ->
                                                        Ojs.string_to_js
                                                          "standard")
                                             | None -> ());
                                            (match x2563 with
                                             | Some x2591 ->
                                                 Ojs.set_prop_ascii x2577
                                                   "signDisplay"
                                                   (match x2591 with
                                                    | `L_s21_always ->
                                                        Ojs.string_to_js
                                                          "always"
                                                    | `L_s22_auto ->
                                                        Ojs.string_to_js
                                                          "auto"
                                                    | `L_s68_never ->
                                                        Ojs.string_to_js
                                                          "never")
                                             | None -> ());
                                            (match x2564 with
                                             | Some x2590 ->
                                                 Ojs.set_prop_ascii x2577
                                                   "unit"
                                                   (Ojs.string_to_js x2590)
                                             | None -> ());
                                            (match x2565 with
                                             | Some x2589 ->
                                                 Ojs.set_prop_ascii x2577
                                                   "unitDisplay"
                                                   (match x2589 with
                                                    | `L_s55_long ->
                                                        Ojs.string_to_js
                                                          "long"
                                                    | `L_s67_narrow ->
                                                        Ojs.string_to_js
                                                          "narrow"
                                                    | `L_s88_short ->
                                                        Ojs.string_to_js
                                                          "short")
                                             | None -> ());
                                            (match x2566 with
                                             | Some x2588 ->
                                                 Ojs.set_prop_ascii x2577
                                                   "localeMatcher"
                                                   (Ojs.string_to_js x2588)
                                             | None -> ());
                                            (match x2567 with
                                             | Some x2587 ->
                                                 Ojs.set_prop_ascii x2577
                                                   "style"
                                                   (Ojs.string_to_js x2587)
                                             | None -> ());
                                            (match x2568 with
                                             | Some x2586 ->
                                                 Ojs.set_prop_ascii x2577
                                                   "currency"
                                                   (Ojs.string_to_js x2586)
                                             | None -> ());
                                            (match x2569 with
                                             | Some x2585 ->
                                                 Ojs.set_prop_ascii x2577
                                                   "currencyDisplay"
                                                   (Ojs.string_to_js x2585)
                                             | None -> ());
                                            (match x2570 with
                                             | Some x2584 ->
                                                 Ojs.set_prop_ascii x2577
                                                   "currencySign"
                                                   (Ojs.string_to_js x2584)
                                             | None -> ());
                                            (match x2571 with
                                             | Some x2583 ->
                                                 Ojs.set_prop_ascii x2577
                                                   "useGrouping"
                                                   (Ojs.bool_to_js x2583)
                                             | None -> ());
                                            (match x2572 with
                                             | Some x2582 ->
                                                 Ojs.set_prop_ascii x2577
                                                   "minimumIntegerDigits"
                                                   (Ojs.float_to_js x2582)
                                             | None -> ());
                                            (match x2573 with
                                             | Some x2581 ->
                                                 Ojs.set_prop_ascii x2577
                                                   "minimumFractionDigits"
                                                   (Ojs.float_to_js x2581)
                                             | None -> ());
                                            (match x2574 with
                                             | Some x2580 ->
                                                 Ojs.set_prop_ascii x2577
                                                   "maximumFractionDigits"
                                                   (Ojs.float_to_js x2580)
                                             | None -> ());
                                            (match x2575 with
                                             | Some x2579 ->
                                                 Ojs.set_prop_ascii x2577
                                                   "minimumSignificantDigits"
                                                   (Ojs.float_to_js x2579)
                                             | None -> ());
                                            (match x2576 with
                                             | Some x2578 ->
                                                 Ojs.set_prop_ascii x2577
                                                   "maximumSignificantDigits"
                                                   (Ojs.float_to_js x2578)
                                             | None -> ());
                                            t_of_js x2577
        let cast_from = Obj.magic
      end
    module NumberFormat =
      struct
        type t = [ `Intl_NumberFormat ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2595 : Ojs.t) -> t_of_js x2595
        and t_0_to_js : t_0 -> Ojs.t = fun (x2594 : t) -> t_to_js x2594
        type tags = [ `Intl_NumberFormat ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_NumberFormat ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2598 : Ojs.t) -> intf_of_js __tags_of_js x2598
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2596 : __tags intf) -> intf_to_js __tags_to_js x2596
        let (formatRange :
          'tags this ->
            startDate:[ `U1 of float  | `U2 of bigint ] ->
              endDate:[ `U1 of float  | `U2 of bigint ] -> string)
          =
          fun (x2606 : 'tags this) ->
            fun ~startDate:(x2600 : [ `U1 of float  | `U2 of bigint ]) ->
              fun ~endDate:(x2603 : [ `U1 of float  | `U2 of bigint ]) ->
                Ojs.string_of_js
                  (Ojs.call (this_to_js Obj.magic x2606) "formatRange"
                     [|((match x2600 with
                         | `U1 x2601 -> Ojs.float_to_js x2601
                         | `U2 x2602 -> bigint_to_js x2602));((match x2603
                                                               with
                                                               | `U1 x2604 ->
                                                                   Ojs.float_to_js
                                                                    x2604
                                                               | `U2 x2605 ->
                                                                   bigint_to_js
                                                                    x2605))|])
        let (formatRangeToParts :
          'tags this ->
            startDate:[ `U1 of float  | `U2 of bigint ] ->
              endDate:[ `U1 of float  | `U2 of bigint ] ->
                NumberFormatPart.t list)
          =
          fun (x2614 : 'tags this) ->
            fun ~startDate:(x2608 : [ `U1 of float  | `U2 of bigint ]) ->
              fun ~endDate:(x2611 : [ `U1 of float  | `U2 of bigint ]) ->
                Ojs.list_of_js NumberFormatPart.t_of_js
                  (Ojs.call (this_to_js Obj.magic x2614) "formatRangeToParts"
                     [|((match x2608 with
                         | `U1 x2609 -> Ojs.float_to_js x2609
                         | `U2 x2610 -> bigint_to_js x2610));((match x2611
                                                               with
                                                               | `U1 x2612 ->
                                                                   Ojs.float_to_js
                                                                    x2612
                                                               | `U2 x2613 ->
                                                                   bigint_to_js
                                                                    x2613))|])
        let (format :
          'tags this -> value:[ `U1 of float  | `U2 of bigint ] -> string) =
          fun (x2620 : 'tags this) ->
            fun ~value:(x2617 : [ `U1 of float  | `U2 of bigint ]) ->
              Ojs.string_of_js
                (Ojs.call (this_to_js Obj.magic x2620) "format"
                   [|((match x2617 with
                       | `U1 x2618 -> Ojs.float_to_js x2618
                       | `U2 x2619 -> bigint_to_js x2619))|])
        let (resolvedOptions : 'tags this -> ResolvedNumberFormatOptions.t) =
          fun (x2622 : 'tags this) ->
            ResolvedNumberFormatOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x2622) "resolvedOptions" [||])
        let (formatToParts :
          'tags this ->
            ?number:[ `U1 of float  | `U2 of bigint ] ->
              unit -> NumberFormatPart.t list)
          =
          fun (x2629 : 'tags this) ->
            fun ?number:(x2624 : [ `U1 of float  | `U2 of bigint ] option) ->
              fun () ->
                Ojs.list_of_js NumberFormatPart.t_of_js
                  (let x2631 = this_to_js Obj.magic x2629 in
                   Ojs.call (Ojs.get_prop_ascii x2631 "formatToParts")
                     "apply"
                     [|x2631;((let x2625 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x2624 with
                                | Some x2626 ->
                                    ignore
                                      (Ojs.call x2625 "push"
                                         [|((match x2626 with
                                             | `U1 x2627 ->
                                                 Ojs.float_to_js x2627
                                             | `U2 x2628 ->
                                                 bigint_to_js x2628))|])
                                | None -> ());
                               x2625))|])
        let (format' : 'tags this -> value:float -> string) =
          fun (x2634 : 'tags this) ->
            fun ~value:(x2633 : float) ->
              Ojs.string_of_js
                (Ojs.call (this_to_js Obj.magic x2634) "format"
                   [|(Ojs.float_to_js x2633)|])
        let (resolvedOptions' : 'tags this -> ResolvedNumberFormatOptions.t)
          =
          fun (x2636 : 'tags this) ->
            ResolvedNumberFormatOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x2636) "resolvedOptions" [||])
        let cast_from = Obj.magic
        let (create :
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:NumberFormatOptions.t -> unit -> t)
          =
          fun
            ?locales:(x2638 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x2639 : NumberFormatOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "NumberFormat")
                     (let x2640 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x2638 with
                       | Some x2642 ->
                           ignore
                             (Ojs.call x2640 "push"
                                [|((match x2642 with
                                    | `U1 x2643 -> Ojs.string_to_js x2643
                                    | `U2 x2644 ->
                                        Ojs.list_to_js Ojs.string_to_js x2644))|])
                       | None -> ());
                      (match x2639 with
                       | Some x2641 ->
                           ignore
                             (Ojs.call x2640 "push"
                                [|(NumberFormatOptions.t_to_js x2641)|])
                       | None -> ());
                      x2640))
        let (invoke :
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:NumberFormatOptions.t -> unit -> t)
          =
          fun
            ?locales:(x2646 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x2647 : NumberFormatOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "NumberFormat")
                     "apply"
                     [|Ojs.null;((let x2648 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  (match x2646 with
                                   | Some x2650 ->
                                       ignore
                                         (Ojs.call x2648 "push"
                                            [|((match x2650 with
                                                | `U1 x2651 ->
                                                    Ojs.string_to_js x2651
                                                | `U2 x2652 ->
                                                    Ojs.list_to_js
                                                      Ojs.string_to_js x2652))|])
                                   | None -> ());
                                  (match x2647 with
                                   | Some x2649 ->
                                       ignore
                                         (Ojs.call x2648 "push"
                                            [|(NumberFormatOptions.t_to_js
                                                 x2649)|])
                                   | None -> ());
                                  x2648))|])
        let (supportedLocalesOf :
          locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:NumberFormatOptions.t -> unit -> string list)
          =
          fun ~locales:(x2654 : [ `U1 of string  | `U2 of string list ]) ->
            fun ?options:(x2655 : NumberFormatOptions.t option) ->
              fun () ->
                Ojs.list_of_js Ojs.string_of_js
                  (let x2661 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl") "NumberFormat" in
                   Ojs.call (Ojs.get_prop_ascii x2661 "supportedLocalesOf")
                     "apply"
                     [|x2661;((let x2656 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2656 "push"
                                    [|((match x2654 with
                                        | `U1 x2658 -> Ojs.string_to_js x2658
                                        | `U2 x2659 ->
                                            Ojs.list_to_js Ojs.string_to_js
                                              x2659))|]);
                               (match x2655 with
                                | Some x2657 ->
                                    ignore
                                      (Ojs.call x2656 "push"
                                         [|(NumberFormatOptions.t_to_js x2657)|])
                                | None -> ());
                               x2656))|])
      end
    module LocaleHourCycleKey =
      struct
        type t = [ `L_s45_h11  | `L_s46_h12  | `L_s47_h23  | `L_s48_h24 ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2664 : Ojs.t) ->
            let x2665 = x2664 in
            match Ojs.string_of_js x2665 with
            | "h11" -> `L_s45_h11
            | "h12" -> `L_s46_h12
            | "h23" -> `L_s47_h23
            | "h24" -> `L_s48_h24
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x2663 :
              [ `L_s45_h11  | `L_s46_h12  | `L_s47_h23  | `L_s48_h24 ])
            ->
            match x2663 with
            | `L_s45_h11 -> Ojs.string_to_js "h11"
            | `L_s46_h12 -> Ojs.string_to_js "h12"
            | `L_s47_h23 -> Ojs.string_to_js "h23"
            | `L_s48_h24 -> Ojs.string_to_js "h24"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2667 : Ojs.t) -> t_of_js x2667
        and t_0_to_js : t_0 -> Ojs.t = fun (x2666 : t) -> t_to_js x2666
      end
    module LocaleCollationCaseFirst =
      struct
        type t = [ `L_s39_false  | `L_s57_lower  | `L_s97_upper ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2669 : Ojs.t) ->
            let x2670 = x2669 in
            match Ojs.string_of_js x2670 with
            | "false" -> `L_s39_false
            | "lower" -> `L_s57_lower
            | "upper" -> `L_s97_upper
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun (x2668 : [ `L_s39_false  | `L_s57_lower  | `L_s97_upper ]) ->
            match x2668 with
            | `L_s39_false -> Ojs.string_to_js "false"
            | `L_s57_lower -> Ojs.string_to_js "lower"
            | `L_s97_upper -> Ojs.string_to_js "upper"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2672 : Ojs.t) -> t_of_js x2672
        and t_0_to_js : t_0 -> Ojs.t = fun (x2671 : t) -> t_to_js x2671
      end
    module LocaleOptions =
      struct
        type t = [ `Intl_LocaleOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2674 : Ojs.t) -> t_of_js x2674
        and t_0_to_js : t_0 -> Ojs.t = fun (x2673 : t) -> t_to_js x2673
        type tags = [ `Intl_LocaleOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_LocaleOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2677 : Ojs.t) -> intf_of_js __tags_of_js x2677
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2675 : __tags intf) -> intf_to_js __tags_to_js x2675
        let (get_baseName : 'tags this -> string) =
          fun (x2679 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2679) "baseName")
        let (set_baseName : 'tags this -> string -> unit) =
          fun (x2681 : 'tags this) ->
            fun (x2682 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2681) "baseName"
                (Ojs.string_to_js x2682)
        let (get_calendar : 'tags this -> string) =
          fun (x2684 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2684) "calendar")
        let (set_calendar : 'tags this -> string -> unit) =
          fun (x2686 : 'tags this) ->
            fun (x2687 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2686) "calendar"
                (Ojs.string_to_js x2687)
        let (get_caseFirst : 'tags this -> LocaleCollationCaseFirst.t) =
          fun (x2689 : 'tags this) ->
            LocaleCollationCaseFirst.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2689) "caseFirst")
        let (set_caseFirst :
          'tags this -> LocaleCollationCaseFirst.t -> unit) =
          fun (x2691 : 'tags this) ->
            fun (x2692 : LocaleCollationCaseFirst.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2691) "caseFirst"
                (LocaleCollationCaseFirst.t_to_js x2692)
        let (get_collation : 'tags this -> string) =
          fun (x2694 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2694) "collation")
        let (set_collation : 'tags this -> string -> unit) =
          fun (x2696 : 'tags this) ->
            fun (x2697 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2696) "collation"
                (Ojs.string_to_js x2697)
        let (get_hourCycle : 'tags this -> LocaleHourCycleKey.t) =
          fun (x2699 : 'tags this) ->
            LocaleHourCycleKey.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2699) "hourCycle")
        let (set_hourCycle : 'tags this -> LocaleHourCycleKey.t -> unit) =
          fun (x2701 : 'tags this) ->
            fun (x2702 : LocaleHourCycleKey.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2701) "hourCycle"
                (LocaleHourCycleKey.t_to_js x2702)
        let (get_language : 'tags this -> string) =
          fun (x2704 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2704) "language")
        let (set_language : 'tags this -> string -> unit) =
          fun (x2706 : 'tags this) ->
            fun (x2707 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2706) "language"
                (Ojs.string_to_js x2707)
        let (get_numberingSystem : 'tags this -> string) =
          fun (x2709 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2709)
                 "numberingSystem")
        let (set_numberingSystem : 'tags this -> string -> unit) =
          fun (x2711 : 'tags this) ->
            fun (x2712 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2711)
                "numberingSystem" (Ojs.string_to_js x2712)
        let (get_numeric : 'tags this -> bool) =
          fun (x2714 : 'tags this) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2714) "numeric")
        let (set_numeric : 'tags this -> bool -> unit) =
          fun (x2716 : 'tags this) ->
            fun (x2717 : bool) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2716) "numeric"
                (Ojs.bool_to_js x2717)
        let (get_region : 'tags this -> string) =
          fun (x2719 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2719) "region")
        let (set_region : 'tags this -> string -> unit) =
          fun (x2721 : 'tags this) ->
            fun (x2722 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2721) "region"
                (Ojs.string_to_js x2722)
        let (get_script : 'tags this -> string) =
          fun (x2724 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2724) "script")
        let (set_script : 'tags this -> string -> unit) =
          fun (x2726 : 'tags this) ->
            fun (x2727 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2726) "script"
                (Ojs.string_to_js x2727)
        let (create :
          baseName:string ->
            calendar:string ->
              caseFirst:LocaleCollationCaseFirst.t ->
                collation:string ->
                  hourCycle:LocaleHourCycleKey.t ->
                    language:string ->
                      numberingSystem:string ->
                        numeric:bool ->
                          region:string -> script:string -> unit -> t)
          =
          fun ~baseName:(x2729 : string) ->
            fun ~calendar:(x2730 : string) ->
              fun ~caseFirst:(x2731 : LocaleCollationCaseFirst.t) ->
                fun ~collation:(x2732 : string) ->
                  fun ~hourCycle:(x2733 : LocaleHourCycleKey.t) ->
                    fun ~language:(x2734 : string) ->
                      fun ~numberingSystem:(x2735 : string) ->
                        fun ~numeric:(x2736 : bool) ->
                          fun ~region:(x2737 : string) ->
                            fun ~script:(x2738 : string) ->
                              fun () ->
                                let x2739 = Ojs.empty_obj () in
                                Ojs.set_prop_ascii x2739 "baseName"
                                  (Ojs.string_to_js x2729);
                                Ojs.set_prop_ascii x2739 "calendar"
                                  (Ojs.string_to_js x2730);
                                Ojs.set_prop_ascii x2739 "caseFirst"
                                  (LocaleCollationCaseFirst.t_to_js x2731);
                                Ojs.set_prop_ascii x2739 "collation"
                                  (Ojs.string_to_js x2732);
                                Ojs.set_prop_ascii x2739 "hourCycle"
                                  (LocaleHourCycleKey.t_to_js x2733);
                                Ojs.set_prop_ascii x2739 "language"
                                  (Ojs.string_to_js x2734);
                                Ojs.set_prop_ascii x2739 "numberingSystem"
                                  (Ojs.string_to_js x2735);
                                Ojs.set_prop_ascii x2739 "numeric"
                                  (Ojs.bool_to_js x2736);
                                Ojs.set_prop_ascii x2739 "region"
                                  (Ojs.string_to_js x2737);
                                Ojs.set_prop_ascii x2739 "script"
                                  (Ojs.string_to_js x2738);
                                t_of_js x2739
        let cast_from = Obj.magic
      end
    module BCP47LanguageTag =
      struct
        type t = string
        let rec t_of_js : Ojs.t -> t =
          fun (x2741 : Ojs.t) -> Ojs.string_of_js x2741
        and t_to_js : t -> Ojs.t =
          fun (x2740 : string) -> Ojs.string_to_js x2740
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2743 : Ojs.t) -> t_of_js x2743
        and t_0_to_js : t_0 -> Ojs.t = fun (x2742 : t) -> t_to_js x2742
      end
    module Locale =
      struct
        type t = [ `Intl_Locale  | `Intl_LocaleOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2745 : Ojs.t) -> t_of_js x2745
        and t_0_to_js : t_0 -> Ojs.t = fun (x2744 : t) -> t_to_js x2744
        type tags = [ `Intl_Locale  | `Intl_LocaleOptions ]
        type tags_0 = tags
        type 'tags this = 'tags intf constraint 'tags = [> `Intl_Locale ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2748 : Ojs.t) -> intf_of_js __tags_of_js x2748
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2746 : __tags intf) -> intf_to_js __tags_to_js x2746
        let (maximize : 'tags this -> t) =
          fun (x2750 : 'tags this) ->
            t_of_js (Ojs.call (this_to_js Obj.magic x2750) "maximize" [||])
        let (minimize : 'tags this -> t) =
          fun (x2752 : 'tags this) ->
            t_of_js (Ojs.call (this_to_js Obj.magic x2752) "minimize" [||])
        let (toString : 'tags this -> BCP47LanguageTag.t) =
          fun (x2754 : 'tags this) ->
            BCP47LanguageTag.t_of_js
              (Ojs.call (this_to_js Obj.magic x2754) "toString" [||])
        let cast_from = Obj.magic
        let (create :
          ?tag:BCP47LanguageTag.t -> ?options:LocaleOptions.t -> unit -> t) =
          fun ?tag:(x2756 : BCP47LanguageTag.t option) ->
            fun ?options:(x2757 : LocaleOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "Locale")
                     (let x2758 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x2756 with
                       | Some x2760 ->
                           ignore
                             (Ojs.call x2758 "push"
                                [|(BCP47LanguageTag.t_to_js x2760)|])
                       | None -> ());
                      (match x2757 with
                       | Some x2759 ->
                           ignore
                             (Ojs.call x2758 "push"
                                [|(LocaleOptions.t_to_js x2759)|])
                       | None -> ());
                      x2758))
      end
    module DisplayNamesOptions =
      struct
        type t = [ `Intl_DisplayNamesOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2762 : Ojs.t) -> t_of_js x2762
        and t_0_to_js : t_0 -> Ojs.t = fun (x2761 : t) -> t_to_js x2761
        type tags = [ `Intl_DisplayNamesOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_DisplayNamesOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2765 : Ojs.t) -> intf_of_js __tags_of_js x2765
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2763 : __tags intf) -> intf_to_js __tags_to_js x2763
        let (get_localeMatcher :
          'tags this -> RelativeTimeFormatLocaleMatcher.t) =
          fun (x2767 : 'tags this) ->
            RelativeTimeFormatLocaleMatcher.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2767)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this -> RelativeTimeFormatLocaleMatcher.t -> unit) =
          fun (x2769 : 'tags this) ->
            fun (x2770 : RelativeTimeFormatLocaleMatcher.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2769) "localeMatcher"
                (RelativeTimeFormatLocaleMatcher.t_to_js x2770)
        let (get_style : 'tags this -> RelativeTimeFormatStyle.t) =
          fun (x2772 : 'tags this) ->
            RelativeTimeFormatStyle.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2772) "style")
        let (set_style : 'tags this -> RelativeTimeFormatStyle.t -> unit) =
          fun (x2774 : 'tags this) ->
            fun (x2775 : RelativeTimeFormatStyle.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2774) "style"
                (RelativeTimeFormatStyle.t_to_js x2775)
        let (get_type :
          'tags this ->
            [ `L_s28_currency  | `L_s53_language  | `L_s82_region 
            | `L_s85_script ])
          =
          fun (x2777 : 'tags this) ->
            let x2779 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2777) "type" in
            match Ojs.string_of_js x2779 with
            | "currency" -> `L_s28_currency
            | "language" -> `L_s53_language
            | "region" -> `L_s82_region
            | "script" -> `L_s85_script
            | _ -> assert false
        let (set_type :
          'tags this ->
            [ `U1 of [ `L_s53_language ]  | `U2 of [ `L_s82_region ] 
            | `U3 of [ `L_s85_script ]  | `U4 of [ `L_s28_currency ] ] ->
              unit)
          =
          fun (x2780 : 'tags this) ->
            fun
              (x2781 :
                [ `U1 of [ `L_s53_language ]  | `U2 of [ `L_s82_region ] 
                | `U3 of [ `L_s85_script ]  | `U4 of [ `L_s28_currency ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2780) "type"
                (match x2781 with
                 | `U1 x2782 ->
                     (match x2782 with
                      | `L_s53_language -> Ojs.string_to_js "language")
                 | `U2 x2783 ->
                     (match x2783 with
                      | `L_s82_region -> Ojs.string_to_js "region")
                 | `U3 x2784 ->
                     (match x2784 with
                      | `L_s85_script -> Ojs.string_to_js "script")
                 | `U4 x2785 ->
                     (match x2785 with
                      | `L_s28_currency -> Ojs.string_to_js "currency"))
        let (get_fallback : 'tags this -> [ `L_s26_code  | `L_s69_none ]) =
          fun (x2787 : 'tags this) ->
            let x2789 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2787) "fallback" in
            match Ojs.string_of_js x2789 with
            | "code" -> `L_s26_code
            | "none" -> `L_s69_none
            | _ -> assert false
        let (set_fallback :
          'tags this ->
            [ `U1 of [ `L_s26_code ]  | `U2 of [ `L_s69_none ] ] -> unit)
          =
          fun (x2790 : 'tags this) ->
            fun
              (x2791 : [ `U1 of [ `L_s26_code ]  | `U2 of [ `L_s69_none ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2790) "fallback"
                (match x2791 with
                 | `U1 x2792 ->
                     (match x2792 with
                      | `L_s26_code -> Ojs.string_to_js "code")
                 | `U2 x2793 ->
                     (match x2793 with
                      | `L_s69_none -> Ojs.string_to_js "none"))
        let (create :
          localeMatcher:RelativeTimeFormatLocaleMatcher.t ->
            style:RelativeTimeFormatStyle.t ->
              type_:[ `L_s28_currency  | `L_s53_language  | `L_s82_region 
                    | `L_s85_script ]
                -> fallback:[ `L_s26_code  | `L_s69_none ] -> unit -> t)
          =
          fun ~localeMatcher:(x2795 : RelativeTimeFormatLocaleMatcher.t) ->
            fun ~style:(x2796 : RelativeTimeFormatStyle.t) ->
              fun
                ~type_:(x2797 :
                         [ `L_s28_currency  | `L_s53_language 
                         | `L_s82_region  | `L_s85_script ])
                ->
                fun ~fallback:(x2798 : [ `L_s26_code  | `L_s69_none ]) ->
                  fun () ->
                    let x2799 = Ojs.empty_obj () in
                    Ojs.set_prop_ascii x2799 "localeMatcher"
                      (RelativeTimeFormatLocaleMatcher.t_to_js x2795);
                    Ojs.set_prop_ascii x2799 "style"
                      (RelativeTimeFormatStyle.t_to_js x2796);
                    Ojs.set_prop_ascii x2799 "type"
                      (match x2797 with
                       | `L_s28_currency -> Ojs.string_to_js "currency"
                       | `L_s53_language -> Ojs.string_to_js "language"
                       | `L_s82_region -> Ojs.string_to_js "region"
                       | `L_s85_script -> Ojs.string_to_js "script");
                    Ojs.set_prop_ascii x2799 "fallback"
                      (match x2798 with
                       | `L_s26_code -> Ojs.string_to_js "code"
                       | `L_s69_none -> Ojs.string_to_js "none");
                    t_of_js x2799
        let cast_from = Obj.magic
      end
    module DisplayNames =
      struct
        module AnonymousInterface2 =
          struct
            type t = Ojs.t
            let rec t_of_js : Ojs.t -> t = fun (x2801 : Ojs.t) -> x2801
            and t_to_js : t -> Ojs.t = fun (x2800 : Ojs.t) -> x2800
            let (get_localeMatcher : t -> RelativeTimeFormatLocaleMatcher.t)
              =
              fun (x2802 : t) ->
                RelativeTimeFormatLocaleMatcher.t_of_js
                  (Ojs.get_prop_ascii (t_to_js x2802) "localeMatcher")
            let (set_localeMatcher :
              t -> RelativeTimeFormatLocaleMatcher.t -> unit) =
              fun (x2803 : t) ->
                fun (x2804 : RelativeTimeFormatLocaleMatcher.t) ->
                  Ojs.set_prop_ascii (t_to_js x2803) "localeMatcher"
                    (RelativeTimeFormatLocaleMatcher.t_to_js x2804)
            let (create :
              localeMatcher:RelativeTimeFormatLocaleMatcher.t -> unit -> t) =
              fun ~localeMatcher:(x2805 : RelativeTimeFormatLocaleMatcher.t)
                ->
                fun () ->
                  let x2806 = Ojs.empty_obj () in
                  Ojs.set_prop_ascii x2806 "localeMatcher"
                    (RelativeTimeFormatLocaleMatcher.t_to_js x2805);
                  t_of_js x2806
          end
        type t = [ `Intl_DisplayNames ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2808 : Ojs.t) -> t_of_js x2808
        and t_0_to_js : t_0 -> Ojs.t = fun (x2807 : t) -> t_to_js x2807
        type tags = [ `Intl_DisplayNames ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_DisplayNames ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2811 : Ojs.t) -> intf_of_js __tags_of_js x2811
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2809 : __tags intf) -> intf_to_js __tags_to_js x2809
        let (of_ : 'tags this -> code:string -> string) =
          fun (x2814 : 'tags this) ->
            fun ~code:(x2813 : string) ->
              Ojs.string_of_js
                (Ojs.call (this_to_js Obj.magic x2814) "of"
                   [|(Ojs.string_to_js x2813)|])
        let (resolvedOptions : 'tags this -> DisplayNamesOptions.t) =
          fun (x2816 : 'tags this) ->
            DisplayNamesOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x2816) "resolvedOptions" [||])
        let cast_from = Obj.magic
        let (prototype : unit -> t) =
          fun () ->
            t_of_js
              (Ojs.get_prop_ascii
                 (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Intl")
                    "DisplayNames") "prototype")
        let (create :
          ?locales:[ `U1 of BCP47LanguageTag.t 
                   | `U2 of BCP47LanguageTag.t list ]
            -> ?options:DisplayNamesOptions.t Partial.t -> unit -> t)
          =
          fun
            ?locales:(x2818 :
                       [ `U1 of BCP47LanguageTag.t 
                       | `U2 of BCP47LanguageTag.t list ] option)
            ->
            fun ?options:(x2819 : DisplayNamesOptions.t Partial.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "DisplayNames")
                     (let x2820 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x2818 with
                       | Some x2823 ->
                           ignore
                             (Ojs.call x2820 "push"
                                [|((match x2823 with
                                    | `U1 x2824 ->
                                        BCP47LanguageTag.t_to_js x2824
                                    | `U2 x2825 ->
                                        Ojs.list_to_js
                                          BCP47LanguageTag.t_to_js x2825))|])
                       | None -> ());
                      (match x2819 with
                       | Some x2821 ->
                           ignore
                             (Ojs.call x2820 "push"
                                [|(Partial.t_to_js
                                     DisplayNamesOptions.t_to_js x2821)|])
                       | None -> ());
                      x2820))
        let (supportedLocalesOf :
          locales:[ `U1 of BCP47LanguageTag.t 
                  | `U2 of BCP47LanguageTag.t list ]
            ->
            ?options:AnonymousInterface2.t -> unit -> BCP47LanguageTag.t list)
          =
          fun
            ~locales:(x2827 :
                       [ `U1 of BCP47LanguageTag.t 
                       | `U2 of BCP47LanguageTag.t list ])
            ->
            fun ?options:(x2828 : AnonymousInterface2.t option) ->
              fun () ->
                Ojs.list_of_js BCP47LanguageTag.t_of_js
                  (let x2834 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl") "DisplayNames" in
                   Ojs.call (Ojs.get_prop_ascii x2834 "supportedLocalesOf")
                     "apply"
                     [|x2834;((let x2829 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x2829 "push"
                                    [|((match x2827 with
                                        | `U1 x2831 ->
                                            BCP47LanguageTag.t_to_js x2831
                                        | `U2 x2832 ->
                                            Ojs.list_to_js
                                              BCP47LanguageTag.t_to_js x2832))|]);
                               (match x2828 with
                                | Some x2830 ->
                                    ignore
                                      (Ojs.call x2829 "push"
                                         [|(AnonymousInterface2.t_to_js x2830)|])
                                | None -> ());
                               x2829))|])
      end
    module ResolvedDateTimeFormatOptions =
      struct
        type t = [ `Intl_ResolvedDateTimeFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2837 : Ojs.t) -> t_of_js x2837
        and t_0_to_js : t_0 -> Ojs.t = fun (x2836 : t) -> t_to_js x2836
        type tags = [ `Intl_ResolvedDateTimeFormatOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags =
                      [> `Intl_ResolvedDateTimeFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x2840 : Ojs.t) -> intf_of_js __tags_of_js x2840
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2838 : __tags intf) -> intf_to_js __tags_to_js x2838
        let (get_formatMatcher :
          'tags this -> [ `L_s23_basic  | `L_s24_best_fit ]) =
          fun (x2842 : 'tags this) ->
            let x2844 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2842) "formatMatcher" in
            match Ojs.string_of_js x2844 with
            | "basic" -> `L_s23_basic
            | "best fit" -> `L_s24_best_fit
            | _ -> assert false
        let (set_formatMatcher :
          'tags this ->
            [ `U1 of [ `L_s23_basic ]  | `U2 of [ `L_s24_best_fit ] 
            | `U3 of [ `L_s24_best_fit ] ] -> unit)
          =
          fun (x2845 : 'tags this) ->
            fun
              (x2846 :
                [ `U1 of [ `L_s23_basic ]  | `U2 of [ `L_s24_best_fit ] 
                | `U3 of [ `L_s24_best_fit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2845) "formatMatcher"
                (match x2846 with
                 | `U1 x2847 ->
                     (match x2847 with
                      | `L_s23_basic -> Ojs.string_to_js "basic")
                 | `U2 x2848 ->
                     (match x2848 with
                      | `L_s24_best_fit -> Ojs.string_to_js "best fit")
                 | `U3 x2849 ->
                     (match x2849 with
                      | `L_s24_best_fit -> Ojs.string_to_js "best fit"))
        let (get_dateStyle :
          'tags this ->
            [ `L_s43_full  | `L_s55_long  | `L_s59_medium  | `L_s88_short ])
          =
          fun (x2851 : 'tags this) ->
            let x2853 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2851) "dateStyle" in
            match Ojs.string_of_js x2853 with
            | "full" -> `L_s43_full
            | "long" -> `L_s55_long
            | "medium" -> `L_s59_medium
            | "short" -> `L_s88_short
            | _ -> assert false
        let (set_dateStyle :
          'tags this ->
            [ `U1 of [ `L_s43_full ]  | `U2 of [ `L_s55_long ] 
            | `U3 of [ `L_s59_medium ]  | `U4 of [ `L_s88_short ] ] -> 
              unit)
          =
          fun (x2854 : 'tags this) ->
            fun
              (x2855 :
                [ `U1 of [ `L_s43_full ]  | `U2 of [ `L_s55_long ] 
                | `U3 of [ `L_s59_medium ]  | `U4 of [ `L_s88_short ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2854) "dateStyle"
                (match x2855 with
                 | `U1 x2856 ->
                     (match x2856 with
                      | `L_s43_full -> Ojs.string_to_js "full")
                 | `U2 x2857 ->
                     (match x2857 with
                      | `L_s55_long -> Ojs.string_to_js "long")
                 | `U3 x2858 ->
                     (match x2858 with
                      | `L_s59_medium -> Ojs.string_to_js "medium")
                 | `U4 x2859 ->
                     (match x2859 with
                      | `L_s88_short -> Ojs.string_to_js "short"))
        let (get_timeStyle :
          'tags this ->
            [ `L_s43_full  | `L_s55_long  | `L_s59_medium  | `L_s88_short ])
          =
          fun (x2861 : 'tags this) ->
            let x2863 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2861) "timeStyle" in
            match Ojs.string_of_js x2863 with
            | "full" -> `L_s43_full
            | "long" -> `L_s55_long
            | "medium" -> `L_s59_medium
            | "short" -> `L_s88_short
            | _ -> assert false
        let (set_timeStyle :
          'tags this ->
            [ `U1 of [ `L_s43_full ]  | `U2 of [ `L_s55_long ] 
            | `U3 of [ `L_s59_medium ]  | `U4 of [ `L_s88_short ] ] -> 
              unit)
          =
          fun (x2864 : 'tags this) ->
            fun
              (x2865 :
                [ `U1 of [ `L_s43_full ]  | `U2 of [ `L_s55_long ] 
                | `U3 of [ `L_s59_medium ]  | `U4 of [ `L_s88_short ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2864) "timeStyle"
                (match x2865 with
                 | `U1 x2866 ->
                     (match x2866 with
                      | `L_s43_full -> Ojs.string_to_js "full")
                 | `U2 x2867 ->
                     (match x2867 with
                      | `L_s55_long -> Ojs.string_to_js "long")
                 | `U3 x2868 ->
                     (match x2868 with
                      | `L_s59_medium -> Ojs.string_to_js "medium")
                 | `U4 x2869 ->
                     (match x2869 with
                      | `L_s88_short -> Ojs.string_to_js "short"))
        let (get_hourCycle :
          'tags this ->
            [ `L_s45_h11  | `L_s46_h12  | `L_s47_h23  | `L_s48_h24 ])
          =
          fun (x2871 : 'tags this) ->
            let x2873 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2871) "hourCycle" in
            match Ojs.string_of_js x2873 with
            | "h11" -> `L_s45_h11
            | "h12" -> `L_s46_h12
            | "h23" -> `L_s47_h23
            | "h24" -> `L_s48_h24
            | _ -> assert false
        let (set_hourCycle :
          'tags this ->
            [ `U1 of [ `L_s45_h11 ]  | `U2 of [ `L_s46_h12 ] 
            | `U3 of [ `L_s47_h23 ]  | `U4 of [ `L_s48_h24 ] ] -> unit)
          =
          fun (x2874 : 'tags this) ->
            fun
              (x2875 :
                [ `U1 of [ `L_s45_h11 ]  | `U2 of [ `L_s46_h12 ] 
                | `U3 of [ `L_s47_h23 ]  | `U4 of [ `L_s48_h24 ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2874) "hourCycle"
                (match x2875 with
                 | `U1 x2876 ->
                     (match x2876 with | `L_s45_h11 -> Ojs.string_to_js "h11")
                 | `U2 x2877 ->
                     (match x2877 with | `L_s46_h12 -> Ojs.string_to_js "h12")
                 | `U3 x2878 ->
                     (match x2878 with | `L_s47_h23 -> Ojs.string_to_js "h23")
                 | `U4 x2879 ->
                     (match x2879 with | `L_s48_h24 -> Ojs.string_to_js "h24"))
        let (get_dayPeriod :
          'tags this -> [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ]) =
          fun (x2881 : 'tags this) ->
            let x2883 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2881) "dayPeriod" in
            match Ojs.string_of_js x2883 with
            | "long" -> `L_s55_long
            | "narrow" -> `L_s67_narrow
            | "short" -> `L_s88_short
            | _ -> assert false
        let (set_dayPeriod :
          'tags this ->
            [ `U1 of [ `L_s67_narrow ]  | `U2 of [ `L_s88_short ] 
            | `U3 of [ `L_s55_long ] ] -> unit)
          =
          fun (x2884 : 'tags this) ->
            fun
              (x2885 :
                [ `U1 of [ `L_s67_narrow ]  | `U2 of [ `L_s88_short ] 
                | `U3 of [ `L_s55_long ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2884) "dayPeriod"
                (match x2885 with
                 | `U1 x2886 ->
                     (match x2886 with
                      | `L_s67_narrow -> Ojs.string_to_js "narrow")
                 | `U2 x2887 ->
                     (match x2887 with
                      | `L_s88_short -> Ojs.string_to_js "short")
                 | `U3 x2888 ->
                     (match x2888 with
                      | `L_s55_long -> Ojs.string_to_js "long"))
        let (get_fractionalSecondDigits :
          'tags this -> [ `L_n_0  | `L_n_1  | `L_n_2  | `L_n_3 ]) =
          fun (x2890 : 'tags this) ->
            let x2892 =
              Ojs.get_prop_ascii (this_to_js Obj.magic x2890)
                "fractionalSecondDigits" in
            match Ojs.int_of_js x2892 with
            | 0 -> `L_n_0
            | 1 -> `L_n_1
            | 2 -> `L_n_2
            | 3 -> `L_n_3
            | _ -> assert false
        let (set_fractionalSecondDigits :
          'tags this ->
            [ `U1 of [ `L_n_0 ]  | `U2 of [ `L_n_1 ]  | `U3 of [ `L_n_2 ] 
            | `U4 of [ `L_n_3 ] ] -> unit)
          =
          fun (x2893 : 'tags this) ->
            fun
              (x2894 :
                [ `U1 of [ `L_n_0 ]  | `U2 of [ `L_n_1 ] 
                | `U3 of [ `L_n_2 ]  | `U4 of [ `L_n_3 ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2893)
                "fractionalSecondDigits"
                (match x2894 with
                 | `U1 x2895 ->
                     (match x2895 with | `L_n_0 -> Ojs.int_to_js 0)
                 | `U2 x2896 ->
                     (match x2896 with | `L_n_1 -> Ojs.int_to_js 1)
                 | `U3 x2897 ->
                     (match x2897 with | `L_n_2 -> Ojs.int_to_js 2)
                 | `U4 x2898 ->
                     (match x2898 with | `L_n_3 -> Ojs.int_to_js 3))
        let (get_locale : 'tags this -> string) =
          fun (x2900 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2900) "locale")
        let (set_locale : 'tags this -> string -> unit) =
          fun (x2902 : 'tags this) ->
            fun (x2903 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2902) "locale"
                (Ojs.string_to_js x2903)
        let (get_calendar : 'tags this -> string) =
          fun (x2905 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2905) "calendar")
        let (set_calendar : 'tags this -> string -> unit) =
          fun (x2907 : 'tags this) ->
            fun (x2908 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2907) "calendar"
                (Ojs.string_to_js x2908)
        let (get_numberingSystem : 'tags this -> string) =
          fun (x2910 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2910)
                 "numberingSystem")
        let (set_numberingSystem : 'tags this -> string -> unit) =
          fun (x2912 : 'tags this) ->
            fun (x2913 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2912)
                "numberingSystem" (Ojs.string_to_js x2913)
        let (get_timeZone : 'tags this -> string) =
          fun (x2915 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2915) "timeZone")
        let (set_timeZone : 'tags this -> string -> unit) =
          fun (x2917 : 'tags this) ->
            fun (x2918 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2917) "timeZone"
                (Ojs.string_to_js x2918)
        let (get_hour12 : 'tags this -> bool) =
          fun (x2920 : 'tags this) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2920) "hour12")
        let (set_hour12 : 'tags this -> bool -> unit) =
          fun (x2922 : 'tags this) ->
            fun (x2923 : bool) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2922) "hour12"
                (Ojs.bool_to_js x2923)
        let (get_weekday : 'tags this -> string) =
          fun (x2925 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2925) "weekday")
        let (set_weekday : 'tags this -> string -> unit) =
          fun (x2927 : 'tags this) ->
            fun (x2928 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2927) "weekday"
                (Ojs.string_to_js x2928)
        let (get_era : 'tags this -> string) =
          fun (x2930 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2930) "era")
        let (set_era : 'tags this -> string -> unit) =
          fun (x2932 : 'tags this) ->
            fun (x2933 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2932) "era"
                (Ojs.string_to_js x2933)
        let (get_year : 'tags this -> string) =
          fun (x2935 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2935) "year")
        let (set_year : 'tags this -> string -> unit) =
          fun (x2937 : 'tags this) ->
            fun (x2938 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2937) "year"
                (Ojs.string_to_js x2938)
        let (get_month : 'tags this -> string) =
          fun (x2940 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2940) "month")
        let (set_month : 'tags this -> string -> unit) =
          fun (x2942 : 'tags this) ->
            fun (x2943 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2942) "month"
                (Ojs.string_to_js x2943)
        let (get_day : 'tags this -> string) =
          fun (x2945 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2945) "day")
        let (set_day : 'tags this -> string -> unit) =
          fun (x2947 : 'tags this) ->
            fun (x2948 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2947) "day"
                (Ojs.string_to_js x2948)
        let (get_hour : 'tags this -> string) =
          fun (x2950 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2950) "hour")
        let (set_hour : 'tags this -> string -> unit) =
          fun (x2952 : 'tags this) ->
            fun (x2953 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2952) "hour"
                (Ojs.string_to_js x2953)
        let (get_minute : 'tags this -> string) =
          fun (x2955 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2955) "minute")
        let (set_minute : 'tags this -> string -> unit) =
          fun (x2957 : 'tags this) ->
            fun (x2958 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2957) "minute"
                (Ojs.string_to_js x2958)
        let (get_second : 'tags this -> string) =
          fun (x2960 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2960) "second")
        let (set_second : 'tags this -> string -> unit) =
          fun (x2962 : 'tags this) ->
            fun (x2963 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2962) "second"
                (Ojs.string_to_js x2963)
        let (get_timeZoneName : 'tags this -> string) =
          fun (x2965 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x2965) "timeZoneName")
        let (set_timeZoneName : 'tags this -> string -> unit) =
          fun (x2967 : 'tags this) ->
            fun (x2968 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x2967) "timeZoneName"
                (Ojs.string_to_js x2968)
        let (create :
          formatMatcher:[ `L_s23_basic  | `L_s24_best_fit ] ->
            dateStyle:[ `L_s43_full  | `L_s55_long  | `L_s59_medium 
                      | `L_s88_short ]
              ->
              timeStyle:[ `L_s43_full  | `L_s55_long  | `L_s59_medium 
                        | `L_s88_short ]
                ->
                hourCycle:[ `L_s45_h11  | `L_s46_h12  | `L_s47_h23 
                          | `L_s48_h24 ]
                  ->
                  dayPeriod:[ `L_s55_long  | `L_s67_narrow  | `L_s88_short ]
                    ->
                    fractionalSecondDigits:[ `L_n_0  | `L_n_1  | `L_n_2 
                                           | `L_n_3 ]
                      ->
                      locale:string ->
                        calendar:string ->
                          numberingSystem:string ->
                            timeZone:string ->
                              hour12:bool ->
                                weekday:string ->
                                  era:string ->
                                    year:string ->
                                      month:string ->
                                        day:string ->
                                          hour:string ->
                                            minute:string ->
                                              second:string ->
                                                timeZoneName:string ->
                                                  unit -> t)
          =
          fun ~formatMatcher:(x2970 : [ `L_s23_basic  | `L_s24_best_fit ]) ->
            fun
              ~dateStyle:(x2971 :
                           [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
                           | `L_s88_short ])
              ->
              fun
                ~timeStyle:(x2972 :
                             [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
                             | `L_s88_short ])
                ->
                fun
                  ~hourCycle:(x2973 :
                               [ `L_s45_h11  | `L_s46_h12  | `L_s47_h23 
                               | `L_s48_h24 ])
                  ->
                  fun
                    ~dayPeriod:(x2974 :
                                 [ `L_s55_long  | `L_s67_narrow 
                                 | `L_s88_short ])
                    ->
                    fun
                      ~fractionalSecondDigits:(x2975 :
                                                [ `L_n_0  | `L_n_1  | 
                                                  `L_n_2 
                                                | `L_n_3 ])
                      ->
                      fun ~locale:(x2976 : string) ->
                        fun ~calendar:(x2977 : string) ->
                          fun ~numberingSystem:(x2978 : string) ->
                            fun ~timeZone:(x2979 : string) ->
                              fun ~hour12:(x2980 : bool) ->
                                fun ~weekday:(x2981 : string) ->
                                  fun ~era:(x2982 : string) ->
                                    fun ~year:(x2983 : string) ->
                                      fun ~month:(x2984 : string) ->
                                        fun ~day:(x2985 : string) ->
                                          fun ~hour:(x2986 : string) ->
                                            fun ~minute:(x2987 : string) ->
                                              fun ~second:(x2988 : string) ->
                                                fun
                                                  ~timeZoneName:(x2989 :
                                                                  string)
                                                  ->
                                                  fun () ->
                                                    let x2990 =
                                                      Ojs.empty_obj () in
                                                    Ojs.set_prop_ascii x2990
                                                      "formatMatcher"
                                                      (match x2970 with
                                                       | `L_s23_basic ->
                                                           Ojs.string_to_js
                                                             "basic"
                                                       | `L_s24_best_fit ->
                                                           Ojs.string_to_js
                                                             "best fit");
                                                    Ojs.set_prop_ascii x2990
                                                      "dateStyle"
                                                      (match x2971 with
                                                       | `L_s43_full ->
                                                           Ojs.string_to_js
                                                             "full"
                                                       | `L_s55_long ->
                                                           Ojs.string_to_js
                                                             "long"
                                                       | `L_s59_medium ->
                                                           Ojs.string_to_js
                                                             "medium"
                                                       | `L_s88_short ->
                                                           Ojs.string_to_js
                                                             "short");
                                                    Ojs.set_prop_ascii x2990
                                                      "timeStyle"
                                                      (match x2972 with
                                                       | `L_s43_full ->
                                                           Ojs.string_to_js
                                                             "full"
                                                       | `L_s55_long ->
                                                           Ojs.string_to_js
                                                             "long"
                                                       | `L_s59_medium ->
                                                           Ojs.string_to_js
                                                             "medium"
                                                       | `L_s88_short ->
                                                           Ojs.string_to_js
                                                             "short");
                                                    Ojs.set_prop_ascii x2990
                                                      "hourCycle"
                                                      (match x2973 with
                                                       | `L_s45_h11 ->
                                                           Ojs.string_to_js
                                                             "h11"
                                                       | `L_s46_h12 ->
                                                           Ojs.string_to_js
                                                             "h12"
                                                       | `L_s47_h23 ->
                                                           Ojs.string_to_js
                                                             "h23"
                                                       | `L_s48_h24 ->
                                                           Ojs.string_to_js
                                                             "h24");
                                                    Ojs.set_prop_ascii x2990
                                                      "dayPeriod"
                                                      (match x2974 with
                                                       | `L_s55_long ->
                                                           Ojs.string_to_js
                                                             "long"
                                                       | `L_s67_narrow ->
                                                           Ojs.string_to_js
                                                             "narrow"
                                                       | `L_s88_short ->
                                                           Ojs.string_to_js
                                                             "short");
                                                    Ojs.set_prop_ascii x2990
                                                      "fractionalSecondDigits"
                                                      (match x2975 with
                                                       | `L_n_0 ->
                                                           Ojs.int_to_js 0
                                                       | `L_n_1 ->
                                                           Ojs.int_to_js 1
                                                       | `L_n_2 ->
                                                           Ojs.int_to_js 2
                                                       | `L_n_3 ->
                                                           Ojs.int_to_js 3);
                                                    Ojs.set_prop_ascii x2990
                                                      "locale"
                                                      (Ojs.string_to_js x2976);
                                                    Ojs.set_prop_ascii x2990
                                                      "calendar"
                                                      (Ojs.string_to_js x2977);
                                                    Ojs.set_prop_ascii x2990
                                                      "numberingSystem"
                                                      (Ojs.string_to_js x2978);
                                                    Ojs.set_prop_ascii x2990
                                                      "timeZone"
                                                      (Ojs.string_to_js x2979);
                                                    Ojs.set_prop_ascii x2990
                                                      "hour12"
                                                      (Ojs.bool_to_js x2980);
                                                    Ojs.set_prop_ascii x2990
                                                      "weekday"
                                                      (Ojs.string_to_js x2981);
                                                    Ojs.set_prop_ascii x2990
                                                      "era"
                                                      (Ojs.string_to_js x2982);
                                                    Ojs.set_prop_ascii x2990
                                                      "year"
                                                      (Ojs.string_to_js x2983);
                                                    Ojs.set_prop_ascii x2990
                                                      "month"
                                                      (Ojs.string_to_js x2984);
                                                    Ojs.set_prop_ascii x2990
                                                      "day"
                                                      (Ojs.string_to_js x2985);
                                                    Ojs.set_prop_ascii x2990
                                                      "hour"
                                                      (Ojs.string_to_js x2986);
                                                    Ojs.set_prop_ascii x2990
                                                      "minute"
                                                      (Ojs.string_to_js x2987);
                                                    Ojs.set_prop_ascii x2990
                                                      "second"
                                                      (Ojs.string_to_js x2988);
                                                    Ojs.set_prop_ascii x2990
                                                      "timeZoneName"
                                                      (Ojs.string_to_js x2989);
                                                    t_of_js x2990
        let cast_from = Obj.magic
      end
    module DateTimeFormatPartTypes =
      struct
        type t =
          [ `L_s101_year  | `L_s29_day  | `L_s30_dayPeriod  | `L_s35_era 
          | `L_s49_hour  | `L_s54_literal  | `L_s61_minute  | `L_s63_month 
          | `L_s86_second  | `L_s92_timeZoneName  | `L_s99_weekday ]
        let rec t_of_js : Ojs.t -> t =
          fun (x2992 : Ojs.t) ->
            let x2993 = x2992 in
            match Ojs.string_of_js x2993 with
            | "year" -> `L_s101_year
            | "day" -> `L_s29_day
            | "dayPeriod" -> `L_s30_dayPeriod
            | "era" -> `L_s35_era
            | "hour" -> `L_s49_hour
            | "literal" -> `L_s54_literal
            | "minute" -> `L_s61_minute
            | "month" -> `L_s63_month
            | "second" -> `L_s86_second
            | "timeZoneName" -> `L_s92_timeZoneName
            | "weekday" -> `L_s99_weekday
            | _ -> assert false
        and t_to_js : t -> Ojs.t =
          fun
            (x2991 :
              [ `L_s101_year  | `L_s29_day  | `L_s30_dayPeriod  | `L_s35_era 
              | `L_s49_hour  | `L_s54_literal  | `L_s61_minute 
              | `L_s63_month  | `L_s86_second  | `L_s92_timeZoneName 
              | `L_s99_weekday ])
            ->
            match x2991 with
            | `L_s101_year -> Ojs.string_to_js "year"
            | `L_s29_day -> Ojs.string_to_js "day"
            | `L_s30_dayPeriod -> Ojs.string_to_js "dayPeriod"
            | `L_s35_era -> Ojs.string_to_js "era"
            | `L_s49_hour -> Ojs.string_to_js "hour"
            | `L_s54_literal -> Ojs.string_to_js "literal"
            | `L_s61_minute -> Ojs.string_to_js "minute"
            | `L_s63_month -> Ojs.string_to_js "month"
            | `L_s86_second -> Ojs.string_to_js "second"
            | `L_s92_timeZoneName -> Ojs.string_to_js "timeZoneName"
            | `L_s99_weekday -> Ojs.string_to_js "weekday"
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2995 : Ojs.t) -> t_of_js x2995
        and t_0_to_js : t_0 -> Ojs.t = fun (x2994 : t) -> t_to_js x2994
      end
    module DateTimeFormatPart =
      struct
        type t = [ `Intl_DateTimeFormatPart ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x2997 : Ojs.t) -> t_of_js x2997
        and t_0_to_js : t_0 -> Ojs.t = fun (x2996 : t) -> t_to_js x2996
        type tags = [ `Intl_DateTimeFormatPart ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_DateTimeFormatPart ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x3000 : Ojs.t) -> intf_of_js __tags_of_js x3000
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x2998 : __tags intf) -> intf_to_js __tags_to_js x2998
        let (get_type : 'tags this -> DateTimeFormatPartTypes.t) =
          fun (x3002 : 'tags this) ->
            DateTimeFormatPartTypes.t_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3002) "type")
        let (set_type : 'tags this -> DateTimeFormatPartTypes.t -> unit) =
          fun (x3004 : 'tags this) ->
            fun (x3005 : DateTimeFormatPartTypes.t) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3004) "type"
                (DateTimeFormatPartTypes.t_to_js x3005)
        let (get_value : 'tags this -> string) =
          fun (x3007 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3007) "value")
        let (set_value : 'tags this -> string -> unit) =
          fun (x3009 : 'tags this) ->
            fun (x3010 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3009) "value"
                (Ojs.string_to_js x3010)
        let (create :
          type_:DateTimeFormatPartTypes.t -> value:string -> unit -> t) =
          fun ~type_:(x3012 : DateTimeFormatPartTypes.t) ->
            fun ~value:(x3013 : string) ->
              fun () ->
                let x3014 = Ojs.empty_obj () in
                Ojs.set_prop_ascii x3014 "type"
                  (DateTimeFormatPartTypes.t_to_js x3012);
                Ojs.set_prop_ascii x3014 "value" (Ojs.string_to_js x3013);
                t_of_js x3014
        let cast_from = Obj.magic
      end
    module DateTimeFormatOptions =
      struct
        type t = [ `Intl_DateTimeFormatOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x3016 : Ojs.t) -> t_of_js x3016
        and t_0_to_js : t_0 -> Ojs.t = fun (x3015 : t) -> t_to_js x3015
        type tags = [ `Intl_DateTimeFormatOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_DateTimeFormatOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x3019 : Ojs.t) -> intf_of_js __tags_of_js x3019
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x3017 : __tags intf) -> intf_to_js __tags_to_js x3017
        let (get_formatMatcher :
          'tags this -> [ `L_s23_basic  | `L_s24_best_fit ] option) =
          fun (x3021 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3023 : Ojs.t) ->
                 let x3024 = x3023 in
                 match Ojs.string_of_js x3024 with
                 | "basic" -> `L_s23_basic
                 | "best fit" -> `L_s24_best_fit
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3021)
                 "formatMatcher")
        let (set_formatMatcher :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s23_basic ] 
            | `U2 of [ `L_s24_best_fit ]  | `U3 of [ `L_s24_best_fit ] ] ->
              unit)
          =
          fun (x3025 : 'tags this) ->
            fun
              (x3026 :
                [ `Undefined of undefined  | `U1 of [ `L_s23_basic ] 
                | `U2 of [ `L_s24_best_fit ]  | `U3 of [ `L_s24_best_fit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3025) "formatMatcher"
                (match x3026 with
                 | `Undefined x3027 -> undefined_to_js x3027
                 | `U1 x3028 ->
                     (match x3028 with
                      | `L_s23_basic -> Ojs.string_to_js "basic")
                 | `U2 x3029 ->
                     (match x3029 with
                      | `L_s24_best_fit -> Ojs.string_to_js "best fit")
                 | `U3 x3030 ->
                     (match x3030 with
                      | `L_s24_best_fit -> Ojs.string_to_js "best fit"))
        let (get_dateStyle :
          'tags this ->
            [ `L_s43_full  | `L_s55_long  | `L_s59_medium  | `L_s88_short ]
              option)
          =
          fun (x3032 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3034 : Ojs.t) ->
                 let x3035 = x3034 in
                 match Ojs.string_of_js x3035 with
                 | "full" -> `L_s43_full
                 | "long" -> `L_s55_long
                 | "medium" -> `L_s59_medium
                 | "short" -> `L_s88_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3032) "dateStyle")
        let (set_dateStyle :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s43_full ] 
            | `U2 of [ `L_s55_long ]  | `U3 of [ `L_s59_medium ] 
            | `U4 of [ `L_s88_short ] ] -> unit)
          =
          fun (x3036 : 'tags this) ->
            fun
              (x3037 :
                [ `Undefined of undefined  | `U1 of [ `L_s43_full ] 
                | `U2 of [ `L_s55_long ]  | `U3 of [ `L_s59_medium ] 
                | `U4 of [ `L_s88_short ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3036) "dateStyle"
                (match x3037 with
                 | `Undefined x3038 -> undefined_to_js x3038
                 | `U1 x3039 ->
                     (match x3039 with
                      | `L_s43_full -> Ojs.string_to_js "full")
                 | `U2 x3040 ->
                     (match x3040 with
                      | `L_s55_long -> Ojs.string_to_js "long")
                 | `U3 x3041 ->
                     (match x3041 with
                      | `L_s59_medium -> Ojs.string_to_js "medium")
                 | `U4 x3042 ->
                     (match x3042 with
                      | `L_s88_short -> Ojs.string_to_js "short"))
        let (get_timeStyle :
          'tags this ->
            [ `L_s43_full  | `L_s55_long  | `L_s59_medium  | `L_s88_short ]
              option)
          =
          fun (x3044 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3046 : Ojs.t) ->
                 let x3047 = x3046 in
                 match Ojs.string_of_js x3047 with
                 | "full" -> `L_s43_full
                 | "long" -> `L_s55_long
                 | "medium" -> `L_s59_medium
                 | "short" -> `L_s88_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3044) "timeStyle")
        let (set_timeStyle :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s43_full ] 
            | `U2 of [ `L_s55_long ]  | `U3 of [ `L_s59_medium ] 
            | `U4 of [ `L_s88_short ] ] -> unit)
          =
          fun (x3048 : 'tags this) ->
            fun
              (x3049 :
                [ `Undefined of undefined  | `U1 of [ `L_s43_full ] 
                | `U2 of [ `L_s55_long ]  | `U3 of [ `L_s59_medium ] 
                | `U4 of [ `L_s88_short ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3048) "timeStyle"
                (match x3049 with
                 | `Undefined x3050 -> undefined_to_js x3050
                 | `U1 x3051 ->
                     (match x3051 with
                      | `L_s43_full -> Ojs.string_to_js "full")
                 | `U2 x3052 ->
                     (match x3052 with
                      | `L_s55_long -> Ojs.string_to_js "long")
                 | `U3 x3053 ->
                     (match x3053 with
                      | `L_s59_medium -> Ojs.string_to_js "medium")
                 | `U4 x3054 ->
                     (match x3054 with
                      | `L_s88_short -> Ojs.string_to_js "short"))
        let (get_dayPeriod :
          'tags this ->
            [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] option)
          =
          fun (x3056 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3058 : Ojs.t) ->
                 let x3059 = x3058 in
                 match Ojs.string_of_js x3059 with
                 | "long" -> `L_s55_long
                 | "narrow" -> `L_s67_narrow
                 | "short" -> `L_s88_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3056) "dayPeriod")
        let (set_dayPeriod :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s67_narrow ] 
            | `U2 of [ `L_s88_short ]  | `U3 of [ `L_s55_long ] ] -> 
              unit)
          =
          fun (x3060 : 'tags this) ->
            fun
              (x3061 :
                [ `Undefined of undefined  | `U1 of [ `L_s67_narrow ] 
                | `U2 of [ `L_s88_short ]  | `U3 of [ `L_s55_long ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3060) "dayPeriod"
                (match x3061 with
                 | `Undefined x3062 -> undefined_to_js x3062
                 | `U1 x3063 ->
                     (match x3063 with
                      | `L_s67_narrow -> Ojs.string_to_js "narrow")
                 | `U2 x3064 ->
                     (match x3064 with
                      | `L_s88_short -> Ojs.string_to_js "short")
                 | `U3 x3065 ->
                     (match x3065 with
                      | `L_s55_long -> Ojs.string_to_js "long"))
        let (get_fractionalSecondDigits :
          'tags this -> [ `L_n_0  | `L_n_1  | `L_n_2  | `L_n_3 ] option) =
          fun (x3067 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3069 : Ojs.t) ->
                 let x3070 = x3069 in
                 match Ojs.int_of_js x3070 with
                 | 0 -> `L_n_0
                 | 1 -> `L_n_1
                 | 2 -> `L_n_2
                 | 3 -> `L_n_3
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3067)
                 "fractionalSecondDigits")
        let (set_fractionalSecondDigits :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_n_0 ] 
            | `U2 of [ `L_n_1 ]  | `U3 of [ `L_n_2 ]  | `U4 of [ `L_n_3 ] ]
              -> unit)
          =
          fun (x3071 : 'tags this) ->
            fun
              (x3072 :
                [ `Undefined of undefined  | `U1 of [ `L_n_0 ] 
                | `U2 of [ `L_n_1 ]  | `U3 of [ `L_n_2 ] 
                | `U4 of [ `L_n_3 ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3071)
                "fractionalSecondDigits"
                (match x3072 with
                 | `Undefined x3073 -> undefined_to_js x3073
                 | `U1 x3074 ->
                     (match x3074 with | `L_n_0 -> Ojs.int_to_js 0)
                 | `U2 x3075 ->
                     (match x3075 with | `L_n_1 -> Ojs.int_to_js 1)
                 | `U3 x3076 ->
                     (match x3076 with | `L_n_2 -> Ojs.int_to_js 2)
                 | `U4 x3077 ->
                     (match x3077 with | `L_n_3 -> Ojs.int_to_js 3))
        let (get_calendar : 'tags this -> string option) =
          fun (x3079 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3079) "calendar")
        let (set_calendar :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x3082 : 'tags this) ->
            fun (x3083 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3082) "calendar"
                (match x3083 with
                 | `Undefined x3084 -> undefined_to_js x3084
                 | `U1 x3085 -> Ojs.string_to_js x3085)
        let (get_dayPeriod' :
          'tags this ->
            [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] option)
          =
          fun (x3087 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3089 : Ojs.t) ->
                 let x3090 = x3089 in
                 match Ojs.string_of_js x3090 with
                 | "long" -> `L_s55_long
                 | "narrow" -> `L_s67_narrow
                 | "short" -> `L_s88_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3087) "dayPeriod")
        let (set_dayPeriod' :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s67_narrow ] 
            | `U2 of [ `L_s88_short ]  | `U3 of [ `L_s55_long ] ] -> 
              unit)
          =
          fun (x3091 : 'tags this) ->
            fun
              (x3092 :
                [ `Undefined of undefined  | `U1 of [ `L_s67_narrow ] 
                | `U2 of [ `L_s88_short ]  | `U3 of [ `L_s55_long ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3091) "dayPeriod"
                (match x3092 with
                 | `Undefined x3093 -> undefined_to_js x3093
                 | `U1 x3094 ->
                     (match x3094 with
                      | `L_s67_narrow -> Ojs.string_to_js "narrow")
                 | `U2 x3095 ->
                     (match x3095 with
                      | `L_s88_short -> Ojs.string_to_js "short")
                 | `U3 x3096 ->
                     (match x3096 with
                      | `L_s55_long -> Ojs.string_to_js "long"))
        let (get_numberingSystem : 'tags this -> string option) =
          fun (x3098 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3098)
                 "numberingSystem")
        let (set_numberingSystem :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x3101 : 'tags this) ->
            fun (x3102 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3101)
                "numberingSystem"
                (match x3102 with
                 | `Undefined x3103 -> undefined_to_js x3103
                 | `U1 x3104 -> Ojs.string_to_js x3104)
        let (get_dateStyle' :
          'tags this ->
            [ `L_s43_full  | `L_s55_long  | `L_s59_medium  | `L_s88_short ]
              option)
          =
          fun (x3106 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3108 : Ojs.t) ->
                 let x3109 = x3108 in
                 match Ojs.string_of_js x3109 with
                 | "full" -> `L_s43_full
                 | "long" -> `L_s55_long
                 | "medium" -> `L_s59_medium
                 | "short" -> `L_s88_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3106) "dateStyle")
        let (set_dateStyle' :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s43_full ] 
            | `U2 of [ `L_s55_long ]  | `U3 of [ `L_s59_medium ] 
            | `U4 of [ `L_s88_short ] ] -> unit)
          =
          fun (x3110 : 'tags this) ->
            fun
              (x3111 :
                [ `Undefined of undefined  | `U1 of [ `L_s43_full ] 
                | `U2 of [ `L_s55_long ]  | `U3 of [ `L_s59_medium ] 
                | `U4 of [ `L_s88_short ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3110) "dateStyle"
                (match x3111 with
                 | `Undefined x3112 -> undefined_to_js x3112
                 | `U1 x3113 ->
                     (match x3113 with
                      | `L_s43_full -> Ojs.string_to_js "full")
                 | `U2 x3114 ->
                     (match x3114 with
                      | `L_s55_long -> Ojs.string_to_js "long")
                 | `U3 x3115 ->
                     (match x3115 with
                      | `L_s59_medium -> Ojs.string_to_js "medium")
                 | `U4 x3116 ->
                     (match x3116 with
                      | `L_s88_short -> Ojs.string_to_js "short"))
        let (get_timeStyle' :
          'tags this ->
            [ `L_s43_full  | `L_s55_long  | `L_s59_medium  | `L_s88_short ]
              option)
          =
          fun (x3118 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3120 : Ojs.t) ->
                 let x3121 = x3120 in
                 match Ojs.string_of_js x3121 with
                 | "full" -> `L_s43_full
                 | "long" -> `L_s55_long
                 | "medium" -> `L_s59_medium
                 | "short" -> `L_s88_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3118) "timeStyle")
        let (set_timeStyle' :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s43_full ] 
            | `U2 of [ `L_s55_long ]  | `U3 of [ `L_s59_medium ] 
            | `U4 of [ `L_s88_short ] ] -> unit)
          =
          fun (x3122 : 'tags this) ->
            fun
              (x3123 :
                [ `Undefined of undefined  | `U1 of [ `L_s43_full ] 
                | `U2 of [ `L_s55_long ]  | `U3 of [ `L_s59_medium ] 
                | `U4 of [ `L_s88_short ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3122) "timeStyle"
                (match x3123 with
                 | `Undefined x3124 -> undefined_to_js x3124
                 | `U1 x3125 ->
                     (match x3125 with
                      | `L_s43_full -> Ojs.string_to_js "full")
                 | `U2 x3126 ->
                     (match x3126 with
                      | `L_s55_long -> Ojs.string_to_js "long")
                 | `U3 x3127 ->
                     (match x3127 with
                      | `L_s59_medium -> Ojs.string_to_js "medium")
                 | `U4 x3128 ->
                     (match x3128 with
                      | `L_s88_short -> Ojs.string_to_js "short"))
        let (get_hourCycle :
          'tags this ->
            [ `L_s45_h11  | `L_s46_h12  | `L_s47_h23  | `L_s48_h24 ] option)
          =
          fun (x3130 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3132 : Ojs.t) ->
                 let x3133 = x3132 in
                 match Ojs.string_of_js x3133 with
                 | "h11" -> `L_s45_h11
                 | "h12" -> `L_s46_h12
                 | "h23" -> `L_s47_h23
                 | "h24" -> `L_s48_h24
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3130) "hourCycle")
        let (set_hourCycle :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s45_h11 ] 
            | `U2 of [ `L_s46_h12 ]  | `U3 of [ `L_s47_h23 ] 
            | `U4 of [ `L_s48_h24 ] ] -> unit)
          =
          fun (x3134 : 'tags this) ->
            fun
              (x3135 :
                [ `Undefined of undefined  | `U1 of [ `L_s45_h11 ] 
                | `U2 of [ `L_s46_h12 ]  | `U3 of [ `L_s47_h23 ] 
                | `U4 of [ `L_s48_h24 ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3134) "hourCycle"
                (match x3135 with
                 | `Undefined x3136 -> undefined_to_js x3136
                 | `U1 x3137 ->
                     (match x3137 with | `L_s45_h11 -> Ojs.string_to_js "h11")
                 | `U2 x3138 ->
                     (match x3138 with | `L_s46_h12 -> Ojs.string_to_js "h12")
                 | `U3 x3139 ->
                     (match x3139 with | `L_s47_h23 -> Ojs.string_to_js "h23")
                 | `U4 x3140 ->
                     (match x3140 with | `L_s48_h24 -> Ojs.string_to_js "h24"))
        let (get_localeMatcher :
          'tags this -> [ `L_s24_best_fit  | `L_s56_lookup ] option) =
          fun (x3142 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3144 : Ojs.t) ->
                 let x3145 = x3144 in
                 match Ojs.string_of_js x3145 with
                 | "best fit" -> `L_s24_best_fit
                 | "lookup" -> `L_s56_lookup
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3142)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s24_best_fit ] 
            | `U2 of [ `L_s56_lookup ] ] -> unit)
          =
          fun (x3146 : 'tags this) ->
            fun
              (x3147 :
                [ `Undefined of undefined  | `U1 of [ `L_s24_best_fit ] 
                | `U2 of [ `L_s56_lookup ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3146) "localeMatcher"
                (match x3147 with
                 | `Undefined x3148 -> undefined_to_js x3148
                 | `U1 x3149 ->
                     (match x3149 with
                      | `L_s24_best_fit -> Ojs.string_to_js "best fit")
                 | `U2 x3150 ->
                     (match x3150 with
                      | `L_s56_lookup -> Ojs.string_to_js "lookup"))
        let (get_weekday :
          'tags this ->
            [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] option)
          =
          fun (x3152 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3154 : Ojs.t) ->
                 let x3155 = x3154 in
                 match Ojs.string_of_js x3155 with
                 | "long" -> `L_s55_long
                 | "narrow" -> `L_s67_narrow
                 | "short" -> `L_s88_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3152) "weekday")
        let (set_weekday :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s55_long ] 
            | `U2 of [ `L_s88_short ]  | `U3 of [ `L_s67_narrow ] ] -> 
              unit)
          =
          fun (x3156 : 'tags this) ->
            fun
              (x3157 :
                [ `Undefined of undefined  | `U1 of [ `L_s55_long ] 
                | `U2 of [ `L_s88_short ]  | `U3 of [ `L_s67_narrow ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3156) "weekday"
                (match x3157 with
                 | `Undefined x3158 -> undefined_to_js x3158
                 | `U1 x3159 ->
                     (match x3159 with
                      | `L_s55_long -> Ojs.string_to_js "long")
                 | `U2 x3160 ->
                     (match x3160 with
                      | `L_s88_short -> Ojs.string_to_js "short")
                 | `U3 x3161 ->
                     (match x3161 with
                      | `L_s67_narrow -> Ojs.string_to_js "narrow"))
        let (get_era :
          'tags this ->
            [ `L_s55_long  | `L_s67_narrow  | `L_s88_short ] option)
          =
          fun (x3163 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3165 : Ojs.t) ->
                 let x3166 = x3165 in
                 match Ojs.string_of_js x3166 with
                 | "long" -> `L_s55_long
                 | "narrow" -> `L_s67_narrow
                 | "short" -> `L_s88_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3163) "era")
        let (set_era :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s55_long ] 
            | `U2 of [ `L_s88_short ]  | `U3 of [ `L_s67_narrow ] ] -> 
              unit)
          =
          fun (x3167 : 'tags this) ->
            fun
              (x3168 :
                [ `Undefined of undefined  | `U1 of [ `L_s55_long ] 
                | `U2 of [ `L_s88_short ]  | `U3 of [ `L_s67_narrow ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3167) "era"
                (match x3168 with
                 | `Undefined x3169 -> undefined_to_js x3169
                 | `U1 x3170 ->
                     (match x3170 with
                      | `L_s55_long -> Ojs.string_to_js "long")
                 | `U2 x3171 ->
                     (match x3171 with
                      | `L_s88_short -> Ojs.string_to_js "short")
                 | `U3 x3172 ->
                     (match x3172 with
                      | `L_s67_narrow -> Ojs.string_to_js "narrow"))
        let (get_year :
          'tags this -> [ `L_s0_2_digit  | `L_s72_numeric ] option) =
          fun (x3174 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3176 : Ojs.t) ->
                 let x3177 = x3176 in
                 match Ojs.string_of_js x3177 with
                 | "2-digit" -> `L_s0_2_digit
                 | "numeric" -> `L_s72_numeric
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3174) "year")
        let (set_year :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s72_numeric ] 
            | `U2 of [ `L_s0_2_digit ] ] -> unit)
          =
          fun (x3178 : 'tags this) ->
            fun
              (x3179 :
                [ `Undefined of undefined  | `U1 of [ `L_s72_numeric ] 
                | `U2 of [ `L_s0_2_digit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3178) "year"
                (match x3179 with
                 | `Undefined x3180 -> undefined_to_js x3180
                 | `U1 x3181 ->
                     (match x3181 with
                      | `L_s72_numeric -> Ojs.string_to_js "numeric")
                 | `U2 x3182 ->
                     (match x3182 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit"))
        let (get_month :
          'tags this ->
            [ `L_s0_2_digit  | `L_s55_long  | `L_s67_narrow 
            | `L_s72_numeric  | `L_s88_short ] option)
          =
          fun (x3184 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3186 : Ojs.t) ->
                 let x3187 = x3186 in
                 match Ojs.string_of_js x3187 with
                 | "2-digit" -> `L_s0_2_digit
                 | "long" -> `L_s55_long
                 | "narrow" -> `L_s67_narrow
                 | "numeric" -> `L_s72_numeric
                 | "short" -> `L_s88_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3184) "month")
        let (set_month :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s72_numeric ] 
            | `U2 of [ `L_s0_2_digit ]  | `U3 of [ `L_s55_long ] 
            | `U4 of [ `L_s88_short ]  | `U5 of [ `L_s67_narrow ] ] -> 
              unit)
          =
          fun (x3188 : 'tags this) ->
            fun
              (x3189 :
                [ `Undefined of undefined  | `U1 of [ `L_s72_numeric ] 
                | `U2 of [ `L_s0_2_digit ]  | `U3 of [ `L_s55_long ] 
                | `U4 of [ `L_s88_short ]  | `U5 of [ `L_s67_narrow ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3188) "month"
                (match x3189 with
                 | `Undefined x3190 -> undefined_to_js x3190
                 | `U1 x3191 ->
                     (match x3191 with
                      | `L_s72_numeric -> Ojs.string_to_js "numeric")
                 | `U2 x3192 ->
                     (match x3192 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit")
                 | `U3 x3193 ->
                     (match x3193 with
                      | `L_s55_long -> Ojs.string_to_js "long")
                 | `U4 x3194 ->
                     (match x3194 with
                      | `L_s88_short -> Ojs.string_to_js "short")
                 | `U5 x3195 ->
                     (match x3195 with
                      | `L_s67_narrow -> Ojs.string_to_js "narrow"))
        let (get_day :
          'tags this -> [ `L_s0_2_digit  | `L_s72_numeric ] option) =
          fun (x3197 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3199 : Ojs.t) ->
                 let x3200 = x3199 in
                 match Ojs.string_of_js x3200 with
                 | "2-digit" -> `L_s0_2_digit
                 | "numeric" -> `L_s72_numeric
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3197) "day")
        let (set_day :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s72_numeric ] 
            | `U2 of [ `L_s0_2_digit ] ] -> unit)
          =
          fun (x3201 : 'tags this) ->
            fun
              (x3202 :
                [ `Undefined of undefined  | `U1 of [ `L_s72_numeric ] 
                | `U2 of [ `L_s0_2_digit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3201) "day"
                (match x3202 with
                 | `Undefined x3203 -> undefined_to_js x3203
                 | `U1 x3204 ->
                     (match x3204 with
                      | `L_s72_numeric -> Ojs.string_to_js "numeric")
                 | `U2 x3205 ->
                     (match x3205 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit"))
        let (get_hour :
          'tags this -> [ `L_s0_2_digit  | `L_s72_numeric ] option) =
          fun (x3207 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3209 : Ojs.t) ->
                 let x3210 = x3209 in
                 match Ojs.string_of_js x3210 with
                 | "2-digit" -> `L_s0_2_digit
                 | "numeric" -> `L_s72_numeric
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3207) "hour")
        let (set_hour :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s72_numeric ] 
            | `U2 of [ `L_s0_2_digit ] ] -> unit)
          =
          fun (x3211 : 'tags this) ->
            fun
              (x3212 :
                [ `Undefined of undefined  | `U1 of [ `L_s72_numeric ] 
                | `U2 of [ `L_s0_2_digit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3211) "hour"
                (match x3212 with
                 | `Undefined x3213 -> undefined_to_js x3213
                 | `U1 x3214 ->
                     (match x3214 with
                      | `L_s72_numeric -> Ojs.string_to_js "numeric")
                 | `U2 x3215 ->
                     (match x3215 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit"))
        let (get_minute :
          'tags this -> [ `L_s0_2_digit  | `L_s72_numeric ] option) =
          fun (x3217 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3219 : Ojs.t) ->
                 let x3220 = x3219 in
                 match Ojs.string_of_js x3220 with
                 | "2-digit" -> `L_s0_2_digit
                 | "numeric" -> `L_s72_numeric
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3217) "minute")
        let (set_minute :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s72_numeric ] 
            | `U2 of [ `L_s0_2_digit ] ] -> unit)
          =
          fun (x3221 : 'tags this) ->
            fun
              (x3222 :
                [ `Undefined of undefined  | `U1 of [ `L_s72_numeric ] 
                | `U2 of [ `L_s0_2_digit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3221) "minute"
                (match x3222 with
                 | `Undefined x3223 -> undefined_to_js x3223
                 | `U1 x3224 ->
                     (match x3224 with
                      | `L_s72_numeric -> Ojs.string_to_js "numeric")
                 | `U2 x3225 ->
                     (match x3225 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit"))
        let (get_second :
          'tags this -> [ `L_s0_2_digit  | `L_s72_numeric ] option) =
          fun (x3227 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3229 : Ojs.t) ->
                 let x3230 = x3229 in
                 match Ojs.string_of_js x3230 with
                 | "2-digit" -> `L_s0_2_digit
                 | "numeric" -> `L_s72_numeric
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3227) "second")
        let (set_second :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s72_numeric ] 
            | `U2 of [ `L_s0_2_digit ] ] -> unit)
          =
          fun (x3231 : 'tags this) ->
            fun
              (x3232 :
                [ `Undefined of undefined  | `U1 of [ `L_s72_numeric ] 
                | `U2 of [ `L_s0_2_digit ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3231) "second"
                (match x3232 with
                 | `Undefined x3233 -> undefined_to_js x3233
                 | `U1 x3234 ->
                     (match x3234 with
                      | `L_s72_numeric -> Ojs.string_to_js "numeric")
                 | `U2 x3235 ->
                     (match x3235 with
                      | `L_s0_2_digit -> Ojs.string_to_js "2-digit"))
        let (get_timeZoneName :
          'tags this -> [ `L_s55_long  | `L_s88_short ] option) =
          fun (x3237 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3239 : Ojs.t) ->
                 let x3240 = x3239 in
                 match Ojs.string_of_js x3240 with
                 | "long" -> `L_s55_long
                 | "short" -> `L_s88_short
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3237) "timeZoneName")
        let (set_timeZoneName :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s55_long ] 
            | `U2 of [ `L_s88_short ] ] -> unit)
          =
          fun (x3241 : 'tags this) ->
            fun
              (x3242 :
                [ `Undefined of undefined  | `U1 of [ `L_s55_long ] 
                | `U2 of [ `L_s88_short ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3241) "timeZoneName"
                (match x3242 with
                 | `Undefined x3243 -> undefined_to_js x3243
                 | `U1 x3244 ->
                     (match x3244 with
                      | `L_s55_long -> Ojs.string_to_js "long")
                 | `U2 x3245 ->
                     (match x3245 with
                      | `L_s88_short -> Ojs.string_to_js "short"))
        let (get_formatMatcher' :
          'tags this -> [ `L_s23_basic  | `L_s24_best_fit ] option) =
          fun (x3247 : 'tags this) ->
            Ojs.option_of_js
              (fun (x3249 : Ojs.t) ->
                 let x3250 = x3249 in
                 match Ojs.string_of_js x3250 with
                 | "basic" -> `L_s23_basic
                 | "best fit" -> `L_s24_best_fit
                 | _ -> assert false)
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3247)
                 "formatMatcher")
        let (set_formatMatcher' :
          'tags this ->
            [ `Undefined of undefined  | `U1 of [ `L_s24_best_fit ] 
            | `U2 of [ `L_s23_basic ] ] -> unit)
          =
          fun (x3251 : 'tags this) ->
            fun
              (x3252 :
                [ `Undefined of undefined  | `U1 of [ `L_s24_best_fit ] 
                | `U2 of [ `L_s23_basic ] ])
              ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3251) "formatMatcher"
                (match x3252 with
                 | `Undefined x3253 -> undefined_to_js x3253
                 | `U1 x3254 ->
                     (match x3254 with
                      | `L_s24_best_fit -> Ojs.string_to_js "best fit")
                 | `U2 x3255 ->
                     (match x3255 with
                      | `L_s23_basic -> Ojs.string_to_js "basic"))
        let (get_hour12 : 'tags this -> bool option) =
          fun (x3257 : 'tags this) ->
            Ojs.option_of_js Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3257) "hour12")
        let (set_hour12 :
          'tags this -> [ `Undefined of undefined  | `U1 of bool ] -> unit) =
          fun (x3260 : 'tags this) ->
            fun (x3261 : [ `Undefined of undefined  | `U1 of bool ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3260) "hour12"
                (match x3261 with
                 | `Undefined x3262 -> undefined_to_js x3262
                 | `U1 x3263 -> Ojs.bool_to_js x3263)
        let (get_timeZone : 'tags this -> string option) =
          fun (x3265 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3265) "timeZone")
        let (set_timeZone :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x3268 : 'tags this) ->
            fun (x3269 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3268) "timeZone"
                (match x3269 with
                 | `Undefined x3270 -> undefined_to_js x3270
                 | `U1 x3271 -> Ojs.string_to_js x3271)
        let (create :
          ?formatMatcher:[ `L_s23_basic  | `L_s24_best_fit ] ->
            ?dateStyle:[ `L_s43_full  | `L_s55_long  | `L_s59_medium 
                       | `L_s88_short ]
              ->
              ?timeStyle:[ `L_s43_full  | `L_s55_long  | `L_s59_medium 
                         | `L_s88_short ]
                ->
                ?dayPeriod:[ `L_s55_long  | `L_s67_narrow  | `L_s88_short ]
                  ->
                  ?fractionalSecondDigits:[ `L_n_0  | `L_n_1  | `L_n_2 
                                          | `L_n_3 ]
                    ->
                    ?calendar:string ->
                      ?dayPeriod:[ `L_s55_long  | `L_s67_narrow 
                                 | `L_s88_short ]
                        ->
                        ?numberingSystem:string ->
                          ?dateStyle:[ `L_s43_full  | `L_s55_long 
                                     | `L_s59_medium  | `L_s88_short ]
                            ->
                            ?timeStyle:[ `L_s43_full  | `L_s55_long 
                                       | `L_s59_medium  | `L_s88_short ]
                              ->
                              ?hourCycle:[ `L_s45_h11  | `L_s46_h12 
                                         | `L_s47_h23  | `L_s48_h24 ]
                                ->
                                ?localeMatcher:[ `L_s24_best_fit 
                                               | `L_s56_lookup ]
                                  ->
                                  ?weekday:[ `L_s55_long  | `L_s67_narrow 
                                           | `L_s88_short ]
                                    ->
                                    ?era:[ `L_s55_long  | `L_s67_narrow 
                                         | `L_s88_short ]
                                      ->
                                      ?year:[ `L_s0_2_digit 
                                            | `L_s72_numeric ]
                                        ->
                                        ?month:[ `L_s0_2_digit 
                                               | `L_s55_long 
                                               | `L_s67_narrow 
                                               | `L_s72_numeric 
                                               | `L_s88_short ]
                                          ->
                                          ?day:[ `L_s0_2_digit 
                                               | `L_s72_numeric ]
                                            ->
                                            ?hour:[ `L_s0_2_digit 
                                                  | `L_s72_numeric ]
                                              ->
                                              ?minute:[ `L_s0_2_digit 
                                                      | `L_s72_numeric ]
                                                ->
                                                ?second:[ `L_s0_2_digit 
                                                        | `L_s72_numeric ]
                                                  ->
                                                  ?timeZoneName:[
                                                                  `L_s55_long 
                                                                | `L_s88_short
                                                                    ]
                                                    ->
                                                    ?formatMatcher:[
                                                                    `L_s23_basic
                                                                     | 
                                                                    `L_s24_best_fit
                                                                    ]
                                                      ->
                                                      ?hour12:bool ->
                                                        ?timeZone:string ->
                                                          unit -> t)
          =
          fun
            ?formatMatcher:(x3273 :
                             [ `L_s23_basic  | `L_s24_best_fit ] option)
            ->
            fun
              ?dateStyle:(x3274 :
                           [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
                           | `L_s88_short ] option)
              ->
              fun
                ?timeStyle:(x3275 :
                             [ `L_s43_full  | `L_s55_long  | `L_s59_medium 
                             | `L_s88_short ] option)
                ->
                fun
                  ?dayPeriod:(x3276 :
                               [ `L_s55_long  | `L_s67_narrow 
                               | `L_s88_short ] option)
                  ->
                  fun
                    ?fractionalSecondDigits:(x3277 :
                                              [ `L_n_0  | `L_n_1  | `L_n_2 
                                              | `L_n_3 ] option)
                    ->
                    fun ?calendar:(x3278 : string option) ->
                      fun
                        ?dayPeriod:(x3279 :
                                     [ `L_s55_long  | `L_s67_narrow 
                                     | `L_s88_short ] option)
                        ->
                        fun ?numberingSystem:(x3280 : string option) ->
                          fun
                            ?dateStyle:(x3281 :
                                         [ `L_s43_full  | `L_s55_long 
                                         | `L_s59_medium  | `L_s88_short ]
                                           option)
                            ->
                            fun
                              ?timeStyle:(x3282 :
                                           [ `L_s43_full  | `L_s55_long 
                                           | `L_s59_medium  | `L_s88_short ]
                                             option)
                              ->
                              fun
                                ?hourCycle:(x3283 :
                                             [ `L_s45_h11  | `L_s46_h12 
                                             | `L_s47_h23  | `L_s48_h24 ]
                                               option)
                                ->
                                fun
                                  ?localeMatcher:(x3284 :
                                                   [ `L_s24_best_fit 
                                                   | `L_s56_lookup ] option)
                                  ->
                                  fun
                                    ?weekday:(x3285 :
                                               [ `L_s55_long 
                                               | `L_s67_narrow 
                                               | `L_s88_short ] option)
                                    ->
                                    fun
                                      ?era:(x3286 :
                                             [ `L_s55_long  | `L_s67_narrow 
                                             | `L_s88_short ] option)
                                      ->
                                      fun
                                        ?year:(x3287 :
                                                [ `L_s0_2_digit 
                                                | `L_s72_numeric ] option)
                                        ->
                                        fun
                                          ?month:(x3288 :
                                                   [ `L_s0_2_digit 
                                                   | `L_s55_long 
                                                   | `L_s67_narrow 
                                                   | `L_s72_numeric 
                                                   | `L_s88_short ] option)
                                          ->
                                          fun
                                            ?day:(x3289 :
                                                   [ `L_s0_2_digit 
                                                   | `L_s72_numeric ] option)
                                            ->
                                            fun
                                              ?hour:(x3290 :
                                                      [ `L_s0_2_digit 
                                                      | `L_s72_numeric ]
                                                        option)
                                              ->
                                              fun
                                                ?minute:(x3291 :
                                                          [ `L_s0_2_digit 
                                                          | `L_s72_numeric ]
                                                            option)
                                                ->
                                                fun
                                                  ?second:(x3292 :
                                                            [ `L_s0_2_digit 
                                                            | `L_s72_numeric ]
                                                              option)
                                                  ->
                                                  fun
                                                    ?timeZoneName:(x3293 :
                                                                    [
                                                                    `L_s55_long
                                                                     | 
                                                                    `L_s88_short
                                                                    ] option)
                                                    ->
                                                    fun
                                                      ?formatMatcher:
                                                      (x3294 :
                                                        [ `L_s23_basic 
                                                        | `L_s24_best_fit ]
                                                          option)
                                                      ->
                                                      fun
                                                        ?hour12:(x3295 :
                                                                  bool option)
                                                        ->
                                                        fun
                                                          ?timeZone:(x3296 :
                                                                    string
                                                                    option)
                                                          ->
                                                          fun () ->
                                                            let x3297 =
                                                              Ojs.empty_obj
                                                                () in
                                                            (match x3273 with
                                                             | Some x3321 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3297
                                                                   "formatMatcher"
                                                                   (match x3321
                                                                    with
                                                                    | 
                                                                    `L_s23_basic
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "basic"
                                                                    | 
                                                                    `L_s24_best_fit
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "best fit")
                                                             | None -> ());
                                                            (match x3274 with
                                                             | Some x3320 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3297
                                                                   "dateStyle"
                                                                   (match x3320
                                                                    with
                                                                    | 
                                                                    `L_s43_full
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "full"
                                                                    | 
                                                                    `L_s55_long
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "long"
                                                                    | 
                                                                    `L_s59_medium
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "medium"
                                                                    | 
                                                                    `L_s88_short
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "short")
                                                             | None -> ());
                                                            (match x3275 with
                                                             | Some x3319 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3297
                                                                   "timeStyle"
                                                                   (match x3319
                                                                    with
                                                                    | 
                                                                    `L_s43_full
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "full"
                                                                    | 
                                                                    `L_s55_long
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "long"
                                                                    | 
                                                                    `L_s59_medium
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "medium"
                                                                    | 
                                                                    `L_s88_short
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "short")
                                                             | None -> ());
                                                            (match x3276 with
                                                             | Some x3318 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3297
                                                                   "dayPeriod"
                                                                   (match x3318
                                                                    with
                                                                    | 
                                                                    `L_s55_long
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "long"
                                                                    | 
                                                                    `L_s67_narrow
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "narrow"
                                                                    | 
                                                                    `L_s88_short
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "short")
                                                             | None -> ());
                                                            (match x3277 with
                                                             | Some x3317 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3297
                                                                   "fractionalSecondDigits"
                                                                   (match x3317
                                                                    with
                                                                    | 
                                                                    `L_n_0 ->
                                                                    Ojs.int_to_js
                                                                    0
                                                                    | 
                                                                    `L_n_1 ->
                                                                    Ojs.int_to_js
                                                                    1
                                                                    | 
                                                                    `L_n_2 ->
                                                                    Ojs.int_to_js
                                                                    2
                                                                    | 
                                                                    `L_n_3 ->
                                                                    Ojs.int_to_js
                                                                    3)
                                                             | None -> ());
                                                            (match x3278 with
                                                             | Some x3316 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3297
                                                                   "calendar"
                                                                   (Ojs.string_to_js
                                                                    x3316)
                                                             | None -> ());
                                                            (match x3279 with
                                                             | Some x3315 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3297
                                                                   "dayPeriod"
                                                                   (match x3315
                                                                    with
                                                                    | 
                                                                    `L_s55_long
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "long"
                                                                    | 
                                                                    `L_s67_narrow
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "narrow"
                                                                    | 
                                                                    `L_s88_short
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "short")
                                                             | None -> ());
                                                            (match x3280 with
                                                             | Some x3314 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3297
                                                                   "numberingSystem"
                                                                   (Ojs.string_to_js
                                                                    x3314)
                                                             | None -> ());
                                                            (match x3281 with
                                                             | Some x3313 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3297
                                                                   "dateStyle"
                                                                   (match x3313
                                                                    with
                                                                    | 
                                                                    `L_s43_full
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "full"
                                                                    | 
                                                                    `L_s55_long
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "long"
                                                                    | 
                                                                    `L_s59_medium
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "medium"
                                                                    | 
                                                                    `L_s88_short
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "short")
                                                             | None -> ());
                                                            (match x3282 with
                                                             | Some x3312 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3297
                                                                   "timeStyle"
                                                                   (match x3312
                                                                    with
                                                                    | 
                                                                    `L_s43_full
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "full"
                                                                    | 
                                                                    `L_s55_long
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "long"
                                                                    | 
                                                                    `L_s59_medium
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "medium"
                                                                    | 
                                                                    `L_s88_short
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "short")
                                                             | None -> ());
                                                            (match x3283 with
                                                             | Some x3311 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3297
                                                                   "hourCycle"
                                                                   (match x3311
                                                                    with
                                                                    | 
                                                                    `L_s45_h11
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "h11"
                                                                    | 
                                                                    `L_s46_h12
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "h12"
                                                                    | 
                                                                    `L_s47_h23
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "h23"
                                                                    | 
                                                                    `L_s48_h24
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "h24")
                                                             | None -> ());
                                                            (match x3284 with
                                                             | Some x3310 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3297
                                                                   "localeMatcher"
                                                                   (match x3310
                                                                    with
                                                                    | 
                                                                    `L_s24_best_fit
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "best fit"
                                                                    | 
                                                                    `L_s56_lookup
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "lookup")
                                                             | None -> ());
                                                            (match x3285 with
                                                             | Some x3309 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3297
                                                                   "weekday"
                                                                   (match x3309
                                                                    with
                                                                    | 
                                                                    `L_s55_long
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "long"
                                                                    | 
                                                                    `L_s67_narrow
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "narrow"
                                                                    | 
                                                                    `L_s88_short
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "short")
                                                             | None -> ());
                                                            (match x3286 with
                                                             | Some x3308 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3297
                                                                   "era"
                                                                   (match x3308
                                                                    with
                                                                    | 
                                                                    `L_s55_long
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "long"
                                                                    | 
                                                                    `L_s67_narrow
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "narrow"
                                                                    | 
                                                                    `L_s88_short
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "short")
                                                             | None -> ());
                                                            (match x3287 with
                                                             | Some x3307 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3297
                                                                   "year"
                                                                   (match x3307
                                                                    with
                                                                    | 
                                                                    `L_s0_2_digit
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "2-digit"
                                                                    | 
                                                                    `L_s72_numeric
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "numeric")
                                                             | None -> ());
                                                            (match x3288 with
                                                             | Some x3306 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3297
                                                                   "month"
                                                                   (match x3306
                                                                    with
                                                                    | 
                                                                    `L_s0_2_digit
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "2-digit"
                                                                    | 
                                                                    `L_s55_long
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "long"
                                                                    | 
                                                                    `L_s67_narrow
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "narrow"
                                                                    | 
                                                                    `L_s72_numeric
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "numeric"
                                                                    | 
                                                                    `L_s88_short
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "short")
                                                             | None -> ());
                                                            (match x3289 with
                                                             | Some x3305 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3297
                                                                   "day"
                                                                   (match x3305
                                                                    with
                                                                    | 
                                                                    `L_s0_2_digit
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "2-digit"
                                                                    | 
                                                                    `L_s72_numeric
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "numeric")
                                                             | None -> ());
                                                            (match x3290 with
                                                             | Some x3304 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3297
                                                                   "hour"
                                                                   (match x3304
                                                                    with
                                                                    | 
                                                                    `L_s0_2_digit
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "2-digit"
                                                                    | 
                                                                    `L_s72_numeric
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "numeric")
                                                             | None -> ());
                                                            (match x3291 with
                                                             | Some x3303 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3297
                                                                   "minute"
                                                                   (match x3303
                                                                    with
                                                                    | 
                                                                    `L_s0_2_digit
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "2-digit"
                                                                    | 
                                                                    `L_s72_numeric
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "numeric")
                                                             | None -> ());
                                                            (match x3292 with
                                                             | Some x3302 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3297
                                                                   "second"
                                                                   (match x3302
                                                                    with
                                                                    | 
                                                                    `L_s0_2_digit
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "2-digit"
                                                                    | 
                                                                    `L_s72_numeric
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "numeric")
                                                             | None -> ());
                                                            (match x3293 with
                                                             | Some x3301 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3297
                                                                   "timeZoneName"
                                                                   (match x3301
                                                                    with
                                                                    | 
                                                                    `L_s55_long
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "long"
                                                                    | 
                                                                    `L_s88_short
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "short")
                                                             | None -> ());
                                                            (match x3294 with
                                                             | Some x3300 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3297
                                                                   "formatMatcher"
                                                                   (match x3300
                                                                    with
                                                                    | 
                                                                    `L_s23_basic
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "basic"
                                                                    | 
                                                                    `L_s24_best_fit
                                                                    ->
                                                                    Ojs.string_to_js
                                                                    "best fit")
                                                             | None -> ());
                                                            (match x3295 with
                                                             | Some x3299 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3297
                                                                   "hour12"
                                                                   (Ojs.bool_to_js
                                                                    x3299)
                                                             | None -> ());
                                                            (match x3296 with
                                                             | Some x3298 ->
                                                                 Ojs.set_prop_ascii
                                                                   x3297
                                                                   "timeZone"
                                                                   (Ojs.string_to_js
                                                                    x3298)
                                                             | None -> ());
                                                            t_of_js x3297
        let cast_from = Obj.magic
      end
    module DateTimeFormat =
      struct
        type t = [ `Intl_DateTimeFormat ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x3323 : Ojs.t) -> t_of_js x3323
        and t_0_to_js : t_0 -> Ojs.t = fun (x3322 : t) -> t_to_js x3322
        type tags = [ `Intl_DateTimeFormat ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_DateTimeFormat ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x3326 : Ojs.t) -> intf_of_js __tags_of_js x3326
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x3324 : __tags intf) -> intf_to_js __tags_to_js x3324
        let (formatToParts :
          'tags this ->
            ?date:[ `U1 of Date.t  | `U2 of float ] ->
              unit -> DateTimeFormatPart.t list)
          =
          fun (x3333 : 'tags this) ->
            fun ?date:(x3328 : [ `U1 of Date.t  | `U2 of float ] option) ->
              fun () ->
                Ojs.list_of_js DateTimeFormatPart.t_of_js
                  (let x3335 = this_to_js Obj.magic x3333 in
                   Ojs.call (Ojs.get_prop_ascii x3335 "formatToParts")
                     "apply"
                     [|x3335;((let x3329 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x3328 with
                                | Some x3330 ->
                                    ignore
                                      (Ojs.call x3329 "push"
                                         [|((match x3330 with
                                             | `U1 x3331 ->
                                                 Date.t_to_js x3331
                                             | `U2 x3332 ->
                                                 Ojs.float_to_js x3332))|])
                                | None -> ());
                               x3329))|])
        let (format :
          'tags this ->
            ?date:[ `U1 of Date.t  | `U2 of float ] -> unit -> string)
          =
          fun (x3342 : 'tags this) ->
            fun ?date:(x3337 : [ `U1 of Date.t  | `U2 of float ] option) ->
              fun () ->
                Ojs.string_of_js
                  (let x3344 = this_to_js Obj.magic x3342 in
                   Ojs.call (Ojs.get_prop_ascii x3344 "format") "apply"
                     [|x3344;((let x3338 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               (match x3337 with
                                | Some x3339 ->
                                    ignore
                                      (Ojs.call x3338 "push"
                                         [|((match x3339 with
                                             | `U1 x3340 ->
                                                 Date.t_to_js x3340
                                             | `U2 x3341 ->
                                                 Ojs.float_to_js x3341))|])
                                | None -> ());
                               x3338))|])
        let (resolvedOptions : 'tags this -> ResolvedDateTimeFormatOptions.t)
          =
          fun (x3345 : 'tags this) ->
            ResolvedDateTimeFormatOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x3345) "resolvedOptions" [||])
        let cast_from = Obj.magic
        let (create :
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:DateTimeFormatOptions.t -> unit -> t)
          =
          fun
            ?locales:(x3347 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x3348 : DateTimeFormatOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl")
                        "DateTimeFormat")
                     (let x3349 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x3347 with
                       | Some x3351 ->
                           ignore
                             (Ojs.call x3349 "push"
                                [|((match x3351 with
                                    | `U1 x3352 -> Ojs.string_to_js x3352
                                    | `U2 x3353 ->
                                        Ojs.list_to_js Ojs.string_to_js x3353))|])
                       | None -> ());
                      (match x3348 with
                       | Some x3350 ->
                           ignore
                             (Ojs.call x3349 "push"
                                [|(DateTimeFormatOptions.t_to_js x3350)|])
                       | None -> ());
                      x3349))
        let (invoke :
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:DateTimeFormatOptions.t -> unit -> t)
          =
          fun
            ?locales:(x3355 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x3356 : DateTimeFormatOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl")
                        "DateTimeFormat") "apply"
                     [|Ojs.null;((let x3357 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  (match x3355 with
                                   | Some x3359 ->
                                       ignore
                                         (Ojs.call x3357 "push"
                                            [|((match x3359 with
                                                | `U1 x3360 ->
                                                    Ojs.string_to_js x3360
                                                | `U2 x3361 ->
                                                    Ojs.list_to_js
                                                      Ojs.string_to_js x3361))|])
                                   | None -> ());
                                  (match x3356 with
                                   | Some x3358 ->
                                       ignore
                                         (Ojs.call x3357 "push"
                                            [|(DateTimeFormatOptions.t_to_js
                                                 x3358)|])
                                   | None -> ());
                                  x3357))|])
        let (supportedLocalesOf :
          locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:DateTimeFormatOptions.t -> unit -> string list)
          =
          fun ~locales:(x3363 : [ `U1 of string  | `U2 of string list ]) ->
            fun ?options:(x3364 : DateTimeFormatOptions.t option) ->
              fun () ->
                Ojs.list_of_js Ojs.string_of_js
                  (let x3370 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl")
                       "DateTimeFormat" in
                   Ojs.call (Ojs.get_prop_ascii x3370 "supportedLocalesOf")
                     "apply"
                     [|x3370;((let x3365 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3365 "push"
                                    [|((match x3363 with
                                        | `U1 x3367 -> Ojs.string_to_js x3367
                                        | `U2 x3368 ->
                                            Ojs.list_to_js Ojs.string_to_js
                                              x3368))|]);
                               (match x3364 with
                                | Some x3366 ->
                                    ignore
                                      (Ojs.call x3365 "push"
                                         [|(DateTimeFormatOptions.t_to_js
                                              x3366)|])
                                | None -> ());
                               x3365))|])
      end
    module ResolvedCollatorOptions =
      struct
        type t = [ `Intl_ResolvedCollatorOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x3373 : Ojs.t) -> t_of_js x3373
        and t_0_to_js : t_0 -> Ojs.t = fun (x3372 : t) -> t_to_js x3372
        type tags = [ `Intl_ResolvedCollatorOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_ResolvedCollatorOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x3376 : Ojs.t) -> intf_of_js __tags_of_js x3376
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x3374 : __tags intf) -> intf_to_js __tags_to_js x3374
        let (get_locale : 'tags this -> string) =
          fun (x3378 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3378) "locale")
        let (set_locale : 'tags this -> string -> unit) =
          fun (x3380 : 'tags this) ->
            fun (x3381 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3380) "locale"
                (Ojs.string_to_js x3381)
        let (get_usage : 'tags this -> string) =
          fun (x3383 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3383) "usage")
        let (set_usage : 'tags this -> string -> unit) =
          fun (x3385 : 'tags this) ->
            fun (x3386 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3385) "usage"
                (Ojs.string_to_js x3386)
        let (get_sensitivity : 'tags this -> string) =
          fun (x3388 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3388) "sensitivity")
        let (set_sensitivity : 'tags this -> string -> unit) =
          fun (x3390 : 'tags this) ->
            fun (x3391 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3390) "sensitivity"
                (Ojs.string_to_js x3391)
        let (get_ignorePunctuation : 'tags this -> bool) =
          fun (x3393 : 'tags this) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3393)
                 "ignorePunctuation")
        let (set_ignorePunctuation : 'tags this -> bool -> unit) =
          fun (x3395 : 'tags this) ->
            fun (x3396 : bool) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3395)
                "ignorePunctuation" (Ojs.bool_to_js x3396)
        let (get_collation : 'tags this -> string) =
          fun (x3398 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3398) "collation")
        let (set_collation : 'tags this -> string -> unit) =
          fun (x3400 : 'tags this) ->
            fun (x3401 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3400) "collation"
                (Ojs.string_to_js x3401)
        let (get_caseFirst : 'tags this -> string) =
          fun (x3403 : 'tags this) ->
            Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3403) "caseFirst")
        let (set_caseFirst : 'tags this -> string -> unit) =
          fun (x3405 : 'tags this) ->
            fun (x3406 : string) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3405) "caseFirst"
                (Ojs.string_to_js x3406)
        let (get_numeric : 'tags this -> bool) =
          fun (x3408 : 'tags this) ->
            Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3408) "numeric")
        let (set_numeric : 'tags this -> bool -> unit) =
          fun (x3410 : 'tags this) ->
            fun (x3411 : bool) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3410) "numeric"
                (Ojs.bool_to_js x3411)
        let (create :
          locale:string ->
            usage:string ->
              sensitivity:string ->
                ignorePunctuation:bool ->
                  collation:string ->
                    caseFirst:string -> numeric:bool -> unit -> t)
          =
          fun ~locale:(x3413 : string) ->
            fun ~usage:(x3414 : string) ->
              fun ~sensitivity:(x3415 : string) ->
                fun ~ignorePunctuation:(x3416 : bool) ->
                  fun ~collation:(x3417 : string) ->
                    fun ~caseFirst:(x3418 : string) ->
                      fun ~numeric:(x3419 : bool) ->
                        fun () ->
                          let x3420 = Ojs.empty_obj () in
                          Ojs.set_prop_ascii x3420 "locale"
                            (Ojs.string_to_js x3413);
                          Ojs.set_prop_ascii x3420 "usage"
                            (Ojs.string_to_js x3414);
                          Ojs.set_prop_ascii x3420 "sensitivity"
                            (Ojs.string_to_js x3415);
                          Ojs.set_prop_ascii x3420 "ignorePunctuation"
                            (Ojs.bool_to_js x3416);
                          Ojs.set_prop_ascii x3420 "collation"
                            (Ojs.string_to_js x3417);
                          Ojs.set_prop_ascii x3420 "caseFirst"
                            (Ojs.string_to_js x3418);
                          Ojs.set_prop_ascii x3420 "numeric"
                            (Ojs.bool_to_js x3419);
                          t_of_js x3420
        let cast_from = Obj.magic
      end
    module CollatorOptions =
      struct
        type t = [ `Intl_CollatorOptions ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x3422 : Ojs.t) -> t_of_js x3422
        and t_0_to_js : t_0 -> Ojs.t = fun (x3421 : t) -> t_to_js x3421
        type tags = [ `Intl_CollatorOptions ]
        type tags_0 = tags
        type 'tags this =
          'tags intf constraint 'tags = [> `Intl_CollatorOptions ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x3425 : Ojs.t) -> intf_of_js __tags_of_js x3425
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x3423 : __tags intf) -> intf_to_js __tags_to_js x3423
        let (get_usage : 'tags this -> string option) =
          fun (x3427 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3427) "usage")
        let (set_usage :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x3430 : 'tags this) ->
            fun (x3431 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3430) "usage"
                (match x3431 with
                 | `Undefined x3432 -> undefined_to_js x3432
                 | `U1 x3433 -> Ojs.string_to_js x3433)
        let (get_localeMatcher : 'tags this -> string option) =
          fun (x3435 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3435)
                 "localeMatcher")
        let (set_localeMatcher :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x3438 : 'tags this) ->
            fun (x3439 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3438) "localeMatcher"
                (match x3439 with
                 | `Undefined x3440 -> undefined_to_js x3440
                 | `U1 x3441 -> Ojs.string_to_js x3441)
        let (get_numeric : 'tags this -> bool option) =
          fun (x3443 : 'tags this) ->
            Ojs.option_of_js Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3443) "numeric")
        let (set_numeric :
          'tags this -> [ `Undefined of undefined  | `U1 of bool ] -> unit) =
          fun (x3446 : 'tags this) ->
            fun (x3447 : [ `Undefined of undefined  | `U1 of bool ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3446) "numeric"
                (match x3447 with
                 | `Undefined x3448 -> undefined_to_js x3448
                 | `U1 x3449 -> Ojs.bool_to_js x3449)
        let (get_caseFirst : 'tags this -> string option) =
          fun (x3451 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3451) "caseFirst")
        let (set_caseFirst :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x3454 : 'tags this) ->
            fun (x3455 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3454) "caseFirst"
                (match x3455 with
                 | `Undefined x3456 -> undefined_to_js x3456
                 | `U1 x3457 -> Ojs.string_to_js x3457)
        let (get_sensitivity : 'tags this -> string option) =
          fun (x3459 : 'tags this) ->
            Ojs.option_of_js Ojs.string_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3459) "sensitivity")
        let (set_sensitivity :
          'tags this -> [ `Undefined of undefined  | `U1 of string ] -> unit)
          =
          fun (x3462 : 'tags this) ->
            fun (x3463 : [ `Undefined of undefined  | `U1 of string ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3462) "sensitivity"
                (match x3463 with
                 | `Undefined x3464 -> undefined_to_js x3464
                 | `U1 x3465 -> Ojs.string_to_js x3465)
        let (get_ignorePunctuation : 'tags this -> bool option) =
          fun (x3467 : 'tags this) ->
            Ojs.option_of_js Ojs.bool_of_js
              (Ojs.get_prop_ascii (this_to_js Obj.magic x3467)
                 "ignorePunctuation")
        let (set_ignorePunctuation :
          'tags this -> [ `Undefined of undefined  | `U1 of bool ] -> unit) =
          fun (x3470 : 'tags this) ->
            fun (x3471 : [ `Undefined of undefined  | `U1 of bool ]) ->
              Ojs.set_prop_ascii (this_to_js Obj.magic x3470)
                "ignorePunctuation"
                (match x3471 with
                 | `Undefined x3472 -> undefined_to_js x3472
                 | `U1 x3473 -> Ojs.bool_to_js x3473)
        let (create :
          ?usage:string ->
            ?localeMatcher:string ->
              ?numeric:bool ->
                ?caseFirst:string ->
                  ?sensitivity:string -> ?ignorePunctuation:bool -> unit -> t)
          =
          fun ?usage:(x3475 : string option) ->
            fun ?localeMatcher:(x3476 : string option) ->
              fun ?numeric:(x3477 : bool option) ->
                fun ?caseFirst:(x3478 : string option) ->
                  fun ?sensitivity:(x3479 : string option) ->
                    fun ?ignorePunctuation:(x3480 : bool option) ->
                      fun () ->
                        let x3481 = Ojs.empty_obj () in
                        (match x3475 with
                         | Some x3487 ->
                             Ojs.set_prop_ascii x3481 "usage"
                               (Ojs.string_to_js x3487)
                         | None -> ());
                        (match x3476 with
                         | Some x3486 ->
                             Ojs.set_prop_ascii x3481 "localeMatcher"
                               (Ojs.string_to_js x3486)
                         | None -> ());
                        (match x3477 with
                         | Some x3485 ->
                             Ojs.set_prop_ascii x3481 "numeric"
                               (Ojs.bool_to_js x3485)
                         | None -> ());
                        (match x3478 with
                         | Some x3484 ->
                             Ojs.set_prop_ascii x3481 "caseFirst"
                               (Ojs.string_to_js x3484)
                         | None -> ());
                        (match x3479 with
                         | Some x3483 ->
                             Ojs.set_prop_ascii x3481 "sensitivity"
                               (Ojs.string_to_js x3483)
                         | None -> ());
                        (match x3480 with
                         | Some x3482 ->
                             Ojs.set_prop_ascii x3481 "ignorePunctuation"
                               (Ojs.bool_to_js x3482)
                         | None -> ());
                        t_of_js x3481
        let cast_from = Obj.magic
      end
    module Collator =
      struct
        type t = [ `Intl_Collator ] intf
        let rec t_of_js : Ojs.t -> t = Obj.magic
        and t_to_js : t -> Ojs.t = Obj.magic
        type t_0 = t
        let rec t_0_of_js : Ojs.t -> t_0 =
          fun (x3489 : Ojs.t) -> t_of_js x3489
        and t_0_to_js : t_0 -> Ojs.t = fun (x3488 : t) -> t_to_js x3488
        type tags = [ `Intl_Collator ]
        type tags_0 = tags
        type 'tags this = 'tags intf constraint 'tags = [> `Intl_Collator ]
        let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this
          = fun (type __tags) ->
          fun (__tags_of_js : Ojs.t -> __tags) ->
            fun (x3492 : Ojs.t) -> intf_of_js __tags_of_js x3492
        and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t =
          fun (type __tags) ->
          fun (__tags_to_js : __tags -> Ojs.t) ->
            fun (x3490 : __tags intf) -> intf_to_js __tags_to_js x3490
        let (compare : 'tags this -> x:string -> y:string -> float) =
          fun (x3496 : 'tags this) ->
            fun ~x:(x3494 : string) ->
              fun ~y:(x3495 : string) ->
                Ojs.float_of_js
                  (Ojs.call (this_to_js Obj.magic x3496) "compare"
                     [|(Ojs.string_to_js x3494);(Ojs.string_to_js x3495)|])
        let (resolvedOptions : 'tags this -> ResolvedCollatorOptions.t) =
          fun (x3498 : 'tags this) ->
            ResolvedCollatorOptions.t_of_js
              (Ojs.call (this_to_js Obj.magic x3498) "resolvedOptions" [||])
        let cast_from = Obj.magic
        let (create :
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:CollatorOptions.t -> unit -> t)
          =
          fun
            ?locales:(x3500 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x3501 : CollatorOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.new_obj_arr
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "Collator")
                     (let x3502 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      (match x3500 with
                       | Some x3504 ->
                           ignore
                             (Ojs.call x3502 "push"
                                [|((match x3504 with
                                    | `U1 x3505 -> Ojs.string_to_js x3505
                                    | `U2 x3506 ->
                                        Ojs.list_to_js Ojs.string_to_js x3506))|])
                       | None -> ());
                      (match x3501 with
                       | Some x3503 ->
                           ignore
                             (Ojs.call x3502 "push"
                                [|(CollatorOptions.t_to_js x3503)|])
                       | None -> ());
                      x3502))
        let (invoke :
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:CollatorOptions.t -> unit -> t)
          =
          fun
            ?locales:(x3508 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x3509 : CollatorOptions.t option) ->
              fun () ->
                t_of_js
                  (Ojs.call
                     (Ojs.get_prop_ascii
                        (Ojs.get_prop_ascii Ojs.global "Intl") "Collator")
                     "apply"
                     [|Ojs.null;((let x3510 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  (match x3508 with
                                   | Some x3512 ->
                                       ignore
                                         (Ojs.call x3510 "push"
                                            [|((match x3512 with
                                                | `U1 x3513 ->
                                                    Ojs.string_to_js x3513
                                                | `U2 x3514 ->
                                                    Ojs.list_to_js
                                                      Ojs.string_to_js x3514))|])
                                   | None -> ());
                                  (match x3509 with
                                   | Some x3511 ->
                                       ignore
                                         (Ojs.call x3510 "push"
                                            [|(CollatorOptions.t_to_js x3511)|])
                                   | None -> ());
                                  x3510))|])
        let (supportedLocalesOf :
          locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:CollatorOptions.t -> unit -> string list)
          =
          fun ~locales:(x3516 : [ `U1 of string  | `U2 of string list ]) ->
            fun ?options:(x3517 : CollatorOptions.t option) ->
              fun () ->
                Ojs.list_of_js Ojs.string_of_js
                  (let x3523 =
                     Ojs.get_prop_ascii
                       (Ojs.get_prop_ascii Ojs.global "Intl") "Collator" in
                   Ojs.call (Ojs.get_prop_ascii x3523 "supportedLocalesOf")
                     "apply"
                     [|x3523;((let x3518 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3518 "push"
                                    [|((match x3516 with
                                        | `U1 x3520 -> Ojs.string_to_js x3520
                                        | `U2 x3521 ->
                                            Ojs.list_to_js Ojs.string_to_js
                                              x3521))|]);
                               (match x3517 with
                                | Some x3519 ->
                                    ignore
                                      (Ojs.call x3518 "push"
                                         [|(CollatorOptions.t_to_js x3519)|])
                                | None -> ());
                               x3518))|])
      end
  end
module String =
  struct
    module AnonymousInterface6 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x3526 : Ojs.t) -> x3526
        and t_to_js : t -> Ojs.t = fun (x3525 : Ojs.t) -> x3525
        let (get_raw : t -> (string ArrayLike.t, string list) union2) =
          fun (x3527 : t) ->
            union2_of_js
              (fun (x3528 : Ojs.t) ->
                 ArrayLike.t_of_js Ojs.string_of_js x3528)
              (fun (x3530 : Ojs.t) -> Ojs.list_of_js Ojs.string_of_js x3530)
              (Ojs.get_prop_ascii (t_to_js x3527) "raw")
        let (set_raw :
          t -> [ `U1 of string list  | `U2 of string ArrayLike.t ] -> unit) =
          fun (x3532 : t) ->
            fun (x3533 : [ `U1 of string list  | `U2 of string ArrayLike.t ])
              ->
              Ojs.set_prop_ascii (t_to_js x3532) "raw"
                (match x3533 with
                 | `U1 x3534 -> Ojs.list_to_js Ojs.string_to_js x3534
                 | `U2 x3536 -> ArrayLike.t_to_js Ojs.string_to_js x3536)
        let (create :
          raw:(string ArrayLike.t, string list) union2 -> unit -> t) =
          fun ~raw:(x3538 : (string ArrayLike.t, string list) union2) ->
            fun () ->
              let x3539 = Ojs.empty_obj () in
              Ojs.set_prop_ascii x3539 "raw"
                (union2_to_js
                   (fun (x3540 : string ArrayLike.t) ->
                      ArrayLike.t_to_js Ojs.string_to_js x3540)
                   (fun (x3542 : string list) ->
                      Ojs.list_to_js Ojs.string_to_js x3542) x3538);
              t_of_js x3539
      end
    module AnonymousInterface22 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x3545 : Ojs.t) -> x3545
        and t_to_js : t -> Ojs.t = fun (x3544 : Ojs.t) -> x3544
      end
    module AnonymousInterface21 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x3547 : Ojs.t) -> x3547
        and t_to_js : t -> Ojs.t = fun (x3546 : Ojs.t) -> x3546
      end
    module AnonymousInterface20 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x3549 : Ojs.t) -> x3549
        and t_to_js : t -> Ojs.t = fun (x3548 : Ojs.t) -> x3548
      end
    module AnonymousInterface19 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x3551 : Ojs.t) -> x3551
        and t_to_js : t -> Ojs.t = fun (x3550 : Ojs.t) -> x3550
      end
    module AnonymousInterface18 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x3553 : Ojs.t) -> x3553
        and t_to_js : t -> Ojs.t = fun (x3552 : Ojs.t) -> x3552
      end
    type t =
      [ `String  | string ArrayLike.tags_1 | string IterableIterator.tags_1]
        intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3555 : Ojs.t) -> t_of_js x3555
    and t_0_to_js : t_0 -> Ojs.t = fun (x3554 : t) -> t_to_js x3554
    type tags =
      [ `String  | string ArrayLike.tags_1 | string IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `String ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x3558 : Ojs.t) -> intf_of_js __tags_of_js x3558
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x3556 : __tags intf) -> intf_to_js __tags_to_js x3556
    let (replaceAll :
      'tags this ->
        searchValue:[ `U1 of string  | `U2 of RegExp.t ] ->
          replaceValue:string -> string)
      =
      fun (x3564 : 'tags this) ->
        fun ~searchValue:(x3560 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          fun ~replaceValue:(x3563 : string) ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3564) "replaceAll"
                 [|((match x3560 with
                     | `U1 x3561 -> Ojs.string_to_js x3561
                     | `U2 x3562 -> RegExp.t_to_js x3562));(Ojs.string_to_js
                                                              x3563)|])
    let (replaceAll' :
      'tags this ->
        searchValue:[ `U1 of string  | `U2 of RegExp.t ] ->
          replacer:(substring:string -> args:any list -> string) -> string)
      =
      fun (x3572 : 'tags this) ->
        fun ~searchValue:(x3566 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          fun ~replacer:(x3569 : substring:string -> args:any list -> string)
            ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3572) "replaceAll"
                 [|((match x3566 with
                     | `U1 x3567 -> Ojs.string_to_js x3567
                     | `U2 x3568 -> RegExp.t_to_js x3568));(Ojs.fun_to_js_args
                                                              (fun
                                                                 (x3570 : _)
                                                                 ->
                                                                 Ojs.string_to_js
                                                                   (x3569
                                                                    ~substring:(
                                                                    Ojs.string_of_js
                                                                    (Ojs.array_get
                                                                    x3570 0))
                                                                    ~args:(
                                                                    Ojs.list_of_js_from
                                                                    any_of_js
                                                                    x3570 1))))|])
    let (replaceAll'' :
      'tags this ->
        searchValue:[ `U1 of string  | `U2 of RegExp.t ] ->
          replaceValue:string -> string)
      =
      fun (x3578 : 'tags this) ->
        fun ~searchValue:(x3574 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          fun ~replaceValue:(x3577 : string) ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3578) "replaceAll"
                 [|((match x3574 with
                     | `U1 x3575 -> Ojs.string_to_js x3575
                     | `U2 x3576 -> RegExp.t_to_js x3576));(Ojs.string_to_js
                                                              x3577)|])
    let (replaceAll''' :
      'tags this ->
        searchValue:[ `U1 of string  | `U2 of RegExp.t ] ->
          replacer:(substring:string -> args:any list -> string) -> string)
      =
      fun (x3586 : 'tags this) ->
        fun ~searchValue:(x3580 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          fun ~replacer:(x3583 : substring:string -> args:any list -> string)
            ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3586) "replaceAll"
                 [|((match x3580 with
                     | `U1 x3581 -> Ojs.string_to_js x3581
                     | `U2 x3582 -> RegExp.t_to_js x3582));(Ojs.fun_to_js_args
                                                              (fun
                                                                 (x3584 : _)
                                                                 ->
                                                                 Ojs.string_to_js
                                                                   (x3583
                                                                    ~substring:(
                                                                    Ojs.string_of_js
                                                                    (Ojs.array_get
                                                                    x3584 0))
                                                                    ~args:(
                                                                    Ojs.list_of_js_from
                                                                    any_of_js
                                                                    x3584 1))))|])
    let (matchAll :
      'tags this -> regexp:RegExp.t -> RegExpMatchArray.t IterableIterator.t)
      =
      fun (x3589 : 'tags this) ->
        fun ~regexp:(x3588 : RegExp.t) ->
          IterableIterator.t_of_js RegExpMatchArray.t_of_js
            (Ojs.call (this_to_js Obj.magic x3589) "matchAll"
               [|(RegExp.t_to_js x3588)|])
    let (trimEnd : 'tags this -> string) =
      fun (x3592 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3592) "trimEnd" [||])
    let (trimStart : 'tags this -> string) =
      fun (x3594 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3594) "trimStart" [||])
    let (trimLeft : 'tags this -> string) =
      fun (x3596 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3596) "trimLeft" [||])
    let (trimRight : 'tags this -> string) =
      fun (x3598 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3598) "trimRight" [||])
    let (padStart :
      'tags this -> maxLength:float -> ?fillString:string -> unit -> string)
      =
      fun (x3604 : 'tags this) ->
        fun ~maxLength:(x3600 : float) ->
          fun ?fillString:(x3601 : string option) ->
            fun () ->
              Ojs.string_of_js
                (let x3606 = this_to_js Obj.magic x3604 in
                 Ojs.call (Ojs.get_prop_ascii x3606 "padStart") "apply"
                   [|x3606;((let x3602 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3602 "push"
                                  [|(Ojs.float_to_js x3600)|]);
                             (match x3601 with
                              | Some x3603 ->
                                  ignore
                                    (Ojs.call x3602 "push"
                                       [|(Ojs.string_to_js x3603)|])
                              | None -> ());
                             x3602))|])
    let (padEnd :
      'tags this -> maxLength:float -> ?fillString:string -> unit -> string)
      =
      fun (x3611 : 'tags this) ->
        fun ~maxLength:(x3607 : float) ->
          fun ?fillString:(x3608 : string option) ->
            fun () ->
              Ojs.string_of_js
                (let x3613 = this_to_js Obj.magic x3611 in
                 Ojs.call (Ojs.get_prop_ascii x3613 "padEnd") "apply"
                   [|x3613;((let x3609 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3609 "push"
                                  [|(Ojs.float_to_js x3607)|]);
                             (match x3608 with
                              | Some x3610 ->
                                  ignore
                                    (Ojs.call x3609 "push"
                                       [|(Ojs.string_to_js x3610)|])
                              | None -> ());
                             x3609))|])
    let (match_ :
      'tags this ->
        matcher:AnonymousInterface18.t -> RegExpMatchArray.t option)
      =
      fun (x3615 : 'tags this) ->
        fun ~matcher:(x3614 : AnonymousInterface18.t) ->
          Ojs.option_of_js RegExpMatchArray.t_of_js
            (Ojs.call (this_to_js Obj.magic x3615) "match"
               [|(AnonymousInterface18.t_to_js x3614)|])
    let (replace :
      'tags this ->
        searchValue:AnonymousInterface19.t -> replaceValue:string -> string)
      =
      fun (x3620 : 'tags this) ->
        fun ~searchValue:(x3618 : AnonymousInterface19.t) ->
          fun ~replaceValue:(x3619 : string) ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3620) "replace"
                 [|(AnonymousInterface19.t_to_js x3618);(Ojs.string_to_js
                                                           x3619)|])
    let (replace' :
      'tags this ->
        searchValue:AnonymousInterface20.t ->
          replacer:(substring:string -> args:any list -> string) -> string)
      =
      fun (x3626 : 'tags this) ->
        fun ~searchValue:(x3622 : AnonymousInterface20.t) ->
          fun ~replacer:(x3623 : substring:string -> args:any list -> string)
            ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3626) "replace"
                 [|(AnonymousInterface20.t_to_js x3622);(Ojs.fun_to_js_args
                                                           (fun (x3624 : _)
                                                              ->
                                                              Ojs.string_to_js
                                                                (x3623
                                                                   ~substring:(
                                                                   Ojs.string_of_js
                                                                    (Ojs.array_get
                                                                    x3624 0))
                                                                   ~args:(
                                                                   Ojs.list_of_js_from
                                                                    any_of_js
                                                                    x3624 1))))|])
    let (search : 'tags this -> searcher:AnonymousInterface21.t -> float) =
      fun (x3629 : 'tags this) ->
        fun ~searcher:(x3628 : AnonymousInterface21.t) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x3629) "search"
               [|(AnonymousInterface21.t_to_js x3628)|])
    let (split :
      'tags this ->
        splitter:AnonymousInterface22.t ->
          ?limit:float -> unit -> string list)
      =
      fun (x3635 : 'tags this) ->
        fun ~splitter:(x3631 : AnonymousInterface22.t) ->
          fun ?limit:(x3632 : float option) ->
            fun () ->
              Ojs.list_of_js Ojs.string_of_js
                (let x3637 = this_to_js Obj.magic x3635 in
                 Ojs.call (Ojs.get_prop_ascii x3637 "split") "apply"
                   [|x3637;((let x3633 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3633 "push"
                                  [|(AnonymousInterface22.t_to_js x3631)|]);
                             (match x3632 with
                              | Some x3634 ->
                                  ignore
                                    (Ojs.call x3633 "push"
                                       [|(Ojs.float_to_js x3634)|])
                              | None -> ());
                             x3633))|])
    let (codePointAt : 'tags this -> pos:float -> float option) =
      fun (x3640 : 'tags this) ->
        fun ~pos:(x3639 : float) ->
          Ojs.option_of_js Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x3640) "codePointAt"
               [|(Ojs.float_to_js x3639)|])
    let (includes :
      'tags this -> searchString:string -> ?position:float -> unit -> bool) =
      fun (x3647 : 'tags this) ->
        fun ~searchString:(x3643 : string) ->
          fun ?position:(x3644 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x3649 = this_to_js Obj.magic x3647 in
                 Ojs.call (Ojs.get_prop_ascii x3649 "includes") "apply"
                   [|x3649;((let x3645 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3645 "push"
                                  [|(Ojs.string_to_js x3643)|]);
                             (match x3644 with
                              | Some x3646 ->
                                  ignore
                                    (Ojs.call x3645 "push"
                                       [|(Ojs.float_to_js x3646)|])
                              | None -> ());
                             x3645))|])
    let (endsWith :
      'tags this -> searchString:string -> ?endPosition:float -> unit -> bool)
      =
      fun (x3654 : 'tags this) ->
        fun ~searchString:(x3650 : string) ->
          fun ?endPosition:(x3651 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x3656 = this_to_js Obj.magic x3654 in
                 Ojs.call (Ojs.get_prop_ascii x3656 "endsWith") "apply"
                   [|x3656;((let x3652 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3652 "push"
                                  [|(Ojs.string_to_js x3650)|]);
                             (match x3651 with
                              | Some x3653 ->
                                  ignore
                                    (Ojs.call x3652 "push"
                                       [|(Ojs.float_to_js x3653)|])
                              | None -> ());
                             x3652))|])
    let (normalize :
      'tags this ->
        form:[ `U1 of [ `L_s11_NFC ]  | `U2 of [ `L_s12_NFD ] 
             | `U3 of [ `L_s13_NFKC ]  | `U4 of [ `L_s14_NFKD ] ]
          -> string)
      =
      fun (x3662 : 'tags this) ->
        fun
          ~form:(x3657 :
                  [ `U1 of [ `L_s11_NFC ]  | `U2 of [ `L_s12_NFD ] 
                  | `U3 of [ `L_s13_NFKC ]  | `U4 of [ `L_s14_NFKD ] ])
          ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3662) "normalize"
               [|((match x3657 with
                   | `U1 x3658 ->
                       (match x3658 with
                        | `L_s11_NFC -> Ojs.string_to_js "NFC")
                   | `U2 x3659 ->
                       (match x3659 with
                        | `L_s12_NFD -> Ojs.string_to_js "NFD")
                   | `U3 x3660 ->
                       (match x3660 with
                        | `L_s13_NFKC -> Ojs.string_to_js "NFKC")
                   | `U4 x3661 ->
                       (match x3661 with
                        | `L_s14_NFKD -> Ojs.string_to_js "NFKD")))|])
    let (normalize' : 'tags this -> ?form:string -> unit -> string) =
      fun (x3667 : 'tags this) ->
        fun ?form:(x3664 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x3669 = this_to_js Obj.magic x3667 in
               Ojs.call (Ojs.get_prop_ascii x3669 "normalize") "apply"
                 [|x3669;((let x3665 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3664 with
                            | Some x3666 ->
                                ignore
                                  (Ojs.call x3665 "push"
                                     [|(Ojs.string_to_js x3666)|])
                            | None -> ());
                           x3665))|])
    let (repeat : 'tags this -> count:float -> string) =
      fun (x3671 : 'tags this) ->
        fun ~count:(x3670 : float) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3671) "repeat"
               [|(Ojs.float_to_js x3670)|])
    let (startsWith :
      'tags this -> searchString:string -> ?position:float -> unit -> bool) =
      fun (x3677 : 'tags this) ->
        fun ~searchString:(x3673 : string) ->
          fun ?position:(x3674 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x3679 = this_to_js Obj.magic x3677 in
                 Ojs.call (Ojs.get_prop_ascii x3679 "startsWith") "apply"
                   [|x3679;((let x3675 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3675 "push"
                                  [|(Ojs.string_to_js x3673)|]);
                             (match x3674 with
                              | Some x3676 ->
                                  ignore
                                    (Ojs.call x3675 "push"
                                       [|(Ojs.float_to_js x3676)|])
                              | None -> ());
                             x3675))|])
    let (anchor : 'tags this -> name:string -> string) =
      fun (x3681 : 'tags this) ->
        fun ~name:(x3680 : string) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3681) "anchor"
               [|(Ojs.string_to_js x3680)|])
    let (big : 'tags this -> string) =
      fun (x3683 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x3683) "big" [||])
    let (blink : 'tags this -> string) =
      fun (x3685 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x3685) "blink" [||])
    let (bold : 'tags this -> string) =
      fun (x3687 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x3687) "bold" [||])
    let (fixed : 'tags this -> string) =
      fun (x3689 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x3689) "fixed" [||])
    let (fontcolor : 'tags this -> color:string -> string) =
      fun (x3692 : 'tags this) ->
        fun ~color:(x3691 : string) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3692) "fontcolor"
               [|(Ojs.string_to_js x3691)|])
    let (fontsize : 'tags this -> size:float -> string) =
      fun (x3695 : 'tags this) ->
        fun ~size:(x3694 : float) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3695) "fontsize"
               [|(Ojs.float_to_js x3694)|])
    let (fontsize' : 'tags this -> size:string -> string) =
      fun (x3698 : 'tags this) ->
        fun ~size:(x3697 : string) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3698) "fontsize"
               [|(Ojs.string_to_js x3697)|])
    let (italics : 'tags this -> string) =
      fun (x3700 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3700) "italics" [||])
    let (link : 'tags this -> url:string -> string) =
      fun (x3703 : 'tags this) ->
        fun ~url:(x3702 : string) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3703) "link"
               [|(Ojs.string_to_js x3702)|])
    let (small : 'tags this -> string) =
      fun (x3705 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x3705) "small" [||])
    let (strike : 'tags this -> string) =
      fun (x3707 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3707) "strike" [||])
    let (sub : 'tags this -> string) =
      fun (x3709 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x3709) "sub" [||])
    let (sup : 'tags this -> string) =
      fun (x3711 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x3711) "sup" [||])
    let (localeCompare :
      'tags this ->
        that:string ->
          ?locales:[ `U1 of string  | `U2 of string list ] ->
            ?options:Intl.CollatorOptions.t -> unit -> float)
      =
      fun (x3722 : 'tags this) ->
        fun ~that:(x3713 : string) ->
          fun
            ?locales:(x3714 : [ `U1 of string  | `U2 of string list ] option)
            ->
            fun ?options:(x3715 : Intl.CollatorOptions.t option) ->
              fun () ->
                Ojs.float_of_js
                  (let x3724 = this_to_js Obj.magic x3722 in
                   Ojs.call (Ojs.get_prop_ascii x3724 "localeCompare")
                     "apply"
                     [|x3724;((let x3716 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3716 "push"
                                    [|(Ojs.string_to_js x3713)|]);
                               (match x3714 with
                                | Some x3718 ->
                                    ignore
                                      (Ojs.call x3716 "push"
                                         [|((match x3718 with
                                             | `U1 x3719 ->
                                                 Ojs.string_to_js x3719
                                             | `U2 x3720 ->
                                                 Ojs.list_to_js
                                                   Ojs.string_to_js x3720))|])
                                | None -> ());
                               (match x3715 with
                                | Some x3717 ->
                                    ignore
                                      (Ojs.call x3716 "push"
                                         [|(Intl.CollatorOptions.t_to_js
                                              x3717)|])
                                | None -> ());
                               x3716))|])
    let (toString : 'tags this -> string) =
      fun (x3725 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3725) "toString" [||])
    let (charAt : 'tags this -> pos:float -> string) =
      fun (x3728 : 'tags this) ->
        fun ~pos:(x3727 : float) ->
          Ojs.string_of_js
            (Ojs.call (this_to_js Obj.magic x3728) "charAt"
               [|(Ojs.float_to_js x3727)|])
    let (charCodeAt : 'tags this -> index:float -> float) =
      fun (x3731 : 'tags this) ->
        fun ~index:(x3730 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x3731) "charCodeAt"
               [|(Ojs.float_to_js x3730)|])
    let (concat : 'tags this -> strings:string list -> string) =
      fun (x3736 : 'tags this) ->
        fun ~strings:(x3733 : string list) ->
          Ojs.string_of_js
            (let x3738 = this_to_js Obj.magic x3736 in
             Ojs.call (Ojs.get_prop_ascii x3738 "concat") "apply"
               [|x3738;((let x3734 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x3735 : string) ->
                              ignore
                                (Ojs.call x3734 "push"
                                   [|(Ojs.string_to_js x3735)|])) x3733;
                         x3734))|])
    let (indexOf :
      'tags this -> searchString:string -> ?position:float -> unit -> float)
      =
      fun (x3743 : 'tags this) ->
        fun ~searchString:(x3739 : string) ->
          fun ?position:(x3740 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x3745 = this_to_js Obj.magic x3743 in
                 Ojs.call (Ojs.get_prop_ascii x3745 "indexOf") "apply"
                   [|x3745;((let x3741 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3741 "push"
                                  [|(Ojs.string_to_js x3739)|]);
                             (match x3740 with
                              | Some x3742 ->
                                  ignore
                                    (Ojs.call x3741 "push"
                                       [|(Ojs.float_to_js x3742)|])
                              | None -> ());
                             x3741))|])
    let (lastIndexOf :
      'tags this -> searchString:string -> ?position:float -> unit -> float)
      =
      fun (x3750 : 'tags this) ->
        fun ~searchString:(x3746 : string) ->
          fun ?position:(x3747 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x3752 = this_to_js Obj.magic x3750 in
                 Ojs.call (Ojs.get_prop_ascii x3752 "lastIndexOf") "apply"
                   [|x3752;((let x3748 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3748 "push"
                                  [|(Ojs.string_to_js x3746)|]);
                             (match x3747 with
                              | Some x3749 ->
                                  ignore
                                    (Ojs.call x3748 "push"
                                       [|(Ojs.float_to_js x3749)|])
                              | None -> ());
                             x3748))|])
    let (localeCompare' : 'tags this -> that:string -> float) =
      fun (x3754 : 'tags this) ->
        fun ~that:(x3753 : string) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x3754) "localeCompare"
               [|(Ojs.string_to_js x3753)|])
    let (match_' :
      'tags this ->
        regexp:[ `U1 of string  | `U2 of RegExp.t ] ->
          RegExpMatchArray.t option)
      =
      fun (x3759 : 'tags this) ->
        fun ~regexp:(x3756 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          Ojs.option_of_js RegExpMatchArray.t_of_js
            (Ojs.call (this_to_js Obj.magic x3759) "match"
               [|((match x3756 with
                   | `U1 x3757 -> Ojs.string_to_js x3757
                   | `U2 x3758 -> RegExp.t_to_js x3758))|])
    let (replace'' :
      'tags this ->
        searchValue:[ `U1 of string  | `U2 of RegExp.t ] ->
          replaceValue:string -> string)
      =
      fun (x3766 : 'tags this) ->
        fun ~searchValue:(x3762 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          fun ~replaceValue:(x3765 : string) ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3766) "replace"
                 [|((match x3762 with
                     | `U1 x3763 -> Ojs.string_to_js x3763
                     | `U2 x3764 -> RegExp.t_to_js x3764));(Ojs.string_to_js
                                                              x3765)|])
    let (replace''' :
      'tags this ->
        searchValue:[ `U1 of string  | `U2 of RegExp.t ] ->
          replacer:(substring:string -> args:any list -> string) -> string)
      =
      fun (x3774 : 'tags this) ->
        fun ~searchValue:(x3768 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          fun ~replacer:(x3771 : substring:string -> args:any list -> string)
            ->
            Ojs.string_of_js
              (Ojs.call (this_to_js Obj.magic x3774) "replace"
                 [|((match x3768 with
                     | `U1 x3769 -> Ojs.string_to_js x3769
                     | `U2 x3770 -> RegExp.t_to_js x3770));(Ojs.fun_to_js_args
                                                              (fun
                                                                 (x3772 : _)
                                                                 ->
                                                                 Ojs.string_to_js
                                                                   (x3771
                                                                    ~substring:(
                                                                    Ojs.string_of_js
                                                                    (Ojs.array_get
                                                                    x3772 0))
                                                                    ~args:(
                                                                    Ojs.list_of_js_from
                                                                    any_of_js
                                                                    x3772 1))))|])
    let (search' :
      'tags this -> regexp:[ `U1 of string  | `U2 of RegExp.t ] -> float) =
      fun (x3779 : 'tags this) ->
        fun ~regexp:(x3776 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x3779) "search"
               [|((match x3776 with
                   | `U1 x3777 -> Ojs.string_to_js x3777
                   | `U2 x3778 -> RegExp.t_to_js x3778))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> string)
      =
      fun (x3786 : 'tags this) ->
        fun ?start:(x3781 : float option) ->
          fun ?end_:(x3782 : float option) ->
            fun () ->
              Ojs.string_of_js
                (let x3788 = this_to_js Obj.magic x3786 in
                 Ojs.call (Ojs.get_prop_ascii x3788 "slice") "apply"
                   [|x3788;((let x3783 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x3781 with
                              | Some x3785 ->
                                  ignore
                                    (Ojs.call x3783 "push"
                                       [|(Ojs.float_to_js x3785)|])
                              | None -> ());
                             (match x3782 with
                              | Some x3784 ->
                                  ignore
                                    (Ojs.call x3783 "push"
                                       [|(Ojs.float_to_js x3784)|])
                              | None -> ());
                             x3783))|])
    let (split' :
      'tags this ->
        separator:[ `U1 of string  | `U2 of RegExp.t ] ->
          ?limit:float -> unit -> string list)
      =
      fun (x3795 : 'tags this) ->
        fun ~separator:(x3789 : [ `U1 of string  | `U2 of RegExp.t ]) ->
          fun ?limit:(x3790 : float option) ->
            fun () ->
              Ojs.list_of_js Ojs.string_of_js
                (let x3797 = this_to_js Obj.magic x3795 in
                 Ojs.call (Ojs.get_prop_ascii x3797 "split") "apply"
                   [|x3797;((let x3791 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3791 "push"
                                  [|((match x3789 with
                                      | `U1 x3793 -> Ojs.string_to_js x3793
                                      | `U2 x3794 -> RegExp.t_to_js x3794))|]);
                             (match x3790 with
                              | Some x3792 ->
                                  ignore
                                    (Ojs.call x3791 "push"
                                       [|(Ojs.float_to_js x3792)|])
                              | None -> ());
                             x3791))|])
    let (substring :
      'tags this -> start:float -> ?end_:float -> unit -> string) =
      fun (x3803 : 'tags this) ->
        fun ~start:(x3799 : float) ->
          fun ?end_:(x3800 : float option) ->
            fun () ->
              Ojs.string_of_js
                (let x3805 = this_to_js Obj.magic x3803 in
                 Ojs.call (Ojs.get_prop_ascii x3805 "substring") "apply"
                   [|x3805;((let x3801 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3801 "push"
                                  [|(Ojs.float_to_js x3799)|]);
                             (match x3800 with
                              | Some x3802 ->
                                  ignore
                                    (Ojs.call x3801 "push"
                                       [|(Ojs.float_to_js x3802)|])
                              | None -> ());
                             x3801))|])
    let (toLowerCase : 'tags this -> string) =
      fun (x3806 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3806) "toLowerCase" [||])
    let (toLocaleLowerCase :
      'tags this ->
        ?locales:[ `U1 of string  | `U2 of string list ] -> unit -> string)
      =
      fun (x3814 : 'tags this) ->
        fun ?locales:(x3808 : [ `U1 of string  | `U2 of string list ] option)
          ->
          fun () ->
            Ojs.string_of_js
              (let x3816 = this_to_js Obj.magic x3814 in
               Ojs.call (Ojs.get_prop_ascii x3816 "toLocaleLowerCase")
                 "apply"
                 [|x3816;((let x3809 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3808 with
                            | Some x3810 ->
                                ignore
                                  (Ojs.call x3809 "push"
                                     [|((match x3810 with
                                         | `U1 x3811 ->
                                             Ojs.string_to_js x3811
                                         | `U2 x3812 ->
                                             Ojs.list_to_js Ojs.string_to_js
                                               x3812))|])
                            | None -> ());
                           x3809))|])
    let (toUpperCase : 'tags this -> string) =
      fun (x3817 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3817) "toUpperCase" [||])
    let (toLocaleUpperCase :
      'tags this ->
        ?locales:[ `U1 of string  | `U2 of string list ] -> unit -> string)
      =
      fun (x3825 : 'tags this) ->
        fun ?locales:(x3819 : [ `U1 of string  | `U2 of string list ] option)
          ->
          fun () ->
            Ojs.string_of_js
              (let x3827 = this_to_js Obj.magic x3825 in
               Ojs.call (Ojs.get_prop_ascii x3827 "toLocaleUpperCase")
                 "apply"
                 [|x3827;((let x3820 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x3819 with
                            | Some x3821 ->
                                ignore
                                  (Ojs.call x3820 "push"
                                     [|((match x3821 with
                                         | `U1 x3822 ->
                                             Ojs.string_to_js x3822
                                         | `U2 x3823 ->
                                             Ojs.list_to_js Ojs.string_to_js
                                               x3823))|])
                            | None -> ());
                           x3820))|])
    let (trim : 'tags this -> string) =
      fun (x3828 : 'tags this) ->
        Ojs.string_of_js (Ojs.call (this_to_js Obj.magic x3828) "trim" [||])
    let (get_length : 'tags this -> float) =
      fun (x3830 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3830) "length")
    let (substr :
      'tags this -> from:float -> ?length:float -> unit -> string) =
      fun (x3836 : 'tags this) ->
        fun ~from:(x3832 : float) ->
          fun ?length:(x3833 : float option) ->
            fun () ->
              Ojs.string_of_js
                (let x3838 = this_to_js Obj.magic x3836 in
                 Ojs.call (Ojs.get_prop_ascii x3838 "substr") "apply"
                   [|x3838;((let x3834 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3834 "push"
                                  [|(Ojs.float_to_js x3832)|]);
                             (match x3833 with
                              | Some x3835 ->
                                  ignore
                                    (Ojs.call x3834 "push"
                                       [|(Ojs.float_to_js x3835)|])
                              | None -> ());
                             x3834))|])
    let (valueOf : 'tags this -> string) =
      fun (x3839 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x3839) "valueOf" [||])
    let (get : 'tags this -> float -> string) =
      fun (x3841 : 'tags this) ->
        fun (x3843 : float) ->
          Ojs.string_of_js
            (Ojs.get_prop (this_to_js Obj.magic x3841)
               (Ojs.float_to_js x3843))
    let (fromCodePoint : float list -> string) =
      fun (x3844 : float list) ->
        Ojs.string_of_js
          (let x3847 = Ojs.get_prop_ascii Ojs.global "String" in
           Ojs.call (Ojs.get_prop_ascii x3847 "fromCodePoint") "apply"
             [|x3847;((let x3845 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x3846 : float) ->
                            ignore
                              (Ojs.call x3845 "push"
                                 [|(Ojs.float_to_js x3846)|])) x3844;
                       x3845))|])
    let (raw :
      template:AnonymousInterface6.t -> substitutions:any list -> string) =
      fun ~template:(x3848 : AnonymousInterface6.t) ->
        fun ~substitutions:(x3849 : any list) ->
          Ojs.string_of_js
            (let x3852 = Ojs.get_prop_ascii Ojs.global "String" in
             Ojs.call (Ojs.get_prop_ascii x3852 "raw") "apply"
               [|x3852;((let x3850 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         ignore
                           (Ojs.call x3850 "push"
                              [|(AnonymousInterface6.t_to_js x3848)|]);
                         List.iter
                           (fun (x3851 : any) ->
                              ignore
                                (Ojs.call x3850 "push" [|(any_to_js x3851)|]))
                           x3849;
                         x3850))|])
    let (create : ?value:any -> unit -> t) =
      fun ?value:(x3853 : any option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "String")
               (let x3854 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x3853 with
                 | Some x3855 ->
                     ignore (Ojs.call x3854 "push" [|(any_to_js x3855)|])
                 | None -> ());
                x3854))
    let (invoke : ?value:any -> unit -> string) =
      fun ?value:(x3856 : any option) ->
        fun () ->
          Ojs.string_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "String") "apply"
               [|Ojs.null;((let x3857 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x3856 with
                             | Some x3858 ->
                                 ignore
                                   (Ojs.call x3857 "push"
                                      [|(any_to_js x3858)|])
                             | None -> ());
                            x3857))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "String")
             "prototype")
    let (fromCharCode : float list -> string) =
      fun (x3859 : float list) ->
        Ojs.string_of_js
          (let x3862 = Ojs.get_prop_ascii Ojs.global "String" in
           Ojs.call (Ojs.get_prop_ascii x3862 "fromCharCode") "apply"
             [|x3862;((let x3860 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x3861 : float) ->
                            ignore
                              (Ojs.call x3860 "push"
                                 [|(Ojs.float_to_js x3861)|])) x3859;
                       x3860))|])
    let cast_from = Obj.magic
    let (of_ml : string -> t) =
      fun (x3863 : string) -> t_of_js (Ojs.string_to_js x3863)
    let (to_ml : t -> string) =
      fun (x3864 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x3864) "valueOf" [||])
  end
module Set =
  struct
    type 'T t = [ `Set of 'T  | 'T IterableIterator.tags_1] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x3867 : Ojs.t) -> t_of_js __T_of_js x3867
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x3865 : __T t) -> t_to_js __T_to_js x3865
    type 'T tags = [ `Set of 'T  | 'T IterableIterator.tags_1]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this = 'tags intf constraint 'tags = [> `Set of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x3871 : Ojs.t) -> intf_of_js __tags_of_js x3871
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x3869 : __tags intf) -> intf_to_js __tags_to_js x3869
    let (entries : ('tags, 'T) this -> ('T * 'T) IterableIterator.t) =
      fun (x3873 : ('tags, 'T) this) ->
        IterableIterator.t_of_js
          (fun (x3876 : Ojs.t) ->
             let x3877 = x3876 in
             ((Obj.magic (Ojs.array_get x3877 0)),
               (Obj.magic (Ojs.array_get x3877 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic x3873) "entries" [||])
    let (keys : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x3878 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x3878) "keys" [||])
    let (values : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x3882 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x3882) "values" [||])
    let (add : ('tags, 'T) this -> value:'T -> ('tags, 'T) this) =
      fun (x3887 : ('tags, 'T) this) ->
        fun ~value:(x3886 : 'T) ->
          this_of_js Obj.magic Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic x3887) "add"
               [|(Obj.magic x3886)|])
    let (clear : ('tags, 'T) this -> unit) =
      fun (x3892 : ('tags, 'T) this) ->
        ignore (Ojs.call (this_to_js Obj.magic Obj.magic x3892) "clear" [||])
    let (delete : ('tags, 'T) this -> value:'T -> bool) =
      fun (x3896 : ('tags, 'T) this) ->
        fun ~value:(x3895 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x3896) "delete"
               [|(Obj.magic x3895)|])
    let (forEach :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> value2:'T -> set_:'T t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x3907 : ('tags, 'T) this) ->
        fun ~callbackfn:(x3899 : value:'T -> value2:'T -> set_:'T t -> unit)
          ->
          fun ?thisArg:(x3900 : any option) ->
            fun () ->
              ignore
                (let x3910 = this_to_js Obj.magic Obj.magic x3907 in
                 Ojs.call (Ojs.get_prop_ascii x3910 "forEach") "apply"
                   [|x3910;((let x3901 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x3901 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x3903 : Ojs.t) ->
                                          fun (x3904 : Ojs.t) ->
                                            fun (x3905 : Ojs.t) ->
                                              x3899 ~value:(Obj.magic x3903)
                                                ~value2:(Obj.magic x3904)
                                                ~set_:(t_of_js Obj.magic
                                                         x3905)))|]);
                             (match x3900 with
                              | Some x3902 ->
                                  ignore
                                    (Ojs.call x3901 "push"
                                       [|(any_to_js x3902)|])
                              | None -> ());
                             x3901))|])
    let (has : ('tags, 'T) this -> value:'T -> bool) =
      fun (x3912 : ('tags, 'T) this) ->
        fun ~value:(x3911 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x3912) "has"
               [|(Obj.magic x3911)|])
    let (get_size : ('tags, 'T) this -> float) =
      fun (x3915 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x3915) "size")
    let (create : ?iterable:'T Iterable.t option -> unit -> 'T t) =
      fun ?iterable:(x3918 : 'T Iterable.t option option) ->
        fun () ->
          t_of_js Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Set")
               (let x3919 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x3918 with
                 | Some x3920 ->
                     ignore
                       (Ojs.call x3919 "push"
                          [|(Ojs.option_to_js
                               (fun (x3921 : 'T Iterable.t) ->
                                  Iterable.t_to_js Obj.magic x3921) x3920)|])
                 | None -> ());
                x3919))
    let (create' : ?values:'T list option -> unit -> 'T t) =
      fun ?values:(x3924 : 'T list option option) ->
        fun () ->
          t_of_js Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Set")
               (let x3925 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x3924 with
                 | Some x3926 ->
                     ignore
                       (Ojs.call x3925 "push"
                          [|(Ojs.option_to_js
                               (fun (x3927 : 'T list) ->
                                  Ojs.list_to_js Obj.magic x3927) x3926)|])
                 | None -> ());
                x3925))
    let (prototype : unit -> any t) =
      fun () ->
        t_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Set")
             "prototype")
    let cast_from = Obj.magic
  end
module ReturnType =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x3932 : Ojs.t) -> any_of_js x3932
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x3931 : any) -> any_to_js x3931
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x3935 : Ojs.t) -> t_of_js __T_of_js x3935
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x3933 : __T t) -> t_to_js __T_to_js x3933
  end
module Required =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x3938 : Ojs.t) -> any_of_js x3938
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x3937 : any) -> any_to_js x3937
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x3941 : Ojs.t) -> t_of_js __T_of_js x3941
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x3939 : __T t) -> t_to_js __T_to_js x3939
  end
module PropertyKey =
  struct
    type t =
      [ `Number of float  | `String of string  | `Symbol of symbol ]
        Primitive.t
    let rec t_of_js : Ojs.t -> t =
      fun (x3948 : Ojs.t) ->
        Primitive.t_of_js
          (fun (x3949 : Ojs.t) ->
             let x3950 = x3949 in
             match Ojs.string_of_js (Ojs.get_prop_ascii x3950 "dummy") with
             | "Number" -> `Number (Ojs.float_of_js x3950)
             | "String" -> `String (Ojs.string_of_js x3950)
             | "Symbol" -> `Symbol (symbol_of_js x3950)
             | _ -> assert false) x3948
    and t_to_js : t -> Ojs.t =
      fun
        (x3943 :
          [ `Number of float  | `String of string  | `Symbol of symbol ]
            Primitive.t)
        ->
        Primitive.t_to_js
          (fun
             (x3944 :
               [ `Number of float  | `String of string  | `Symbol of symbol ])
             ->
             match x3944 with
             | `Number x3945 -> Ojs.float_to_js x3945
             | `String x3946 -> Ojs.string_to_js x3946
             | `Symbol x3947 -> symbol_to_js x3947) x3943
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3952 : Ojs.t) -> t_of_js x3952
    and t_0_to_js : t_0 -> Ojs.t = fun (x3951 : t) -> t_to_js x3951
  end
module PropertyDescriptor =
  struct
    type t = [ `PropertyDescriptor ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3954 : Ojs.t) -> t_of_js x3954
    and t_0_to_js : t_0 -> Ojs.t = fun (x3953 : t) -> t_to_js x3953
    type tags = [ `PropertyDescriptor ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `PropertyDescriptor ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x3957 : Ojs.t) -> intf_of_js __tags_of_js x3957
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x3955 : __tags intf) -> intf_to_js __tags_to_js x3955
    let (get_configurable : 'tags this -> bool) =
      fun (x3959 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3959) "configurable")
    let (set_configurable : 'tags this -> bool -> unit) =
      fun (x3961 : 'tags this) ->
        fun (x3962 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x3961) "configurable"
            (Ojs.bool_to_js x3962)
    let (get_enumerable : 'tags this -> bool) =
      fun (x3964 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3964) "enumerable")
    let (set_enumerable : 'tags this -> bool -> unit) =
      fun (x3966 : 'tags this) ->
        fun (x3967 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x3966) "enumerable"
            (Ojs.bool_to_js x3967)
    let (get_value : 'tags this -> any) =
      fun (x3969 : 'tags this) ->
        any_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x3969) "value")
    let (set_value : 'tags this -> any -> unit) =
      fun (x3971 : 'tags this) ->
        fun (x3972 : any) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x3971) "value"
            (any_to_js x3972)
    let (get_writable : 'tags this -> bool) =
      fun (x3974 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3974) "writable")
    let (set_writable : 'tags this -> bool -> unit) =
      fun (x3976 : 'tags this) ->
        fun (x3977 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x3976) "writable"
            (Ojs.bool_to_js x3977)
    let (get_ : 'tags this -> any) =
      fun (x3979 : 'tags this) ->
        any_of_js (Ojs.call (this_to_js Obj.magic x3979) "get" [||])
    let (set_ : 'tags this -> v:any -> unit) =
      fun (x3982 : 'tags this) ->
        fun ~v:(x3981 : any) ->
          ignore
            (Ojs.call (this_to_js Obj.magic x3982) "set"
               [|(any_to_js x3981)|])
    let cast_from = Obj.magic
  end
module Function =
  struct
    type t = [ `Function ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x3985 : Ojs.t) -> t_of_js x3985
    and t_0_to_js : t_0 -> Ojs.t = fun (x3984 : t) -> t_to_js x3984
    type tags = [ `Function ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Function ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x3988 : Ojs.t) -> intf_of_js __tags_of_js x3988
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x3986 : __tags intf) -> intf_to_js __tags_to_js x3986
    let (get_name : 'tags this -> string) =
      fun (x3990 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x3990) "name")
    let (apply_ :
      'tags this -> this:t -> thisArg:any -> ?argArray:any -> unit -> any) =
      fun (x3997 : 'tags this) ->
        fun ~this:(x3992 : t) ->
          fun ~thisArg:(x3993 : any) ->
            fun ?argArray:(x3994 : any option) ->
              fun () ->
                any_of_js
                  (let x3999 = this_to_js Obj.magic x3997 in
                   Ojs.call (Ojs.get_prop_ascii x3999 "apply") "apply"
                     [|x3999;((let x3995 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x3995 "push" [|(t_to_js x3992)|]);
                               ignore
                                 (Ojs.call x3995 "push" [|(any_to_js x3993)|]);
                               (match x3994 with
                                | Some x3996 ->
                                    ignore
                                      (Ojs.call x3995 "push"
                                         [|(any_to_js x3996)|])
                                | None -> ());
                               x3995))|])
    let (call :
      'tags this -> this:t -> thisArg:any -> argArray:any list -> any) =
      fun (x4005 : 'tags this) ->
        fun ~this:(x4000 : t) ->
          fun ~thisArg:(x4001 : any) ->
            fun ~argArray:(x4002 : any list) ->
              any_of_js
                (let x4007 = this_to_js Obj.magic x4005 in
                 Ojs.call (Ojs.get_prop_ascii x4007 "call") "apply"
                   [|x4007;((let x4003 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4003 "push" [|(t_to_js x4000)|]);
                             ignore
                               (Ojs.call x4003 "push" [|(any_to_js x4001)|]);
                             List.iter
                               (fun (x4004 : any) ->
                                  ignore
                                    (Ojs.call x4003 "push"
                                       [|(any_to_js x4004)|])) x4002;
                             x4003))|])
    let (bind :
      'tags this -> this:t -> thisArg:any -> argArray:any list -> any) =
      fun (x4013 : 'tags this) ->
        fun ~this:(x4008 : t) ->
          fun ~thisArg:(x4009 : any) ->
            fun ~argArray:(x4010 : any list) ->
              any_of_js
                (let x4015 = this_to_js Obj.magic x4013 in
                 Ojs.call (Ojs.get_prop_ascii x4015 "bind") "apply"
                   [|x4015;((let x4011 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4011 "push" [|(t_to_js x4008)|]);
                             ignore
                               (Ojs.call x4011 "push" [|(any_to_js x4009)|]);
                             List.iter
                               (fun (x4012 : any) ->
                                  ignore
                                    (Ojs.call x4011 "push"
                                       [|(any_to_js x4012)|])) x4010;
                             x4011))|])
    let (toString : 'tags this -> string) =
      fun (x4016 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x4016) "toString" [||])
    let (get_prototype : 'tags this -> any) =
      fun (x4018 : 'tags this) ->
        any_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4018) "prototype")
    let (set_prototype : 'tags this -> any -> unit) =
      fun (x4020 : 'tags this) ->
        fun (x4021 : any) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4020) "prototype"
            (any_to_js x4021)
    let (get_length : 'tags this -> float) =
      fun (x4023 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4023) "length")
    let (get_arguments : 'tags this -> any) =
      fun (x4025 : 'tags this) ->
        any_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4025) "arguments")
    let (set_arguments : 'tags this -> any -> unit) =
      fun (x4027 : 'tags this) ->
        fun (x4028 : any) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4027) "arguments"
            (any_to_js x4028)
    let (get_caller : 'tags this -> t) =
      fun (x4030 : 'tags this) ->
        t_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x4030) "caller")
    let (set_caller : 'tags this -> t -> unit) =
      fun (x4032 : 'tags this) ->
        fun (x4033 : t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4032) "caller"
            (t_to_js x4033)
    let (create : string list -> t) =
      fun (x4035 : string list) ->
        t_of_js
          (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Function")
             (let x4036 =
                Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
              List.iter
                (fun (x4037 : string) ->
                   ignore
                     (Ojs.call x4036 "push" [|(Ojs.string_to_js x4037)|]))
                x4035;
              x4036))
    let (invoke : string list -> t) =
      fun (x4038 : string list) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Function") "apply"
             [|Ojs.null;((let x4039 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x4040 : string) ->
                               ignore
                                 (Ojs.call x4039 "push"
                                    [|(Ojs.string_to_js x4040)|])) x4038;
                          x4039))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Function")
             "prototype")
    let cast_from = Obj.magic
  end
module Reflect =
  struct
    let (apply_ :
      target:Function.t ->
        thisArgument:any -> argumentsList:any ArrayLike.t -> any)
      =
      fun ~target:(x4041 : Function.t) ->
        fun ~thisArgument:(x4042 : any) ->
          fun ~argumentsList:(x4043 : any ArrayLike.t) ->
            any_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect") "apply"
                 [|(Function.t_to_js x4041);(any_to_js x4042);(ArrayLike.t_to_js
                                                                 any_to_js
                                                                 x4043)|])
    let (construct :
      target:Function.t ->
        argumentsList:any ArrayLike.t -> ?newTarget:Function.t -> unit -> any)
      =
      fun ~target:(x4045 : Function.t) ->
        fun ~argumentsList:(x4046 : any ArrayLike.t) ->
          fun ?newTarget:(x4047 : Function.t option) ->
            fun () ->
              any_of_js
                (let x4051 = Ojs.get_prop_ascii Ojs.global "Reflect" in
                 Ojs.call (Ojs.get_prop_ascii x4051 "construct") "apply"
                   [|x4051;((let x4048 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4048 "push"
                                  [|(Function.t_to_js x4045)|]);
                             ignore
                               (Ojs.call x4048 "push"
                                  [|(ArrayLike.t_to_js any_to_js x4046)|]);
                             (match x4047 with
                              | Some x4049 ->
                                  ignore
                                    (Ojs.call x4048 "push"
                                       [|(Function.t_to_js x4049)|])
                              | None -> ());
                             x4048))|])
    let (defineProperty :
      target:untyped_object ->
        propertyKey:PropertyKey.t -> attributes:PropertyDescriptor.t -> bool)
      =
      fun ~target:(x4052 : untyped_object) ->
        fun ~propertyKey:(x4053 : PropertyKey.t) ->
          fun ~attributes:(x4054 : PropertyDescriptor.t) ->
            Ojs.bool_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
                 "defineProperty"
                 [|(untyped_object_to_js x4052);(PropertyKey.t_to_js x4053);(
                   PropertyDescriptor.t_to_js x4054)|])
    let (deleteProperty :
      target:untyped_object -> propertyKey:PropertyKey.t -> bool) =
      fun ~target:(x4055 : untyped_object) ->
        fun ~propertyKey:(x4056 : PropertyKey.t) ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
               "deleteProperty"
               [|(untyped_object_to_js x4055);(PropertyKey.t_to_js x4056)|])
    let (get_ :
      target:untyped_object ->
        propertyKey:PropertyKey.t -> ?receiver:any -> unit -> any)
      =
      fun ~target:(x4057 : untyped_object) ->
        fun ~propertyKey:(x4058 : PropertyKey.t) ->
          fun ?receiver:(x4059 : any option) ->
            fun () ->
              any_of_js
                (let x4062 = Ojs.get_prop_ascii Ojs.global "Reflect" in
                 Ojs.call (Ojs.get_prop_ascii x4062 "get") "apply"
                   [|x4062;((let x4060 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4060 "push"
                                  [|(untyped_object_to_js x4057)|]);
                             ignore
                               (Ojs.call x4060 "push"
                                  [|(PropertyKey.t_to_js x4058)|]);
                             (match x4059 with
                              | Some x4061 ->
                                  ignore
                                    (Ojs.call x4060 "push"
                                       [|(any_to_js x4061)|])
                              | None -> ());
                             x4060))|])
    let (getOwnPropertyDescriptor :
      target:untyped_object ->
        propertyKey:PropertyKey.t -> PropertyDescriptor.t option)
      =
      fun ~target:(x4063 : untyped_object) ->
        fun ~propertyKey:(x4064 : PropertyKey.t) ->
          Ojs.option_of_js PropertyDescriptor.t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
               "getOwnPropertyDescriptor"
               [|(untyped_object_to_js x4063);(PropertyKey.t_to_js x4064)|])
    let (getPrototypeOf : untyped_object -> untyped_object option) =
      fun (x4066 : untyped_object) ->
        Ojs.option_of_js untyped_object_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
             "getPrototypeOf" [|(untyped_object_to_js x4066)|])
    let (has : target:untyped_object -> propertyKey:PropertyKey.t -> bool) =
      fun ~target:(x4068 : untyped_object) ->
        fun ~propertyKey:(x4069 : PropertyKey.t) ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect") "has"
               [|(untyped_object_to_js x4068);(PropertyKey.t_to_js x4069)|])
    let (isExtensible : untyped_object -> bool) =
      fun (x4070 : untyped_object) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect") "isExtensible"
             [|(untyped_object_to_js x4070)|])
    let (ownKeys :
      untyped_object ->
        [ `String of string  | `Symbol of symbol ] Primitive.t list)
      =
      fun (x4071 : untyped_object) ->
        Ojs.list_of_js
          (fun (x4072 : Ojs.t) ->
             Primitive.t_of_js
               (fun (x4073 : Ojs.t) ->
                  let x4074 = x4073 in
                  match Ojs.string_of_js (Ojs.get_prop_ascii x4074 "dummy")
                  with
                  | "String" -> `String (Ojs.string_of_js x4074)
                  | "Symbol" -> `Symbol (symbol_of_js x4074)
                  | _ -> assert false) x4072)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect") "ownKeys"
             [|(untyped_object_to_js x4071)|])
    let (preventExtensions : untyped_object -> bool) =
      fun (x4075 : untyped_object) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
             "preventExtensions" [|(untyped_object_to_js x4075)|])
    let (set_ :
      target:untyped_object ->
        propertyKey:PropertyKey.t ->
          value:any -> ?receiver:any -> unit -> bool)
      =
      fun ~target:(x4076 : untyped_object) ->
        fun ~propertyKey:(x4077 : PropertyKey.t) ->
          fun ~value:(x4078 : any) ->
            fun ?receiver:(x4079 : any option) ->
              fun () ->
                Ojs.bool_of_js
                  (let x4082 = Ojs.get_prop_ascii Ojs.global "Reflect" in
                   Ojs.call (Ojs.get_prop_ascii x4082 "set") "apply"
                     [|x4082;((let x4080 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x4080 "push"
                                    [|(untyped_object_to_js x4076)|]);
                               ignore
                                 (Ojs.call x4080 "push"
                                    [|(PropertyKey.t_to_js x4077)|]);
                               ignore
                                 (Ojs.call x4080 "push" [|(any_to_js x4078)|]);
                               (match x4079 with
                                | Some x4081 ->
                                    ignore
                                      (Ojs.call x4080 "push"
                                         [|(any_to_js x4081)|])
                                | None -> ());
                               x4080))|])
    let (setPrototypeOf :
      target:untyped_object -> proto:untyped_object option -> bool) =
      fun ~target:(x4083 : untyped_object) ->
        fun ~proto:(x4084 : untyped_object option) ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Reflect")
               "setPrototypeOf"
               [|(untyped_object_to_js x4083);(Ojs.option_to_js
                                                 untyped_object_to_js x4084)|])
  end
module ReferenceError =
  struct
    type t = [ `Error  | `ReferenceError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4087 : Ojs.t) -> t_of_js x4087
    and t_0_to_js : t_0 -> Ojs.t = fun (x4086 : t) -> t_to_js x4086
    type tags = [ `Error  | `ReferenceError ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ReferenceError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4090 : Ojs.t) -> intf_of_js __tags_of_js x4090
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4088 : __tags intf) -> intf_to_js __tags_to_js x4088
    let (create : ?message:string -> unit -> t) =
      fun ?message:(x4092 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "ReferenceError")
               (let x4093 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x4092 with
                 | Some x4094 ->
                     ignore
                       (Ojs.call x4093 "push" [|(Ojs.string_to_js x4094)|])
                 | None -> ());
                x4093))
    let (invoke : ?message:string -> unit -> t) =
      fun ?message:(x4095 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "ReferenceError")
               "apply"
               [|Ojs.null;((let x4096 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x4095 with
                             | Some x4097 ->
                                 ignore
                                   (Ojs.call x4096 "push"
                                      [|(Ojs.string_to_js x4097)|])
                             | None -> ());
                            x4096))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "ReferenceError") "prototype")
    let cast_from = Obj.magic
  end
module Record =
  struct
    type ('K, 'T) t = any
    let rec t_of_js :
      'K 'T . (Ojs.t -> 'K) -> (Ojs.t -> 'T) -> Ojs.t -> ('K, 'T) t = fun
      (type __K) -> fun (type __T) ->
      fun (__K_of_js : Ojs.t -> __K) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4099 : Ojs.t) -> any_of_js x4099
    and t_to_js :
      'K 'T . ('K -> Ojs.t) -> ('T -> Ojs.t) -> ('K, 'T) t -> Ojs.t = fun
      (type __K) -> fun (type __T) ->
      fun (__K_to_js : __K -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4098 : any) -> any_to_js x4098
    type ('K, 'T) t_2 = ('K, 'T) t
    let rec t_2_of_js :
      'K 'T . (Ojs.t -> 'K) -> (Ojs.t -> 'T) -> Ojs.t -> ('K, 'T) t_2 = fun
      (type __K) -> fun (type __T) ->
      fun (__K_of_js : Ojs.t -> __K) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4103 : Ojs.t) -> t_of_js __K_of_js __T_of_js x4103
    and t_2_to_js :
      'K 'T . ('K -> Ojs.t) -> ('T -> Ojs.t) -> ('K, 'T) t_2 -> Ojs.t = fun
      (type __K) -> fun (type __T) ->
      fun (__K_to_js : __K -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4100 : (__K, __T) t) -> t_to_js __K_to_js __T_to_js x4100
  end
module ReadonlySet =
  struct
    type 'T t = [ `ReadonlySet of 'T  | 'T IterableIterator.tags_1] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4108 : Ojs.t) -> t_of_js __T_of_js x4108
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x4106 : __T t) -> t_to_js __T_to_js x4106
    type 'T tags = [ `ReadonlySet of 'T  | 'T IterableIterator.tags_1]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ReadonlySet of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4112 : Ojs.t) -> intf_of_js __tags_of_js x4112
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4110 : __tags intf) -> intf_to_js __tags_to_js x4110
    let (entries : ('tags, 'T) this -> ('T * 'T) IterableIterator.t) =
      fun (x4114 : ('tags, 'T) this) ->
        IterableIterator.t_of_js
          (fun (x4117 : Ojs.t) ->
             let x4118 = x4117 in
             ((Obj.magic (Ojs.array_get x4118 0)),
               (Obj.magic (Ojs.array_get x4118 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic x4114) "entries" [||])
    let (keys : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x4119 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x4119) "keys" [||])
    let (values : ('tags, 'T) this -> 'T IterableIterator.t) =
      fun (x4123 : ('tags, 'T) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x4123) "values" [||])
    let (forEach :
      ('tags, 'T) this ->
        callbackfn:(value:'T -> value2:'T -> set_:'T t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x4135 : ('tags, 'T) this) ->
        fun ~callbackfn:(x4127 : value:'T -> value2:'T -> set_:'T t -> unit)
          ->
          fun ?thisArg:(x4128 : any option) ->
            fun () ->
              ignore
                (let x4138 = this_to_js Obj.magic Obj.magic x4135 in
                 Ojs.call (Ojs.get_prop_ascii x4138 "forEach") "apply"
                   [|x4138;((let x4129 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4129 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4131 : Ojs.t) ->
                                          fun (x4132 : Ojs.t) ->
                                            fun (x4133 : Ojs.t) ->
                                              x4127 ~value:(Obj.magic x4131)
                                                ~value2:(Obj.magic x4132)
                                                ~set_:(t_of_js Obj.magic
                                                         x4133)))|]);
                             (match x4128 with
                              | Some x4130 ->
                                  ignore
                                    (Ojs.call x4129 "push"
                                       [|(any_to_js x4130)|])
                              | None -> ());
                             x4129))|])
    let (has : ('tags, 'T) this -> value:'T -> bool) =
      fun (x4140 : ('tags, 'T) this) ->
        fun ~value:(x4139 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x4140) "has"
               [|(Obj.magic x4139)|])
    let (get_size : ('tags, 'T) this -> float) =
      fun (x4143 : ('tags, 'T) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x4143) "size")
    let cast_from = Obj.magic
  end
module ReadonlyMap =
  struct
    type ('K, 'V) t =
      [ `ReadonlyMap of ('K * 'V)  | ('K * 'V) IterableIterator.tags_1] intf
    let rec t_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) t =
      fun _K -> fun _V -> Obj.magic
    and t_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) t -> Ojs.t =
      fun _K -> fun _V -> Obj.magic
    type ('K, 'V) t_2 = ('K, 'V) t
    let rec t_2_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) t_2 = fun
      (type __K) -> fun (type __V) ->
      fun (__K_of_js : Ojs.t -> __K) ->
        fun (__V_of_js : Ojs.t -> __V) ->
          fun (x4149 : Ojs.t) -> t_of_js __K_of_js __V_of_js x4149
    and t_2_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) t_2 -> Ojs.t = fun
      (type __K) -> fun (type __V) ->
      fun (__K_to_js : __K -> Ojs.t) ->
        fun (__V_to_js : __V -> Ojs.t) ->
          fun (x4146 : (__K, __V) t) -> t_to_js __K_to_js __V_to_js x4146
    type ('K, 'V) tags =
      [ `ReadonlyMap of ('K * 'V)  | ('K * 'V) IterableIterator.tags_1]
    type ('K, 'V) tags_2 = ('K, 'V) tags
    type ('tags, 'K, 'V) this =
      'tags intf constraint 'tags = [> `ReadonlyMap of ('K * 'V) ]
    let rec this_of_js :
      'tags 'K 'V .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('tags, 'K, 'V) this
      = fun (type __tags) -> fun (type __K) -> fun (type __V) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__K_of_js : Ojs.t -> __K) ->
          fun (__V_of_js : Ojs.t -> __V) ->
            fun (x4154 : Ojs.t) -> intf_of_js __tags_of_js x4154
    and this_to_js :
      'tags 'K 'V .
        ('tags -> Ojs.t) ->
          ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('tags, 'K, 'V) this -> Ojs.t
      = fun (type __tags) -> fun (type __K) -> fun (type __V) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__K_to_js : __K -> Ojs.t) ->
          fun (__V_to_js : __V -> Ojs.t) ->
            fun (x4152 : __tags intf) -> intf_to_js __tags_to_js x4152
    let (entries : ('tags, 'K, 'V) this -> ('K * 'V) IterableIterator.t) =
      fun (x4156 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js
          (fun (x4160 : Ojs.t) ->
             let x4161 = x4160 in
             ((Obj.magic (Ojs.array_get x4161 0)),
               (Obj.magic (Ojs.array_get x4161 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4156)
             "entries" [||])
    let (keys : ('tags, 'K, 'V) this -> 'K IterableIterator.t) =
      fun (x4162 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4162) "keys"
             [||])
    let (values : ('tags, 'K, 'V) this -> 'V IterableIterator.t) =
      fun (x4167 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4167) "values"
             [||])
    let (forEach :
      ('tags, 'K, 'V) this ->
        callbackfn:(value:'V -> key:'K -> map:('K, 'V) t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x4181 : ('tags, 'K, 'V) this) ->
        fun
          ~callbackfn:(x4172 : value:'V -> key:'K -> map:('K, 'V) t -> unit)
          ->
          fun ?thisArg:(x4173 : any option) ->
            fun () ->
              ignore
                (let x4185 = this_to_js Obj.magic Obj.magic Obj.magic x4181 in
                 Ojs.call (Ojs.get_prop_ascii x4185 "forEach") "apply"
                   [|x4185;((let x4174 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x4174 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x4176 : Ojs.t) ->
                                          fun (x4177 : Ojs.t) ->
                                            fun (x4178 : Ojs.t) ->
                                              x4172 ~value:(Obj.magic x4176)
                                                ~key:(Obj.magic x4177)
                                                ~map:(t_of_js Obj.magic
                                                        Obj.magic x4178)))|]);
                             (match x4173 with
                              | Some x4175 ->
                                  ignore
                                    (Ojs.call x4174 "push"
                                       [|(any_to_js x4175)|])
                              | None -> ());
                             x4174))|])
    let (get_ : ('tags, 'K, 'V) this -> key:'K -> 'V option) =
      fun (x4187 : ('tags, 'K, 'V) this) ->
        fun ~key:(x4186 : 'K) ->
          Ojs.option_of_js Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4187) "get"
               [|(Obj.magic x4186)|])
    let (has : ('tags, 'K, 'V) this -> key:'K -> bool) =
      fun (x4193 : ('tags, 'K, 'V) this) ->
        fun ~key:(x4192 : 'K) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x4193) "has"
               [|(Obj.magic x4192)|])
    let (get_size : ('tags, 'K, 'V) this -> float) =
      fun (x4197 : ('tags, 'K, 'V) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii
             (this_to_js Obj.magic Obj.magic Obj.magic x4197) "size")
    let cast_from = Obj.magic
  end
module RangeError =
  struct
    type t = [ `Error  | `RangeError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4202 : Ojs.t) -> t_of_js x4202
    and t_0_to_js : t_0 -> Ojs.t = fun (x4201 : t) -> t_to_js x4201
    type tags = [ `Error  | `RangeError ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `RangeError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4205 : Ojs.t) -> intf_of_js __tags_of_js x4205
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4203 : __tags intf) -> intf_to_js __tags_to_js x4203
    let (create : ?message:string -> unit -> t) =
      fun ?message:(x4207 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "RangeError")
               (let x4208 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x4207 with
                 | Some x4209 ->
                     ignore
                       (Ojs.call x4208 "push" [|(Ojs.string_to_js x4209)|])
                 | None -> ());
                x4208))
    let (invoke : ?message:string -> unit -> t) =
      fun ?message:(x4210 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "RangeError") "apply"
               [|Ojs.null;((let x4211 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x4210 with
                             | Some x4212 ->
                                 ignore
                                   (Ojs.call x4211 "push"
                                      [|(Ojs.string_to_js x4212)|])
                             | None -> ());
                            x4211))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "RangeError")
             "prototype")
    let cast_from = Obj.magic
  end
module ProxyHandler =
  struct
    type 'T t = [ `ProxyHandler of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4215 : Ojs.t) -> t_of_js __T_of_js x4215
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x4213 : __T t) -> t_to_js __T_to_js x4213
    type 'T tags = [ `ProxyHandler of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ProxyHandler of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4219 : Ojs.t) -> intf_of_js __tags_of_js x4219
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4217 : __tags intf) -> intf_to_js __tags_to_js x4217
    let (apply_ :
      ('tags, 'T) this ->
        target:'T -> thisArg:any -> argArray:any list -> any)
      =
      fun (x4225 : ('tags, 'T) this) ->
        fun ~target:(x4221 : 'T) ->
          fun ~thisArg:(x4222 : any) ->
            fun ~argArray:(x4223 : any list) ->
              any_of_js
                (Ojs.call (this_to_js Obj.magic Obj.magic x4225) "apply"
                   [|(Obj.magic x4221);(any_to_js x4222);(Ojs.list_to_js
                                                            any_to_js x4223)|])
    let (construct :
      ('tags, 'T) this ->
        target:'T ->
          argArray:any list -> newTarget:Function.t -> untyped_object)
      =
      fun (x4232 : ('tags, 'T) this) ->
        fun ~target:(x4228 : 'T) ->
          fun ~argArray:(x4229 : any list) ->
            fun ~newTarget:(x4231 : Function.t) ->
              untyped_object_of_js
                (Ojs.call (this_to_js Obj.magic Obj.magic x4232) "construct"
                   [|(Obj.magic x4228);(Ojs.list_to_js any_to_js x4229);(
                     Function.t_to_js x4231)|])
    let (defineProperty :
      ('tags, 'T) this ->
        target:'T ->
          p:[ `U1 of string  | `U2 of symbol ] ->
            attributes:PropertyDescriptor.t -> bool)
      =
      fun (x4240 : ('tags, 'T) this) ->
        fun ~target:(x4235 : 'T) ->
          fun ~p:(x4236 : [ `U1 of string  | `U2 of symbol ]) ->
            fun ~attributes:(x4239 : PropertyDescriptor.t) ->
              Ojs.bool_of_js
                (Ojs.call (this_to_js Obj.magic Obj.magic x4240)
                   "defineProperty"
                   [|(Obj.magic x4235);((match x4236 with
                                         | `U1 x4237 ->
                                             Ojs.string_to_js x4237
                                         | `U2 x4238 -> symbol_to_js x4238));(
                     PropertyDescriptor.t_to_js x4239)|])
    let (deleteProperty :
      ('tags, 'T) this ->
        target:'T -> p:[ `U1 of string  | `U2 of symbol ] -> bool)
      =
      fun (x4247 : ('tags, 'T) this) ->
        fun ~target:(x4243 : 'T) ->
          fun ~p:(x4244 : [ `U1 of string  | `U2 of symbol ]) ->
            Ojs.bool_of_js
              (Ojs.call (this_to_js Obj.magic Obj.magic x4247)
                 "deleteProperty"
                 [|(Obj.magic x4243);((match x4244 with
                                       | `U1 x4245 -> Ojs.string_to_js x4245
                                       | `U2 x4246 -> symbol_to_js x4246))|])
    let (get_ :
      ('tags, 'T) this ->
        target:'T ->
          p:[ `U1 of string  | `U2 of symbol ] -> receiver:any -> any)
      =
      fun (x4255 : ('tags, 'T) this) ->
        fun ~target:(x4250 : 'T) ->
          fun ~p:(x4251 : [ `U1 of string  | `U2 of symbol ]) ->
            fun ~receiver:(x4254 : any) ->
              any_of_js
                (Ojs.call (this_to_js Obj.magic Obj.magic x4255) "get"
                   [|(Obj.magic x4250);((match x4251 with
                                         | `U1 x4252 ->
                                             Ojs.string_to_js x4252
                                         | `U2 x4253 -> symbol_to_js x4253));(
                     any_to_js x4254)|])
    let (getOwnPropertyDescriptor :
      ('tags, 'T) this ->
        target:'T ->
          p:[ `U1 of string  | `U2 of symbol ] -> PropertyDescriptor.t option)
      =
      fun (x4262 : ('tags, 'T) this) ->
        fun ~target:(x4258 : 'T) ->
          fun ~p:(x4259 : [ `U1 of string  | `U2 of symbol ]) ->
            Ojs.option_of_js PropertyDescriptor.t_of_js
              (Ojs.call (this_to_js Obj.magic Obj.magic x4262)
                 "getOwnPropertyDescriptor"
                 [|(Obj.magic x4258);((match x4259 with
                                       | `U1 x4260 -> Ojs.string_to_js x4260
                                       | `U2 x4261 -> symbol_to_js x4261))|])
    let (getPrototypeOf :
      ('tags, 'T) this -> target:'T -> untyped_object option) =
      fun (x4267 : ('tags, 'T) this) ->
        fun ~target:(x4266 : 'T) ->
          Ojs.option_of_js untyped_object_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x4267) "getPrototypeOf"
               [|(Obj.magic x4266)|])
    let (has :
      ('tags, 'T) this ->
        target:'T -> p:[ `U1 of string  | `U2 of symbol ] -> bool)
      =
      fun (x4275 : ('tags, 'T) this) ->
        fun ~target:(x4271 : 'T) ->
          fun ~p:(x4272 : [ `U1 of string  | `U2 of symbol ]) ->
            Ojs.bool_of_js
              (Ojs.call (this_to_js Obj.magic Obj.magic x4275) "has"
                 [|(Obj.magic x4271);((match x4272 with
                                       | `U1 x4273 -> Ojs.string_to_js x4273
                                       | `U2 x4274 -> symbol_to_js x4274))|])
    let (isExtensible : ('tags, 'T) this -> target:'T -> bool) =
      fun (x4279 : ('tags, 'T) this) ->
        fun ~target:(x4278 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x4279) "isExtensible"
               [|(Obj.magic x4278)|])
    let (ownKeys :
      ('tags, 'T) this ->
        target:'T ->
          [ `String of string  | `Symbol of symbol ] Primitive.t ArrayLike.t)
      =
      fun (x4283 : ('tags, 'T) this) ->
        fun ~target:(x4282 : 'T) ->
          ArrayLike.t_of_js
            (fun (x4286 : Ojs.t) ->
               Primitive.t_of_js
                 (fun (x4287 : Ojs.t) ->
                    let x4288 = x4287 in
                    match Ojs.string_of_js (Ojs.get_prop_ascii x4288 "dummy")
                    with
                    | "String" -> `String (Ojs.string_of_js x4288)
                    | "Symbol" -> `Symbol (symbol_of_js x4288)
                    | _ -> assert false) x4286)
            (Ojs.call (this_to_js Obj.magic Obj.magic x4283) "ownKeys"
               [|(Obj.magic x4282)|])
    let (preventExtensions : ('tags, 'T) this -> target:'T -> bool) =
      fun (x4290 : ('tags, 'T) this) ->
        fun ~target:(x4289 : 'T) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic x4290)
               "preventExtensions" [|(Obj.magic x4289)|])
    let (set_ :
      ('tags, 'T) this ->
        target:'T ->
          p:[ `U1 of string  | `U2 of symbol ] ->
            value:any -> receiver:any -> bool)
      =
      fun (x4299 : ('tags, 'T) this) ->
        fun ~target:(x4293 : 'T) ->
          fun ~p:(x4294 : [ `U1 of string  | `U2 of symbol ]) ->
            fun ~value:(x4297 : any) ->
              fun ~receiver:(x4298 : any) ->
                Ojs.bool_of_js
                  (Ojs.call (this_to_js Obj.magic Obj.magic x4299) "set"
                     [|(Obj.magic x4293);((match x4294 with
                                           | `U1 x4295 ->
                                               Ojs.string_to_js x4295
                                           | `U2 x4296 -> symbol_to_js x4296));(
                       any_to_js x4297);(any_to_js x4298)|])
    let (setPrototypeOf :
      ('tags, 'T) this -> target:'T -> v:untyped_object option -> bool) =
      fun (x4305 : ('tags, 'T) this) ->
        fun ~target:(x4302 : 'T) ->
          fun ~v:(x4303 : untyped_object option) ->
            Ojs.bool_of_js
              (Ojs.call (this_to_js Obj.magic Obj.magic x4305)
                 "setPrototypeOf"
                 [|(Obj.magic x4302);(Ojs.option_to_js untyped_object_to_js
                                        x4303)|])
    let cast_from = Obj.magic
  end
module ProxyStatic =
  struct
    module AnonymousInterface41 =
      struct
        type 'T t = Ojs.t
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) -> fun (x4309 : Ojs.t) -> x4309
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) -> fun (x4308 : Ojs.t) -> x4308
        let (get_proxy : 'T t -> 'T) =
          fun (x4310 : 'T t) ->
            Obj.magic (Ojs.get_prop_ascii (t_to_js Obj.magic x4310) "proxy")
        let (set_proxy : 'T t -> 'T -> unit) =
          fun (x4312 : 'T t) ->
            fun (x4313 : 'T) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x4312) "proxy"
                (Obj.magic x4313)
        let (revoke : 'T t -> unit) =
          fun (x4315 : 'T t) ->
            ignore (Ojs.call (t_to_js Obj.magic x4315) "revoke" [||])
        let (create : proxy:'T -> revoke:(unit -> unit) -> unit -> 'T t) =
          fun ~proxy:(x4317 : 'T) ->
            fun ~revoke:(x4318 : unit -> unit) ->
              fun () ->
                let x4319 = Ojs.empty_obj () in
                Ojs.set_prop_ascii x4319 "proxy" (Obj.magic x4317);
                Ojs.set_prop_ascii x4319 "revoke"
                  (Ojs.fun_to_js 1 (fun _ -> x4318 ()));
                t_of_js Obj.magic x4319
        module Make(T:Ojs.T) =
          struct
            type 'T parent = 'T t
            let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
              fun (type __T) ->
              fun (__T_of_js : Ojs.t -> __T) ->
                fun (x4323 : Ojs.t) -> t_of_js __T_of_js x4323
            and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t = fun
              (type __T) ->
              fun (__T_to_js : __T -> Ojs.t) ->
                fun (x4321 : __T t) -> t_to_js __T_to_js x4321
            type t = T.t parent
            let rec t_of_js : Ojs.t -> t =
              fun (x4327 : Ojs.t) -> parent_of_js T.t_of_js x4327
            and t_to_js : t -> Ojs.t =
              fun (x4325 : T.t parent) -> parent_to_js T.t_to_js x4325
            let (get_proxy : t -> T.t) =
              fun (x4329 : t) ->
                T.t_of_js (Ojs.get_prop_ascii (t_to_js x4329) "proxy")
            let (set_proxy : t -> T.t -> unit) =
              fun (x4330 : t) ->
                fun (x4331 : T.t) ->
                  Ojs.set_prop_ascii (t_to_js x4330) "proxy"
                    (T.t_to_js x4331)
            let (revoke : t -> unit) =
              fun (x4332 : t) ->
                ignore (Ojs.call (t_to_js x4332) "revoke" [||])
          end
      end
    let (revocable :
      target:'T -> handler:'T ProxyHandler.t -> 'T AnonymousInterface41.t) =
      fun ~target:(x4333 : 'T) ->
        fun ~handler:(x4334 : 'T ProxyHandler.t) ->
          AnonymousInterface41.t_of_js Obj.magic
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Proxy") "revocable"
               [|(Obj.magic x4333);(ProxyHandler.t_to_js Obj.magic x4334)|])
    let (create : target:'T -> handler:'T ProxyHandler.t -> 'T) =
      fun ~target:(x4337 : 'T) ->
        fun ~handler:(x4338 : 'T ProxyHandler.t) ->
          Obj.magic
            (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Proxy")
               [|(Obj.magic x4337);(ProxyHandler.t_to_js Obj.magic x4338)|])
  end
module ProxyConstructor =
  struct
    module AnonymousInterface41 =
      struct
        type 'T t = Ojs.t
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) -> fun (x4341 : Ojs.t) -> x4341
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) -> fun (x4340 : Ojs.t) -> x4340
        let (get_proxy : 'T t -> 'T) =
          fun (x4342 : 'T t) ->
            Obj.magic (Ojs.get_prop_ascii (t_to_js Obj.magic x4342) "proxy")
        let (set_proxy : 'T t -> 'T -> unit) =
          fun (x4344 : 'T t) ->
            fun (x4345 : 'T) ->
              Ojs.set_prop_ascii (t_to_js Obj.magic x4344) "proxy"
                (Obj.magic x4345)
        let (revoke : 'T t -> unit) =
          fun (x4347 : 'T t) ->
            ignore (Ojs.call (t_to_js Obj.magic x4347) "revoke" [||])
        let (create : proxy:'T -> revoke:(unit -> unit) -> unit -> 'T t) =
          fun ~proxy:(x4349 : 'T) ->
            fun ~revoke:(x4350 : unit -> unit) ->
              fun () ->
                let x4351 = Ojs.empty_obj () in
                Ojs.set_prop_ascii x4351 "proxy" (Obj.magic x4349);
                Ojs.set_prop_ascii x4351 "revoke"
                  (Ojs.fun_to_js 1 (fun _ -> x4350 ()));
                t_of_js Obj.magic x4351
        module Make(T:Ojs.T) =
          struct
            type 'T parent = 'T t
            let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
              fun (type __T) ->
              fun (__T_of_js : Ojs.t -> __T) ->
                fun (x4355 : Ojs.t) -> t_of_js __T_of_js x4355
            and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t = fun
              (type __T) ->
              fun (__T_to_js : __T -> Ojs.t) ->
                fun (x4353 : __T t) -> t_to_js __T_to_js x4353
            type t = T.t parent
            let rec t_of_js : Ojs.t -> t =
              fun (x4359 : Ojs.t) -> parent_of_js T.t_of_js x4359
            and t_to_js : t -> Ojs.t =
              fun (x4357 : T.t parent) -> parent_to_js T.t_to_js x4357
            let (get_proxy : t -> T.t) =
              fun (x4361 : t) ->
                T.t_of_js (Ojs.get_prop_ascii (t_to_js x4361) "proxy")
            let (set_proxy : t -> T.t -> unit) =
              fun (x4362 : t) ->
                fun (x4363 : T.t) ->
                  Ojs.set_prop_ascii (t_to_js x4362) "proxy"
                    (T.t_to_js x4363)
            let (revoke : t -> unit) =
              fun (x4364 : t) ->
                ignore (Ojs.call (t_to_js x4364) "revoke" [||])
          end
      end
    type t = [ `ProxyConstructor ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4366 : Ojs.t) -> t_of_js x4366
    and t_0_to_js : t_0 -> Ojs.t = fun (x4365 : t) -> t_to_js x4365
    type tags = [ `ProxyConstructor ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ProxyConstructor ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4369 : Ojs.t) -> intf_of_js __tags_of_js x4369
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4367 : __tags intf) -> intf_to_js __tags_to_js x4367
    let (revocable :
      'tags this ->
        target:'T -> handler:'T ProxyHandler.t -> 'T AnonymousInterface41.t)
      =
      fun (x4374 : 'tags this) ->
        fun ~target:(x4371 : 'T) ->
          fun ~handler:(x4372 : 'T ProxyHandler.t) ->
            AnonymousInterface41.t_of_js Obj.magic
              (Ojs.call (this_to_js Obj.magic x4374) "revocable"
                 [|(Obj.magic x4371);(ProxyHandler.t_to_js Obj.magic x4372)|])
    let (create : 'tags this -> target:'T -> handler:'T ProxyHandler.t -> 'T)
      =
      fun (x4380 : 'tags this) ->
        fun ~target:(x4377 : 'T) ->
          fun ~handler:(x4378 : 'T ProxyHandler.t) ->
            Obj.magic
              (Ojs.new_obj (this_to_js Obj.magic x4380)
                 [|(Obj.magic x4377);(ProxyHandler.t_to_js Obj.magic x4378)|])
    let cast_from = Obj.magic
  end
module ThisType =
  struct
    type 'T t = [ `ThisType of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4384 : Ojs.t) -> t_of_js __T_of_js x4384
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x4382 : __T t) -> t_to_js __T_to_js x4382
    type 'T tags = [ `ThisType of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `ThisType of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4388 : Ojs.t) -> intf_of_js __tags_of_js x4388
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4386 : __tags intf) -> intf_to_js __tags_to_js x4386
    let cast_from = Obj.magic
  end
module Readonly =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4391 : Ojs.t) -> any_of_js x4391
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x4390 : any) -> any_to_js x4390
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4394 : Ojs.t) -> t_of_js __T_of_js x4394
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x4392 : __T t) -> t_to_js __T_to_js x4392
  end
module PropertyDescriptorMap =
  struct
    type t = [ `PropertyDescriptorMap ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4397 : Ojs.t) -> t_of_js x4397
    and t_0_to_js : t_0 -> Ojs.t = fun (x4396 : t) -> t_to_js x4396
    type tags = [ `PropertyDescriptorMap ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `PropertyDescriptorMap ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4400 : Ojs.t) -> intf_of_js __tags_of_js x4400
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4398 : __tags intf) -> intf_to_js __tags_to_js x4398
    let (get : 'tags this -> string -> PropertyDescriptor.t) =
      fun (x4402 : 'tags this) ->
        fun (x4404 : string) ->
          PropertyDescriptor.t_of_js
            (Ojs.get_prop (this_to_js Obj.magic x4402)
               (Ojs.string_to_js x4404))
    let (set : 'tags this -> string -> PropertyDescriptor.t -> unit) =
      fun (x4405 : 'tags this) ->
        fun (x4407 : string) ->
          fun (x4408 : PropertyDescriptor.t) ->
            Ojs.set_prop (this_to_js Obj.magic x4405)
              (Ojs.string_to_js x4407) (PropertyDescriptor.t_to_js x4408)
    let cast_from = Obj.magic
  end
module Object =
  struct
    module AnonymousInterface48 =
      struct
        type 'T t = Ojs.t
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) -> fun (x4410 : Ojs.t) -> x4410
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) -> fun (x4409 : Ojs.t) -> x4409
        let (get : 'T t -> string -> 'T) =
          fun (x4411 : 'T t) ->
            fun (x4413 : string) ->
              Obj.magic
                (Ojs.get_prop (t_to_js Obj.magic x4411)
                   (Ojs.string_to_js x4413))
        let (set : 'T t -> string -> 'T -> unit) =
          fun (x4414 : 'T t) ->
            fun (x4416 : string) ->
              fun (x4417 : 'T) ->
                Ojs.set_prop (t_to_js Obj.magic x4414)
                  (Ojs.string_to_js x4416) (Obj.magic x4417)
        module Make(T:Ojs.T) =
          struct
            type 'T parent = 'T t
            let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
              fun (type __T) ->
              fun (__T_of_js : Ojs.t -> __T) ->
                fun (x4420 : Ojs.t) -> t_of_js __T_of_js x4420
            and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t = fun
              (type __T) ->
              fun (__T_to_js : __T -> Ojs.t) ->
                fun (x4418 : __T t) -> t_to_js __T_to_js x4418
            type t = T.t parent
            let rec t_of_js : Ojs.t -> t =
              fun (x4424 : Ojs.t) -> parent_of_js T.t_of_js x4424
            and t_to_js : t -> Ojs.t =
              fun (x4422 : T.t parent) -> parent_to_js T.t_to_js x4422
            let (get : t -> string -> T.t) =
              fun (x4426 : t) ->
                fun (x4427 : string) ->
                  T.t_of_js
                    (Ojs.get_prop (t_to_js x4426) (Ojs.string_to_js x4427))
            let (set : t -> string -> T.t -> unit) =
              fun (x4428 : t) ->
                fun (x4429 : string) ->
                  fun (x4430 : T.t) ->
                    Ojs.set_prop (t_to_js x4428) (Ojs.string_to_js x4429)
                      (T.t_to_js x4430)
          end
      end
    module AnonymousInterface45 =
      struct
        type 'T t = Ojs.t
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) -> fun (x4432 : Ojs.t) -> x4432
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) -> fun (x4431 : Ojs.t) -> x4431
        let (get : 'T t -> string -> 'T) =
          fun (x4433 : 'T t) ->
            fun (x4435 : string) ->
              Obj.magic
                (Ojs.get_prop (t_to_js Obj.magic x4433)
                   (Ojs.string_to_js x4435))
        let (set : 'T t -> string -> 'T -> unit) =
          fun (x4436 : 'T t) ->
            fun (x4438 : string) ->
              fun (x4439 : 'T) ->
                Ojs.set_prop (t_to_js Obj.magic x4436)
                  (Ojs.string_to_js x4438) (Obj.magic x4439)
        module Make(T:Ojs.T) =
          struct
            type 'T parent = 'T t
            let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
              fun (type __T) ->
              fun (__T_of_js : Ojs.t -> __T) ->
                fun (x4442 : Ojs.t) -> t_of_js __T_of_js x4442
            and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t = fun
              (type __T) ->
              fun (__T_to_js : __T -> Ojs.t) ->
                fun (x4440 : __T t) -> t_to_js __T_to_js x4440
            type t = T.t parent
            let rec t_of_js : Ojs.t -> t =
              fun (x4446 : Ojs.t) -> parent_of_js T.t_of_js x4446
            and t_to_js : t -> Ojs.t =
              fun (x4444 : T.t parent) -> parent_to_js T.t_to_js x4444
            let (get : t -> string -> T.t) =
              fun (x4448 : t) ->
                fun (x4449 : string) ->
                  T.t_of_js
                    (Ojs.get_prop (t_to_js x4448) (Ojs.string_to_js x4449))
            let (set : t -> string -> T.t -> unit) =
              fun (x4450 : t) ->
                fun (x4451 : string) ->
                  fun (x4452 : T.t) ->
                    Ojs.set_prop (t_to_js x4450) (Ojs.string_to_js x4451)
                      (T.t_to_js x4452)
          end
      end
    module AnonymousInterface17 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x4454 : Ojs.t) -> x4454
        and t_to_js : t -> Ojs.t = fun (x4453 : Ojs.t) -> x4453
        let (get : t -> string -> PropertyDescriptor.t) =
          fun (x4455 : t) ->
            fun (x4456 : string) ->
              PropertyDescriptor.t_of_js
                (Ojs.get_prop (t_to_js x4455) (Ojs.string_to_js x4456))
        let (set : t -> string -> PropertyDescriptor.t -> unit) =
          fun (x4457 : t) ->
            fun (x4458 : string) ->
              fun (x4459 : PropertyDescriptor.t) ->
                Ojs.set_prop (t_to_js x4457) (Ojs.string_to_js x4458)
                  (PropertyDescriptor.t_to_js x4459)
      end
    type t = [ `Object ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4461 : Ojs.t) -> t_of_js x4461
    and t_0_to_js : t_0 -> Ojs.t = fun (x4460 : t) -> t_to_js x4460
    type tags = [ `Object ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Object ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4464 : Ojs.t) -> intf_of_js __tags_of_js x4464
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4462 : __tags intf) -> intf_to_js __tags_to_js x4462
    let (get_constructor : 'tags this -> Function.t) =
      fun (x4466 : 'tags this) ->
        Function.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x4466) "constructor")
    let (set_constructor : 'tags this -> Function.t -> unit) =
      fun (x4468 : 'tags this) ->
        fun (x4469 : Function.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x4468) "constructor"
            (Function.t_to_js x4469)
    let (toString : 'tags this -> string) =
      fun (x4471 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x4471) "toString" [||])
    let (toLocaleString : 'tags this -> string) =
      fun (x4473 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x4473) "toLocaleString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x4475 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x4475) "valueOf" [||])
    let (hasOwnProperty : 'tags this -> v:PropertyKey.t -> bool) =
      fun (x4478 : 'tags this) ->
        fun ~v:(x4477 : PropertyKey.t) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic x4478) "hasOwnProperty"
               [|(PropertyKey.t_to_js x4477)|])
    let (isPrototypeOf : 'tags this -> v:t -> bool) =
      fun (x4481 : 'tags this) ->
        fun ~v:(x4480 : t) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic x4481) "isPrototypeOf"
               [|(t_to_js x4480)|])
    let (propertyIsEnumerable : 'tags this -> v:PropertyKey.t -> bool) =
      fun (x4484 : 'tags this) ->
        fun ~v:(x4483 : PropertyKey.t) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic x4484) "propertyIsEnumerable"
               [|(PropertyKey.t_to_js x4483)|])
    let (fromEntries :
      (PropertyKey.t * 'T) Iterable.t -> 'T AnonymousInterface45.t) =
      fun (x4486 : (PropertyKey.t * 'T) Iterable.t) ->
        AnonymousInterface45.t_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "fromEntries"
             [|(Iterable.t_to_js
                  (fun (x4487 : (PropertyKey.t * 'T)) ->
                     let (x4488, x4489) = x4487 in
                     let x4490 = Ojs.array_make 2 in
                     Ojs.array_set x4490 0 (PropertyKey.t_to_js x4488);
                     Ojs.array_set x4490 1 (Obj.magic x4489);
                     x4490) x4486)|])
    let (fromEntries' : any list Iterable.t -> any) =
      fun (x4492 : any list Iterable.t) ->
        any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "fromEntries"
             [|(Iterable.t_to_js
                  (fun (x4493 : any list) -> Ojs.list_to_js any_to_js x4493)
                  x4492)|])
    let (values :
      [ `U1 of 'T AnonymousInterface48.t  | `U2 of 'T ArrayLike.t ] ->
        'T list)
      =
      fun
        (x4495 :
          [ `U1 of 'T AnonymousInterface48.t  | `U2 of 'T ArrayLike.t ])
        ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "values"
             [|((match x4495 with
                 | `U1 x4496 -> AnonymousInterface48.t_to_js Obj.magic x4496
                 | `U2 x4498 -> ArrayLike.t_to_js Obj.magic x4498))|])
    let (values' : untyped_object -> any list) =
      fun (x4501 : untyped_object) ->
        Ojs.list_of_js any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "values"
             [|(untyped_object_to_js x4501)|])
    let (entries :
      [ `U1 of 'T AnonymousInterface48.t  | `U2 of 'T ArrayLike.t ] ->
        (string * 'T) list)
      =
      fun
        (x4503 :
          [ `U1 of 'T AnonymousInterface48.t  | `U2 of 'T ArrayLike.t ])
        ->
        Ojs.list_of_js
          (fun (x4508 : Ojs.t) ->
             let x4509 = x4508 in
             ((Ojs.string_of_js (Ojs.array_get x4509 0)),
               (Obj.magic (Ojs.array_get x4509 1))))
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "entries"
             [|((match x4503 with
                 | `U1 x4504 -> AnonymousInterface48.t_to_js Obj.magic x4504
                 | `U2 x4506 -> ArrayLike.t_to_js Obj.magic x4506))|])
    let (entries' : untyped_object -> (string * any) list) =
      fun (x4510 : untyped_object) ->
        Ojs.list_of_js
          (fun (x4511 : Ojs.t) ->
             let x4512 = x4511 in
             ((Ojs.string_of_js (Ojs.array_get x4512 0)),
               (any_of_js (Ojs.array_get x4512 1))))
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "entries"
             [|(untyped_object_to_js x4510)|])
    let (getOwnPropertyDescriptors :
      'T -> (any, AnonymousInterface17.t) intersection2) =
      fun (x4513 : 'T) ->
        intersection2_of_js any_of_js AnonymousInterface17.t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
             "getOwnPropertyDescriptors" [|(Obj.magic x4513)|])
    let (assign : target:'T -> source:'U -> ('T, 'U) intersection2) =
      fun ~target:(x4516 : 'T) ->
        fun ~source:(x4517 : 'U) ->
          intersection2_of_js Obj.magic Obj.magic
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "assign"
               [|(Obj.magic x4516);(Obj.magic x4517)|])
    let (assign' :
      target:'T -> source1:'U -> source2:'V -> ('T, 'U, 'V) intersection3) =
      fun ~target:(x4520 : 'T) ->
        fun ~source1:(x4521 : 'U) ->
          fun ~source2:(x4522 : 'V) ->
            intersection3_of_js Obj.magic Obj.magic Obj.magic
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "assign"
                 [|(Obj.magic x4520);(Obj.magic x4521);(Obj.magic x4522)|])
    let (assign'' :
      target:'T ->
        source1:'U ->
          source2:'V -> source3:'W -> ('T, 'U, 'V, 'W) intersection4)
      =
      fun ~target:(x4526 : 'T) ->
        fun ~source1:(x4527 : 'U) ->
          fun ~source2:(x4528 : 'V) ->
            fun ~source3:(x4529 : 'W) ->
              intersection4_of_js Obj.magic Obj.magic Obj.magic Obj.magic
                (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "assign"
                   [|(Obj.magic x4526);(Obj.magic x4527);(Obj.magic x4528);(
                     Obj.magic x4529)|])
    let (assign''' : target:untyped_object -> sources:any list -> any) =
      fun ~target:(x4534 : untyped_object) ->
        fun ~sources:(x4535 : any list) ->
          any_of_js
            (let x4538 = Ojs.get_prop_ascii Ojs.global "Object" in
             Ojs.call (Ojs.get_prop_ascii x4538 "assign") "apply"
               [|x4538;((let x4536 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         ignore
                           (Ojs.call x4536 "push"
                              [|(untyped_object_to_js x4534)|]);
                         List.iter
                           (fun (x4537 : any) ->
                              ignore
                                (Ojs.call x4536 "push" [|(any_to_js x4537)|]))
                           x4535;
                         x4536))|])
    let (getOwnPropertySymbols : any -> symbol list) =
      fun (x4539 : any) ->
        Ojs.list_of_js symbol_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
             "getOwnPropertySymbols" [|(any_to_js x4539)|])
    let (keys : untyped_object -> string list) =
      fun (x4541 : untyped_object) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "keys"
             [|(untyped_object_to_js x4541)|])
    let (is : value1:any -> value2:any -> bool) =
      fun ~value1:(x4543 : any) ->
        fun ~value2:(x4544 : any) ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "is"
               [|(any_to_js x4543);(any_to_js x4544)|])
    let (setPrototypeOf : o:any -> proto:untyped_object option -> any) =
      fun ~o:(x4545 : any) ->
        fun ~proto:(x4546 : untyped_object option) ->
          any_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
               "setPrototypeOf"
               [|(any_to_js x4545);(Ojs.option_to_js untyped_object_to_js
                                      x4546)|])
    let (create : ?value:any -> unit -> t) =
      fun ?value:(x4548 : any option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Object")
               (let x4549 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x4548 with
                 | Some x4550 ->
                     ignore (Ojs.call x4549 "push" [|(any_to_js x4550)|])
                 | None -> ());
                x4549))
    let (invoke : unit -> any) =
      fun () ->
        any_of_js (Ojs.apply (Ojs.get_prop_ascii Ojs.global "Object") [||])
    let (invoke' : any -> any) =
      fun (x4551 : any) ->
        any_of_js
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "Object")
             [|(any_to_js x4551)|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Object")
             "prototype")
    let (getPrototypeOf : any -> any) =
      fun (x4552 : any) ->
        any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "getPrototypeOf"
             [|(any_to_js x4552)|])
    let (getOwnPropertyDescriptor :
      o:any -> p:PropertyKey.t -> PropertyDescriptor.t option) =
      fun ~o:(x4553 : any) ->
        fun ~p:(x4554 : PropertyKey.t) ->
          Ojs.option_of_js PropertyDescriptor.t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
               "getOwnPropertyDescriptor"
               [|(any_to_js x4553);(PropertyKey.t_to_js x4554)|])
    let (getOwnPropertyNames : any -> string list) =
      fun (x4556 : any) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
             "getOwnPropertyNames" [|(any_to_js x4556)|])
    let (create_ : untyped_object option -> any) =
      fun (x4558 : untyped_object option) ->
        any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "create"
             [|(Ojs.option_to_js untyped_object_to_js x4558)|])
    let (create_' :
      o:untyped_object option ->
        properties:(PropertyDescriptorMap.t, any ThisType.t) intersection2 ->
          any)
      =
      fun ~o:(x4560 : untyped_object option) ->
        fun
          ~properties:(x4562 :
                        (PropertyDescriptorMap.t, any ThisType.t)
                          intersection2)
          ->
          any_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "create"
               [|(Ojs.option_to_js untyped_object_to_js x4560);(intersection2_to_js
                                                                  PropertyDescriptorMap.t_to_js
                                                                  (fun
                                                                    (x4564 :
                                                                    any
                                                                    ThisType.t)
                                                                    ->
                                                                    ThisType.t_to_js
                                                                    any_to_js
                                                                    x4564)
                                                                  x4562)|])
    let (defineProperty :
      o:'T ->
        p:PropertyKey.t ->
          attributes:(PropertyDescriptor.t, any ThisType.t) intersection2 ->
            'T)
      =
      fun ~o:(x4566 : 'T) ->
        fun ~p:(x4567 : PropertyKey.t) ->
          fun
            ~attributes:(x4568 :
                          (PropertyDescriptor.t, any ThisType.t)
                            intersection2)
            ->
            Obj.magic
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
                 "defineProperty"
                 [|(Obj.magic x4566);(PropertyKey.t_to_js x4567);(intersection2_to_js
                                                                    PropertyDescriptor.t_to_js
                                                                    (
                                                                    fun
                                                                    (x4570 :
                                                                    any
                                                                    ThisType.t)
                                                                    ->
                                                                    ThisType.t_to_js
                                                                    any_to_js
                                                                    x4570)
                                                                    x4568)|])
    let (defineProperties :
      o:'T ->
        properties:(PropertyDescriptorMap.t, any ThisType.t) intersection2 ->
          'T)
      =
      fun ~o:(x4572 : 'T) ->
        fun
          ~properties:(x4573 :
                        (PropertyDescriptorMap.t, any ThisType.t)
                          intersection2)
          ->
          Obj.magic
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
               "defineProperties"
               [|(Obj.magic x4572);(intersection2_to_js
                                      PropertyDescriptorMap.t_to_js
                                      (fun (x4575 : any ThisType.t) ->
                                         ThisType.t_to_js any_to_js x4575)
                                      x4573)|])
    let (seal : 'T -> 'T) =
      fun (x4577 : 'T) ->
        Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "seal"
             [|(Obj.magic x4577)|])
    let (freeze : 'T list -> 'T list) =
      fun (x4578 : 'T list) ->
        Ojs.list_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "freeze"
             [|(Ojs.list_to_js Obj.magic x4578)|])
    let (freeze' : 'T -> 'T) =
      fun (x4581 : 'T) ->
        Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "freeze"
             [|(Obj.magic x4581)|])
    let (freeze'' : 'T -> 'T Readonly.t) =
      fun (x4582 : 'T) ->
        Readonly.t_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "freeze"
             [|(Obj.magic x4582)|])
    let (preventExtensions : 'T -> 'T) =
      fun (x4584 : 'T) ->
        Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object")
             "preventExtensions" [|(Obj.magic x4584)|])
    let (isSealed : any -> bool) =
      fun (x4585 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "isSealed"
             [|(any_to_js x4585)|])
    let (isFrozen : any -> bool) =
      fun (x4586 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "isFrozen"
             [|(any_to_js x4586)|])
    let (isExtensible : any -> bool) =
      fun (x4587 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "isExtensible"
             [|(any_to_js x4587)|])
    let (keys' : untyped_object -> string list) =
      fun (x4588 : untyped_object) ->
        Ojs.list_of_js Ojs.string_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Object") "keys"
             [|(untyped_object_to_js x4588)|])
    let cast_from = Obj.magic
  end
module PropertyDecorator =
  struct
    type t = [ `PropertyDecorator ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4591 : Ojs.t) -> t_of_js x4591
    and t_0_to_js : t_0 -> Ojs.t = fun (x4590 : t) -> t_to_js x4590
    type tags = [ `PropertyDecorator ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `PropertyDecorator ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4594 : Ojs.t) -> intf_of_js __tags_of_js x4594
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4592 : __tags intf) -> intf_to_js __tags_to_js x4592
    let (apply :
      'tags this ->
        target:Object.t ->
          propertyKey:[ `U1 of string  | `U2 of symbol ] -> unit)
      =
      fun (x4600 : 'tags this) ->
        fun ~target:(x4596 : Object.t) ->
          fun ~propertyKey:(x4597 : [ `U1 of string  | `U2 of symbol ]) ->
            ignore
              (Ojs.apply (this_to_js Obj.magic x4600)
                 [|(Object.t_to_js x4596);((match x4597 with
                                            | `U1 x4598 ->
                                                Ojs.string_to_js x4598
                                            | `U2 x4599 -> symbol_to_js x4599))|])
    let cast_from = Obj.magic
  end
module PromiseLike =
  struct
    type 'T t = [ `PromiseLike of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4604 : Ojs.t) -> t_of_js __T_of_js x4604
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x4602 : __T t) -> t_to_js __T_to_js x4602
    type 'T tags = [ `PromiseLike of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `PromiseLike of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x4608 : Ojs.t) -> intf_of_js __tags_of_js x4608
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x4606 : __tags intf) -> intf_to_js __tags_to_js x4606
    let (then_ :
      ('tags, 'T) this ->
        ?onfulfilled:[ `Null  | `Undefined of undefined 
                     | `U1 of
                         'T -> [ `U1 of 'TResult1  | `U2 of 'TResult1 t ] ]
          ->
          ?onrejected:[ `Null  | `Undefined of undefined 
                      | `U1 of
                          any -> [ `U1 of 'TResult2  | `U2 of 'TResult2 t ] ]
            -> unit -> ('TResult1, 'TResult2) union2 t)
      =
      fun (x4627 : ('tags, 'T) this) ->
        fun
          ?onfulfilled:(x4610 :
                         [ `Null  | `Undefined of undefined 
                         | `U1 of
                             'T -> [ `U1 of 'TResult1  | `U2 of 'TResult1 t ] ]
                           option)
          ->
          fun
            ?onrejected:(x4611 :
                          [ `Null  | `Undefined of undefined 
                          | `U1 of
                              any ->
                                [ `U1 of 'TResult2  | `U2 of 'TResult2 t ]
                              ]
                            option)
            ->
            fun () ->
              t_of_js
                (fun (x4631 : Ojs.t) ->
                   union2_of_js Obj.magic Obj.magic x4631)
                (let x4630 = this_to_js Obj.magic Obj.magic x4627 in
                 Ojs.call (Ojs.get_prop_ascii x4630 "then") "apply"
                   [|x4630;((let x4612 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x4610 with
                              | Some x4620 ->
                                  ignore
                                    (Ojs.call x4612 "push"
                                       [|((match x4620 with
                                           | `Null -> Ojs.null
                                           | `Undefined x4621 ->
                                               undefined_to_js x4621
                                           | `U1 x4622 ->
                                               Ojs.fun_to_js 1
                                                 (fun (x4623 : Ojs.t) ->
                                                    match x4622
                                                            (Obj.magic x4623)
                                                    with
                                                    | `U1 x4624 ->
                                                        Obj.magic x4624
                                                    | `U2 x4625 ->
                                                        t_to_js Obj.magic
                                                          x4625)))|])
                              | None -> ());
                             (match x4611 with
                              | Some x4613 ->
                                  ignore
                                    (Ojs.call x4612 "push"
                                       [|((match x4613 with
                                           | `Null -> Ojs.null
                                           | `Undefined x4614 ->
                                               undefined_to_js x4614
                                           | `U1 x4615 ->
                                               Ojs.fun_to_js 1
                                                 (fun (x4616 : Ojs.t) ->
                                                    match x4615
                                                            (any_of_js x4616)
                                                    with
                                                    | `U1 x4617 ->
                                                        Obj.magic x4617
                                                    | `U2 x4618 ->
                                                        t_to_js Obj.magic
                                                          x4618)))|])
                              | None -> ());
                             x4612))|])
    let cast_from = Obj.magic
  end
module PromiseConstructorLike =
  struct
    module AnonymousInterface9 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x4635 : Ojs.t) -> x4635
        and t_to_js : t -> Ojs.t = fun (x4634 : Ojs.t) -> x4634
        let (create :
          t ->
            executor:(resolve:([ `U1 of 'T  | `U2 of 'T PromiseLike.t ] ->
                                 unit)
                        -> reject:(?reason:any -> unit -> unit) -> unit)
              -> 'T PromiseLike.t)
          =
          fun (x4646 : t) ->
            fun
              ~executor:(x4636 :
                          resolve:([ `U1 of 'T  | `U2 of 'T PromiseLike.t ]
                                     -> unit)
                            -> reject:(?reason:any -> unit -> unit) -> unit)
              ->
              PromiseLike.t_of_js Obj.magic
                (Ojs.new_obj (t_to_js x4646)
                   [|(Ojs.fun_to_js 2
                        (fun (x4637 : Ojs.t) ->
                           fun (x4642 : Ojs.t) ->
                             x4636
                               ~resolve:(fun
                                           (x4638 :
                                             [ `U1 of 'T 
                                             | `U2 of 'T PromiseLike.t ])
                                           ->
                                           ignore
                                             (Ojs.apply x4637
                                                [|((match x4638 with
                                                    | `U1 x4639 ->
                                                        Obj.magic x4639
                                                    | `U2 x4640 ->
                                                        PromiseLike.t_to_js
                                                          Obj.magic x4640))|]))
                               ~reject:(fun ?reason:(x4643 : any option) ->
                                          fun () ->
                                            ignore
                                              (Ojs.call x4642 "apply"
                                                 [|Ojs.null;((let x4644 =
                                                                Ojs.new_obj
                                                                  (Ojs.get_prop_ascii
                                                                    Ojs.global
                                                                    "Array")
                                                                  [||] in
                                                              (match x4643
                                                               with
                                                               | Some x4645
                                                                   ->
                                                                   ignore
                                                                    (Ojs.call
                                                                    x4644
                                                                    "push"
                                                                    [|(
                                                                    any_to_js
                                                                    x4645)|])
                                                               | None -> ());
                                                              x4644))|]))))|])
      end
    type t = AnonymousInterface9.t
    let rec t_of_js : Ojs.t -> t =
      fun (x4649 : Ojs.t) -> AnonymousInterface9.t_of_js x4649
    and t_to_js : t -> Ojs.t =
      fun (x4648 : AnonymousInterface9.t) ->
        AnonymousInterface9.t_to_js x4648
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4651 : Ojs.t) -> t_of_js x4651
    and t_0_to_js : t_0 -> Ojs.t = fun (x4650 : t) -> t_to_js x4650
  end
module Parameters =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4653 : Ojs.t) -> any_of_js x4653
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x4652 : any) -> any_to_js x4652
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4656 : Ojs.t) -> t_of_js __T_of_js x4656
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x4654 : __T t) -> t_to_js __T_to_js x4654
  end
module ParameterDecorator =
  struct
    type t = [ `ParameterDecorator ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4659 : Ojs.t) -> t_of_js x4659
    and t_0_to_js : t_0 -> Ojs.t = fun (x4658 : t) -> t_to_js x4658
    type tags = [ `ParameterDecorator ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ParameterDecorator ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4662 : Ojs.t) -> intf_of_js __tags_of_js x4662
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4660 : __tags intf) -> intf_to_js __tags_to_js x4660
    let (apply :
      'tags this ->
        target:Object.t ->
          propertyKey:[ `U1 of string  | `U2 of symbol ] ->
            parameterIndex:float -> unit)
      =
      fun (x4669 : 'tags this) ->
        fun ~target:(x4664 : Object.t) ->
          fun ~propertyKey:(x4665 : [ `U1 of string  | `U2 of symbol ]) ->
            fun ~parameterIndex:(x4668 : float) ->
              ignore
                (Ojs.apply (this_to_js Obj.magic x4669)
                   [|(Object.t_to_js x4664);((match x4665 with
                                              | `U1 x4666 ->
                                                  Ojs.string_to_js x4666
                                              | `U2 x4667 ->
                                                  symbol_to_js x4667));(
                     Ojs.float_to_js x4668)|])
    let cast_from = Obj.magic
  end
module Pick =
  struct
    type ('T, 'K) t = any
    let rec t_of_js :
      'T 'K . (Ojs.t -> 'T) -> (Ojs.t -> 'K) -> Ojs.t -> ('T, 'K) t = fun
      (type __T) -> fun (type __K) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__K_of_js : Ojs.t -> __K) ->
          fun (x4672 : Ojs.t) -> any_of_js x4672
    and t_to_js :
      'T 'K . ('T -> Ojs.t) -> ('K -> Ojs.t) -> ('T, 'K) t -> Ojs.t = fun
      (type __T) -> fun (type __K) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__K_to_js : __K -> Ojs.t) ->
          fun (x4671 : any) -> any_to_js x4671
    type ('T, 'K) t_2 = ('T, 'K) t
    let rec t_2_of_js :
      'T 'K . (Ojs.t -> 'T) -> (Ojs.t -> 'K) -> Ojs.t -> ('T, 'K) t_2 = fun
      (type __T) -> fun (type __K) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__K_of_js : Ojs.t -> __K) ->
          fun (x4676 : Ojs.t) -> t_of_js __T_of_js __K_of_js x4676
    and t_2_to_js :
      'T 'K . ('T -> Ojs.t) -> ('K -> Ojs.t) -> ('T, 'K) t_2 -> Ojs.t = fun
      (type __T) -> fun (type __K) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__K_to_js : __K -> Ojs.t) ->
          fun (x4673 : (__T, __K) t) -> t_to_js __T_to_js __K_to_js x4673
  end
module Exclude =
  struct
    type ('T, 'U) t = any
    let rec t_of_js :
      'T 'U . (Ojs.t -> 'T) -> (Ojs.t -> 'U) -> Ojs.t -> ('T, 'U) t = fun
      (type __T) -> fun (type __U) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__U_of_js : Ojs.t -> __U) ->
          fun (x4680 : Ojs.t) -> any_of_js x4680
    and t_to_js :
      'T 'U . ('T -> Ojs.t) -> ('U -> Ojs.t) -> ('T, 'U) t -> Ojs.t = fun
      (type __T) -> fun (type __U) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__U_to_js : __U -> Ojs.t) ->
          fun (x4679 : any) -> any_to_js x4679
    type ('T, 'U) t_2 = ('T, 'U) t
    let rec t_2_of_js :
      'T 'U . (Ojs.t -> 'T) -> (Ojs.t -> 'U) -> Ojs.t -> ('T, 'U) t_2 = fun
      (type __T) -> fun (type __U) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__U_of_js : Ojs.t -> __U) ->
          fun (x4684 : Ojs.t) -> t_of_js __T_of_js __U_of_js x4684
    and t_2_to_js :
      'T 'U . ('T -> Ojs.t) -> ('U -> Ojs.t) -> ('T, 'U) t_2 -> Ojs.t = fun
      (type __T) -> fun (type __U) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__U_to_js : __U -> Ojs.t) ->
          fun (x4681 : (__T, __U) t) -> t_to_js __T_to_js __U_to_js x4681
  end
module Omit =
  struct
    type ('T, 'K) t = ('T, (any, 'K) Exclude.t) Pick.t
    let rec t_of_js :
      'T 'K . (Ojs.t -> 'T) -> (Ojs.t -> 'K) -> Ojs.t -> ('T, 'K) t = fun
      (type __T) -> fun (type __K) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__K_of_js : Ojs.t -> __K) ->
          fun (x4692 : Ojs.t) ->
            Pick.t_of_js __T_of_js
              (fun (x4694 : Ojs.t) ->
                 Exclude.t_of_js any_of_js __K_of_js x4694) x4692
    and t_to_js :
      'T 'K . ('T -> Ojs.t) -> ('K -> Ojs.t) -> ('T, 'K) t -> Ojs.t = fun
      (type __T) -> fun (type __K) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__K_to_js : __K -> Ojs.t) ->
          fun (x4687 : (__T, (any, __K) Exclude.t) Pick.t) ->
            Pick.t_to_js __T_to_js
              (fun (x4689 : (any, __K) Exclude.t) ->
                 Exclude.t_to_js any_to_js __K_to_js x4689) x4687
    type ('T, 'K) t_2 = ('T, 'K) t
    let rec t_2_of_js :
      'T 'K . (Ojs.t -> 'T) -> (Ojs.t -> 'K) -> Ojs.t -> ('T, 'K) t_2 = fun
      (type __T) -> fun (type __K) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__K_of_js : Ojs.t -> __K) ->
          fun (x4700 : Ojs.t) -> t_of_js __T_of_js __K_of_js x4700
    and t_2_to_js :
      'T 'K . ('T -> Ojs.t) -> ('K -> Ojs.t) -> ('T, 'K) t_2 -> Ojs.t = fun
      (type __T) -> fun (type __K) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__K_to_js : __K -> Ojs.t) ->
          fun (x4697 : (__T, __K) t) -> t_to_js __T_to_js __K_to_js x4697
  end
module Number =
  struct
    type t = [ `Number ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x4704 : Ojs.t) -> t_of_js x4704
    and t_0_to_js : t_0 -> Ojs.t = fun (x4703 : t) -> t_to_js x4703
    type tags = [ `Number ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Number ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x4707 : Ojs.t) -> intf_of_js __tags_of_js x4707
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x4705 : __tags intf) -> intf_to_js __tags_to_js x4705
    let (toLocaleString :
      'tags this ->
        ?locales:[ `U1 of string  | `U2 of string list ] ->
          ?options:Intl.NumberFormatOptions.t -> unit -> string)
      =
      fun (x4717 : 'tags this) ->
        fun ?locales:(x4709 : [ `U1 of string  | `U2 of string list ] option)
          ->
          fun ?options:(x4710 : Intl.NumberFormatOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x4719 = this_to_js Obj.magic x4717 in
                 Ojs.call (Ojs.get_prop_ascii x4719 "toLocaleString") "apply"
                   [|x4719;((let x4711 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x4709 with
                              | Some x4713 ->
                                  ignore
                                    (Ojs.call x4711 "push"
                                       [|((match x4713 with
                                           | `U1 x4714 ->
                                               Ojs.string_to_js x4714
                                           | `U2 x4715 ->
                                               Ojs.list_to_js
                                                 Ojs.string_to_js x4715))|])
                              | None -> ());
                             (match x4710 with
                              | Some x4712 ->
                                  ignore
                                    (Ojs.call x4711 "push"
                                       [|(Intl.NumberFormatOptions.t_to_js
                                            x4712)|])
                              | None -> ());
                             x4711))|])
    let (toString : 'tags this -> ?radix:float -> unit -> string) =
      fun (x4723 : 'tags this) ->
        fun ?radix:(x4720 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x4725 = this_to_js Obj.magic x4723 in
               Ojs.call (Ojs.get_prop_ascii x4725 "toString") "apply"
                 [|x4725;((let x4721 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x4720 with
                            | Some x4722 ->
                                ignore
                                  (Ojs.call x4721 "push"
                                     [|(Ojs.float_to_js x4722)|])
                            | None -> ());
                           x4721))|])
    let (toFixed : 'tags this -> ?fractionDigits:float -> unit -> string) =
      fun (x4729 : 'tags this) ->
        fun ?fractionDigits:(x4726 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x4731 = this_to_js Obj.magic x4729 in
               Ojs.call (Ojs.get_prop_ascii x4731 "toFixed") "apply"
                 [|x4731;((let x4727 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x4726 with
                            | Some x4728 ->
                                ignore
                                  (Ojs.call x4727 "push"
                                     [|(Ojs.float_to_js x4728)|])
                            | None -> ());
                           x4727))|])
    let (toExponential :
      'tags this -> ?fractionDigits:float -> unit -> string) =
      fun (x4735 : 'tags this) ->
        fun ?fractionDigits:(x4732 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x4737 = this_to_js Obj.magic x4735 in
               Ojs.call (Ojs.get_prop_ascii x4737 "toExponential") "apply"
                 [|x4737;((let x4733 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x4732 with
                            | Some x4734 ->
                                ignore
                                  (Ojs.call x4733 "push"
                                     [|(Ojs.float_to_js x4734)|])
                            | None -> ());
                           x4733))|])
    let (toPrecision : 'tags this -> ?precision:float -> unit -> string) =
      fun (x4741 : 'tags this) ->
        fun ?precision:(x4738 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x4743 = this_to_js Obj.magic x4741 in
               Ojs.call (Ojs.get_prop_ascii x4743 "toPrecision") "apply"
                 [|x4743;((let x4739 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x4738 with
                            | Some x4740 ->
                                ignore
                                  (Ojs.call x4739 "push"
                                     [|(Ojs.float_to_js x4740)|])
                            | None -> ());
                           x4739))|])
    let (valueOf : 'tags this -> float) =
      fun (x4744 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x4744) "valueOf" [||])
    let (epsilon : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "EPSILON")
    let (isFinite : unknown -> bool) =
      fun (x4746 : unknown) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "isFinite"
             [|(unknown_to_js x4746)|])
    let (isInteger : unknown -> bool) =
      fun (x4747 : unknown) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "isInteger"
             [|(unknown_to_js x4747)|])
    let (isNaN : unknown -> bool) =
      fun (x4748 : unknown) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "isNaN"
             [|(unknown_to_js x4748)|])
    let (isSafeInteger : unknown -> bool) =
      fun (x4749 : unknown) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "isSafeInteger"
             [|(unknown_to_js x4749)|])
    let (max_safe_integer : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "MAX_SAFE_INTEGER")
    let (min_safe_integer : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "MIN_SAFE_INTEGER")
    let (parseFloat : string -> float) =
      fun (x4750 : string) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "parseFloat"
             [|(Ojs.string_to_js x4750)|])
    let (parseInt : string:string -> ?radix:float -> unit -> float) =
      fun ~string:(x4751 : string) ->
        fun ?radix:(x4752 : float option) ->
          fun () ->
            Ojs.float_of_js
              (let x4755 = Ojs.get_prop_ascii Ojs.global "Number" in
               Ojs.call (Ojs.get_prop_ascii x4755 "parseInt") "apply"
                 [|x4755;((let x4753 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x4753 "push"
                                [|(Ojs.string_to_js x4751)|]);
                           (match x4752 with
                            | Some x4754 ->
                                ignore
                                  (Ojs.call x4753 "push"
                                     [|(Ojs.float_to_js x4754)|])
                            | None -> ());
                           x4753))|])
    let (create : ?value:any -> unit -> t) =
      fun ?value:(x4756 : any option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Number")
               (let x4757 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x4756 with
                 | Some x4758 ->
                     ignore (Ojs.call x4757 "push" [|(any_to_js x4758)|])
                 | None -> ());
                x4757))
    let (invoke : ?value:any -> unit -> float) =
      fun ?value:(x4759 : any option) ->
        fun () ->
          Ojs.float_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Number") "apply"
               [|Ojs.null;((let x4760 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x4759 with
                             | Some x4761 ->
                                 ignore
                                   (Ojs.call x4760 "push"
                                      [|(any_to_js x4761)|])
                             | None -> ());
                            x4760))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "prototype")
    let (max_value : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "MAX_VALUE")
    let (min_value : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "MIN_VALUE")
    let (nan : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number") "NaN")
    let (negative_infinity : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "NEGATIVE_INFINITY")
    let (positive_infinity : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Number")
             "POSITIVE_INFINITY")
    let cast_from = Obj.magic
    let (of_ml : float -> t) =
      fun (x4762 : float) -> t_of_js (Ojs.float_to_js x4762)
    let (to_ml : t -> float) =
      fun (x4763 : t) ->
        Ojs.float_of_js (Ojs.call (t_to_js x4763) "valueOf" [||])
  end
module NonNullable =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4765 : Ojs.t) -> any_of_js x4765
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x4764 : any) -> any_to_js x4764
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x4768 : Ojs.t) -> t_of_js __T_of_js x4768
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x4766 : __T t) -> t_to_js __T_to_js x4766
  end
module NewableFunction =
  struct
    module AnonymousInterface43 =
      struct
        type 'T t = Ojs.t
        let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type
          __T) ->
          fun (__T_of_js : Ojs.t -> __T) -> fun (x4771 : Ojs.t) -> x4771
        and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
          fun (__T_to_js : __T -> Ojs.t) -> fun (x4770 : Ojs.t) -> x4770
        let (create : 'T t -> 'T) =
          fun (x4772 : 'T t) ->
            Obj.magic (Ojs.new_obj (t_to_js Obj.magic x4772) [||])
        module Make(T:Ojs.T) =
          struct
            type 'T parent = 'T t
            let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent =
              fun (type __T) ->
              fun (__T_of_js : Ojs.t -> __T) ->
                fun (x4776 : Ojs.t) -> t_of_js __T_of_js x4776
            and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t = fun
              (type __T) ->
              fun (__T_to_js : __T -> Ojs.t) ->
                fun (x4774 : __T t) -> t_to_js __T_to_js x4774
            type t = T.t parent
            let rec t_of_js : Ojs.t -> t =
              fun (x4780 : Ojs.t) -> parent_of_js T.t_of_js x4780
            and t_to_js : t -> Ojs.t =
              fun (x4778 : T.t parent) -> parent_to_js T.t_to_js x4778
            let (create : t -> T.t) =
              fun (x4782 : t) -> T.t_of_js (Ojs.new_obj (t_to_js x4782) [||])
          end
      end
    module AnonymousInterface39 =
      struct
        type ('AX, 'R) t = Ojs.t
        let rec t_of_js :
          'AX 'R . (Ojs.t -> 'AX) -> (Ojs.t -> 'R) -> Ojs.t -> ('AX, 'R) t =
          fun (type __AX) -> fun (type __R) ->
          fun (__AX_of_js : Ojs.t -> __AX) ->
            fun (__R_of_js : Ojs.t -> __R) -> fun (x4784 : Ojs.t) -> x4784
        and t_to_js :
          'AX 'R . ('AX -> Ojs.t) -> ('R -> Ojs.t) -> ('AX, 'R) t -> Ojs.t =
          fun (type __AX) -> fun (type __R) ->
          fun (__AX_to_js : __AX -> Ojs.t) ->
            fun (__R_to_js : __R -> Ojs.t) -> fun (x4783 : Ojs.t) -> x4783
        let (create : ('AX, 'R) t -> args:'AX list -> 'R) =
          fun (x4788 : ('AX, 'R) t) ->
            fun ~args:(x4785 : 'AX list) ->
              Obj.magic
                (Ojs.new_obj_arr (t_to_js Obj.magic Obj.magic x4788)
                   (let x4786 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    List.iter
                      (fun (x4787 : 'AX) ->
                         ignore (Ojs.call x4786 "push" [|(Obj.magic x4787)|]))
                      x4785;
                    x4786))
        module Make(AX:Ojs.T)(R:Ojs.T) =
          struct
            type ('AX, 'R) parent = ('AX, 'R) t
            let rec parent_of_js :
              'AX 'R .
                (Ojs.t -> 'AX) -> (Ojs.t -> 'R) -> Ojs.t -> ('AX, 'R) parent
              = fun (type __AX) -> fun (type __R) ->
              fun (__AX_of_js : Ojs.t -> __AX) ->
                fun (__R_of_js : Ojs.t -> __R) ->
                  fun (x4794 : Ojs.t) -> t_of_js __AX_of_js __R_of_js x4794
            and parent_to_js :
              'AX 'R .
                ('AX -> Ojs.t) -> ('R -> Ojs.t) -> ('AX, 'R) parent -> Ojs.t
              = fun (type __AX) -> fun (type __R) ->
              fun (__AX_to_js : __AX -> Ojs.t) ->
                fun (__R_to_js : __R -> Ojs.t) ->
                  fun (x4791 : (__AX, __R) t) ->
                    t_to_js __AX_to_js __R_to_js x4791
            type t = (AX.t, R.t) parent
            let rec t_of_js : Ojs.t -> t =
              fun (x4800 : Ojs.t) -> parent_of_js AX.t_of_js R.t_of_js x4800
            and t_to_js : t -> Ojs.t =
              fun (x4797 : (AX.t, R.t) parent) ->
                parent_to_js AX.t_to_js R.t_to_js x4797
            let (create : t -> args:AX.t list -> R.t) =
              fun (x4806 : t) ->
                fun ~args:(x4803 : AX.t list) ->
                  R.t_of_js
                    (Ojs.new_obj_arr (t_to_js x4806)
                       (let x4804 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x4805 : AX.t) ->
                             ignore
                               (Ojs.call x4804 "push" [|(AX.t_to_js x4805)|]))
                          x4803;
                        x4804))
          end
      end
    module AnonymousInterface36 =
      struct
        type ('A, 'T) t = Ojs.t
        let rec t_of_js :
          'A 'T . (Ojs.t -> 'A) -> (Ojs.t -> 'T) -> Ojs.t -> ('A, 'T) t = fun
          (type __A) -> fun (type __T) ->
          fun (__A_of_js : Ojs.t -> __A) ->
            fun (__T_of_js : Ojs.t -> __T) -> fun (x4808 : Ojs.t) -> x4808
        and t_to_js :
          'A 'T . ('A -> Ojs.t) -> ('T -> Ojs.t) -> ('A, 'T) t -> Ojs.t = fun
          (type __A) -> fun (type __T) ->
          fun (__A_to_js : __A -> Ojs.t) ->
            fun (__T_to_js : __T -> Ojs.t) -> fun (x4807 : Ojs.t) -> x4807
        let (create : ('A, 'T) t -> args:any list -> 'T) =
          fun (x4812 : ('A, 'T) t) ->
            fun ~args:(x4809 : any list) ->
              Obj.magic
                (Ojs.new_obj_arr (t_to_js Obj.magic Obj.magic x4812)
                   (let x4810 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    List.iter
                      (fun (x4811 : any) ->
                         ignore (Ojs.call x4810 "push" [|(any_to_js x4811)|]))
                      x4809;
                    x4810))
        module Make(A:Ojs.T)(T:Ojs.T) =
          struct
            type ('A, 'T) parent = ('A, 'T) t
            let rec parent_of_js :
              'A 'T .
                (Ojs.t -> 'A) -> (Ojs.t -> 'T) -> Ojs.t -> ('A, 'T) parent
              = fun (type __A) -> fun (type __T) ->
              fun (__A_of_js : Ojs.t -> __A) ->
                fun (__T_of_js : Ojs.t -> __T) ->
                  fun (x4818 : Ojs.t) -> t_of_js __A_of_js __T_of_js x4818
            and parent_to_js :
              'A 'T .
                ('A -> Ojs.t) -> ('T -> Ojs.t) -> ('A, 'T) parent -> Ojs.t
              = fun (type __A) -> fun (type __T) ->
              fun (__A_to_js : __A -> Ojs.t) ->
                fun (__T_to_js : __T -> Ojs.t) ->
                  fun (x4815 : (__A, __T) t) ->
                    t_to_js __A_to_js __T_to_js x4815
            type t = (A.t, T.t) parent
            let rec t_of_js : Ojs.t -> t =
              fun (x4824 : Ojs.t) -> parent_of_js A.t_of_js T.t_of_js x4824
            and t_to_js : t -> Ojs.t =
              fun (x4821 : (A.t, T.t) parent) ->
                parent_to_js A.t_to_js T.t_to_js x4821
            let (create : t -> args:any list -> T.t) =
              fun (x4830 : t) ->
                fun ~args:(x4827 : any list) ->
                  T.t_of_js
                    (Ojs.new_obj_arr (t_to_js x4830)
                       (let x4828 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x4829 : any) ->
                             ignore
                               (Ojs.call x4828 "push" [|(any_to_js x4829)|]))
                          x4827;
                        x4828))
          end
      end
    module AnonymousInterface33 =
      struct
        type ('A, 'R) t = Ojs.t
        let rec t_of_js :
          'A 'R . (Ojs.t -> 'A) -> (Ojs.t -> 'R) -> Ojs.t -> ('A, 'R) t = fun
          (type __A) -> fun (type __R) ->
          fun (__A_of_js : Ojs.t -> __A) ->
            fun (__R_of_js : Ojs.t -> __R) -> fun (x4832 : Ojs.t) -> x4832
        and t_to_js :
          'A 'R . ('A -> Ojs.t) -> ('R -> Ojs.t) -> ('A, 'R) t -> Ojs.t = fun
          (type __A) -> fun (type __R) ->
          fun (__A_to_js : __A -> Ojs.t) ->
            fun (__R_to_js : __R -> Ojs.t) -> fun (x4831 : Ojs.t) -> x4831
        let (create : ('A, 'R) t -> args:any list -> 'R) =
          fun (x4836 : ('A, 'R) t) ->
            fun ~args:(x4833 : any list) ->
              Obj.magic
                (Ojs.new_obj_arr (t_to_js Obj.magic Obj.magic x4836)
                   (let x4834 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    List.iter
                      (fun (x4835 : any) ->
                         ignore (Ojs.call x4834 "push" [|(any_to_js x4835)|]))
                      x4833;
                    x4834))
        module Make(A:Ojs.T)(R:Ojs.T) =
          struct
            type ('A, 'R) parent = ('A, 'R) t
            let rec parent_of_js :
              'A 'R .
                (Ojs.t -> 'A) -> (Ojs.t -> 'R) -> Ojs.t -> ('A, 'R) parent
              = fun (type __A) -> fun (type __R) ->
              fun (__A_of_js : Ojs.t -> __A) ->
                fun (__R_of_js : Ojs.t -> __R) ->
                  fun (x4842 : Ojs.t) -> t_of_js __A_of_js __R_of_js x4842
            and parent_to_js :
              'A 'R .
                ('A -> Ojs.t) -> ('R -> Ojs.t) -> ('A, 'R) parent -> Ojs.t
              = fun (type __A) -> fun (type __R) ->
              fun (__A_to_js : __A -> Ojs.t) ->
                fun (__R_to_js : __R -> Ojs.t) ->
                  fun (x4839 : (__A, __R) t) ->
                    t_to_js __A_to_js __R_to_js x4839
            type t = (A.t, R.t) parent
            let rec t_of_js : Ojs.t -> t =
              fun (x4848 : Ojs.t) -> parent_of_js A.t_of_js R.t_of_js x4848
            and t_to_js : t -> Ojs.t =
              fun (x4845 : (A.t, R.t) parent) ->
                parent_to_js A.t_to_js R.t_to_js x4845
            let (create : t -> args:any list -> R.t) =
              fun (x4854 : t) ->
                fun ~args:(x4851 : any list) ->
                  R.t_of_js
                    (Ojs.new_obj_arr (t_to_js x4854)
                       (let x4852 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x4853 : any) ->
                             ignore
                               (Ojs.call x4852 "push" [|(any_to_js x4853)|]))
                          x4851;
                        x4852))
          end
      end
    module AnonymousInterface31 =
      struct
        type ('A, 'A0, 'R) t = Ojs.t
        let rec t_of_js :
          'A 'A0 'R .
            (Ojs.t -> 'A) ->
              (Ojs.t -> 'A0) -> (Ojs.t -> 'R) -> Ojs.t -> ('A, 'A0, 'R) t
          = fun (type __A) -> fun (type __A0) -> fun (type __R) ->
          fun (__A_of_js : Ojs.t -> __A) ->
            fun (__A0_of_js : Ojs.t -> __A0) ->
              fun (__R_of_js : Ojs.t -> __R) -> fun (x4856 : Ojs.t) -> x4856
        and t_to_js :
          'A 'A0 'R .
            ('A -> Ojs.t) ->
              ('A0 -> Ojs.t) -> ('R -> Ojs.t) -> ('A, 'A0, 'R) t -> Ojs.t
          = fun (type __A) -> fun (type __A0) -> fun (type __R) ->
          fun (__A_to_js : __A -> Ojs.t) ->
            fun (__A0_to_js : __A0 -> Ojs.t) ->
              fun (__R_to_js : __R -> Ojs.t) -> fun (x4855 : Ojs.t) -> x4855
        let (create : ('A, 'A0, 'R) t -> arg0:'A0 -> args:any list -> 'R) =
          fun (x4861 : ('A, 'A0, 'R) t) ->
            fun ~arg0:(x4857 : 'A0) ->
              fun ~args:(x4858 : any list) ->
                Obj.magic
                  (Ojs.new_obj_arr
                     (t_to_js Obj.magic Obj.magic Obj.magic x4861)
                     (let x4859 =
                        Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                          [||] in
                      ignore (Ojs.call x4859 "push" [|(Obj.magic x4857)|]);
                      List.iter
                        (fun (x4860 : any) ->
                           ignore
                             (Ojs.call x4859 "push" [|(any_to_js x4860)|]))
                        x4858;
                      x4859))
        module Make(A:Ojs.T)(A0:Ojs.T)(R:Ojs.T) =
          struct
            type ('A, 'A0, 'R) parent = ('A, 'A0, 'R) t
            let rec parent_of_js :
              'A 'A0 'R .
                (Ojs.t -> 'A) ->
                  (Ojs.t -> 'A0) ->
                    (Ojs.t -> 'R) -> Ojs.t -> ('A, 'A0, 'R) parent
              = fun (type __A) -> fun (type __A0) -> fun (type __R) ->
              fun (__A_of_js : Ojs.t -> __A) ->
                fun (__A0_of_js : Ojs.t -> __A0) ->
                  fun (__R_of_js : Ojs.t -> __R) ->
                    fun (x4869 : Ojs.t) ->
                      t_of_js __A_of_js __A0_of_js __R_of_js x4869
            and parent_to_js :
              'A 'A0 'R .
                ('A -> Ojs.t) ->
                  ('A0 -> Ojs.t) ->
                    ('R -> Ojs.t) -> ('A, 'A0, 'R) parent -> Ojs.t
              = fun (type __A) -> fun (type __A0) -> fun (type __R) ->
              fun (__A_to_js : __A -> Ojs.t) ->
                fun (__A0_to_js : __A0 -> Ojs.t) ->
                  fun (__R_to_js : __R -> Ojs.t) ->
                    fun (x4865 : (__A, __A0, __R) t) ->
                      t_to_js __A_to_js __A0_to_js __R_to_js x4865
            type t = (A.t, A0.t, R.t) parent
            let rec t_of_js : Ojs.t -> t =
              fun (x4877 : Ojs.t) ->
                parent_of_js A.t_of_js A0.t_of_js R.t_of_js x4877
            and t_to_js : t -> Ojs.t =
              fun (x4873 : (A.t, A0.t, R.t) parent) ->
                parent_to_js A.t_to_js A0.t_to_js R.t_to_js x4873
            let (create : t -> arg0:A0.t -> args:any list -> R.t) =
              fun (x4885 : t) ->
                fun ~arg0:(x4881 : A0.t) ->
                  fun ~args:(x4882 : any list) ->
                    R.t_of_js
                      (Ojs.new_obj_arr (t_to_js x4885)
                         (let x4883 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          ignore
                            (Ojs.call x4883 "push" [|(A0.t_to_js x4881)|]);
                          List.iter
                            (fun (x4884 : any) ->
                               ignore
                                 (Ojs.call x4883 "push" [|(any_to_js x4884)|]))
                            x4882;
                          x4883))
          end
      end
    module AnonymousInterface29 =
      struct
        type ('A, 'A0, 'A1, 'R) t = Ojs.t
        let rec t_of_js :
          'A 'A0 'A1 'R .
            (Ojs.t -> 'A) ->
              (Ojs.t -> 'A0) ->
                (Ojs.t -> 'A1) ->
                  (Ojs.t -> 'R) -> Ojs.t -> ('A, 'A0, 'A1, 'R) t
          = fun (type __A) -> fun (type __A0) -> fun (type __A1) -> fun (type
          __R) ->
          fun (__A_of_js : Ojs.t -> __A) ->
            fun (__A0_of_js : Ojs.t -> __A0) ->
              fun (__A1_of_js : Ojs.t -> __A1) ->
                fun (__R_of_js : Ojs.t -> __R) ->
                  fun (x4887 : Ojs.t) -> x4887
        and t_to_js :
          'A 'A0 'A1 'R .
            ('A -> Ojs.t) ->
              ('A0 -> Ojs.t) ->
                ('A1 -> Ojs.t) ->
                  ('R -> Ojs.t) -> ('A, 'A0, 'A1, 'R) t -> Ojs.t
          = fun (type __A) -> fun (type __A0) -> fun (type __A1) -> fun (type
          __R) ->
          fun (__A_to_js : __A -> Ojs.t) ->
            fun (__A0_to_js : __A0 -> Ojs.t) ->
              fun (__A1_to_js : __A1 -> Ojs.t) ->
                fun (__R_to_js : __R -> Ojs.t) ->
                  fun (x4886 : Ojs.t) -> x4886
        let (create :
          ('A, 'A0, 'A1, 'R) t -> arg0:'A0 -> arg1:'A1 -> args:any list -> 'R)
          =
          fun (x4893 : ('A, 'A0, 'A1, 'R) t) ->
            fun ~arg0:(x4888 : 'A0) ->
              fun ~arg1:(x4889 : 'A1) ->
                fun ~args:(x4890 : any list) ->
                  Obj.magic
                    (Ojs.new_obj_arr
                       (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic x4893)
                       (let x4891 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        ignore (Ojs.call x4891 "push" [|(Obj.magic x4888)|]);
                        ignore (Ojs.call x4891 "push" [|(Obj.magic x4889)|]);
                        List.iter
                          (fun (x4892 : any) ->
                             ignore
                               (Ojs.call x4891 "push" [|(any_to_js x4892)|]))
                          x4890;
                        x4891))
        module Make(A:Ojs.T)(A0:Ojs.T)(A1:Ojs.T)(R:Ojs.T) =
          struct
            type ('A, 'A0, 'A1, 'R) parent = ('A, 'A0, 'A1, 'R) t
            let rec parent_of_js :
              'A 'A0 'A1 'R .
                (Ojs.t -> 'A) ->
                  (Ojs.t -> 'A0) ->
                    (Ojs.t -> 'A1) ->
                      (Ojs.t -> 'R) -> Ojs.t -> ('A, 'A0, 'A1, 'R) parent
              = fun (type __A) -> fun (type __A0) -> fun (type __A1) -> fun
              (type __R) ->
              fun (__A_of_js : Ojs.t -> __A) ->
                fun (__A0_of_js : Ojs.t -> __A0) ->
                  fun (__A1_of_js : Ojs.t -> __A1) ->
                    fun (__R_of_js : Ojs.t -> __R) ->
                      fun (x4903 : Ojs.t) ->
                        t_of_js __A_of_js __A0_of_js __A1_of_js __R_of_js
                          x4903
            and parent_to_js :
              'A 'A0 'A1 'R .
                ('A -> Ojs.t) ->
                  ('A0 -> Ojs.t) ->
                    ('A1 -> Ojs.t) ->
                      ('R -> Ojs.t) -> ('A, 'A0, 'A1, 'R) parent -> Ojs.t
              = fun (type __A) -> fun (type __A0) -> fun (type __A1) -> fun
              (type __R) ->
              fun (__A_to_js : __A -> Ojs.t) ->
                fun (__A0_to_js : __A0 -> Ojs.t) ->
                  fun (__A1_to_js : __A1 -> Ojs.t) ->
                    fun (__R_to_js : __R -> Ojs.t) ->
                      fun (x4898 : (__A, __A0, __A1, __R) t) ->
                        t_to_js __A_to_js __A0_to_js __A1_to_js __R_to_js
                          x4898
            type t = (A.t, A0.t, A1.t, R.t) parent
            let rec t_of_js : Ojs.t -> t =
              fun (x4913 : Ojs.t) ->
                parent_of_js A.t_of_js A0.t_of_js A1.t_of_js R.t_of_js x4913
            and t_to_js : t -> Ojs.t =
              fun (x4908 : (A.t, A0.t, A1.t, R.t) parent) ->
                parent_to_js A.t_to_js A0.t_to_js A1.t_to_js R.t_to_js x4908
            let (create :
              t -> arg0:A0.t -> arg1:A1.t -> args:any list -> R.t) =
              fun (x4923 : t) ->
                fun ~arg0:(x4918 : A0.t) ->
                  fun ~arg1:(x4919 : A1.t) ->
                    fun ~args:(x4920 : any list) ->
                      R.t_of_js
                        (Ojs.new_obj_arr (t_to_js x4923)
                           (let x4921 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x4921 "push" [|(A0.t_to_js x4918)|]);
                            ignore
                              (Ojs.call x4921 "push" [|(A1.t_to_js x4919)|]);
                            List.iter
                              (fun (x4922 : any) ->
                                 ignore
                                   (Ojs.call x4921 "push"
                                      [|(any_to_js x4922)|])) x4920;
                            x4921))
          end
      end
    module AnonymousInterface27 =
      struct
        type ('A, 'A0, 'A1, 'A2, 'R) t = Ojs.t
        let rec t_of_js :
          'A 'A0 'A1 'A2 'R .
            (Ojs.t -> 'A) ->
              (Ojs.t -> 'A0) ->
                (Ojs.t -> 'A1) ->
                  (Ojs.t -> 'A2) ->
                    (Ojs.t -> 'R) -> Ojs.t -> ('A, 'A0, 'A1, 'A2, 'R) t
          = fun (type __A) -> fun (type __A0) -> fun (type __A1) -> fun (type
          __A2) -> fun (type __R) ->
          fun (__A_of_js : Ojs.t -> __A) ->
            fun (__A0_of_js : Ojs.t -> __A0) ->
              fun (__A1_of_js : Ojs.t -> __A1) ->
                fun (__A2_of_js : Ojs.t -> __A2) ->
                  fun (__R_of_js : Ojs.t -> __R) ->
                    fun (x4925 : Ojs.t) -> x4925
        and t_to_js :
          'A 'A0 'A1 'A2 'R .
            ('A -> Ojs.t) ->
              ('A0 -> Ojs.t) ->
                ('A1 -> Ojs.t) ->
                  ('A2 -> Ojs.t) ->
                    ('R -> Ojs.t) -> ('A, 'A0, 'A1, 'A2, 'R) t -> Ojs.t
          = fun (type __A) -> fun (type __A0) -> fun (type __A1) -> fun (type
          __A2) -> fun (type __R) ->
          fun (__A_to_js : __A -> Ojs.t) ->
            fun (__A0_to_js : __A0 -> Ojs.t) ->
              fun (__A1_to_js : __A1 -> Ojs.t) ->
                fun (__A2_to_js : __A2 -> Ojs.t) ->
                  fun (__R_to_js : __R -> Ojs.t) ->
                    fun (x4924 : Ojs.t) -> x4924
        let (create :
          ('A, 'A0, 'A1, 'A2, 'R) t ->
            arg0:'A0 -> arg1:'A1 -> arg2:'A2 -> args:any list -> 'R)
          =
          fun (x4932 : ('A, 'A0, 'A1, 'A2, 'R) t) ->
            fun ~arg0:(x4926 : 'A0) ->
              fun ~arg1:(x4927 : 'A1) ->
                fun ~arg2:(x4928 : 'A2) ->
                  fun ~args:(x4929 : any list) ->
                    Obj.magic
                      (Ojs.new_obj_arr
                         (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic
                            Obj.magic x4932)
                         (let x4930 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          ignore
                            (Ojs.call x4930 "push" [|(Obj.magic x4926)|]);
                          ignore
                            (Ojs.call x4930 "push" [|(Obj.magic x4927)|]);
                          ignore
                            (Ojs.call x4930 "push" [|(Obj.magic x4928)|]);
                          List.iter
                            (fun (x4931 : any) ->
                               ignore
                                 (Ojs.call x4930 "push" [|(any_to_js x4931)|]))
                            x4929;
                          x4930))
        module Make(A:Ojs.T)(A0:Ojs.T)(A1:Ojs.T)(A2:Ojs.T)(R:Ojs.T) =
          struct
            type ('A, 'A0, 'A1, 'A2, 'R) parent = ('A, 'A0, 'A1, 'A2, 'R) t
            let rec parent_of_js :
              'A 'A0 'A1 'A2 'R .
                (Ojs.t -> 'A) ->
                  (Ojs.t -> 'A0) ->
                    (Ojs.t -> 'A1) ->
                      (Ojs.t -> 'A2) ->
                        (Ojs.t -> 'R) ->
                          Ojs.t -> ('A, 'A0, 'A1, 'A2, 'R) parent
              = fun (type __A) -> fun (type __A0) -> fun (type __A1) -> fun
              (type __A2) -> fun (type __R) ->
              fun (__A_of_js : Ojs.t -> __A) ->
                fun (__A0_of_js : Ojs.t -> __A0) ->
                  fun (__A1_of_js : Ojs.t -> __A1) ->
                    fun (__A2_of_js : Ojs.t -> __A2) ->
                      fun (__R_of_js : Ojs.t -> __R) ->
                        fun (x4944 : Ojs.t) ->
                          t_of_js __A_of_js __A0_of_js __A1_of_js __A2_of_js
                            __R_of_js x4944
            and parent_to_js :
              'A 'A0 'A1 'A2 'R .
                ('A -> Ojs.t) ->
                  ('A0 -> Ojs.t) ->
                    ('A1 -> Ojs.t) ->
                      ('A2 -> Ojs.t) ->
                        ('R -> Ojs.t) ->
                          ('A, 'A0, 'A1, 'A2, 'R) parent -> Ojs.t
              = fun (type __A) -> fun (type __A0) -> fun (type __A1) -> fun
              (type __A2) -> fun (type __R) ->
              fun (__A_to_js : __A -> Ojs.t) ->
                fun (__A0_to_js : __A0 -> Ojs.t) ->
                  fun (__A1_to_js : __A1 -> Ojs.t) ->
                    fun (__A2_to_js : __A2 -> Ojs.t) ->
                      fun (__R_to_js : __R -> Ojs.t) ->
                        fun (x4938 : (__A, __A0, __A1, __A2, __R) t) ->
                          t_to_js __A_to_js __A0_to_js __A1_to_js __A2_to_js
                            __R_to_js x4938
            type t = (A.t, A0.t, A1.t, A2.t, R.t) parent
            let rec t_of_js : Ojs.t -> t =
              fun (x4956 : Ojs.t) ->
                parent_of_js A.t_of_js A0.t_of_js A1.t_of_js A2.t_of_js
                  R.t_of_js x4956
            and t_to_js : t -> Ojs.t =
              fun (x4950 : (A.t, A0.t, A1.t, A2.t, R.t) parent) ->
                parent_to_js A.t_to_js A0.t_to_js A1.t_to_js A2.t_to_js
                  R.t_to_js x4950
            let (create :
              t ->
                arg0:A0.t -> arg1:A1.t -> arg2:A2.t -> args:any list -> R.t)
              =
              fun (x4968 : t) ->
                fun ~arg0:(x4962 : A0.t) ->
                  fun ~arg1:(x4963 : A1.t) ->
                    fun ~arg2:(x4964 : A2.t) ->
                      fun ~args:(x4965 : any list) ->
                        R.t_of_js
                          (Ojs.new_obj_arr (t_to_js x4968)
                             (let x4966 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x4966 "push" [|(A0.t_to_js x4962)|]);
                              ignore
                                (Ojs.call x4966 "push" [|(A1.t_to_js x4963)|]);
                              ignore
                                (Ojs.call x4966 "push" [|(A2.t_to_js x4964)|]);
                              List.iter
                                (fun (x4967 : any) ->
                                   ignore
                                     (Ojs.call x4966 "push"
                                        [|(any_to_js x4967)|])) x4965;
                              x4966))
          end
      end
    module AnonymousInterface25 =
      struct
        type ('A, 'A0, 'A1, 'A2, 'A3, 'R) t = Ojs.t
        let rec t_of_js :
          'A 'A0 'A1 'A2 'A3 'R .
            (Ojs.t -> 'A) ->
              (Ojs.t -> 'A0) ->
                (Ojs.t -> 'A1) ->
                  (Ojs.t -> 'A2) ->
                    (Ojs.t -> 'A3) ->
                      (Ojs.t -> 'R) ->
                        Ojs.t -> ('A, 'A0, 'A1, 'A2, 'A3, 'R) t
          = fun (type __A) -> fun (type __A0) -> fun (type __A1) -> fun (type
          __A2) -> fun (type __A3) -> fun (type __R) ->
          fun (__A_of_js : Ojs.t -> __A) ->
            fun (__A0_of_js : Ojs.t -> __A0) ->
              fun (__A1_of_js : Ojs.t -> __A1) ->
                fun (__A2_of_js : Ojs.t -> __A2) ->
                  fun (__A3_of_js : Ojs.t -> __A3) ->
                    fun (__R_of_js : Ojs.t -> __R) ->
                      fun (x4970 : Ojs.t) -> x4970
        and t_to_js :
          'A 'A0 'A1 'A2 'A3 'R .
            ('A -> Ojs.t) ->
              ('A0 -> Ojs.t) ->
                ('A1 -> Ojs.t) ->
                  ('A2 -> Ojs.t) ->
                    ('A3 -> Ojs.t) ->
                      ('R -> Ojs.t) ->
                        ('A, 'A0, 'A1, 'A2, 'A3, 'R) t -> Ojs.t
          = fun (type __A) -> fun (type __A0) -> fun (type __A1) -> fun (type
          __A2) -> fun (type __A3) -> fun (type __R) ->
          fun (__A_to_js : __A -> Ojs.t) ->
            fun (__A0_to_js : __A0 -> Ojs.t) ->
              fun (__A1_to_js : __A1 -> Ojs.t) ->
                fun (__A2_to_js : __A2 -> Ojs.t) ->
                  fun (__A3_to_js : __A3 -> Ojs.t) ->
                    fun (__R_to_js : __R -> Ojs.t) ->
                      fun (x4969 : Ojs.t) -> x4969
        let (create :
          ('A, 'A0, 'A1, 'A2, 'A3, 'R) t ->
            arg0:'A0 ->
              arg1:'A1 -> arg2:'A2 -> arg3:'A3 -> args:any list -> 'R)
          =
          fun (x4978 : ('A, 'A0, 'A1, 'A2, 'A3, 'R) t) ->
            fun ~arg0:(x4971 : 'A0) ->
              fun ~arg1:(x4972 : 'A1) ->
                fun ~arg2:(x4973 : 'A2) ->
                  fun ~arg3:(x4974 : 'A3) ->
                    fun ~args:(x4975 : any list) ->
                      Obj.magic
                        (Ojs.new_obj_arr
                           (t_to_js Obj.magic Obj.magic Obj.magic Obj.magic
                              Obj.magic Obj.magic x4978)
                           (let x4976 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            ignore
                              (Ojs.call x4976 "push" [|(Obj.magic x4971)|]);
                            ignore
                              (Ojs.call x4976 "push" [|(Obj.magic x4972)|]);
                            ignore
                              (Ojs.call x4976 "push" [|(Obj.magic x4973)|]);
                            ignore
                              (Ojs.call x4976 "push" [|(Obj.magic x4974)|]);
                            List.iter
                              (fun (x4977 : any) ->
                                 ignore
                                   (Ojs.call x4976 "push"
                                      [|(any_to_js x4977)|])) x4975;
                            x4976))
        module Make(A:Ojs.T)(A0:Ojs.T)(A1:Ojs.T)(A2:Ojs.T)(A3:Ojs.T)(R:Ojs.T) =
          struct
            type ('A, 'A0, 'A1, 'A2, 'A3, 'R) parent =
              ('A, 'A0, 'A1, 'A2, 'A3, 'R) t
            let rec parent_of_js :
              'A 'A0 'A1 'A2 'A3 'R .
                (Ojs.t -> 'A) ->
                  (Ojs.t -> 'A0) ->
                    (Ojs.t -> 'A1) ->
                      (Ojs.t -> 'A2) ->
                        (Ojs.t -> 'A3) ->
                          (Ojs.t -> 'R) ->
                            Ojs.t -> ('A, 'A0, 'A1, 'A2, 'A3, 'R) parent
              = fun (type __A) -> fun (type __A0) -> fun (type __A1) -> fun
              (type __A2) -> fun (type __A3) -> fun (type __R) ->
              fun (__A_of_js : Ojs.t -> __A) ->
                fun (__A0_of_js : Ojs.t -> __A0) ->
                  fun (__A1_of_js : Ojs.t -> __A1) ->
                    fun (__A2_of_js : Ojs.t -> __A2) ->
                      fun (__A3_of_js : Ojs.t -> __A3) ->
                        fun (__R_of_js : Ojs.t -> __R) ->
                          fun (x4992 : Ojs.t) ->
                            t_of_js __A_of_js __A0_of_js __A1_of_js
                              __A2_of_js __A3_of_js __R_of_js x4992
            and parent_to_js :
              'A 'A0 'A1 'A2 'A3 'R .
                ('A -> Ojs.t) ->
                  ('A0 -> Ojs.t) ->
                    ('A1 -> Ojs.t) ->
                      ('A2 -> Ojs.t) ->
                        ('A3 -> Ojs.t) ->
                          ('R -> Ojs.t) ->
                            ('A, 'A0, 'A1, 'A2, 'A3, 'R) parent -> Ojs.t
              = fun (type __A) -> fun (type __A0) -> fun (type __A1) -> fun
              (type __A2) -> fun (type __A3) -> fun (type __R) ->
              fun (__A_to_js : __A -> Ojs.t) ->
                fun (__A0_to_js : __A0 -> Ojs.t) ->
                  fun (__A1_to_js : __A1 -> Ojs.t) ->
                    fun (__A2_to_js : __A2 -> Ojs.t) ->
                      fun (__A3_to_js : __A3 -> Ojs.t) ->
                        fun (__R_to_js : __R -> Ojs.t) ->
                          fun (x4985 : (__A, __A0, __A1, __A2, __A3, __R) t)
                            ->
                            t_to_js __A_to_js __A0_to_js __A1_to_js
                              __A2_to_js __A3_to_js __R_to_js x4985
            type t = (A.t, A0.t, A1.t, A2.t, A3.t, R.t) parent
            let rec t_of_js : Ojs.t -> t =
              fun (x5006 : Ojs.t) ->
                parent_of_js A.t_of_js A0.t_of_js A1.t_of_js A2.t_of_js
                  A3.t_of_js R.t_of_js x5006
            and t_to_js : t -> Ojs.t =
              fun (x4999 : (A.t, A0.t, A1.t, A2.t, A3.t, R.t) parent) ->
                parent_to_js A.t_to_js A0.t_to_js A1.t_to_js A2.t_to_js
                  A3.t_to_js R.t_to_js x4999
            let (create :
              t ->
                arg0:A0.t ->
                  arg1:A1.t -> arg2:A2.t -> arg3:A3.t -> args:any list -> R.t)
              =
              fun (x5020 : t) ->
                fun ~arg0:(x5013 : A0.t) ->
                  fun ~arg1:(x5014 : A1.t) ->
                    fun ~arg2:(x5015 : A2.t) ->
                      fun ~arg3:(x5016 : A3.t) ->
                        fun ~args:(x5017 : any list) ->
                          R.t_of_js
                            (Ojs.new_obj_arr (t_to_js x5020)
                               (let x5018 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                ignore
                                  (Ojs.call x5018 "push"
                                     [|(A0.t_to_js x5013)|]);
                                ignore
                                  (Ojs.call x5018 "push"
                                     [|(A1.t_to_js x5014)|]);
                                ignore
                                  (Ojs.call x5018 "push"
                                     [|(A2.t_to_js x5015)|]);
                                ignore
                                  (Ojs.call x5018 "push"
                                     [|(A3.t_to_js x5016)|]);
                                List.iter
                                  (fun (x5019 : any) ->
                                     ignore
                                       (Ojs.call x5018 "push"
                                          [|(any_to_js x5019)|])) x5017;
                                x5018))
          end
      end
    type t = [ `Function  | `Function  | `NewableFunction ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5022 : Ojs.t) -> t_of_js x5022
    and t_0_to_js : t_0 -> Ojs.t = fun (x5021 : t) -> t_to_js x5021
    type tags = [ `Function  | `Function  | `NewableFunction ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `NewableFunction ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5025 : Ojs.t) -> intf_of_js __tags_of_js x5025
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5023 : __tags intf) -> intf_to_js __tags_to_js x5023
    let (apply_ :
      'tags this -> this:'T AnonymousInterface43.t -> thisArg:'T -> unit) =
      fun (x5030 : 'tags this) ->
        fun ~this:(x5027 : 'T AnonymousInterface43.t) ->
          fun ~thisArg:(x5029 : 'T) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x5030) "apply"
                 [|(AnonymousInterface43.t_to_js Obj.magic x5027);(Obj.magic
                                                                    x5029)|])
    let (apply_' :
      'tags this ->
        this:('A, 'T) AnonymousInterface36.t -> thisArg:'T -> args:'A -> unit)
      =
      fun (x5037 : 'tags this) ->
        fun ~this:(x5032 : ('A, 'T) AnonymousInterface36.t) ->
          fun ~thisArg:(x5035 : 'T) ->
            fun ~args:(x5036 : 'A) ->
              ignore
                (Ojs.call (this_to_js Obj.magic x5037) "apply"
                   [|(AnonymousInterface36.t_to_js Obj.magic Obj.magic x5032);(
                     Obj.magic x5035);(Obj.magic x5036)|])
    let (call :
      'tags this ->
        this:('A, 'T) AnonymousInterface36.t ->
          thisArg:'T -> args:any list -> unit)
      =
      fun (x5046 : 'tags this) ->
        fun ~this:(x5039 : ('A, 'T) AnonymousInterface36.t) ->
          fun ~thisArg:(x5040 : 'T) ->
            fun ~args:(x5041 : any list) ->
              ignore
                (let x5048 = this_to_js Obj.magic x5046 in
                 Ojs.call (Ojs.get_prop_ascii x5048 "call") "apply"
                   [|x5048;((let x5042 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5042 "push"
                                  [|(AnonymousInterface36.t_to_js Obj.magic
                                       Obj.magic x5039)|]);
                             ignore
                               (Ojs.call x5042 "push" [|(Obj.magic x5040)|]);
                             List.iter
                               (fun (x5043 : any) ->
                                  ignore
                                    (Ojs.call x5042 "push"
                                       [|(any_to_js x5043)|])) x5041;
                             x5042))|])
    let (bind : 'tags this -> this:'T -> thisArg:any -> 'T) =
      fun (x5051 : 'tags this) ->
        fun ~this:(x5049 : 'T) ->
          fun ~thisArg:(x5050 : any) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x5051) "bind"
                 [|(Obj.magic x5049);(any_to_js x5050)|])
    let (bind' :
      'tags this ->
        this:('A, 'A0, 'R) AnonymousInterface31.t ->
          thisArg:any -> arg0:'A0 -> ('A, 'R) AnonymousInterface33.t)
      =
      fun (x5059 : 'tags this) ->
        fun ~this:(x5053 : ('A, 'A0, 'R) AnonymousInterface31.t) ->
          fun ~thisArg:(x5057 : any) ->
            fun ~arg0:(x5058 : 'A0) ->
              AnonymousInterface33.t_of_js Obj.magic Obj.magic
                (Ojs.call (this_to_js Obj.magic x5059) "bind"
                   [|(AnonymousInterface31.t_to_js Obj.magic Obj.magic
                        Obj.magic x5053);(any_to_js x5057);(Obj.magic x5058)|])
    let (bind'' :
      'tags this ->
        this:('A, 'A0, 'A1, 'R) AnonymousInterface29.t ->
          thisArg:any ->
            arg0:'A0 -> arg1:'A1 -> ('A, 'R) AnonymousInterface33.t)
      =
      fun (x5071 : 'tags this) ->
        fun ~this:(x5063 : ('A, 'A0, 'A1, 'R) AnonymousInterface29.t) ->
          fun ~thisArg:(x5068 : any) ->
            fun ~arg0:(x5069 : 'A0) ->
              fun ~arg1:(x5070 : 'A1) ->
                AnonymousInterface33.t_of_js Obj.magic Obj.magic
                  (Ojs.call (this_to_js Obj.magic x5071) "bind"
                     [|(AnonymousInterface29.t_to_js Obj.magic Obj.magic
                          Obj.magic Obj.magic x5063);(any_to_js x5068);(
                       Obj.magic x5069);(Obj.magic x5070)|])
    let (bind''' :
      'tags this ->
        this:('A, 'A0, 'A1, 'A2, 'R) AnonymousInterface27.t ->
          thisArg:any ->
            arg0:'A0 ->
              arg1:'A1 -> arg2:'A2 -> ('A, 'R) AnonymousInterface33.t)
      =
      fun (x5085 : 'tags this) ->
        fun ~this:(x5075 : ('A, 'A0, 'A1, 'A2, 'R) AnonymousInterface27.t) ->
          fun ~thisArg:(x5081 : any) ->
            fun ~arg0:(x5082 : 'A0) ->
              fun ~arg1:(x5083 : 'A1) ->
                fun ~arg2:(x5084 : 'A2) ->
                  AnonymousInterface33.t_of_js Obj.magic Obj.magic
                    (Ojs.call (this_to_js Obj.magic x5085) "bind"
                       [|(AnonymousInterface27.t_to_js Obj.magic Obj.magic
                            Obj.magic Obj.magic Obj.magic x5075);(any_to_js
                                                                    x5081);(
                         Obj.magic x5082);(Obj.magic x5083);(Obj.magic x5084)|])
    let (bind'''' :
      'tags this ->
        this:('A, 'A0, 'A1, 'A2, 'A3, 'R) AnonymousInterface25.t ->
          thisArg:any ->
            arg0:'A0 ->
              arg1:'A1 ->
                arg2:'A2 -> arg3:'A3 -> ('A, 'R) AnonymousInterface33.t)
      =
      fun (x5101 : 'tags this) ->
        fun
          ~this:(x5089 : ('A, 'A0, 'A1, 'A2, 'A3, 'R) AnonymousInterface25.t)
          ->
          fun ~thisArg:(x5096 : any) ->
            fun ~arg0:(x5097 : 'A0) ->
              fun ~arg1:(x5098 : 'A1) ->
                fun ~arg2:(x5099 : 'A2) ->
                  fun ~arg3:(x5100 : 'A3) ->
                    AnonymousInterface33.t_of_js Obj.magic Obj.magic
                      (Ojs.call (this_to_js Obj.magic x5101) "bind"
                         [|(AnonymousInterface25.t_to_js Obj.magic Obj.magic
                              Obj.magic Obj.magic Obj.magic Obj.magic x5089);(
                           any_to_js x5096);(Obj.magic x5097);(Obj.magic
                                                                 x5098);(
                           Obj.magic x5099);(Obj.magic x5100)|])
    let (bind''''' :
      'tags this ->
        this:('AX, 'R) AnonymousInterface39.t ->
          thisArg:any -> args:'AX list -> ('AX, 'R) AnonymousInterface39.t)
      =
      fun (x5112 : 'tags this) ->
        fun ~this:(x5105 : ('AX, 'R) AnonymousInterface39.t) ->
          fun ~thisArg:(x5106 : any) ->
            fun ~args:(x5107 : 'AX list) ->
              AnonymousInterface39.t_of_js Obj.magic Obj.magic
                (let x5114 = this_to_js Obj.magic x5112 in
                 Ojs.call (Ojs.get_prop_ascii x5114 "bind") "apply"
                   [|x5114;((let x5108 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5108 "push"
                                  [|(AnonymousInterface39.t_to_js Obj.magic
                                       Obj.magic x5105)|]);
                             ignore
                               (Ojs.call x5108 "push" [|(any_to_js x5106)|]);
                             List.iter
                               (fun (x5109 : 'AX) ->
                                  ignore
                                    (Ojs.call x5108 "push"
                                       [|(Obj.magic x5109)|])) x5107;
                             x5108))|])
    let cast_from = Obj.magic
  end
module TypedPropertyDescriptor =
  struct
    type 'T t = [ `TypedPropertyDescriptor of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x5119 : Ojs.t) -> t_of_js __T_of_js x5119
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x5117 : __T t) -> t_to_js __T_to_js x5117
    type 'T tags = [ `TypedPropertyDescriptor of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `TypedPropertyDescriptor of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x5123 : Ojs.t) -> intf_of_js __tags_of_js x5123
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x5121 : __tags intf) -> intf_to_js __tags_to_js x5121
    let (get_enumerable : ('tags, 'T) this -> bool) =
      fun (x5125 : ('tags, 'T) this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x5125)
             "enumerable")
    let (set_enumerable : ('tags, 'T) this -> bool -> unit) =
      fun (x5128 : ('tags, 'T) this) ->
        fun (x5129 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x5128)
            "enumerable" (Ojs.bool_to_js x5129)
    let (get_configurable : ('tags, 'T) this -> bool) =
      fun (x5132 : ('tags, 'T) this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x5132)
             "configurable")
    let (set_configurable : ('tags, 'T) this -> bool -> unit) =
      fun (x5135 : ('tags, 'T) this) ->
        fun (x5136 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x5135)
            "configurable" (Ojs.bool_to_js x5136)
    let (get_writable : ('tags, 'T) this -> bool) =
      fun (x5139 : ('tags, 'T) this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x5139)
             "writable")
    let (set_writable : ('tags, 'T) this -> bool -> unit) =
      fun (x5142 : ('tags, 'T) this) ->
        fun (x5143 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x5142)
            "writable" (Ojs.bool_to_js x5143)
    let (get_value : ('tags, 'T) this -> 'T) =
      fun (x5146 : ('tags, 'T) this) ->
        Obj.magic
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x5146) "value")
    let (set_value : ('tags, 'T) this -> 'T -> unit) =
      fun (x5149 : ('tags, 'T) this) ->
        fun (x5150 : 'T) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x5149) "value"
            (Obj.magic x5150)
    let (get_ : ('tags, 'T) this -> 'T) =
      fun (x5153 : ('tags, 'T) this) ->
        Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic x5153) "get" [||])
    let (set_ : ('tags, 'T) this -> value:'T -> unit) =
      fun (x5157 : ('tags, 'T) this) ->
        fun ~value:(x5156 : 'T) ->
          ignore
            (Ojs.call (this_to_js Obj.magic Obj.magic x5157) "set"
               [|(Obj.magic x5156)|])
    let (create :
      enumerable:bool ->
        configurable:bool ->
          writable:bool ->
            value:'T ->
              get_:(unit -> 'T) -> set_:('T -> unit) -> unit -> 'T t)
      =
      fun ~enumerable:(x5160 : bool) ->
        fun ~configurable:(x5161 : bool) ->
          fun ~writable:(x5162 : bool) ->
            fun ~value:(x5163 : 'T) ->
              fun ~get_:(x5164 : unit -> 'T) ->
                fun ~set_:(x5165 : 'T -> unit) ->
                  fun () ->
                    let x5166 = Ojs.empty_obj () in
                    Ojs.set_prop_ascii x5166 "enumerable"
                      (Ojs.bool_to_js x5160);
                    Ojs.set_prop_ascii x5166 "configurable"
                      (Ojs.bool_to_js x5161);
                    Ojs.set_prop_ascii x5166 "writable"
                      (Ojs.bool_to_js x5162);
                    Ojs.set_prop_ascii x5166 "value" (Obj.magic x5163);
                    Ojs.set_prop_ascii x5166 "get"
                      (Ojs.fun_to_js 1 (fun _ -> Obj.magic (x5164 ())));
                    Ojs.set_prop_ascii x5166 "set"
                      (Ojs.fun_to_js 1
                         (fun (x5168 : Ojs.t) -> x5165 (Obj.magic x5168)));
                    t_of_js Obj.magic x5166
    let cast_from = Obj.magic
  end
module MethodDecorator =
  struct
    type t = [ `MethodDecorator ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5170 : Ojs.t) -> t_of_js x5170
    and t_0_to_js : t_0 -> Ojs.t = fun (x5169 : t) -> t_to_js x5169
    type tags = [ `MethodDecorator ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `MethodDecorator ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5173 : Ojs.t) -> intf_of_js __tags_of_js x5173
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5171 : __tags intf) -> intf_to_js __tags_to_js x5171
    let (apply :
      'tags this ->
        target:Object.t ->
          propertyKey:[ `U1 of string  | `U2 of symbol ] ->
            descriptor:'T TypedPropertyDescriptor.t ->
              (unit, 'T TypedPropertyDescriptor.t) union2)
      =
      fun (x5181 : 'tags this) ->
        fun ~target:(x5175 : Object.t) ->
          fun ~propertyKey:(x5176 : [ `U1 of string  | `U2 of symbol ]) ->
            fun ~descriptor:(x5179 : 'T TypedPropertyDescriptor.t) ->
              union2_of_js Ojs.unit_of_js
                (fun (x5184 : Ojs.t) ->
                   TypedPropertyDescriptor.t_of_js Obj.magic x5184)
                (Ojs.apply (this_to_js Obj.magic x5181)
                   [|(Object.t_to_js x5175);((match x5176 with
                                              | `U1 x5177 ->
                                                  Ojs.string_to_js x5177
                                              | `U2 x5178 ->
                                                  symbol_to_js x5178));(
                     TypedPropertyDescriptor.t_to_js Obj.magic x5179)|])
    let cast_from = Obj.magic
  end
module Math =
  struct
    let (clz32 : float -> float) =
      fun (x5186 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "clz32"
             [|(Ojs.float_to_js x5186)|])
    let (imul : x:float -> y:float -> float) =
      fun ~x:(x5187 : float) ->
        fun ~y:(x5188 : float) ->
          Ojs.float_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "imul"
               [|(Ojs.float_to_js x5187);(Ojs.float_to_js x5188)|])
    let (sign : float -> float) =
      fun (x5189 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "sign"
             [|(Ojs.float_to_js x5189)|])
    let (log10 : float -> float) =
      fun (x5190 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "log10"
             [|(Ojs.float_to_js x5190)|])
    let (log2 : float -> float) =
      fun (x5191 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "log2"
             [|(Ojs.float_to_js x5191)|])
    let (log1p : float -> float) =
      fun (x5192 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "log1p"
             [|(Ojs.float_to_js x5192)|])
    let (expm1 : float -> float) =
      fun (x5193 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "expm1"
             [|(Ojs.float_to_js x5193)|])
    let (cosh : float -> float) =
      fun (x5194 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "cosh"
             [|(Ojs.float_to_js x5194)|])
    let (sinh : float -> float) =
      fun (x5195 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "sinh"
             [|(Ojs.float_to_js x5195)|])
    let (tanh : float -> float) =
      fun (x5196 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "tanh"
             [|(Ojs.float_to_js x5196)|])
    let (acosh : float -> float) =
      fun (x5197 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "acosh"
             [|(Ojs.float_to_js x5197)|])
    let (asinh : float -> float) =
      fun (x5198 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "asinh"
             [|(Ojs.float_to_js x5198)|])
    let (atanh : float -> float) =
      fun (x5199 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "atanh"
             [|(Ojs.float_to_js x5199)|])
    let (hypot : float list -> float) =
      fun (x5200 : float list) ->
        Ojs.float_of_js
          (let x5203 = Ojs.get_prop_ascii Ojs.global "Math" in
           Ojs.call (Ojs.get_prop_ascii x5203 "hypot") "apply"
             [|x5203;((let x5201 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x5202 : float) ->
                            ignore
                              (Ojs.call x5201 "push"
                                 [|(Ojs.float_to_js x5202)|])) x5200;
                       x5201))|])
    let (trunc : float -> float) =
      fun (x5204 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "trunc"
             [|(Ojs.float_to_js x5204)|])
    let (fround : float -> float) =
      fun (x5205 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "fround"
             [|(Ojs.float_to_js x5205)|])
    let (cbrt : float -> float) =
      fun (x5206 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "cbrt"
             [|(Ojs.float_to_js x5206)|])
    let (e : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "E")
    let (ln10 : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "LN10")
    let (ln2 : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "LN2")
    let (log2e : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "LOG2E")
    let (log10e : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "LOG10E")
    let (pi : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "PI")
    let (sqrt1_2 : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math")
             "SQRT1_2")
    let (sqrt2 : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Math") "SQRT2")
    let (abs : float -> float) =
      fun (x5207 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "abs"
             [|(Ojs.float_to_js x5207)|])
    let (acos : float -> float) =
      fun (x5208 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "acos"
             [|(Ojs.float_to_js x5208)|])
    let (asin : float -> float) =
      fun (x5209 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "asin"
             [|(Ojs.float_to_js x5209)|])
    let (atan : float -> float) =
      fun (x5210 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "atan"
             [|(Ojs.float_to_js x5210)|])
    let (atan2 : y:float -> x:float -> float) =
      fun ~y:(x5211 : float) ->
        fun ~x:(x5212 : float) ->
          Ojs.float_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "atan2"
               [|(Ojs.float_to_js x5211);(Ojs.float_to_js x5212)|])
    let (ceil : float -> float) =
      fun (x5213 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "ceil"
             [|(Ojs.float_to_js x5213)|])
    let (cos : float -> float) =
      fun (x5214 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "cos"
             [|(Ojs.float_to_js x5214)|])
    let (exp : float -> float) =
      fun (x5215 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "exp"
             [|(Ojs.float_to_js x5215)|])
    let (floor : float -> float) =
      fun (x5216 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "floor"
             [|(Ojs.float_to_js x5216)|])
    let (log : float -> float) =
      fun (x5217 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "log"
             [|(Ojs.float_to_js x5217)|])
    let (max : float list -> float) =
      fun (x5218 : float list) ->
        Ojs.float_of_js
          (let x5221 = Ojs.get_prop_ascii Ojs.global "Math" in
           Ojs.call (Ojs.get_prop_ascii x5221 "max") "apply"
             [|x5221;((let x5219 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x5220 : float) ->
                            ignore
                              (Ojs.call x5219 "push"
                                 [|(Ojs.float_to_js x5220)|])) x5218;
                       x5219))|])
    let (min : float list -> float) =
      fun (x5222 : float list) ->
        Ojs.float_of_js
          (let x5225 = Ojs.get_prop_ascii Ojs.global "Math" in
           Ojs.call (Ojs.get_prop_ascii x5225 "min") "apply"
             [|x5225;((let x5223 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x5224 : float) ->
                            ignore
                              (Ojs.call x5223 "push"
                                 [|(Ojs.float_to_js x5224)|])) x5222;
                       x5223))|])
    let (pow : x:float -> y:float -> float) =
      fun ~x:(x5226 : float) ->
        fun ~y:(x5227 : float) ->
          Ojs.float_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "pow"
               [|(Ojs.float_to_js x5226);(Ojs.float_to_js x5227)|])
    let (random : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "random" [||])
    let (round : float -> float) =
      fun (x5228 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "round"
             [|(Ojs.float_to_js x5228)|])
    let (sin : float -> float) =
      fun (x5229 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "sin"
             [|(Ojs.float_to_js x5229)|])
    let (sqrt : float -> float) =
      fun (x5230 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "sqrt"
             [|(Ojs.float_to_js x5230)|])
    let (tan : float -> float) =
      fun (x5231 : float) ->
        Ojs.float_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Math") "tan"
             [|(Ojs.float_to_js x5231)|])
  end
module Map =
  struct
    type ('K, 'V) t =
      [ `Map of ('K * 'V)  | ('K * 'V) IterableIterator.tags_1] intf
    let rec t_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) t =
      fun _K -> fun _V -> Obj.magic
    and t_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) t -> Ojs.t =
      fun _K -> fun _V -> Obj.magic
    type ('K, 'V) t_2 = ('K, 'V) t
    let rec t_2_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) t_2 = fun
      (type __K) -> fun (type __V) ->
      fun (__K_of_js : Ojs.t -> __K) ->
        fun (__V_of_js : Ojs.t -> __V) ->
          fun (x5235 : Ojs.t) -> t_of_js __K_of_js __V_of_js x5235
    and t_2_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) t_2 -> Ojs.t = fun
      (type __K) -> fun (type __V) ->
      fun (__K_to_js : __K -> Ojs.t) ->
        fun (__V_to_js : __V -> Ojs.t) ->
          fun (x5232 : (__K, __V) t) -> t_to_js __K_to_js __V_to_js x5232
    type ('K, 'V) tags =
      [ `Map of ('K * 'V)  | ('K * 'V) IterableIterator.tags_1]
    type ('K, 'V) tags_2 = ('K, 'V) tags
    type ('tags, 'K, 'V) this =
      'tags intf constraint 'tags = [> `Map of ('K * 'V) ]
    let rec this_of_js :
      'tags 'K 'V .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('tags, 'K, 'V) this
      = fun (type __tags) -> fun (type __K) -> fun (type __V) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__K_of_js : Ojs.t -> __K) ->
          fun (__V_of_js : Ojs.t -> __V) ->
            fun (x5240 : Ojs.t) -> intf_of_js __tags_of_js x5240
    and this_to_js :
      'tags 'K 'V .
        ('tags -> Ojs.t) ->
          ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('tags, 'K, 'V) this -> Ojs.t
      = fun (type __tags) -> fun (type __K) -> fun (type __V) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__K_to_js : __K -> Ojs.t) ->
          fun (__V_to_js : __V -> Ojs.t) ->
            fun (x5238 : __tags intf) -> intf_to_js __tags_to_js x5238
    let (entries : ('tags, 'K, 'V) this -> ('K * 'V) IterableIterator.t) =
      fun (x5242 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js
          (fun (x5246 : Ojs.t) ->
             let x5247 = x5246 in
             ((Obj.magic (Ojs.array_get x5247 0)),
               (Obj.magic (Ojs.array_get x5247 1))))
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x5242)
             "entries" [||])
    let (keys : ('tags, 'K, 'V) this -> 'K IterableIterator.t) =
      fun (x5248 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x5248) "keys"
             [||])
    let (values : ('tags, 'K, 'V) this -> 'V IterableIterator.t) =
      fun (x5253 : ('tags, 'K, 'V) this) ->
        IterableIterator.t_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x5253) "values"
             [||])
    let (clear : ('tags, 'K, 'V) this -> unit) =
      fun (x5258 : ('tags, 'K, 'V) this) ->
        ignore
          (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x5258) "clear"
             [||])
    let (delete : ('tags, 'K, 'V) this -> key:'K -> bool) =
      fun (x5263 : ('tags, 'K, 'V) this) ->
        fun ~key:(x5262 : 'K) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x5263)
               "delete" [|(Obj.magic x5262)|])
    let (forEach :
      ('tags, 'K, 'V) this ->
        callbackfn:(value:'V -> key:'K -> map:('K, 'V) t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x5276 : ('tags, 'K, 'V) this) ->
        fun
          ~callbackfn:(x5267 : value:'V -> key:'K -> map:('K, 'V) t -> unit)
          ->
          fun ?thisArg:(x5268 : any option) ->
            fun () ->
              ignore
                (let x5280 = this_to_js Obj.magic Obj.magic Obj.magic x5276 in
                 Ojs.call (Ojs.get_prop_ascii x5280 "forEach") "apply"
                   [|x5280;((let x5269 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5269 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5271 : Ojs.t) ->
                                          fun (x5272 : Ojs.t) ->
                                            fun (x5273 : Ojs.t) ->
                                              x5267 ~value:(Obj.magic x5271)
                                                ~key:(Obj.magic x5272)
                                                ~map:(t_of_js Obj.magic
                                                        Obj.magic x5273)))|]);
                             (match x5268 with
                              | Some x5270 ->
                                  ignore
                                    (Ojs.call x5269 "push"
                                       [|(any_to_js x5270)|])
                              | None -> ());
                             x5269))|])
    let (get_ : ('tags, 'K, 'V) this -> key:'K -> 'V option) =
      fun (x5282 : ('tags, 'K, 'V) this) ->
        fun ~key:(x5281 : 'K) ->
          Ojs.option_of_js Obj.magic
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x5282) "get"
               [|(Obj.magic x5281)|])
    let (has : ('tags, 'K, 'V) this -> key:'K -> bool) =
      fun (x5288 : ('tags, 'K, 'V) this) ->
        fun ~key:(x5287 : 'K) ->
          Ojs.bool_of_js
            (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x5288) "has"
               [|(Obj.magic x5287)|])
    let (set_ :
      ('tags, 'K, 'V) this -> key:'K -> value:'V -> ('tags, 'K, 'V) this) =
      fun (x5294 : ('tags, 'K, 'V) this) ->
        fun ~key:(x5292 : 'K) ->
          fun ~value:(x5293 : 'V) ->
            this_of_js Obj.magic Obj.magic Obj.magic
              (Ojs.call (this_to_js Obj.magic Obj.magic Obj.magic x5294)
                 "set" [|(Obj.magic x5292);(Obj.magic x5293)|])
    let (get_size : ('tags, 'K, 'V) this -> float) =
      fun (x5301 : ('tags, 'K, 'V) this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii
             (this_to_js Obj.magic Obj.magic Obj.magic x5301) "size")
    let (create : ('K * 'V) Iterable.t -> ('K, 'V) t) =
      fun (x5305 : ('K * 'V) Iterable.t) ->
        t_of_js Obj.magic Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Map")
             [|(Iterable.t_to_js
                  (fun (x5306 : ('K * 'V)) ->
                     let (x5307, x5308) = x5306 in
                     let x5309 = Ojs.array_make 2 in
                     Ojs.array_set x5309 0 (Obj.magic x5307);
                     Ojs.array_set x5309 1 (Obj.magic x5308);
                     x5309) x5305)|])
    let (create' : unit -> (any, any) t) =
      fun () ->
        t_of_js any_of_js any_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Map") [||])
    let (create'' : ?entries:('K * 'V) list option -> unit -> ('K, 'V) t) =
      fun ?entries:(x5314 : ('K * 'V) list option option) ->
        fun () ->
          t_of_js Obj.magic Obj.magic
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Map")
               (let x5315 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x5314 with
                 | Some x5316 ->
                     ignore
                       (Ojs.call x5315 "push"
                          [|(Ojs.option_to_js
                               (fun (x5317 : ('K * 'V) list) ->
                                  Ojs.list_to_js
                                    (fun (x5318 : ('K * 'V)) ->
                                       let (x5319, x5320) = x5318 in
                                       let x5321 = Ojs.array_make 2 in
                                       Ojs.array_set x5321 0
                                         (Obj.magic x5319);
                                       Ojs.array_set x5321 1
                                         (Obj.magic x5320);
                                       x5321) x5317) x5316)|])
                 | None -> ());
                x5315))
    let (prototype : unit -> (any, any) t) =
      fun () ->
        t_of_js any_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Map")
             "prototype")
    let cast_from = Obj.magic
  end
module Lowercase =
  struct
    type 'S t = Ojs.t
    let rec t_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t = fun (type __S) ->
      fun (__S_of_js : Ojs.t -> __S) -> fun (x5327 : Ojs.t) -> x5327
    and t_to_js : 'S . ('S -> Ojs.t) -> 'S t -> Ojs.t = fun (type __S) ->
      fun (__S_to_js : __S -> Ojs.t) -> fun (x5326 : Ojs.t) -> x5326
    type 'S t_1 = 'S t
    let rec t_1_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t_1 = fun (type
      __S) ->
      fun (__S_of_js : Ojs.t -> __S) ->
        fun (x5330 : Ojs.t) -> t_of_js __S_of_js x5330
    and t_1_to_js : 'S . ('S -> Ojs.t) -> 'S t_1 -> Ojs.t = fun (type __S) ->
      fun (__S_to_js : __S -> Ojs.t) ->
        fun (x5328 : __S t) -> t_to_js __S_to_js x5328
  end
module JSON =
  struct
    let (parse :
      text:string ->
        ?reviver:(this:any -> key:string -> value:any -> any) -> unit -> any)
      =
      fun ~text:(x5332 : string) ->
        fun
          ?reviver:(x5333 :
                     (this:any -> key:string -> value:any -> any) option)
          ->
          fun () ->
            any_of_js
              (let x5339 = Ojs.get_prop_ascii Ojs.global "JSON" in
               Ojs.call (Ojs.get_prop_ascii x5339 "parse") "apply"
                 [|x5339;((let x5334 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           ignore
                             (Ojs.call x5334 "push"
                                [|(Ojs.string_to_js x5332)|]);
                           (match x5333 with
                            | Some x5335 ->
                                ignore
                                  (Ojs.call x5334 "push"
                                     [|(Ojs.fun_to_js 3
                                          (fun (x5336 : Ojs.t) ->
                                             fun (x5337 : Ojs.t) ->
                                               fun (x5338 : Ojs.t) ->
                                                 any_to_js
                                                   (x5335
                                                      ~this:(any_of_js x5336)
                                                      ~key:(Ojs.string_of_js
                                                              x5337)
                                                      ~value:(any_of_js x5338))))|])
                            | None -> ());
                           x5334))|])
    let (stringify :
      value:any ->
        ?replacer:(this:any -> key:string -> value:any -> any) ->
          ?space:[ `U1 of string  | `U2 of float ] -> unit -> string)
      =
      fun ~value:(x5340 : any) ->
        fun
          ?replacer:(x5341 :
                      (this:any -> key:string -> value:any -> any) option)
          ->
          fun ?space:(x5342 : [ `U1 of string  | `U2 of float ] option) ->
            fun () ->
              Ojs.string_of_js
                (let x5351 = Ojs.get_prop_ascii Ojs.global "JSON" in
                 Ojs.call (Ojs.get_prop_ascii x5351 "stringify") "apply"
                   [|x5351;((let x5343 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5343 "push" [|(any_to_js x5340)|]);
                             (match x5341 with
                              | Some x5347 ->
                                  ignore
                                    (Ojs.call x5343 "push"
                                       [|(Ojs.fun_to_js 3
                                            (fun (x5348 : Ojs.t) ->
                                               fun (x5349 : Ojs.t) ->
                                                 fun (x5350 : Ojs.t) ->
                                                   any_to_js
                                                     (x5347
                                                        ~this:(any_of_js
                                                                 x5348)
                                                        ~key:(Ojs.string_of_js
                                                                x5349)
                                                        ~value:(any_of_js
                                                                  x5350))))|])
                              | None -> ());
                             (match x5342 with
                              | Some x5344 ->
                                  ignore
                                    (Ojs.call x5343 "push"
                                       [|((match x5344 with
                                           | `U1 x5345 ->
                                               Ojs.string_to_js x5345
                                           | `U2 x5346 ->
                                               Ojs.float_to_js x5346))|])
                              | None -> ());
                             x5343))|])
    let (stringify' :
      value:any ->
        ?replacer:[ `U1 of float  | `U2 of string ] list option ->
          ?space:[ `U1 of string  | `U2 of float ] -> unit -> string)
      =
      fun ~value:(x5352 : any) ->
        fun
          ?replacer:(x5353 :
                      [ `U1 of float  | `U2 of string ] list option option)
          ->
          fun ?space:(x5354 : [ `U1 of string  | `U2 of float ] option) ->
            fun () ->
              Ojs.string_of_js
                (let x5364 = Ojs.get_prop_ascii Ojs.global "JSON" in
                 Ojs.call (Ojs.get_prop_ascii x5364 "stringify") "apply"
                   [|x5364;((let x5355 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5355 "push" [|(any_to_js x5352)|]);
                             (match x5353 with
                              | Some x5359 ->
                                  ignore
                                    (Ojs.call x5355 "push"
                                       [|(Ojs.option_to_js
                                            (fun
                                               (x5360 :
                                                 [ `U1 of float 
                                                 | `U2 of string ] list)
                                               ->
                                               Ojs.list_to_js
                                                 (fun
                                                    (x5361 :
                                                      [ `U1 of float 
                                                      | `U2 of string ])
                                                    ->
                                                    match x5361 with
                                                    | `U1 x5362 ->
                                                        Ojs.float_to_js x5362
                                                    | `U2 x5363 ->
                                                        Ojs.string_to_js
                                                          x5363) x5360) x5359)|])
                              | None -> ());
                             (match x5354 with
                              | Some x5356 ->
                                  ignore
                                    (Ojs.call x5355 "push"
                                       [|((match x5356 with
                                           | `U1 x5357 ->
                                               Ojs.string_to_js x5357
                                           | `U2 x5358 ->
                                               Ojs.float_to_js x5358))|])
                              | None -> ());
                             x5355))|])
  end
module InstanceType =
  struct
    module AnonymousInterface8 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x5366 : Ojs.t) -> x5366
        and t_to_js : t -> Ojs.t = fun (x5365 : Ojs.t) -> x5365
        let (create : t -> args:any list -> any) =
          fun (x5370 : t) ->
            fun ~args:(x5367 : any list) ->
              any_of_js
                (Ojs.new_obj_arr (t_to_js x5370)
                   (let x5368 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    List.iter
                      (fun (x5369 : any) ->
                         ignore (Ojs.call x5368 "push" [|(any_to_js x5369)|]))
                      x5367;
                    x5368))
      end
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x5372 : Ojs.t) -> any_of_js x5372
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x5371 : any) -> any_to_js x5371
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x5375 : Ojs.t) -> t_of_js __T_of_js x5375
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x5373 : __T t) -> t_to_js __T_to_js x5373
  end
module ImportMeta =
  struct
    type t = [ `ImportMeta ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5378 : Ojs.t) -> t_of_js x5378
    and t_0_to_js : t_0 -> Ojs.t = fun (x5377 : t) -> t_to_js x5377
    type tags = [ `ImportMeta ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ImportMeta ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5381 : Ojs.t) -> intf_of_js __tags_of_js x5381
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5379 : __tags intf) -> intf_to_js __tags_to_js x5379
    let cast_from = Obj.magic
  end
module ImportAssertions =
  struct
    type t = [ `ImportAssertions ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5384 : Ojs.t) -> t_of_js x5384
    and t_0_to_js : t_0 -> Ojs.t = fun (x5383 : t) -> t_to_js x5383
    type tags = [ `ImportAssertions ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ImportAssertions ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5387 : Ojs.t) -> intf_of_js __tags_of_js x5387
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5385 : __tags intf) -> intf_to_js __tags_to_js x5385
    let (get : 'tags this -> string -> string) =
      fun (x5389 : 'tags this) ->
        fun (x5391 : string) ->
          Ojs.string_of_js
            (Ojs.get_prop (this_to_js Obj.magic x5389)
               (Ojs.string_to_js x5391))
    let (set : 'tags this -> string -> string -> unit) =
      fun (x5392 : 'tags this) ->
        fun (x5394 : string) ->
          fun (x5395 : string) ->
            Ojs.set_prop (this_to_js Obj.magic x5392)
              (Ojs.string_to_js x5394) (Ojs.string_to_js x5395)
    let cast_from = Obj.magic
  end
module ImportCallOptions =
  struct
    type t = [ `ImportCallOptions ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5397 : Ojs.t) -> t_of_js x5397
    and t_0_to_js : t_0 -> Ojs.t = fun (x5396 : t) -> t_to_js x5396
    type tags = [ `ImportCallOptions ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ImportCallOptions ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5400 : Ojs.t) -> intf_of_js __tags_of_js x5400
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5398 : __tags intf) -> intf_to_js __tags_to_js x5398
    let (get_assert : 'tags this -> ImportAssertions.t) =
      fun (x5402 : 'tags this) ->
        ImportAssertions.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5402) "assert")
    let (set_assert : 'tags this -> ImportAssertions.t -> unit) =
      fun (x5404 : 'tags this) ->
        fun (x5405 : ImportAssertions.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5404) "assert"
            (ImportAssertions.t_to_js x5405)
    let (create : assert_:ImportAssertions.t -> unit -> t) =
      fun ~assert_:(x5407 : ImportAssertions.t) ->
        fun () ->
          let x5408 = Ojs.empty_obj () in
          Ojs.set_prop_ascii x5408 "assert" (ImportAssertions.t_to_js x5407);
          t_of_js x5408
    let cast_from = Obj.magic
  end
module IArguments =
  struct
    type t =
      [ `IArguments  | any ArrayLike.tags_1 | any IterableIterator.tags_1]
        intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5410 : Ojs.t) -> t_of_js x5410
    and t_0_to_js : t_0 -> Ojs.t = fun (x5409 : t) -> t_to_js x5409
    type tags =
      [ `IArguments  | any ArrayLike.tags_1 | any IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `IArguments ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5413 : Ojs.t) -> intf_of_js __tags_of_js x5413
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5411 : __tags intf) -> intf_to_js __tags_to_js x5411
    let (get : 'tags this -> float -> any) =
      fun (x5415 : 'tags this) ->
        fun (x5417 : float) ->
          any_of_js
            (Ojs.get_prop (this_to_js Obj.magic x5415)
               (Ojs.float_to_js x5417))
    let (set : 'tags this -> float -> any -> unit) =
      fun (x5418 : 'tags this) ->
        fun (x5420 : float) ->
          fun (x5421 : any) ->
            Ojs.set_prop (this_to_js Obj.magic x5418) (Ojs.float_to_js x5420)
              (any_to_js x5421)
    let (get_length : 'tags this -> float) =
      fun (x5422 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5422) "length")
    let (set_length : 'tags this -> float -> unit) =
      fun (x5424 : 'tags this) ->
        fun (x5425 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5424) "length"
            (Ojs.float_to_js x5425)
    let (get_callee : 'tags this -> Function.t) =
      fun (x5427 : 'tags this) ->
        Function.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5427) "callee")
    let (set_callee : 'tags this -> Function.t -> unit) =
      fun (x5429 : 'tags this) ->
        fun (x5430 : Function.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x5429) "callee"
            (Function.t_to_js x5430)
    let cast_from = Obj.magic
  end
module Generator =
  struct
    type ('T, 'TReturn, 'TNext) t =
      [ `Generator of ('T * 'TReturn * 'TNext) 
      | `Iterator of ('T * 'TReturn * 'TNext) ] intf
    let rec t_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    and t_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t -> Ojs.t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    type ('T, 'TReturn, 'TNext) t_3 = ('T, 'TReturn, 'TNext) t
    let rec t_3_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t_3
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (__TNext_of_js : Ojs.t -> __TNext) ->
            fun (x5436 : Ojs.t) ->
              t_of_js __T_of_js __TReturn_of_js __TNext_of_js x5436
    and t_3_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t_3 -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (__TNext_to_js : __TNext -> Ojs.t) ->
            fun (x5432 : (__T, __TReturn, __TNext) t) ->
              t_to_js __T_to_js __TReturn_to_js __TNext_to_js x5432
    type ('T, 'TReturn) t_2 = ('T, 'TReturn, unknown) t
    let rec t_2_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t_2
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (x5444 : Ojs.t) ->
            t_of_js __T_of_js __TReturn_of_js unknown_of_js x5444
    and t_2_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t_2 -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (x5440 : (__T, __TReturn, unknown) t) ->
            t_to_js __T_to_js __TReturn_to_js unknown_to_js x5440
    type 'T t_1 = ('T, any, unknown) t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x5452 : Ojs.t) ->
          t_of_js __T_of_js any_of_js unknown_of_js x5452
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x5448 : (__T, any, unknown) t) ->
          t_to_js __T_to_js any_to_js unknown_to_js x5448
    type t_0 = (unknown, any, unknown) t
    let rec t_0_of_js : Ojs.t -> t_0 =
      fun (x5460 : Ojs.t) ->
        t_of_js unknown_of_js any_of_js unknown_of_js x5460
    and t_0_to_js : t_0 -> Ojs.t =
      fun (x5456 : (unknown, any, unknown) t) ->
        t_to_js unknown_to_js any_to_js unknown_to_js x5456
    type ('T, 'TReturn, 'TNext) tags =
      [ `Generator of ('T * 'TReturn * 'TNext) 
      | `Iterator of ('T * 'TReturn * 'TNext) ]
    type ('T, 'TReturn, 'TNext) tags_3 = ('T, 'TReturn, 'TNext) tags
    type ('T, 'TReturn) tags_2 = ('T, 'TReturn, unknown) tags
    type 'T tags_1 = ('T, any, unknown) tags
    type tags_0 = (unknown, any, unknown) tags
    type ('tags, 'T, 'TReturn, 'TNext) this =
      'tags intf constraint 'tags =
                  [> `Generator of ('T * 'TReturn * 'TNext) ]
    let rec this_of_js :
      'tags 'T 'TReturn 'TNext .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'T) ->
            (Ojs.t -> 'TReturn) ->
              (Ojs.t -> 'TNext) ->
                Ojs.t -> ('tags, 'T, 'TReturn, 'TNext) this
      = fun (type __tags) -> fun (type __T) -> fun (type __TReturn) -> fun
      (type __TNext) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
            fun (__TNext_of_js : Ojs.t -> __TNext) ->
              fun (x5466 : Ojs.t) -> intf_of_js __tags_of_js x5466
    and this_to_js :
      'tags 'T 'TReturn 'TNext .
        ('tags -> Ojs.t) ->
          ('T -> Ojs.t) ->
            ('TReturn -> Ojs.t) ->
              ('TNext -> Ojs.t) ->
                ('tags, 'T, 'TReturn, 'TNext) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) -> fun (type __TReturn) -> fun
      (type __TNext) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
            fun (__TNext_to_js : __TNext -> Ojs.t) ->
              fun (x5464 : __tags intf) -> intf_to_js __tags_to_js x5464
    let (next :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        args:any list -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x5471 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~args:(x5468 : any list) ->
          IteratorResult.t_of_js Obj.magic Obj.magic
            (let x5476 =
               this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x5471 in
             Ojs.call (Ojs.get_prop_ascii x5476 "next") "apply"
               [|x5476;((let x5469 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x5470 : any) ->
                              ignore
                                (Ojs.call x5469 "push" [|(any_to_js x5470)|]))
                           x5468;
                         x5469))|])
    let (return :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        value:'TReturn -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x5480 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~value:(x5479 : 'TReturn) ->
          IteratorResult.t_of_js Obj.magic Obj.magic
            (Ojs.call
               (this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x5480)
               "return" [|(Obj.magic x5479)|])
    let (throw :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        e:any -> ('T, 'TReturn) IteratorResult.t)
      =
      fun (x5488 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~e:(x5487 : any) ->
          IteratorResult.t_of_js Obj.magic Obj.magic
            (Ojs.call
               (this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x5488)
               "throw" [|(any_to_js x5487)|])
    let cast_from = Obj.magic
  end
module GeneratorFunction =
  struct
    type t = [ `GeneratorFunction ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5496 : Ojs.t) -> t_of_js x5496
    and t_0_to_js : t_0 -> Ojs.t = fun (x5495 : t) -> t_to_js x5495
    type tags = [ `GeneratorFunction ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `GeneratorFunction ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5499 : Ojs.t) -> intf_of_js __tags_of_js x5499
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5497 : __tags intf) -> intf_to_js __tags_to_js x5497
    let (create : 'tags this -> args:any list -> Generator.t_0) =
      fun (x5504 : 'tags this) ->
        fun ~args:(x5501 : any list) ->
          Generator.t_0_of_js
            (Ojs.new_obj_arr (this_to_js Obj.magic x5504)
               (let x5502 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                List.iter
                  (fun (x5503 : any) ->
                     ignore (Ojs.call x5502 "push" [|(any_to_js x5503)|]))
                  x5501;
                x5502))
    let (apply : 'tags this -> args:any list -> Generator.t_0) =
      fun (x5509 : 'tags this) ->
        fun ~args:(x5506 : any list) ->
          Generator.t_0_of_js
            (Ojs.call (this_to_js Obj.magic x5509) "apply"
               [|Ojs.null;((let x5507 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            List.iter
                              (fun (x5508 : any) ->
                                 ignore
                                   (Ojs.call x5507 "push"
                                      [|(any_to_js x5508)|])) x5506;
                            x5507))|])
    let (get_length : 'tags this -> float) =
      fun (x5511 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5511) "length")
    let (get_name : 'tags this -> string) =
      fun (x5513 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5513) "name")
    let (get_prototype : 'tags this -> Generator.t_0) =
      fun (x5515 : 'tags this) ->
        Generator.t_0_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5515) "prototype")
    let cast_from = Obj.magic
  end
module GeneratorFunctionConstructor =
  struct
    type t = [ `GeneratorFunctionConstructor ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5518 : Ojs.t) -> t_of_js x5518
    and t_0_to_js : t_0 -> Ojs.t = fun (x5517 : t) -> t_to_js x5517
    type tags = [ `GeneratorFunctionConstructor ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `GeneratorFunctionConstructor ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5521 : Ojs.t) -> intf_of_js __tags_of_js x5521
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5519 : __tags intf) -> intf_to_js __tags_to_js x5519
    let (create : 'tags this -> args:string list -> GeneratorFunction.t) =
      fun (x5526 : 'tags this) ->
        fun ~args:(x5523 : string list) ->
          GeneratorFunction.t_of_js
            (Ojs.new_obj_arr (this_to_js Obj.magic x5526)
               (let x5524 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                List.iter
                  (fun (x5525 : string) ->
                     ignore
                       (Ojs.call x5524 "push" [|(Ojs.string_to_js x5525)|]))
                  x5523;
                x5524))
    let (apply : 'tags this -> args:string list -> GeneratorFunction.t) =
      fun (x5531 : 'tags this) ->
        fun ~args:(x5528 : string list) ->
          GeneratorFunction.t_of_js
            (Ojs.call (this_to_js Obj.magic x5531) "apply"
               [|Ojs.null;((let x5529 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            List.iter
                              (fun (x5530 : string) ->
                                 ignore
                                   (Ojs.call x5529 "push"
                                      [|(Ojs.string_to_js x5530)|])) x5528;
                            x5529))|])
    let (get_length : 'tags this -> float) =
      fun (x5533 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5533) "length")
    let (get_name : 'tags this -> string) =
      fun (x5535 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5535) "name")
    let (get_prototype : 'tags this -> GeneratorFunction.t) =
      fun (x5537 : 'tags this) ->
        GeneratorFunction.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5537) "prototype")
    let cast_from = Obj.magic
  end
module Float64Array =
  struct
    type t =
      [ `Float64Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5540 : Ojs.t) -> t_of_js x5540
    and t_0_to_js : t_0 -> Ojs.t = fun (x5539 : t) -> t_to_js x5539
    type tags =
      [ `Float64Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Float64Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5543 : Ojs.t) -> intf_of_js __tags_of_js x5543
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5541 : __tags intf) -> intf_to_js __tags_to_js x5541
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x5549 : 'tags this) ->
        fun ~searchElement:(x5545 : float) ->
          fun ?fromIndex:(x5546 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x5551 = this_to_js Obj.magic x5549 in
                 Ojs.call (Ojs.get_prop_ascii x5551 "includes") "apply"
                   [|x5551;((let x5547 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5547 "push"
                                  [|(Ojs.float_to_js x5545)|]);
                             (match x5546 with
                              | Some x5548 ->
                                  ignore
                                    (Ojs.call x5547 "push"
                                       [|(Ojs.float_to_js x5548)|])
                              | None -> ());
                             x5547))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x5552 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x5554 : Ojs.t) ->
             let x5555 = x5554 in
             ((Ojs.float_of_js (Ojs.array_get x5555 0)),
               (Ojs.float_of_js (Ojs.array_get x5555 1))))
          (Ojs.call (this_to_js Obj.magic x5552) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x5556 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x5556) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x5559 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x5559) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x5562 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5562)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x5564 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5564) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x5566 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5566) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x5568 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5568) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x5575 : 'tags this) ->
        fun ~target:(x5570 : float) ->
          fun ~start:(x5571 : float) ->
            fun ?end_:(x5572 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x5577 = this_to_js Obj.magic x5575 in
                   Ojs.call (Ojs.get_prop_ascii x5577 "copyWithin") "apply"
                     [|x5577;((let x5573 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5573 "push"
                                    [|(Ojs.float_to_js x5570)|]);
                               ignore
                                 (Ojs.call x5573 "push"
                                    [|(Ojs.float_to_js x5571)|]);
                               (match x5572 with
                                | Some x5574 ->
                                    ignore
                                      (Ojs.call x5573 "push"
                                         [|(Ojs.float_to_js x5574)|])
                                | None -> ());
                               x5573))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x5586 : 'tags this) ->
        fun
          ~predicate:(x5579 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x5580 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x5588 = this_to_js Obj.magic x5586 in
                 Ojs.call (Ojs.get_prop_ascii x5588 "every") "apply"
                   [|x5588;((let x5581 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5581 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5583 : Ojs.t) ->
                                          fun (x5584 : Ojs.t) ->
                                            fun (x5585 : Ojs.t) ->
                                              unknown_to_js
                                                (x5579
                                                   ~value:(Ojs.float_of_js
                                                             x5583)
                                                   ~index:(Ojs.float_of_js
                                                             x5584)
                                                   ~array:(t_of_js x5585))))|]);
                             (match x5580 with
                              | Some x5582 ->
                                  ignore
                                    (Ojs.call x5581 "push"
                                       [|(any_to_js x5582)|])
                              | None -> ());
                             x5581))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x5595 : 'tags this) ->
        fun ~value:(x5589 : float) ->
          fun ?start:(x5590 : float option) ->
            fun ?end_:(x5591 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x5597 = this_to_js Obj.magic x5595 in
                   Ojs.call (Ojs.get_prop_ascii x5597 "fill") "apply"
                     [|x5597;((let x5592 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5592 "push"
                                    [|(Ojs.float_to_js x5589)|]);
                               (match x5590 with
                                | Some x5594 ->
                                    ignore
                                      (Ojs.call x5592 "push"
                                         [|(Ojs.float_to_js x5594)|])
                                | None -> ());
                               (match x5591 with
                                | Some x5593 ->
                                    ignore
                                      (Ojs.call x5592 "push"
                                         [|(Ojs.float_to_js x5593)|])
                                | None -> ());
                               x5592))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x5606 : 'tags this) ->
        fun ~predicate:(x5599 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x5600 : any option) ->
            fun () ->
              t_of_js
                (let x5608 = this_to_js Obj.magic x5606 in
                 Ojs.call (Ojs.get_prop_ascii x5608 "filter") "apply"
                   [|x5608;((let x5601 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5601 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5603 : Ojs.t) ->
                                          fun (x5604 : Ojs.t) ->
                                            fun (x5605 : Ojs.t) ->
                                              any_to_js
                                                (x5599
                                                   ~value:(Ojs.float_of_js
                                                             x5603)
                                                   ~index:(Ojs.float_of_js
                                                             x5604)
                                                   ~array:(t_of_js x5605))))|]);
                             (match x5600 with
                              | Some x5602 ->
                                  ignore
                                    (Ojs.call x5601 "push"
                                       [|(any_to_js x5602)|])
                              | None -> ());
                             x5601))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x5616 : 'tags this) ->
        fun ~predicate:(x5609 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x5610 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x5618 = this_to_js Obj.magic x5616 in
                 Ojs.call (Ojs.get_prop_ascii x5618 "find") "apply"
                   [|x5618;((let x5611 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5611 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5613 : Ojs.t) ->
                                          fun (x5614 : Ojs.t) ->
                                            fun (x5615 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x5609
                                                   ~value:(Ojs.float_of_js
                                                             x5613)
                                                   ~index:(Ojs.float_of_js
                                                             x5614)
                                                   ~obj:(t_of_js x5615))))|]);
                             (match x5610 with
                              | Some x5612 ->
                                  ignore
                                    (Ojs.call x5611 "push"
                                       [|(any_to_js x5612)|])
                              | None -> ());
                             x5611))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x5627 : 'tags this) ->
        fun ~predicate:(x5620 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x5621 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x5629 = this_to_js Obj.magic x5627 in
                 Ojs.call (Ojs.get_prop_ascii x5629 "findIndex") "apply"
                   [|x5629;((let x5622 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5622 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5624 : Ojs.t) ->
                                          fun (x5625 : Ojs.t) ->
                                            fun (x5626 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x5620
                                                   ~value:(Ojs.float_of_js
                                                             x5624)
                                                   ~index:(Ojs.float_of_js
                                                             x5625)
                                                   ~obj:(t_of_js x5626))))|]);
                             (match x5621 with
                              | Some x5623 ->
                                  ignore
                                    (Ojs.call x5622 "push"
                                       [|(any_to_js x5623)|])
                              | None -> ());
                             x5622))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x5637 : 'tags this) ->
        fun
          ~callbackfn:(x5630 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x5631 : any option) ->
            fun () ->
              ignore
                (let x5639 = this_to_js Obj.magic x5637 in
                 Ojs.call (Ojs.get_prop_ascii x5639 "forEach") "apply"
                   [|x5639;((let x5632 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5632 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5634 : Ojs.t) ->
                                          fun (x5635 : Ojs.t) ->
                                            fun (x5636 : Ojs.t) ->
                                              x5630
                                                ~value:(Ojs.float_of_js x5634)
                                                ~index:(Ojs.float_of_js x5635)
                                                ~array:(t_of_js x5636)))|]);
                             (match x5631 with
                              | Some x5633 ->
                                  ignore
                                    (Ojs.call x5632 "push"
                                       [|(any_to_js x5633)|])
                              | None -> ());
                             x5632))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x5644 : 'tags this) ->
        fun ~searchElement:(x5640 : float) ->
          fun ?fromIndex:(x5641 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x5646 = this_to_js Obj.magic x5644 in
                 Ojs.call (Ojs.get_prop_ascii x5646 "indexOf") "apply"
                   [|x5646;((let x5642 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5642 "push"
                                  [|(Ojs.float_to_js x5640)|]);
                             (match x5641 with
                              | Some x5643 ->
                                  ignore
                                    (Ojs.call x5642 "push"
                                       [|(Ojs.float_to_js x5643)|])
                              | None -> ());
                             x5642))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x5650 : 'tags this) ->
        fun ?separator:(x5647 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x5652 = this_to_js Obj.magic x5650 in
               Ojs.call (Ojs.get_prop_ascii x5652 "join") "apply"
                 [|x5652;((let x5648 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x5647 with
                            | Some x5649 ->
                                ignore
                                  (Ojs.call x5648 "push"
                                     [|(Ojs.string_to_js x5649)|])
                            | None -> ());
                           x5648))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x5657 : 'tags this) ->
        fun ~searchElement:(x5653 : float) ->
          fun ?fromIndex:(x5654 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x5659 = this_to_js Obj.magic x5657 in
                 Ojs.call (Ojs.get_prop_ascii x5659 "lastIndexOf") "apply"
                   [|x5659;((let x5655 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5655 "push"
                                  [|(Ojs.float_to_js x5653)|]);
                             (match x5654 with
                              | Some x5656 ->
                                  ignore
                                    (Ojs.call x5655 "push"
                                       [|(Ojs.float_to_js x5656)|])
                              | None -> ());
                             x5655))|])
    let (get_length : 'tags this -> float) =
      fun (x5660 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5660) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x5669 : 'tags this) ->
        fun
          ~callbackfn:(x5662 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x5663 : any option) ->
            fun () ->
              t_of_js
                (let x5671 = this_to_js Obj.magic x5669 in
                 Ojs.call (Ojs.get_prop_ascii x5671 "map") "apply"
                   [|x5671;((let x5664 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5664 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5666 : Ojs.t) ->
                                          fun (x5667 : Ojs.t) ->
                                            fun (x5668 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x5662
                                                   ~value:(Ojs.float_of_js
                                                             x5666)
                                                   ~index:(Ojs.float_of_js
                                                             x5667)
                                                   ~array:(t_of_js x5668))))|]);
                             (match x5663 with
                              | Some x5665 ->
                                  ignore
                                    (Ojs.call x5664 "push"
                                       [|(any_to_js x5665)|])
                              | None -> ());
                             x5664))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x5677 : 'tags this) ->
        fun
          ~callbackfn:(x5672 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x5677) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x5673 : Ojs.t) ->
                       fun (x5674 : Ojs.t) ->
                         fun (x5675 : Ojs.t) ->
                           fun (x5676 : Ojs.t) ->
                             Ojs.float_to_js
                               (x5672 ~previousValue:(Ojs.float_of_js x5673)
                                  ~currentValue:(Ojs.float_of_js x5674)
                                  ~currentIndex:(Ojs.float_of_js x5675)
                                  ~array:(t_of_js x5676))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x5685 : 'tags this) ->
        fun
          ~callbackfn:(x5679 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x5684 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x5685) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x5680 : Ojs.t) ->
                         fun (x5681 : Ojs.t) ->
                           fun (x5682 : Ojs.t) ->
                             fun (x5683 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x5679
                                    ~previousValue:(Ojs.float_of_js x5680)
                                    ~currentValue:(Ojs.float_of_js x5681)
                                    ~currentIndex:(Ojs.float_of_js x5682)
                                    ~array:(t_of_js x5683))));(Ojs.float_to_js
                                                                 x5684)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x5693 : 'tags this) ->
        fun
          ~callbackfn:(x5687 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x5692 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x5693) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x5688 : Ojs.t) ->
                         fun (x5689 : Ojs.t) ->
                           fun (x5690 : Ojs.t) ->
                             fun (x5691 : Ojs.t) ->
                               Obj.magic
                                 (x5687 ~previousValue:(Obj.magic x5688)
                                    ~currentValue:(Ojs.float_of_js x5689)
                                    ~currentIndex:(Ojs.float_of_js x5690)
                                    ~array:(t_of_js x5691))));(Obj.magic
                                                                 x5692)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x5700 : 'tags this) ->
        fun
          ~callbackfn:(x5695 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x5700) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x5696 : Ojs.t) ->
                       fun (x5697 : Ojs.t) ->
                         fun (x5698 : Ojs.t) ->
                           fun (x5699 : Ojs.t) ->
                             Ojs.float_to_js
                               (x5695 ~previousValue:(Ojs.float_of_js x5696)
                                  ~currentValue:(Ojs.float_of_js x5697)
                                  ~currentIndex:(Ojs.float_of_js x5698)
                                  ~array:(t_of_js x5699))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x5708 : 'tags this) ->
        fun
          ~callbackfn:(x5702 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x5707 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x5708) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x5703 : Ojs.t) ->
                         fun (x5704 : Ojs.t) ->
                           fun (x5705 : Ojs.t) ->
                             fun (x5706 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x5702
                                    ~previousValue:(Ojs.float_of_js x5703)
                                    ~currentValue:(Ojs.float_of_js x5704)
                                    ~currentIndex:(Ojs.float_of_js x5705)
                                    ~array:(t_of_js x5706))));(Ojs.float_to_js
                                                                 x5707)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x5716 : 'tags this) ->
        fun
          ~callbackfn:(x5710 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x5715 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x5716) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x5711 : Ojs.t) ->
                         fun (x5712 : Ojs.t) ->
                           fun (x5713 : Ojs.t) ->
                             fun (x5714 : Ojs.t) ->
                               Obj.magic
                                 (x5710 ~previousValue:(Obj.magic x5711)
                                    ~currentValue:(Ojs.float_of_js x5712)
                                    ~currentIndex:(Ojs.float_of_js x5713)
                                    ~array:(t_of_js x5714))));(Obj.magic
                                                                 x5715)|])
    let (reverse : 'tags this -> t) =
      fun (x5718 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x5718) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x5725 : 'tags this) ->
        fun ~array:(x5720 : float ArrayLike.t) ->
          fun ?offset:(x5721 : float option) ->
            fun () ->
              ignore
                (let x5727 = this_to_js Obj.magic x5725 in
                 Ojs.call (Ojs.get_prop_ascii x5727 "set") "apply"
                   [|x5727;((let x5722 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5722 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x5720)|]);
                             (match x5721 with
                              | Some x5723 ->
                                  ignore
                                    (Ojs.call x5722 "push"
                                       [|(Ojs.float_to_js x5723)|])
                              | None -> ());
                             x5722))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x5733 : 'tags this) ->
        fun ?start:(x5728 : float option) ->
          fun ?end_:(x5729 : float option) ->
            fun () ->
              t_of_js
                (let x5735 = this_to_js Obj.magic x5733 in
                 Ojs.call (Ojs.get_prop_ascii x5735 "slice") "apply"
                   [|x5735;((let x5730 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x5728 with
                              | Some x5732 ->
                                  ignore
                                    (Ojs.call x5730 "push"
                                       [|(Ojs.float_to_js x5732)|])
                              | None -> ());
                             (match x5729 with
                              | Some x5731 ->
                                  ignore
                                    (Ojs.call x5730 "push"
                                       [|(Ojs.float_to_js x5731)|])
                              | None -> ());
                             x5730))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x5743 : 'tags this) ->
        fun
          ~predicate:(x5736 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x5737 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x5745 = this_to_js Obj.magic x5743 in
                 Ojs.call (Ojs.get_prop_ascii x5745 "some") "apply"
                   [|x5745;((let x5738 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5738 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5740 : Ojs.t) ->
                                          fun (x5741 : Ojs.t) ->
                                            fun (x5742 : Ojs.t) ->
                                              unknown_to_js
                                                (x5736
                                                   ~value:(Ojs.float_of_js
                                                             x5740)
                                                   ~index:(Ojs.float_of_js
                                                             x5741)
                                                   ~array:(t_of_js x5742))))|]);
                             (match x5737 with
                              | Some x5739 ->
                                  ignore
                                    (Ojs.call x5738 "push"
                                       [|(any_to_js x5739)|])
                              | None -> ());
                             x5738))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x5751 : 'tags this) ->
        fun ?compareFn:(x5746 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x5753 = this_to_js Obj.magic x5751 in
               Ojs.call (Ojs.get_prop_ascii x5753 "sort") "apply"
                 [|x5753;((let x5747 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x5746 with
                            | Some x5748 ->
                                ignore
                                  (Ojs.call x5747 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x5749 : Ojs.t) ->
                                             fun (x5750 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x5748
                                                    ~a:(Ojs.float_of_js x5749)
                                                    ~b:(Ojs.float_of_js x5750))))|])
                            | None -> ());
                           x5747))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x5760 : 'tags this) ->
        fun ?begin_:(x5755 : float option) ->
          fun ?end_:(x5756 : float option) ->
            fun () ->
              t_of_js
                (let x5762 = this_to_js Obj.magic x5760 in
                 Ojs.call (Ojs.get_prop_ascii x5762 "subarray") "apply"
                   [|x5762;((let x5757 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x5755 with
                              | Some x5759 ->
                                  ignore
                                    (Ojs.call x5757 "push"
                                       [|(Ojs.float_to_js x5759)|])
                              | None -> ());
                             (match x5756 with
                              | Some x5758 ->
                                  ignore
                                    (Ojs.call x5757 "push"
                                       [|(Ojs.float_to_js x5758)|])
                              | None -> ());
                             x5757))|])
    let (toString : 'tags this -> string) =
      fun (x5763 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x5763) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x5765 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x5765) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x5767 : 'tags this) ->
        fun (x5769 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x5767)
               (Ojs.float_to_js x5769))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x5770 : 'tags this) ->
        fun (x5772 : float) ->
          fun (x5773 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x5770) (Ojs.float_to_js x5772)
              (Ojs.float_to_js x5773)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float64Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x5774 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float64Array")
             [|(Iterable.t_to_js Ojs.float_to_js x5774)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x5776 : float Iterable.t) ->
        fun ?mapfn:(x5777 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x5778 : any option) ->
            fun () ->
              t_of_js
                (let x5785 = Ojs.get_prop_ascii Ojs.global "Float64Array" in
                 Ojs.call (Ojs.get_prop_ascii x5785 "from") "apply"
                   [|x5785;((let x5779 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5779 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x5776)|]);
                             (match x5777 with
                              | Some x5781 ->
                                  ignore
                                    (Ojs.call x5779 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x5782 : Ojs.t) ->
                                               fun (x5783 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x5781
                                                      ~v:(Ojs.float_of_js
                                                            x5782)
                                                      ~k:(Ojs.float_of_js
                                                            x5783))))|])
                              | None -> ());
                             (match x5778 with
                              | Some x5780 ->
                                  ignore
                                    (Ojs.call x5779 "push"
                                       [|(any_to_js x5780)|])
                              | None -> ());
                             x5779))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Float64Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x5786 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float64Array")
             [|(Ojs.float_to_js x5786)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x5787 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float64Array")
             [|((match x5787 with
                 | `U1 x5788 -> ArrayLike.t_to_js Ojs.float_to_js x5788
                 | `U2 x5790 -> ArrayBufferLike.t_to_js x5790))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x5791 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x5792 : float option) ->
          fun ?length:(x5793 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Float64Array")
                   (let x5794 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x5794 "push"
                         [|(ArrayBufferLike.t_to_js x5791)|]);
                    (match x5792 with
                     | Some x5796 ->
                         ignore
                           (Ojs.call x5794 "push" [|(Ojs.float_to_js x5796)|])
                     | None -> ());
                    (match x5793 with
                     | Some x5795 ->
                         ignore
                           (Ojs.call x5794 "push" [|(Ojs.float_to_js x5795)|])
                     | None -> ());
                    x5794))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Float64Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x5797 : float list) ->
        t_of_js
          (let x5800 = Ojs.get_prop_ascii Ojs.global "Float64Array" in
           Ojs.call (Ojs.get_prop_ascii x5800 "of") "apply"
             [|x5800;((let x5798 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x5799 : float) ->
                            ignore
                              (Ojs.call x5798 "push"
                                 [|(Ojs.float_to_js x5799)|])) x5797;
                       x5798))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x5801 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Float64Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x5801)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x5803 : 'T ArrayLike.t) ->
        fun ~mapfn:(x5804 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x5805 : any option) ->
            fun () ->
              t_of_js
                (let x5811 = Ojs.get_prop_ascii Ojs.global "Float64Array" in
                 Ojs.call (Ojs.get_prop_ascii x5811 "from") "apply"
                   [|x5811;((let x5806 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5806 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x5803)|]);
                             ignore
                               (Ojs.call x5806 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x5808 : Ojs.t) ->
                                          fun (x5809 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x5804 ~v:(Obj.magic x5808)
                                                 ~k:(Ojs.float_of_js x5809))))|]);
                             (match x5805 with
                              | Some x5807 ->
                                  ignore
                                    (Ojs.call x5806 "push"
                                       [|(any_to_js x5807)|])
                              | None -> ());
                             x5806))|])
    let cast_from = Obj.magic
  end
module Float32Array =
  struct
    type t =
      [ `Float32Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x5813 : Ojs.t) -> t_of_js x5813
    and t_0_to_js : t_0 -> Ojs.t = fun (x5812 : t) -> t_to_js x5812
    type tags =
      [ `Float32Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Float32Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x5816 : Ojs.t) -> intf_of_js __tags_of_js x5816
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x5814 : __tags intf) -> intf_to_js __tags_to_js x5814
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x5822 : 'tags this) ->
        fun ~searchElement:(x5818 : float) ->
          fun ?fromIndex:(x5819 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x5824 = this_to_js Obj.magic x5822 in
                 Ojs.call (Ojs.get_prop_ascii x5824 "includes") "apply"
                   [|x5824;((let x5820 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5820 "push"
                                  [|(Ojs.float_to_js x5818)|]);
                             (match x5819 with
                              | Some x5821 ->
                                  ignore
                                    (Ojs.call x5820 "push"
                                       [|(Ojs.float_to_js x5821)|])
                              | None -> ());
                             x5820))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x5825 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x5827 : Ojs.t) ->
             let x5828 = x5827 in
             ((Ojs.float_of_js (Ojs.array_get x5828 0)),
               (Ojs.float_of_js (Ojs.array_get x5828 1))))
          (Ojs.call (this_to_js Obj.magic x5825) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x5829 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x5829) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x5832 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x5832) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x5835 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5835)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x5837 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5837) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x5839 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5839) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x5841 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5841) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x5848 : 'tags this) ->
        fun ~target:(x5843 : float) ->
          fun ~start:(x5844 : float) ->
            fun ?end_:(x5845 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x5850 = this_to_js Obj.magic x5848 in
                   Ojs.call (Ojs.get_prop_ascii x5850 "copyWithin") "apply"
                     [|x5850;((let x5846 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5846 "push"
                                    [|(Ojs.float_to_js x5843)|]);
                               ignore
                                 (Ojs.call x5846 "push"
                                    [|(Ojs.float_to_js x5844)|]);
                               (match x5845 with
                                | Some x5847 ->
                                    ignore
                                      (Ojs.call x5846 "push"
                                         [|(Ojs.float_to_js x5847)|])
                                | None -> ());
                               x5846))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x5859 : 'tags this) ->
        fun
          ~predicate:(x5852 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x5853 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x5861 = this_to_js Obj.magic x5859 in
                 Ojs.call (Ojs.get_prop_ascii x5861 "every") "apply"
                   [|x5861;((let x5854 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5854 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5856 : Ojs.t) ->
                                          fun (x5857 : Ojs.t) ->
                                            fun (x5858 : Ojs.t) ->
                                              unknown_to_js
                                                (x5852
                                                   ~value:(Ojs.float_of_js
                                                             x5856)
                                                   ~index:(Ojs.float_of_js
                                                             x5857)
                                                   ~array:(t_of_js x5858))))|]);
                             (match x5853 with
                              | Some x5855 ->
                                  ignore
                                    (Ojs.call x5854 "push"
                                       [|(any_to_js x5855)|])
                              | None -> ());
                             x5854))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x5868 : 'tags this) ->
        fun ~value:(x5862 : float) ->
          fun ?start:(x5863 : float option) ->
            fun ?end_:(x5864 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x5870 = this_to_js Obj.magic x5868 in
                   Ojs.call (Ojs.get_prop_ascii x5870 "fill") "apply"
                     [|x5870;((let x5865 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x5865 "push"
                                    [|(Ojs.float_to_js x5862)|]);
                               (match x5863 with
                                | Some x5867 ->
                                    ignore
                                      (Ojs.call x5865 "push"
                                         [|(Ojs.float_to_js x5867)|])
                                | None -> ());
                               (match x5864 with
                                | Some x5866 ->
                                    ignore
                                      (Ojs.call x5865 "push"
                                         [|(Ojs.float_to_js x5866)|])
                                | None -> ());
                               x5865))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x5879 : 'tags this) ->
        fun ~predicate:(x5872 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x5873 : any option) ->
            fun () ->
              t_of_js
                (let x5881 = this_to_js Obj.magic x5879 in
                 Ojs.call (Ojs.get_prop_ascii x5881 "filter") "apply"
                   [|x5881;((let x5874 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5874 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5876 : Ojs.t) ->
                                          fun (x5877 : Ojs.t) ->
                                            fun (x5878 : Ojs.t) ->
                                              any_to_js
                                                (x5872
                                                   ~value:(Ojs.float_of_js
                                                             x5876)
                                                   ~index:(Ojs.float_of_js
                                                             x5877)
                                                   ~array:(t_of_js x5878))))|]);
                             (match x5873 with
                              | Some x5875 ->
                                  ignore
                                    (Ojs.call x5874 "push"
                                       [|(any_to_js x5875)|])
                              | None -> ());
                             x5874))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x5889 : 'tags this) ->
        fun ~predicate:(x5882 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x5883 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x5891 = this_to_js Obj.magic x5889 in
                 Ojs.call (Ojs.get_prop_ascii x5891 "find") "apply"
                   [|x5891;((let x5884 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5884 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5886 : Ojs.t) ->
                                          fun (x5887 : Ojs.t) ->
                                            fun (x5888 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x5882
                                                   ~value:(Ojs.float_of_js
                                                             x5886)
                                                   ~index:(Ojs.float_of_js
                                                             x5887)
                                                   ~obj:(t_of_js x5888))))|]);
                             (match x5883 with
                              | Some x5885 ->
                                  ignore
                                    (Ojs.call x5884 "push"
                                       [|(any_to_js x5885)|])
                              | None -> ());
                             x5884))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x5900 : 'tags this) ->
        fun ~predicate:(x5893 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x5894 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x5902 = this_to_js Obj.magic x5900 in
                 Ojs.call (Ojs.get_prop_ascii x5902 "findIndex") "apply"
                   [|x5902;((let x5895 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5895 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5897 : Ojs.t) ->
                                          fun (x5898 : Ojs.t) ->
                                            fun (x5899 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x5893
                                                   ~value:(Ojs.float_of_js
                                                             x5897)
                                                   ~index:(Ojs.float_of_js
                                                             x5898)
                                                   ~obj:(t_of_js x5899))))|]);
                             (match x5894 with
                              | Some x5896 ->
                                  ignore
                                    (Ojs.call x5895 "push"
                                       [|(any_to_js x5896)|])
                              | None -> ());
                             x5895))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x5910 : 'tags this) ->
        fun
          ~callbackfn:(x5903 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x5904 : any option) ->
            fun () ->
              ignore
                (let x5912 = this_to_js Obj.magic x5910 in
                 Ojs.call (Ojs.get_prop_ascii x5912 "forEach") "apply"
                   [|x5912;((let x5905 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5905 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5907 : Ojs.t) ->
                                          fun (x5908 : Ojs.t) ->
                                            fun (x5909 : Ojs.t) ->
                                              x5903
                                                ~value:(Ojs.float_of_js x5907)
                                                ~index:(Ojs.float_of_js x5908)
                                                ~array:(t_of_js x5909)))|]);
                             (match x5904 with
                              | Some x5906 ->
                                  ignore
                                    (Ojs.call x5905 "push"
                                       [|(any_to_js x5906)|])
                              | None -> ());
                             x5905))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x5917 : 'tags this) ->
        fun ~searchElement:(x5913 : float) ->
          fun ?fromIndex:(x5914 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x5919 = this_to_js Obj.magic x5917 in
                 Ojs.call (Ojs.get_prop_ascii x5919 "indexOf") "apply"
                   [|x5919;((let x5915 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5915 "push"
                                  [|(Ojs.float_to_js x5913)|]);
                             (match x5914 with
                              | Some x5916 ->
                                  ignore
                                    (Ojs.call x5915 "push"
                                       [|(Ojs.float_to_js x5916)|])
                              | None -> ());
                             x5915))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x5923 : 'tags this) ->
        fun ?separator:(x5920 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x5925 = this_to_js Obj.magic x5923 in
               Ojs.call (Ojs.get_prop_ascii x5925 "join") "apply"
                 [|x5925;((let x5921 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x5920 with
                            | Some x5922 ->
                                ignore
                                  (Ojs.call x5921 "push"
                                     [|(Ojs.string_to_js x5922)|])
                            | None -> ());
                           x5921))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x5930 : 'tags this) ->
        fun ~searchElement:(x5926 : float) ->
          fun ?fromIndex:(x5927 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x5932 = this_to_js Obj.magic x5930 in
                 Ojs.call (Ojs.get_prop_ascii x5932 "lastIndexOf") "apply"
                   [|x5932;((let x5928 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5928 "push"
                                  [|(Ojs.float_to_js x5926)|]);
                             (match x5927 with
                              | Some x5929 ->
                                  ignore
                                    (Ojs.call x5928 "push"
                                       [|(Ojs.float_to_js x5929)|])
                              | None -> ());
                             x5928))|])
    let (get_length : 'tags this -> float) =
      fun (x5933 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x5933) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x5942 : 'tags this) ->
        fun
          ~callbackfn:(x5935 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x5936 : any option) ->
            fun () ->
              t_of_js
                (let x5944 = this_to_js Obj.magic x5942 in
                 Ojs.call (Ojs.get_prop_ascii x5944 "map") "apply"
                   [|x5944;((let x5937 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5937 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x5939 : Ojs.t) ->
                                          fun (x5940 : Ojs.t) ->
                                            fun (x5941 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x5935
                                                   ~value:(Ojs.float_of_js
                                                             x5939)
                                                   ~index:(Ojs.float_of_js
                                                             x5940)
                                                   ~array:(t_of_js x5941))))|]);
                             (match x5936 with
                              | Some x5938 ->
                                  ignore
                                    (Ojs.call x5937 "push"
                                       [|(any_to_js x5938)|])
                              | None -> ());
                             x5937))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x5950 : 'tags this) ->
        fun
          ~callbackfn:(x5945 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x5950) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x5946 : Ojs.t) ->
                       fun (x5947 : Ojs.t) ->
                         fun (x5948 : Ojs.t) ->
                           fun (x5949 : Ojs.t) ->
                             Ojs.float_to_js
                               (x5945 ~previousValue:(Ojs.float_of_js x5946)
                                  ~currentValue:(Ojs.float_of_js x5947)
                                  ~currentIndex:(Ojs.float_of_js x5948)
                                  ~array:(t_of_js x5949))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x5958 : 'tags this) ->
        fun
          ~callbackfn:(x5952 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x5957 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x5958) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x5953 : Ojs.t) ->
                         fun (x5954 : Ojs.t) ->
                           fun (x5955 : Ojs.t) ->
                             fun (x5956 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x5952
                                    ~previousValue:(Ojs.float_of_js x5953)
                                    ~currentValue:(Ojs.float_of_js x5954)
                                    ~currentIndex:(Ojs.float_of_js x5955)
                                    ~array:(t_of_js x5956))));(Ojs.float_to_js
                                                                 x5957)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x5966 : 'tags this) ->
        fun
          ~callbackfn:(x5960 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x5965 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x5966) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x5961 : Ojs.t) ->
                         fun (x5962 : Ojs.t) ->
                           fun (x5963 : Ojs.t) ->
                             fun (x5964 : Ojs.t) ->
                               Obj.magic
                                 (x5960 ~previousValue:(Obj.magic x5961)
                                    ~currentValue:(Ojs.float_of_js x5962)
                                    ~currentIndex:(Ojs.float_of_js x5963)
                                    ~array:(t_of_js x5964))));(Obj.magic
                                                                 x5965)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x5973 : 'tags this) ->
        fun
          ~callbackfn:(x5968 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x5973) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x5969 : Ojs.t) ->
                       fun (x5970 : Ojs.t) ->
                         fun (x5971 : Ojs.t) ->
                           fun (x5972 : Ojs.t) ->
                             Ojs.float_to_js
                               (x5968 ~previousValue:(Ojs.float_of_js x5969)
                                  ~currentValue:(Ojs.float_of_js x5970)
                                  ~currentIndex:(Ojs.float_of_js x5971)
                                  ~array:(t_of_js x5972))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x5981 : 'tags this) ->
        fun
          ~callbackfn:(x5975 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x5980 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x5981) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x5976 : Ojs.t) ->
                         fun (x5977 : Ojs.t) ->
                           fun (x5978 : Ojs.t) ->
                             fun (x5979 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x5975
                                    ~previousValue:(Ojs.float_of_js x5976)
                                    ~currentValue:(Ojs.float_of_js x5977)
                                    ~currentIndex:(Ojs.float_of_js x5978)
                                    ~array:(t_of_js x5979))));(Ojs.float_to_js
                                                                 x5980)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x5989 : 'tags this) ->
        fun
          ~callbackfn:(x5983 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x5988 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x5989) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x5984 : Ojs.t) ->
                         fun (x5985 : Ojs.t) ->
                           fun (x5986 : Ojs.t) ->
                             fun (x5987 : Ojs.t) ->
                               Obj.magic
                                 (x5983 ~previousValue:(Obj.magic x5984)
                                    ~currentValue:(Ojs.float_of_js x5985)
                                    ~currentIndex:(Ojs.float_of_js x5986)
                                    ~array:(t_of_js x5987))));(Obj.magic
                                                                 x5988)|])
    let (reverse : 'tags this -> t) =
      fun (x5991 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x5991) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x5998 : 'tags this) ->
        fun ~array:(x5993 : float ArrayLike.t) ->
          fun ?offset:(x5994 : float option) ->
            fun () ->
              ignore
                (let x6000 = this_to_js Obj.magic x5998 in
                 Ojs.call (Ojs.get_prop_ascii x6000 "set") "apply"
                   [|x6000;((let x5995 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x5995 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x5993)|]);
                             (match x5994 with
                              | Some x5996 ->
                                  ignore
                                    (Ojs.call x5995 "push"
                                       [|(Ojs.float_to_js x5996)|])
                              | None -> ());
                             x5995))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x6006 : 'tags this) ->
        fun ?start:(x6001 : float option) ->
          fun ?end_:(x6002 : float option) ->
            fun () ->
              t_of_js
                (let x6008 = this_to_js Obj.magic x6006 in
                 Ojs.call (Ojs.get_prop_ascii x6008 "slice") "apply"
                   [|x6008;((let x6003 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x6001 with
                              | Some x6005 ->
                                  ignore
                                    (Ojs.call x6003 "push"
                                       [|(Ojs.float_to_js x6005)|])
                              | None -> ());
                             (match x6002 with
                              | Some x6004 ->
                                  ignore
                                    (Ojs.call x6003 "push"
                                       [|(Ojs.float_to_js x6004)|])
                              | None -> ());
                             x6003))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x6016 : 'tags this) ->
        fun
          ~predicate:(x6009 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x6010 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6018 = this_to_js Obj.magic x6016 in
                 Ojs.call (Ojs.get_prop_ascii x6018 "some") "apply"
                   [|x6018;((let x6011 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6011 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6013 : Ojs.t) ->
                                          fun (x6014 : Ojs.t) ->
                                            fun (x6015 : Ojs.t) ->
                                              unknown_to_js
                                                (x6009
                                                   ~value:(Ojs.float_of_js
                                                             x6013)
                                                   ~index:(Ojs.float_of_js
                                                             x6014)
                                                   ~array:(t_of_js x6015))))|]);
                             (match x6010 with
                              | Some x6012 ->
                                  ignore
                                    (Ojs.call x6011 "push"
                                       [|(any_to_js x6012)|])
                              | None -> ());
                             x6011))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x6024 : 'tags this) ->
        fun ?compareFn:(x6019 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x6026 = this_to_js Obj.magic x6024 in
               Ojs.call (Ojs.get_prop_ascii x6026 "sort") "apply"
                 [|x6026;((let x6020 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6019 with
                            | Some x6021 ->
                                ignore
                                  (Ojs.call x6020 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x6022 : Ojs.t) ->
                                             fun (x6023 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x6021
                                                    ~a:(Ojs.float_of_js x6022)
                                                    ~b:(Ojs.float_of_js x6023))))|])
                            | None -> ());
                           x6020))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x6033 : 'tags this) ->
        fun ?begin_:(x6028 : float option) ->
          fun ?end_:(x6029 : float option) ->
            fun () ->
              t_of_js
                (let x6035 = this_to_js Obj.magic x6033 in
                 Ojs.call (Ojs.get_prop_ascii x6035 "subarray") "apply"
                   [|x6035;((let x6030 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x6028 with
                              | Some x6032 ->
                                  ignore
                                    (Ojs.call x6030 "push"
                                       [|(Ojs.float_to_js x6032)|])
                              | None -> ());
                             (match x6029 with
                              | Some x6031 ->
                                  ignore
                                    (Ojs.call x6030 "push"
                                       [|(Ojs.float_to_js x6031)|])
                              | None -> ());
                             x6030))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x6036 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x6036) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x6038 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x6038) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x6040 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x6040) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x6042 : 'tags this) ->
        fun (x6044 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x6042)
               (Ojs.float_to_js x6044))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x6045 : 'tags this) ->
        fun (x6047 : float) ->
          fun (x6048 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x6045) (Ojs.float_to_js x6047)
              (Ojs.float_to_js x6048)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float32Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x6049 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float32Array")
             [|(Iterable.t_to_js Ojs.float_to_js x6049)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x6051 : float Iterable.t) ->
        fun ?mapfn:(x6052 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x6053 : any option) ->
            fun () ->
              t_of_js
                (let x6060 = Ojs.get_prop_ascii Ojs.global "Float32Array" in
                 Ojs.call (Ojs.get_prop_ascii x6060 "from") "apply"
                   [|x6060;((let x6054 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6054 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x6051)|]);
                             (match x6052 with
                              | Some x6056 ->
                                  ignore
                                    (Ojs.call x6054 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x6057 : Ojs.t) ->
                                               fun (x6058 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x6056
                                                      ~v:(Ojs.float_of_js
                                                            x6057)
                                                      ~k:(Ojs.float_of_js
                                                            x6058))))|])
                              | None -> ());
                             (match x6053 with
                              | Some x6055 ->
                                  ignore
                                    (Ojs.call x6054 "push"
                                       [|(any_to_js x6055)|])
                              | None -> ());
                             x6054))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Float32Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x6061 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float32Array")
             [|(Ojs.float_to_js x6061)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x6062 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Float32Array")
             [|((match x6062 with
                 | `U1 x6063 -> ArrayLike.t_to_js Ojs.float_to_js x6063
                 | `U2 x6065 -> ArrayBufferLike.t_to_js x6065))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x6066 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x6067 : float option) ->
          fun ?length:(x6068 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Float32Array")
                   (let x6069 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x6069 "push"
                         [|(ArrayBufferLike.t_to_js x6066)|]);
                    (match x6067 with
                     | Some x6071 ->
                         ignore
                           (Ojs.call x6069 "push" [|(Ojs.float_to_js x6071)|])
                     | None -> ());
                    (match x6068 with
                     | Some x6070 ->
                         ignore
                           (Ojs.call x6069 "push" [|(Ojs.float_to_js x6070)|])
                     | None -> ());
                    x6069))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Float32Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x6072 : float list) ->
        t_of_js
          (let x6075 = Ojs.get_prop_ascii Ojs.global "Float32Array" in
           Ojs.call (Ojs.get_prop_ascii x6075 "of") "apply"
             [|x6075;((let x6073 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x6074 : float) ->
                            ignore
                              (Ojs.call x6073 "push"
                                 [|(Ojs.float_to_js x6074)|])) x6072;
                       x6073))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x6076 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Float32Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x6076)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x6078 : 'T ArrayLike.t) ->
        fun ~mapfn:(x6079 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x6080 : any option) ->
            fun () ->
              t_of_js
                (let x6086 = Ojs.get_prop_ascii Ojs.global "Float32Array" in
                 Ojs.call (Ojs.get_prop_ascii x6086 "from") "apply"
                   [|x6086;((let x6081 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6081 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x6078)|]);
                             ignore
                               (Ojs.call x6081 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x6083 : Ojs.t) ->
                                          fun (x6084 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x6079 ~v:(Obj.magic x6083)
                                                 ~k:(Ojs.float_of_js x6084))))|]);
                             (match x6080 with
                              | Some x6082 ->
                                  ignore
                                    (Ojs.call x6081 "push"
                                       [|(any_to_js x6082)|])
                              | None -> ());
                             x6081))|])
    let cast_from = Obj.magic
  end
module FinalizationRegistry =
  struct
    type 'T t = [ `FinalizationRegistry of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x6089 : Ojs.t) -> t_of_js __T_of_js x6089
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x6087 : __T t) -> t_to_js __T_to_js x6087
    type t_0 = any t
    let rec t_0_of_js : Ojs.t -> t_0 =
      fun (x6093 : Ojs.t) -> t_of_js any_of_js x6093
    and t_0_to_js : t_0 -> Ojs.t =
      fun (x6091 : any t) -> t_to_js any_to_js x6091
    type 'T tags = [ `FinalizationRegistry of 'T ]
    type 'T tags_1 = 'T tags
    type tags_0 = any tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `FinalizationRegistry of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x6097 : Ojs.t) -> intf_of_js __tags_of_js x6097
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x6095 : __tags intf) -> intf_to_js __tags_to_js x6095
    let (register :
      ('tags, 'T) this ->
        target:untyped_object ->
          heldValue:any -> ?unregisterToken:untyped_object -> unit -> unit)
      =
      fun (x6104 : ('tags, 'T) this) ->
        fun ~target:(x6099 : untyped_object) ->
          fun ~heldValue:(x6100 : any) ->
            fun ?unregisterToken:(x6101 : untyped_object option) ->
              fun () ->
                ignore
                  (let x6107 = this_to_js Obj.magic Obj.magic x6104 in
                   Ojs.call (Ojs.get_prop_ascii x6107 "register") "apply"
                     [|x6107;((let x6102 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6102 "push"
                                    [|(untyped_object_to_js x6099)|]);
                               ignore
                                 (Ojs.call x6102 "push" [|(any_to_js x6100)|]);
                               (match x6101 with
                                | Some x6103 ->
                                    ignore
                                      (Ojs.call x6102 "push"
                                         [|(untyped_object_to_js x6103)|])
                                | None -> ());
                               x6102))|])
    let (unregister :
      ('tags, 'T) this -> unregisterToken:untyped_object -> unit) =
      fun (x6109 : ('tags, 'T) this) ->
        fun ~unregisterToken:(x6108 : untyped_object) ->
          ignore
            (Ojs.call (this_to_js Obj.magic Obj.magic x6109) "unregister"
               [|(untyped_object_to_js x6108)|])
    let (register' :
      ('tags, 'T) this ->
        target:untyped_object ->
          heldValue:'T -> ?unregisterToken:untyped_object -> unit -> unit)
      =
      fun (x6117 : ('tags, 'T) this) ->
        fun ~target:(x6112 : untyped_object) ->
          fun ~heldValue:(x6113 : 'T) ->
            fun ?unregisterToken:(x6114 : untyped_object option) ->
              fun () ->
                ignore
                  (let x6120 = this_to_js Obj.magic Obj.magic x6117 in
                   Ojs.call (Ojs.get_prop_ascii x6120 "register") "apply"
                     [|x6120;((let x6115 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6115 "push"
                                    [|(untyped_object_to_js x6112)|]);
                               ignore
                                 (Ojs.call x6115 "push" [|(Obj.magic x6113)|]);
                               (match x6114 with
                                | Some x6116 ->
                                    ignore
                                      (Ojs.call x6115 "push"
                                         [|(untyped_object_to_js x6116)|])
                                | None -> ());
                               x6115))|])
    let (unregister' :
      ('tags, 'T) this -> unregisterToken:untyped_object -> unit) =
      fun (x6122 : ('tags, 'T) this) ->
        fun ~unregisterToken:(x6121 : untyped_object) ->
          ignore
            (Ojs.call (this_to_js Obj.magic Obj.magic x6122) "unregister"
               [|(untyped_object_to_js x6121)|])
    let (prototype : unit -> t_0) =
      fun () ->
        t_0_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             "prototype")
    let (create : (any -> unit) -> t_0) =
      fun (x6125 : any -> unit) ->
        t_0_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             [|(Ojs.fun_to_js 1
                  (fun (x6126 : Ojs.t) -> x6125 (any_of_js x6126)))|])
    let (prototype' : unit -> any t) =
      fun () ->
        t_of_js any_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             "prototype")
    let (create' : ('T -> unit) -> 'T t) =
      fun (x6128 : 'T -> unit) ->
        t_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             [|(Ojs.fun_to_js 1
                  (fun (x6129 : Ojs.t) -> x6128 (Obj.magic x6129)))|])
    let cast_from = Obj.magic
  end
module Extract =
  struct
    type ('T, 'U) t = any
    let rec t_of_js :
      'T 'U . (Ojs.t -> 'T) -> (Ojs.t -> 'U) -> Ojs.t -> ('T, 'U) t = fun
      (type __T) -> fun (type __U) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__U_of_js : Ojs.t -> __U) ->
          fun (x6132 : Ojs.t) -> any_of_js x6132
    and t_to_js :
      'T 'U . ('T -> Ojs.t) -> ('U -> Ojs.t) -> ('T, 'U) t -> Ojs.t = fun
      (type __T) -> fun (type __U) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__U_to_js : __U -> Ojs.t) ->
          fun (x6131 : any) -> any_to_js x6131
    type ('T, 'U) t_2 = ('T, 'U) t
    let rec t_2_of_js :
      'T 'U . (Ojs.t -> 'T) -> (Ojs.t -> 'U) -> Ojs.t -> ('T, 'U) t_2 = fun
      (type __T) -> fun (type __U) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__U_of_js : Ojs.t -> __U) ->
          fun (x6136 : Ojs.t) -> t_of_js __T_of_js __U_of_js x6136
    and t_2_to_js :
      'T 'U . ('T -> Ojs.t) -> ('U -> Ojs.t) -> ('T, 'U) t_2 -> Ojs.t = fun
      (type __T) -> fun (type __U) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__U_to_js : __U -> Ojs.t) ->
          fun (x6133 : (__T, __U) t) -> t_to_js __T_to_js __U_to_js x6133
  end
module EvalError =
  struct
    type t = [ `Error  | `EvalError ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6140 : Ojs.t) -> t_of_js x6140
    and t_0_to_js : t_0 -> Ojs.t = fun (x6139 : t) -> t_to_js x6139
    type tags = [ `Error  | `EvalError ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `EvalError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6143 : Ojs.t) -> intf_of_js __tags_of_js x6143
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6141 : __tags intf) -> intf_to_js __tags_to_js x6141
    let (create : ?message:string -> unit -> t) =
      fun ?message:(x6145 : string option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "EvalError")
               (let x6146 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x6145 with
                 | Some x6147 ->
                     ignore
                       (Ojs.call x6146 "push" [|(Ojs.string_to_js x6147)|])
                 | None -> ());
                x6146))
    let (invoke : ?message:string -> unit -> t) =
      fun ?message:(x6148 : string option) ->
        fun () ->
          t_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "EvalError") "apply"
               [|Ojs.null;((let x6149 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x6148 with
                             | Some x6150 ->
                                 ignore
                                   (Ojs.call x6149 "push"
                                      [|(Ojs.string_to_js x6150)|])
                             | None -> ());
                            x6149))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "EvalError")
             "prototype")
    let cast_from = Obj.magic
  end
module DataView =
  struct
    type t = [ `DataView ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6152 : Ojs.t) -> t_of_js x6152
    and t_0_to_js : t_0 -> Ojs.t = fun (x6151 : t) -> t_to_js x6151
    type tags = [ `DataView ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `DataView ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6155 : Ojs.t) -> intf_of_js __tags_of_js x6155
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6153 : __tags intf) -> intf_to_js __tags_to_js x6153
    let (getBigInt64 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> bigint)
      =
      fun (x6161 : 'tags this) ->
        fun ~byteOffset:(x6157 : float) ->
          fun ?littleEndian:(x6158 : bool option) ->
            fun () ->
              bigint_of_js
                (let x6163 = this_to_js Obj.magic x6161 in
                 Ojs.call (Ojs.get_prop_ascii x6163 "getBigInt64") "apply"
                   [|x6163;((let x6159 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6159 "push"
                                  [|(Ojs.float_to_js x6157)|]);
                             (match x6158 with
                              | Some x6160 ->
                                  ignore
                                    (Ojs.call x6159 "push"
                                       [|(Ojs.bool_to_js x6160)|])
                              | None -> ());
                             x6159))|])
    let (getBigUint64 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> bigint)
      =
      fun (x6168 : 'tags this) ->
        fun ~byteOffset:(x6164 : float) ->
          fun ?littleEndian:(x6165 : bool option) ->
            fun () ->
              bigint_of_js
                (let x6170 = this_to_js Obj.magic x6168 in
                 Ojs.call (Ojs.get_prop_ascii x6170 "getBigUint64") "apply"
                   [|x6170;((let x6166 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6166 "push"
                                  [|(Ojs.float_to_js x6164)|]);
                             (match x6165 with
                              | Some x6167 ->
                                  ignore
                                    (Ojs.call x6166 "push"
                                       [|(Ojs.bool_to_js x6167)|])
                              | None -> ());
                             x6166))|])
    let (setBigInt64 :
      'tags this ->
        byteOffset:float ->
          value:bigint -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x6176 : 'tags this) ->
        fun ~byteOffset:(x6171 : float) ->
          fun ~value:(x6172 : bigint) ->
            fun ?littleEndian:(x6173 : bool option) ->
              fun () ->
                ignore
                  (let x6178 = this_to_js Obj.magic x6176 in
                   Ojs.call (Ojs.get_prop_ascii x6178 "setBigInt64") "apply"
                     [|x6178;((let x6174 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6174 "push"
                                    [|(Ojs.float_to_js x6171)|]);
                               ignore
                                 (Ojs.call x6174 "push"
                                    [|(bigint_to_js x6172)|]);
                               (match x6173 with
                                | Some x6175 ->
                                    ignore
                                      (Ojs.call x6174 "push"
                                         [|(Ojs.bool_to_js x6175)|])
                                | None -> ());
                               x6174))|])
    let (setBigUint64 :
      'tags this ->
        byteOffset:float ->
          value:bigint -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x6184 : 'tags this) ->
        fun ~byteOffset:(x6179 : float) ->
          fun ~value:(x6180 : bigint) ->
            fun ?littleEndian:(x6181 : bool option) ->
              fun () ->
                ignore
                  (let x6186 = this_to_js Obj.magic x6184 in
                   Ojs.call (Ojs.get_prop_ascii x6186 "setBigUint64") "apply"
                     [|x6186;((let x6182 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6182 "push"
                                    [|(Ojs.float_to_js x6179)|]);
                               ignore
                                 (Ojs.call x6182 "push"
                                    [|(bigint_to_js x6180)|]);
                               (match x6181 with
                                | Some x6183 ->
                                    ignore
                                      (Ojs.call x6182 "push"
                                         [|(Ojs.bool_to_js x6183)|])
                                | None -> ());
                               x6182))|])
    let (get_buffer : 'tags this -> ArrayBuffer.t) =
      fun (x6187 : 'tags this) ->
        ArrayBuffer.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6187) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x6189 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6189) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x6191 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6191) "byteOffset")
    let (getFloat32 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x6197 : 'tags this) ->
        fun ~byteOffset:(x6193 : float) ->
          fun ?littleEndian:(x6194 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x6199 = this_to_js Obj.magic x6197 in
                 Ojs.call (Ojs.get_prop_ascii x6199 "getFloat32") "apply"
                   [|x6199;((let x6195 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6195 "push"
                                  [|(Ojs.float_to_js x6193)|]);
                             (match x6194 with
                              | Some x6196 ->
                                  ignore
                                    (Ojs.call x6195 "push"
                                       [|(Ojs.bool_to_js x6196)|])
                              | None -> ());
                             x6195))|])
    let (getFloat64 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x6204 : 'tags this) ->
        fun ~byteOffset:(x6200 : float) ->
          fun ?littleEndian:(x6201 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x6206 = this_to_js Obj.magic x6204 in
                 Ojs.call (Ojs.get_prop_ascii x6206 "getFloat64") "apply"
                   [|x6206;((let x6202 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6202 "push"
                                  [|(Ojs.float_to_js x6200)|]);
                             (match x6201 with
                              | Some x6203 ->
                                  ignore
                                    (Ojs.call x6202 "push"
                                       [|(Ojs.bool_to_js x6203)|])
                              | None -> ());
                             x6202))|])
    let (getInt8 : 'tags this -> byteOffset:float -> float) =
      fun (x6208 : 'tags this) ->
        fun ~byteOffset:(x6207 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6208) "getInt8"
               [|(Ojs.float_to_js x6207)|])
    let (getInt16 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x6214 : 'tags this) ->
        fun ~byteOffset:(x6210 : float) ->
          fun ?littleEndian:(x6211 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x6216 = this_to_js Obj.magic x6214 in
                 Ojs.call (Ojs.get_prop_ascii x6216 "getInt16") "apply"
                   [|x6216;((let x6212 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6212 "push"
                                  [|(Ojs.float_to_js x6210)|]);
                             (match x6211 with
                              | Some x6213 ->
                                  ignore
                                    (Ojs.call x6212 "push"
                                       [|(Ojs.bool_to_js x6213)|])
                              | None -> ());
                             x6212))|])
    let (getInt32 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x6221 : 'tags this) ->
        fun ~byteOffset:(x6217 : float) ->
          fun ?littleEndian:(x6218 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x6223 = this_to_js Obj.magic x6221 in
                 Ojs.call (Ojs.get_prop_ascii x6223 "getInt32") "apply"
                   [|x6223;((let x6219 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6219 "push"
                                  [|(Ojs.float_to_js x6217)|]);
                             (match x6218 with
                              | Some x6220 ->
                                  ignore
                                    (Ojs.call x6219 "push"
                                       [|(Ojs.bool_to_js x6220)|])
                              | None -> ());
                             x6219))|])
    let (getUint8 : 'tags this -> byteOffset:float -> float) =
      fun (x6225 : 'tags this) ->
        fun ~byteOffset:(x6224 : float) ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6225) "getUint8"
               [|(Ojs.float_to_js x6224)|])
    let (getUint16 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x6231 : 'tags this) ->
        fun ~byteOffset:(x6227 : float) ->
          fun ?littleEndian:(x6228 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x6233 = this_to_js Obj.magic x6231 in
                 Ojs.call (Ojs.get_prop_ascii x6233 "getUint16") "apply"
                   [|x6233;((let x6229 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6229 "push"
                                  [|(Ojs.float_to_js x6227)|]);
                             (match x6228 with
                              | Some x6230 ->
                                  ignore
                                    (Ojs.call x6229 "push"
                                       [|(Ojs.bool_to_js x6230)|])
                              | None -> ());
                             x6229))|])
    let (getUint32 :
      'tags this -> byteOffset:float -> ?littleEndian:bool -> unit -> float)
      =
      fun (x6238 : 'tags this) ->
        fun ~byteOffset:(x6234 : float) ->
          fun ?littleEndian:(x6235 : bool option) ->
            fun () ->
              Ojs.float_of_js
                (let x6240 = this_to_js Obj.magic x6238 in
                 Ojs.call (Ojs.get_prop_ascii x6240 "getUint32") "apply"
                   [|x6240;((let x6236 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6236 "push"
                                  [|(Ojs.float_to_js x6234)|]);
                             (match x6235 with
                              | Some x6237 ->
                                  ignore
                                    (Ojs.call x6236 "push"
                                       [|(Ojs.bool_to_js x6237)|])
                              | None -> ());
                             x6236))|])
    let (setFloat32 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x6246 : 'tags this) ->
        fun ~byteOffset:(x6241 : float) ->
          fun ~value:(x6242 : float) ->
            fun ?littleEndian:(x6243 : bool option) ->
              fun () ->
                ignore
                  (let x6248 = this_to_js Obj.magic x6246 in
                   Ojs.call (Ojs.get_prop_ascii x6248 "setFloat32") "apply"
                     [|x6248;((let x6244 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6244 "push"
                                    [|(Ojs.float_to_js x6241)|]);
                               ignore
                                 (Ojs.call x6244 "push"
                                    [|(Ojs.float_to_js x6242)|]);
                               (match x6243 with
                                | Some x6245 ->
                                    ignore
                                      (Ojs.call x6244 "push"
                                         [|(Ojs.bool_to_js x6245)|])
                                | None -> ());
                               x6244))|])
    let (setFloat64 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x6254 : 'tags this) ->
        fun ~byteOffset:(x6249 : float) ->
          fun ~value:(x6250 : float) ->
            fun ?littleEndian:(x6251 : bool option) ->
              fun () ->
                ignore
                  (let x6256 = this_to_js Obj.magic x6254 in
                   Ojs.call (Ojs.get_prop_ascii x6256 "setFloat64") "apply"
                     [|x6256;((let x6252 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6252 "push"
                                    [|(Ojs.float_to_js x6249)|]);
                               ignore
                                 (Ojs.call x6252 "push"
                                    [|(Ojs.float_to_js x6250)|]);
                               (match x6251 with
                                | Some x6253 ->
                                    ignore
                                      (Ojs.call x6252 "push"
                                         [|(Ojs.bool_to_js x6253)|])
                                | None -> ());
                               x6252))|])
    let (setInt8 : 'tags this -> byteOffset:float -> value:float -> unit) =
      fun (x6259 : 'tags this) ->
        fun ~byteOffset:(x6257 : float) ->
          fun ~value:(x6258 : float) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x6259) "setInt8"
                 [|(Ojs.float_to_js x6257);(Ojs.float_to_js x6258)|])
    let (setInt16 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x6266 : 'tags this) ->
        fun ~byteOffset:(x6261 : float) ->
          fun ~value:(x6262 : float) ->
            fun ?littleEndian:(x6263 : bool option) ->
              fun () ->
                ignore
                  (let x6268 = this_to_js Obj.magic x6266 in
                   Ojs.call (Ojs.get_prop_ascii x6268 "setInt16") "apply"
                     [|x6268;((let x6264 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6264 "push"
                                    [|(Ojs.float_to_js x6261)|]);
                               ignore
                                 (Ojs.call x6264 "push"
                                    [|(Ojs.float_to_js x6262)|]);
                               (match x6263 with
                                | Some x6265 ->
                                    ignore
                                      (Ojs.call x6264 "push"
                                         [|(Ojs.bool_to_js x6265)|])
                                | None -> ());
                               x6264))|])
    let (setInt32 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x6274 : 'tags this) ->
        fun ~byteOffset:(x6269 : float) ->
          fun ~value:(x6270 : float) ->
            fun ?littleEndian:(x6271 : bool option) ->
              fun () ->
                ignore
                  (let x6276 = this_to_js Obj.magic x6274 in
                   Ojs.call (Ojs.get_prop_ascii x6276 "setInt32") "apply"
                     [|x6276;((let x6272 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6272 "push"
                                    [|(Ojs.float_to_js x6269)|]);
                               ignore
                                 (Ojs.call x6272 "push"
                                    [|(Ojs.float_to_js x6270)|]);
                               (match x6271 with
                                | Some x6273 ->
                                    ignore
                                      (Ojs.call x6272 "push"
                                         [|(Ojs.bool_to_js x6273)|])
                                | None -> ());
                               x6272))|])
    let (setUint8 : 'tags this -> byteOffset:float -> value:float -> unit) =
      fun (x6279 : 'tags this) ->
        fun ~byteOffset:(x6277 : float) ->
          fun ~value:(x6278 : float) ->
            ignore
              (Ojs.call (this_to_js Obj.magic x6279) "setUint8"
                 [|(Ojs.float_to_js x6277);(Ojs.float_to_js x6278)|])
    let (setUint16 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x6286 : 'tags this) ->
        fun ~byteOffset:(x6281 : float) ->
          fun ~value:(x6282 : float) ->
            fun ?littleEndian:(x6283 : bool option) ->
              fun () ->
                ignore
                  (let x6288 = this_to_js Obj.magic x6286 in
                   Ojs.call (Ojs.get_prop_ascii x6288 "setUint16") "apply"
                     [|x6288;((let x6284 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6284 "push"
                                    [|(Ojs.float_to_js x6281)|]);
                               ignore
                                 (Ojs.call x6284 "push"
                                    [|(Ojs.float_to_js x6282)|]);
                               (match x6283 with
                                | Some x6285 ->
                                    ignore
                                      (Ojs.call x6284 "push"
                                         [|(Ojs.bool_to_js x6285)|])
                                | None -> ());
                               x6284))|])
    let (setUint32 :
      'tags this ->
        byteOffset:float -> value:float -> ?littleEndian:bool -> unit -> unit)
      =
      fun (x6294 : 'tags this) ->
        fun ~byteOffset:(x6289 : float) ->
          fun ~value:(x6290 : float) ->
            fun ?littleEndian:(x6291 : bool option) ->
              fun () ->
                ignore
                  (let x6296 = this_to_js Obj.magic x6294 in
                   Ojs.call (Ojs.get_prop_ascii x6296 "setUint32") "apply"
                     [|x6296;((let x6292 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6292 "push"
                                    [|(Ojs.float_to_js x6289)|]);
                               ignore
                                 (Ojs.call x6292 "push"
                                    [|(Ojs.float_to_js x6290)|]);
                               (match x6291 with
                                | Some x6293 ->
                                    ignore
                                      (Ojs.call x6292 "push"
                                         [|(Ojs.bool_to_js x6293)|])
                                | None -> ());
                               x6292))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "DataView")
             "prototype")
    let (create :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?byteLength:float -> unit -> t)
      =
      fun ~buffer:(x6297 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x6298 : float option) ->
          fun ?byteLength:(x6299 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "DataView")
                   (let x6300 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x6300 "push"
                         [|(ArrayBufferLike.t_to_js x6297)|]);
                    (match x6298 with
                     | Some x6302 ->
                         ignore
                           (Ojs.call x6300 "push" [|(Ojs.float_to_js x6302)|])
                     | None -> ());
                    (match x6299 with
                     | Some x6301 ->
                         ignore
                           (Ojs.call x6300 "push" [|(Ojs.float_to_js x6301)|])
                     | None -> ());
                    x6300))
    let cast_from = Obj.magic
  end
module ConstructorParameters =
  struct
    module AnonymousInterface8 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x6304 : Ojs.t) -> x6304
        and t_to_js : t -> Ojs.t = fun (x6303 : Ojs.t) -> x6303
        let (create : t -> args:any list -> any) =
          fun (x6308 : t) ->
            fun ~args:(x6305 : any list) ->
              any_of_js
                (Ojs.new_obj_arr (t_to_js x6308)
                   (let x6306 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    List.iter
                      (fun (x6307 : any) ->
                         ignore (Ojs.call x6306 "push" [|(any_to_js x6307)|]))
                      x6305;
                    x6306))
      end
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x6310 : Ojs.t) -> any_of_js x6310
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x6309 : any) -> any_to_js x6309
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x6313 : Ojs.t) -> t_of_js __T_of_js x6313
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x6311 : __T t) -> t_to_js __T_to_js x6311
  end
module ClassDecorator =
  struct
    type t = [ `ClassDecorator ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6316 : Ojs.t) -> t_of_js x6316
    and t_0_to_js : t_0 -> Ojs.t = fun (x6315 : t) -> t_to_js x6315
    type tags = [ `ClassDecorator ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ClassDecorator ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6319 : Ojs.t) -> intf_of_js __tags_of_js x6319
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6317 : __tags intf) -> intf_to_js __tags_to_js x6317
    let (apply :
      'tags this -> target:'TFunction -> ('TFunction, unit) union2) =
      fun (x6322 : 'tags this) ->
        fun ~target:(x6321 : 'TFunction) ->
          union2_of_js Obj.magic Ojs.unit_of_js
            (Ojs.apply (this_to_js Obj.magic x6322) [|(Obj.magic x6321)|])
    let cast_from = Obj.magic
  end
module Capitalize =
  struct
    type 'S t = Ojs.t
    let rec t_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t = fun (type __S) ->
      fun (__S_of_js : Ojs.t -> __S) -> fun (x6327 : Ojs.t) -> x6327
    and t_to_js : 'S . ('S -> Ojs.t) -> 'S t -> Ojs.t = fun (type __S) ->
      fun (__S_to_js : __S -> Ojs.t) -> fun (x6326 : Ojs.t) -> x6326
    type 'S t_1 = 'S t
    let rec t_1_of_js : 'S . (Ojs.t -> 'S) -> Ojs.t -> 'S t_1 = fun (type
      __S) ->
      fun (__S_of_js : Ojs.t -> __S) ->
        fun (x6330 : Ojs.t) -> t_of_js __S_of_js x6330
    and t_1_to_js : 'S . ('S -> Ojs.t) -> 'S t_1 -> Ojs.t = fun (type __S) ->
      fun (__S_to_js : __S -> Ojs.t) ->
        fun (x6328 : __S t) -> t_to_js __S_to_js x6328
  end
module ThisParameterType =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x6333 : Ojs.t) -> any_of_js x6333
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x6332 : any) -> any_to_js x6332
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x6336 : Ojs.t) -> t_of_js __T_of_js x6336
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x6334 : __T t) -> t_to_js __T_to_js x6334
  end
module OmitThisParameter =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x6339 : Ojs.t) -> any_of_js x6339
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x6338 : any) -> any_to_js x6338
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x6342 : Ojs.t) -> t_of_js __T_of_js x6342
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x6340 : __T t) -> t_to_js __T_to_js x6340
  end
module CallableFunction =
  struct
    type t = [ `CallableFunction  | `Function  | `Function ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6345 : Ojs.t) -> t_of_js x6345
    and t_0_to_js : t_0 -> Ojs.t = fun (x6344 : t) -> t_to_js x6344
    type tags = [ `CallableFunction  | `Function  | `Function ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `CallableFunction ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6348 : Ojs.t) -> intf_of_js __tags_of_js x6348
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6346 : __tags intf) -> intf_to_js __tags_to_js x6346
    let (apply_ : 'tags this -> this:('T -> 'R) -> thisArg:'T -> 'R) =
      fun (x6353 : 'tags this) ->
        fun ~this:(x6350 : 'T -> 'R) ->
          fun ~thisArg:(x6352 : 'T) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x6353) "apply"
                 [|(Ojs.fun_to_js 1
                      (fun (x6351 : Ojs.t) ->
                         Obj.magic (x6350 (Obj.magic x6351))));(Obj.magic
                                                                  x6352)|])
    let (apply_' :
      'tags this ->
        this:(this:'T -> args:any list -> 'R) -> thisArg:'T -> args:'A -> 'R)
      =
      fun (x6360 : 'tags this) ->
        fun ~this:(x6355 : this:'T -> args:any list -> 'R) ->
          fun ~thisArg:(x6358 : 'T) ->
            fun ~args:(x6359 : 'A) ->
              Obj.magic
                (Ojs.call (this_to_js Obj.magic x6360) "apply"
                   [|(Ojs.fun_to_js_args
                        (fun (x6356 : _) ->
                           Obj.magic
                             (x6355 ~this:(Obj.magic (Ojs.array_get x6356 0))
                                ~args:(Ojs.list_of_js_from any_of_js x6356 1))));(
                     Obj.magic x6358);(Obj.magic x6359)|])
    let (call :
      'tags this ->
        this:(this:'T -> args:any list -> 'R) ->
          thisArg:'T -> args:any list -> 'R)
      =
      fun (x6369 : 'tags this) ->
        fun ~this:(x6362 : this:'T -> args:any list -> 'R) ->
          fun ~thisArg:(x6363 : 'T) ->
            fun ~args:(x6364 : any list) ->
              Obj.magic
                (let x6371 = this_to_js Obj.magic x6369 in
                 Ojs.call (Ojs.get_prop_ascii x6371 "call") "apply"
                   [|x6371;((let x6365 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6365 "push"
                                  [|(Ojs.fun_to_js_args
                                       (fun (x6367 : _) ->
                                          Obj.magic
                                            (x6362
                                               ~this:(Obj.magic
                                                        (Ojs.array_get x6367
                                                           0))
                                               ~args:(Ojs.list_of_js_from
                                                        any_of_js x6367 1))))|]);
                             ignore
                               (Ojs.call x6365 "push" [|(Obj.magic x6363)|]);
                             List.iter
                               (fun (x6366 : any) ->
                                  ignore
                                    (Ojs.call x6365 "push"
                                       [|(any_to_js x6366)|])) x6364;
                             x6365))|])
    let (bind :
      'tags this ->
        this:'T -> thisArg:'T ThisParameterType.t -> 'T OmitThisParameter.t)
      =
      fun (x6375 : 'tags this) ->
        fun ~this:(x6372 : 'T) ->
          fun ~thisArg:(x6373 : 'T ThisParameterType.t) ->
            OmitThisParameter.t_of_js Obj.magic
              (Ojs.call (this_to_js Obj.magic x6375) "bind"
                 [|(Obj.magic x6372);(ThisParameterType.t_to_js Obj.magic
                                        x6373)|])
    let (bind' :
      'tags this ->
        this:(this:'T -> arg0:'A0 -> args:any list -> 'R) ->
          thisArg:'T -> arg0:'A0 -> any list -> 'R)
      =
      fun (x6383 : 'tags this) ->
        fun ~this:(x6378 : this:'T -> arg0:'A0 -> args:any list -> 'R) ->
          fun ~thisArg:(x6381 : 'T) ->
            fun ~arg0:(x6382 : 'A0) ->
              fun (x6385 : any list) ->
                Obj.magic
                  (Ojs.call
                     (Ojs.call (this_to_js Obj.magic x6383) "bind"
                        [|(Ojs.fun_to_js_args
                             (fun (x6379 : _) ->
                                Obj.magic
                                  (x6378
                                     ~this:(Obj.magic (Ojs.array_get x6379 0))
                                     ~arg0:(Obj.magic (Ojs.array_get x6379 1))
                                     ~args:(Ojs.list_of_js_from any_of_js
                                              x6379 2))));(Obj.magic x6381);(
                          Obj.magic x6382)|]) "apply"
                     [|Ojs.null;((let x6386 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  List.iter
                                    (fun (x6387 : any) ->
                                       ignore
                                         (Ojs.call x6386 "push"
                                            [|(any_to_js x6387)|])) x6385;
                                  x6386))|])
    let (bind'' :
      'tags this ->
        this:(this:'T -> arg0:'A0 -> arg1:'A1 -> args:any list -> 'R) ->
          thisArg:'T -> arg0:'A0 -> arg1:'A1 -> any list -> 'R)
      =
      fun (x6394 : 'tags this) ->
        fun
          ~this:(x6388 :
                  this:'T -> arg0:'A0 -> arg1:'A1 -> args:any list -> 'R)
          ->
          fun ~thisArg:(x6391 : 'T) ->
            fun ~arg0:(x6392 : 'A0) ->
              fun ~arg1:(x6393 : 'A1) ->
                fun (x6396 : any list) ->
                  Obj.magic
                    (Ojs.call
                       (Ojs.call (this_to_js Obj.magic x6394) "bind"
                          [|(Ojs.fun_to_js_args
                               (fun (x6389 : _) ->
                                  Obj.magic
                                    (x6388
                                       ~this:(Obj.magic
                                                (Ojs.array_get x6389 0))
                                       ~arg0:(Obj.magic
                                                (Ojs.array_get x6389 1))
                                       ~arg1:(Obj.magic
                                                (Ojs.array_get x6389 2))
                                       ~args:(Ojs.list_of_js_from any_of_js
                                                x6389 3))));(Obj.magic x6391);(
                            Obj.magic x6392);(Obj.magic x6393)|]) "apply"
                       [|Ojs.null;((let x6397 =
                                      Ojs.new_obj
                                        (Ojs.get_prop_ascii Ojs.global
                                           "Array") [||] in
                                    List.iter
                                      (fun (x6398 : any) ->
                                         ignore
                                           (Ojs.call x6397 "push"
                                              [|(any_to_js x6398)|])) x6396;
                                    x6397))|])
    let (bind''' :
      'tags this ->
        this:(this:'T ->
                arg0:'A0 -> arg1:'A1 -> arg2:'A2 -> args:any list -> 'R)
          -> thisArg:'T -> arg0:'A0 -> arg1:'A1 -> arg2:'A2 -> any list -> 'R)
      =
      fun (x6406 : 'tags this) ->
        fun
          ~this:(x6399 :
                  this:'T ->
                    arg0:'A0 -> arg1:'A1 -> arg2:'A2 -> args:any list -> 'R)
          ->
          fun ~thisArg:(x6402 : 'T) ->
            fun ~arg0:(x6403 : 'A0) ->
              fun ~arg1:(x6404 : 'A1) ->
                fun ~arg2:(x6405 : 'A2) ->
                  fun (x6408 : any list) ->
                    Obj.magic
                      (Ojs.call
                         (Ojs.call (this_to_js Obj.magic x6406) "bind"
                            [|(Ojs.fun_to_js_args
                                 (fun (x6400 : _) ->
                                    Obj.magic
                                      (x6399
                                         ~this:(Obj.magic
                                                  (Ojs.array_get x6400 0))
                                         ~arg0:(Obj.magic
                                                  (Ojs.array_get x6400 1))
                                         ~arg1:(Obj.magic
                                                  (Ojs.array_get x6400 2))
                                         ~arg2:(Obj.magic
                                                  (Ojs.array_get x6400 3))
                                         ~args:(Ojs.list_of_js_from any_of_js
                                                  x6400 4))));(Obj.magic
                                                                 x6402);(
                              Obj.magic x6403);(Obj.magic x6404);(Obj.magic
                                                                    x6405)|])
                         "apply"
                         [|Ojs.null;((let x6409 =
                                        Ojs.new_obj
                                          (Ojs.get_prop_ascii Ojs.global
                                             "Array") [||] in
                                      List.iter
                                        (fun (x6410 : any) ->
                                           ignore
                                             (Ojs.call x6409 "push"
                                                [|(any_to_js x6410)|])) x6408;
                                      x6409))|])
    let (bind'''' :
      'tags this ->
        this:(this:'T ->
                arg0:'A0 ->
                  arg1:'A1 -> arg2:'A2 -> arg3:'A3 -> args:any list -> 'R)
          ->
          thisArg:'T ->
            arg0:'A0 -> arg1:'A1 -> arg2:'A2 -> arg3:'A3 -> any list -> 'R)
      =
      fun (x6419 : 'tags this) ->
        fun
          ~this:(x6411 :
                  this:'T ->
                    arg0:'A0 ->
                      arg1:'A1 -> arg2:'A2 -> arg3:'A3 -> args:any list -> 'R)
          ->
          fun ~thisArg:(x6414 : 'T) ->
            fun ~arg0:(x6415 : 'A0) ->
              fun ~arg1:(x6416 : 'A1) ->
                fun ~arg2:(x6417 : 'A2) ->
                  fun ~arg3:(x6418 : 'A3) ->
                    fun (x6421 : any list) ->
                      Obj.magic
                        (Ojs.call
                           (Ojs.call (this_to_js Obj.magic x6419) "bind"
                              [|(Ojs.fun_to_js_args
                                   (fun (x6412 : _) ->
                                      Obj.magic
                                        (x6411
                                           ~this:(Obj.magic
                                                    (Ojs.array_get x6412 0))
                                           ~arg0:(Obj.magic
                                                    (Ojs.array_get x6412 1))
                                           ~arg1:(Obj.magic
                                                    (Ojs.array_get x6412 2))
                                           ~arg2:(Obj.magic
                                                    (Ojs.array_get x6412 3))
                                           ~arg3:(Obj.magic
                                                    (Ojs.array_get x6412 4))
                                           ~args:(Ojs.list_of_js_from
                                                    any_of_js x6412 5))));(
                                Obj.magic x6414);(Obj.magic x6415);(Obj.magic
                                                                    x6416);(
                                Obj.magic x6417);(Obj.magic x6418)|]) "apply"
                           [|Ojs.null;((let x6422 =
                                          Ojs.new_obj
                                            (Ojs.get_prop_ascii Ojs.global
                                               "Array") [||] in
                                        List.iter
                                          (fun (x6423 : any) ->
                                             ignore
                                               (Ojs.call x6422 "push"
                                                  [|(any_to_js x6423)|]))
                                          x6421;
                                        x6422))|])
    let (bind''''' :
      'tags this ->
        this:(this:'T -> args:'AX list -> 'R) ->
          thisArg:'T -> args:'AX list -> 'AX list -> 'R)
      =
      fun (x6431 : 'tags this) ->
        fun ~this:(x6424 : this:'T -> args:'AX list -> 'R) ->
          fun ~thisArg:(x6425 : 'T) ->
            fun ~args:(x6426 : 'AX list) ->
              fun (x6434 : 'AX list) ->
                Obj.magic
                  (Ojs.call
                     (let x6433 = this_to_js Obj.magic x6431 in
                      Ojs.call (Ojs.get_prop_ascii x6433 "bind") "apply"
                        [|x6433;((let x6427 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  ignore
                                    (Ojs.call x6427 "push"
                                       [|(Ojs.fun_to_js_args
                                            (fun (x6429 : _) ->
                                               Obj.magic
                                                 (x6424
                                                    ~this:(Obj.magic
                                                             (Ojs.array_get
                                                                x6429 0))
                                                    ~args:(Ojs.list_of_js_from
                                                             Obj.magic x6429
                                                             1))))|]);
                                  ignore
                                    (Ojs.call x6427 "push"
                                       [|(Obj.magic x6425)|]);
                                  List.iter
                                    (fun (x6428 : 'AX) ->
                                       ignore
                                         (Ojs.call x6427 "push"
                                            [|(Obj.magic x6428)|])) x6426;
                                  x6427))|]) "apply"
                     [|Ojs.null;((let x6435 =
                                    Ojs.new_obj
                                      (Ojs.get_prop_ascii Ojs.global "Array")
                                      [||] in
                                  List.iter
                                    (fun (x6436 : 'AX) ->
                                       ignore
                                         (Ojs.call x6435 "push"
                                            [|(Obj.magic x6436)|])) x6434;
                                  x6435))|])
    let cast_from = Obj.magic
  end
module Boolean =
  struct
    type t = [ `Boolean ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6438 : Ojs.t) -> t_of_js x6438
    and t_0_to_js : t_0 -> Ojs.t = fun (x6437 : t) -> t_to_js x6437
    type tags = [ `Boolean ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Boolean ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6441 : Ojs.t) -> intf_of_js __tags_of_js x6441
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6439 : __tags intf) -> intf_to_js __tags_to_js x6439
    let (valueOf : 'tags this -> bool) =
      fun (x6443 : 'tags this) ->
        Ojs.bool_of_js (Ojs.call (this_to_js Obj.magic x6443) "valueOf" [||])
    let (create : ?value:any -> unit -> t) =
      fun ?value:(x6445 : any option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Boolean")
               (let x6446 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x6445 with
                 | Some x6447 ->
                     ignore (Ojs.call x6446 "push" [|(any_to_js x6447)|])
                 | None -> ());
                x6446))
    let (invoke : ?value:'T -> unit -> bool) =
      fun ?value:(x6448 : 'T option) ->
        fun () ->
          Ojs.bool_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Boolean") "apply"
               [|Ojs.null;((let x6449 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x6448 with
                             | Some x6450 ->
                                 ignore
                                   (Ojs.call x6449 "push"
                                      [|(Obj.magic x6450)|])
                             | None -> ());
                            x6449))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Boolean")
             "prototype")
    let cast_from = Obj.magic
    let (of_ml : bool -> t) =
      fun (x6451 : bool) -> t_of_js (Ojs.bool_to_js x6451)
    let (to_ml : t -> bool) =
      fun (x6452 : t) ->
        Ojs.bool_of_js (Ojs.call (t_to_js x6452) "valueOf" [||])
  end
module BigIntToLocaleStringOptions =
  struct
    type t = [ `BigIntToLocaleStringOptions ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6454 : Ojs.t) -> t_of_js x6454
    and t_0_to_js : t_0 -> Ojs.t = fun (x6453 : t) -> t_to_js x6453
    type tags = [ `BigIntToLocaleStringOptions ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `BigIntToLocaleStringOptions ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6457 : Ojs.t) -> intf_of_js __tags_of_js x6457
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6455 : __tags intf) -> intf_to_js __tags_to_js x6455
    let (get_localeMatcher : 'tags this -> string) =
      fun (x6459 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6459) "localeMatcher")
    let (set_localeMatcher : 'tags this -> string -> unit) =
      fun (x6461 : 'tags this) ->
        fun (x6462 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6461) "localeMatcher"
            (Ojs.string_to_js x6462)
    let (get_style : 'tags this -> string) =
      fun (x6464 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6464) "style")
    let (set_style : 'tags this -> string -> unit) =
      fun (x6466 : 'tags this) ->
        fun (x6467 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6466) "style"
            (Ojs.string_to_js x6467)
    let (get_numberingSystem : 'tags this -> string) =
      fun (x6469 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6469) "numberingSystem")
    let (set_numberingSystem : 'tags this -> string -> unit) =
      fun (x6471 : 'tags this) ->
        fun (x6472 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6471) "numberingSystem"
            (Ojs.string_to_js x6472)
    let (get_unit : 'tags this -> string) =
      fun (x6474 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6474) "unit")
    let (set_unit : 'tags this -> string -> unit) =
      fun (x6476 : 'tags this) ->
        fun (x6477 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6476) "unit"
            (Ojs.string_to_js x6477)
    let (get_unitDisplay : 'tags this -> string) =
      fun (x6479 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6479) "unitDisplay")
    let (set_unitDisplay : 'tags this -> string -> unit) =
      fun (x6481 : 'tags this) ->
        fun (x6482 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6481) "unitDisplay"
            (Ojs.string_to_js x6482)
    let (get_currency : 'tags this -> string) =
      fun (x6484 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6484) "currency")
    let (set_currency : 'tags this -> string -> unit) =
      fun (x6486 : 'tags this) ->
        fun (x6487 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6486) "currency"
            (Ojs.string_to_js x6487)
    let (get_currencyDisplay : 'tags this -> string) =
      fun (x6489 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6489) "currencyDisplay")
    let (set_currencyDisplay : 'tags this -> string -> unit) =
      fun (x6491 : 'tags this) ->
        fun (x6492 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6491) "currencyDisplay"
            (Ojs.string_to_js x6492)
    let (get_useGrouping : 'tags this -> bool) =
      fun (x6494 : 'tags this) ->
        Ojs.bool_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6494) "useGrouping")
    let (set_useGrouping : 'tags this -> bool -> unit) =
      fun (x6496 : 'tags this) ->
        fun (x6497 : bool) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6496) "useGrouping"
            (Ojs.bool_to_js x6497)
    let (get_minimumIntegerDigits :
      'tags this ->
        [ `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13  | `L_n_14 
        | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19  | `L_n_2 
        | `L_n_20  | `L_n_21  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ])
      =
      fun (x6499 : 'tags this) ->
        let x6501 =
          Ojs.get_prop_ascii (this_to_js Obj.magic x6499)
            "minimumIntegerDigits" in
        match Ojs.int_of_js x6501 with
        | 1 -> `L_n_1
        | 10 -> `L_n_10
        | 11 -> `L_n_11
        | 12 -> `L_n_12
        | 13 -> `L_n_13
        | 14 -> `L_n_14
        | 15 -> `L_n_15
        | 16 -> `L_n_16
        | 17 -> `L_n_17
        | 18 -> `L_n_18
        | 19 -> `L_n_19
        | 2 -> `L_n_2
        | 20 -> `L_n_20
        | 21 -> `L_n_21
        | 3 -> `L_n_3
        | 4 -> `L_n_4
        | 5 -> `L_n_5
        | 6 -> `L_n_6
        | 7 -> `L_n_7
        | 8 -> `L_n_8
        | 9 -> `L_n_9
        | _ -> assert false
    let (set_minimumIntegerDigits :
      'tags this ->
        [ `U1 of [ `L_n_1 ]  | `U2 of [ `L_n_2 ]  | `U3 of [ `L_n_3 ] 
        | `U4 of [ `L_n_4 ]  | `U5 of [ `L_n_5 ]  | `U6 of [ `L_n_6 ] 
        | `U7 of [ `L_n_7 ]  | `U8 of [ `L_n_8 ]  | `U9 of [ `L_n_9 ] 
        | `U10 of [ `L_n_10 ]  | `U11 of [ `L_n_11 ]  | `U12 of [ `L_n_12 ] 
        | `U13 of [ `L_n_13 ]  | `U14 of [ `L_n_14 ]  | `U15 of [ `L_n_15 ] 
        | `U16 of [ `L_n_16 ]  | `U17 of [ `L_n_17 ]  | `U18 of [ `L_n_18 ] 
        | `U19 of [ `L_n_19 ]  | `U20 of [ `L_n_20 ]  | `U21 of [ `L_n_21 ] ]
          -> unit)
      =
      fun (x6502 : 'tags this) ->
        fun
          (x6503 :
            [ `U1 of [ `L_n_1 ]  | `U2 of [ `L_n_2 ]  | `U3 of [ `L_n_3 ] 
            | `U4 of [ `L_n_4 ]  | `U5 of [ `L_n_5 ]  | `U6 of [ `L_n_6 ] 
            | `U7 of [ `L_n_7 ]  | `U8 of [ `L_n_8 ]  | `U9 of [ `L_n_9 ] 
            | `U10 of [ `L_n_10 ]  | `U11 of [ `L_n_11 ] 
            | `U12 of [ `L_n_12 ]  | `U13 of [ `L_n_13 ] 
            | `U14 of [ `L_n_14 ]  | `U15 of [ `L_n_15 ] 
            | `U16 of [ `L_n_16 ]  | `U17 of [ `L_n_17 ] 
            | `U18 of [ `L_n_18 ]  | `U19 of [ `L_n_19 ] 
            | `U20 of [ `L_n_20 ]  | `U21 of [ `L_n_21 ] ])
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6502)
            "minimumIntegerDigits"
            (match x6503 with
             | `U1 x6504 -> (match x6504 with | `L_n_1 -> Ojs.int_to_js 1)
             | `U2 x6505 -> (match x6505 with | `L_n_2 -> Ojs.int_to_js 2)
             | `U3 x6506 -> (match x6506 with | `L_n_3 -> Ojs.int_to_js 3)
             | `U4 x6507 -> (match x6507 with | `L_n_4 -> Ojs.int_to_js 4)
             | `U5 x6508 -> (match x6508 with | `L_n_5 -> Ojs.int_to_js 5)
             | `U6 x6509 -> (match x6509 with | `L_n_6 -> Ojs.int_to_js 6)
             | `U7 x6510 -> (match x6510 with | `L_n_7 -> Ojs.int_to_js 7)
             | `U8 x6511 -> (match x6511 with | `L_n_8 -> Ojs.int_to_js 8)
             | `U9 x6512 -> (match x6512 with | `L_n_9 -> Ojs.int_to_js 9)
             | `U10 x6513 -> (match x6513 with | `L_n_10 -> Ojs.int_to_js 10)
             | `U11 x6514 -> (match x6514 with | `L_n_11 -> Ojs.int_to_js 11)
             | `U12 x6515 -> (match x6515 with | `L_n_12 -> Ojs.int_to_js 12)
             | `U13 x6516 -> (match x6516 with | `L_n_13 -> Ojs.int_to_js 13)
             | `U14 x6517 -> (match x6517 with | `L_n_14 -> Ojs.int_to_js 14)
             | `U15 x6518 -> (match x6518 with | `L_n_15 -> Ojs.int_to_js 15)
             | `U16 x6519 -> (match x6519 with | `L_n_16 -> Ojs.int_to_js 16)
             | `U17 x6520 -> (match x6520 with | `L_n_17 -> Ojs.int_to_js 17)
             | `U18 x6521 -> (match x6521 with | `L_n_18 -> Ojs.int_to_js 18)
             | `U19 x6522 -> (match x6522 with | `L_n_19 -> Ojs.int_to_js 19)
             | `U20 x6523 -> (match x6523 with | `L_n_20 -> Ojs.int_to_js 20)
             | `U21 x6524 -> (match x6524 with | `L_n_21 -> Ojs.int_to_js 21))
    let (get_minimumFractionDigits :
      'tags this ->
        [ `L_n_0  | `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13 
        | `L_n_14  | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19 
        | `L_n_2  | `L_n_20  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ])
      =
      fun (x6526 : 'tags this) ->
        let x6528 =
          Ojs.get_prop_ascii (this_to_js Obj.magic x6526)
            "minimumFractionDigits" in
        match Ojs.int_of_js x6528 with
        | 0 -> `L_n_0
        | 1 -> `L_n_1
        | 10 -> `L_n_10
        | 11 -> `L_n_11
        | 12 -> `L_n_12
        | 13 -> `L_n_13
        | 14 -> `L_n_14
        | 15 -> `L_n_15
        | 16 -> `L_n_16
        | 17 -> `L_n_17
        | 18 -> `L_n_18
        | 19 -> `L_n_19
        | 2 -> `L_n_2
        | 20 -> `L_n_20
        | 3 -> `L_n_3
        | 4 -> `L_n_4
        | 5 -> `L_n_5
        | 6 -> `L_n_6
        | 7 -> `L_n_7
        | 8 -> `L_n_8
        | 9 -> `L_n_9
        | _ -> assert false
    let (set_minimumFractionDigits :
      'tags this ->
        [ `U1 of [ `L_n_0 ]  | `U2 of [ `L_n_1 ]  | `U3 of [ `L_n_2 ] 
        | `U4 of [ `L_n_3 ]  | `U5 of [ `L_n_4 ]  | `U6 of [ `L_n_5 ] 
        | `U7 of [ `L_n_6 ]  | `U8 of [ `L_n_7 ]  | `U9 of [ `L_n_8 ] 
        | `U10 of [ `L_n_9 ]  | `U11 of [ `L_n_10 ]  | `U12 of [ `L_n_11 ] 
        | `U13 of [ `L_n_12 ]  | `U14 of [ `L_n_13 ]  | `U15 of [ `L_n_14 ] 
        | `U16 of [ `L_n_15 ]  | `U17 of [ `L_n_16 ]  | `U18 of [ `L_n_17 ] 
        | `U19 of [ `L_n_18 ]  | `U20 of [ `L_n_19 ]  | `U21 of [ `L_n_20 ] ]
          -> unit)
      =
      fun (x6529 : 'tags this) ->
        fun
          (x6530 :
            [ `U1 of [ `L_n_0 ]  | `U2 of [ `L_n_1 ]  | `U3 of [ `L_n_2 ] 
            | `U4 of [ `L_n_3 ]  | `U5 of [ `L_n_4 ]  | `U6 of [ `L_n_5 ] 
            | `U7 of [ `L_n_6 ]  | `U8 of [ `L_n_7 ]  | `U9 of [ `L_n_8 ] 
            | `U10 of [ `L_n_9 ]  | `U11 of [ `L_n_10 ] 
            | `U12 of [ `L_n_11 ]  | `U13 of [ `L_n_12 ] 
            | `U14 of [ `L_n_13 ]  | `U15 of [ `L_n_14 ] 
            | `U16 of [ `L_n_15 ]  | `U17 of [ `L_n_16 ] 
            | `U18 of [ `L_n_17 ]  | `U19 of [ `L_n_18 ] 
            | `U20 of [ `L_n_19 ]  | `U21 of [ `L_n_20 ] ])
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6529)
            "minimumFractionDigits"
            (match x6530 with
             | `U1 x6531 -> (match x6531 with | `L_n_0 -> Ojs.int_to_js 0)
             | `U2 x6532 -> (match x6532 with | `L_n_1 -> Ojs.int_to_js 1)
             | `U3 x6533 -> (match x6533 with | `L_n_2 -> Ojs.int_to_js 2)
             | `U4 x6534 -> (match x6534 with | `L_n_3 -> Ojs.int_to_js 3)
             | `U5 x6535 -> (match x6535 with | `L_n_4 -> Ojs.int_to_js 4)
             | `U6 x6536 -> (match x6536 with | `L_n_5 -> Ojs.int_to_js 5)
             | `U7 x6537 -> (match x6537 with | `L_n_6 -> Ojs.int_to_js 6)
             | `U8 x6538 -> (match x6538 with | `L_n_7 -> Ojs.int_to_js 7)
             | `U9 x6539 -> (match x6539 with | `L_n_8 -> Ojs.int_to_js 8)
             | `U10 x6540 -> (match x6540 with | `L_n_9 -> Ojs.int_to_js 9)
             | `U11 x6541 -> (match x6541 with | `L_n_10 -> Ojs.int_to_js 10)
             | `U12 x6542 -> (match x6542 with | `L_n_11 -> Ojs.int_to_js 11)
             | `U13 x6543 -> (match x6543 with | `L_n_12 -> Ojs.int_to_js 12)
             | `U14 x6544 -> (match x6544 with | `L_n_13 -> Ojs.int_to_js 13)
             | `U15 x6545 -> (match x6545 with | `L_n_14 -> Ojs.int_to_js 14)
             | `U16 x6546 -> (match x6546 with | `L_n_15 -> Ojs.int_to_js 15)
             | `U17 x6547 -> (match x6547 with | `L_n_16 -> Ojs.int_to_js 16)
             | `U18 x6548 -> (match x6548 with | `L_n_17 -> Ojs.int_to_js 17)
             | `U19 x6549 -> (match x6549 with | `L_n_18 -> Ojs.int_to_js 18)
             | `U20 x6550 -> (match x6550 with | `L_n_19 -> Ojs.int_to_js 19)
             | `U21 x6551 -> (match x6551 with | `L_n_20 -> Ojs.int_to_js 20))
    let (get_maximumFractionDigits :
      'tags this ->
        [ `L_n_0  | `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13 
        | `L_n_14  | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19 
        | `L_n_2  | `L_n_20  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ])
      =
      fun (x6553 : 'tags this) ->
        let x6555 =
          Ojs.get_prop_ascii (this_to_js Obj.magic x6553)
            "maximumFractionDigits" in
        match Ojs.int_of_js x6555 with
        | 0 -> `L_n_0
        | 1 -> `L_n_1
        | 10 -> `L_n_10
        | 11 -> `L_n_11
        | 12 -> `L_n_12
        | 13 -> `L_n_13
        | 14 -> `L_n_14
        | 15 -> `L_n_15
        | 16 -> `L_n_16
        | 17 -> `L_n_17
        | 18 -> `L_n_18
        | 19 -> `L_n_19
        | 2 -> `L_n_2
        | 20 -> `L_n_20
        | 3 -> `L_n_3
        | 4 -> `L_n_4
        | 5 -> `L_n_5
        | 6 -> `L_n_6
        | 7 -> `L_n_7
        | 8 -> `L_n_8
        | 9 -> `L_n_9
        | _ -> assert false
    let (set_maximumFractionDigits :
      'tags this ->
        [ `U1 of [ `L_n_0 ]  | `U2 of [ `L_n_1 ]  | `U3 of [ `L_n_2 ] 
        | `U4 of [ `L_n_3 ]  | `U5 of [ `L_n_4 ]  | `U6 of [ `L_n_5 ] 
        | `U7 of [ `L_n_6 ]  | `U8 of [ `L_n_7 ]  | `U9 of [ `L_n_8 ] 
        | `U10 of [ `L_n_9 ]  | `U11 of [ `L_n_10 ]  | `U12 of [ `L_n_11 ] 
        | `U13 of [ `L_n_12 ]  | `U14 of [ `L_n_13 ]  | `U15 of [ `L_n_14 ] 
        | `U16 of [ `L_n_15 ]  | `U17 of [ `L_n_16 ]  | `U18 of [ `L_n_17 ] 
        | `U19 of [ `L_n_18 ]  | `U20 of [ `L_n_19 ]  | `U21 of [ `L_n_20 ] ]
          -> unit)
      =
      fun (x6556 : 'tags this) ->
        fun
          (x6557 :
            [ `U1 of [ `L_n_0 ]  | `U2 of [ `L_n_1 ]  | `U3 of [ `L_n_2 ] 
            | `U4 of [ `L_n_3 ]  | `U5 of [ `L_n_4 ]  | `U6 of [ `L_n_5 ] 
            | `U7 of [ `L_n_6 ]  | `U8 of [ `L_n_7 ]  | `U9 of [ `L_n_8 ] 
            | `U10 of [ `L_n_9 ]  | `U11 of [ `L_n_10 ] 
            | `U12 of [ `L_n_11 ]  | `U13 of [ `L_n_12 ] 
            | `U14 of [ `L_n_13 ]  | `U15 of [ `L_n_14 ] 
            | `U16 of [ `L_n_15 ]  | `U17 of [ `L_n_16 ] 
            | `U18 of [ `L_n_17 ]  | `U19 of [ `L_n_18 ] 
            | `U20 of [ `L_n_19 ]  | `U21 of [ `L_n_20 ] ])
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6556)
            "maximumFractionDigits"
            (match x6557 with
             | `U1 x6558 -> (match x6558 with | `L_n_0 -> Ojs.int_to_js 0)
             | `U2 x6559 -> (match x6559 with | `L_n_1 -> Ojs.int_to_js 1)
             | `U3 x6560 -> (match x6560 with | `L_n_2 -> Ojs.int_to_js 2)
             | `U4 x6561 -> (match x6561 with | `L_n_3 -> Ojs.int_to_js 3)
             | `U5 x6562 -> (match x6562 with | `L_n_4 -> Ojs.int_to_js 4)
             | `U6 x6563 -> (match x6563 with | `L_n_5 -> Ojs.int_to_js 5)
             | `U7 x6564 -> (match x6564 with | `L_n_6 -> Ojs.int_to_js 6)
             | `U8 x6565 -> (match x6565 with | `L_n_7 -> Ojs.int_to_js 7)
             | `U9 x6566 -> (match x6566 with | `L_n_8 -> Ojs.int_to_js 8)
             | `U10 x6567 -> (match x6567 with | `L_n_9 -> Ojs.int_to_js 9)
             | `U11 x6568 -> (match x6568 with | `L_n_10 -> Ojs.int_to_js 10)
             | `U12 x6569 -> (match x6569 with | `L_n_11 -> Ojs.int_to_js 11)
             | `U13 x6570 -> (match x6570 with | `L_n_12 -> Ojs.int_to_js 12)
             | `U14 x6571 -> (match x6571 with | `L_n_13 -> Ojs.int_to_js 13)
             | `U15 x6572 -> (match x6572 with | `L_n_14 -> Ojs.int_to_js 14)
             | `U16 x6573 -> (match x6573 with | `L_n_15 -> Ojs.int_to_js 15)
             | `U17 x6574 -> (match x6574 with | `L_n_16 -> Ojs.int_to_js 16)
             | `U18 x6575 -> (match x6575 with | `L_n_17 -> Ojs.int_to_js 17)
             | `U19 x6576 -> (match x6576 with | `L_n_18 -> Ojs.int_to_js 18)
             | `U20 x6577 -> (match x6577 with | `L_n_19 -> Ojs.int_to_js 19)
             | `U21 x6578 -> (match x6578 with | `L_n_20 -> Ojs.int_to_js 20))
    let (get_minimumSignificantDigits :
      'tags this ->
        [ `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13  | `L_n_14 
        | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19  | `L_n_2 
        | `L_n_20  | `L_n_21  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ])
      =
      fun (x6580 : 'tags this) ->
        let x6582 =
          Ojs.get_prop_ascii (this_to_js Obj.magic x6580)
            "minimumSignificantDigits" in
        match Ojs.int_of_js x6582 with
        | 1 -> `L_n_1
        | 10 -> `L_n_10
        | 11 -> `L_n_11
        | 12 -> `L_n_12
        | 13 -> `L_n_13
        | 14 -> `L_n_14
        | 15 -> `L_n_15
        | 16 -> `L_n_16
        | 17 -> `L_n_17
        | 18 -> `L_n_18
        | 19 -> `L_n_19
        | 2 -> `L_n_2
        | 20 -> `L_n_20
        | 21 -> `L_n_21
        | 3 -> `L_n_3
        | 4 -> `L_n_4
        | 5 -> `L_n_5
        | 6 -> `L_n_6
        | 7 -> `L_n_7
        | 8 -> `L_n_8
        | 9 -> `L_n_9
        | _ -> assert false
    let (set_minimumSignificantDigits :
      'tags this ->
        [ `U1 of [ `L_n_1 ]  | `U2 of [ `L_n_2 ]  | `U3 of [ `L_n_3 ] 
        | `U4 of [ `L_n_4 ]  | `U5 of [ `L_n_5 ]  | `U6 of [ `L_n_6 ] 
        | `U7 of [ `L_n_7 ]  | `U8 of [ `L_n_8 ]  | `U9 of [ `L_n_9 ] 
        | `U10 of [ `L_n_10 ]  | `U11 of [ `L_n_11 ]  | `U12 of [ `L_n_12 ] 
        | `U13 of [ `L_n_13 ]  | `U14 of [ `L_n_14 ]  | `U15 of [ `L_n_15 ] 
        | `U16 of [ `L_n_16 ]  | `U17 of [ `L_n_17 ]  | `U18 of [ `L_n_18 ] 
        | `U19 of [ `L_n_19 ]  | `U20 of [ `L_n_20 ]  | `U21 of [ `L_n_21 ] ]
          -> unit)
      =
      fun (x6583 : 'tags this) ->
        fun
          (x6584 :
            [ `U1 of [ `L_n_1 ]  | `U2 of [ `L_n_2 ]  | `U3 of [ `L_n_3 ] 
            | `U4 of [ `L_n_4 ]  | `U5 of [ `L_n_5 ]  | `U6 of [ `L_n_6 ] 
            | `U7 of [ `L_n_7 ]  | `U8 of [ `L_n_8 ]  | `U9 of [ `L_n_9 ] 
            | `U10 of [ `L_n_10 ]  | `U11 of [ `L_n_11 ] 
            | `U12 of [ `L_n_12 ]  | `U13 of [ `L_n_13 ] 
            | `U14 of [ `L_n_14 ]  | `U15 of [ `L_n_15 ] 
            | `U16 of [ `L_n_16 ]  | `U17 of [ `L_n_17 ] 
            | `U18 of [ `L_n_18 ]  | `U19 of [ `L_n_19 ] 
            | `U20 of [ `L_n_20 ]  | `U21 of [ `L_n_21 ] ])
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6583)
            "minimumSignificantDigits"
            (match x6584 with
             | `U1 x6585 -> (match x6585 with | `L_n_1 -> Ojs.int_to_js 1)
             | `U2 x6586 -> (match x6586 with | `L_n_2 -> Ojs.int_to_js 2)
             | `U3 x6587 -> (match x6587 with | `L_n_3 -> Ojs.int_to_js 3)
             | `U4 x6588 -> (match x6588 with | `L_n_4 -> Ojs.int_to_js 4)
             | `U5 x6589 -> (match x6589 with | `L_n_5 -> Ojs.int_to_js 5)
             | `U6 x6590 -> (match x6590 with | `L_n_6 -> Ojs.int_to_js 6)
             | `U7 x6591 -> (match x6591 with | `L_n_7 -> Ojs.int_to_js 7)
             | `U8 x6592 -> (match x6592 with | `L_n_8 -> Ojs.int_to_js 8)
             | `U9 x6593 -> (match x6593 with | `L_n_9 -> Ojs.int_to_js 9)
             | `U10 x6594 -> (match x6594 with | `L_n_10 -> Ojs.int_to_js 10)
             | `U11 x6595 -> (match x6595 with | `L_n_11 -> Ojs.int_to_js 11)
             | `U12 x6596 -> (match x6596 with | `L_n_12 -> Ojs.int_to_js 12)
             | `U13 x6597 -> (match x6597 with | `L_n_13 -> Ojs.int_to_js 13)
             | `U14 x6598 -> (match x6598 with | `L_n_14 -> Ojs.int_to_js 14)
             | `U15 x6599 -> (match x6599 with | `L_n_15 -> Ojs.int_to_js 15)
             | `U16 x6600 -> (match x6600 with | `L_n_16 -> Ojs.int_to_js 16)
             | `U17 x6601 -> (match x6601 with | `L_n_17 -> Ojs.int_to_js 17)
             | `U18 x6602 -> (match x6602 with | `L_n_18 -> Ojs.int_to_js 18)
             | `U19 x6603 -> (match x6603 with | `L_n_19 -> Ojs.int_to_js 19)
             | `U20 x6604 -> (match x6604 with | `L_n_20 -> Ojs.int_to_js 20)
             | `U21 x6605 -> (match x6605 with | `L_n_21 -> Ojs.int_to_js 21))
    let (get_maximumSignificantDigits :
      'tags this ->
        [ `L_n_1  | `L_n_10  | `L_n_11  | `L_n_12  | `L_n_13  | `L_n_14 
        | `L_n_15  | `L_n_16  | `L_n_17  | `L_n_18  | `L_n_19  | `L_n_2 
        | `L_n_20  | `L_n_21  | `L_n_3  | `L_n_4  | `L_n_5  | `L_n_6 
        | `L_n_7  | `L_n_8  | `L_n_9 ])
      =
      fun (x6607 : 'tags this) ->
        let x6609 =
          Ojs.get_prop_ascii (this_to_js Obj.magic x6607)
            "maximumSignificantDigits" in
        match Ojs.int_of_js x6609 with
        | 1 -> `L_n_1
        | 10 -> `L_n_10
        | 11 -> `L_n_11
        | 12 -> `L_n_12
        | 13 -> `L_n_13
        | 14 -> `L_n_14
        | 15 -> `L_n_15
        | 16 -> `L_n_16
        | 17 -> `L_n_17
        | 18 -> `L_n_18
        | 19 -> `L_n_19
        | 2 -> `L_n_2
        | 20 -> `L_n_20
        | 21 -> `L_n_21
        | 3 -> `L_n_3
        | 4 -> `L_n_4
        | 5 -> `L_n_5
        | 6 -> `L_n_6
        | 7 -> `L_n_7
        | 8 -> `L_n_8
        | 9 -> `L_n_9
        | _ -> assert false
    let (set_maximumSignificantDigits :
      'tags this ->
        [ `U1 of [ `L_n_1 ]  | `U2 of [ `L_n_2 ]  | `U3 of [ `L_n_3 ] 
        | `U4 of [ `L_n_4 ]  | `U5 of [ `L_n_5 ]  | `U6 of [ `L_n_6 ] 
        | `U7 of [ `L_n_7 ]  | `U8 of [ `L_n_8 ]  | `U9 of [ `L_n_9 ] 
        | `U10 of [ `L_n_10 ]  | `U11 of [ `L_n_11 ]  | `U12 of [ `L_n_12 ] 
        | `U13 of [ `L_n_13 ]  | `U14 of [ `L_n_14 ]  | `U15 of [ `L_n_15 ] 
        | `U16 of [ `L_n_16 ]  | `U17 of [ `L_n_17 ]  | `U18 of [ `L_n_18 ] 
        | `U19 of [ `L_n_19 ]  | `U20 of [ `L_n_20 ]  | `U21 of [ `L_n_21 ] ]
          -> unit)
      =
      fun (x6610 : 'tags this) ->
        fun
          (x6611 :
            [ `U1 of [ `L_n_1 ]  | `U2 of [ `L_n_2 ]  | `U3 of [ `L_n_3 ] 
            | `U4 of [ `L_n_4 ]  | `U5 of [ `L_n_5 ]  | `U6 of [ `L_n_6 ] 
            | `U7 of [ `L_n_7 ]  | `U8 of [ `L_n_8 ]  | `U9 of [ `L_n_9 ] 
            | `U10 of [ `L_n_10 ]  | `U11 of [ `L_n_11 ] 
            | `U12 of [ `L_n_12 ]  | `U13 of [ `L_n_13 ] 
            | `U14 of [ `L_n_14 ]  | `U15 of [ `L_n_15 ] 
            | `U16 of [ `L_n_16 ]  | `U17 of [ `L_n_17 ] 
            | `U18 of [ `L_n_18 ]  | `U19 of [ `L_n_19 ] 
            | `U20 of [ `L_n_20 ]  | `U21 of [ `L_n_21 ] ])
          ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6610)
            "maximumSignificantDigits"
            (match x6611 with
             | `U1 x6612 -> (match x6612 with | `L_n_1 -> Ojs.int_to_js 1)
             | `U2 x6613 -> (match x6613 with | `L_n_2 -> Ojs.int_to_js 2)
             | `U3 x6614 -> (match x6614 with | `L_n_3 -> Ojs.int_to_js 3)
             | `U4 x6615 -> (match x6615 with | `L_n_4 -> Ojs.int_to_js 4)
             | `U5 x6616 -> (match x6616 with | `L_n_5 -> Ojs.int_to_js 5)
             | `U6 x6617 -> (match x6617 with | `L_n_6 -> Ojs.int_to_js 6)
             | `U7 x6618 -> (match x6618 with | `L_n_7 -> Ojs.int_to_js 7)
             | `U8 x6619 -> (match x6619 with | `L_n_8 -> Ojs.int_to_js 8)
             | `U9 x6620 -> (match x6620 with | `L_n_9 -> Ojs.int_to_js 9)
             | `U10 x6621 -> (match x6621 with | `L_n_10 -> Ojs.int_to_js 10)
             | `U11 x6622 -> (match x6622 with | `L_n_11 -> Ojs.int_to_js 11)
             | `U12 x6623 -> (match x6623 with | `L_n_12 -> Ojs.int_to_js 12)
             | `U13 x6624 -> (match x6624 with | `L_n_13 -> Ojs.int_to_js 13)
             | `U14 x6625 -> (match x6625 with | `L_n_14 -> Ojs.int_to_js 14)
             | `U15 x6626 -> (match x6626 with | `L_n_15 -> Ojs.int_to_js 15)
             | `U16 x6627 -> (match x6627 with | `L_n_16 -> Ojs.int_to_js 16)
             | `U17 x6628 -> (match x6628 with | `L_n_17 -> Ojs.int_to_js 17)
             | `U18 x6629 -> (match x6629 with | `L_n_18 -> Ojs.int_to_js 18)
             | `U19 x6630 -> (match x6630 with | `L_n_19 -> Ojs.int_to_js 19)
             | `U20 x6631 -> (match x6631 with | `L_n_20 -> Ojs.int_to_js 20)
             | `U21 x6632 -> (match x6632 with | `L_n_21 -> Ojs.int_to_js 21))
    let (get_notation : 'tags this -> string) =
      fun (x6634 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6634) "notation")
    let (set_notation : 'tags this -> string -> unit) =
      fun (x6636 : 'tags this) ->
        fun (x6637 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6636) "notation"
            (Ojs.string_to_js x6637)
    let (get_compactDisplay : 'tags this -> string) =
      fun (x6639 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6639) "compactDisplay")
    let (set_compactDisplay : 'tags this -> string -> unit) =
      fun (x6641 : 'tags this) ->
        fun (x6642 : string) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x6641) "compactDisplay"
            (Ojs.string_to_js x6642)
    let (create :
      localeMatcher:string ->
        style:string ->
          numberingSystem:string ->
            unit:string ->
              unitDisplay:string ->
                currency:string ->
                  currencyDisplay:string ->
                    useGrouping:bool ->
                      minimumIntegerDigits:[ `L_n_1  | `L_n_10  | `L_n_11 
                                           | `L_n_12  | `L_n_13  | `L_n_14 
                                           | `L_n_15  | `L_n_16  | `L_n_17 
                                           | `L_n_18  | `L_n_19  | `L_n_2 
                                           | `L_n_20  | `L_n_21  | `L_n_3 
                                           | `L_n_4  | `L_n_5  | `L_n_6 
                                           | `L_n_7  | `L_n_8  | `L_n_9 ]
                        ->
                        minimumFractionDigits:[ `L_n_0  | `L_n_1  | `L_n_10 
                                              | `L_n_11  | `L_n_12 
                                              | `L_n_13  | `L_n_14 
                                              | `L_n_15  | `L_n_16 
                                              | `L_n_17  | `L_n_18 
                                              | `L_n_19  | `L_n_2  | 
                                                `L_n_20 
                                              | `L_n_3  | `L_n_4  | `L_n_5 
                                              | `L_n_6  | `L_n_7  | `L_n_8 
                                              | `L_n_9 ]
                          ->
                          maximumFractionDigits:[ `L_n_0  | `L_n_1 
                                                | `L_n_10  | `L_n_11 
                                                | `L_n_12  | `L_n_13 
                                                | `L_n_14  | `L_n_15 
                                                | `L_n_16  | `L_n_17 
                                                | `L_n_18  | `L_n_19 
                                                | `L_n_2  | `L_n_20 
                                                | `L_n_3  | `L_n_4  | 
                                                  `L_n_5 
                                                | `L_n_6  | `L_n_7  | 
                                                  `L_n_8 
                                                | `L_n_9 ]
                            ->
                            minimumSignificantDigits:[ `L_n_1  | `L_n_10 
                                                     | `L_n_11  | `L_n_12 
                                                     | `L_n_13  | `L_n_14 
                                                     | `L_n_15  | `L_n_16 
                                                     | `L_n_17  | `L_n_18 
                                                     | `L_n_19  | `L_n_2 
                                                     | `L_n_20  | `L_n_21 
                                                     | `L_n_3  | `L_n_4 
                                                     | `L_n_5  | `L_n_6 
                                                     | `L_n_7  | `L_n_8 
                                                     | `L_n_9 ]
                              ->
                              maximumSignificantDigits:[ `L_n_1  | `L_n_10 
                                                       | `L_n_11  | `L_n_12 
                                                       | `L_n_13  | `L_n_14 
                                                       | `L_n_15  | `L_n_16 
                                                       | `L_n_17  | `L_n_18 
                                                       | `L_n_19  | `L_n_2 
                                                       | `L_n_20  | `L_n_21 
                                                       | `L_n_3  | `L_n_4 
                                                       | `L_n_5  | `L_n_6 
                                                       | `L_n_7  | `L_n_8 
                                                       | `L_n_9 ]
                                ->
                                notation:string ->
                                  compactDisplay:string -> unit -> t)
      =
      fun ~localeMatcher:(x6644 : string) ->
        fun ~style:(x6645 : string) ->
          fun ~numberingSystem:(x6646 : string) ->
            fun ~unit:(x6647 : string) ->
              fun ~unitDisplay:(x6648 : string) ->
                fun ~currency:(x6649 : string) ->
                  fun ~currencyDisplay:(x6650 : string) ->
                    fun ~useGrouping:(x6651 : bool) ->
                      fun
                        ~minimumIntegerDigits:(x6652 :
                                                [ `L_n_1  | `L_n_10 
                                                | `L_n_11  | `L_n_12 
                                                | `L_n_13  | `L_n_14 
                                                | `L_n_15  | `L_n_16 
                                                | `L_n_17  | `L_n_18 
                                                | `L_n_19  | `L_n_2 
                                                | `L_n_20  | `L_n_21 
                                                | `L_n_3  | `L_n_4  | 
                                                  `L_n_5 
                                                | `L_n_6  | `L_n_7  | 
                                                  `L_n_8 
                                                | `L_n_9 ])
                        ->
                        fun
                          ~minimumFractionDigits:(x6653 :
                                                   [ `L_n_0  | `L_n_1 
                                                   | `L_n_10  | `L_n_11 
                                                   | `L_n_12  | `L_n_13 
                                                   | `L_n_14  | `L_n_15 
                                                   | `L_n_16  | `L_n_17 
                                                   | `L_n_18  | `L_n_19 
                                                   | `L_n_2  | `L_n_20 
                                                   | `L_n_3  | `L_n_4 
                                                   | `L_n_5  | `L_n_6 
                                                   | `L_n_7  | `L_n_8 
                                                   | `L_n_9 ])
                          ->
                          fun
                            ~maximumFractionDigits:(x6654 :
                                                     [ `L_n_0  | `L_n_1 
                                                     | `L_n_10  | `L_n_11 
                                                     | `L_n_12  | `L_n_13 
                                                     | `L_n_14  | `L_n_15 
                                                     | `L_n_16  | `L_n_17 
                                                     | `L_n_18  | `L_n_19 
                                                     | `L_n_2  | `L_n_20 
                                                     | `L_n_3  | `L_n_4 
                                                     | `L_n_5  | `L_n_6 
                                                     | `L_n_7  | `L_n_8 
                                                     | `L_n_9 ])
                            ->
                            fun
                              ~minimumSignificantDigits:(x6655 :
                                                          [ `L_n_1 
                                                          | `L_n_10 
                                                          | `L_n_11 
                                                          | `L_n_12 
                                                          | `L_n_13 
                                                          | `L_n_14 
                                                          | `L_n_15 
                                                          | `L_n_16 
                                                          | `L_n_17 
                                                          | `L_n_18 
                                                          | `L_n_19 
                                                          | `L_n_2 
                                                          | `L_n_20 
                                                          | `L_n_21 
                                                          | `L_n_3  | 
                                                            `L_n_4 
                                                          | `L_n_5  | 
                                                            `L_n_6 
                                                          | `L_n_7  | 
                                                            `L_n_8 
                                                          | `L_n_9 ])
                              ->
                              fun
                                ~maximumSignificantDigits:(x6656 :
                                                            [ `L_n_1 
                                                            | `L_n_10 
                                                            | `L_n_11 
                                                            | `L_n_12 
                                                            | `L_n_13 
                                                            | `L_n_14 
                                                            | `L_n_15 
                                                            | `L_n_16 
                                                            | `L_n_17 
                                                            | `L_n_18 
                                                            | `L_n_19 
                                                            | `L_n_2 
                                                            | `L_n_20 
                                                            | `L_n_21 
                                                            | `L_n_3 
                                                            | `L_n_4 
                                                            | `L_n_5 
                                                            | `L_n_6 
                                                            | `L_n_7 
                                                            | `L_n_8 
                                                            | `L_n_9 ])
                                ->
                                fun ~notation:(x6657 : string) ->
                                  fun ~compactDisplay:(x6658 : string) ->
                                    fun () ->
                                      let x6659 = Ojs.empty_obj () in
                                      Ojs.set_prop_ascii x6659
                                        "localeMatcher"
                                        (Ojs.string_to_js x6644);
                                      Ojs.set_prop_ascii x6659 "style"
                                        (Ojs.string_to_js x6645);
                                      Ojs.set_prop_ascii x6659
                                        "numberingSystem"
                                        (Ojs.string_to_js x6646);
                                      Ojs.set_prop_ascii x6659 "unit"
                                        (Ojs.string_to_js x6647);
                                      Ojs.set_prop_ascii x6659 "unitDisplay"
                                        (Ojs.string_to_js x6648);
                                      Ojs.set_prop_ascii x6659 "currency"
                                        (Ojs.string_to_js x6649);
                                      Ojs.set_prop_ascii x6659
                                        "currencyDisplay"
                                        (Ojs.string_to_js x6650);
                                      Ojs.set_prop_ascii x6659 "useGrouping"
                                        (Ojs.bool_to_js x6651);
                                      Ojs.set_prop_ascii x6659
                                        "minimumIntegerDigits"
                                        (match x6652 with
                                         | `L_n_1 -> Ojs.int_to_js 1
                                         | `L_n_10 -> Ojs.int_to_js 10
                                         | `L_n_11 -> Ojs.int_to_js 11
                                         | `L_n_12 -> Ojs.int_to_js 12
                                         | `L_n_13 -> Ojs.int_to_js 13
                                         | `L_n_14 -> Ojs.int_to_js 14
                                         | `L_n_15 -> Ojs.int_to_js 15
                                         | `L_n_16 -> Ojs.int_to_js 16
                                         | `L_n_17 -> Ojs.int_to_js 17
                                         | `L_n_18 -> Ojs.int_to_js 18
                                         | `L_n_19 -> Ojs.int_to_js 19
                                         | `L_n_2 -> Ojs.int_to_js 2
                                         | `L_n_20 -> Ojs.int_to_js 20
                                         | `L_n_21 -> Ojs.int_to_js 21
                                         | `L_n_3 -> Ojs.int_to_js 3
                                         | `L_n_4 -> Ojs.int_to_js 4
                                         | `L_n_5 -> Ojs.int_to_js 5
                                         | `L_n_6 -> Ojs.int_to_js 6
                                         | `L_n_7 -> Ojs.int_to_js 7
                                         | `L_n_8 -> Ojs.int_to_js 8
                                         | `L_n_9 -> Ojs.int_to_js 9);
                                      Ojs.set_prop_ascii x6659
                                        "minimumFractionDigits"
                                        (match x6653 with
                                         | `L_n_0 -> Ojs.int_to_js 0
                                         | `L_n_1 -> Ojs.int_to_js 1
                                         | `L_n_10 -> Ojs.int_to_js 10
                                         | `L_n_11 -> Ojs.int_to_js 11
                                         | `L_n_12 -> Ojs.int_to_js 12
                                         | `L_n_13 -> Ojs.int_to_js 13
                                         | `L_n_14 -> Ojs.int_to_js 14
                                         | `L_n_15 -> Ojs.int_to_js 15
                                         | `L_n_16 -> Ojs.int_to_js 16
                                         | `L_n_17 -> Ojs.int_to_js 17
                                         | `L_n_18 -> Ojs.int_to_js 18
                                         | `L_n_19 -> Ojs.int_to_js 19
                                         | `L_n_2 -> Ojs.int_to_js 2
                                         | `L_n_20 -> Ojs.int_to_js 20
                                         | `L_n_3 -> Ojs.int_to_js 3
                                         | `L_n_4 -> Ojs.int_to_js 4
                                         | `L_n_5 -> Ojs.int_to_js 5
                                         | `L_n_6 -> Ojs.int_to_js 6
                                         | `L_n_7 -> Ojs.int_to_js 7
                                         | `L_n_8 -> Ojs.int_to_js 8
                                         | `L_n_9 -> Ojs.int_to_js 9);
                                      Ojs.set_prop_ascii x6659
                                        "maximumFractionDigits"
                                        (match x6654 with
                                         | `L_n_0 -> Ojs.int_to_js 0
                                         | `L_n_1 -> Ojs.int_to_js 1
                                         | `L_n_10 -> Ojs.int_to_js 10
                                         | `L_n_11 -> Ojs.int_to_js 11
                                         | `L_n_12 -> Ojs.int_to_js 12
                                         | `L_n_13 -> Ojs.int_to_js 13
                                         | `L_n_14 -> Ojs.int_to_js 14
                                         | `L_n_15 -> Ojs.int_to_js 15
                                         | `L_n_16 -> Ojs.int_to_js 16
                                         | `L_n_17 -> Ojs.int_to_js 17
                                         | `L_n_18 -> Ojs.int_to_js 18
                                         | `L_n_19 -> Ojs.int_to_js 19
                                         | `L_n_2 -> Ojs.int_to_js 2
                                         | `L_n_20 -> Ojs.int_to_js 20
                                         | `L_n_3 -> Ojs.int_to_js 3
                                         | `L_n_4 -> Ojs.int_to_js 4
                                         | `L_n_5 -> Ojs.int_to_js 5
                                         | `L_n_6 -> Ojs.int_to_js 6
                                         | `L_n_7 -> Ojs.int_to_js 7
                                         | `L_n_8 -> Ojs.int_to_js 8
                                         | `L_n_9 -> Ojs.int_to_js 9);
                                      Ojs.set_prop_ascii x6659
                                        "minimumSignificantDigits"
                                        (match x6655 with
                                         | `L_n_1 -> Ojs.int_to_js 1
                                         | `L_n_10 -> Ojs.int_to_js 10
                                         | `L_n_11 -> Ojs.int_to_js 11
                                         | `L_n_12 -> Ojs.int_to_js 12
                                         | `L_n_13 -> Ojs.int_to_js 13
                                         | `L_n_14 -> Ojs.int_to_js 14
                                         | `L_n_15 -> Ojs.int_to_js 15
                                         | `L_n_16 -> Ojs.int_to_js 16
                                         | `L_n_17 -> Ojs.int_to_js 17
                                         | `L_n_18 -> Ojs.int_to_js 18
                                         | `L_n_19 -> Ojs.int_to_js 19
                                         | `L_n_2 -> Ojs.int_to_js 2
                                         | `L_n_20 -> Ojs.int_to_js 20
                                         | `L_n_21 -> Ojs.int_to_js 21
                                         | `L_n_3 -> Ojs.int_to_js 3
                                         | `L_n_4 -> Ojs.int_to_js 4
                                         | `L_n_5 -> Ojs.int_to_js 5
                                         | `L_n_6 -> Ojs.int_to_js 6
                                         | `L_n_7 -> Ojs.int_to_js 7
                                         | `L_n_8 -> Ojs.int_to_js 8
                                         | `L_n_9 -> Ojs.int_to_js 9);
                                      Ojs.set_prop_ascii x6659
                                        "maximumSignificantDigits"
                                        (match x6656 with
                                         | `L_n_1 -> Ojs.int_to_js 1
                                         | `L_n_10 -> Ojs.int_to_js 10
                                         | `L_n_11 -> Ojs.int_to_js 11
                                         | `L_n_12 -> Ojs.int_to_js 12
                                         | `L_n_13 -> Ojs.int_to_js 13
                                         | `L_n_14 -> Ojs.int_to_js 14
                                         | `L_n_15 -> Ojs.int_to_js 15
                                         | `L_n_16 -> Ojs.int_to_js 16
                                         | `L_n_17 -> Ojs.int_to_js 17
                                         | `L_n_18 -> Ojs.int_to_js 18
                                         | `L_n_19 -> Ojs.int_to_js 19
                                         | `L_n_2 -> Ojs.int_to_js 2
                                         | `L_n_20 -> Ojs.int_to_js 20
                                         | `L_n_21 -> Ojs.int_to_js 21
                                         | `L_n_3 -> Ojs.int_to_js 3
                                         | `L_n_4 -> Ojs.int_to_js 4
                                         | `L_n_5 -> Ojs.int_to_js 5
                                         | `L_n_6 -> Ojs.int_to_js 6
                                         | `L_n_7 -> Ojs.int_to_js 7
                                         | `L_n_8 -> Ojs.int_to_js 8
                                         | `L_n_9 -> Ojs.int_to_js 9);
                                      Ojs.set_prop_ascii x6659 "notation"
                                        (Ojs.string_to_js x6657);
                                      Ojs.set_prop_ascii x6659
                                        "compactDisplay"
                                        (Ojs.string_to_js x6658);
                                      t_of_js x6659
    let cast_from = Obj.magic
  end
module BigInt =
  struct
    type t = [ `BigInt ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6661 : Ojs.t) -> t_of_js x6661
    and t_0_to_js : t_0 -> Ojs.t = fun (x6660 : t) -> t_to_js x6660
    type tags = [ `BigInt ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `BigInt ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6664 : Ojs.t) -> intf_of_js __tags_of_js x6664
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6662 : __tags intf) -> intf_to_js __tags_to_js x6662
    let (toString : 'tags this -> ?radix:float -> unit -> string) =
      fun (x6669 : 'tags this) ->
        fun ?radix:(x6666 : float option) ->
          fun () ->
            Ojs.string_of_js
              (let x6671 = this_to_js Obj.magic x6669 in
               Ojs.call (Ojs.get_prop_ascii x6671 "toString") "apply"
                 [|x6671;((let x6667 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6666 with
                            | Some x6668 ->
                                ignore
                                  (Ojs.call x6667 "push"
                                     [|(Ojs.float_to_js x6668)|])
                            | None -> ());
                           x6667))|])
    let (toLocaleString :
      'tags this ->
        ?locales:string ->
          ?options:BigIntToLocaleStringOptions.t -> unit -> string)
      =
      fun (x6677 : 'tags this) ->
        fun ?locales:(x6672 : string option) ->
          fun ?options:(x6673 : BigIntToLocaleStringOptions.t option) ->
            fun () ->
              Ojs.string_of_js
                (let x6679 = this_to_js Obj.magic x6677 in
                 Ojs.call (Ojs.get_prop_ascii x6679 "toLocaleString") "apply"
                   [|x6679;((let x6674 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x6672 with
                              | Some x6676 ->
                                  ignore
                                    (Ojs.call x6674 "push"
                                       [|(Ojs.string_to_js x6676)|])
                              | None -> ());
                             (match x6673 with
                              | Some x6675 ->
                                  ignore
                                    (Ojs.call x6674 "push"
                                       [|(BigIntToLocaleStringOptions.t_to_js
                                            x6675)|])
                              | None -> ());
                             x6674))|])
    let (valueOf : 'tags this -> bigint) =
      fun (x6680 : 'tags this) ->
        bigint_of_js (Ojs.call (this_to_js Obj.magic x6680) "valueOf" [||])
    let (invoke :
      [ `U1 of bigint  | `U2 of bool  | `U3 of float  | `U4 of string ] ->
        bigint)
      =
      fun
        (x6682 :
          [ `U1 of bigint  | `U2 of bool  | `U3 of float  | `U4 of string ])
        ->
        bigint_of_js
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "BigInt")
             [|((match x6682 with
                 | `U1 x6683 -> bigint_to_js x6683
                 | `U2 x6684 -> Ojs.bool_to_js x6684
                 | `U3 x6685 -> Ojs.float_to_js x6685
                 | `U4 x6686 -> Ojs.string_to_js x6686))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "BigInt")
             "prototype")
    let (asIntN : bits:float -> int:bigint -> bigint) =
      fun ~bits:(x6687 : float) ->
        fun ~int:(x6688 : bigint) ->
          bigint_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "BigInt") "asIntN"
               [|(Ojs.float_to_js x6687);(bigint_to_js x6688)|])
    let (asUintN : bits:float -> int:bigint -> bigint) =
      fun ~bits:(x6689 : float) ->
        fun ~int:(x6690 : bigint) ->
          bigint_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "BigInt") "asUintN"
               [|(Ojs.float_to_js x6689);(bigint_to_js x6690)|])
    let cast_from = Obj.magic
  end
module Uint8Array =
  struct
    type t =
      [ `Uint8Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6692 : Ojs.t) -> t_of_js x6692
    and t_0_to_js : t_0 -> Ojs.t = fun (x6691 : t) -> t_to_js x6691
    type tags =
      [ `Uint8Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Uint8Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6695 : Ojs.t) -> intf_of_js __tags_of_js x6695
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6693 : __tags intf) -> intf_to_js __tags_to_js x6693
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x6701 : 'tags this) ->
        fun ~searchElement:(x6697 : float) ->
          fun ?fromIndex:(x6698 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6703 = this_to_js Obj.magic x6701 in
                 Ojs.call (Ojs.get_prop_ascii x6703 "includes") "apply"
                   [|x6703;((let x6699 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6699 "push"
                                  [|(Ojs.float_to_js x6697)|]);
                             (match x6698 with
                              | Some x6700 ->
                                  ignore
                                    (Ojs.call x6699 "push"
                                       [|(Ojs.float_to_js x6700)|])
                              | None -> ());
                             x6699))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x6704 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x6706 : Ojs.t) ->
             let x6707 = x6706 in
             ((Ojs.float_of_js (Ojs.array_get x6707 0)),
               (Ojs.float_of_js (Ojs.array_get x6707 1))))
          (Ojs.call (this_to_js Obj.magic x6704) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x6708 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x6708) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x6711 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x6711) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x6714 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6714)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x6716 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6716) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x6718 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6718) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x6720 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6720) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x6727 : 'tags this) ->
        fun ~target:(x6722 : float) ->
          fun ~start:(x6723 : float) ->
            fun ?end_:(x6724 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x6729 = this_to_js Obj.magic x6727 in
                   Ojs.call (Ojs.get_prop_ascii x6729 "copyWithin") "apply"
                     [|x6729;((let x6725 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6725 "push"
                                    [|(Ojs.float_to_js x6722)|]);
                               ignore
                                 (Ojs.call x6725 "push"
                                    [|(Ojs.float_to_js x6723)|]);
                               (match x6724 with
                                | Some x6726 ->
                                    ignore
                                      (Ojs.call x6725 "push"
                                         [|(Ojs.float_to_js x6726)|])
                                | None -> ());
                               x6725))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x6738 : 'tags this) ->
        fun
          ~predicate:(x6731 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x6732 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6740 = this_to_js Obj.magic x6738 in
                 Ojs.call (Ojs.get_prop_ascii x6740 "every") "apply"
                   [|x6740;((let x6733 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6733 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6735 : Ojs.t) ->
                                          fun (x6736 : Ojs.t) ->
                                            fun (x6737 : Ojs.t) ->
                                              unknown_to_js
                                                (x6731
                                                   ~value:(Ojs.float_of_js
                                                             x6735)
                                                   ~index:(Ojs.float_of_js
                                                             x6736)
                                                   ~array:(t_of_js x6737))))|]);
                             (match x6732 with
                              | Some x6734 ->
                                  ignore
                                    (Ojs.call x6733 "push"
                                       [|(any_to_js x6734)|])
                              | None -> ());
                             x6733))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x6747 : 'tags this) ->
        fun ~value:(x6741 : float) ->
          fun ?start:(x6742 : float option) ->
            fun ?end_:(x6743 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x6749 = this_to_js Obj.magic x6747 in
                   Ojs.call (Ojs.get_prop_ascii x6749 "fill") "apply"
                     [|x6749;((let x6744 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x6744 "push"
                                    [|(Ojs.float_to_js x6741)|]);
                               (match x6742 with
                                | Some x6746 ->
                                    ignore
                                      (Ojs.call x6744 "push"
                                         [|(Ojs.float_to_js x6746)|])
                                | None -> ());
                               (match x6743 with
                                | Some x6745 ->
                                    ignore
                                      (Ojs.call x6744 "push"
                                         [|(Ojs.float_to_js x6745)|])
                                | None -> ());
                               x6744))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x6758 : 'tags this) ->
        fun ~predicate:(x6751 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x6752 : any option) ->
            fun () ->
              t_of_js
                (let x6760 = this_to_js Obj.magic x6758 in
                 Ojs.call (Ojs.get_prop_ascii x6760 "filter") "apply"
                   [|x6760;((let x6753 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6753 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6755 : Ojs.t) ->
                                          fun (x6756 : Ojs.t) ->
                                            fun (x6757 : Ojs.t) ->
                                              any_to_js
                                                (x6751
                                                   ~value:(Ojs.float_of_js
                                                             x6755)
                                                   ~index:(Ojs.float_of_js
                                                             x6756)
                                                   ~array:(t_of_js x6757))))|]);
                             (match x6752 with
                              | Some x6754 ->
                                  ignore
                                    (Ojs.call x6753 "push"
                                       [|(any_to_js x6754)|])
                              | None -> ());
                             x6753))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x6768 : 'tags this) ->
        fun ~predicate:(x6761 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x6762 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x6770 = this_to_js Obj.magic x6768 in
                 Ojs.call (Ojs.get_prop_ascii x6770 "find") "apply"
                   [|x6770;((let x6763 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6763 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6765 : Ojs.t) ->
                                          fun (x6766 : Ojs.t) ->
                                            fun (x6767 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x6761
                                                   ~value:(Ojs.float_of_js
                                                             x6765)
                                                   ~index:(Ojs.float_of_js
                                                             x6766)
                                                   ~obj:(t_of_js x6767))))|]);
                             (match x6762 with
                              | Some x6764 ->
                                  ignore
                                    (Ojs.call x6763 "push"
                                       [|(any_to_js x6764)|])
                              | None -> ());
                             x6763))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x6779 : 'tags this) ->
        fun ~predicate:(x6772 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x6773 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x6781 = this_to_js Obj.magic x6779 in
                 Ojs.call (Ojs.get_prop_ascii x6781 "findIndex") "apply"
                   [|x6781;((let x6774 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6774 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6776 : Ojs.t) ->
                                          fun (x6777 : Ojs.t) ->
                                            fun (x6778 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x6772
                                                   ~value:(Ojs.float_of_js
                                                             x6776)
                                                   ~index:(Ojs.float_of_js
                                                             x6777)
                                                   ~obj:(t_of_js x6778))))|]);
                             (match x6773 with
                              | Some x6775 ->
                                  ignore
                                    (Ojs.call x6774 "push"
                                       [|(any_to_js x6775)|])
                              | None -> ());
                             x6774))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x6789 : 'tags this) ->
        fun
          ~callbackfn:(x6782 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x6783 : any option) ->
            fun () ->
              ignore
                (let x6791 = this_to_js Obj.magic x6789 in
                 Ojs.call (Ojs.get_prop_ascii x6791 "forEach") "apply"
                   [|x6791;((let x6784 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6784 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6786 : Ojs.t) ->
                                          fun (x6787 : Ojs.t) ->
                                            fun (x6788 : Ojs.t) ->
                                              x6782
                                                ~value:(Ojs.float_of_js x6786)
                                                ~index:(Ojs.float_of_js x6787)
                                                ~array:(t_of_js x6788)))|]);
                             (match x6783 with
                              | Some x6785 ->
                                  ignore
                                    (Ojs.call x6784 "push"
                                       [|(any_to_js x6785)|])
                              | None -> ());
                             x6784))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x6796 : 'tags this) ->
        fun ~searchElement:(x6792 : float) ->
          fun ?fromIndex:(x6793 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x6798 = this_to_js Obj.magic x6796 in
                 Ojs.call (Ojs.get_prop_ascii x6798 "indexOf") "apply"
                   [|x6798;((let x6794 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6794 "push"
                                  [|(Ojs.float_to_js x6792)|]);
                             (match x6793 with
                              | Some x6795 ->
                                  ignore
                                    (Ojs.call x6794 "push"
                                       [|(Ojs.float_to_js x6795)|])
                              | None -> ());
                             x6794))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x6802 : 'tags this) ->
        fun ?separator:(x6799 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x6804 = this_to_js Obj.magic x6802 in
               Ojs.call (Ojs.get_prop_ascii x6804 "join") "apply"
                 [|x6804;((let x6800 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6799 with
                            | Some x6801 ->
                                ignore
                                  (Ojs.call x6800 "push"
                                     [|(Ojs.string_to_js x6801)|])
                            | None -> ());
                           x6800))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x6809 : 'tags this) ->
        fun ~searchElement:(x6805 : float) ->
          fun ?fromIndex:(x6806 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x6811 = this_to_js Obj.magic x6809 in
                 Ojs.call (Ojs.get_prop_ascii x6811 "lastIndexOf") "apply"
                   [|x6811;((let x6807 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6807 "push"
                                  [|(Ojs.float_to_js x6805)|]);
                             (match x6806 with
                              | Some x6808 ->
                                  ignore
                                    (Ojs.call x6807 "push"
                                       [|(Ojs.float_to_js x6808)|])
                              | None -> ());
                             x6807))|])
    let (get_length : 'tags this -> float) =
      fun (x6812 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6812) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x6821 : 'tags this) ->
        fun
          ~callbackfn:(x6814 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x6815 : any option) ->
            fun () ->
              t_of_js
                (let x6823 = this_to_js Obj.magic x6821 in
                 Ojs.call (Ojs.get_prop_ascii x6823 "map") "apply"
                   [|x6823;((let x6816 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6816 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6818 : Ojs.t) ->
                                          fun (x6819 : Ojs.t) ->
                                            fun (x6820 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x6814
                                                   ~value:(Ojs.float_of_js
                                                             x6818)
                                                   ~index:(Ojs.float_of_js
                                                             x6819)
                                                   ~array:(t_of_js x6820))))|]);
                             (match x6815 with
                              | Some x6817 ->
                                  ignore
                                    (Ojs.call x6816 "push"
                                       [|(any_to_js x6817)|])
                              | None -> ());
                             x6816))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x6829 : 'tags this) ->
        fun
          ~callbackfn:(x6824 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6829) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x6825 : Ojs.t) ->
                       fun (x6826 : Ojs.t) ->
                         fun (x6827 : Ojs.t) ->
                           fun (x6828 : Ojs.t) ->
                             Ojs.float_to_js
                               (x6824 ~previousValue:(Ojs.float_of_js x6825)
                                  ~currentValue:(Ojs.float_of_js x6826)
                                  ~currentIndex:(Ojs.float_of_js x6827)
                                  ~array:(t_of_js x6828))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x6837 : 'tags this) ->
        fun
          ~callbackfn:(x6831 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x6836 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x6837) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x6832 : Ojs.t) ->
                         fun (x6833 : Ojs.t) ->
                           fun (x6834 : Ojs.t) ->
                             fun (x6835 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x6831
                                    ~previousValue:(Ojs.float_of_js x6832)
                                    ~currentValue:(Ojs.float_of_js x6833)
                                    ~currentIndex:(Ojs.float_of_js x6834)
                                    ~array:(t_of_js x6835))));(Ojs.float_to_js
                                                                 x6836)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x6845 : 'tags this) ->
        fun
          ~callbackfn:(x6839 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x6844 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x6845) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x6840 : Ojs.t) ->
                         fun (x6841 : Ojs.t) ->
                           fun (x6842 : Ojs.t) ->
                             fun (x6843 : Ojs.t) ->
                               Obj.magic
                                 (x6839 ~previousValue:(Obj.magic x6840)
                                    ~currentValue:(Ojs.float_of_js x6841)
                                    ~currentIndex:(Ojs.float_of_js x6842)
                                    ~array:(t_of_js x6843))));(Obj.magic
                                                                 x6844)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x6852 : 'tags this) ->
        fun
          ~callbackfn:(x6847 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x6852) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x6848 : Ojs.t) ->
                       fun (x6849 : Ojs.t) ->
                         fun (x6850 : Ojs.t) ->
                           fun (x6851 : Ojs.t) ->
                             Ojs.float_to_js
                               (x6847 ~previousValue:(Ojs.float_of_js x6848)
                                  ~currentValue:(Ojs.float_of_js x6849)
                                  ~currentIndex:(Ojs.float_of_js x6850)
                                  ~array:(t_of_js x6851))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x6860 : 'tags this) ->
        fun
          ~callbackfn:(x6854 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x6859 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x6860) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x6855 : Ojs.t) ->
                         fun (x6856 : Ojs.t) ->
                           fun (x6857 : Ojs.t) ->
                             fun (x6858 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x6854
                                    ~previousValue:(Ojs.float_of_js x6855)
                                    ~currentValue:(Ojs.float_of_js x6856)
                                    ~currentIndex:(Ojs.float_of_js x6857)
                                    ~array:(t_of_js x6858))));(Ojs.float_to_js
                                                                 x6859)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x6868 : 'tags this) ->
        fun
          ~callbackfn:(x6862 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x6867 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x6868) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x6863 : Ojs.t) ->
                         fun (x6864 : Ojs.t) ->
                           fun (x6865 : Ojs.t) ->
                             fun (x6866 : Ojs.t) ->
                               Obj.magic
                                 (x6862 ~previousValue:(Obj.magic x6863)
                                    ~currentValue:(Ojs.float_of_js x6864)
                                    ~currentIndex:(Ojs.float_of_js x6865)
                                    ~array:(t_of_js x6866))));(Obj.magic
                                                                 x6867)|])
    let (reverse : 'tags this -> t) =
      fun (x6870 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x6870) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x6877 : 'tags this) ->
        fun ~array:(x6872 : float ArrayLike.t) ->
          fun ?offset:(x6873 : float option) ->
            fun () ->
              ignore
                (let x6879 = this_to_js Obj.magic x6877 in
                 Ojs.call (Ojs.get_prop_ascii x6879 "set") "apply"
                   [|x6879;((let x6874 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6874 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x6872)|]);
                             (match x6873 with
                              | Some x6875 ->
                                  ignore
                                    (Ojs.call x6874 "push"
                                       [|(Ojs.float_to_js x6875)|])
                              | None -> ());
                             x6874))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x6885 : 'tags this) ->
        fun ?start:(x6880 : float option) ->
          fun ?end_:(x6881 : float option) ->
            fun () ->
              t_of_js
                (let x6887 = this_to_js Obj.magic x6885 in
                 Ojs.call (Ojs.get_prop_ascii x6887 "slice") "apply"
                   [|x6887;((let x6882 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x6880 with
                              | Some x6884 ->
                                  ignore
                                    (Ojs.call x6882 "push"
                                       [|(Ojs.float_to_js x6884)|])
                              | None -> ());
                             (match x6881 with
                              | Some x6883 ->
                                  ignore
                                    (Ojs.call x6882 "push"
                                       [|(Ojs.float_to_js x6883)|])
                              | None -> ());
                             x6882))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x6895 : 'tags this) ->
        fun
          ~predicate:(x6888 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x6889 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6897 = this_to_js Obj.magic x6895 in
                 Ojs.call (Ojs.get_prop_ascii x6897 "some") "apply"
                   [|x6897;((let x6890 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6890 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x6892 : Ojs.t) ->
                                          fun (x6893 : Ojs.t) ->
                                            fun (x6894 : Ojs.t) ->
                                              unknown_to_js
                                                (x6888
                                                   ~value:(Ojs.float_of_js
                                                             x6892)
                                                   ~index:(Ojs.float_of_js
                                                             x6893)
                                                   ~array:(t_of_js x6894))))|]);
                             (match x6889 with
                              | Some x6891 ->
                                  ignore
                                    (Ojs.call x6890 "push"
                                       [|(any_to_js x6891)|])
                              | None -> ());
                             x6890))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x6903 : 'tags this) ->
        fun ?compareFn:(x6898 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x6905 = this_to_js Obj.magic x6903 in
               Ojs.call (Ojs.get_prop_ascii x6905 "sort") "apply"
                 [|x6905;((let x6899 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x6898 with
                            | Some x6900 ->
                                ignore
                                  (Ojs.call x6899 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x6901 : Ojs.t) ->
                                             fun (x6902 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x6900
                                                    ~a:(Ojs.float_of_js x6901)
                                                    ~b:(Ojs.float_of_js x6902))))|])
                            | None -> ());
                           x6899))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x6912 : 'tags this) ->
        fun ?begin_:(x6907 : float option) ->
          fun ?end_:(x6908 : float option) ->
            fun () ->
              t_of_js
                (let x6914 = this_to_js Obj.magic x6912 in
                 Ojs.call (Ojs.get_prop_ascii x6914 "subarray") "apply"
                   [|x6914;((let x6909 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x6907 with
                              | Some x6911 ->
                                  ignore
                                    (Ojs.call x6909 "push"
                                       [|(Ojs.float_to_js x6911)|])
                              | None -> ());
                             (match x6908 with
                              | Some x6910 ->
                                  ignore
                                    (Ojs.call x6909 "push"
                                       [|(Ojs.float_to_js x6910)|])
                              | None -> ());
                             x6909))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x6915 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x6915) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x6917 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x6917) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x6919 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x6919) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x6921 : 'tags this) ->
        fun (x6923 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x6921)
               (Ojs.float_to_js x6923))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x6924 : 'tags this) ->
        fun (x6926 : float) ->
          fun (x6927 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x6924) (Ojs.float_to_js x6926)
              (Ojs.float_to_js x6927)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x6928 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             [|(Iterable.t_to_js Ojs.float_to_js x6928)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x6930 : float Iterable.t) ->
        fun ?mapfn:(x6931 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x6932 : any option) ->
            fun () ->
              t_of_js
                (let x6939 = Ojs.get_prop_ascii Ojs.global "Uint8Array" in
                 Ojs.call (Ojs.get_prop_ascii x6939 "from") "apply"
                   [|x6939;((let x6933 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6933 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x6930)|]);
                             (match x6931 with
                              | Some x6935 ->
                                  ignore
                                    (Ojs.call x6933 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x6936 : Ojs.t) ->
                                               fun (x6937 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x6935
                                                      ~v:(Ojs.float_of_js
                                                            x6936)
                                                      ~k:(Ojs.float_of_js
                                                            x6937))))|])
                              | None -> ());
                             (match x6932 with
                              | Some x6934 ->
                                  ignore
                                    (Ojs.call x6933 "push"
                                       [|(any_to_js x6934)|])
                              | None -> ());
                             x6933))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x6940 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             [|(Ojs.float_to_js x6940)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x6941 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             [|((match x6941 with
                 | `U1 x6942 -> ArrayLike.t_to_js Ojs.float_to_js x6942
                 | `U2 x6944 -> ArrayBufferLike.t_to_js x6944))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x6945 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x6946 : float option) ->
          fun ?length:(x6947 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Uint8Array")
                   (let x6948 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x6948 "push"
                         [|(ArrayBufferLike.t_to_js x6945)|]);
                    (match x6946 with
                     | Some x6950 ->
                         ignore
                           (Ojs.call x6948 "push" [|(Ojs.float_to_js x6950)|])
                     | None -> ());
                    (match x6947 with
                     | Some x6949 ->
                         ignore
                           (Ojs.call x6948 "push" [|(Ojs.float_to_js x6949)|])
                     | None -> ());
                    x6948))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint8Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x6951 : float list) ->
        t_of_js
          (let x6954 = Ojs.get_prop_ascii Ojs.global "Uint8Array" in
           Ojs.call (Ojs.get_prop_ascii x6954 "of") "apply"
             [|x6954;((let x6952 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x6953 : float) ->
                            ignore
                              (Ojs.call x6952 "push"
                                 [|(Ojs.float_to_js x6953)|])) x6951;
                       x6952))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x6955 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Uint8Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x6955)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x6957 : 'T ArrayLike.t) ->
        fun ~mapfn:(x6958 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x6959 : any option) ->
            fun () ->
              t_of_js
                (let x6965 = Ojs.get_prop_ascii Ojs.global "Uint8Array" in
                 Ojs.call (Ojs.get_prop_ascii x6965 "from") "apply"
                   [|x6965;((let x6960 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6960 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x6957)|]);
                             ignore
                               (Ojs.call x6960 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x6962 : Ojs.t) ->
                                          fun (x6963 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x6958 ~v:(Obj.magic x6962)
                                                 ~k:(Ojs.float_of_js x6963))))|]);
                             (match x6959 with
                              | Some x6961 ->
                                  ignore
                                    (Ojs.call x6960 "push"
                                       [|(any_to_js x6961)|])
                              | None -> ());
                             x6960))|])
    let cast_from = Obj.magic
  end
module Uint32Array =
  struct
    type t =
      [ `Uint32Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x6967 : Ojs.t) -> t_of_js x6967
    and t_0_to_js : t_0 -> Ojs.t = fun (x6966 : t) -> t_to_js x6966
    type tags =
      [ `Uint32Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Uint32Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x6970 : Ojs.t) -> intf_of_js __tags_of_js x6970
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x6968 : __tags intf) -> intf_to_js __tags_to_js x6968
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x6976 : 'tags this) ->
        fun ~searchElement:(x6972 : float) ->
          fun ?fromIndex:(x6973 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x6978 = this_to_js Obj.magic x6976 in
                 Ojs.call (Ojs.get_prop_ascii x6978 "includes") "apply"
                   [|x6978;((let x6974 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x6974 "push"
                                  [|(Ojs.float_to_js x6972)|]);
                             (match x6973 with
                              | Some x6975 ->
                                  ignore
                                    (Ojs.call x6974 "push"
                                       [|(Ojs.float_to_js x6975)|])
                              | None -> ());
                             x6974))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x6979 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x6981 : Ojs.t) ->
             let x6982 = x6981 in
             ((Ojs.float_of_js (Ojs.array_get x6982 0)),
               (Ojs.float_of_js (Ojs.array_get x6982 1))))
          (Ojs.call (this_to_js Obj.magic x6979) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x6983 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x6983) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x6986 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x6986) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x6989 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6989)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x6991 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6991) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x6993 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6993) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x6995 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x6995) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7002 : 'tags this) ->
        fun ~target:(x6997 : float) ->
          fun ~start:(x6998 : float) ->
            fun ?end_:(x6999 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7004 = this_to_js Obj.magic x7002 in
                   Ojs.call (Ojs.get_prop_ascii x7004 "copyWithin") "apply"
                     [|x7004;((let x7000 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7000 "push"
                                    [|(Ojs.float_to_js x6997)|]);
                               ignore
                                 (Ojs.call x7000 "push"
                                    [|(Ojs.float_to_js x6998)|]);
                               (match x6999 with
                                | Some x7001 ->
                                    ignore
                                      (Ojs.call x7000 "push"
                                         [|(Ojs.float_to_js x7001)|])
                                | None -> ());
                               x7000))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7013 : 'tags this) ->
        fun
          ~predicate:(x7006 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7007 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7015 = this_to_js Obj.magic x7013 in
                 Ojs.call (Ojs.get_prop_ascii x7015 "every") "apply"
                   [|x7015;((let x7008 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7008 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7010 : Ojs.t) ->
                                          fun (x7011 : Ojs.t) ->
                                            fun (x7012 : Ojs.t) ->
                                              unknown_to_js
                                                (x7006
                                                   ~value:(Ojs.float_of_js
                                                             x7010)
                                                   ~index:(Ojs.float_of_js
                                                             x7011)
                                                   ~array:(t_of_js x7012))))|]);
                             (match x7007 with
                              | Some x7009 ->
                                  ignore
                                    (Ojs.call x7008 "push"
                                       [|(any_to_js x7009)|])
                              | None -> ());
                             x7008))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7022 : 'tags this) ->
        fun ~value:(x7016 : float) ->
          fun ?start:(x7017 : float option) ->
            fun ?end_:(x7018 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7024 = this_to_js Obj.magic x7022 in
                   Ojs.call (Ojs.get_prop_ascii x7024 "fill") "apply"
                     [|x7024;((let x7019 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7019 "push"
                                    [|(Ojs.float_to_js x7016)|]);
                               (match x7017 with
                                | Some x7021 ->
                                    ignore
                                      (Ojs.call x7019 "push"
                                         [|(Ojs.float_to_js x7021)|])
                                | None -> ());
                               (match x7018 with
                                | Some x7020 ->
                                    ignore
                                      (Ojs.call x7019 "push"
                                         [|(Ojs.float_to_js x7020)|])
                                | None -> ());
                               x7019))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7033 : 'tags this) ->
        fun ~predicate:(x7026 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x7027 : any option) ->
            fun () ->
              t_of_js
                (let x7035 = this_to_js Obj.magic x7033 in
                 Ojs.call (Ojs.get_prop_ascii x7035 "filter") "apply"
                   [|x7035;((let x7028 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7028 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7030 : Ojs.t) ->
                                          fun (x7031 : Ojs.t) ->
                                            fun (x7032 : Ojs.t) ->
                                              any_to_js
                                                (x7026
                                                   ~value:(Ojs.float_of_js
                                                             x7030)
                                                   ~index:(Ojs.float_of_js
                                                             x7031)
                                                   ~array:(t_of_js x7032))))|]);
                             (match x7027 with
                              | Some x7029 ->
                                  ignore
                                    (Ojs.call x7028 "push"
                                       [|(any_to_js x7029)|])
                              | None -> ());
                             x7028))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x7043 : 'tags this) ->
        fun ~predicate:(x7036 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7037 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x7045 = this_to_js Obj.magic x7043 in
                 Ojs.call (Ojs.get_prop_ascii x7045 "find") "apply"
                   [|x7045;((let x7038 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7038 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7040 : Ojs.t) ->
                                          fun (x7041 : Ojs.t) ->
                                            fun (x7042 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7036
                                                   ~value:(Ojs.float_of_js
                                                             x7040)
                                                   ~index:(Ojs.float_of_js
                                                             x7041)
                                                   ~obj:(t_of_js x7042))))|]);
                             (match x7037 with
                              | Some x7039 ->
                                  ignore
                                    (Ojs.call x7038 "push"
                                       [|(any_to_js x7039)|])
                              | None -> ());
                             x7038))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x7054 : 'tags this) ->
        fun ~predicate:(x7047 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7048 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x7056 = this_to_js Obj.magic x7054 in
                 Ojs.call (Ojs.get_prop_ascii x7056 "findIndex") "apply"
                   [|x7056;((let x7049 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7049 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7051 : Ojs.t) ->
                                          fun (x7052 : Ojs.t) ->
                                            fun (x7053 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7047
                                                   ~value:(Ojs.float_of_js
                                                             x7051)
                                                   ~index:(Ojs.float_of_js
                                                             x7052)
                                                   ~obj:(t_of_js x7053))))|]);
                             (match x7048 with
                              | Some x7050 ->
                                  ignore
                                    (Ojs.call x7049 "push"
                                       [|(any_to_js x7050)|])
                              | None -> ());
                             x7049))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x7064 : 'tags this) ->
        fun
          ~callbackfn:(x7057 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x7058 : any option) ->
            fun () ->
              ignore
                (let x7066 = this_to_js Obj.magic x7064 in
                 Ojs.call (Ojs.get_prop_ascii x7066 "forEach") "apply"
                   [|x7066;((let x7059 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7059 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7061 : Ojs.t) ->
                                          fun (x7062 : Ojs.t) ->
                                            fun (x7063 : Ojs.t) ->
                                              x7057
                                                ~value:(Ojs.float_of_js x7061)
                                                ~index:(Ojs.float_of_js x7062)
                                                ~array:(t_of_js x7063)))|]);
                             (match x7058 with
                              | Some x7060 ->
                                  ignore
                                    (Ojs.call x7059 "push"
                                       [|(any_to_js x7060)|])
                              | None -> ());
                             x7059))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7071 : 'tags this) ->
        fun ~searchElement:(x7067 : float) ->
          fun ?fromIndex:(x7068 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7073 = this_to_js Obj.magic x7071 in
                 Ojs.call (Ojs.get_prop_ascii x7073 "indexOf") "apply"
                   [|x7073;((let x7069 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7069 "push"
                                  [|(Ojs.float_to_js x7067)|]);
                             (match x7068 with
                              | Some x7070 ->
                                  ignore
                                    (Ojs.call x7069 "push"
                                       [|(Ojs.float_to_js x7070)|])
                              | None -> ());
                             x7069))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x7077 : 'tags this) ->
        fun ?separator:(x7074 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x7079 = this_to_js Obj.magic x7077 in
               Ojs.call (Ojs.get_prop_ascii x7079 "join") "apply"
                 [|x7079;((let x7075 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7074 with
                            | Some x7076 ->
                                ignore
                                  (Ojs.call x7075 "push"
                                     [|(Ojs.string_to_js x7076)|])
                            | None -> ());
                           x7075))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7084 : 'tags this) ->
        fun ~searchElement:(x7080 : float) ->
          fun ?fromIndex:(x7081 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7086 = this_to_js Obj.magic x7084 in
                 Ojs.call (Ojs.get_prop_ascii x7086 "lastIndexOf") "apply"
                   [|x7086;((let x7082 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7082 "push"
                                  [|(Ojs.float_to_js x7080)|]);
                             (match x7081 with
                              | Some x7083 ->
                                  ignore
                                    (Ojs.call x7082 "push"
                                       [|(Ojs.float_to_js x7083)|])
                              | None -> ());
                             x7082))|])
    let (get_length : 'tags this -> float) =
      fun (x7087 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7087) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7096 : 'tags this) ->
        fun
          ~callbackfn:(x7089 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x7090 : any option) ->
            fun () ->
              t_of_js
                (let x7098 = this_to_js Obj.magic x7096 in
                 Ojs.call (Ojs.get_prop_ascii x7098 "map") "apply"
                   [|x7098;((let x7091 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7091 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7093 : Ojs.t) ->
                                          fun (x7094 : Ojs.t) ->
                                            fun (x7095 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x7089
                                                   ~value:(Ojs.float_of_js
                                                             x7093)
                                                   ~index:(Ojs.float_of_js
                                                             x7094)
                                                   ~array:(t_of_js x7095))))|]);
                             (match x7090 with
                              | Some x7092 ->
                                  ignore
                                    (Ojs.call x7091 "push"
                                       [|(any_to_js x7092)|])
                              | None -> ());
                             x7091))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7104 : 'tags this) ->
        fun
          ~callbackfn:(x7099 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7104) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x7100 : Ojs.t) ->
                       fun (x7101 : Ojs.t) ->
                         fun (x7102 : Ojs.t) ->
                           fun (x7103 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7099 ~previousValue:(Ojs.float_of_js x7100)
                                  ~currentValue:(Ojs.float_of_js x7101)
                                  ~currentIndex:(Ojs.float_of_js x7102)
                                  ~array:(t_of_js x7103))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7112 : 'tags this) ->
        fun
          ~callbackfn:(x7106 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7111 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7112) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7107 : Ojs.t) ->
                         fun (x7108 : Ojs.t) ->
                           fun (x7109 : Ojs.t) ->
                             fun (x7110 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7106
                                    ~previousValue:(Ojs.float_of_js x7107)
                                    ~currentValue:(Ojs.float_of_js x7108)
                                    ~currentIndex:(Ojs.float_of_js x7109)
                                    ~array:(t_of_js x7110))));(Ojs.float_to_js
                                                                 x7111)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7120 : 'tags this) ->
        fun
          ~callbackfn:(x7114 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7119 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7120) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7115 : Ojs.t) ->
                         fun (x7116 : Ojs.t) ->
                           fun (x7117 : Ojs.t) ->
                             fun (x7118 : Ojs.t) ->
                               Obj.magic
                                 (x7114 ~previousValue:(Obj.magic x7115)
                                    ~currentValue:(Ojs.float_of_js x7116)
                                    ~currentIndex:(Ojs.float_of_js x7117)
                                    ~array:(t_of_js x7118))));(Obj.magic
                                                                 x7119)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7127 : 'tags this) ->
        fun
          ~callbackfn:(x7122 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7127) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x7123 : Ojs.t) ->
                       fun (x7124 : Ojs.t) ->
                         fun (x7125 : Ojs.t) ->
                           fun (x7126 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7122 ~previousValue:(Ojs.float_of_js x7123)
                                  ~currentValue:(Ojs.float_of_js x7124)
                                  ~currentIndex:(Ojs.float_of_js x7125)
                                  ~array:(t_of_js x7126))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7135 : 'tags this) ->
        fun
          ~callbackfn:(x7129 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7134 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7135) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7130 : Ojs.t) ->
                         fun (x7131 : Ojs.t) ->
                           fun (x7132 : Ojs.t) ->
                             fun (x7133 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7129
                                    ~previousValue:(Ojs.float_of_js x7130)
                                    ~currentValue:(Ojs.float_of_js x7131)
                                    ~currentIndex:(Ojs.float_of_js x7132)
                                    ~array:(t_of_js x7133))));(Ojs.float_to_js
                                                                 x7134)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7143 : 'tags this) ->
        fun
          ~callbackfn:(x7137 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7142 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7143) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7138 : Ojs.t) ->
                         fun (x7139 : Ojs.t) ->
                           fun (x7140 : Ojs.t) ->
                             fun (x7141 : Ojs.t) ->
                               Obj.magic
                                 (x7137 ~previousValue:(Obj.magic x7138)
                                    ~currentValue:(Ojs.float_of_js x7139)
                                    ~currentIndex:(Ojs.float_of_js x7140)
                                    ~array:(t_of_js x7141))));(Obj.magic
                                                                 x7142)|])
    let (reverse : 'tags this -> t) =
      fun (x7145 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7145) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x7152 : 'tags this) ->
        fun ~array:(x7147 : float ArrayLike.t) ->
          fun ?offset:(x7148 : float option) ->
            fun () ->
              ignore
                (let x7154 = this_to_js Obj.magic x7152 in
                 Ojs.call (Ojs.get_prop_ascii x7154 "set") "apply"
                   [|x7154;((let x7149 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7149 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x7147)|]);
                             (match x7148 with
                              | Some x7150 ->
                                  ignore
                                    (Ojs.call x7149 "push"
                                       [|(Ojs.float_to_js x7150)|])
                              | None -> ());
                             x7149))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x7160 : 'tags this) ->
        fun ?start:(x7155 : float option) ->
          fun ?end_:(x7156 : float option) ->
            fun () ->
              t_of_js
                (let x7162 = this_to_js Obj.magic x7160 in
                 Ojs.call (Ojs.get_prop_ascii x7162 "slice") "apply"
                   [|x7162;((let x7157 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7155 with
                              | Some x7159 ->
                                  ignore
                                    (Ojs.call x7157 "push"
                                       [|(Ojs.float_to_js x7159)|])
                              | None -> ());
                             (match x7156 with
                              | Some x7158 ->
                                  ignore
                                    (Ojs.call x7157 "push"
                                       [|(Ojs.float_to_js x7158)|])
                              | None -> ());
                             x7157))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7170 : 'tags this) ->
        fun
          ~predicate:(x7163 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7164 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7172 = this_to_js Obj.magic x7170 in
                 Ojs.call (Ojs.get_prop_ascii x7172 "some") "apply"
                   [|x7172;((let x7165 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7165 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7167 : Ojs.t) ->
                                          fun (x7168 : Ojs.t) ->
                                            fun (x7169 : Ojs.t) ->
                                              unknown_to_js
                                                (x7163
                                                   ~value:(Ojs.float_of_js
                                                             x7167)
                                                   ~index:(Ojs.float_of_js
                                                             x7168)
                                                   ~array:(t_of_js x7169))))|]);
                             (match x7164 with
                              | Some x7166 ->
                                  ignore
                                    (Ojs.call x7165 "push"
                                       [|(any_to_js x7166)|])
                              | None -> ());
                             x7165))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x7178 : 'tags this) ->
        fun ?compareFn:(x7173 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x7180 = this_to_js Obj.magic x7178 in
               Ojs.call (Ojs.get_prop_ascii x7180 "sort") "apply"
                 [|x7180;((let x7174 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7173 with
                            | Some x7175 ->
                                ignore
                                  (Ojs.call x7174 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x7176 : Ojs.t) ->
                                             fun (x7177 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x7175
                                                    ~a:(Ojs.float_of_js x7176)
                                                    ~b:(Ojs.float_of_js x7177))))|])
                            | None -> ());
                           x7174))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x7187 : 'tags this) ->
        fun ?begin_:(x7182 : float option) ->
          fun ?end_:(x7183 : float option) ->
            fun () ->
              t_of_js
                (let x7189 = this_to_js Obj.magic x7187 in
                 Ojs.call (Ojs.get_prop_ascii x7189 "subarray") "apply"
                   [|x7189;((let x7184 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7182 with
                              | Some x7186 ->
                                  ignore
                                    (Ojs.call x7184 "push"
                                       [|(Ojs.float_to_js x7186)|])
                              | None -> ());
                             (match x7183 with
                              | Some x7185 ->
                                  ignore
                                    (Ojs.call x7184 "push"
                                       [|(Ojs.float_to_js x7185)|])
                              | None -> ());
                             x7184))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x7190 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7190) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x7192 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7192) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x7194 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7194) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x7196 : 'tags this) ->
        fun (x7198 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x7196)
               (Ojs.float_to_js x7198))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x7199 : 'tags this) ->
        fun (x7201 : float) ->
          fun (x7202 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x7199) (Ojs.float_to_js x7201)
              (Ojs.float_to_js x7202)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint32Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x7203 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             [|(Iterable.t_to_js Ojs.float_to_js x7203)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7205 : float Iterable.t) ->
        fun ?mapfn:(x7206 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x7207 : any option) ->
            fun () ->
              t_of_js
                (let x7214 = Ojs.get_prop_ascii Ojs.global "Uint32Array" in
                 Ojs.call (Ojs.get_prop_ascii x7214 "from") "apply"
                   [|x7214;((let x7208 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7208 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x7205)|]);
                             (match x7206 with
                              | Some x7210 ->
                                  ignore
                                    (Ojs.call x7208 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x7211 : Ojs.t) ->
                                               fun (x7212 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x7210
                                                      ~v:(Ojs.float_of_js
                                                            x7211)
                                                      ~k:(Ojs.float_of_js
                                                            x7212))))|])
                              | None -> ());
                             (match x7207 with
                              | Some x7209 ->
                                  ignore
                                    (Ojs.call x7208 "push"
                                       [|(any_to_js x7209)|])
                              | None -> ());
                             x7208))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x7215 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             [|(Ojs.float_to_js x7215)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x7216 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             [|((match x7216 with
                 | `U1 x7217 -> ArrayLike.t_to_js Ojs.float_to_js x7217
                 | `U2 x7219 -> ArrayBufferLike.t_to_js x7219))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x7220 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x7221 : float option) ->
          fun ?length:(x7222 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Uint32Array")
                   (let x7223 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x7223 "push"
                         [|(ArrayBufferLike.t_to_js x7220)|]);
                    (match x7221 with
                     | Some x7225 ->
                         ignore
                           (Ojs.call x7223 "push" [|(Ojs.float_to_js x7225)|])
                     | None -> ());
                    (match x7222 with
                     | Some x7224 ->
                         ignore
                           (Ojs.call x7223 "push" [|(Ojs.float_to_js x7224)|])
                     | None -> ());
                    x7223))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint32Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x7226 : float list) ->
        t_of_js
          (let x7229 = Ojs.get_prop_ascii Ojs.global "Uint32Array" in
           Ojs.call (Ojs.get_prop_ascii x7229 "of") "apply"
             [|x7229;((let x7227 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x7228 : float) ->
                            ignore
                              (Ojs.call x7227 "push"
                                 [|(Ojs.float_to_js x7228)|])) x7226;
                       x7227))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x7230 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Uint32Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x7230)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7232 : 'T ArrayLike.t) ->
        fun ~mapfn:(x7233 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x7234 : any option) ->
            fun () ->
              t_of_js
                (let x7240 = Ojs.get_prop_ascii Ojs.global "Uint32Array" in
                 Ojs.call (Ojs.get_prop_ascii x7240 "from") "apply"
                   [|x7240;((let x7235 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7235 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x7232)|]);
                             ignore
                               (Ojs.call x7235 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x7237 : Ojs.t) ->
                                          fun (x7238 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x7233 ~v:(Obj.magic x7237)
                                                 ~k:(Ojs.float_of_js x7238))))|]);
                             (match x7234 with
                              | Some x7236 ->
                                  ignore
                                    (Ojs.call x7235 "push"
                                       [|(any_to_js x7236)|])
                              | None -> ());
                             x7235))|])
    let cast_from = Obj.magic
  end
module Uint16Array =
  struct
    type t =
      [ `Uint16Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x7242 : Ojs.t) -> t_of_js x7242
    and t_0_to_js : t_0 -> Ojs.t = fun (x7241 : t) -> t_to_js x7241
    type tags =
      [ `Uint16Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Uint16Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x7245 : Ojs.t) -> intf_of_js __tags_of_js x7245
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x7243 : __tags intf) -> intf_to_js __tags_to_js x7243
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x7251 : 'tags this) ->
        fun ~searchElement:(x7247 : float) ->
          fun ?fromIndex:(x7248 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7253 = this_to_js Obj.magic x7251 in
                 Ojs.call (Ojs.get_prop_ascii x7253 "includes") "apply"
                   [|x7253;((let x7249 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7249 "push"
                                  [|(Ojs.float_to_js x7247)|]);
                             (match x7248 with
                              | Some x7250 ->
                                  ignore
                                    (Ojs.call x7249 "push"
                                       [|(Ojs.float_to_js x7250)|])
                              | None -> ());
                             x7249))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x7254 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x7256 : Ojs.t) ->
             let x7257 = x7256 in
             ((Ojs.float_of_js (Ojs.array_get x7257 0)),
               (Ojs.float_of_js (Ojs.array_get x7257 1))))
          (Ojs.call (this_to_js Obj.magic x7254) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x7258 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7258) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x7261 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7261) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x7264 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7264)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x7266 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7266) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x7268 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7268) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x7270 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7270) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7277 : 'tags this) ->
        fun ~target:(x7272 : float) ->
          fun ~start:(x7273 : float) ->
            fun ?end_:(x7274 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7279 = this_to_js Obj.magic x7277 in
                   Ojs.call (Ojs.get_prop_ascii x7279 "copyWithin") "apply"
                     [|x7279;((let x7275 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7275 "push"
                                    [|(Ojs.float_to_js x7272)|]);
                               ignore
                                 (Ojs.call x7275 "push"
                                    [|(Ojs.float_to_js x7273)|]);
                               (match x7274 with
                                | Some x7276 ->
                                    ignore
                                      (Ojs.call x7275 "push"
                                         [|(Ojs.float_to_js x7276)|])
                                | None -> ());
                               x7275))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7288 : 'tags this) ->
        fun
          ~predicate:(x7281 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7282 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7290 = this_to_js Obj.magic x7288 in
                 Ojs.call (Ojs.get_prop_ascii x7290 "every") "apply"
                   [|x7290;((let x7283 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7283 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7285 : Ojs.t) ->
                                          fun (x7286 : Ojs.t) ->
                                            fun (x7287 : Ojs.t) ->
                                              unknown_to_js
                                                (x7281
                                                   ~value:(Ojs.float_of_js
                                                             x7285)
                                                   ~index:(Ojs.float_of_js
                                                             x7286)
                                                   ~array:(t_of_js x7287))))|]);
                             (match x7282 with
                              | Some x7284 ->
                                  ignore
                                    (Ojs.call x7283 "push"
                                       [|(any_to_js x7284)|])
                              | None -> ());
                             x7283))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7297 : 'tags this) ->
        fun ~value:(x7291 : float) ->
          fun ?start:(x7292 : float option) ->
            fun ?end_:(x7293 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7299 = this_to_js Obj.magic x7297 in
                   Ojs.call (Ojs.get_prop_ascii x7299 "fill") "apply"
                     [|x7299;((let x7294 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7294 "push"
                                    [|(Ojs.float_to_js x7291)|]);
                               (match x7292 with
                                | Some x7296 ->
                                    ignore
                                      (Ojs.call x7294 "push"
                                         [|(Ojs.float_to_js x7296)|])
                                | None -> ());
                               (match x7293 with
                                | Some x7295 ->
                                    ignore
                                      (Ojs.call x7294 "push"
                                         [|(Ojs.float_to_js x7295)|])
                                | None -> ());
                               x7294))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7308 : 'tags this) ->
        fun ~predicate:(x7301 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x7302 : any option) ->
            fun () ->
              t_of_js
                (let x7310 = this_to_js Obj.magic x7308 in
                 Ojs.call (Ojs.get_prop_ascii x7310 "filter") "apply"
                   [|x7310;((let x7303 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7303 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7305 : Ojs.t) ->
                                          fun (x7306 : Ojs.t) ->
                                            fun (x7307 : Ojs.t) ->
                                              any_to_js
                                                (x7301
                                                   ~value:(Ojs.float_of_js
                                                             x7305)
                                                   ~index:(Ojs.float_of_js
                                                             x7306)
                                                   ~array:(t_of_js x7307))))|]);
                             (match x7302 with
                              | Some x7304 ->
                                  ignore
                                    (Ojs.call x7303 "push"
                                       [|(any_to_js x7304)|])
                              | None -> ());
                             x7303))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x7318 : 'tags this) ->
        fun ~predicate:(x7311 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7312 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x7320 = this_to_js Obj.magic x7318 in
                 Ojs.call (Ojs.get_prop_ascii x7320 "find") "apply"
                   [|x7320;((let x7313 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7313 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7315 : Ojs.t) ->
                                          fun (x7316 : Ojs.t) ->
                                            fun (x7317 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7311
                                                   ~value:(Ojs.float_of_js
                                                             x7315)
                                                   ~index:(Ojs.float_of_js
                                                             x7316)
                                                   ~obj:(t_of_js x7317))))|]);
                             (match x7312 with
                              | Some x7314 ->
                                  ignore
                                    (Ojs.call x7313 "push"
                                       [|(any_to_js x7314)|])
                              | None -> ());
                             x7313))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x7329 : 'tags this) ->
        fun ~predicate:(x7322 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7323 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x7331 = this_to_js Obj.magic x7329 in
                 Ojs.call (Ojs.get_prop_ascii x7331 "findIndex") "apply"
                   [|x7331;((let x7324 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7324 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7326 : Ojs.t) ->
                                          fun (x7327 : Ojs.t) ->
                                            fun (x7328 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7322
                                                   ~value:(Ojs.float_of_js
                                                             x7326)
                                                   ~index:(Ojs.float_of_js
                                                             x7327)
                                                   ~obj:(t_of_js x7328))))|]);
                             (match x7323 with
                              | Some x7325 ->
                                  ignore
                                    (Ojs.call x7324 "push"
                                       [|(any_to_js x7325)|])
                              | None -> ());
                             x7324))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x7339 : 'tags this) ->
        fun
          ~callbackfn:(x7332 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x7333 : any option) ->
            fun () ->
              ignore
                (let x7341 = this_to_js Obj.magic x7339 in
                 Ojs.call (Ojs.get_prop_ascii x7341 "forEach") "apply"
                   [|x7341;((let x7334 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7334 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7336 : Ojs.t) ->
                                          fun (x7337 : Ojs.t) ->
                                            fun (x7338 : Ojs.t) ->
                                              x7332
                                                ~value:(Ojs.float_of_js x7336)
                                                ~index:(Ojs.float_of_js x7337)
                                                ~array:(t_of_js x7338)))|]);
                             (match x7333 with
                              | Some x7335 ->
                                  ignore
                                    (Ojs.call x7334 "push"
                                       [|(any_to_js x7335)|])
                              | None -> ());
                             x7334))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7346 : 'tags this) ->
        fun ~searchElement:(x7342 : float) ->
          fun ?fromIndex:(x7343 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7348 = this_to_js Obj.magic x7346 in
                 Ojs.call (Ojs.get_prop_ascii x7348 "indexOf") "apply"
                   [|x7348;((let x7344 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7344 "push"
                                  [|(Ojs.float_to_js x7342)|]);
                             (match x7343 with
                              | Some x7345 ->
                                  ignore
                                    (Ojs.call x7344 "push"
                                       [|(Ojs.float_to_js x7345)|])
                              | None -> ());
                             x7344))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x7352 : 'tags this) ->
        fun ?separator:(x7349 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x7354 = this_to_js Obj.magic x7352 in
               Ojs.call (Ojs.get_prop_ascii x7354 "join") "apply"
                 [|x7354;((let x7350 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7349 with
                            | Some x7351 ->
                                ignore
                                  (Ojs.call x7350 "push"
                                     [|(Ojs.string_to_js x7351)|])
                            | None -> ());
                           x7350))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7359 : 'tags this) ->
        fun ~searchElement:(x7355 : float) ->
          fun ?fromIndex:(x7356 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7361 = this_to_js Obj.magic x7359 in
                 Ojs.call (Ojs.get_prop_ascii x7361 "lastIndexOf") "apply"
                   [|x7361;((let x7357 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7357 "push"
                                  [|(Ojs.float_to_js x7355)|]);
                             (match x7356 with
                              | Some x7358 ->
                                  ignore
                                    (Ojs.call x7357 "push"
                                       [|(Ojs.float_to_js x7358)|])
                              | None -> ());
                             x7357))|])
    let (get_length : 'tags this -> float) =
      fun (x7362 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7362) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7371 : 'tags this) ->
        fun
          ~callbackfn:(x7364 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x7365 : any option) ->
            fun () ->
              t_of_js
                (let x7373 = this_to_js Obj.magic x7371 in
                 Ojs.call (Ojs.get_prop_ascii x7373 "map") "apply"
                   [|x7373;((let x7366 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7366 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7368 : Ojs.t) ->
                                          fun (x7369 : Ojs.t) ->
                                            fun (x7370 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x7364
                                                   ~value:(Ojs.float_of_js
                                                             x7368)
                                                   ~index:(Ojs.float_of_js
                                                             x7369)
                                                   ~array:(t_of_js x7370))))|]);
                             (match x7365 with
                              | Some x7367 ->
                                  ignore
                                    (Ojs.call x7366 "push"
                                       [|(any_to_js x7367)|])
                              | None -> ());
                             x7366))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7379 : 'tags this) ->
        fun
          ~callbackfn:(x7374 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7379) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x7375 : Ojs.t) ->
                       fun (x7376 : Ojs.t) ->
                         fun (x7377 : Ojs.t) ->
                           fun (x7378 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7374 ~previousValue:(Ojs.float_of_js x7375)
                                  ~currentValue:(Ojs.float_of_js x7376)
                                  ~currentIndex:(Ojs.float_of_js x7377)
                                  ~array:(t_of_js x7378))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7387 : 'tags this) ->
        fun
          ~callbackfn:(x7381 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7386 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7387) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7382 : Ojs.t) ->
                         fun (x7383 : Ojs.t) ->
                           fun (x7384 : Ojs.t) ->
                             fun (x7385 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7381
                                    ~previousValue:(Ojs.float_of_js x7382)
                                    ~currentValue:(Ojs.float_of_js x7383)
                                    ~currentIndex:(Ojs.float_of_js x7384)
                                    ~array:(t_of_js x7385))));(Ojs.float_to_js
                                                                 x7386)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7395 : 'tags this) ->
        fun
          ~callbackfn:(x7389 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7394 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7395) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7390 : Ojs.t) ->
                         fun (x7391 : Ojs.t) ->
                           fun (x7392 : Ojs.t) ->
                             fun (x7393 : Ojs.t) ->
                               Obj.magic
                                 (x7389 ~previousValue:(Obj.magic x7390)
                                    ~currentValue:(Ojs.float_of_js x7391)
                                    ~currentIndex:(Ojs.float_of_js x7392)
                                    ~array:(t_of_js x7393))));(Obj.magic
                                                                 x7394)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7402 : 'tags this) ->
        fun
          ~callbackfn:(x7397 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7402) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x7398 : Ojs.t) ->
                       fun (x7399 : Ojs.t) ->
                         fun (x7400 : Ojs.t) ->
                           fun (x7401 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7397 ~previousValue:(Ojs.float_of_js x7398)
                                  ~currentValue:(Ojs.float_of_js x7399)
                                  ~currentIndex:(Ojs.float_of_js x7400)
                                  ~array:(t_of_js x7401))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7410 : 'tags this) ->
        fun
          ~callbackfn:(x7404 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7409 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7410) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7405 : Ojs.t) ->
                         fun (x7406 : Ojs.t) ->
                           fun (x7407 : Ojs.t) ->
                             fun (x7408 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7404
                                    ~previousValue:(Ojs.float_of_js x7405)
                                    ~currentValue:(Ojs.float_of_js x7406)
                                    ~currentIndex:(Ojs.float_of_js x7407)
                                    ~array:(t_of_js x7408))));(Ojs.float_to_js
                                                                 x7409)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7418 : 'tags this) ->
        fun
          ~callbackfn:(x7412 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7417 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7418) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7413 : Ojs.t) ->
                         fun (x7414 : Ojs.t) ->
                           fun (x7415 : Ojs.t) ->
                             fun (x7416 : Ojs.t) ->
                               Obj.magic
                                 (x7412 ~previousValue:(Obj.magic x7413)
                                    ~currentValue:(Ojs.float_of_js x7414)
                                    ~currentIndex:(Ojs.float_of_js x7415)
                                    ~array:(t_of_js x7416))));(Obj.magic
                                                                 x7417)|])
    let (reverse : 'tags this -> t) =
      fun (x7420 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7420) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x7427 : 'tags this) ->
        fun ~array:(x7422 : float ArrayLike.t) ->
          fun ?offset:(x7423 : float option) ->
            fun () ->
              ignore
                (let x7429 = this_to_js Obj.magic x7427 in
                 Ojs.call (Ojs.get_prop_ascii x7429 "set") "apply"
                   [|x7429;((let x7424 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7424 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x7422)|]);
                             (match x7423 with
                              | Some x7425 ->
                                  ignore
                                    (Ojs.call x7424 "push"
                                       [|(Ojs.float_to_js x7425)|])
                              | None -> ());
                             x7424))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x7435 : 'tags this) ->
        fun ?start:(x7430 : float option) ->
          fun ?end_:(x7431 : float option) ->
            fun () ->
              t_of_js
                (let x7437 = this_to_js Obj.magic x7435 in
                 Ojs.call (Ojs.get_prop_ascii x7437 "slice") "apply"
                   [|x7437;((let x7432 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7430 with
                              | Some x7434 ->
                                  ignore
                                    (Ojs.call x7432 "push"
                                       [|(Ojs.float_to_js x7434)|])
                              | None -> ());
                             (match x7431 with
                              | Some x7433 ->
                                  ignore
                                    (Ojs.call x7432 "push"
                                       [|(Ojs.float_to_js x7433)|])
                              | None -> ());
                             x7432))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7445 : 'tags this) ->
        fun
          ~predicate:(x7438 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7439 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7447 = this_to_js Obj.magic x7445 in
                 Ojs.call (Ojs.get_prop_ascii x7447 "some") "apply"
                   [|x7447;((let x7440 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7440 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7442 : Ojs.t) ->
                                          fun (x7443 : Ojs.t) ->
                                            fun (x7444 : Ojs.t) ->
                                              unknown_to_js
                                                (x7438
                                                   ~value:(Ojs.float_of_js
                                                             x7442)
                                                   ~index:(Ojs.float_of_js
                                                             x7443)
                                                   ~array:(t_of_js x7444))))|]);
                             (match x7439 with
                              | Some x7441 ->
                                  ignore
                                    (Ojs.call x7440 "push"
                                       [|(any_to_js x7441)|])
                              | None -> ());
                             x7440))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x7453 : 'tags this) ->
        fun ?compareFn:(x7448 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x7455 = this_to_js Obj.magic x7453 in
               Ojs.call (Ojs.get_prop_ascii x7455 "sort") "apply"
                 [|x7455;((let x7449 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7448 with
                            | Some x7450 ->
                                ignore
                                  (Ojs.call x7449 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x7451 : Ojs.t) ->
                                             fun (x7452 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x7450
                                                    ~a:(Ojs.float_of_js x7451)
                                                    ~b:(Ojs.float_of_js x7452))))|])
                            | None -> ());
                           x7449))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x7462 : 'tags this) ->
        fun ?begin_:(x7457 : float option) ->
          fun ?end_:(x7458 : float option) ->
            fun () ->
              t_of_js
                (let x7464 = this_to_js Obj.magic x7462 in
                 Ojs.call (Ojs.get_prop_ascii x7464 "subarray") "apply"
                   [|x7464;((let x7459 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7457 with
                              | Some x7461 ->
                                  ignore
                                    (Ojs.call x7459 "push"
                                       [|(Ojs.float_to_js x7461)|])
                              | None -> ());
                             (match x7458 with
                              | Some x7460 ->
                                  ignore
                                    (Ojs.call x7459 "push"
                                       [|(Ojs.float_to_js x7460)|])
                              | None -> ());
                             x7459))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x7465 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7465) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x7467 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7467) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x7469 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7469) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x7471 : 'tags this) ->
        fun (x7473 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x7471)
               (Ojs.float_to_js x7473))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x7474 : 'tags this) ->
        fun (x7476 : float) ->
          fun (x7477 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x7474) (Ojs.float_to_js x7476)
              (Ojs.float_to_js x7477)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint16Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x7478 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             [|(Iterable.t_to_js Ojs.float_to_js x7478)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7480 : float Iterable.t) ->
        fun ?mapfn:(x7481 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x7482 : any option) ->
            fun () ->
              t_of_js
                (let x7489 = Ojs.get_prop_ascii Ojs.global "Uint16Array" in
                 Ojs.call (Ojs.get_prop_ascii x7489 "from") "apply"
                   [|x7489;((let x7483 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7483 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x7480)|]);
                             (match x7481 with
                              | Some x7485 ->
                                  ignore
                                    (Ojs.call x7483 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x7486 : Ojs.t) ->
                                               fun (x7487 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x7485
                                                      ~v:(Ojs.float_of_js
                                                            x7486)
                                                      ~k:(Ojs.float_of_js
                                                            x7487))))|])
                              | None -> ());
                             (match x7482 with
                              | Some x7484 ->
                                  ignore
                                    (Ojs.call x7483 "push"
                                       [|(any_to_js x7484)|])
                              | None -> ());
                             x7483))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x7490 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             [|(Ojs.float_to_js x7490)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x7491 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             [|((match x7491 with
                 | `U1 x7492 -> ArrayLike.t_to_js Ojs.float_to_js x7492
                 | `U2 x7494 -> ArrayBufferLike.t_to_js x7494))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x7495 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x7496 : float option) ->
          fun ?length:(x7497 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "Uint16Array")
                   (let x7498 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x7498 "push"
                         [|(ArrayBufferLike.t_to_js x7495)|]);
                    (match x7496 with
                     | Some x7500 ->
                         ignore
                           (Ojs.call x7498 "push" [|(Ojs.float_to_js x7500)|])
                     | None -> ());
                    (match x7497 with
                     | Some x7499 ->
                         ignore
                           (Ojs.call x7498 "push" [|(Ojs.float_to_js x7499)|])
                     | None -> ());
                    x7498))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Uint16Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x7501 : float list) ->
        t_of_js
          (let x7504 = Ojs.get_prop_ascii Ojs.global "Uint16Array" in
           Ojs.call (Ojs.get_prop_ascii x7504 "of") "apply"
             [|x7504;((let x7502 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x7503 : float) ->
                            ignore
                              (Ojs.call x7502 "push"
                                 [|(Ojs.float_to_js x7503)|])) x7501;
                       x7502))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x7505 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Uint16Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x7505)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7507 : 'T ArrayLike.t) ->
        fun ~mapfn:(x7508 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x7509 : any option) ->
            fun () ->
              t_of_js
                (let x7515 = Ojs.get_prop_ascii Ojs.global "Uint16Array" in
                 Ojs.call (Ojs.get_prop_ascii x7515 "from") "apply"
                   [|x7515;((let x7510 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7510 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x7507)|]);
                             ignore
                               (Ojs.call x7510 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x7512 : Ojs.t) ->
                                          fun (x7513 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x7508 ~v:(Obj.magic x7512)
                                                 ~k:(Ojs.float_of_js x7513))))|]);
                             (match x7509 with
                              | Some x7511 ->
                                  ignore
                                    (Ojs.call x7510 "push"
                                       [|(any_to_js x7511)|])
                              | None -> ());
                             x7510))|])
    let cast_from = Obj.magic
  end
module Int8Array =
  struct
    type t =
      [ `Int8Array  | float ArrayLike.tags_1 | float IterableIterator.tags_1]
        intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x7517 : Ojs.t) -> t_of_js x7517
    and t_0_to_js : t_0 -> Ojs.t = fun (x7516 : t) -> t_to_js x7516
    type tags =
      [ `Int8Array  | float ArrayLike.tags_1 | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Int8Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x7520 : Ojs.t) -> intf_of_js __tags_of_js x7520
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x7518 : __tags intf) -> intf_to_js __tags_to_js x7518
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x7526 : 'tags this) ->
        fun ~searchElement:(x7522 : float) ->
          fun ?fromIndex:(x7523 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7528 = this_to_js Obj.magic x7526 in
                 Ojs.call (Ojs.get_prop_ascii x7528 "includes") "apply"
                   [|x7528;((let x7524 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7524 "push"
                                  [|(Ojs.float_to_js x7522)|]);
                             (match x7523 with
                              | Some x7525 ->
                                  ignore
                                    (Ojs.call x7524 "push"
                                       [|(Ojs.float_to_js x7525)|])
                              | None -> ());
                             x7524))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x7529 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x7531 : Ojs.t) ->
             let x7532 = x7531 in
             ((Ojs.float_of_js (Ojs.array_get x7532 0)),
               (Ojs.float_of_js (Ojs.array_get x7532 1))))
          (Ojs.call (this_to_js Obj.magic x7529) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x7533 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7533) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x7536 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7536) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x7539 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7539)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x7541 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7541) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x7543 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7543) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x7545 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7545) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7552 : 'tags this) ->
        fun ~target:(x7547 : float) ->
          fun ~start:(x7548 : float) ->
            fun ?end_:(x7549 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7554 = this_to_js Obj.magic x7552 in
                   Ojs.call (Ojs.get_prop_ascii x7554 "copyWithin") "apply"
                     [|x7554;((let x7550 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7550 "push"
                                    [|(Ojs.float_to_js x7547)|]);
                               ignore
                                 (Ojs.call x7550 "push"
                                    [|(Ojs.float_to_js x7548)|]);
                               (match x7549 with
                                | Some x7551 ->
                                    ignore
                                      (Ojs.call x7550 "push"
                                         [|(Ojs.float_to_js x7551)|])
                                | None -> ());
                               x7550))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7563 : 'tags this) ->
        fun
          ~predicate:(x7556 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7557 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7565 = this_to_js Obj.magic x7563 in
                 Ojs.call (Ojs.get_prop_ascii x7565 "every") "apply"
                   [|x7565;((let x7558 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7558 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7560 : Ojs.t) ->
                                          fun (x7561 : Ojs.t) ->
                                            fun (x7562 : Ojs.t) ->
                                              unknown_to_js
                                                (x7556
                                                   ~value:(Ojs.float_of_js
                                                             x7560)
                                                   ~index:(Ojs.float_of_js
                                                             x7561)
                                                   ~array:(t_of_js x7562))))|]);
                             (match x7557 with
                              | Some x7559 ->
                                  ignore
                                    (Ojs.call x7558 "push"
                                       [|(any_to_js x7559)|])
                              | None -> ());
                             x7558))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7572 : 'tags this) ->
        fun ~value:(x7566 : float) ->
          fun ?start:(x7567 : float option) ->
            fun ?end_:(x7568 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7574 = this_to_js Obj.magic x7572 in
                   Ojs.call (Ojs.get_prop_ascii x7574 "fill") "apply"
                     [|x7574;((let x7569 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7569 "push"
                                    [|(Ojs.float_to_js x7566)|]);
                               (match x7567 with
                                | Some x7571 ->
                                    ignore
                                      (Ojs.call x7569 "push"
                                         [|(Ojs.float_to_js x7571)|])
                                | None -> ());
                               (match x7568 with
                                | Some x7570 ->
                                    ignore
                                      (Ojs.call x7569 "push"
                                         [|(Ojs.float_to_js x7570)|])
                                | None -> ());
                               x7569))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7583 : 'tags this) ->
        fun ~predicate:(x7576 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x7577 : any option) ->
            fun () ->
              t_of_js
                (let x7585 = this_to_js Obj.magic x7583 in
                 Ojs.call (Ojs.get_prop_ascii x7585 "filter") "apply"
                   [|x7585;((let x7578 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7578 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7580 : Ojs.t) ->
                                          fun (x7581 : Ojs.t) ->
                                            fun (x7582 : Ojs.t) ->
                                              any_to_js
                                                (x7576
                                                   ~value:(Ojs.float_of_js
                                                             x7580)
                                                   ~index:(Ojs.float_of_js
                                                             x7581)
                                                   ~array:(t_of_js x7582))))|]);
                             (match x7577 with
                              | Some x7579 ->
                                  ignore
                                    (Ojs.call x7578 "push"
                                       [|(any_to_js x7579)|])
                              | None -> ());
                             x7578))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x7593 : 'tags this) ->
        fun ~predicate:(x7586 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7587 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x7595 = this_to_js Obj.magic x7593 in
                 Ojs.call (Ojs.get_prop_ascii x7595 "find") "apply"
                   [|x7595;((let x7588 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7588 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7590 : Ojs.t) ->
                                          fun (x7591 : Ojs.t) ->
                                            fun (x7592 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7586
                                                   ~value:(Ojs.float_of_js
                                                             x7590)
                                                   ~index:(Ojs.float_of_js
                                                             x7591)
                                                   ~obj:(t_of_js x7592))))|]);
                             (match x7587 with
                              | Some x7589 ->
                                  ignore
                                    (Ojs.call x7588 "push"
                                       [|(any_to_js x7589)|])
                              | None -> ());
                             x7588))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x7604 : 'tags this) ->
        fun ~predicate:(x7597 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7598 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x7606 = this_to_js Obj.magic x7604 in
                 Ojs.call (Ojs.get_prop_ascii x7606 "findIndex") "apply"
                   [|x7606;((let x7599 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7599 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7601 : Ojs.t) ->
                                          fun (x7602 : Ojs.t) ->
                                            fun (x7603 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7597
                                                   ~value:(Ojs.float_of_js
                                                             x7601)
                                                   ~index:(Ojs.float_of_js
                                                             x7602)
                                                   ~obj:(t_of_js x7603))))|]);
                             (match x7598 with
                              | Some x7600 ->
                                  ignore
                                    (Ojs.call x7599 "push"
                                       [|(any_to_js x7600)|])
                              | None -> ());
                             x7599))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x7614 : 'tags this) ->
        fun
          ~callbackfn:(x7607 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x7608 : any option) ->
            fun () ->
              ignore
                (let x7616 = this_to_js Obj.magic x7614 in
                 Ojs.call (Ojs.get_prop_ascii x7616 "forEach") "apply"
                   [|x7616;((let x7609 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7609 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7611 : Ojs.t) ->
                                          fun (x7612 : Ojs.t) ->
                                            fun (x7613 : Ojs.t) ->
                                              x7607
                                                ~value:(Ojs.float_of_js x7611)
                                                ~index:(Ojs.float_of_js x7612)
                                                ~array:(t_of_js x7613)))|]);
                             (match x7608 with
                              | Some x7610 ->
                                  ignore
                                    (Ojs.call x7609 "push"
                                       [|(any_to_js x7610)|])
                              | None -> ());
                             x7609))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7621 : 'tags this) ->
        fun ~searchElement:(x7617 : float) ->
          fun ?fromIndex:(x7618 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7623 = this_to_js Obj.magic x7621 in
                 Ojs.call (Ojs.get_prop_ascii x7623 "indexOf") "apply"
                   [|x7623;((let x7619 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7619 "push"
                                  [|(Ojs.float_to_js x7617)|]);
                             (match x7618 with
                              | Some x7620 ->
                                  ignore
                                    (Ojs.call x7619 "push"
                                       [|(Ojs.float_to_js x7620)|])
                              | None -> ());
                             x7619))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x7627 : 'tags this) ->
        fun ?separator:(x7624 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x7629 = this_to_js Obj.magic x7627 in
               Ojs.call (Ojs.get_prop_ascii x7629 "join") "apply"
                 [|x7629;((let x7625 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7624 with
                            | Some x7626 ->
                                ignore
                                  (Ojs.call x7625 "push"
                                     [|(Ojs.string_to_js x7626)|])
                            | None -> ());
                           x7625))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7634 : 'tags this) ->
        fun ~searchElement:(x7630 : float) ->
          fun ?fromIndex:(x7631 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7636 = this_to_js Obj.magic x7634 in
                 Ojs.call (Ojs.get_prop_ascii x7636 "lastIndexOf") "apply"
                   [|x7636;((let x7632 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7632 "push"
                                  [|(Ojs.float_to_js x7630)|]);
                             (match x7631 with
                              | Some x7633 ->
                                  ignore
                                    (Ojs.call x7632 "push"
                                       [|(Ojs.float_to_js x7633)|])
                              | None -> ());
                             x7632))|])
    let (get_length : 'tags this -> float) =
      fun (x7637 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7637) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7646 : 'tags this) ->
        fun
          ~callbackfn:(x7639 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x7640 : any option) ->
            fun () ->
              t_of_js
                (let x7648 = this_to_js Obj.magic x7646 in
                 Ojs.call (Ojs.get_prop_ascii x7648 "map") "apply"
                   [|x7648;((let x7641 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7641 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7643 : Ojs.t) ->
                                          fun (x7644 : Ojs.t) ->
                                            fun (x7645 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x7639
                                                   ~value:(Ojs.float_of_js
                                                             x7643)
                                                   ~index:(Ojs.float_of_js
                                                             x7644)
                                                   ~array:(t_of_js x7645))))|]);
                             (match x7640 with
                              | Some x7642 ->
                                  ignore
                                    (Ojs.call x7641 "push"
                                       [|(any_to_js x7642)|])
                              | None -> ());
                             x7641))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7654 : 'tags this) ->
        fun
          ~callbackfn:(x7649 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7654) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x7650 : Ojs.t) ->
                       fun (x7651 : Ojs.t) ->
                         fun (x7652 : Ojs.t) ->
                           fun (x7653 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7649 ~previousValue:(Ojs.float_of_js x7650)
                                  ~currentValue:(Ojs.float_of_js x7651)
                                  ~currentIndex:(Ojs.float_of_js x7652)
                                  ~array:(t_of_js x7653))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7662 : 'tags this) ->
        fun
          ~callbackfn:(x7656 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7661 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7662) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7657 : Ojs.t) ->
                         fun (x7658 : Ojs.t) ->
                           fun (x7659 : Ojs.t) ->
                             fun (x7660 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7656
                                    ~previousValue:(Ojs.float_of_js x7657)
                                    ~currentValue:(Ojs.float_of_js x7658)
                                    ~currentIndex:(Ojs.float_of_js x7659)
                                    ~array:(t_of_js x7660))));(Ojs.float_to_js
                                                                 x7661)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7670 : 'tags this) ->
        fun
          ~callbackfn:(x7664 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7669 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7670) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7665 : Ojs.t) ->
                         fun (x7666 : Ojs.t) ->
                           fun (x7667 : Ojs.t) ->
                             fun (x7668 : Ojs.t) ->
                               Obj.magic
                                 (x7664 ~previousValue:(Obj.magic x7665)
                                    ~currentValue:(Ojs.float_of_js x7666)
                                    ~currentIndex:(Ojs.float_of_js x7667)
                                    ~array:(t_of_js x7668))));(Obj.magic
                                                                 x7669)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7677 : 'tags this) ->
        fun
          ~callbackfn:(x7672 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7677) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x7673 : Ojs.t) ->
                       fun (x7674 : Ojs.t) ->
                         fun (x7675 : Ojs.t) ->
                           fun (x7676 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7672 ~previousValue:(Ojs.float_of_js x7673)
                                  ~currentValue:(Ojs.float_of_js x7674)
                                  ~currentIndex:(Ojs.float_of_js x7675)
                                  ~array:(t_of_js x7676))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7685 : 'tags this) ->
        fun
          ~callbackfn:(x7679 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7684 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7685) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7680 : Ojs.t) ->
                         fun (x7681 : Ojs.t) ->
                           fun (x7682 : Ojs.t) ->
                             fun (x7683 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7679
                                    ~previousValue:(Ojs.float_of_js x7680)
                                    ~currentValue:(Ojs.float_of_js x7681)
                                    ~currentIndex:(Ojs.float_of_js x7682)
                                    ~array:(t_of_js x7683))));(Ojs.float_to_js
                                                                 x7684)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7693 : 'tags this) ->
        fun
          ~callbackfn:(x7687 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7692 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7693) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7688 : Ojs.t) ->
                         fun (x7689 : Ojs.t) ->
                           fun (x7690 : Ojs.t) ->
                             fun (x7691 : Ojs.t) ->
                               Obj.magic
                                 (x7687 ~previousValue:(Obj.magic x7688)
                                    ~currentValue:(Ojs.float_of_js x7689)
                                    ~currentIndex:(Ojs.float_of_js x7690)
                                    ~array:(t_of_js x7691))));(Obj.magic
                                                                 x7692)|])
    let (reverse : 'tags this -> t) =
      fun (x7695 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7695) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x7702 : 'tags this) ->
        fun ~array:(x7697 : float ArrayLike.t) ->
          fun ?offset:(x7698 : float option) ->
            fun () ->
              ignore
                (let x7704 = this_to_js Obj.magic x7702 in
                 Ojs.call (Ojs.get_prop_ascii x7704 "set") "apply"
                   [|x7704;((let x7699 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7699 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x7697)|]);
                             (match x7698 with
                              | Some x7700 ->
                                  ignore
                                    (Ojs.call x7699 "push"
                                       [|(Ojs.float_to_js x7700)|])
                              | None -> ());
                             x7699))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x7710 : 'tags this) ->
        fun ?start:(x7705 : float option) ->
          fun ?end_:(x7706 : float option) ->
            fun () ->
              t_of_js
                (let x7712 = this_to_js Obj.magic x7710 in
                 Ojs.call (Ojs.get_prop_ascii x7712 "slice") "apply"
                   [|x7712;((let x7707 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7705 with
                              | Some x7709 ->
                                  ignore
                                    (Ojs.call x7707 "push"
                                       [|(Ojs.float_to_js x7709)|])
                              | None -> ());
                             (match x7706 with
                              | Some x7708 ->
                                  ignore
                                    (Ojs.call x7707 "push"
                                       [|(Ojs.float_to_js x7708)|])
                              | None -> ());
                             x7707))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7720 : 'tags this) ->
        fun
          ~predicate:(x7713 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7714 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7722 = this_to_js Obj.magic x7720 in
                 Ojs.call (Ojs.get_prop_ascii x7722 "some") "apply"
                   [|x7722;((let x7715 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7715 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7717 : Ojs.t) ->
                                          fun (x7718 : Ojs.t) ->
                                            fun (x7719 : Ojs.t) ->
                                              unknown_to_js
                                                (x7713
                                                   ~value:(Ojs.float_of_js
                                                             x7717)
                                                   ~index:(Ojs.float_of_js
                                                             x7718)
                                                   ~array:(t_of_js x7719))))|]);
                             (match x7714 with
                              | Some x7716 ->
                                  ignore
                                    (Ojs.call x7715 "push"
                                       [|(any_to_js x7716)|])
                              | None -> ());
                             x7715))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x7728 : 'tags this) ->
        fun ?compareFn:(x7723 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x7730 = this_to_js Obj.magic x7728 in
               Ojs.call (Ojs.get_prop_ascii x7730 "sort") "apply"
                 [|x7730;((let x7724 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7723 with
                            | Some x7725 ->
                                ignore
                                  (Ojs.call x7724 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x7726 : Ojs.t) ->
                                             fun (x7727 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x7725
                                                    ~a:(Ojs.float_of_js x7726)
                                                    ~b:(Ojs.float_of_js x7727))))|])
                            | None -> ());
                           x7724))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x7737 : 'tags this) ->
        fun ?begin_:(x7732 : float option) ->
          fun ?end_:(x7733 : float option) ->
            fun () ->
              t_of_js
                (let x7739 = this_to_js Obj.magic x7737 in
                 Ojs.call (Ojs.get_prop_ascii x7739 "subarray") "apply"
                   [|x7739;((let x7734 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7732 with
                              | Some x7736 ->
                                  ignore
                                    (Ojs.call x7734 "push"
                                       [|(Ojs.float_to_js x7736)|])
                              | None -> ());
                             (match x7733 with
                              | Some x7735 ->
                                  ignore
                                    (Ojs.call x7734 "push"
                                       [|(Ojs.float_to_js x7735)|])
                              | None -> ());
                             x7734))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x7740 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7740) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x7742 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x7742) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x7744 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7744) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x7746 : 'tags this) ->
        fun (x7748 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x7746)
               (Ojs.float_to_js x7748))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x7749 : 'tags this) ->
        fun (x7751 : float) ->
          fun (x7752 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x7749) (Ojs.float_to_js x7751)
              (Ojs.float_to_js x7752)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int8Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x7753 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int8Array")
             [|(Iterable.t_to_js Ojs.float_to_js x7753)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7755 : float Iterable.t) ->
        fun ?mapfn:(x7756 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x7757 : any option) ->
            fun () ->
              t_of_js
                (let x7764 = Ojs.get_prop_ascii Ojs.global "Int8Array" in
                 Ojs.call (Ojs.get_prop_ascii x7764 "from") "apply"
                   [|x7764;((let x7758 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7758 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x7755)|]);
                             (match x7756 with
                              | Some x7760 ->
                                  ignore
                                    (Ojs.call x7758 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x7761 : Ojs.t) ->
                                               fun (x7762 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x7760
                                                      ~v:(Ojs.float_of_js
                                                            x7761)
                                                      ~k:(Ojs.float_of_js
                                                            x7762))))|])
                              | None -> ());
                             (match x7757 with
                              | Some x7759 ->
                                  ignore
                                    (Ojs.call x7758 "push"
                                       [|(any_to_js x7759)|])
                              | None -> ());
                             x7758))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int8Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x7765 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int8Array")
             [|(Ojs.float_to_js x7765)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x7766 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int8Array")
             [|((match x7766 with
                 | `U1 x7767 -> ArrayLike.t_to_js Ojs.float_to_js x7767
                 | `U2 x7769 -> ArrayBufferLike.t_to_js x7769))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x7770 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x7771 : float option) ->
          fun ?length:(x7772 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Int8Array")
                   (let x7773 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x7773 "push"
                         [|(ArrayBufferLike.t_to_js x7770)|]);
                    (match x7771 with
                     | Some x7775 ->
                         ignore
                           (Ojs.call x7773 "push" [|(Ojs.float_to_js x7775)|])
                     | None -> ());
                    (match x7772 with
                     | Some x7774 ->
                         ignore
                           (Ojs.call x7773 "push" [|(Ojs.float_to_js x7774)|])
                     | None -> ());
                    x7773))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int8Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x7776 : float list) ->
        t_of_js
          (let x7779 = Ojs.get_prop_ascii Ojs.global "Int8Array" in
           Ojs.call (Ojs.get_prop_ascii x7779 "of") "apply"
             [|x7779;((let x7777 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x7778 : float) ->
                            ignore
                              (Ojs.call x7777 "push"
                                 [|(Ojs.float_to_js x7778)|])) x7776;
                       x7777))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x7780 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Int8Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x7780)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x7782 : 'T ArrayLike.t) ->
        fun ~mapfn:(x7783 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x7784 : any option) ->
            fun () ->
              t_of_js
                (let x7790 = Ojs.get_prop_ascii Ojs.global "Int8Array" in
                 Ojs.call (Ojs.get_prop_ascii x7790 "from") "apply"
                   [|x7790;((let x7785 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7785 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x7782)|]);
                             ignore
                               (Ojs.call x7785 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x7787 : Ojs.t) ->
                                          fun (x7788 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x7783 ~v:(Obj.magic x7787)
                                                 ~k:(Ojs.float_of_js x7788))))|]);
                             (match x7784 with
                              | Some x7786 ->
                                  ignore
                                    (Ojs.call x7785 "push"
                                       [|(any_to_js x7786)|])
                              | None -> ());
                             x7785))|])
    let cast_from = Obj.magic
  end
module Int32Array =
  struct
    type t =
      [ `Int32Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x7792 : Ojs.t) -> t_of_js x7792
    and t_0_to_js : t_0 -> Ojs.t = fun (x7791 : t) -> t_to_js x7791
    type tags =
      [ `Int32Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Int32Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x7795 : Ojs.t) -> intf_of_js __tags_of_js x7795
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x7793 : __tags intf) -> intf_to_js __tags_to_js x7793
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x7801 : 'tags this) ->
        fun ~searchElement:(x7797 : float) ->
          fun ?fromIndex:(x7798 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7803 = this_to_js Obj.magic x7801 in
                 Ojs.call (Ojs.get_prop_ascii x7803 "includes") "apply"
                   [|x7803;((let x7799 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7799 "push"
                                  [|(Ojs.float_to_js x7797)|]);
                             (match x7798 with
                              | Some x7800 ->
                                  ignore
                                    (Ojs.call x7799 "push"
                                       [|(Ojs.float_to_js x7800)|])
                              | None -> ());
                             x7799))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x7804 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x7806 : Ojs.t) ->
             let x7807 = x7806 in
             ((Ojs.float_of_js (Ojs.array_get x7807 0)),
               (Ojs.float_of_js (Ojs.array_get x7807 1))))
          (Ojs.call (this_to_js Obj.magic x7804) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x7808 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7808) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x7811 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x7811) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x7814 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7814)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x7816 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7816) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x7818 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7818) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x7820 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7820) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7827 : 'tags this) ->
        fun ~target:(x7822 : float) ->
          fun ~start:(x7823 : float) ->
            fun ?end_:(x7824 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7829 = this_to_js Obj.magic x7827 in
                   Ojs.call (Ojs.get_prop_ascii x7829 "copyWithin") "apply"
                     [|x7829;((let x7825 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7825 "push"
                                    [|(Ojs.float_to_js x7822)|]);
                               ignore
                                 (Ojs.call x7825 "push"
                                    [|(Ojs.float_to_js x7823)|]);
                               (match x7824 with
                                | Some x7826 ->
                                    ignore
                                      (Ojs.call x7825 "push"
                                         [|(Ojs.float_to_js x7826)|])
                                | None -> ());
                               x7825))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7838 : 'tags this) ->
        fun
          ~predicate:(x7831 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7832 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7840 = this_to_js Obj.magic x7838 in
                 Ojs.call (Ojs.get_prop_ascii x7840 "every") "apply"
                   [|x7840;((let x7833 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7833 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7835 : Ojs.t) ->
                                          fun (x7836 : Ojs.t) ->
                                            fun (x7837 : Ojs.t) ->
                                              unknown_to_js
                                                (x7831
                                                   ~value:(Ojs.float_of_js
                                                             x7835)
                                                   ~index:(Ojs.float_of_js
                                                             x7836)
                                                   ~array:(t_of_js x7837))))|]);
                             (match x7832 with
                              | Some x7834 ->
                                  ignore
                                    (Ojs.call x7833 "push"
                                       [|(any_to_js x7834)|])
                              | None -> ());
                             x7833))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x7847 : 'tags this) ->
        fun ~value:(x7841 : float) ->
          fun ?start:(x7842 : float option) ->
            fun ?end_:(x7843 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x7849 = this_to_js Obj.magic x7847 in
                   Ojs.call (Ojs.get_prop_ascii x7849 "fill") "apply"
                     [|x7849;((let x7844 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x7844 "push"
                                    [|(Ojs.float_to_js x7841)|]);
                               (match x7842 with
                                | Some x7846 ->
                                    ignore
                                      (Ojs.call x7844 "push"
                                         [|(Ojs.float_to_js x7846)|])
                                | None -> ());
                               (match x7843 with
                                | Some x7845 ->
                                    ignore
                                      (Ojs.call x7844 "push"
                                         [|(Ojs.float_to_js x7845)|])
                                | None -> ());
                               x7844))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7858 : 'tags this) ->
        fun ~predicate:(x7851 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x7852 : any option) ->
            fun () ->
              t_of_js
                (let x7860 = this_to_js Obj.magic x7858 in
                 Ojs.call (Ojs.get_prop_ascii x7860 "filter") "apply"
                   [|x7860;((let x7853 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7853 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7855 : Ojs.t) ->
                                          fun (x7856 : Ojs.t) ->
                                            fun (x7857 : Ojs.t) ->
                                              any_to_js
                                                (x7851
                                                   ~value:(Ojs.float_of_js
                                                             x7855)
                                                   ~index:(Ojs.float_of_js
                                                             x7856)
                                                   ~array:(t_of_js x7857))))|]);
                             (match x7852 with
                              | Some x7854 ->
                                  ignore
                                    (Ojs.call x7853 "push"
                                       [|(any_to_js x7854)|])
                              | None -> ());
                             x7853))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x7868 : 'tags this) ->
        fun ~predicate:(x7861 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7862 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x7870 = this_to_js Obj.magic x7868 in
                 Ojs.call (Ojs.get_prop_ascii x7870 "find") "apply"
                   [|x7870;((let x7863 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7863 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7865 : Ojs.t) ->
                                          fun (x7866 : Ojs.t) ->
                                            fun (x7867 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7861
                                                   ~value:(Ojs.float_of_js
                                                             x7865)
                                                   ~index:(Ojs.float_of_js
                                                             x7866)
                                                   ~obj:(t_of_js x7867))))|]);
                             (match x7862 with
                              | Some x7864 ->
                                  ignore
                                    (Ojs.call x7863 "push"
                                       [|(any_to_js x7864)|])
                              | None -> ());
                             x7863))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x7879 : 'tags this) ->
        fun ~predicate:(x7872 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x7873 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x7881 = this_to_js Obj.magic x7879 in
                 Ojs.call (Ojs.get_prop_ascii x7881 "findIndex") "apply"
                   [|x7881;((let x7874 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7874 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7876 : Ojs.t) ->
                                          fun (x7877 : Ojs.t) ->
                                            fun (x7878 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x7872
                                                   ~value:(Ojs.float_of_js
                                                             x7876)
                                                   ~index:(Ojs.float_of_js
                                                             x7877)
                                                   ~obj:(t_of_js x7878))))|]);
                             (match x7873 with
                              | Some x7875 ->
                                  ignore
                                    (Ojs.call x7874 "push"
                                       [|(any_to_js x7875)|])
                              | None -> ());
                             x7874))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x7889 : 'tags this) ->
        fun
          ~callbackfn:(x7882 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x7883 : any option) ->
            fun () ->
              ignore
                (let x7891 = this_to_js Obj.magic x7889 in
                 Ojs.call (Ojs.get_prop_ascii x7891 "forEach") "apply"
                   [|x7891;((let x7884 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7884 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7886 : Ojs.t) ->
                                          fun (x7887 : Ojs.t) ->
                                            fun (x7888 : Ojs.t) ->
                                              x7882
                                                ~value:(Ojs.float_of_js x7886)
                                                ~index:(Ojs.float_of_js x7887)
                                                ~array:(t_of_js x7888)))|]);
                             (match x7883 with
                              | Some x7885 ->
                                  ignore
                                    (Ojs.call x7884 "push"
                                       [|(any_to_js x7885)|])
                              | None -> ());
                             x7884))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7896 : 'tags this) ->
        fun ~searchElement:(x7892 : float) ->
          fun ?fromIndex:(x7893 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7898 = this_to_js Obj.magic x7896 in
                 Ojs.call (Ojs.get_prop_ascii x7898 "indexOf") "apply"
                   [|x7898;((let x7894 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7894 "push"
                                  [|(Ojs.float_to_js x7892)|]);
                             (match x7893 with
                              | Some x7895 ->
                                  ignore
                                    (Ojs.call x7894 "push"
                                       [|(Ojs.float_to_js x7895)|])
                              | None -> ());
                             x7894))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x7902 : 'tags this) ->
        fun ?separator:(x7899 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x7904 = this_to_js Obj.magic x7902 in
               Ojs.call (Ojs.get_prop_ascii x7904 "join") "apply"
                 [|x7904;((let x7900 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7899 with
                            | Some x7901 ->
                                ignore
                                  (Ojs.call x7900 "push"
                                     [|(Ojs.string_to_js x7901)|])
                            | None -> ());
                           x7900))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x7909 : 'tags this) ->
        fun ~searchElement:(x7905 : float) ->
          fun ?fromIndex:(x7906 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x7911 = this_to_js Obj.magic x7909 in
                 Ojs.call (Ojs.get_prop_ascii x7911 "lastIndexOf") "apply"
                   [|x7911;((let x7907 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7907 "push"
                                  [|(Ojs.float_to_js x7905)|]);
                             (match x7906 with
                              | Some x7908 ->
                                  ignore
                                    (Ojs.call x7907 "push"
                                       [|(Ojs.float_to_js x7908)|])
                              | None -> ());
                             x7907))|])
    let (get_length : 'tags this -> float) =
      fun (x7912 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x7912) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x7921 : 'tags this) ->
        fun
          ~callbackfn:(x7914 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x7915 : any option) ->
            fun () ->
              t_of_js
                (let x7923 = this_to_js Obj.magic x7921 in
                 Ojs.call (Ojs.get_prop_ascii x7923 "map") "apply"
                   [|x7923;((let x7916 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7916 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7918 : Ojs.t) ->
                                          fun (x7919 : Ojs.t) ->
                                            fun (x7920 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x7914
                                                   ~value:(Ojs.float_of_js
                                                             x7918)
                                                   ~index:(Ojs.float_of_js
                                                             x7919)
                                                   ~array:(t_of_js x7920))))|]);
                             (match x7915 with
                              | Some x7917 ->
                                  ignore
                                    (Ojs.call x7916 "push"
                                       [|(any_to_js x7917)|])
                              | None -> ());
                             x7916))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7929 : 'tags this) ->
        fun
          ~callbackfn:(x7924 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7929) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x7925 : Ojs.t) ->
                       fun (x7926 : Ojs.t) ->
                         fun (x7927 : Ojs.t) ->
                           fun (x7928 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7924 ~previousValue:(Ojs.float_of_js x7925)
                                  ~currentValue:(Ojs.float_of_js x7926)
                                  ~currentIndex:(Ojs.float_of_js x7927)
                                  ~array:(t_of_js x7928))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7937 : 'tags this) ->
        fun
          ~callbackfn:(x7931 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7936 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7937) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7932 : Ojs.t) ->
                         fun (x7933 : Ojs.t) ->
                           fun (x7934 : Ojs.t) ->
                             fun (x7935 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7931
                                    ~previousValue:(Ojs.float_of_js x7932)
                                    ~currentValue:(Ojs.float_of_js x7933)
                                    ~currentIndex:(Ojs.float_of_js x7934)
                                    ~array:(t_of_js x7935))));(Ojs.float_to_js
                                                                 x7936)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7945 : 'tags this) ->
        fun
          ~callbackfn:(x7939 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7944 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7945) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x7940 : Ojs.t) ->
                         fun (x7941 : Ojs.t) ->
                           fun (x7942 : Ojs.t) ->
                             fun (x7943 : Ojs.t) ->
                               Obj.magic
                                 (x7939 ~previousValue:(Obj.magic x7940)
                                    ~currentValue:(Ojs.float_of_js x7941)
                                    ~currentIndex:(Ojs.float_of_js x7942)
                                    ~array:(t_of_js x7943))));(Obj.magic
                                                                 x7944)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x7952 : 'tags this) ->
        fun
          ~callbackfn:(x7947 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x7952) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x7948 : Ojs.t) ->
                       fun (x7949 : Ojs.t) ->
                         fun (x7950 : Ojs.t) ->
                           fun (x7951 : Ojs.t) ->
                             Ojs.float_to_js
                               (x7947 ~previousValue:(Ojs.float_of_js x7948)
                                  ~currentValue:(Ojs.float_of_js x7949)
                                  ~currentIndex:(Ojs.float_of_js x7950)
                                  ~array:(t_of_js x7951))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x7960 : 'tags this) ->
        fun
          ~callbackfn:(x7954 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x7959 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x7960) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7955 : Ojs.t) ->
                         fun (x7956 : Ojs.t) ->
                           fun (x7957 : Ojs.t) ->
                             fun (x7958 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x7954
                                    ~previousValue:(Ojs.float_of_js x7955)
                                    ~currentValue:(Ojs.float_of_js x7956)
                                    ~currentIndex:(Ojs.float_of_js x7957)
                                    ~array:(t_of_js x7958))));(Ojs.float_to_js
                                                                 x7959)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x7968 : 'tags this) ->
        fun
          ~callbackfn:(x7962 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x7967 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x7968) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x7963 : Ojs.t) ->
                         fun (x7964 : Ojs.t) ->
                           fun (x7965 : Ojs.t) ->
                             fun (x7966 : Ojs.t) ->
                               Obj.magic
                                 (x7962 ~previousValue:(Obj.magic x7963)
                                    ~currentValue:(Ojs.float_of_js x7964)
                                    ~currentIndex:(Ojs.float_of_js x7965)
                                    ~array:(t_of_js x7966))));(Obj.magic
                                                                 x7967)|])
    let (reverse : 'tags this -> t) =
      fun (x7970 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x7970) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x7977 : 'tags this) ->
        fun ~array:(x7972 : float ArrayLike.t) ->
          fun ?offset:(x7973 : float option) ->
            fun () ->
              ignore
                (let x7979 = this_to_js Obj.magic x7977 in
                 Ojs.call (Ojs.get_prop_ascii x7979 "set") "apply"
                   [|x7979;((let x7974 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7974 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x7972)|]);
                             (match x7973 with
                              | Some x7975 ->
                                  ignore
                                    (Ojs.call x7974 "push"
                                       [|(Ojs.float_to_js x7975)|])
                              | None -> ());
                             x7974))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x7985 : 'tags this) ->
        fun ?start:(x7980 : float option) ->
          fun ?end_:(x7981 : float option) ->
            fun () ->
              t_of_js
                (let x7987 = this_to_js Obj.magic x7985 in
                 Ojs.call (Ojs.get_prop_ascii x7987 "slice") "apply"
                   [|x7987;((let x7982 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x7980 with
                              | Some x7984 ->
                                  ignore
                                    (Ojs.call x7982 "push"
                                       [|(Ojs.float_to_js x7984)|])
                              | None -> ());
                             (match x7981 with
                              | Some x7983 ->
                                  ignore
                                    (Ojs.call x7982 "push"
                                       [|(Ojs.float_to_js x7983)|])
                              | None -> ());
                             x7982))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x7995 : 'tags this) ->
        fun
          ~predicate:(x7988 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x7989 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x7997 = this_to_js Obj.magic x7995 in
                 Ojs.call (Ojs.get_prop_ascii x7997 "some") "apply"
                   [|x7997;((let x7990 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x7990 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x7992 : Ojs.t) ->
                                          fun (x7993 : Ojs.t) ->
                                            fun (x7994 : Ojs.t) ->
                                              unknown_to_js
                                                (x7988
                                                   ~value:(Ojs.float_of_js
                                                             x7992)
                                                   ~index:(Ojs.float_of_js
                                                             x7993)
                                                   ~array:(t_of_js x7994))))|]);
                             (match x7989 with
                              | Some x7991 ->
                                  ignore
                                    (Ojs.call x7990 "push"
                                       [|(any_to_js x7991)|])
                              | None -> ());
                             x7990))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x8003 : 'tags this) ->
        fun ?compareFn:(x7998 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x8005 = this_to_js Obj.magic x8003 in
               Ojs.call (Ojs.get_prop_ascii x8005 "sort") "apply"
                 [|x8005;((let x7999 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x7998 with
                            | Some x8000 ->
                                ignore
                                  (Ojs.call x7999 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x8001 : Ojs.t) ->
                                             fun (x8002 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x8000
                                                    ~a:(Ojs.float_of_js x8001)
                                                    ~b:(Ojs.float_of_js x8002))))|])
                            | None -> ());
                           x7999))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x8012 : 'tags this) ->
        fun ?begin_:(x8007 : float option) ->
          fun ?end_:(x8008 : float option) ->
            fun () ->
              t_of_js
                (let x8014 = this_to_js Obj.magic x8012 in
                 Ojs.call (Ojs.get_prop_ascii x8014 "subarray") "apply"
                   [|x8014;((let x8009 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8007 with
                              | Some x8011 ->
                                  ignore
                                    (Ojs.call x8009 "push"
                                       [|(Ojs.float_to_js x8011)|])
                              | None -> ());
                             (match x8008 with
                              | Some x8010 ->
                                  ignore
                                    (Ojs.call x8009 "push"
                                       [|(Ojs.float_to_js x8010)|])
                              | None -> ());
                             x8009))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x8015 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8015) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x8017 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8017) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x8019 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x8019) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x8021 : 'tags this) ->
        fun (x8023 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x8021)
               (Ojs.float_to_js x8023))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x8024 : 'tags this) ->
        fun (x8026 : float) ->
          fun (x8027 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x8024) (Ojs.float_to_js x8026)
              (Ojs.float_to_js x8027)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int32Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x8028 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int32Array")
             [|(Iterable.t_to_js Ojs.float_to_js x8028)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x8030 : float Iterable.t) ->
        fun ?mapfn:(x8031 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x8032 : any option) ->
            fun () ->
              t_of_js
                (let x8039 = Ojs.get_prop_ascii Ojs.global "Int32Array" in
                 Ojs.call (Ojs.get_prop_ascii x8039 "from") "apply"
                   [|x8039;((let x8033 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8033 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x8030)|]);
                             (match x8031 with
                              | Some x8035 ->
                                  ignore
                                    (Ojs.call x8033 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x8036 : Ojs.t) ->
                                               fun (x8037 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x8035
                                                      ~v:(Ojs.float_of_js
                                                            x8036)
                                                      ~k:(Ojs.float_of_js
                                                            x8037))))|])
                              | None -> ());
                             (match x8032 with
                              | Some x8034 ->
                                  ignore
                                    (Ojs.call x8033 "push"
                                       [|(any_to_js x8034)|])
                              | None -> ());
                             x8033))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int32Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x8040 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int32Array")
             [|(Ojs.float_to_js x8040)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x8041 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int32Array")
             [|((match x8041 with
                 | `U1 x8042 -> ArrayLike.t_to_js Ojs.float_to_js x8042
                 | `U2 x8044 -> ArrayBufferLike.t_to_js x8044))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x8045 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x8046 : float option) ->
          fun ?length:(x8047 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Int32Array")
                   (let x8048 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x8048 "push"
                         [|(ArrayBufferLike.t_to_js x8045)|]);
                    (match x8046 with
                     | Some x8050 ->
                         ignore
                           (Ojs.call x8048 "push" [|(Ojs.float_to_js x8050)|])
                     | None -> ());
                    (match x8047 with
                     | Some x8049 ->
                         ignore
                           (Ojs.call x8048 "push" [|(Ojs.float_to_js x8049)|])
                     | None -> ());
                    x8048))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int32Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x8051 : float list) ->
        t_of_js
          (let x8054 = Ojs.get_prop_ascii Ojs.global "Int32Array" in
           Ojs.call (Ojs.get_prop_ascii x8054 "of") "apply"
             [|x8054;((let x8052 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x8053 : float) ->
                            ignore
                              (Ojs.call x8052 "push"
                                 [|(Ojs.float_to_js x8053)|])) x8051;
                       x8052))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x8055 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Int32Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x8055)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x8057 : 'T ArrayLike.t) ->
        fun ~mapfn:(x8058 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x8059 : any option) ->
            fun () ->
              t_of_js
                (let x8065 = Ojs.get_prop_ascii Ojs.global "Int32Array" in
                 Ojs.call (Ojs.get_prop_ascii x8065 "from") "apply"
                   [|x8065;((let x8060 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8060 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x8057)|]);
                             ignore
                               (Ojs.call x8060 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x8062 : Ojs.t) ->
                                          fun (x8063 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x8058 ~v:(Obj.magic x8062)
                                                 ~k:(Ojs.float_of_js x8063))))|]);
                             (match x8059 with
                              | Some x8061 ->
                                  ignore
                                    (Ojs.call x8060 "push"
                                       [|(any_to_js x8061)|])
                              | None -> ());
                             x8060))|])
    let cast_from = Obj.magic
  end
module Int16Array =
  struct
    type t =
      [ `Int16Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8067 : Ojs.t) -> t_of_js x8067
    and t_0_to_js : t_0 -> Ojs.t = fun (x8066 : t) -> t_to_js x8066
    type tags =
      [ `Int16Array  | float ArrayLike.tags_1
      | float IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `Int16Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x8070 : Ojs.t) -> intf_of_js __tags_of_js x8070
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x8068 : __tags intf) -> intf_to_js __tags_to_js x8068
    let (includes :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> bool)
      =
      fun (x8076 : 'tags this) ->
        fun ~searchElement:(x8072 : float) ->
          fun ?fromIndex:(x8073 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8078 = this_to_js Obj.magic x8076 in
                 Ojs.call (Ojs.get_prop_ascii x8078 "includes") "apply"
                   [|x8078;((let x8074 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8074 "push"
                                  [|(Ojs.float_to_js x8072)|]);
                             (match x8073 with
                              | Some x8075 ->
                                  ignore
                                    (Ojs.call x8074 "push"
                                       [|(Ojs.float_to_js x8075)|])
                              | None -> ());
                             x8074))|])
    let (entries : 'tags this -> (float * float) IterableIterator.t) =
      fun (x8079 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x8081 : Ojs.t) ->
             let x8082 = x8081 in
             ((Ojs.float_of_js (Ojs.array_get x8082 0)),
               (Ojs.float_of_js (Ojs.array_get x8082 1))))
          (Ojs.call (this_to_js Obj.magic x8079) "entries" [||])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x8083 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x8083) "keys" [||])
    let (values : 'tags this -> float IterableIterator.t) =
      fun (x8086 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x8086) "values" [||])
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x8089 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8089)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x8091 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8091) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x8093 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8093) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x8095 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8095) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x8102 : 'tags this) ->
        fun ~target:(x8097 : float) ->
          fun ~start:(x8098 : float) ->
            fun ?end_:(x8099 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x8104 = this_to_js Obj.magic x8102 in
                   Ojs.call (Ojs.get_prop_ascii x8104 "copyWithin") "apply"
                     [|x8104;((let x8100 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x8100 "push"
                                    [|(Ojs.float_to_js x8097)|]);
                               ignore
                                 (Ojs.call x8100 "push"
                                    [|(Ojs.float_to_js x8098)|]);
                               (match x8099 with
                                | Some x8101 ->
                                    ignore
                                      (Ojs.call x8100 "push"
                                         [|(Ojs.float_to_js x8101)|])
                                | None -> ());
                               x8100))|])
    let (every :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x8113 : 'tags this) ->
        fun
          ~predicate:(x8106 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x8107 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8115 = this_to_js Obj.magic x8113 in
                 Ojs.call (Ojs.get_prop_ascii x8115 "every") "apply"
                   [|x8115;((let x8108 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8108 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8110 : Ojs.t) ->
                                          fun (x8111 : Ojs.t) ->
                                            fun (x8112 : Ojs.t) ->
                                              unknown_to_js
                                                (x8106
                                                   ~value:(Ojs.float_of_js
                                                             x8110)
                                                   ~index:(Ojs.float_of_js
                                                             x8111)
                                                   ~array:(t_of_js x8112))))|]);
                             (match x8107 with
                              | Some x8109 ->
                                  ignore
                                    (Ojs.call x8108 "push"
                                       [|(any_to_js x8109)|])
                              | None -> ());
                             x8108))|])
    let (fill :
      'tags this ->
        value:float -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x8122 : 'tags this) ->
        fun ~value:(x8116 : float) ->
          fun ?start:(x8117 : float option) ->
            fun ?end_:(x8118 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x8124 = this_to_js Obj.magic x8122 in
                   Ojs.call (Ojs.get_prop_ascii x8124 "fill") "apply"
                     [|x8124;((let x8119 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x8119 "push"
                                    [|(Ojs.float_to_js x8116)|]);
                               (match x8117 with
                                | Some x8121 ->
                                    ignore
                                      (Ojs.call x8119 "push"
                                         [|(Ojs.float_to_js x8121)|])
                                | None -> ());
                               (match x8118 with
                                | Some x8120 ->
                                    ignore
                                      (Ojs.call x8119 "push"
                                         [|(Ojs.float_to_js x8120)|])
                                | None -> ());
                               x8119))|])
    let (filter :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x8133 : 'tags this) ->
        fun ~predicate:(x8126 : value:float -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x8127 : any option) ->
            fun () ->
              t_of_js
                (let x8135 = this_to_js Obj.magic x8133 in
                 Ojs.call (Ojs.get_prop_ascii x8135 "filter") "apply"
                   [|x8135;((let x8128 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8128 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8130 : Ojs.t) ->
                                          fun (x8131 : Ojs.t) ->
                                            fun (x8132 : Ojs.t) ->
                                              any_to_js
                                                (x8126
                                                   ~value:(Ojs.float_of_js
                                                             x8130)
                                                   ~index:(Ojs.float_of_js
                                                             x8131)
                                                   ~array:(t_of_js x8132))))|]);
                             (match x8127 with
                              | Some x8129 ->
                                  ignore
                                    (Ojs.call x8128 "push"
                                       [|(any_to_js x8129)|])
                              | None -> ());
                             x8128))|])
    let (find :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float option)
      =
      fun (x8143 : 'tags this) ->
        fun ~predicate:(x8136 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x8137 : any option) ->
            fun () ->
              Ojs.option_of_js Ojs.float_of_js
                (let x8145 = this_to_js Obj.magic x8143 in
                 Ojs.call (Ojs.get_prop_ascii x8145 "find") "apply"
                   [|x8145;((let x8138 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8138 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8140 : Ojs.t) ->
                                          fun (x8141 : Ojs.t) ->
                                            fun (x8142 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8136
                                                   ~value:(Ojs.float_of_js
                                                             x8140)
                                                   ~index:(Ojs.float_of_js
                                                             x8141)
                                                   ~obj:(t_of_js x8142))))|]);
                             (match x8137 with
                              | Some x8139 ->
                                  ignore
                                    (Ojs.call x8138 "push"
                                       [|(any_to_js x8139)|])
                              | None -> ());
                             x8138))|])
    let (findIndex :
      'tags this ->
        predicate:(value:float -> index:float -> obj:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x8154 : 'tags this) ->
        fun ~predicate:(x8147 : value:float -> index:float -> obj:t -> bool)
          ->
          fun ?thisArg:(x8148 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x8156 = this_to_js Obj.magic x8154 in
                 Ojs.call (Ojs.get_prop_ascii x8156 "findIndex") "apply"
                   [|x8156;((let x8149 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8149 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8151 : Ojs.t) ->
                                          fun (x8152 : Ojs.t) ->
                                            fun (x8153 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8147
                                                   ~value:(Ojs.float_of_js
                                                             x8151)
                                                   ~index:(Ojs.float_of_js
                                                             x8152)
                                                   ~obj:(t_of_js x8153))))|]);
                             (match x8148 with
                              | Some x8150 ->
                                  ignore
                                    (Ojs.call x8149 "push"
                                       [|(any_to_js x8150)|])
                              | None -> ());
                             x8149))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x8164 : 'tags this) ->
        fun
          ~callbackfn:(x8157 : value:float -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x8158 : any option) ->
            fun () ->
              ignore
                (let x8166 = this_to_js Obj.magic x8164 in
                 Ojs.call (Ojs.get_prop_ascii x8166 "forEach") "apply"
                   [|x8166;((let x8159 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8159 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8161 : Ojs.t) ->
                                          fun (x8162 : Ojs.t) ->
                                            fun (x8163 : Ojs.t) ->
                                              x8157
                                                ~value:(Ojs.float_of_js x8161)
                                                ~index:(Ojs.float_of_js x8162)
                                                ~array:(t_of_js x8163)))|]);
                             (match x8158 with
                              | Some x8160 ->
                                  ignore
                                    (Ojs.call x8159 "push"
                                       [|(any_to_js x8160)|])
                              | None -> ());
                             x8159))|])
    let (indexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x8171 : 'tags this) ->
        fun ~searchElement:(x8167 : float) ->
          fun ?fromIndex:(x8168 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x8173 = this_to_js Obj.magic x8171 in
                 Ojs.call (Ojs.get_prop_ascii x8173 "indexOf") "apply"
                   [|x8173;((let x8169 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8169 "push"
                                  [|(Ojs.float_to_js x8167)|]);
                             (match x8168 with
                              | Some x8170 ->
                                  ignore
                                    (Ojs.call x8169 "push"
                                       [|(Ojs.float_to_js x8170)|])
                              | None -> ());
                             x8169))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x8177 : 'tags this) ->
        fun ?separator:(x8174 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x8179 = this_to_js Obj.magic x8177 in
               Ojs.call (Ojs.get_prop_ascii x8179 "join") "apply"
                 [|x8179;((let x8175 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8174 with
                            | Some x8176 ->
                                ignore
                                  (Ojs.call x8175 "push"
                                     [|(Ojs.string_to_js x8176)|])
                            | None -> ());
                           x8175))|])
    let (lastIndexOf :
      'tags this -> searchElement:float -> ?fromIndex:float -> unit -> float)
      =
      fun (x8184 : 'tags this) ->
        fun ~searchElement:(x8180 : float) ->
          fun ?fromIndex:(x8181 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x8186 = this_to_js Obj.magic x8184 in
                 Ojs.call (Ojs.get_prop_ascii x8186 "lastIndexOf") "apply"
                   [|x8186;((let x8182 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8182 "push"
                                  [|(Ojs.float_to_js x8180)|]);
                             (match x8181 with
                              | Some x8183 ->
                                  ignore
                                    (Ojs.call x8182 "push"
                                       [|(Ojs.float_to_js x8183)|])
                              | None -> ());
                             x8182))|])
    let (get_length : 'tags this -> float) =
      fun (x8187 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8187) "length")
    let (map :
      'tags this ->
        callbackfn:(value:float -> index:float -> array:t -> float) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x8196 : 'tags this) ->
        fun
          ~callbackfn:(x8189 :
                        value:float -> index:float -> array:t -> float)
          ->
          fun ?thisArg:(x8190 : any option) ->
            fun () ->
              t_of_js
                (let x8198 = this_to_js Obj.magic x8196 in
                 Ojs.call (Ojs.get_prop_ascii x8198 "map") "apply"
                   [|x8198;((let x8191 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8191 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8193 : Ojs.t) ->
                                          fun (x8194 : Ojs.t) ->
                                            fun (x8195 : Ojs.t) ->
                                              Ojs.float_to_js
                                                (x8189
                                                   ~value:(Ojs.float_of_js
                                                             x8193)
                                                   ~index:(Ojs.float_of_js
                                                             x8194)
                                                   ~array:(t_of_js x8195))))|]);
                             (match x8190 with
                              | Some x8192 ->
                                  ignore
                                    (Ojs.call x8191 "push"
                                       [|(any_to_js x8192)|])
                              | None -> ());
                             x8191))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x8204 : 'tags this) ->
        fun
          ~callbackfn:(x8199 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x8204) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x8200 : Ojs.t) ->
                       fun (x8201 : Ojs.t) ->
                         fun (x8202 : Ojs.t) ->
                           fun (x8203 : Ojs.t) ->
                             Ojs.float_to_js
                               (x8199 ~previousValue:(Ojs.float_of_js x8200)
                                  ~currentValue:(Ojs.float_of_js x8201)
                                  ~currentIndex:(Ojs.float_of_js x8202)
                                  ~array:(t_of_js x8203))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x8212 : 'tags this) ->
        fun
          ~callbackfn:(x8206 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x8211 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x8212) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x8207 : Ojs.t) ->
                         fun (x8208 : Ojs.t) ->
                           fun (x8209 : Ojs.t) ->
                             fun (x8210 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x8206
                                    ~previousValue:(Ojs.float_of_js x8207)
                                    ~currentValue:(Ojs.float_of_js x8208)
                                    ~currentIndex:(Ojs.float_of_js x8209)
                                    ~array:(t_of_js x8210))));(Ojs.float_to_js
                                                                 x8211)|])
    let (reduce'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x8220 : 'tags this) ->
        fun
          ~callbackfn:(x8214 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x8219 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x8220) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x8215 : Ojs.t) ->
                         fun (x8216 : Ojs.t) ->
                           fun (x8217 : Ojs.t) ->
                             fun (x8218 : Ojs.t) ->
                               Obj.magic
                                 (x8214 ~previousValue:(Obj.magic x8215)
                                    ~currentValue:(Ojs.float_of_js x8216)
                                    ~currentIndex:(Ojs.float_of_js x8217)
                                    ~array:(t_of_js x8218))));(Obj.magic
                                                                 x8219)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> float)
      =
      fun (x8227 : 'tags this) ->
        fun
          ~callbackfn:(x8222 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          Ojs.float_of_js
            (Ojs.call (this_to_js Obj.magic x8227) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x8223 : Ojs.t) ->
                       fun (x8224 : Ojs.t) ->
                         fun (x8225 : Ojs.t) ->
                           fun (x8226 : Ojs.t) ->
                             Ojs.float_to_js
                               (x8222 ~previousValue:(Ojs.float_of_js x8223)
                                  ~currentValue:(Ojs.float_of_js x8224)
                                  ~currentIndex:(Ojs.float_of_js x8225)
                                  ~array:(t_of_js x8226))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:float ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> float)
          -> initialValue:float -> float)
      =
      fun (x8235 : 'tags this) ->
        fun
          ~callbackfn:(x8229 :
                        previousValue:float ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> float)
          ->
          fun ~initialValue:(x8234 : float) ->
            Ojs.float_of_js
              (Ojs.call (this_to_js Obj.magic x8235) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x8230 : Ojs.t) ->
                         fun (x8231 : Ojs.t) ->
                           fun (x8232 : Ojs.t) ->
                             fun (x8233 : Ojs.t) ->
                               Ojs.float_to_js
                                 (x8229
                                    ~previousValue:(Ojs.float_of_js x8230)
                                    ~currentValue:(Ojs.float_of_js x8231)
                                    ~currentIndex:(Ojs.float_of_js x8232)
                                    ~array:(t_of_js x8233))));(Ojs.float_to_js
                                                                 x8234)|])
    let (reduceRight'' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:float ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x8243 : 'tags this) ->
        fun
          ~callbackfn:(x8237 :
                        previousValue:'U ->
                          currentValue:float ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x8242 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x8243) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x8238 : Ojs.t) ->
                         fun (x8239 : Ojs.t) ->
                           fun (x8240 : Ojs.t) ->
                             fun (x8241 : Ojs.t) ->
                               Obj.magic
                                 (x8237 ~previousValue:(Obj.magic x8238)
                                    ~currentValue:(Ojs.float_of_js x8239)
                                    ~currentIndex:(Ojs.float_of_js x8240)
                                    ~array:(t_of_js x8241))));(Obj.magic
                                                                 x8242)|])
    let (reverse : 'tags this -> t) =
      fun (x8245 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x8245) "reverse" [||])
    let (set_ :
      'tags this -> array:float ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x8252 : 'tags this) ->
        fun ~array:(x8247 : float ArrayLike.t) ->
          fun ?offset:(x8248 : float option) ->
            fun () ->
              ignore
                (let x8254 = this_to_js Obj.magic x8252 in
                 Ojs.call (Ojs.get_prop_ascii x8254 "set") "apply"
                   [|x8254;((let x8249 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8249 "push"
                                  [|(ArrayLike.t_to_js Ojs.float_to_js x8247)|]);
                             (match x8248 with
                              | Some x8250 ->
                                  ignore
                                    (Ojs.call x8249 "push"
                                       [|(Ojs.float_to_js x8250)|])
                              | None -> ());
                             x8249))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x8260 : 'tags this) ->
        fun ?start:(x8255 : float option) ->
          fun ?end_:(x8256 : float option) ->
            fun () ->
              t_of_js
                (let x8262 = this_to_js Obj.magic x8260 in
                 Ojs.call (Ojs.get_prop_ascii x8262 "slice") "apply"
                   [|x8262;((let x8257 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8255 with
                              | Some x8259 ->
                                  ignore
                                    (Ojs.call x8257 "push"
                                       [|(Ojs.float_to_js x8259)|])
                              | None -> ());
                             (match x8256 with
                              | Some x8258 ->
                                  ignore
                                    (Ojs.call x8257 "push"
                                       [|(Ojs.float_to_js x8258)|])
                              | None -> ());
                             x8257))|])
    let (some :
      'tags this ->
        predicate:(value:float -> index:float -> array:t -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x8270 : 'tags this) ->
        fun
          ~predicate:(x8263 :
                       value:float -> index:float -> array:t -> unknown)
          ->
          fun ?thisArg:(x8264 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8272 = this_to_js Obj.magic x8270 in
                 Ojs.call (Ojs.get_prop_ascii x8272 "some") "apply"
                   [|x8272;((let x8265 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8265 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8267 : Ojs.t) ->
                                          fun (x8268 : Ojs.t) ->
                                            fun (x8269 : Ojs.t) ->
                                              unknown_to_js
                                                (x8263
                                                   ~value:(Ojs.float_of_js
                                                             x8267)
                                                   ~index:(Ojs.float_of_js
                                                             x8268)
                                                   ~array:(t_of_js x8269))))|]);
                             (match x8264 with
                              | Some x8266 ->
                                  ignore
                                    (Ojs.call x8265 "push"
                                       [|(any_to_js x8266)|])
                              | None -> ());
                             x8265))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:float -> b:float -> float) -> unit -> 'tags this)
      =
      fun (x8278 : 'tags this) ->
        fun ?compareFn:(x8273 : (a:float -> b:float -> float) option) ->
          fun () ->
            this_of_js Obj.magic
              (let x8280 = this_to_js Obj.magic x8278 in
               Ojs.call (Ojs.get_prop_ascii x8280 "sort") "apply"
                 [|x8280;((let x8274 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8273 with
                            | Some x8275 ->
                                ignore
                                  (Ojs.call x8274 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x8276 : Ojs.t) ->
                                             fun (x8277 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x8275
                                                    ~a:(Ojs.float_of_js x8276)
                                                    ~b:(Ojs.float_of_js x8277))))|])
                            | None -> ());
                           x8274))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x8287 : 'tags this) ->
        fun ?begin_:(x8282 : float option) ->
          fun ?end_:(x8283 : float option) ->
            fun () ->
              t_of_js
                (let x8289 = this_to_js Obj.magic x8287 in
                 Ojs.call (Ojs.get_prop_ascii x8289 "subarray") "apply"
                   [|x8289;((let x8284 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8282 with
                              | Some x8286 ->
                                  ignore
                                    (Ojs.call x8284 "push"
                                       [|(Ojs.float_to_js x8286)|])
                              | None -> ());
                             (match x8283 with
                              | Some x8285 ->
                                  ignore
                                    (Ojs.call x8284 "push"
                                       [|(Ojs.float_to_js x8285)|])
                              | None -> ());
                             x8284))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x8290 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8290) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x8292 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8292) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x8294 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x8294) "valueOf" [||])
    let (get : 'tags this -> float -> float) =
      fun (x8296 : 'tags this) ->
        fun (x8298 : float) ->
          Ojs.float_of_js
            (Ojs.get_prop (this_to_js Obj.magic x8296)
               (Ojs.float_to_js x8298))
    let (set : 'tags this -> float -> float -> unit) =
      fun (x8299 : 'tags this) ->
        fun (x8301 : float) ->
          fun (x8302 : float) ->
            Ojs.set_prop (this_to_js Obj.magic x8299) (Ojs.float_to_js x8301)
              (Ojs.float_to_js x8302)
    let (create : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int16Array") [||])
    let (create' : float Iterable.t -> t) =
      fun (x8303 : float Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int16Array")
             [|(Iterable.t_to_js Ojs.float_to_js x8303)|])
    let (from :
      arrayLike:float Iterable.t ->
        ?mapfn:(v:float -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x8305 : float Iterable.t) ->
        fun ?mapfn:(x8306 : (v:float -> k:float -> float) option) ->
          fun ?thisArg:(x8307 : any option) ->
            fun () ->
              t_of_js
                (let x8314 = Ojs.get_prop_ascii Ojs.global "Int16Array" in
                 Ojs.call (Ojs.get_prop_ascii x8314 "from") "apply"
                   [|x8314;((let x8308 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8308 "push"
                                  [|(Iterable.t_to_js Ojs.float_to_js x8305)|]);
                             (match x8306 with
                              | Some x8310 ->
                                  ignore
                                    (Ojs.call x8308 "push"
                                       [|(Ojs.fun_to_js 2
                                            (fun (x8311 : Ojs.t) ->
                                               fun (x8312 : Ojs.t) ->
                                                 Ojs.float_to_js
                                                   (x8310
                                                      ~v:(Ojs.float_of_js
                                                            x8311)
                                                      ~k:(Ojs.float_of_js
                                                            x8312))))|])
                              | None -> ());
                             (match x8307 with
                              | Some x8309 ->
                                  ignore
                                    (Ojs.call x8308 "push"
                                       [|(any_to_js x8309)|])
                              | None -> ());
                             x8308))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int16Array")
             "prototype")
    let (create'' : float -> t) =
      fun (x8315 : float) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int16Array")
             [|(Ojs.float_to_js x8315)|])
    let (create''' :
      [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ] -> t) =
      fun (x8316 : [ `U1 of float ArrayLike.t  | `U2 of ArrayBufferLike.t ])
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Int16Array")
             [|((match x8316 with
                 | `U1 x8317 -> ArrayLike.t_to_js Ojs.float_to_js x8317
                 | `U2 x8319 -> ArrayBufferLike.t_to_js x8319))|])
    let (create'''' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x8320 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x8321 : float option) ->
          fun ?length:(x8322 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Int16Array")
                   (let x8323 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x8323 "push"
                         [|(ArrayBufferLike.t_to_js x8320)|]);
                    (match x8321 with
                     | Some x8325 ->
                         ignore
                           (Ojs.call x8323 "push" [|(Ojs.float_to_js x8325)|])
                     | None -> ());
                    (match x8322 with
                     | Some x8324 ->
                         ignore
                           (Ojs.call x8323 "push" [|(Ojs.float_to_js x8324)|])
                     | None -> ());
                    x8323))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Int16Array")
             "BYTES_PER_ELEMENT")
    let (of_ : float list -> t) =
      fun (x8326 : float list) ->
        t_of_js
          (let x8329 = Ojs.get_prop_ascii Ojs.global "Int16Array" in
           Ojs.call (Ojs.get_prop_ascii x8329 "of") "apply"
             [|x8329;((let x8327 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x8328 : float) ->
                            ignore
                              (Ojs.call x8327 "push"
                                 [|(Ojs.float_to_js x8328)|])) x8326;
                       x8327))|])
    let (from' : float ArrayLike.t -> t) =
      fun (x8330 : float ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Int16Array") "from"
             [|(ArrayLike.t_to_js Ojs.float_to_js x8330)|])
    let (from'' :
      arrayLike:'T ArrayLike.t ->
        mapfn:(v:'T -> k:float -> float) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x8332 : 'T ArrayLike.t) ->
        fun ~mapfn:(x8333 : v:'T -> k:float -> float) ->
          fun ?thisArg:(x8334 : any option) ->
            fun () ->
              t_of_js
                (let x8340 = Ojs.get_prop_ascii Ojs.global "Int16Array" in
                 Ojs.call (Ojs.get_prop_ascii x8340 "from") "apply"
                   [|x8340;((let x8335 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8335 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x8332)|]);
                             ignore
                               (Ojs.call x8335 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x8337 : Ojs.t) ->
                                          fun (x8338 : Ojs.t) ->
                                            Ojs.float_to_js
                                              (x8333 ~v:(Obj.magic x8337)
                                                 ~k:(Ojs.float_of_js x8338))))|]);
                             (match x8334 with
                              | Some x8336 ->
                                  ignore
                                    (Ojs.call x8335 "push"
                                       [|(any_to_js x8336)|])
                              | None -> ());
                             x8335))|])
    let cast_from = Obj.magic
  end
module BigUint64Array =
  struct
    type t =
      [ `BigUint64Array  | bigint ArrayLike.tags_1
      | bigint IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8342 : Ojs.t) -> t_of_js x8342
    and t_0_to_js : t_0 -> Ojs.t = fun (x8341 : t) -> t_to_js x8341
    type tags =
      [ `BigUint64Array  | bigint ArrayLike.tags_1
      | bigint IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `BigUint64Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x8345 : Ojs.t) -> intf_of_js __tags_of_js x8345
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x8343 : __tags intf) -> intf_to_js __tags_to_js x8343
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x8347 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8347)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x8349 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8349) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x8351 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8351) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x8353 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8353) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x8360 : 'tags this) ->
        fun ~target:(x8355 : float) ->
          fun ~start:(x8356 : float) ->
            fun ?end_:(x8357 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x8362 = this_to_js Obj.magic x8360 in
                   Ojs.call (Ojs.get_prop_ascii x8362 "copyWithin") "apply"
                     [|x8362;((let x8358 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x8358 "push"
                                    [|(Ojs.float_to_js x8355)|]);
                               ignore
                                 (Ojs.call x8358 "push"
                                    [|(Ojs.float_to_js x8356)|]);
                               (match x8357 with
                                | Some x8359 ->
                                    ignore
                                      (Ojs.call x8358 "push"
                                         [|(Ojs.float_to_js x8359)|])
                                | None -> ());
                               x8358))|])
    let (entries : 'tags this -> (float * bigint) IterableIterator.t) =
      fun (x8364 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x8366 : Ojs.t) ->
             let x8367 = x8366 in
             ((Ojs.float_of_js (Ojs.array_get x8367 0)),
               (bigint_of_js (Ojs.array_get x8367 1))))
          (Ojs.call (this_to_js Obj.magic x8364) "entries" [||])
    let (every :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x8375 : 'tags this) ->
        fun
          ~predicate:(x8368 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x8369 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8377 = this_to_js Obj.magic x8375 in
                 Ojs.call (Ojs.get_prop_ascii x8377 "every") "apply"
                   [|x8377;((let x8370 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8370 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8372 : Ojs.t) ->
                                          fun (x8373 : Ojs.t) ->
                                            fun (x8374 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8368
                                                   ~value:(bigint_of_js x8372)
                                                   ~index:(Ojs.float_of_js
                                                             x8373)
                                                   ~array:(t_of_js x8374))))|]);
                             (match x8369 with
                              | Some x8371 ->
                                  ignore
                                    (Ojs.call x8370 "push"
                                       [|(any_to_js x8371)|])
                              | None -> ());
                             x8370))|])
    let (fill :
      'tags this ->
        value:bigint -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x8384 : 'tags this) ->
        fun ~value:(x8378 : bigint) ->
          fun ?start:(x8379 : float option) ->
            fun ?end_:(x8380 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x8386 = this_to_js Obj.magic x8384 in
                   Ojs.call (Ojs.get_prop_ascii x8386 "fill") "apply"
                     [|x8386;((let x8381 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x8381 "push"
                                    [|(bigint_to_js x8378)|]);
                               (match x8379 with
                                | Some x8383 ->
                                    ignore
                                      (Ojs.call x8381 "push"
                                         [|(Ojs.float_to_js x8383)|])
                                | None -> ());
                               (match x8380 with
                                | Some x8382 ->
                                    ignore
                                      (Ojs.call x8381 "push"
                                         [|(Ojs.float_to_js x8382)|])
                                | None -> ());
                               x8381))|])
    let (filter :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x8395 : 'tags this) ->
        fun
          ~predicate:(x8388 : value:bigint -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x8389 : any option) ->
            fun () ->
              t_of_js
                (let x8397 = this_to_js Obj.magic x8395 in
                 Ojs.call (Ojs.get_prop_ascii x8397 "filter") "apply"
                   [|x8397;((let x8390 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8390 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8392 : Ojs.t) ->
                                          fun (x8393 : Ojs.t) ->
                                            fun (x8394 : Ojs.t) ->
                                              any_to_js
                                                (x8388
                                                   ~value:(bigint_of_js x8392)
                                                   ~index:(Ojs.float_of_js
                                                             x8393)
                                                   ~array:(t_of_js x8394))))|]);
                             (match x8389 with
                              | Some x8391 ->
                                  ignore
                                    (Ojs.call x8390 "push"
                                       [|(any_to_js x8391)|])
                              | None -> ());
                             x8390))|])
    let (find :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bigint option)
      =
      fun (x8405 : 'tags this) ->
        fun
          ~predicate:(x8398 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x8399 : any option) ->
            fun () ->
              Ojs.option_of_js bigint_of_js
                (let x8407 = this_to_js Obj.magic x8405 in
                 Ojs.call (Ojs.get_prop_ascii x8407 "find") "apply"
                   [|x8407;((let x8400 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8400 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8402 : Ojs.t) ->
                                          fun (x8403 : Ojs.t) ->
                                            fun (x8404 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8398
                                                   ~value:(bigint_of_js x8402)
                                                   ~index:(Ojs.float_of_js
                                                             x8403)
                                                   ~array:(t_of_js x8404))))|]);
                             (match x8399 with
                              | Some x8401 ->
                                  ignore
                                    (Ojs.call x8400 "push"
                                       [|(any_to_js x8401)|])
                              | None -> ());
                             x8400))|])
    let (findIndex :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x8416 : 'tags this) ->
        fun
          ~predicate:(x8409 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x8410 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x8418 = this_to_js Obj.magic x8416 in
                 Ojs.call (Ojs.get_prop_ascii x8418 "findIndex") "apply"
                   [|x8418;((let x8411 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8411 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8413 : Ojs.t) ->
                                          fun (x8414 : Ojs.t) ->
                                            fun (x8415 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8409
                                                   ~value:(bigint_of_js x8413)
                                                   ~index:(Ojs.float_of_js
                                                             x8414)
                                                   ~array:(t_of_js x8415))))|]);
                             (match x8410 with
                              | Some x8412 ->
                                  ignore
                                    (Ojs.call x8411 "push"
                                       [|(any_to_js x8412)|])
                              | None -> ());
                             x8411))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:bigint -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x8426 : 'tags this) ->
        fun
          ~callbackfn:(x8419 :
                        value:bigint -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x8420 : any option) ->
            fun () ->
              ignore
                (let x8428 = this_to_js Obj.magic x8426 in
                 Ojs.call (Ojs.get_prop_ascii x8428 "forEach") "apply"
                   [|x8428;((let x8421 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8421 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8423 : Ojs.t) ->
                                          fun (x8424 : Ojs.t) ->
                                            fun (x8425 : Ojs.t) ->
                                              x8419
                                                ~value:(bigint_of_js x8423)
                                                ~index:(Ojs.float_of_js x8424)
                                                ~array:(t_of_js x8425)))|]);
                             (match x8420 with
                              | Some x8422 ->
                                  ignore
                                    (Ojs.call x8421 "push"
                                       [|(any_to_js x8422)|])
                              | None -> ());
                             x8421))|])
    let (includes :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> bool)
      =
      fun (x8433 : 'tags this) ->
        fun ~searchElement:(x8429 : bigint) ->
          fun ?fromIndex:(x8430 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8435 = this_to_js Obj.magic x8433 in
                 Ojs.call (Ojs.get_prop_ascii x8435 "includes") "apply"
                   [|x8435;((let x8431 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8431 "push"
                                  [|(bigint_to_js x8429)|]);
                             (match x8430 with
                              | Some x8432 ->
                                  ignore
                                    (Ojs.call x8431 "push"
                                       [|(Ojs.float_to_js x8432)|])
                              | None -> ());
                             x8431))|])
    let (indexOf :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> float)
      =
      fun (x8440 : 'tags this) ->
        fun ~searchElement:(x8436 : bigint) ->
          fun ?fromIndex:(x8437 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x8442 = this_to_js Obj.magic x8440 in
                 Ojs.call (Ojs.get_prop_ascii x8442 "indexOf") "apply"
                   [|x8442;((let x8438 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8438 "push"
                                  [|(bigint_to_js x8436)|]);
                             (match x8437 with
                              | Some x8439 ->
                                  ignore
                                    (Ojs.call x8438 "push"
                                       [|(Ojs.float_to_js x8439)|])
                              | None -> ());
                             x8438))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x8446 : 'tags this) ->
        fun ?separator:(x8443 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x8448 = this_to_js Obj.magic x8446 in
               Ojs.call (Ojs.get_prop_ascii x8448 "join") "apply"
                 [|x8448;((let x8444 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8443 with
                            | Some x8445 ->
                                ignore
                                  (Ojs.call x8444 "push"
                                     [|(Ojs.string_to_js x8445)|])
                            | None -> ());
                           x8444))|])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x8449 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x8449) "keys" [||])
    let (lastIndexOf :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> float)
      =
      fun (x8456 : 'tags this) ->
        fun ~searchElement:(x8452 : bigint) ->
          fun ?fromIndex:(x8453 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x8458 = this_to_js Obj.magic x8456 in
                 Ojs.call (Ojs.get_prop_ascii x8458 "lastIndexOf") "apply"
                   [|x8458;((let x8454 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8454 "push"
                                  [|(bigint_to_js x8452)|]);
                             (match x8453 with
                              | Some x8455 ->
                                  ignore
                                    (Ojs.call x8454 "push"
                                       [|(Ojs.float_to_js x8455)|])
                              | None -> ());
                             x8454))|])
    let (get_length : 'tags this -> float) =
      fun (x8459 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8459) "length")
    let (map :
      'tags this ->
        callbackfn:(value:bigint -> index:float -> array:t -> bigint) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x8468 : 'tags this) ->
        fun
          ~callbackfn:(x8461 :
                        value:bigint -> index:float -> array:t -> bigint)
          ->
          fun ?thisArg:(x8462 : any option) ->
            fun () ->
              t_of_js
                (let x8470 = this_to_js Obj.magic x8468 in
                 Ojs.call (Ojs.get_prop_ascii x8470 "map") "apply"
                   [|x8470;((let x8463 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8463 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8465 : Ojs.t) ->
                                          fun (x8466 : Ojs.t) ->
                                            fun (x8467 : Ojs.t) ->
                                              bigint_to_js
                                                (x8461
                                                   ~value:(bigint_of_js x8465)
                                                   ~index:(Ojs.float_of_js
                                                             x8466)
                                                   ~array:(t_of_js x8467))))|]);
                             (match x8462 with
                              | Some x8464 ->
                                  ignore
                                    (Ojs.call x8463 "push"
                                       [|(any_to_js x8464)|])
                              | None -> ());
                             x8463))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:bigint ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> bigint)
          -> bigint)
      =
      fun (x8476 : 'tags this) ->
        fun
          ~callbackfn:(x8471 :
                        previousValue:bigint ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> bigint)
          ->
          bigint_of_js
            (Ojs.call (this_to_js Obj.magic x8476) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x8472 : Ojs.t) ->
                       fun (x8473 : Ojs.t) ->
                         fun (x8474 : Ojs.t) ->
                           fun (x8475 : Ojs.t) ->
                             bigint_to_js
                               (x8471 ~previousValue:(bigint_of_js x8472)
                                  ~currentValue:(bigint_of_js x8473)
                                  ~currentIndex:(Ojs.float_of_js x8474)
                                  ~array:(t_of_js x8475))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x8484 : 'tags this) ->
        fun
          ~callbackfn:(x8478 :
                        previousValue:'U ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x8483 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x8484) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x8479 : Ojs.t) ->
                         fun (x8480 : Ojs.t) ->
                           fun (x8481 : Ojs.t) ->
                             fun (x8482 : Ojs.t) ->
                               Obj.magic
                                 (x8478 ~previousValue:(Obj.magic x8479)
                                    ~currentValue:(bigint_of_js x8480)
                                    ~currentIndex:(Ojs.float_of_js x8481)
                                    ~array:(t_of_js x8482))));(Obj.magic
                                                                 x8483)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:bigint ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> bigint)
          -> bigint)
      =
      fun (x8491 : 'tags this) ->
        fun
          ~callbackfn:(x8486 :
                        previousValue:bigint ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> bigint)
          ->
          bigint_of_js
            (Ojs.call (this_to_js Obj.magic x8491) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x8487 : Ojs.t) ->
                       fun (x8488 : Ojs.t) ->
                         fun (x8489 : Ojs.t) ->
                           fun (x8490 : Ojs.t) ->
                             bigint_to_js
                               (x8486 ~previousValue:(bigint_of_js x8487)
                                  ~currentValue:(bigint_of_js x8488)
                                  ~currentIndex:(Ojs.float_of_js x8489)
                                  ~array:(t_of_js x8490))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x8499 : 'tags this) ->
        fun
          ~callbackfn:(x8493 :
                        previousValue:'U ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x8498 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x8499) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x8494 : Ojs.t) ->
                         fun (x8495 : Ojs.t) ->
                           fun (x8496 : Ojs.t) ->
                             fun (x8497 : Ojs.t) ->
                               Obj.magic
                                 (x8493 ~previousValue:(Obj.magic x8494)
                                    ~currentValue:(bigint_of_js x8495)
                                    ~currentIndex:(Ojs.float_of_js x8496)
                                    ~array:(t_of_js x8497))));(Obj.magic
                                                                 x8498)|])
    let (reverse : 'tags this -> 'tags this) =
      fun (x8501 : 'tags this) ->
        this_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic x8501) "reverse" [||])
    let (set_ :
      'tags this -> array:bigint ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x8509 : 'tags this) ->
        fun ~array:(x8504 : bigint ArrayLike.t) ->
          fun ?offset:(x8505 : float option) ->
            fun () ->
              ignore
                (let x8511 = this_to_js Obj.magic x8509 in
                 Ojs.call (Ojs.get_prop_ascii x8511 "set") "apply"
                   [|x8511;((let x8506 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8506 "push"
                                  [|(ArrayLike.t_to_js bigint_to_js x8504)|]);
                             (match x8505 with
                              | Some x8507 ->
                                  ignore
                                    (Ojs.call x8506 "push"
                                       [|(Ojs.float_to_js x8507)|])
                              | None -> ());
                             x8506))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x8517 : 'tags this) ->
        fun ?start:(x8512 : float option) ->
          fun ?end_:(x8513 : float option) ->
            fun () ->
              t_of_js
                (let x8519 = this_to_js Obj.magic x8517 in
                 Ojs.call (Ojs.get_prop_ascii x8519 "slice") "apply"
                   [|x8519;((let x8514 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8512 with
                              | Some x8516 ->
                                  ignore
                                    (Ojs.call x8514 "push"
                                       [|(Ojs.float_to_js x8516)|])
                              | None -> ());
                             (match x8513 with
                              | Some x8515 ->
                                  ignore
                                    (Ojs.call x8514 "push"
                                       [|(Ojs.float_to_js x8515)|])
                              | None -> ());
                             x8514))|])
    let (some :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x8527 : 'tags this) ->
        fun
          ~predicate:(x8520 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x8521 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8529 = this_to_js Obj.magic x8527 in
                 Ojs.call (Ojs.get_prop_ascii x8529 "some") "apply"
                   [|x8529;((let x8522 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8522 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8524 : Ojs.t) ->
                                          fun (x8525 : Ojs.t) ->
                                            fun (x8526 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8520
                                                   ~value:(bigint_of_js x8524)
                                                   ~index:(Ojs.float_of_js
                                                             x8525)
                                                   ~array:(t_of_js x8526))))|]);
                             (match x8521 with
                              | Some x8523 ->
                                  ignore
                                    (Ojs.call x8522 "push"
                                       [|(any_to_js x8523)|])
                              | None -> ());
                             x8522))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:bigint -> b:bigint -> [ `U1 of float  | `U2 of bigint ])
          -> unit -> 'tags this)
      =
      fun (x8537 : 'tags this) ->
        fun
          ?compareFn:(x8530 :
                       (a:bigint ->
                          b:bigint -> [ `U1 of float  | `U2 of bigint ])
                         option)
          ->
          fun () ->
            this_of_js Obj.magic
              (let x8539 = this_to_js Obj.magic x8537 in
               Ojs.call (Ojs.get_prop_ascii x8539 "sort") "apply"
                 [|x8539;((let x8531 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8530 with
                            | Some x8532 ->
                                ignore
                                  (Ojs.call x8531 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x8533 : Ojs.t) ->
                                             fun (x8534 : Ojs.t) ->
                                               match x8532
                                                       ~a:(bigint_of_js x8533)
                                                       ~b:(bigint_of_js x8534)
                                               with
                                               | `U1 x8535 ->
                                                   Ojs.float_to_js x8535
                                               | `U2 x8536 ->
                                                   bigint_to_js x8536))|])
                            | None -> ());
                           x8531))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x8546 : 'tags this) ->
        fun ?begin_:(x8541 : float option) ->
          fun ?end_:(x8542 : float option) ->
            fun () ->
              t_of_js
                (let x8548 = this_to_js Obj.magic x8546 in
                 Ojs.call (Ojs.get_prop_ascii x8548 "subarray") "apply"
                   [|x8548;((let x8543 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8541 with
                              | Some x8545 ->
                                  ignore
                                    (Ojs.call x8543 "push"
                                       [|(Ojs.float_to_js x8545)|])
                              | None -> ());
                             (match x8542 with
                              | Some x8544 ->
                                  ignore
                                    (Ojs.call x8543 "push"
                                       [|(Ojs.float_to_js x8544)|])
                              | None -> ());
                             x8543))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x8549 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8549) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x8551 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8551) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x8553 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x8553) "valueOf" [||])
    let (values : 'tags this -> bigint IterableIterator.t) =
      fun (x8555 : 'tags this) ->
        IterableIterator.t_of_js bigint_of_js
          (Ojs.call (this_to_js Obj.magic x8555) "values" [||])
    let (get : 'tags this -> float -> bigint) =
      fun (x8558 : 'tags this) ->
        fun (x8560 : float) ->
          bigint_of_js
            (Ojs.get_prop (this_to_js Obj.magic x8558)
               (Ojs.float_to_js x8560))
    let (set : 'tags this -> float -> bigint -> unit) =
      fun (x8561 : 'tags this) ->
        fun (x8563 : float) ->
          fun (x8564 : bigint) ->
            Ojs.set_prop (this_to_js Obj.magic x8561) (Ojs.float_to_js x8563)
              (bigint_to_js x8564)
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "BigUint64Array") "prototype")
    let (create : ?length:float -> unit -> t) =
      fun ?length:(x8565 : float option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "BigUint64Array")
               (let x8566 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x8565 with
                 | Some x8567 ->
                     ignore
                       (Ojs.call x8566 "push" [|(Ojs.float_to_js x8567)|])
                 | None -> ());
                x8566))
    let (create' : bigint Iterable.t -> t) =
      fun (x8568 : bigint Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "BigUint64Array")
             [|(Iterable.t_to_js bigint_to_js x8568)|])
    let (create'' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x8570 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x8571 : float option) ->
          fun ?length:(x8572 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "BigUint64Array")
                   (let x8573 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x8573 "push"
                         [|(ArrayBufferLike.t_to_js x8570)|]);
                    (match x8571 with
                     | Some x8575 ->
                         ignore
                           (Ojs.call x8573 "push" [|(Ojs.float_to_js x8575)|])
                     | None -> ());
                    (match x8572 with
                     | Some x8574 ->
                         ignore
                           (Ojs.call x8573 "push" [|(Ojs.float_to_js x8574)|])
                     | None -> ());
                    x8573))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "BigUint64Array")
             "BYTES_PER_ELEMENT")
    let (of_ : bigint list -> t) =
      fun (x8576 : bigint list) ->
        t_of_js
          (let x8579 = Ojs.get_prop_ascii Ojs.global "BigUint64Array" in
           Ojs.call (Ojs.get_prop_ascii x8579 "of") "apply"
             [|x8579;((let x8577 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x8578 : bigint) ->
                            ignore
                              (Ojs.call x8577 "push" [|(bigint_to_js x8578)|]))
                         x8576;
                       x8577))|])
    let (from : bigint ArrayLike.t -> t) =
      fun (x8580 : bigint ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "BigUint64Array") "from"
             [|(ArrayLike.t_to_js bigint_to_js x8580)|])
    let (from' :
      arrayLike:'U ArrayLike.t ->
        mapfn:(v:'U -> k:float -> bigint) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x8582 : 'U ArrayLike.t) ->
        fun ~mapfn:(x8583 : v:'U -> k:float -> bigint) ->
          fun ?thisArg:(x8584 : any option) ->
            fun () ->
              t_of_js
                (let x8590 = Ojs.get_prop_ascii Ojs.global "BigUint64Array" in
                 Ojs.call (Ojs.get_prop_ascii x8590 "from") "apply"
                   [|x8590;((let x8585 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8585 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x8582)|]);
                             ignore
                               (Ojs.call x8585 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x8587 : Ojs.t) ->
                                          fun (x8588 : Ojs.t) ->
                                            bigint_to_js
                                              (x8583 ~v:(Obj.magic x8587)
                                                 ~k:(Ojs.float_of_js x8588))))|]);
                             (match x8584 with
                              | Some x8586 ->
                                  ignore
                                    (Ojs.call x8585 "push"
                                       [|(any_to_js x8586)|])
                              | None -> ());
                             x8585))|])
    let cast_from = Obj.magic
  end
module BigInt64Array =
  struct
    type t =
      [ `BigInt64Array  | bigint ArrayLike.tags_1
      | bigint IterableIterator.tags_1] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8592 : Ojs.t) -> t_of_js x8592
    and t_0_to_js : t_0 -> Ojs.t = fun (x8591 : t) -> t_to_js x8591
    type tags =
      [ `BigInt64Array  | bigint ArrayLike.tags_1
      | bigint IterableIterator.tags_1]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `BigInt64Array ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x8595 : Ojs.t) -> intf_of_js __tags_of_js x8595
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x8593 : __tags intf) -> intf_to_js __tags_to_js x8593
    let (get_BYTES_PER_ELEMENT : 'tags this -> float) =
      fun (x8597 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8597)
             "BYTES_PER_ELEMENT")
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x8599 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8599) "buffer")
    let (get_byteLength : 'tags this -> float) =
      fun (x8601 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8601) "byteLength")
    let (get_byteOffset : 'tags this -> float) =
      fun (x8603 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8603) "byteOffset")
    let (copyWithin :
      'tags this ->
        target:float -> start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x8610 : 'tags this) ->
        fun ~target:(x8605 : float) ->
          fun ~start:(x8606 : float) ->
            fun ?end_:(x8607 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x8612 = this_to_js Obj.magic x8610 in
                   Ojs.call (Ojs.get_prop_ascii x8612 "copyWithin") "apply"
                     [|x8612;((let x8608 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x8608 "push"
                                    [|(Ojs.float_to_js x8605)|]);
                               ignore
                                 (Ojs.call x8608 "push"
                                    [|(Ojs.float_to_js x8606)|]);
                               (match x8607 with
                                | Some x8609 ->
                                    ignore
                                      (Ojs.call x8608 "push"
                                         [|(Ojs.float_to_js x8609)|])
                                | None -> ());
                               x8608))|])
    let (entries : 'tags this -> (float * bigint) IterableIterator.t) =
      fun (x8614 : 'tags this) ->
        IterableIterator.t_of_js
          (fun (x8616 : Ojs.t) ->
             let x8617 = x8616 in
             ((Ojs.float_of_js (Ojs.array_get x8617 0)),
               (bigint_of_js (Ojs.array_get x8617 1))))
          (Ojs.call (this_to_js Obj.magic x8614) "entries" [||])
    let (every :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x8625 : 'tags this) ->
        fun
          ~predicate:(x8618 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x8619 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8627 = this_to_js Obj.magic x8625 in
                 Ojs.call (Ojs.get_prop_ascii x8627 "every") "apply"
                   [|x8627;((let x8620 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8620 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8622 : Ojs.t) ->
                                          fun (x8623 : Ojs.t) ->
                                            fun (x8624 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8618
                                                   ~value:(bigint_of_js x8622)
                                                   ~index:(Ojs.float_of_js
                                                             x8623)
                                                   ~array:(t_of_js x8624))))|]);
                             (match x8619 with
                              | Some x8621 ->
                                  ignore
                                    (Ojs.call x8620 "push"
                                       [|(any_to_js x8621)|])
                              | None -> ());
                             x8620))|])
    let (fill :
      'tags this ->
        value:bigint -> ?start:float -> ?end_:float -> unit -> 'tags this)
      =
      fun (x8634 : 'tags this) ->
        fun ~value:(x8628 : bigint) ->
          fun ?start:(x8629 : float option) ->
            fun ?end_:(x8630 : float option) ->
              fun () ->
                this_of_js Obj.magic
                  (let x8636 = this_to_js Obj.magic x8634 in
                   Ojs.call (Ojs.get_prop_ascii x8636 "fill") "apply"
                     [|x8636;((let x8631 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x8631 "push"
                                    [|(bigint_to_js x8628)|]);
                               (match x8629 with
                                | Some x8633 ->
                                    ignore
                                      (Ojs.call x8631 "push"
                                         [|(Ojs.float_to_js x8633)|])
                                | None -> ());
                               (match x8630 with
                                | Some x8632 ->
                                    ignore
                                      (Ojs.call x8631 "push"
                                         [|(Ojs.float_to_js x8632)|])
                                | None -> ());
                               x8631))|])
    let (filter :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> any) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x8645 : 'tags this) ->
        fun
          ~predicate:(x8638 : value:bigint -> index:float -> array:t -> any)
          ->
          fun ?thisArg:(x8639 : any option) ->
            fun () ->
              t_of_js
                (let x8647 = this_to_js Obj.magic x8645 in
                 Ojs.call (Ojs.get_prop_ascii x8647 "filter") "apply"
                   [|x8647;((let x8640 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8640 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8642 : Ojs.t) ->
                                          fun (x8643 : Ojs.t) ->
                                            fun (x8644 : Ojs.t) ->
                                              any_to_js
                                                (x8638
                                                   ~value:(bigint_of_js x8642)
                                                   ~index:(Ojs.float_of_js
                                                             x8643)
                                                   ~array:(t_of_js x8644))))|]);
                             (match x8639 with
                              | Some x8641 ->
                                  ignore
                                    (Ojs.call x8640 "push"
                                       [|(any_to_js x8641)|])
                              | None -> ());
                             x8640))|])
    let (find :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bigint option)
      =
      fun (x8655 : 'tags this) ->
        fun
          ~predicate:(x8648 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x8649 : any option) ->
            fun () ->
              Ojs.option_of_js bigint_of_js
                (let x8657 = this_to_js Obj.magic x8655 in
                 Ojs.call (Ojs.get_prop_ascii x8657 "find") "apply"
                   [|x8657;((let x8650 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8650 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8652 : Ojs.t) ->
                                          fun (x8653 : Ojs.t) ->
                                            fun (x8654 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8648
                                                   ~value:(bigint_of_js x8652)
                                                   ~index:(Ojs.float_of_js
                                                             x8653)
                                                   ~array:(t_of_js x8654))))|]);
                             (match x8649 with
                              | Some x8651 ->
                                  ignore
                                    (Ojs.call x8650 "push"
                                       [|(any_to_js x8651)|])
                              | None -> ());
                             x8650))|])
    let (findIndex :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x8666 : 'tags this) ->
        fun
          ~predicate:(x8659 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x8660 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x8668 = this_to_js Obj.magic x8666 in
                 Ojs.call (Ojs.get_prop_ascii x8668 "findIndex") "apply"
                   [|x8668;((let x8661 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8661 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8663 : Ojs.t) ->
                                          fun (x8664 : Ojs.t) ->
                                            fun (x8665 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8659
                                                   ~value:(bigint_of_js x8663)
                                                   ~index:(Ojs.float_of_js
                                                             x8664)
                                                   ~array:(t_of_js x8665))))|]);
                             (match x8660 with
                              | Some x8662 ->
                                  ignore
                                    (Ojs.call x8661 "push"
                                       [|(any_to_js x8662)|])
                              | None -> ());
                             x8661))|])
    let (forEach :
      'tags this ->
        callbackfn:(value:bigint -> index:float -> array:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x8676 : 'tags this) ->
        fun
          ~callbackfn:(x8669 :
                        value:bigint -> index:float -> array:t -> unit)
          ->
          fun ?thisArg:(x8670 : any option) ->
            fun () ->
              ignore
                (let x8678 = this_to_js Obj.magic x8676 in
                 Ojs.call (Ojs.get_prop_ascii x8678 "forEach") "apply"
                   [|x8678;((let x8671 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8671 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8673 : Ojs.t) ->
                                          fun (x8674 : Ojs.t) ->
                                            fun (x8675 : Ojs.t) ->
                                              x8669
                                                ~value:(bigint_of_js x8673)
                                                ~index:(Ojs.float_of_js x8674)
                                                ~array:(t_of_js x8675)))|]);
                             (match x8670 with
                              | Some x8672 ->
                                  ignore
                                    (Ojs.call x8671 "push"
                                       [|(any_to_js x8672)|])
                              | None -> ());
                             x8671))|])
    let (includes :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> bool)
      =
      fun (x8683 : 'tags this) ->
        fun ~searchElement:(x8679 : bigint) ->
          fun ?fromIndex:(x8680 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8685 = this_to_js Obj.magic x8683 in
                 Ojs.call (Ojs.get_prop_ascii x8685 "includes") "apply"
                   [|x8685;((let x8681 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8681 "push"
                                  [|(bigint_to_js x8679)|]);
                             (match x8680 with
                              | Some x8682 ->
                                  ignore
                                    (Ojs.call x8681 "push"
                                       [|(Ojs.float_to_js x8682)|])
                              | None -> ());
                             x8681))|])
    let (indexOf :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> float)
      =
      fun (x8690 : 'tags this) ->
        fun ~searchElement:(x8686 : bigint) ->
          fun ?fromIndex:(x8687 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x8692 = this_to_js Obj.magic x8690 in
                 Ojs.call (Ojs.get_prop_ascii x8692 "indexOf") "apply"
                   [|x8692;((let x8688 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8688 "push"
                                  [|(bigint_to_js x8686)|]);
                             (match x8687 with
                              | Some x8689 ->
                                  ignore
                                    (Ojs.call x8688 "push"
                                       [|(Ojs.float_to_js x8689)|])
                              | None -> ());
                             x8688))|])
    let (join : 'tags this -> ?separator:string -> unit -> string) =
      fun (x8696 : 'tags this) ->
        fun ?separator:(x8693 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x8698 = this_to_js Obj.magic x8696 in
               Ojs.call (Ojs.get_prop_ascii x8698 "join") "apply"
                 [|x8698;((let x8694 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8693 with
                            | Some x8695 ->
                                ignore
                                  (Ojs.call x8694 "push"
                                     [|(Ojs.string_to_js x8695)|])
                            | None -> ());
                           x8694))|])
    let (keys : 'tags this -> float IterableIterator.t) =
      fun (x8699 : 'tags this) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (this_to_js Obj.magic x8699) "keys" [||])
    let (lastIndexOf :
      'tags this -> searchElement:bigint -> ?fromIndex:float -> unit -> float)
      =
      fun (x8706 : 'tags this) ->
        fun ~searchElement:(x8702 : bigint) ->
          fun ?fromIndex:(x8703 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x8708 = this_to_js Obj.magic x8706 in
                 Ojs.call (Ojs.get_prop_ascii x8708 "lastIndexOf") "apply"
                   [|x8708;((let x8704 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8704 "push"
                                  [|(bigint_to_js x8702)|]);
                             (match x8703 with
                              | Some x8705 ->
                                  ignore
                                    (Ojs.call x8704 "push"
                                       [|(Ojs.float_to_js x8705)|])
                              | None -> ());
                             x8704))|])
    let (get_length : 'tags this -> float) =
      fun (x8709 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x8709) "length")
    let (map :
      'tags this ->
        callbackfn:(value:bigint -> index:float -> array:t -> bigint) ->
          ?thisArg:any -> unit -> t)
      =
      fun (x8718 : 'tags this) ->
        fun
          ~callbackfn:(x8711 :
                        value:bigint -> index:float -> array:t -> bigint)
          ->
          fun ?thisArg:(x8712 : any option) ->
            fun () ->
              t_of_js
                (let x8720 = this_to_js Obj.magic x8718 in
                 Ojs.call (Ojs.get_prop_ascii x8720 "map") "apply"
                   [|x8720;((let x8713 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8713 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8715 : Ojs.t) ->
                                          fun (x8716 : Ojs.t) ->
                                            fun (x8717 : Ojs.t) ->
                                              bigint_to_js
                                                (x8711
                                                   ~value:(bigint_of_js x8715)
                                                   ~index:(Ojs.float_of_js
                                                             x8716)
                                                   ~array:(t_of_js x8717))))|]);
                             (match x8712 with
                              | Some x8714 ->
                                  ignore
                                    (Ojs.call x8713 "push"
                                       [|(any_to_js x8714)|])
                              | None -> ());
                             x8713))|])
    let (reduce :
      'tags this ->
        callbackfn:(previousValue:bigint ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> bigint)
          -> bigint)
      =
      fun (x8726 : 'tags this) ->
        fun
          ~callbackfn:(x8721 :
                        previousValue:bigint ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> bigint)
          ->
          bigint_of_js
            (Ojs.call (this_to_js Obj.magic x8726) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x8722 : Ojs.t) ->
                       fun (x8723 : Ojs.t) ->
                         fun (x8724 : Ojs.t) ->
                           fun (x8725 : Ojs.t) ->
                             bigint_to_js
                               (x8721 ~previousValue:(bigint_of_js x8722)
                                  ~currentValue:(bigint_of_js x8723)
                                  ~currentIndex:(Ojs.float_of_js x8724)
                                  ~array:(t_of_js x8725))))|])
    let (reduce' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x8734 : 'tags this) ->
        fun
          ~callbackfn:(x8728 :
                        previousValue:'U ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x8733 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x8734) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x8729 : Ojs.t) ->
                         fun (x8730 : Ojs.t) ->
                           fun (x8731 : Ojs.t) ->
                             fun (x8732 : Ojs.t) ->
                               Obj.magic
                                 (x8728 ~previousValue:(Obj.magic x8729)
                                    ~currentValue:(bigint_of_js x8730)
                                    ~currentIndex:(Ojs.float_of_js x8731)
                                    ~array:(t_of_js x8732))));(Obj.magic
                                                                 x8733)|])
    let (reduceRight :
      'tags this ->
        callbackfn:(previousValue:bigint ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> bigint)
          -> bigint)
      =
      fun (x8741 : 'tags this) ->
        fun
          ~callbackfn:(x8736 :
                        previousValue:bigint ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> bigint)
          ->
          bigint_of_js
            (Ojs.call (this_to_js Obj.magic x8741) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x8737 : Ojs.t) ->
                       fun (x8738 : Ojs.t) ->
                         fun (x8739 : Ojs.t) ->
                           fun (x8740 : Ojs.t) ->
                             bigint_to_js
                               (x8736 ~previousValue:(bigint_of_js x8737)
                                  ~currentValue:(bigint_of_js x8738)
                                  ~currentIndex:(Ojs.float_of_js x8739)
                                  ~array:(t_of_js x8740))))|])
    let (reduceRight' :
      'tags this ->
        callbackfn:(previousValue:'U ->
                      currentValue:bigint ->
                        currentIndex:float -> array:t -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x8749 : 'tags this) ->
        fun
          ~callbackfn:(x8743 :
                        previousValue:'U ->
                          currentValue:bigint ->
                            currentIndex:float -> array:t -> 'U)
          ->
          fun ~initialValue:(x8748 : 'U) ->
            Obj.magic
              (Ojs.call (this_to_js Obj.magic x8749) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x8744 : Ojs.t) ->
                         fun (x8745 : Ojs.t) ->
                           fun (x8746 : Ojs.t) ->
                             fun (x8747 : Ojs.t) ->
                               Obj.magic
                                 (x8743 ~previousValue:(Obj.magic x8744)
                                    ~currentValue:(bigint_of_js x8745)
                                    ~currentIndex:(Ojs.float_of_js x8746)
                                    ~array:(t_of_js x8747))));(Obj.magic
                                                                 x8748)|])
    let (reverse : 'tags this -> 'tags this) =
      fun (x8751 : 'tags this) ->
        this_of_js Obj.magic
          (Ojs.call (this_to_js Obj.magic x8751) "reverse" [||])
    let (set_ :
      'tags this -> array:bigint ArrayLike.t -> ?offset:float -> unit -> unit)
      =
      fun (x8759 : 'tags this) ->
        fun ~array:(x8754 : bigint ArrayLike.t) ->
          fun ?offset:(x8755 : float option) ->
            fun () ->
              ignore
                (let x8761 = this_to_js Obj.magic x8759 in
                 Ojs.call (Ojs.get_prop_ascii x8761 "set") "apply"
                   [|x8761;((let x8756 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8756 "push"
                                  [|(ArrayLike.t_to_js bigint_to_js x8754)|]);
                             (match x8755 with
                              | Some x8757 ->
                                  ignore
                                    (Ojs.call x8756 "push"
                                       [|(Ojs.float_to_js x8757)|])
                              | None -> ());
                             x8756))|])
    let (slice : 'tags this -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x8767 : 'tags this) ->
        fun ?start:(x8762 : float option) ->
          fun ?end_:(x8763 : float option) ->
            fun () ->
              t_of_js
                (let x8769 = this_to_js Obj.magic x8767 in
                 Ojs.call (Ojs.get_prop_ascii x8769 "slice") "apply"
                   [|x8769;((let x8764 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8762 with
                              | Some x8766 ->
                                  ignore
                                    (Ojs.call x8764 "push"
                                       [|(Ojs.float_to_js x8766)|])
                              | None -> ());
                             (match x8763 with
                              | Some x8765 ->
                                  ignore
                                    (Ojs.call x8764 "push"
                                       [|(Ojs.float_to_js x8765)|])
                              | None -> ());
                             x8764))|])
    let (some :
      'tags this ->
        predicate:(value:bigint -> index:float -> array:t -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x8777 : 'tags this) ->
        fun
          ~predicate:(x8770 : value:bigint -> index:float -> array:t -> bool)
          ->
          fun ?thisArg:(x8771 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x8779 = this_to_js Obj.magic x8777 in
                 Ojs.call (Ojs.get_prop_ascii x8779 "some") "apply"
                   [|x8779;((let x8772 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8772 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x8774 : Ojs.t) ->
                                          fun (x8775 : Ojs.t) ->
                                            fun (x8776 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x8770
                                                   ~value:(bigint_of_js x8774)
                                                   ~index:(Ojs.float_of_js
                                                             x8775)
                                                   ~array:(t_of_js x8776))))|]);
                             (match x8771 with
                              | Some x8773 ->
                                  ignore
                                    (Ojs.call x8772 "push"
                                       [|(any_to_js x8773)|])
                              | None -> ());
                             x8772))|])
    let (sort :
      'tags this ->
        ?compareFn:(a:bigint -> b:bigint -> [ `U1 of float  | `U2 of bigint ])
          -> unit -> 'tags this)
      =
      fun (x8787 : 'tags this) ->
        fun
          ?compareFn:(x8780 :
                       (a:bigint ->
                          b:bigint -> [ `U1 of float  | `U2 of bigint ])
                         option)
          ->
          fun () ->
            this_of_js Obj.magic
              (let x8789 = this_to_js Obj.magic x8787 in
               Ojs.call (Ojs.get_prop_ascii x8789 "sort") "apply"
                 [|x8789;((let x8781 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x8780 with
                            | Some x8782 ->
                                ignore
                                  (Ojs.call x8781 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x8783 : Ojs.t) ->
                                             fun (x8784 : Ojs.t) ->
                                               match x8782
                                                       ~a:(bigint_of_js x8783)
                                                       ~b:(bigint_of_js x8784)
                                               with
                                               | `U1 x8785 ->
                                                   Ojs.float_to_js x8785
                                               | `U2 x8786 ->
                                                   bigint_to_js x8786))|])
                            | None -> ());
                           x8781))|])
    let (subarray : 'tags this -> ?begin_:float -> ?end_:float -> unit -> t)
      =
      fun (x8796 : 'tags this) ->
        fun ?begin_:(x8791 : float option) ->
          fun ?end_:(x8792 : float option) ->
            fun () ->
              t_of_js
                (let x8798 = this_to_js Obj.magic x8796 in
                 Ojs.call (Ojs.get_prop_ascii x8798 "subarray") "apply"
                   [|x8798;((let x8793 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x8791 with
                              | Some x8795 ->
                                  ignore
                                    (Ojs.call x8793 "push"
                                       [|(Ojs.float_to_js x8795)|])
                              | None -> ());
                             (match x8792 with
                              | Some x8794 ->
                                  ignore
                                    (Ojs.call x8793 "push"
                                       [|(Ojs.float_to_js x8794)|])
                              | None -> ());
                             x8793))|])
    let (toLocaleString : 'tags this -> string) =
      fun (x8799 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8799) "toLocaleString" [||])
    let (toString : 'tags this -> string) =
      fun (x8801 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.call (this_to_js Obj.magic x8801) "toString" [||])
    let (valueOf : 'tags this -> t) =
      fun (x8803 : 'tags this) ->
        t_of_js (Ojs.call (this_to_js Obj.magic x8803) "valueOf" [||])
    let (values : 'tags this -> bigint IterableIterator.t) =
      fun (x8805 : 'tags this) ->
        IterableIterator.t_of_js bigint_of_js
          (Ojs.call (this_to_js Obj.magic x8805) "values" [||])
    let (get : 'tags this -> float -> bigint) =
      fun (x8808 : 'tags this) ->
        fun (x8810 : float) ->
          bigint_of_js
            (Ojs.get_prop (this_to_js Obj.magic x8808)
               (Ojs.float_to_js x8810))
    let (set : 'tags this -> float -> bigint -> unit) =
      fun (x8811 : 'tags this) ->
        fun (x8813 : float) ->
          fun (x8814 : bigint) ->
            Ojs.set_prop (this_to_js Obj.magic x8811) (Ojs.float_to_js x8813)
              (bigint_to_js x8814)
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "BigInt64Array")
             "prototype")
    let (create : ?length:float -> unit -> t) =
      fun ?length:(x8815 : float option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "BigInt64Array")
               (let x8816 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x8815 with
                 | Some x8817 ->
                     ignore
                       (Ojs.call x8816 "push" [|(Ojs.float_to_js x8817)|])
                 | None -> ());
                x8816))
    let (create' : bigint Iterable.t -> t) =
      fun (x8818 : bigint Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "BigInt64Array")
             [|(Iterable.t_to_js bigint_to_js x8818)|])
    let (create'' :
      buffer:ArrayBufferLike.t ->
        ?byteOffset:float -> ?length:float -> unit -> t)
      =
      fun ~buffer:(x8820 : ArrayBufferLike.t) ->
        fun ?byteOffset:(x8821 : float option) ->
          fun ?length:(x8822 : float option) ->
            fun () ->
              t_of_js
                (Ojs.new_obj_arr
                   (Ojs.get_prop_ascii Ojs.global "BigInt64Array")
                   (let x8823 =
                      Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                        [||] in
                    ignore
                      (Ojs.call x8823 "push"
                         [|(ArrayBufferLike.t_to_js x8820)|]);
                    (match x8821 with
                     | Some x8825 ->
                         ignore
                           (Ojs.call x8823 "push" [|(Ojs.float_to_js x8825)|])
                     | None -> ());
                    (match x8822 with
                     | Some x8824 ->
                         ignore
                           (Ojs.call x8823 "push" [|(Ojs.float_to_js x8824)|])
                     | None -> ());
                    x8823))
    let (bytes_per_element : unit -> float) =
      fun () ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "BigInt64Array")
             "BYTES_PER_ELEMENT")
    let (of_ : bigint list -> t) =
      fun (x8826 : bigint list) ->
        t_of_js
          (let x8829 = Ojs.get_prop_ascii Ojs.global "BigInt64Array" in
           Ojs.call (Ojs.get_prop_ascii x8829 "of") "apply"
             [|x8829;((let x8827 =
                         Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                           [||] in
                       List.iter
                         (fun (x8828 : bigint) ->
                            ignore
                              (Ojs.call x8827 "push" [|(bigint_to_js x8828)|]))
                         x8826;
                       x8827))|])
    let (from : bigint ArrayLike.t -> t) =
      fun (x8830 : bigint ArrayLike.t) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "BigInt64Array") "from"
             [|(ArrayLike.t_to_js bigint_to_js x8830)|])
    let (from' :
      arrayLike:'U ArrayLike.t ->
        mapfn:(v:'U -> k:float -> bigint) -> ?thisArg:any -> unit -> t)
      =
      fun ~arrayLike:(x8832 : 'U ArrayLike.t) ->
        fun ~mapfn:(x8833 : v:'U -> k:float -> bigint) ->
          fun ?thisArg:(x8834 : any option) ->
            fun () ->
              t_of_js
                (let x8840 = Ojs.get_prop_ascii Ojs.global "BigInt64Array" in
                 Ojs.call (Ojs.get_prop_ascii x8840 "from") "apply"
                   [|x8840;((let x8835 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8835 "push"
                                  [|(ArrayLike.t_to_js Obj.magic x8832)|]);
                             ignore
                               (Ojs.call x8835 "push"
                                  [|(Ojs.fun_to_js 2
                                       (fun (x8837 : Ojs.t) ->
                                          fun (x8838 : Ojs.t) ->
                                            bigint_to_js
                                              (x8833 ~v:(Obj.magic x8837)
                                                 ~k:(Ojs.float_of_js x8838))))|]);
                             (match x8834 with
                              | Some x8836 ->
                                  ignore
                                    (Ojs.call x8835 "push"
                                       [|(any_to_js x8836)|])
                              | None -> ());
                             x8835))|])
    let cast_from = Obj.magic
  end
module Atomics =
  struct
    let (add :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float -> value:bigint -> bigint)
      =
      fun
        ~typedArray:(x8841 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x8844 : float) ->
          fun ~value:(x8845 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "add"
                 [|((match x8841 with
                     | `U1 x8842 -> BigInt64Array.t_to_js x8842
                     | `U2 x8843 -> BigUint64Array.t_to_js x8843));(Ojs.float_to_js
                                                                    x8844);(
                   bigint_to_js x8845)|])
    let (and_ :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float -> value:bigint -> bigint)
      =
      fun
        ~typedArray:(x8846 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x8849 : float) ->
          fun ~value:(x8850 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "and"
                 [|((match x8846 with
                     | `U1 x8847 -> BigInt64Array.t_to_js x8847
                     | `U2 x8848 -> BigUint64Array.t_to_js x8848));(Ojs.float_to_js
                                                                    x8849);(
                   bigint_to_js x8850)|])
    let (compareExchange :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float ->
          expectedValue:bigint -> replacementValue:bigint -> bigint)
      =
      fun
        ~typedArray:(x8851 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x8854 : float) ->
          fun ~expectedValue:(x8855 : bigint) ->
            fun ~replacementValue:(x8856 : bigint) ->
              bigint_of_js
                (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics")
                   "compareExchange"
                   [|((match x8851 with
                       | `U1 x8852 -> BigInt64Array.t_to_js x8852
                       | `U2 x8853 -> BigUint64Array.t_to_js x8853));(
                     Ojs.float_to_js x8854);(bigint_to_js x8855);(bigint_to_js
                                                                    x8856)|])
    let (exchange :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float -> value:bigint -> bigint)
      =
      fun
        ~typedArray:(x8857 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x8860 : float) ->
          fun ~value:(x8861 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "exchange"
                 [|((match x8857 with
                     | `U1 x8858 -> BigInt64Array.t_to_js x8858
                     | `U2 x8859 -> BigUint64Array.t_to_js x8859));(Ojs.float_to_js
                                                                    x8860);(
                   bigint_to_js x8861)|])
    let (load :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float -> bigint)
      =
      fun
        ~typedArray:(x8862 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x8865 : float) ->
          bigint_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "load"
               [|((match x8862 with
                   | `U1 x8863 -> BigInt64Array.t_to_js x8863
                   | `U2 x8864 -> BigUint64Array.t_to_js x8864));(Ojs.float_to_js
                                                                    x8865)|])
    let (or_ :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float -> value:bigint -> bigint)
      =
      fun
        ~typedArray:(x8866 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x8869 : float) ->
          fun ~value:(x8870 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "or"
                 [|((match x8866 with
                     | `U1 x8867 -> BigInt64Array.t_to_js x8867
                     | `U2 x8868 -> BigUint64Array.t_to_js x8868));(Ojs.float_to_js
                                                                    x8869);(
                   bigint_to_js x8870)|])
    let (store :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float -> value:bigint -> bigint)
      =
      fun
        ~typedArray:(x8871 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x8874 : float) ->
          fun ~value:(x8875 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "store"
                 [|((match x8871 with
                     | `U1 x8872 -> BigInt64Array.t_to_js x8872
                     | `U2 x8873 -> BigUint64Array.t_to_js x8873));(Ojs.float_to_js
                                                                    x8874);(
                   bigint_to_js x8875)|])
    let (sub :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float -> value:bigint -> bigint)
      =
      fun
        ~typedArray:(x8876 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x8879 : float) ->
          fun ~value:(x8880 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "sub"
                 [|((match x8876 with
                     | `U1 x8877 -> BigInt64Array.t_to_js x8877
                     | `U2 x8878 -> BigUint64Array.t_to_js x8878));(Ojs.float_to_js
                                                                    x8879);(
                   bigint_to_js x8880)|])
    let (wait :
      typedArray:BigInt64Array.t ->
        index:float ->
          value:bigint ->
            ?timeout:float ->
              unit -> [ `L_s70_not_equal  | `L_s73_ok  | `L_s93_timed_out ])
      =
      fun ~typedArray:(x8881 : BigInt64Array.t) ->
        fun ~index:(x8882 : float) ->
          fun ~value:(x8883 : bigint) ->
            fun ?timeout:(x8884 : float option) ->
              fun () ->
                let x8888 =
                  let x8887 = Ojs.get_prop_ascii Ojs.global "Atomics" in
                  Ojs.call (Ojs.get_prop_ascii x8887 "wait") "apply"
                    [|x8887;((let x8885 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x8885 "push"
                                   [|(BigInt64Array.t_to_js x8881)|]);
                              ignore
                                (Ojs.call x8885 "push"
                                   [|(Ojs.float_to_js x8882)|]);
                              ignore
                                (Ojs.call x8885 "push"
                                   [|(bigint_to_js x8883)|]);
                              (match x8884 with
                               | Some x8886 ->
                                   ignore
                                     (Ojs.call x8885 "push"
                                        [|(Ojs.float_to_js x8886)|])
                               | None -> ());
                              x8885))|] in
                match Ojs.string_of_js x8888 with
                | "not-equal" -> `L_s70_not_equal
                | "ok" -> `L_s73_ok
                | "timed-out" -> `L_s93_timed_out
                | _ -> assert false
    let (notify :
      typedArray:BigInt64Array.t ->
        index:float -> ?count:float -> unit -> float)
      =
      fun ~typedArray:(x8889 : BigInt64Array.t) ->
        fun ~index:(x8890 : float) ->
          fun ?count:(x8891 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x8894 = Ojs.get_prop_ascii Ojs.global "Atomics" in
                 Ojs.call (Ojs.get_prop_ascii x8894 "notify") "apply"
                   [|x8894;((let x8892 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8892 "push"
                                  [|(BigInt64Array.t_to_js x8889)|]);
                             ignore
                               (Ojs.call x8892 "push"
                                  [|(Ojs.float_to_js x8890)|]);
                             (match x8891 with
                              | Some x8893 ->
                                  ignore
                                    (Ojs.call x8892 "push"
                                       [|(Ojs.float_to_js x8893)|])
                              | None -> ());
                             x8892))|])
    let (xor :
      typedArray:[ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ] ->
        index:float -> value:bigint -> bigint)
      =
      fun
        ~typedArray:(x8895 :
                      [ `U1 of BigInt64Array.t  | `U2 of BigUint64Array.t ])
        ->
        fun ~index:(x8898 : float) ->
          fun ~value:(x8899 : bigint) ->
            bigint_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "xor"
                 [|((match x8895 with
                     | `U1 x8896 -> BigInt64Array.t_to_js x8896
                     | `U2 x8897 -> BigUint64Array.t_to_js x8897));(Ojs.float_to_js
                                                                    x8898);(
                   bigint_to_js x8899)|])
    let (add' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        -> index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x8900 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x8907 : float) ->
          fun ~value:(x8908 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "add"
                 [|((match x8900 with
                     | `U1 x8901 -> Int8Array.t_to_js x8901
                     | `U2 x8902 -> Uint8Array.t_to_js x8902
                     | `U3 x8903 -> Int16Array.t_to_js x8903
                     | `U4 x8904 -> Uint16Array.t_to_js x8904
                     | `U5 x8905 -> Int32Array.t_to_js x8905
                     | `U6 x8906 -> Uint32Array.t_to_js x8906));(Ojs.float_to_js
                                                                   x8907);(
                   Ojs.float_to_js x8908)|])
    let (and_' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        -> index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x8909 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x8916 : float) ->
          fun ~value:(x8917 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "and"
                 [|((match x8909 with
                     | `U1 x8910 -> Int8Array.t_to_js x8910
                     | `U2 x8911 -> Uint8Array.t_to_js x8911
                     | `U3 x8912 -> Int16Array.t_to_js x8912
                     | `U4 x8913 -> Uint16Array.t_to_js x8913
                     | `U5 x8914 -> Int32Array.t_to_js x8914
                     | `U6 x8915 -> Uint32Array.t_to_js x8915));(Ojs.float_to_js
                                                                   x8916);(
                   Ojs.float_to_js x8917)|])
    let (compareExchange' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        ->
        index:float -> expectedValue:float -> replacementValue:float -> float)
      =
      fun
        ~typedArray:(x8918 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x8925 : float) ->
          fun ~expectedValue:(x8926 : float) ->
            fun ~replacementValue:(x8927 : float) ->
              Ojs.float_of_js
                (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics")
                   "compareExchange"
                   [|((match x8918 with
                       | `U1 x8919 -> Int8Array.t_to_js x8919
                       | `U2 x8920 -> Uint8Array.t_to_js x8920
                       | `U3 x8921 -> Int16Array.t_to_js x8921
                       | `U4 x8922 -> Uint16Array.t_to_js x8922
                       | `U5 x8923 -> Int32Array.t_to_js x8923
                       | `U6 x8924 -> Uint32Array.t_to_js x8924));(Ojs.float_to_js
                                                                    x8925);(
                     Ojs.float_to_js x8926);(Ojs.float_to_js x8927)|])
    let (exchange' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        -> index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x8928 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x8935 : float) ->
          fun ~value:(x8936 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "exchange"
                 [|((match x8928 with
                     | `U1 x8929 -> Int8Array.t_to_js x8929
                     | `U2 x8930 -> Uint8Array.t_to_js x8930
                     | `U3 x8931 -> Int16Array.t_to_js x8931
                     | `U4 x8932 -> Uint16Array.t_to_js x8932
                     | `U5 x8933 -> Int32Array.t_to_js x8933
                     | `U6 x8934 -> Uint32Array.t_to_js x8934));(Ojs.float_to_js
                                                                   x8935);(
                   Ojs.float_to_js x8936)|])
    let (isLockFree : float -> bool) =
      fun (x8937 : float) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "isLockFree"
             [|(Ojs.float_to_js x8937)|])
    let (load' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        -> index:float -> float)
      =
      fun
        ~typedArray:(x8938 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x8945 : float) ->
          Ojs.float_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "load"
               [|((match x8938 with
                   | `U1 x8939 -> Int8Array.t_to_js x8939
                   | `U2 x8940 -> Uint8Array.t_to_js x8940
                   | `U3 x8941 -> Int16Array.t_to_js x8941
                   | `U4 x8942 -> Uint16Array.t_to_js x8942
                   | `U5 x8943 -> Int32Array.t_to_js x8943
                   | `U6 x8944 -> Uint32Array.t_to_js x8944));(Ojs.float_to_js
                                                                 x8945)|])
    let (or_' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        -> index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x8946 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x8953 : float) ->
          fun ~value:(x8954 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "or"
                 [|((match x8946 with
                     | `U1 x8947 -> Int8Array.t_to_js x8947
                     | `U2 x8948 -> Uint8Array.t_to_js x8948
                     | `U3 x8949 -> Int16Array.t_to_js x8949
                     | `U4 x8950 -> Uint16Array.t_to_js x8950
                     | `U5 x8951 -> Int32Array.t_to_js x8951
                     | `U6 x8952 -> Uint32Array.t_to_js x8952));(Ojs.float_to_js
                                                                   x8953);(
                   Ojs.float_to_js x8954)|])
    let (store' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        -> index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x8955 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x8962 : float) ->
          fun ~value:(x8963 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "store"
                 [|((match x8955 with
                     | `U1 x8956 -> Int8Array.t_to_js x8956
                     | `U2 x8957 -> Uint8Array.t_to_js x8957
                     | `U3 x8958 -> Int16Array.t_to_js x8958
                     | `U4 x8959 -> Uint16Array.t_to_js x8959
                     | `U5 x8960 -> Int32Array.t_to_js x8960
                     | `U6 x8961 -> Uint32Array.t_to_js x8961));(Ojs.float_to_js
                                                                   x8962);(
                   Ojs.float_to_js x8963)|])
    let (sub' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        -> index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x8964 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x8971 : float) ->
          fun ~value:(x8972 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "sub"
                 [|((match x8964 with
                     | `U1 x8965 -> Int8Array.t_to_js x8965
                     | `U2 x8966 -> Uint8Array.t_to_js x8966
                     | `U3 x8967 -> Int16Array.t_to_js x8967
                     | `U4 x8968 -> Uint16Array.t_to_js x8968
                     | `U5 x8969 -> Int32Array.t_to_js x8969
                     | `U6 x8970 -> Uint32Array.t_to_js x8970));(Ojs.float_to_js
                                                                   x8971);(
                   Ojs.float_to_js x8972)|])
    let (wait' :
      typedArray:Int32Array.t ->
        index:float ->
          value:float ->
            ?timeout:float ->
              unit -> [ `L_s70_not_equal  | `L_s73_ok  | `L_s93_timed_out ])
      =
      fun ~typedArray:(x8973 : Int32Array.t) ->
        fun ~index:(x8974 : float) ->
          fun ~value:(x8975 : float) ->
            fun ?timeout:(x8976 : float option) ->
              fun () ->
                let x8980 =
                  let x8979 = Ojs.get_prop_ascii Ojs.global "Atomics" in
                  Ojs.call (Ojs.get_prop_ascii x8979 "wait") "apply"
                    [|x8979;((let x8977 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x8977 "push"
                                   [|(Int32Array.t_to_js x8973)|]);
                              ignore
                                (Ojs.call x8977 "push"
                                   [|(Ojs.float_to_js x8974)|]);
                              ignore
                                (Ojs.call x8977 "push"
                                   [|(Ojs.float_to_js x8975)|]);
                              (match x8976 with
                               | Some x8978 ->
                                   ignore
                                     (Ojs.call x8977 "push"
                                        [|(Ojs.float_to_js x8978)|])
                               | None -> ());
                              x8977))|] in
                match Ojs.string_of_js x8980 with
                | "not-equal" -> `L_s70_not_equal
                | "ok" -> `L_s73_ok
                | "timed-out" -> `L_s93_timed_out
                | _ -> assert false
    let (notify' :
      typedArray:Int32Array.t -> index:float -> ?count:float -> unit -> float)
      =
      fun ~typedArray:(x8981 : Int32Array.t) ->
        fun ~index:(x8982 : float) ->
          fun ?count:(x8983 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x8986 = Ojs.get_prop_ascii Ojs.global "Atomics" in
                 Ojs.call (Ojs.get_prop_ascii x8986 "notify") "apply"
                   [|x8986;((let x8984 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x8984 "push"
                                  [|(Int32Array.t_to_js x8981)|]);
                             ignore
                               (Ojs.call x8984 "push"
                                  [|(Ojs.float_to_js x8982)|]);
                             (match x8983 with
                              | Some x8985 ->
                                  ignore
                                    (Ojs.call x8984 "push"
                                       [|(Ojs.float_to_js x8985)|])
                              | None -> ());
                             x8984))|])
    let (xor' :
      typedArray:[ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                 | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                 | `U5 of Int32Array.t  | `U6 of Uint32Array.t ]
        -> index:float -> value:float -> float)
      =
      fun
        ~typedArray:(x8987 :
                      [ `U1 of Int8Array.t  | `U2 of Uint8Array.t 
                      | `U3 of Int16Array.t  | `U4 of Uint16Array.t 
                      | `U5 of Int32Array.t  | `U6 of Uint32Array.t ])
        ->
        fun ~index:(x8994 : float) ->
          fun ~value:(x8995 : float) ->
            Ojs.float_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "Atomics") "xor"
                 [|((match x8987 with
                     | `U1 x8988 -> Int8Array.t_to_js x8988
                     | `U2 x8989 -> Uint8Array.t_to_js x8989
                     | `U3 x8990 -> Int16Array.t_to_js x8990
                     | `U4 x8991 -> Uint16Array.t_to_js x8991
                     | `U5 x8992 -> Int32Array.t_to_js x8992
                     | `U6 x8993 -> Uint32Array.t_to_js x8993));(Ojs.float_to_js
                                                                   x8994);(
                   Ojs.float_to_js x8995)|])
  end
module PromiseRejectedResult =
  struct
    type t = [ `PromiseRejectedResult ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x8997 : Ojs.t) -> t_of_js x8997
    and t_0_to_js : t_0 -> Ojs.t = fun (x8996 : t) -> t_to_js x8996
    type tags = [ `PromiseRejectedResult ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `PromiseRejectedResult ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x9000 : Ojs.t) -> intf_of_js __tags_of_js x9000
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x8998 : __tags intf) -> intf_to_js __tags_to_js x8998
    let (get_status : 'tags this -> [ `L_s83_rejected ]) =
      fun (x9002 : 'tags this) ->
        let x9004 = Ojs.get_prop_ascii (this_to_js Obj.magic x9002) "status" in
        match Ojs.string_of_js x9004 with
        | "rejected" -> `L_s83_rejected
        | _ -> assert false
    let (set_status : 'tags this -> [ `L_s83_rejected ] -> unit) =
      fun (x9005 : 'tags this) ->
        fun (x9006 : [ `L_s83_rejected ]) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9005) "status"
            (match x9006 with
             | `L_s83_rejected -> Ojs.string_to_js "rejected")
    let (get_reason : 'tags this -> any) =
      fun (x9008 : 'tags this) ->
        any_of_js (Ojs.get_prop_ascii (this_to_js Obj.magic x9008) "reason")
    let (set_reason : 'tags this -> any -> unit) =
      fun (x9010 : 'tags this) ->
        fun (x9011 : any) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9010) "reason"
            (any_to_js x9011)
    let (create : status:[ `L_s83_rejected ] -> reason:any -> unit -> t) =
      fun ~status:(x9013 : [ `L_s83_rejected ]) ->
        fun ~reason:(x9014 : any) ->
          fun () ->
            let x9015 = Ojs.empty_obj () in
            Ojs.set_prop_ascii x9015 "status"
              (match x9013 with
               | `L_s83_rejected -> Ojs.string_to_js "rejected");
            Ojs.set_prop_ascii x9015 "reason" (any_to_js x9014);
            t_of_js x9015
    let cast_from = Obj.magic
  end
module PromiseFulfilledResult =
  struct
    type 'T t = [ `PromiseFulfilledResult of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x9018 : Ojs.t) -> t_of_js __T_of_js x9018
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x9016 : __T t) -> t_to_js __T_to_js x9016
    type 'T tags = [ `PromiseFulfilledResult of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `PromiseFulfilledResult of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x9022 : Ojs.t) -> intf_of_js __tags_of_js x9022
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x9020 : __tags intf) -> intf_to_js __tags_to_js x9020
    let (get_status : ('tags, 'T) this -> [ `L_s42_fulfilled ]) =
      fun (x9024 : ('tags, 'T) this) ->
        let x9027 =
          Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x9024) "status" in
        match Ojs.string_of_js x9027 with
        | "fulfilled" -> `L_s42_fulfilled
        | _ -> assert false
    let (set_status : ('tags, 'T) this -> [ `L_s42_fulfilled ] -> unit) =
      fun (x9028 : ('tags, 'T) this) ->
        fun (x9029 : [ `L_s42_fulfilled ]) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x9028) "status"
            (match x9029 with
             | `L_s42_fulfilled -> Ojs.string_to_js "fulfilled")
    let (get_value : ('tags, 'T) this -> 'T) =
      fun (x9032 : ('tags, 'T) this) ->
        Obj.magic
          (Ojs.get_prop_ascii (this_to_js Obj.magic Obj.magic x9032) "value")
    let (set_value : ('tags, 'T) this -> 'T -> unit) =
      fun (x9035 : ('tags, 'T) this) ->
        fun (x9036 : 'T) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic Obj.magic x9035) "value"
            (Obj.magic x9036)
    let (create : status:[ `L_s42_fulfilled ] -> value:'T -> unit -> 'T t) =
      fun ~status:(x9039 : [ `L_s42_fulfilled ]) ->
        fun ~value:(x9040 : 'T) ->
          fun () ->
            let x9041 = Ojs.empty_obj () in
            Ojs.set_prop_ascii x9041 "status"
              (match x9039 with
               | `L_s42_fulfilled -> Ojs.string_to_js "fulfilled");
            Ojs.set_prop_ascii x9041 "value" (Obj.magic x9040);
            t_of_js Obj.magic x9041
    let cast_from = Obj.magic
  end
module PromiseSettledResult =
  struct
    type 'T t =
      [ `U_s42_fulfilled of 'T PromiseFulfilledResult.t 
      | `U_s83_rejected of PromiseRejectedResult.t ]
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x9047 : Ojs.t) ->
          let x9048 = x9047 in
          match Ojs.string_of_js (Ojs.get_prop_ascii x9048 "status") with
          | "fulfilled" ->
              `U_s42_fulfilled
                (PromiseFulfilledResult.t_of_js __T_of_js x9048)
          | "rejected" ->
              `U_s83_rejected (PromiseRejectedResult.t_of_js x9048)
          | _ -> assert false
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun
          (x9043 :
            [ `U_s42_fulfilled of __T PromiseFulfilledResult.t 
            | `U_s83_rejected of PromiseRejectedResult.t ])
          ->
          match x9043 with
          | `U_s42_fulfilled x9044 ->
              PromiseFulfilledResult.t_to_js __T_to_js x9044
          | `U_s83_rejected x9046 -> PromiseRejectedResult.t_to_js x9046
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x9052 : Ojs.t) -> t_of_js __T_of_js x9052
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x9050 : __T t) -> t_to_js __T_to_js x9050
  end
module Awaited =
  struct
    type 'T t = any
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t = fun (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x9055 : Ojs.t) -> any_of_js x9055
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) -> fun (x9054 : any) -> any_to_js x9054
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x9058 : Ojs.t) -> t_of_js __T_of_js x9058
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x9056 : __T t) -> t_to_js __T_to_js x9056
  end
module Promise =
  struct
    type 'T t = [ `Promise of 'T  | 'T PromiseLike.tags_1] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x9062 : Ojs.t) -> t_of_js __T_of_js x9062
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x9060 : __T t) -> t_to_js __T_to_js x9060
    type 'T tags = [ `Promise of 'T  | 'T PromiseLike.tags_1]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this = 'tags intf constraint 'tags = [> `Promise of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x9066 : Ojs.t) -> intf_of_js __tags_of_js x9066
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x9064 : __tags intf) -> intf_to_js __tags_to_js x9064
    let (finally :
      ('tags, 'T) this ->
        ?onfinally:[ `Null  | `Undefined of undefined 
                   | `U1 of unit -> unit ]
          -> unit -> 'T t)
      =
      fun (x9073 : ('tags, 'T) this) ->
        fun
          ?onfinally:(x9068 :
                       [ `Null  | `Undefined of undefined 
                       | `U1 of unit -> unit ] option)
          ->
          fun () ->
            t_of_js Obj.magic
              (let x9076 = this_to_js Obj.magic Obj.magic x9073 in
               Ojs.call (Ojs.get_prop_ascii x9076 "finally") "apply"
                 [|x9076;((let x9069 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9068 with
                            | Some x9070 ->
                                ignore
                                  (Ojs.call x9069 "push"
                                     [|((match x9070 with
                                         | `Null -> Ojs.null
                                         | `Undefined x9071 ->
                                             undefined_to_js x9071
                                         | `U1 x9072 ->
                                             Ojs.fun_to_js 1
                                               (fun _ -> x9072 ())))|])
                            | None -> ());
                           x9069))|])
    let (then_ :
      ('tags, 'T) this ->
        ?onfulfilled:[ `Null  | `Undefined of undefined 
                     | `U1 of
                         'T ->
                           [ `U1 of 'TResult1 
                           | `U2 of 'TResult1 PromiseLike.t ]
                         ]
          ->
          ?onrejected:[ `Null  | `Undefined of undefined 
                      | `U1 of
                          any ->
                            [ `U1 of 'TResult2 
                            | `U2 of 'TResult2 PromiseLike.t ]
                          ]
            -> unit -> ('TResult1, 'TResult2) union2 t)
      =
      fun (x9095 : ('tags, 'T) this) ->
        fun
          ?onfulfilled:(x9078 :
                         [ `Null  | `Undefined of undefined 
                         | `U1 of
                             'T ->
                               [ `U1 of 'TResult1 
                               | `U2 of 'TResult1 PromiseLike.t ]
                             ]
                           option)
          ->
          fun
            ?onrejected:(x9079 :
                          [ `Null  | `Undefined of undefined 
                          | `U1 of
                              any ->
                                [ `U1 of 'TResult2 
                                | `U2 of 'TResult2 PromiseLike.t ]
                              ]
                            option)
            ->
            fun () ->
              t_of_js
                (fun (x9099 : Ojs.t) ->
                   union2_of_js Obj.magic Obj.magic x9099)
                (let x9098 = this_to_js Obj.magic Obj.magic x9095 in
                 Ojs.call (Ojs.get_prop_ascii x9098 "then") "apply"
                   [|x9098;((let x9080 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x9078 with
                              | Some x9088 ->
                                  ignore
                                    (Ojs.call x9080 "push"
                                       [|((match x9088 with
                                           | `Null -> Ojs.null
                                           | `Undefined x9089 ->
                                               undefined_to_js x9089
                                           | `U1 x9090 ->
                                               Ojs.fun_to_js 1
                                                 (fun (x9091 : Ojs.t) ->
                                                    match x9090
                                                            (Obj.magic x9091)
                                                    with
                                                    | `U1 x9092 ->
                                                        Obj.magic x9092
                                                    | `U2 x9093 ->
                                                        PromiseLike.t_to_js
                                                          Obj.magic x9093)))|])
                              | None -> ());
                             (match x9079 with
                              | Some x9081 ->
                                  ignore
                                    (Ojs.call x9080 "push"
                                       [|((match x9081 with
                                           | `Null -> Ojs.null
                                           | `Undefined x9082 ->
                                               undefined_to_js x9082
                                           | `U1 x9083 ->
                                               Ojs.fun_to_js 1
                                                 (fun (x9084 : Ojs.t) ->
                                                    match x9083
                                                            (any_of_js x9084)
                                                    with
                                                    | `U1 x9085 ->
                                                        Obj.magic x9085
                                                    | `U2 x9086 ->
                                                        PromiseLike.t_to_js
                                                          Obj.magic x9086)))|])
                              | None -> ());
                             x9080))|])
    let (catch :
      ('tags, 'T) this ->
        ?onrejected:[ `Null  | `Undefined of undefined 
                    | `U1 of
                        any ->
                          [ `U1 of 'TResult 
                          | `U2 of 'TResult PromiseLike.t ]
                        ]
          -> unit -> ('T, 'TResult) union2 t)
      =
      fun (x9111 : ('tags, 'T) this) ->
        fun
          ?onrejected:(x9102 :
                        [ `Null  | `Undefined of undefined 
                        | `U1 of
                            any ->
                              [ `U1 of 'TResult 
                              | `U2 of 'TResult PromiseLike.t ]
                            ]
                          option)
          ->
          fun () ->
            t_of_js
              (fun (x9115 : Ojs.t) -> union2_of_js Obj.magic Obj.magic x9115)
              (let x9114 = this_to_js Obj.magic Obj.magic x9111 in
               Ojs.call (Ojs.get_prop_ascii x9114 "catch") "apply"
                 [|x9114;((let x9103 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9102 with
                            | Some x9104 ->
                                ignore
                                  (Ojs.call x9103 "push"
                                     [|((match x9104 with
                                         | `Null -> Ojs.null
                                         | `Undefined x9105 ->
                                             undefined_to_js x9105
                                         | `U1 x9106 ->
                                             Ojs.fun_to_js 1
                                               (fun (x9107 : Ojs.t) ->
                                                  match x9106
                                                          (any_of_js x9107)
                                                  with
                                                  | `U1 x9108 ->
                                                      Obj.magic x9108
                                                  | `U2 x9109 ->
                                                      PromiseLike.t_to_js
                                                        Obj.magic x9109)))|])
                            | None -> ());
                           x9103))|])
    let (any :
      [ `U1 of [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] list 
      | `U2 of [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t ] -> 
        'T t)
      =
      fun
        (x9118 :
          [ `U1 of [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] list 
          | `U2 of [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t ])
        ->
        t_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "any"
             [|((match x9118 with
                 | `U1 x9119 ->
                     Ojs.list_to_js
                       (fun
                          (x9120 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ])
                          ->
                          match x9120 with
                          | `U1 x9121 -> Obj.magic x9121
                          | `U2 x9122 -> PromiseLike.t_to_js Obj.magic x9122)
                       x9119
                 | `U2 x9124 ->
                     Iterable.t_to_js
                       (fun
                          (x9125 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ])
                          ->
                          match x9125 with
                          | `U1 x9126 -> Obj.magic x9126
                          | `U2 x9127 -> PromiseLike.t_to_js Obj.magic x9127)
                       x9124))|])
    let (any' : 'T -> any Awaited.t t) =
      fun (x9130 : 'T) ->
        t_of_js (fun (x9131 : Ojs.t) -> Awaited.t_of_js any_of_js x9131)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "any"
             [|(Obj.magic x9130)|])
    let (any'' :
      [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t -> 'T Awaited.t t)
      =
      fun (x9133 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t) ->
        t_of_js (fun (x9138 : Ojs.t) -> Awaited.t_of_js Obj.magic x9138)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "any"
             [|(Iterable.t_to_js
                  (fun (x9134 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ]) ->
                     match x9134 with
                     | `U1 x9135 -> Obj.magic x9135
                     | `U2 x9136 -> PromiseLike.t_to_js Obj.magic x9136)
                  x9133)|])
    let (allSettled : 'T -> any t) =
      fun (x9140 : 'T) ->
        t_of_js any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "allSettled"
             [|(Obj.magic x9140)|])
    let (allSettled' :
      [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t ->
        'T Awaited.t PromiseSettledResult.t list t)
      =
      fun (x9142 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t) ->
        t_of_js
          (fun (x9147 : Ojs.t) ->
             Ojs.list_of_js
               (fun (x9148 : Ojs.t) ->
                  PromiseSettledResult.t_of_js
                    (fun (x9149 : Ojs.t) -> Awaited.t_of_js Obj.magic x9149)
                    x9148) x9147)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "allSettled"
             [|(Iterable.t_to_js
                  (fun (x9143 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ]) ->
                     match x9143 with
                     | `U1 x9144 -> Obj.magic x9144
                     | `U2 x9145 -> PromiseLike.t_to_js Obj.magic x9145)
                  x9142)|])
    let (prototype : unit -> any t) =
      fun () ->
        t_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Promise")
             "prototype")
    let (create :
      (resolve:([ `U1 of 'T  | `U2 of 'T PromiseLike.t ] -> unit) ->
         reject:(?reason:any -> unit -> unit) -> unit)
        -> 'T t)
      =
      fun
        (x9152 :
          resolve:([ `U1 of 'T  | `U2 of 'T PromiseLike.t ] -> unit) ->
            reject:(?reason:any -> unit -> unit) -> unit)
        ->
        t_of_js Obj.magic
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Promise")
             [|(Ojs.fun_to_js 2
                  (fun (x9153 : Ojs.t) ->
                     fun (x9158 : Ojs.t) ->
                       x9152
                         ~resolve:(fun
                                     (x9154 :
                                       [ `U1 of 'T 
                                       | `U2 of 'T PromiseLike.t ])
                                     ->
                                     ignore
                                       (Ojs.apply x9153
                                          [|((match x9154 with
                                              | `U1 x9155 -> Obj.magic x9155
                                              | `U2 x9156 ->
                                                  PromiseLike.t_to_js
                                                    Obj.magic x9156))|]))
                         ~reject:(fun ?reason:(x9159 : any option) ->
                                    fun () ->
                                      ignore
                                        (Ojs.call x9158 "apply"
                                           [|Ojs.null;((let x9160 =
                                                          Ojs.new_obj
                                                            (Ojs.get_prop_ascii
                                                               Ojs.global
                                                               "Array") 
                                                            [||] in
                                                        (match x9159 with
                                                         | Some x9161 ->
                                                             ignore
                                                               (Ojs.call
                                                                  x9160
                                                                  "push"
                                                                  [|(
                                                                    any_to_js
                                                                    x9161)|])
                                                         | None -> ());
                                                        x9160))|]))))|])
    let (all : 'T -> any t) =
      fun (x9163 : 'T) ->
        t_of_js any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "all"
             [|(Obj.magic x9163)|])
    let (race : 'T -> any Awaited.t t) =
      fun (x9165 : 'T) ->
        t_of_js (fun (x9166 : Ojs.t) -> Awaited.t_of_js any_of_js x9166)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "race"
             [|(Obj.magic x9165)|])
    let (reject : ?reason:any -> unit -> 'T t) =
      fun ?reason:(x9168 : any option) ->
        fun () ->
          t_of_js Obj.magic
            (let x9171 = Ojs.get_prop_ascii Ojs.global "Promise" in
             Ojs.call (Ojs.get_prop_ascii x9171 "reject") "apply"
               [|x9171;((let x9169 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         (match x9168 with
                          | Some x9170 ->
                              ignore
                                (Ojs.call x9169 "push" [|(any_to_js x9170)|])
                          | None -> ());
                         x9169))|])
    let (resolve : unit -> unit t) =
      fun () ->
        t_of_js Ojs.unit_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "resolve" [||])
    let (resolve' : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] -> 'T t) =
      fun (x9174 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ]) ->
        t_of_js Obj.magic
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "resolve"
             [|((match x9174 with
                 | `U1 x9175 -> Obj.magic x9175
                 | `U2 x9176 -> PromiseLike.t_to_js Obj.magic x9176))|])
    let (all' :
      [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t ->
        'T Awaited.t list t)
      =
      fun (x9179 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t) ->
        t_of_js
          (fun (x9184 : Ojs.t) ->
             Ojs.list_of_js
               (fun (x9185 : Ojs.t) -> Awaited.t_of_js Obj.magic x9185) x9184)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "all"
             [|(Iterable.t_to_js
                  (fun (x9180 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ]) ->
                     match x9180 with
                     | `U1 x9181 -> Obj.magic x9181
                     | `U2 x9182 -> PromiseLike.t_to_js Obj.magic x9182)
                  x9179)|])
    let (race' :
      [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t -> 'T Awaited.t t)
      =
      fun (x9187 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ] Iterable.t) ->
        t_of_js (fun (x9192 : Ojs.t) -> Awaited.t_of_js Obj.magic x9192)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "race"
             [|(Iterable.t_to_js
                  (fun (x9188 : [ `U1 of 'T  | `U2 of 'T PromiseLike.t ]) ->
                     match x9188 with
                     | `U1 x9189 -> Obj.magic x9189
                     | `U2 x9190 -> PromiseLike.t_to_js Obj.magic x9190)
                  x9187)|])
    let cast_from = Obj.magic
  end
module AsyncIterator =
  struct
    type ('T, 'TReturn, 'TNext) t =
      [ `AsyncIterator of ('T * 'TReturn * 'TNext) ] intf
    let rec t_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    and t_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t -> Ojs.t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    type ('T, 'TReturn, 'TNext) t_3 = ('T, 'TReturn, 'TNext) t
    let rec t_3_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t_3
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (__TNext_of_js : Ojs.t -> __TNext) ->
            fun (x9198 : Ojs.t) ->
              t_of_js __T_of_js __TReturn_of_js __TNext_of_js x9198
    and t_3_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t_3 -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (__TNext_to_js : __TNext -> Ojs.t) ->
            fun (x9194 : (__T, __TReturn, __TNext) t) ->
              t_to_js __T_to_js __TReturn_to_js __TNext_to_js x9194
    type ('T, 'TReturn) t_2 = ('T, 'TReturn, undefined) t
    let rec t_2_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t_2
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (x9206 : Ojs.t) ->
            t_of_js __T_of_js __TReturn_of_js undefined_of_js x9206
    and t_2_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t_2 -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (x9202 : (__T, __TReturn, undefined) t) ->
            t_to_js __T_to_js __TReturn_to_js undefined_to_js x9202
    type 'T t_1 = ('T, any, undefined) t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x9214 : Ojs.t) ->
          t_of_js __T_of_js any_of_js undefined_of_js x9214
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x9210 : (__T, any, undefined) t) ->
          t_to_js __T_to_js any_to_js undefined_to_js x9210
    type ('T, 'TReturn, 'TNext) tags =
      [ `AsyncIterator of ('T * 'TReturn * 'TNext) ]
    type ('T, 'TReturn, 'TNext) tags_3 = ('T, 'TReturn, 'TNext) tags
    type ('T, 'TReturn) tags_2 = ('T, 'TReturn, undefined) tags
    type 'T tags_1 = ('T, any, undefined) tags
    type ('tags, 'T, 'TReturn, 'TNext) this =
      'tags intf constraint 'tags =
                  [> `AsyncIterator of ('T * 'TReturn * 'TNext) ]
    let rec this_of_js :
      'tags 'T 'TReturn 'TNext .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'T) ->
            (Ojs.t -> 'TReturn) ->
              (Ojs.t -> 'TNext) ->
                Ojs.t -> ('tags, 'T, 'TReturn, 'TNext) this
      = fun (type __tags) -> fun (type __T) -> fun (type __TReturn) -> fun
      (type __TNext) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
            fun (__TNext_of_js : Ojs.t -> __TNext) ->
              fun (x9220 : Ojs.t) -> intf_of_js __tags_of_js x9220
    and this_to_js :
      'tags 'T 'TReturn 'TNext .
        ('tags -> Ojs.t) ->
          ('T -> Ojs.t) ->
            ('TReturn -> Ojs.t) ->
              ('TNext -> Ojs.t) ->
                ('tags, 'T, 'TReturn, 'TNext) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) -> fun (type __TReturn) -> fun
      (type __TNext) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
            fun (__TNext_to_js : __TNext -> Ojs.t) ->
              fun (x9218 : __tags intf) -> intf_to_js __tags_to_js x9218
    let (next :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        args:any list -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x9225 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~args:(x9222 : any list) ->
          Promise.t_of_js
            (fun (x9231 : Ojs.t) ->
               IteratorResult.t_of_js Obj.magic Obj.magic x9231)
            (let x9230 =
               this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x9225 in
             Ojs.call (Ojs.get_prop_ascii x9230 "next") "apply"
               [|x9230;((let x9223 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x9224 : any) ->
                              ignore
                                (Ojs.call x9223 "push" [|(any_to_js x9224)|]))
                           x9222;
                         x9223))|])
    let (return :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        ?value:[ `U1 of 'TReturn  | `U2 of 'TReturn PromiseLike.t ] ->
          unit -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x9240 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun
          ?value:(x9234 :
                   [ `U1 of 'TReturn  | `U2 of 'TReturn PromiseLike.t ]
                     option)
          ->
          fun () ->
            Promise.t_of_js
              (fun (x9246 : Ojs.t) ->
                 IteratorResult.t_of_js Obj.magic Obj.magic x9246)
              (let x9245 =
                 this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x9240 in
               Ojs.call (Ojs.get_prop_ascii x9245 "return") "apply"
                 [|x9245;((let x9235 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9234 with
                            | Some x9236 ->
                                ignore
                                  (Ojs.call x9235 "push"
                                     [|((match x9236 with
                                         | `U1 x9237 -> Obj.magic x9237
                                         | `U2 x9238 ->
                                             PromiseLike.t_to_js Obj.magic
                                               x9238))|])
                            | None -> ());
                           x9235))|])
    let (throw :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        ?e:any -> unit -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x9252 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ?e:(x9249 : any option) ->
          fun () ->
            Promise.t_of_js
              (fun (x9258 : Ojs.t) ->
                 IteratorResult.t_of_js Obj.magic Obj.magic x9258)
              (let x9257 =
                 this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x9252 in
               Ojs.call (Ojs.get_prop_ascii x9257 "throw") "apply"
                 [|x9257;((let x9250 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9249 with
                            | Some x9251 ->
                                ignore
                                  (Ojs.call x9250 "push"
                                     [|(any_to_js x9251)|])
                            | None -> ());
                           x9250))|])
    let cast_from = Obj.magic
  end
module AsyncIterableIterator =
  struct
    type 'T t =
      [ `AsyncIterableIterator of 'T 
      | `AsyncIterator of ('T * any * undefined) ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x9263 : Ojs.t) -> t_of_js __T_of_js x9263
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x9261 : __T t) -> t_to_js __T_to_js x9261
    type 'T tags =
      [ `AsyncIterableIterator of 'T 
      | `AsyncIterator of ('T * any * undefined) ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `AsyncIterableIterator of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x9267 : Ojs.t) -> intf_of_js __tags_of_js x9267
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x9265 : __tags intf) -> intf_to_js __tags_to_js x9265
    let cast_from = Obj.magic
  end
module AsyncIterable =
  struct
    type 'T t = [ `AsyncIterable of 'T ] intf
    let rec t_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t =
      fun _T -> Obj.magic
    and t_to_js : 'T . ('T -> Ojs.t) -> 'T t -> Ojs.t = fun _T -> Obj.magic
    type 'T t_1 = 'T t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x9271 : Ojs.t) -> t_of_js __T_of_js x9271
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x9269 : __T t) -> t_to_js __T_to_js x9269
    type 'T tags = [ `AsyncIterable of 'T ]
    type 'T tags_1 = 'T tags
    type ('tags, 'T) this =
      'tags intf constraint 'tags = [> `AsyncIterable of 'T ]
    let rec this_of_js :
      'tags 'T .
        (Ojs.t -> 'tags) -> (Ojs.t -> 'T) -> Ojs.t -> ('tags, 'T) this
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (x9275 : Ojs.t) -> intf_of_js __tags_of_js x9275
    and this_to_js :
      'tags 'T .
        ('tags -> Ojs.t) -> ('T -> Ojs.t) -> ('tags, 'T) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (x9273 : __tags intf) -> intf_to_js __tags_to_js x9273
    let cast_from = Obj.magic
  end
module AsyncGenerator =
  struct
    type ('T, 'TReturn, 'TNext) t =
      [ `AsyncGenerator of ('T * 'TReturn * 'TNext) 
      | `AsyncIterator of ('T * 'TReturn * 'TNext) ] intf
    let rec t_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    and t_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t -> Ojs.t
      = fun _T -> fun _TReturn -> fun _TNext -> Obj.magic
    type ('T, 'TReturn, 'TNext) t_3 = ('T, 'TReturn, 'TNext) t
    let rec t_3_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) t_3
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (__TNext_of_js : Ojs.t -> __TNext) ->
            fun (x9281 : Ojs.t) ->
              t_of_js __T_of_js __TReturn_of_js __TNext_of_js x9281
    and t_3_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) t_3 -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (__TNext_to_js : __TNext -> Ojs.t) ->
            fun (x9277 : (__T, __TReturn, __TNext) t) ->
              t_to_js __T_to_js __TReturn_to_js __TNext_to_js x9277
    type ('T, 'TReturn) t_2 = ('T, 'TReturn, unknown) t
    let rec t_2_of_js :
      'T 'TReturn .
        (Ojs.t -> 'T) -> (Ojs.t -> 'TReturn) -> Ojs.t -> ('T, 'TReturn) t_2
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (x9289 : Ojs.t) ->
            t_of_js __T_of_js __TReturn_of_js unknown_of_js x9289
    and t_2_to_js :
      'T 'TReturn .
        ('T -> Ojs.t) -> ('TReturn -> Ojs.t) -> ('T, 'TReturn) t_2 -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (x9285 : (__T, __TReturn, unknown) t) ->
            t_to_js __T_to_js __TReturn_to_js unknown_to_js x9285
    type 'T t_1 = ('T, any, unknown) t
    let rec t_1_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T t_1 = fun (type
      __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x9297 : Ojs.t) ->
          t_of_js __T_of_js any_of_js unknown_of_js x9297
    and t_1_to_js : 'T . ('T -> Ojs.t) -> 'T t_1 -> Ojs.t = fun (type __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x9293 : (__T, any, unknown) t) ->
          t_to_js __T_to_js any_to_js unknown_to_js x9293
    type t_0 = (unknown, any, unknown) t
    let rec t_0_of_js : Ojs.t -> t_0 =
      fun (x9305 : Ojs.t) ->
        t_of_js unknown_of_js any_of_js unknown_of_js x9305
    and t_0_to_js : t_0 -> Ojs.t =
      fun (x9301 : (unknown, any, unknown) t) ->
        t_to_js unknown_to_js any_to_js unknown_to_js x9301
    type ('T, 'TReturn, 'TNext) tags =
      [ `AsyncGenerator of ('T * 'TReturn * 'TNext) 
      | `AsyncIterator of ('T * 'TReturn * 'TNext) ]
    type ('T, 'TReturn, 'TNext) tags_3 = ('T, 'TReturn, 'TNext) tags
    type ('T, 'TReturn) tags_2 = ('T, 'TReturn, unknown) tags
    type 'T tags_1 = ('T, any, unknown) tags
    type tags_0 = (unknown, any, unknown) tags
    type ('tags, 'T, 'TReturn, 'TNext) this =
      'tags intf constraint 'tags =
                  [> `AsyncGenerator of ('T * 'TReturn * 'TNext) ]
    let rec this_of_js :
      'tags 'T 'TReturn 'TNext .
        (Ojs.t -> 'tags) ->
          (Ojs.t -> 'T) ->
            (Ojs.t -> 'TReturn) ->
              (Ojs.t -> 'TNext) ->
                Ojs.t -> ('tags, 'T, 'TReturn, 'TNext) this
      = fun (type __tags) -> fun (type __T) -> fun (type __TReturn) -> fun
      (type __TNext) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (__T_of_js : Ojs.t -> __T) ->
          fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
            fun (__TNext_of_js : Ojs.t -> __TNext) ->
              fun (x9311 : Ojs.t) -> intf_of_js __tags_of_js x9311
    and this_to_js :
      'tags 'T 'TReturn 'TNext .
        ('tags -> Ojs.t) ->
          ('T -> Ojs.t) ->
            ('TReturn -> Ojs.t) ->
              ('TNext -> Ojs.t) ->
                ('tags, 'T, 'TReturn, 'TNext) this -> Ojs.t
      = fun (type __tags) -> fun (type __T) -> fun (type __TReturn) -> fun
      (type __TNext) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (__T_to_js : __T -> Ojs.t) ->
          fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
            fun (__TNext_to_js : __TNext -> Ojs.t) ->
              fun (x9309 : __tags intf) -> intf_to_js __tags_to_js x9309
    let (next :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        args:any list -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x9316 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~args:(x9313 : any list) ->
          Promise.t_of_js
            (fun (x9322 : Ojs.t) ->
               IteratorResult.t_of_js Obj.magic Obj.magic x9322)
            (let x9321 =
               this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x9316 in
             Ojs.call (Ojs.get_prop_ascii x9321 "next") "apply"
               [|x9321;((let x9314 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x9315 : any) ->
                              ignore
                                (Ojs.call x9314 "push" [|(any_to_js x9315)|]))
                           x9313;
                         x9314))|])
    let (return :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        value:[ `U1 of 'TReturn  | `U2 of 'TReturn PromiseLike.t ] ->
          ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x9329 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun
          ~value:(x9325 :
                   [ `U1 of 'TReturn  | `U2 of 'TReturn PromiseLike.t ])
          ->
          Promise.t_of_js
            (fun (x9334 : Ojs.t) ->
               IteratorResult.t_of_js Obj.magic Obj.magic x9334)
            (Ojs.call
               (this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x9329)
               "return"
               [|((match x9325 with
                   | `U1 x9326 -> Obj.magic x9326
                   | `U2 x9327 -> PromiseLike.t_to_js Obj.magic x9327))|])
    let (throw :
      ('tags, 'T, 'TReturn, 'TNext) this ->
        e:any -> ('T, 'TReturn) IteratorResult.t Promise.t)
      =
      fun (x9338 : ('tags, 'T, 'TReturn, 'TNext) this) ->
        fun ~e:(x9337 : any) ->
          Promise.t_of_js
            (fun (x9343 : Ojs.t) ->
               IteratorResult.t_of_js Obj.magic Obj.magic x9343)
            (Ojs.call
               (this_to_js Obj.magic Obj.magic Obj.magic Obj.magic x9338)
               "throw" [|(any_to_js x9337)|])
    let cast_from = Obj.magic
  end
module AsyncGeneratorFunction =
  struct
    type t = [ `AsyncGeneratorFunction ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x9347 : Ojs.t) -> t_of_js x9347
    and t_0_to_js : t_0 -> Ojs.t = fun (x9346 : t) -> t_to_js x9346
    type tags = [ `AsyncGeneratorFunction ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `AsyncGeneratorFunction ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x9350 : Ojs.t) -> intf_of_js __tags_of_js x9350
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x9348 : __tags intf) -> intf_to_js __tags_to_js x9348
    let (create : 'tags this -> args:any list -> AsyncGenerator.t_0) =
      fun (x9355 : 'tags this) ->
        fun ~args:(x9352 : any list) ->
          AsyncGenerator.t_0_of_js
            (Ojs.new_obj_arr (this_to_js Obj.magic x9355)
               (let x9353 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                List.iter
                  (fun (x9354 : any) ->
                     ignore (Ojs.call x9353 "push" [|(any_to_js x9354)|]))
                  x9352;
                x9353))
    let (apply : 'tags this -> args:any list -> AsyncGenerator.t_0) =
      fun (x9360 : 'tags this) ->
        fun ~args:(x9357 : any list) ->
          AsyncGenerator.t_0_of_js
            (Ojs.call (this_to_js Obj.magic x9360) "apply"
               [|Ojs.null;((let x9358 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            List.iter
                              (fun (x9359 : any) ->
                                 ignore
                                   (Ojs.call x9358 "push"
                                      [|(any_to_js x9359)|])) x9357;
                            x9358))|])
    let (get_length : 'tags this -> float) =
      fun (x9362 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9362) "length")
    let (get_name : 'tags this -> string) =
      fun (x9364 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9364) "name")
    let (get_prototype : 'tags this -> AsyncGenerator.t_0) =
      fun (x9366 : 'tags this) ->
        AsyncGenerator.t_0_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9366) "prototype")
    let cast_from = Obj.magic
  end
module AsyncGeneratorFunctionConstructor =
  struct
    type t = [ `AsyncGeneratorFunctionConstructor ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x9369 : Ojs.t) -> t_of_js x9369
    and t_0_to_js : t_0 -> Ojs.t = fun (x9368 : t) -> t_to_js x9368
    type tags = [ `AsyncGeneratorFunctionConstructor ]
    type tags_0 = tags
    type 'tags this =
      'tags intf constraint 'tags = [> `AsyncGeneratorFunctionConstructor ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x9372 : Ojs.t) -> intf_of_js __tags_of_js x9372
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x9370 : __tags intf) -> intf_to_js __tags_to_js x9370
    let (create : 'tags this -> args:string list -> AsyncGeneratorFunction.t)
      =
      fun (x9377 : 'tags this) ->
        fun ~args:(x9374 : string list) ->
          AsyncGeneratorFunction.t_of_js
            (Ojs.new_obj_arr (this_to_js Obj.magic x9377)
               (let x9375 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                List.iter
                  (fun (x9376 : string) ->
                     ignore
                       (Ojs.call x9375 "push" [|(Ojs.string_to_js x9376)|]))
                  x9374;
                x9375))
    let (apply : 'tags this -> args:string list -> AsyncGeneratorFunction.t)
      =
      fun (x9382 : 'tags this) ->
        fun ~args:(x9379 : string list) ->
          AsyncGeneratorFunction.t_of_js
            (Ojs.call (this_to_js Obj.magic x9382) "apply"
               [|Ojs.null;((let x9380 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            List.iter
                              (fun (x9381 : string) ->
                                 ignore
                                   (Ojs.call x9380 "push"
                                      [|(Ojs.string_to_js x9381)|])) x9379;
                            x9380))|])
    let (get_length : 'tags this -> float) =
      fun (x9384 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9384) "length")
    let (get_name : 'tags this -> string) =
      fun (x9386 : 'tags this) ->
        Ojs.string_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9386) "name")
    let (get_prototype : 'tags this -> AsyncGeneratorFunction.t) =
      fun (x9388 : 'tags this) ->
        AsyncGeneratorFunction.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9388) "prototype")
    let cast_from = Obj.magic
  end
module ArrayBufferView =
  struct
    type t = [ `ArrayBufferView ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x9391 : Ojs.t) -> t_of_js x9391
    and t_0_to_js : t_0 -> Ojs.t = fun (x9390 : t) -> t_to_js x9390
    type tags = [ `ArrayBufferView ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ArrayBufferView ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x9394 : Ojs.t) -> intf_of_js __tags_of_js x9394
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x9392 : __tags intf) -> intf_to_js __tags_to_js x9392
    let (get_buffer : 'tags this -> ArrayBufferLike.t) =
      fun (x9396 : 'tags this) ->
        ArrayBufferLike.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9396) "buffer")
    let (set_buffer : 'tags this -> ArrayBufferLike.t -> unit) =
      fun (x9398 : 'tags this) ->
        fun (x9399 : ArrayBufferLike.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9398) "buffer"
            (ArrayBufferLike.t_to_js x9399)
    let (get_byteLength : 'tags this -> float) =
      fun (x9401 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9401) "byteLength")
    let (set_byteLength : 'tags this -> float -> unit) =
      fun (x9403 : 'tags this) ->
        fun (x9404 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9403) "byteLength"
            (Ojs.float_to_js x9404)
    let (get_byteOffset : 'tags this -> float) =
      fun (x9406 : 'tags this) ->
        Ojs.float_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9406) "byteOffset")
    let (set_byteOffset : 'tags this -> float -> unit) =
      fun (x9408 : 'tags this) ->
        fun (x9409 : float) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9408) "byteOffset"
            (Ojs.float_to_js x9409)
    let (create :
      buffer:ArrayBufferLike.t ->
        byteLength:float -> byteOffset:float -> unit -> t)
      =
      fun ~buffer:(x9411 : ArrayBufferLike.t) ->
        fun ~byteLength:(x9412 : float) ->
          fun ~byteOffset:(x9413 : float) ->
            fun () ->
              let x9414 = Ojs.empty_obj () in
              Ojs.set_prop_ascii x9414 "buffer"
                (ArrayBufferLike.t_to_js x9411);
              Ojs.set_prop_ascii x9414 "byteLength" (Ojs.float_to_js x9412);
              Ojs.set_prop_ascii x9414 "byteOffset" (Ojs.float_to_js x9413);
              t_of_js x9414
    let cast_from = Obj.magic
  end
module ArrayBufferTypes =
  struct
    type t = [ `ArrayBufferTypes ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x9416 : Ojs.t) -> t_of_js x9416
    and t_0_to_js : t_0 -> Ojs.t = fun (x9415 : t) -> t_to_js x9415
    type tags = [ `ArrayBufferTypes ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `ArrayBufferTypes ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x9419 : Ojs.t) -> intf_of_js __tags_of_js x9419
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x9417 : __tags intf) -> intf_to_js __tags_to_js x9417
    let (get_SharedArrayBuffer : 'tags this -> SharedArrayBuffer.t) =
      fun (x9421 : 'tags this) ->
        SharedArrayBuffer.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9421)
             "SharedArrayBuffer")
    let (set_SharedArrayBuffer : 'tags this -> SharedArrayBuffer.t -> unit) =
      fun (x9423 : 'tags this) ->
        fun (x9424 : SharedArrayBuffer.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9423) "SharedArrayBuffer"
            (SharedArrayBuffer.t_to_js x9424)
    let (get_ArrayBuffer : 'tags this -> ArrayBuffer.t) =
      fun (x9426 : 'tags this) ->
        ArrayBuffer.t_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9426) "ArrayBuffer")
    let (set_ArrayBuffer : 'tags this -> ArrayBuffer.t -> unit) =
      fun (x9428 : 'tags this) ->
        fun (x9429 : ArrayBuffer.t) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9428) "ArrayBuffer"
            (ArrayBuffer.t_to_js x9429)
    let (create :
      sharedArrayBuffer:SharedArrayBuffer.t ->
        arrayBuffer:ArrayBuffer.t -> unit -> t)
      =
      fun ~sharedArrayBuffer:(x9431 : SharedArrayBuffer.t) ->
        fun ~arrayBuffer:(x9432 : ArrayBuffer.t) ->
          fun () ->
            let x9433 = Ojs.empty_obj () in
            Ojs.set_prop_ascii x9433 "SharedArrayBuffer"
              (SharedArrayBuffer.t_to_js x9431);
            Ojs.set_prop_ascii x9433 "ArrayBuffer"
              (ArrayBuffer.t_to_js x9432);
            t_of_js x9433
    let cast_from = Obj.magic
  end
module AggregateError =
  struct
    type t = [ `AggregateError  | `Error ] intf
    let rec t_of_js : Ojs.t -> t = Obj.magic
    and t_to_js : t -> Ojs.t = Obj.magic
    type t_0 = t
    let rec t_0_of_js : Ojs.t -> t_0 = fun (x9435 : Ojs.t) -> t_of_js x9435
    and t_0_to_js : t_0 -> Ojs.t = fun (x9434 : t) -> t_to_js x9434
    type tags = [ `AggregateError  | `Error ]
    type tags_0 = tags
    type 'tags this = 'tags intf constraint 'tags = [> `AggregateError ]
    let rec this_of_js : 'tags . (Ojs.t -> 'tags) -> Ojs.t -> 'tags this =
      fun (type __tags) ->
      fun (__tags_of_js : Ojs.t -> __tags) ->
        fun (x9438 : Ojs.t) -> intf_of_js __tags_of_js x9438
    and this_to_js : 'tags . ('tags -> Ojs.t) -> 'tags this -> Ojs.t = fun
      (type __tags) ->
      fun (__tags_to_js : __tags -> Ojs.t) ->
        fun (x9436 : __tags intf) -> intf_to_js __tags_to_js x9436
    let (get_errors : 'tags this -> any list) =
      fun (x9440 : 'tags this) ->
        Ojs.list_of_js any_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9440) "errors")
    let (set_errors : 'tags this -> any list -> unit) =
      fun (x9443 : 'tags this) ->
        fun (x9444 : any list) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9443) "errors"
            (Ojs.list_to_js any_to_js x9444)
    let (get_errors' : 'tags this -> any list) =
      fun (x9447 : 'tags this) ->
        Ojs.list_of_js any_of_js
          (Ojs.get_prop_ascii (this_to_js Obj.magic x9447) "errors")
    let (set_errors' : 'tags this -> any list -> unit) =
      fun (x9450 : 'tags this) ->
        fun (x9451 : any list) ->
          Ojs.set_prop_ascii (this_to_js Obj.magic x9450) "errors"
            (Ojs.list_to_js any_to_js x9451)
    let (create : errors:any Iterable.t -> ?message:string -> unit -> t) =
      fun ~errors:(x9454 : any Iterable.t) ->
        fun ?message:(x9455 : string option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr
                 (Ojs.get_prop_ascii Ojs.global "AggregateError")
                 (let x9456 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore
                    (Ojs.call x9456 "push"
                       [|(Iterable.t_to_js any_to_js x9454)|]);
                  (match x9455 with
                   | Some x9457 ->
                       ignore
                         (Ojs.call x9456 "push" [|(Ojs.string_to_js x9457)|])
                   | None -> ());
                  x9456))
    let (invoke : errors:any Iterable.t -> ?message:string -> unit -> t) =
      fun ~errors:(x9459 : any Iterable.t) ->
        fun ?message:(x9460 : string option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "AggregateError")
                 "apply"
                 [|Ojs.null;((let x9461 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x9461 "push"
                                   [|(Iterable.t_to_js any_to_js x9459)|]);
                              (match x9460 with
                               | Some x9462 ->
                                   ignore
                                     (Ojs.call x9461 "push"
                                        [|(Ojs.string_to_js x9462)|])
                               | None -> ());
                              x9461))|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "AggregateError") "prototype")
    let (create' : errors:any Iterable.t -> ?message:string -> unit -> t) =
      fun ~errors:(x9464 : any Iterable.t) ->
        fun ?message:(x9465 : string option) ->
          fun () ->
            t_of_js
              (Ojs.new_obj_arr
                 (Ojs.get_prop_ascii Ojs.global "AggregateError")
                 (let x9466 =
                    Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                  ignore
                    (Ojs.call x9466 "push"
                       [|(Iterable.t_to_js any_to_js x9464)|]);
                  (match x9465 with
                   | Some x9467 ->
                       ignore
                         (Ojs.call x9466 "push" [|(Ojs.string_to_js x9467)|])
                   | None -> ());
                  x9466))
    let (invoke' : errors:any Iterable.t -> ?message:string -> unit -> t) =
      fun ~errors:(x9469 : any Iterable.t) ->
        fun ?message:(x9470 : string option) ->
          fun () ->
            t_of_js
              (Ojs.call (Ojs.get_prop_ascii Ojs.global "AggregateError")
                 "apply"
                 [|Ojs.null;((let x9471 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x9471 "push"
                                   [|(Iterable.t_to_js any_to_js x9469)|]);
                              (match x9470 with
                               | Some x9472 ->
                                   ignore
                                     (Ojs.call x9471 "push"
                                        [|(Ojs.string_to_js x9472)|])
                               | None -> ());
                              x9471))|])
    let (prototype' : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "AggregateError") "prototype")
    let (create'' : errors:any list -> errors:any list -> unit -> t) =
      fun ~errors:(x9474 : any list) ->
        fun ~errors:(x9475 : any list) ->
          fun () ->
            let x9476 = Ojs.empty_obj () in
            Ojs.set_prop_ascii x9476 "errors"
              (Ojs.list_to_js any_to_js x9474);
            Ojs.set_prop_ascii x9476 "errors"
              (Ojs.list_to_js any_to_js x9475);
            t_of_js x9476
    let cast_from = Obj.magic
  end
module ReadonlyArray_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T ReadonlyArray.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent = fun
      (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x9481 : Ojs.t) -> ReadonlyArray.t_of_js __T_of_js x9481
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t = fun (type
      __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x9479 : __T ReadonlyArray.t) ->
          ReadonlyArray.t_to_js __T_to_js x9479
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x9485 : Ojs.t) -> parent_of_js T.t_of_js x9485
    and t_to_js : t -> Ojs.t =
      fun (x9483 : T.t parent) -> parent_to_js T.t_to_js x9483
    let (flatMap :
      t ->
        callback:(this:'This ->
                    value:T.t ->
                      index:float ->
                        array:T.t list -> [ `U1 of 'U  | `U2 of 'U parent ])
          -> ?thisArg:'This -> unit -> 'U list)
      =
      fun (x9499 : t) ->
        fun
          ~callback:(x9487 :
                      this:'This ->
                        value:T.t ->
                          index:float ->
                            array:T.t list ->
                              [ `U1 of 'U  | `U2 of 'U parent ])
          ->
          fun ?thisArg:(x9488 : 'This option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x9500 = t_to_js x9499 in
                 Ojs.call (Ojs.get_prop_ascii x9500 "flatMap") "apply"
                   [|x9500;((let x9489 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9489 "push"
                                  [|(Ojs.fun_to_js 4
                                       (fun (x9491 : Ojs.t) ->
                                          fun (x9492 : Ojs.t) ->
                                            fun (x9493 : Ojs.t) ->
                                              fun (x9494 : Ojs.t) ->
                                                match x9487
                                                        ~this:(Obj.magic
                                                                 x9491)
                                                        ~value:(T.t_of_js
                                                                  x9492)
                                                        ~index:(Ojs.float_of_js
                                                                  x9493)
                                                        ~array:(Ojs.list_of_js
                                                                  T.t_of_js
                                                                  x9494)
                                                with
                                                | `U1 x9496 ->
                                                    Obj.magic x9496
                                                | `U2 x9497 ->
                                                    parent_to_js Obj.magic
                                                      x9497))|]);
                             (match x9488 with
                              | Some x9490 ->
                                  ignore
                                    (Ojs.call x9489 "push"
                                       [|(Obj.magic x9490)|])
                              | None -> ());
                             x9489))|])
    let (flat :
      t -> this:'A -> ?depth:'D -> unit -> ('A, 'D) FlatArray.t list) =
      fun (x9506 : t) ->
        fun ~this:(x9502 : 'A) ->
          fun ?depth:(x9503 : 'D option) ->
            fun () ->
              Ojs.list_of_js
                (fun (x9508 : Ojs.t) ->
                   FlatArray.t_of_js Obj.magic Obj.magic x9508)
                (let x9507 = t_to_js x9506 in
                 Ojs.call (Ojs.get_prop_ascii x9507 "flat") "apply"
                   [|x9507;((let x9504 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9504 "push" [|(Obj.magic x9502)|]);
                             (match x9503 with
                              | Some x9505 ->
                                  ignore
                                    (Ojs.call x9504 "push"
                                       [|(Obj.magic x9505)|])
                              | None -> ());
                             x9504))|])
    let (includes :
      t -> searchElement:T.t -> ?fromIndex:float -> unit -> bool) =
      fun (x9515 : t) ->
        fun ~searchElement:(x9511 : T.t) ->
          fun ?fromIndex:(x9512 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x9516 = t_to_js x9515 in
                 Ojs.call (Ojs.get_prop_ascii x9516 "includes") "apply"
                   [|x9516;((let x9513 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9513 "push" [|(T.t_to_js x9511)|]);
                             (match x9512 with
                              | Some x9514 ->
                                  ignore
                                    (Ojs.call x9513 "push"
                                       [|(Ojs.float_to_js x9514)|])
                              | None -> ());
                             x9513))|])
    let (entries : t -> (float * T.t) IterableIterator.t) =
      fun (x9517 : t) ->
        IterableIterator.t_of_js
          (fun (x9518 : Ojs.t) ->
             let x9519 = x9518 in
             ((Ojs.float_of_js (Ojs.array_get x9519 0)),
               (T.t_of_js (Ojs.array_get x9519 1))))
          (Ojs.call (t_to_js x9517) "entries" [||])
    let (keys : t -> float IterableIterator.t) =
      fun (x9520 : t) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (t_to_js x9520) "keys" [||])
    let (values : t -> T.t IterableIterator.t) =
      fun (x9522 : t) ->
        IterableIterator.t_of_js T.t_of_js
          (Ojs.call (t_to_js x9522) "values" [||])
    let (find :
      t ->
        predicate:(this:unit ->
                     value:T.t -> index:float -> obj:T.t list -> bool)
          -> ?thisArg:any -> unit -> 'S option)
      =
      fun (x9533 : t) ->
        fun
          ~predicate:(x9524 :
                       this:unit ->
                         value:T.t -> index:float -> obj:T.t list -> bool)
          ->
          fun ?thisArg:(x9525 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x9534 = t_to_js x9533 in
                 Ojs.call (Ojs.get_prop_ascii x9534 "find") "apply"
                   [|x9534;((let x9526 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9526 "push"
                                  [|(Ojs.fun_to_js 4
                                       (fun (x9528 : Ojs.t) ->
                                          fun (x9529 : Ojs.t) ->
                                            fun (x9530 : Ojs.t) ->
                                              fun (x9531 : Ojs.t) ->
                                                Ojs.bool_to_js
                                                  (x9524
                                                     ~this:(Ojs.unit_of_js
                                                              x9528)
                                                     ~value:(T.t_of_js x9529)
                                                     ~index:(Ojs.float_of_js
                                                               x9530)
                                                     ~obj:(Ojs.list_of_js
                                                             T.t_of_js x9531))))|]);
                             (match x9525 with
                              | Some x9527 ->
                                  ignore
                                    (Ojs.call x9526 "push"
                                       [|(any_to_js x9527)|])
                              | None -> ());
                             x9526))|])
    let (find' :
      t ->
        predicate:(value:T.t -> index:float -> obj:T.t list -> unknown) ->
          ?thisArg:any -> unit -> T.t option)
      =
      fun (x9544 : t) ->
        fun
          ~predicate:(x9536 :
                       value:T.t -> index:float -> obj:T.t list -> unknown)
          ->
          fun ?thisArg:(x9537 : any option) ->
            fun () ->
              Ojs.option_of_js T.t_of_js
                (let x9545 = t_to_js x9544 in
                 Ojs.call (Ojs.get_prop_ascii x9545 "find") "apply"
                   [|x9545;((let x9538 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9538 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9540 : Ojs.t) ->
                                          fun (x9541 : Ojs.t) ->
                                            fun (x9542 : Ojs.t) ->
                                              unknown_to_js
                                                (x9536
                                                   ~value:(T.t_of_js x9540)
                                                   ~index:(Ojs.float_of_js
                                                             x9541)
                                                   ~obj:(Ojs.list_of_js
                                                           T.t_of_js x9542))))|]);
                             (match x9537 with
                              | Some x9539 ->
                                  ignore
                                    (Ojs.call x9538 "push"
                                       [|(any_to_js x9539)|])
                              | None -> ());
                             x9538))|])
    let (findIndex :
      t ->
        predicate:(value:T.t -> index:float -> obj:T.t list -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x9555 : t) ->
        fun
          ~predicate:(x9547 :
                       value:T.t -> index:float -> obj:T.t list -> unknown)
          ->
          fun ?thisArg:(x9548 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x9556 = t_to_js x9555 in
                 Ojs.call (Ojs.get_prop_ascii x9556 "findIndex") "apply"
                   [|x9556;((let x9549 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9549 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9551 : Ojs.t) ->
                                          fun (x9552 : Ojs.t) ->
                                            fun (x9553 : Ojs.t) ->
                                              unknown_to_js
                                                (x9547
                                                   ~value:(T.t_of_js x9551)
                                                   ~index:(Ojs.float_of_js
                                                             x9552)
                                                   ~obj:(Ojs.list_of_js
                                                           T.t_of_js x9553))))|]);
                             (match x9548 with
                              | Some x9550 ->
                                  ignore
                                    (Ojs.call x9549 "push"
                                       [|(any_to_js x9550)|])
                              | None -> ());
                             x9549))|])
    let (get_length : t -> float) =
      fun (x9557 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x9557) "length")
    let (toString : t -> string) =
      fun (x9558 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x9558) "toString" [||])
    let (toLocaleString : t -> string) =
      fun (x9559 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x9559) "toLocaleString" [||])
    let (concat : t -> items:T.t ConcatArray.t list -> T.t list) =
      fun (x9564 : t) ->
        fun ~items:(x9560 : T.t ConcatArray.t list) ->
          Ojs.list_of_js T.t_of_js
            (let x9565 = t_to_js x9564 in
             Ojs.call (Ojs.get_prop_ascii x9565 "concat") "apply"
               [|x9565;((let x9561 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x9562 : T.t ConcatArray.t) ->
                              ignore
                                (Ojs.call x9561 "push"
                                   [|(ConcatArray.t_to_js T.t_to_js x9562)|]))
                           x9560;
                         x9561))|])
    let (concat' :
      t -> items:[ `U1 of T.t  | `U2 of T.t ConcatArray.t ] list -> T.t list)
      =
      fun (x9573 : t) ->
        fun ~items:(x9567 : [ `U1 of T.t  | `U2 of T.t ConcatArray.t ] list)
          ->
          Ojs.list_of_js T.t_of_js
            (let x9574 = t_to_js x9573 in
             Ojs.call (Ojs.get_prop_ascii x9574 "concat") "apply"
               [|x9574;((let x9568 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun
                              (x9569 :
                                [ `U1 of T.t  | `U2 of T.t ConcatArray.t ])
                              ->
                              ignore
                                (Ojs.call x9568 "push"
                                   [|((match x9569 with
                                       | `U1 x9570 -> T.t_to_js x9570
                                       | `U2 x9571 ->
                                           ConcatArray.t_to_js T.t_to_js
                                             x9571))|])) x9567;
                         x9568))|])
    let (join : t -> ?separator:string -> unit -> string) =
      fun (x9579 : t) ->
        fun ?separator:(x9576 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x9580 = t_to_js x9579 in
               Ojs.call (Ojs.get_prop_ascii x9580 "join") "apply"
                 [|x9580;((let x9577 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9576 with
                            | Some x9578 ->
                                ignore
                                  (Ojs.call x9577 "push"
                                     [|(Ojs.string_to_js x9578)|])
                            | None -> ());
                           x9577))|])
    let (slice : t -> ?start:float -> ?end_:float -> unit -> T.t list) =
      fun (x9586 : t) ->
        fun ?start:(x9581 : float option) ->
          fun ?end_:(x9582 : float option) ->
            fun () ->
              Ojs.list_of_js T.t_of_js
                (let x9587 = t_to_js x9586 in
                 Ojs.call (Ojs.get_prop_ascii x9587 "slice") "apply"
                   [|x9587;((let x9583 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x9581 with
                              | Some x9585 ->
                                  ignore
                                    (Ojs.call x9583 "push"
                                       [|(Ojs.float_to_js x9585)|])
                              | None -> ());
                             (match x9582 with
                              | Some x9584 ->
                                  ignore
                                    (Ojs.call x9583 "push"
                                       [|(Ojs.float_to_js x9584)|])
                              | None -> ());
                             x9583))|])
    let (indexOf :
      t -> searchElement:T.t -> ?fromIndex:float -> unit -> float) =
      fun (x9593 : t) ->
        fun ~searchElement:(x9589 : T.t) ->
          fun ?fromIndex:(x9590 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x9594 = t_to_js x9593 in
                 Ojs.call (Ojs.get_prop_ascii x9594 "indexOf") "apply"
                   [|x9594;((let x9591 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9591 "push" [|(T.t_to_js x9589)|]);
                             (match x9590 with
                              | Some x9592 ->
                                  ignore
                                    (Ojs.call x9591 "push"
                                       [|(Ojs.float_to_js x9592)|])
                              | None -> ());
                             x9591))|])
    let (lastIndexOf :
      t -> searchElement:T.t -> ?fromIndex:float -> unit -> float) =
      fun (x9599 : t) ->
        fun ~searchElement:(x9595 : T.t) ->
          fun ?fromIndex:(x9596 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x9600 = t_to_js x9599 in
                 Ojs.call (Ojs.get_prop_ascii x9600 "lastIndexOf") "apply"
                   [|x9600;((let x9597 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9597 "push" [|(T.t_to_js x9595)|]);
                             (match x9596 with
                              | Some x9598 ->
                                  ignore
                                    (Ojs.call x9597 "push"
                                       [|(Ojs.float_to_js x9598)|])
                              | None -> ());
                             x9597))|])
    let (every :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x9609 : t) ->
        fun
          ~predicate:(x9601 :
                       value:T.t -> index:float -> array:T.t list -> bool)
          ->
          fun ?thisArg:(x9602 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x9610 = t_to_js x9609 in
                 Ojs.call (Ojs.get_prop_ascii x9610 "every") "apply"
                   [|x9610;((let x9603 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9603 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9605 : Ojs.t) ->
                                          fun (x9606 : Ojs.t) ->
                                            fun (x9607 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x9601
                                                   ~value:(T.t_of_js x9605)
                                                   ~index:(Ojs.float_of_js
                                                             x9606)
                                                   ~array:(Ojs.list_of_js
                                                             T.t_of_js x9607))))|]);
                             (match x9602 with
                              | Some x9604 ->
                                  ignore
                                    (Ojs.call x9603 "push"
                                       [|(any_to_js x9604)|])
                              | None -> ());
                             x9603))|])
    let (every' :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x9619 : t) ->
        fun
          ~predicate:(x9611 :
                       value:T.t -> index:float -> array:T.t list -> unknown)
          ->
          fun ?thisArg:(x9612 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x9620 = t_to_js x9619 in
                 Ojs.call (Ojs.get_prop_ascii x9620 "every") "apply"
                   [|x9620;((let x9613 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9613 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9615 : Ojs.t) ->
                                          fun (x9616 : Ojs.t) ->
                                            fun (x9617 : Ojs.t) ->
                                              unknown_to_js
                                                (x9611
                                                   ~value:(T.t_of_js x9615)
                                                   ~index:(Ojs.float_of_js
                                                             x9616)
                                                   ~array:(Ojs.list_of_js
                                                             T.t_of_js x9617))))|]);
                             (match x9612 with
                              | Some x9614 ->
                                  ignore
                                    (Ojs.call x9613 "push"
                                       [|(any_to_js x9614)|])
                              | None -> ());
                             x9613))|])
    let (some :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x9629 : t) ->
        fun
          ~predicate:(x9621 :
                       value:T.t -> index:float -> array:T.t list -> unknown)
          ->
          fun ?thisArg:(x9622 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x9630 = t_to_js x9629 in
                 Ojs.call (Ojs.get_prop_ascii x9630 "some") "apply"
                   [|x9630;((let x9623 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9623 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9625 : Ojs.t) ->
                                          fun (x9626 : Ojs.t) ->
                                            fun (x9627 : Ojs.t) ->
                                              unknown_to_js
                                                (x9621
                                                   ~value:(T.t_of_js x9625)
                                                   ~index:(Ojs.float_of_js
                                                             x9626)
                                                   ~array:(Ojs.list_of_js
                                                             T.t_of_js x9627))))|]);
                             (match x9622 with
                              | Some x9624 ->
                                  ignore
                                    (Ojs.call x9623 "push"
                                       [|(any_to_js x9624)|])
                              | None -> ());
                             x9623))|])
    let (forEach :
      t ->
        callbackfn:(value:T.t -> index:float -> array:T.t list -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x9639 : t) ->
        fun
          ~callbackfn:(x9631 :
                        value:T.t -> index:float -> array:T.t list -> unit)
          ->
          fun ?thisArg:(x9632 : any option) ->
            fun () ->
              ignore
                (let x9640 = t_to_js x9639 in
                 Ojs.call (Ojs.get_prop_ascii x9640 "forEach") "apply"
                   [|x9640;((let x9633 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9633 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9635 : Ojs.t) ->
                                          fun (x9636 : Ojs.t) ->
                                            fun (x9637 : Ojs.t) ->
                                              x9631 ~value:(T.t_of_js x9635)
                                                ~index:(Ojs.float_of_js x9636)
                                                ~array:(Ojs.list_of_js
                                                          T.t_of_js x9637)))|]);
                             (match x9632 with
                              | Some x9634 ->
                                  ignore
                                    (Ojs.call x9633 "push"
                                       [|(any_to_js x9634)|])
                              | None -> ());
                             x9633))|])
    let (map :
      t ->
        callbackfn:(value:T.t -> index:float -> array:T.t list -> 'U) ->
          ?thisArg:any -> unit -> 'U list)
      =
      fun (x9649 : t) ->
        fun
          ~callbackfn:(x9641 :
                        value:T.t -> index:float -> array:T.t list -> 'U)
          ->
          fun ?thisArg:(x9642 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x9650 = t_to_js x9649 in
                 Ojs.call (Ojs.get_prop_ascii x9650 "map") "apply"
                   [|x9650;((let x9643 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9643 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9645 : Ojs.t) ->
                                          fun (x9646 : Ojs.t) ->
                                            fun (x9647 : Ojs.t) ->
                                              Obj.magic
                                                (x9641
                                                   ~value:(T.t_of_js x9645)
                                                   ~index:(Ojs.float_of_js
                                                             x9646)
                                                   ~array:(Ojs.list_of_js
                                                             T.t_of_js x9647))))|]);
                             (match x9642 with
                              | Some x9644 ->
                                  ignore
                                    (Ojs.call x9643 "push"
                                       [|(any_to_js x9644)|])
                              | None -> ());
                             x9643))|])
    let (filter :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> bool) ->
          ?thisArg:any -> unit -> 'S list)
      =
      fun (x9660 : t) ->
        fun
          ~predicate:(x9652 :
                       value:T.t -> index:float -> array:T.t list -> bool)
          ->
          fun ?thisArg:(x9653 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x9661 = t_to_js x9660 in
                 Ojs.call (Ojs.get_prop_ascii x9661 "filter") "apply"
                   [|x9661;((let x9654 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9654 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9656 : Ojs.t) ->
                                          fun (x9657 : Ojs.t) ->
                                            fun (x9658 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x9652
                                                   ~value:(T.t_of_js x9656)
                                                   ~index:(Ojs.float_of_js
                                                             x9657)
                                                   ~array:(Ojs.list_of_js
                                                             T.t_of_js x9658))))|]);
                             (match x9653 with
                              | Some x9655 ->
                                  ignore
                                    (Ojs.call x9654 "push"
                                       [|(any_to_js x9655)|])
                              | None -> ());
                             x9654))|])
    let (filter' :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> unknown) ->
          ?thisArg:any -> unit -> T.t list)
      =
      fun (x9671 : t) ->
        fun
          ~predicate:(x9663 :
                       value:T.t -> index:float -> array:T.t list -> unknown)
          ->
          fun ?thisArg:(x9664 : any option) ->
            fun () ->
              Ojs.list_of_js T.t_of_js
                (let x9672 = t_to_js x9671 in
                 Ojs.call (Ojs.get_prop_ascii x9672 "filter") "apply"
                   [|x9672;((let x9665 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9665 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9667 : Ojs.t) ->
                                          fun (x9668 : Ojs.t) ->
                                            fun (x9669 : Ojs.t) ->
                                              unknown_to_js
                                                (x9663
                                                   ~value:(T.t_of_js x9667)
                                                   ~index:(Ojs.float_of_js
                                                             x9668)
                                                   ~array:(Ojs.list_of_js
                                                             T.t_of_js x9669))))|]);
                             (match x9664 with
                              | Some x9666 ->
                                  ignore
                                    (Ojs.call x9665 "push"
                                       [|(any_to_js x9666)|])
                              | None -> ());
                             x9665))|])
    let (reduce :
      t ->
        callbackfn:(previousValue:T.t ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> T.t)
          -> T.t)
      =
      fun (x9680 : t) ->
        fun
          ~callbackfn:(x9674 :
                        previousValue:T.t ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> T.t)
          ->
          T.t_of_js
            (Ojs.call (t_to_js x9680) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x9675 : Ojs.t) ->
                       fun (x9676 : Ojs.t) ->
                         fun (x9677 : Ojs.t) ->
                           fun (x9678 : Ojs.t) ->
                             T.t_to_js
                               (x9674 ~previousValue:(T.t_of_js x9675)
                                  ~currentValue:(T.t_of_js x9676)
                                  ~currentIndex:(Ojs.float_of_js x9677)
                                  ~array:(Ojs.list_of_js T.t_of_js x9678))))|])
    let (reduce' :
      t ->
        callbackfn:(previousValue:T.t ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> T.t)
          -> initialValue:T.t -> T.t)
      =
      fun (x9688 : t) ->
        fun
          ~callbackfn:(x9681 :
                        previousValue:T.t ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> T.t)
          ->
          fun ~initialValue:(x9687 : T.t) ->
            T.t_of_js
              (Ojs.call (t_to_js x9688) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x9682 : Ojs.t) ->
                         fun (x9683 : Ojs.t) ->
                           fun (x9684 : Ojs.t) ->
                             fun (x9685 : Ojs.t) ->
                               T.t_to_js
                                 (x9681 ~previousValue:(T.t_of_js x9682)
                                    ~currentValue:(T.t_of_js x9683)
                                    ~currentIndex:(Ojs.float_of_js x9684)
                                    ~array:(Ojs.list_of_js T.t_of_js x9685))));(
                   T.t_to_js x9687)|])
    let (reduce'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x9696 : t) ->
        fun
          ~callbackfn:(x9689 :
                        previousValue:'U ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> 'U)
          ->
          fun ~initialValue:(x9695 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x9696) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x9690 : Ojs.t) ->
                         fun (x9691 : Ojs.t) ->
                           fun (x9692 : Ojs.t) ->
                             fun (x9693 : Ojs.t) ->
                               Obj.magic
                                 (x9689 ~previousValue:(Obj.magic x9690)
                                    ~currentValue:(T.t_of_js x9691)
                                    ~currentIndex:(Ojs.float_of_js x9692)
                                    ~array:(Ojs.list_of_js T.t_of_js x9693))));(
                   Obj.magic x9695)|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:T.t ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> T.t)
          -> T.t)
      =
      fun (x9703 : t) ->
        fun
          ~callbackfn:(x9697 :
                        previousValue:T.t ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> T.t)
          ->
          T.t_of_js
            (Ojs.call (t_to_js x9703) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x9698 : Ojs.t) ->
                       fun (x9699 : Ojs.t) ->
                         fun (x9700 : Ojs.t) ->
                           fun (x9701 : Ojs.t) ->
                             T.t_to_js
                               (x9697 ~previousValue:(T.t_of_js x9698)
                                  ~currentValue:(T.t_of_js x9699)
                                  ~currentIndex:(Ojs.float_of_js x9700)
                                  ~array:(Ojs.list_of_js T.t_of_js x9701))))|])
    let (reduceRight' :
      t ->
        callbackfn:(previousValue:T.t ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> T.t)
          -> initialValue:T.t -> T.t)
      =
      fun (x9711 : t) ->
        fun
          ~callbackfn:(x9704 :
                        previousValue:T.t ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> T.t)
          ->
          fun ~initialValue:(x9710 : T.t) ->
            T.t_of_js
              (Ojs.call (t_to_js x9711) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x9705 : Ojs.t) ->
                         fun (x9706 : Ojs.t) ->
                           fun (x9707 : Ojs.t) ->
                             fun (x9708 : Ojs.t) ->
                               T.t_to_js
                                 (x9704 ~previousValue:(T.t_of_js x9705)
                                    ~currentValue:(T.t_of_js x9706)
                                    ~currentIndex:(Ojs.float_of_js x9707)
                                    ~array:(Ojs.list_of_js T.t_of_js x9708))));(
                   T.t_to_js x9710)|])
    let (reduceRight'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x9719 : t) ->
        fun
          ~callbackfn:(x9712 :
                        previousValue:'U ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> 'U)
          ->
          fun ~initialValue:(x9718 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x9719) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x9713 : Ojs.t) ->
                         fun (x9714 : Ojs.t) ->
                           fun (x9715 : Ojs.t) ->
                             fun (x9716 : Ojs.t) ->
                               Obj.magic
                                 (x9712 ~previousValue:(Obj.magic x9713)
                                    ~currentValue:(T.t_of_js x9714)
                                    ~currentIndex:(Ojs.float_of_js x9715)
                                    ~array:(Ojs.list_of_js T.t_of_js x9716))));(
                   Obj.magic x9718)|])
    let (get : t -> float -> T.t) =
      fun (x9720 : t) ->
        fun (x9721 : float) ->
          T.t_of_js (Ojs.get_prop (t_to_js x9720) (Ojs.float_to_js x9721))
  end
module ConcatArray_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T ConcatArray.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent = fun
      (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x9724 : Ojs.t) -> ConcatArray.t_of_js __T_of_js x9724
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t = fun (type
      __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x9722 : __T ConcatArray.t) ->
          ConcatArray.t_to_js __T_to_js x9722
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x9728 : Ojs.t) -> parent_of_js T.t_of_js x9728
    and t_to_js : t -> Ojs.t =
      fun (x9726 : T.t parent) -> parent_to_js T.t_to_js x9726
    let (get_length : t -> float) =
      fun (x9730 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x9730) "length")
    let (get : t -> float -> T.t) =
      fun (x9731 : t) ->
        fun (x9732 : float) ->
          T.t_of_js (Ojs.get_prop (t_to_js x9731) (Ojs.float_to_js x9732))
    let (join : t -> ?separator:string -> unit -> string) =
      fun (x9736 : t) ->
        fun ?separator:(x9733 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x9737 = t_to_js x9736 in
               Ojs.call (Ojs.get_prop_ascii x9737 "join") "apply"
                 [|x9737;((let x9734 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9733 with
                            | Some x9735 ->
                                ignore
                                  (Ojs.call x9734 "push"
                                     [|(Ojs.string_to_js x9735)|])
                            | None -> ());
                           x9734))|])
    let (slice : t -> ?start:float -> ?end_:float -> unit -> T.t list) =
      fun (x9743 : t) ->
        fun ?start:(x9738 : float option) ->
          fun ?end_:(x9739 : float option) ->
            fun () ->
              Ojs.list_of_js T.t_of_js
                (let x9744 = t_to_js x9743 in
                 Ojs.call (Ojs.get_prop_ascii x9744 "slice") "apply"
                   [|x9744;((let x9740 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x9738 with
                              | Some x9742 ->
                                  ignore
                                    (Ojs.call x9740 "push"
                                       [|(Ojs.float_to_js x9742)|])
                              | None -> ());
                             (match x9739 with
                              | Some x9741 ->
                                  ignore
                                    (Ojs.call x9740 "push"
                                       [|(Ojs.float_to_js x9741)|])
                              | None -> ());
                             x9740))|])
  end
module Array_Make(T:Ojs.T) =
  struct
    module AnonymousInterface0 =
      struct
        type t = Ojs.t
        let rec t_of_js : Ojs.t -> t = fun (x9747 : Ojs.t) -> x9747
        and t_to_js : t -> Ojs.t = fun (x9746 : Ojs.t) -> x9746
        let (get_copyWithin : t -> bool) =
          fun (x9748 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x9748) "copyWithin")
        let (set_copyWithin : t -> bool -> unit) =
          fun (x9749 : t) ->
            fun (x9750 : bool) ->
              Ojs.set_prop_ascii (t_to_js x9749) "copyWithin"
                (Ojs.bool_to_js x9750)
        let (get_entries : t -> bool) =
          fun (x9751 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x9751) "entries")
        let (set_entries : t -> bool -> unit) =
          fun (x9752 : t) ->
            fun (x9753 : bool) ->
              Ojs.set_prop_ascii (t_to_js x9752) "entries"
                (Ojs.bool_to_js x9753)
        let (get_fill : t -> bool) =
          fun (x9754 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x9754) "fill")
        let (set_fill : t -> bool -> unit) =
          fun (x9755 : t) ->
            fun (x9756 : bool) ->
              Ojs.set_prop_ascii (t_to_js x9755) "fill"
                (Ojs.bool_to_js x9756)
        let (get_find : t -> bool) =
          fun (x9757 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x9757) "find")
        let (set_find : t -> bool -> unit) =
          fun (x9758 : t) ->
            fun (x9759 : bool) ->
              Ojs.set_prop_ascii (t_to_js x9758) "find"
                (Ojs.bool_to_js x9759)
        let (get_findIndex : t -> bool) =
          fun (x9760 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x9760) "findIndex")
        let (set_findIndex : t -> bool -> unit) =
          fun (x9761 : t) ->
            fun (x9762 : bool) ->
              Ojs.set_prop_ascii (t_to_js x9761) "findIndex"
                (Ojs.bool_to_js x9762)
        let (get_keys : t -> bool) =
          fun (x9763 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x9763) "keys")
        let (set_keys : t -> bool -> unit) =
          fun (x9764 : t) ->
            fun (x9765 : bool) ->
              Ojs.set_prop_ascii (t_to_js x9764) "keys"
                (Ojs.bool_to_js x9765)
        let (get_values : t -> bool) =
          fun (x9766 : t) ->
            Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x9766) "values")
        let (set_values : t -> bool -> unit) =
          fun (x9767 : t) ->
            fun (x9768 : bool) ->
              Ojs.set_prop_ascii (t_to_js x9767) "values"
                (Ojs.bool_to_js x9768)
        let (create :
          copyWithin:bool ->
            entries:bool ->
              fill:bool ->
                find:bool ->
                  findIndex:bool -> keys:bool -> values:bool -> unit -> t)
          =
          fun ~copyWithin:(x9769 : bool) ->
            fun ~entries:(x9770 : bool) ->
              fun ~fill:(x9771 : bool) ->
                fun ~find:(x9772 : bool) ->
                  fun ~findIndex:(x9773 : bool) ->
                    fun ~keys:(x9774 : bool) ->
                      fun ~values:(x9775 : bool) ->
                        fun () ->
                          let x9776 = Ojs.empty_obj () in
                          Ojs.set_prop_ascii x9776 "copyWithin"
                            (Ojs.bool_to_js x9769);
                          Ojs.set_prop_ascii x9776 "entries"
                            (Ojs.bool_to_js x9770);
                          Ojs.set_prop_ascii x9776 "fill"
                            (Ojs.bool_to_js x9771);
                          Ojs.set_prop_ascii x9776 "find"
                            (Ojs.bool_to_js x9772);
                          Ojs.set_prop_ascii x9776 "findIndex"
                            (Ojs.bool_to_js x9773);
                          Ojs.set_prop_ascii x9776 "keys"
                            (Ojs.bool_to_js x9774);
                          Ojs.set_prop_ascii x9776 "values"
                            (Ojs.bool_to_js x9775);
                          t_of_js x9776
      end
    type 'T parent = 'T Array.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent = fun
      (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x9779 : Ojs.t) -> Array.t_of_js __T_of_js x9779
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t = fun (type
      __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x9777 : __T Array.t) -> Array.t_to_js __T_to_js x9777
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x9783 : Ojs.t) -> parent_of_js T.t_of_js x9783
    and t_to_js : t -> Ojs.t =
      fun (x9781 : T.t parent) -> parent_to_js T.t_to_js x9781
    let (flatMap :
      t ->
        callback:(this:'This ->
                    value:T.t ->
                      index:float ->
                        array:T.t list ->
                          [ `U1 of 'U  | `U2 of 'U ReadonlyArray.t ])
          -> ?thisArg:'This -> unit -> 'U list)
      =
      fun (x9797 : t) ->
        fun
          ~callback:(x9785 :
                      this:'This ->
                        value:T.t ->
                          index:float ->
                            array:T.t list ->
                              [ `U1 of 'U  | `U2 of 'U ReadonlyArray.t ])
          ->
          fun ?thisArg:(x9786 : 'This option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x9798 = t_to_js x9797 in
                 Ojs.call (Ojs.get_prop_ascii x9798 "flatMap") "apply"
                   [|x9798;((let x9787 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9787 "push"
                                  [|(Ojs.fun_to_js 4
                                       (fun (x9789 : Ojs.t) ->
                                          fun (x9790 : Ojs.t) ->
                                            fun (x9791 : Ojs.t) ->
                                              fun (x9792 : Ojs.t) ->
                                                match x9785
                                                        ~this:(Obj.magic
                                                                 x9789)
                                                        ~value:(T.t_of_js
                                                                  x9790)
                                                        ~index:(Ojs.float_of_js
                                                                  x9791)
                                                        ~array:(Ojs.list_of_js
                                                                  T.t_of_js
                                                                  x9792)
                                                with
                                                | `U1 x9794 ->
                                                    Obj.magic x9794
                                                | `U2 x9795 ->
                                                    ReadonlyArray.t_to_js
                                                      Obj.magic x9795))|]);
                             (match x9786 with
                              | Some x9788 ->
                                  ignore
                                    (Ojs.call x9787 "push"
                                       [|(Obj.magic x9788)|])
                              | None -> ());
                             x9787))|])
    let (flat :
      t -> this:'A -> ?depth:'D -> unit -> ('A, 'D) FlatArray.t list) =
      fun (x9804 : t) ->
        fun ~this:(x9800 : 'A) ->
          fun ?depth:(x9801 : 'D option) ->
            fun () ->
              Ojs.list_of_js
                (fun (x9806 : Ojs.t) ->
                   FlatArray.t_of_js Obj.magic Obj.magic x9806)
                (let x9805 = t_to_js x9804 in
                 Ojs.call (Ojs.get_prop_ascii x9805 "flat") "apply"
                   [|x9805;((let x9802 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9802 "push" [|(Obj.magic x9800)|]);
                             (match x9801 with
                              | Some x9803 ->
                                  ignore
                                    (Ojs.call x9802 "push"
                                       [|(Obj.magic x9803)|])
                              | None -> ());
                             x9802))|])
    let (includes :
      t -> searchElement:T.t -> ?fromIndex:float -> unit -> bool) =
      fun (x9813 : t) ->
        fun ~searchElement:(x9809 : T.t) ->
          fun ?fromIndex:(x9810 : float option) ->
            fun () ->
              Ojs.bool_of_js
                (let x9814 = t_to_js x9813 in
                 Ojs.call (Ojs.get_prop_ascii x9814 "includes") "apply"
                   [|x9814;((let x9811 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9811 "push" [|(T.t_to_js x9809)|]);
                             (match x9810 with
                              | Some x9812 ->
                                  ignore
                                    (Ojs.call x9811 "push"
                                       [|(Ojs.float_to_js x9812)|])
                              | None -> ());
                             x9811))|])
    let (entries : t -> (float * T.t) IterableIterator.t) =
      fun (x9815 : t) ->
        IterableIterator.t_of_js
          (fun (x9816 : Ojs.t) ->
             let x9817 = x9816 in
             ((Ojs.float_of_js (Ojs.array_get x9817 0)),
               (T.t_of_js (Ojs.array_get x9817 1))))
          (Ojs.call (t_to_js x9815) "entries" [||])
    let (keys : t -> float IterableIterator.t) =
      fun (x9818 : t) ->
        IterableIterator.t_of_js Ojs.float_of_js
          (Ojs.call (t_to_js x9818) "keys" [||])
    let (values : t -> T.t IterableIterator.t) =
      fun (x9820 : t) ->
        IterableIterator.t_of_js T.t_of_js
          (Ojs.call (t_to_js x9820) "values" [||])
    let (find :
      t ->
        predicate:(this:unit ->
                     value:T.t -> index:float -> obj:T.t list -> bool)
          -> ?thisArg:any -> unit -> 'S option)
      =
      fun (x9831 : t) ->
        fun
          ~predicate:(x9822 :
                       this:unit ->
                         value:T.t -> index:float -> obj:T.t list -> bool)
          ->
          fun ?thisArg:(x9823 : any option) ->
            fun () ->
              Ojs.option_of_js Obj.magic
                (let x9832 = t_to_js x9831 in
                 Ojs.call (Ojs.get_prop_ascii x9832 "find") "apply"
                   [|x9832;((let x9824 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9824 "push"
                                  [|(Ojs.fun_to_js 4
                                       (fun (x9826 : Ojs.t) ->
                                          fun (x9827 : Ojs.t) ->
                                            fun (x9828 : Ojs.t) ->
                                              fun (x9829 : Ojs.t) ->
                                                Ojs.bool_to_js
                                                  (x9822
                                                     ~this:(Ojs.unit_of_js
                                                              x9826)
                                                     ~value:(T.t_of_js x9827)
                                                     ~index:(Ojs.float_of_js
                                                               x9828)
                                                     ~obj:(Ojs.list_of_js
                                                             T.t_of_js x9829))))|]);
                             (match x9823 with
                              | Some x9825 ->
                                  ignore
                                    (Ojs.call x9824 "push"
                                       [|(any_to_js x9825)|])
                              | None -> ());
                             x9824))|])
    let (find' :
      t ->
        predicate:(value:T.t -> index:float -> obj:T.t list -> unknown) ->
          ?thisArg:any -> unit -> T.t option)
      =
      fun (x9842 : t) ->
        fun
          ~predicate:(x9834 :
                       value:T.t -> index:float -> obj:T.t list -> unknown)
          ->
          fun ?thisArg:(x9835 : any option) ->
            fun () ->
              Ojs.option_of_js T.t_of_js
                (let x9843 = t_to_js x9842 in
                 Ojs.call (Ojs.get_prop_ascii x9843 "find") "apply"
                   [|x9843;((let x9836 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9836 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9838 : Ojs.t) ->
                                          fun (x9839 : Ojs.t) ->
                                            fun (x9840 : Ojs.t) ->
                                              unknown_to_js
                                                (x9834
                                                   ~value:(T.t_of_js x9838)
                                                   ~index:(Ojs.float_of_js
                                                             x9839)
                                                   ~obj:(Ojs.list_of_js
                                                           T.t_of_js x9840))))|]);
                             (match x9835 with
                              | Some x9837 ->
                                  ignore
                                    (Ojs.call x9836 "push"
                                       [|(any_to_js x9837)|])
                              | None -> ());
                             x9836))|])
    let (findIndex :
      t ->
        predicate:(value:T.t -> index:float -> obj:T.t list -> unknown) ->
          ?thisArg:any -> unit -> float)
      =
      fun (x9853 : t) ->
        fun
          ~predicate:(x9845 :
                       value:T.t -> index:float -> obj:T.t list -> unknown)
          ->
          fun ?thisArg:(x9846 : any option) ->
            fun () ->
              Ojs.float_of_js
                (let x9854 = t_to_js x9853 in
                 Ojs.call (Ojs.get_prop_ascii x9854 "findIndex") "apply"
                   [|x9854;((let x9847 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9847 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9849 : Ojs.t) ->
                                          fun (x9850 : Ojs.t) ->
                                            fun (x9851 : Ojs.t) ->
                                              unknown_to_js
                                                (x9845
                                                   ~value:(T.t_of_js x9849)
                                                   ~index:(Ojs.float_of_js
                                                             x9850)
                                                   ~obj:(Ojs.list_of_js
                                                           T.t_of_js x9851))))|]);
                             (match x9846 with
                              | Some x9848 ->
                                  ignore
                                    (Ojs.call x9847 "push"
                                       [|(any_to_js x9848)|])
                              | None -> ());
                             x9847))|])
    let (fill : t -> value:T.t -> ?start:float -> ?end_:float -> unit -> t) =
      fun (x9861 : t) ->
        fun ~value:(x9855 : T.t) ->
          fun ?start:(x9856 : float option) ->
            fun ?end_:(x9857 : float option) ->
              fun () ->
                t_of_js
                  (let x9862 = t_to_js x9861 in
                   Ojs.call (Ojs.get_prop_ascii x9862 "fill") "apply"
                     [|x9862;((let x9858 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x9858 "push" [|(T.t_to_js x9855)|]);
                               (match x9856 with
                                | Some x9860 ->
                                    ignore
                                      (Ojs.call x9858 "push"
                                         [|(Ojs.float_to_js x9860)|])
                                | None -> ());
                               (match x9857 with
                                | Some x9859 ->
                                    ignore
                                      (Ojs.call x9858 "push"
                                         [|(Ojs.float_to_js x9859)|])
                                | None -> ());
                               x9858))|])
    let (copyWithin :
      t -> target:float -> start:float -> ?end_:float -> unit -> t) =
      fun (x9868 : t) ->
        fun ~target:(x9863 : float) ->
          fun ~start:(x9864 : float) ->
            fun ?end_:(x9865 : float option) ->
              fun () ->
                t_of_js
                  (let x9869 = t_to_js x9868 in
                   Ojs.call (Ojs.get_prop_ascii x9869 "copyWithin") "apply"
                     [|x9869;((let x9866 =
                                 Ojs.new_obj
                                   (Ojs.get_prop_ascii Ojs.global "Array")
                                   [||] in
                               ignore
                                 (Ojs.call x9866 "push"
                                    [|(Ojs.float_to_js x9863)|]);
                               ignore
                                 (Ojs.call x9866 "push"
                                    [|(Ojs.float_to_js x9864)|]);
                               (match x9865 with
                                | Some x9867 ->
                                    ignore
                                      (Ojs.call x9866 "push"
                                         [|(Ojs.float_to_js x9867)|])
                                | None -> ());
                               x9866))|])
    let (get_length : t -> float) =
      fun (x9870 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x9870) "length")
    let (set_length : t -> float -> unit) =
      fun (x9871 : t) ->
        fun (x9872 : float) ->
          Ojs.set_prop_ascii (t_to_js x9871) "length" (Ojs.float_to_js x9872)
    let (toString : t -> string) =
      fun (x9873 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x9873) "toString" [||])
    let (toLocaleString : t -> string) =
      fun (x9874 : t) ->
        Ojs.string_of_js (Ojs.call (t_to_js x9874) "toLocaleString" [||])
    let (pop : t -> T.t option) =
      fun (x9875 : t) ->
        Ojs.option_of_js T.t_of_js (Ojs.call (t_to_js x9875) "pop" [||])
    let (push : t -> items:T.t list -> float) =
      fun (x9880 : t) ->
        fun ~items:(x9877 : T.t list) ->
          Ojs.float_of_js
            (let x9881 = t_to_js x9880 in
             Ojs.call (Ojs.get_prop_ascii x9881 "push") "apply"
               [|x9881;((let x9878 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x9879 : T.t) ->
                              ignore
                                (Ojs.call x9878 "push" [|(T.t_to_js x9879)|]))
                           x9877;
                         x9878))|])
    let (concat : t -> items:T.t ConcatArray.t list -> T.t list) =
      fun (x9886 : t) ->
        fun ~items:(x9882 : T.t ConcatArray.t list) ->
          Ojs.list_of_js T.t_of_js
            (let x9887 = t_to_js x9886 in
             Ojs.call (Ojs.get_prop_ascii x9887 "concat") "apply"
               [|x9887;((let x9883 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x9884 : T.t ConcatArray.t) ->
                              ignore
                                (Ojs.call x9883 "push"
                                   [|(ConcatArray.t_to_js T.t_to_js x9884)|]))
                           x9882;
                         x9883))|])
    let (concat' :
      t -> items:[ `U1 of T.t  | `U2 of T.t ConcatArray.t ] list -> T.t list)
      =
      fun (x9895 : t) ->
        fun ~items:(x9889 : [ `U1 of T.t  | `U2 of T.t ConcatArray.t ] list)
          ->
          Ojs.list_of_js T.t_of_js
            (let x9896 = t_to_js x9895 in
             Ojs.call (Ojs.get_prop_ascii x9896 "concat") "apply"
               [|x9896;((let x9890 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun
                              (x9891 :
                                [ `U1 of T.t  | `U2 of T.t ConcatArray.t ])
                              ->
                              ignore
                                (Ojs.call x9890 "push"
                                   [|((match x9891 with
                                       | `U1 x9892 -> T.t_to_js x9892
                                       | `U2 x9893 ->
                                           ConcatArray.t_to_js T.t_to_js
                                             x9893))|])) x9889;
                         x9890))|])
    let (join : t -> ?separator:string -> unit -> string) =
      fun (x9901 : t) ->
        fun ?separator:(x9898 : string option) ->
          fun () ->
            Ojs.string_of_js
              (let x9902 = t_to_js x9901 in
               Ojs.call (Ojs.get_prop_ascii x9902 "join") "apply"
                 [|x9902;((let x9899 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9898 with
                            | Some x9900 ->
                                ignore
                                  (Ojs.call x9899 "push"
                                     [|(Ojs.string_to_js x9900)|])
                            | None -> ());
                           x9899))|])
    let (reverse : t -> T.t list) =
      fun (x9903 : t) ->
        Ojs.list_of_js T.t_of_js (Ojs.call (t_to_js x9903) "reverse" [||])
    let (shift : t -> T.t option) =
      fun (x9905 : t) ->
        Ojs.option_of_js T.t_of_js (Ojs.call (t_to_js x9905) "shift" [||])
    let (slice : t -> ?start:float -> ?end_:float -> unit -> T.t list) =
      fun (x9912 : t) ->
        fun ?start:(x9907 : float option) ->
          fun ?end_:(x9908 : float option) ->
            fun () ->
              Ojs.list_of_js T.t_of_js
                (let x9913 = t_to_js x9912 in
                 Ojs.call (Ojs.get_prop_ascii x9913 "slice") "apply"
                   [|x9913;((let x9909 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             (match x9907 with
                              | Some x9911 ->
                                  ignore
                                    (Ojs.call x9909 "push"
                                       [|(Ojs.float_to_js x9911)|])
                              | None -> ());
                             (match x9908 with
                              | Some x9910 ->
                                  ignore
                                    (Ojs.call x9909 "push"
                                       [|(Ojs.float_to_js x9910)|])
                              | None -> ());
                             x9909))|])
    let (sort : t -> ?compareFn:(a:T.t -> b:T.t -> float) -> unit -> t) =
      fun (x9920 : t) ->
        fun ?compareFn:(x9915 : (a:T.t -> b:T.t -> float) option) ->
          fun () ->
            t_of_js
              (let x9921 = t_to_js x9920 in
               Ojs.call (Ojs.get_prop_ascii x9921 "sort") "apply"
                 [|x9921;((let x9916 =
                             Ojs.new_obj
                               (Ojs.get_prop_ascii Ojs.global "Array") 
                               [||] in
                           (match x9915 with
                            | Some x9917 ->
                                ignore
                                  (Ojs.call x9916 "push"
                                     [|(Ojs.fun_to_js 2
                                          (fun (x9918 : Ojs.t) ->
                                             fun (x9919 : Ojs.t) ->
                                               Ojs.float_to_js
                                                 (x9917 ~a:(T.t_of_js x9918)
                                                    ~b:(T.t_of_js x9919))))|])
                            | None -> ());
                           x9916))|])
    let (splice : t -> start:float -> ?deleteCount:float -> unit -> T.t list)
      =
      fun (x9926 : t) ->
        fun ~start:(x9922 : float) ->
          fun ?deleteCount:(x9923 : float option) ->
            fun () ->
              Ojs.list_of_js T.t_of_js
                (let x9927 = t_to_js x9926 in
                 Ojs.call (Ojs.get_prop_ascii x9927 "splice") "apply"
                   [|x9927;((let x9924 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9924 "push"
                                  [|(Ojs.float_to_js x9922)|]);
                             (match x9923 with
                              | Some x9925 ->
                                  ignore
                                    (Ojs.call x9924 "push"
                                       [|(Ojs.float_to_js x9925)|])
                              | None -> ());
                             x9924))|])
    let (splice' :
      t -> start:float -> deleteCount:float -> items:T.t list -> T.t list) =
      fun (x9934 : t) ->
        fun ~start:(x9929 : float) ->
          fun ~deleteCount:(x9930 : float) ->
            fun ~items:(x9931 : T.t list) ->
              Ojs.list_of_js T.t_of_js
                (let x9935 = t_to_js x9934 in
                 Ojs.call (Ojs.get_prop_ascii x9935 "splice") "apply"
                   [|x9935;((let x9932 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9932 "push"
                                  [|(Ojs.float_to_js x9929)|]);
                             ignore
                               (Ojs.call x9932 "push"
                                  [|(Ojs.float_to_js x9930)|]);
                             List.iter
                               (fun (x9933 : T.t) ->
                                  ignore
                                    (Ojs.call x9932 "push"
                                       [|(T.t_to_js x9933)|])) x9931;
                             x9932))|])
    let (unshift : t -> items:T.t list -> float) =
      fun (x9940 : t) ->
        fun ~items:(x9937 : T.t list) ->
          Ojs.float_of_js
            (let x9941 = t_to_js x9940 in
             Ojs.call (Ojs.get_prop_ascii x9941 "unshift") "apply"
               [|x9941;((let x9938 =
                           Ojs.new_obj
                             (Ojs.get_prop_ascii Ojs.global "Array") 
                             [||] in
                         List.iter
                           (fun (x9939 : T.t) ->
                              ignore
                                (Ojs.call x9938 "push" [|(T.t_to_js x9939)|]))
                           x9937;
                         x9938))|])
    let (indexOf :
      t -> searchElement:T.t -> ?fromIndex:float -> unit -> float) =
      fun (x9946 : t) ->
        fun ~searchElement:(x9942 : T.t) ->
          fun ?fromIndex:(x9943 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x9947 = t_to_js x9946 in
                 Ojs.call (Ojs.get_prop_ascii x9947 "indexOf") "apply"
                   [|x9947;((let x9944 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9944 "push" [|(T.t_to_js x9942)|]);
                             (match x9943 with
                              | Some x9945 ->
                                  ignore
                                    (Ojs.call x9944 "push"
                                       [|(Ojs.float_to_js x9945)|])
                              | None -> ());
                             x9944))|])
    let (lastIndexOf :
      t -> searchElement:T.t -> ?fromIndex:float -> unit -> float) =
      fun (x9952 : t) ->
        fun ~searchElement:(x9948 : T.t) ->
          fun ?fromIndex:(x9949 : float option) ->
            fun () ->
              Ojs.float_of_js
                (let x9953 = t_to_js x9952 in
                 Ojs.call (Ojs.get_prop_ascii x9953 "lastIndexOf") "apply"
                   [|x9953;((let x9950 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9950 "push" [|(T.t_to_js x9948)|]);
                             (match x9949 with
                              | Some x9951 ->
                                  ignore
                                    (Ojs.call x9950 "push"
                                       [|(Ojs.float_to_js x9951)|])
                              | None -> ());
                             x9950))|])
    let (every :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> bool) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x9962 : t) ->
        fun
          ~predicate:(x9954 :
                       value:T.t -> index:float -> array:T.t list -> bool)
          ->
          fun ?thisArg:(x9955 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x9963 = t_to_js x9962 in
                 Ojs.call (Ojs.get_prop_ascii x9963 "every") "apply"
                   [|x9963;((let x9956 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9956 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9958 : Ojs.t) ->
                                          fun (x9959 : Ojs.t) ->
                                            fun (x9960 : Ojs.t) ->
                                              Ojs.bool_to_js
                                                (x9954
                                                   ~value:(T.t_of_js x9958)
                                                   ~index:(Ojs.float_of_js
                                                             x9959)
                                                   ~array:(Ojs.list_of_js
                                                             T.t_of_js x9960))))|]);
                             (match x9955 with
                              | Some x9957 ->
                                  ignore
                                    (Ojs.call x9956 "push"
                                       [|(any_to_js x9957)|])
                              | None -> ());
                             x9956))|])
    let (every' :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x9972 : t) ->
        fun
          ~predicate:(x9964 :
                       value:T.t -> index:float -> array:T.t list -> unknown)
          ->
          fun ?thisArg:(x9965 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x9973 = t_to_js x9972 in
                 Ojs.call (Ojs.get_prop_ascii x9973 "every") "apply"
                   [|x9973;((let x9966 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9966 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9968 : Ojs.t) ->
                                          fun (x9969 : Ojs.t) ->
                                            fun (x9970 : Ojs.t) ->
                                              unknown_to_js
                                                (x9964
                                                   ~value:(T.t_of_js x9968)
                                                   ~index:(Ojs.float_of_js
                                                             x9969)
                                                   ~array:(Ojs.list_of_js
                                                             T.t_of_js x9970))))|]);
                             (match x9965 with
                              | Some x9967 ->
                                  ignore
                                    (Ojs.call x9966 "push"
                                       [|(any_to_js x9967)|])
                              | None -> ());
                             x9966))|])
    let (some :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> unknown) ->
          ?thisArg:any -> unit -> bool)
      =
      fun (x9982 : t) ->
        fun
          ~predicate:(x9974 :
                       value:T.t -> index:float -> array:T.t list -> unknown)
          ->
          fun ?thisArg:(x9975 : any option) ->
            fun () ->
              Ojs.bool_of_js
                (let x9983 = t_to_js x9982 in
                 Ojs.call (Ojs.get_prop_ascii x9983 "some") "apply"
                   [|x9983;((let x9976 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9976 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9978 : Ojs.t) ->
                                          fun (x9979 : Ojs.t) ->
                                            fun (x9980 : Ojs.t) ->
                                              unknown_to_js
                                                (x9974
                                                   ~value:(T.t_of_js x9978)
                                                   ~index:(Ojs.float_of_js
                                                             x9979)
                                                   ~array:(Ojs.list_of_js
                                                             T.t_of_js x9980))))|]);
                             (match x9975 with
                              | Some x9977 ->
                                  ignore
                                    (Ojs.call x9976 "push"
                                       [|(any_to_js x9977)|])
                              | None -> ());
                             x9976))|])
    let (forEach :
      t ->
        callbackfn:(value:T.t -> index:float -> array:T.t list -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x9992 : t) ->
        fun
          ~callbackfn:(x9984 :
                        value:T.t -> index:float -> array:T.t list -> unit)
          ->
          fun ?thisArg:(x9985 : any option) ->
            fun () ->
              ignore
                (let x9993 = t_to_js x9992 in
                 Ojs.call (Ojs.get_prop_ascii x9993 "forEach") "apply"
                   [|x9993;((let x9986 =
                               Ojs.new_obj
                                 (Ojs.get_prop_ascii Ojs.global "Array") 
                                 [||] in
                             ignore
                               (Ojs.call x9986 "push"
                                  [|(Ojs.fun_to_js 3
                                       (fun (x9988 : Ojs.t) ->
                                          fun (x9989 : Ojs.t) ->
                                            fun (x9990 : Ojs.t) ->
                                              x9984 ~value:(T.t_of_js x9988)
                                                ~index:(Ojs.float_of_js x9989)
                                                ~array:(Ojs.list_of_js
                                                          T.t_of_js x9990)))|]);
                             (match x9985 with
                              | Some x9987 ->
                                  ignore
                                    (Ojs.call x9986 "push"
                                       [|(any_to_js x9987)|])
                              | None -> ());
                             x9986))|])
    let (map :
      t ->
        callbackfn:(value:T.t -> index:float -> array:T.t list -> 'U) ->
          ?thisArg:any -> unit -> 'U list)
      =
      fun (x10002 : t) ->
        fun
          ~callbackfn:(x9994 :
                        value:T.t -> index:float -> array:T.t list -> 'U)
          ->
          fun ?thisArg:(x9995 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x10003 = t_to_js x10002 in
                 Ojs.call (Ojs.get_prop_ascii x10003 "map") "apply"
                   [|x10003;((let x9996 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x9996 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x9998 : Ojs.t) ->
                                           fun (x9999 : Ojs.t) ->
                                             fun (x10000 : Ojs.t) ->
                                               Obj.magic
                                                 (x9994
                                                    ~value:(T.t_of_js x9998)
                                                    ~index:(Ojs.float_of_js
                                                              x9999)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10000))))|]);
                              (match x9995 with
                               | Some x9997 ->
                                   ignore
                                     (Ojs.call x9996 "push"
                                        [|(any_to_js x9997)|])
                               | None -> ());
                              x9996))|])
    let (filter :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> bool) ->
          ?thisArg:any -> unit -> 'S list)
      =
      fun (x10013 : t) ->
        fun
          ~predicate:(x10005 :
                       value:T.t -> index:float -> array:T.t list -> bool)
          ->
          fun ?thisArg:(x10006 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x10014 = t_to_js x10013 in
                 Ojs.call (Ojs.get_prop_ascii x10014 "filter") "apply"
                   [|x10014;((let x10007 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10007 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10009 : Ojs.t) ->
                                           fun (x10010 : Ojs.t) ->
                                             fun (x10011 : Ojs.t) ->
                                               Ojs.bool_to_js
                                                 (x10005
                                                    ~value:(T.t_of_js x10009)
                                                    ~index:(Ojs.float_of_js
                                                              x10010)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10011))))|]);
                              (match x10006 with
                               | Some x10008 ->
                                   ignore
                                     (Ojs.call x10007 "push"
                                        [|(any_to_js x10008)|])
                               | None -> ());
                              x10007))|])
    let (filter' :
      t ->
        predicate:(value:T.t -> index:float -> array:T.t list -> unknown) ->
          ?thisArg:any -> unit -> T.t list)
      =
      fun (x10024 : t) ->
        fun
          ~predicate:(x10016 :
                       value:T.t -> index:float -> array:T.t list -> unknown)
          ->
          fun ?thisArg:(x10017 : any option) ->
            fun () ->
              Ojs.list_of_js T.t_of_js
                (let x10025 = t_to_js x10024 in
                 Ojs.call (Ojs.get_prop_ascii x10025 "filter") "apply"
                   [|x10025;((let x10018 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10018 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10020 : Ojs.t) ->
                                           fun (x10021 : Ojs.t) ->
                                             fun (x10022 : Ojs.t) ->
                                               unknown_to_js
                                                 (x10016
                                                    ~value:(T.t_of_js x10020)
                                                    ~index:(Ojs.float_of_js
                                                              x10021)
                                                    ~array:(Ojs.list_of_js
                                                              T.t_of_js
                                                              x10022))))|]);
                              (match x10017 with
                               | Some x10019 ->
                                   ignore
                                     (Ojs.call x10018 "push"
                                        [|(any_to_js x10019)|])
                               | None -> ());
                              x10018))|])
    let (reduce :
      t ->
        callbackfn:(previousValue:T.t ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> T.t)
          -> T.t)
      =
      fun (x10033 : t) ->
        fun
          ~callbackfn:(x10027 :
                        previousValue:T.t ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> T.t)
          ->
          T.t_of_js
            (Ojs.call (t_to_js x10033) "reduce"
               [|(Ojs.fun_to_js 4
                    (fun (x10028 : Ojs.t) ->
                       fun (x10029 : Ojs.t) ->
                         fun (x10030 : Ojs.t) ->
                           fun (x10031 : Ojs.t) ->
                             T.t_to_js
                               (x10027 ~previousValue:(T.t_of_js x10028)
                                  ~currentValue:(T.t_of_js x10029)
                                  ~currentIndex:(Ojs.float_of_js x10030)
                                  ~array:(Ojs.list_of_js T.t_of_js x10031))))|])
    let (reduce' :
      t ->
        callbackfn:(previousValue:T.t ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> T.t)
          -> initialValue:T.t -> T.t)
      =
      fun (x10041 : t) ->
        fun
          ~callbackfn:(x10034 :
                        previousValue:T.t ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> T.t)
          ->
          fun ~initialValue:(x10040 : T.t) ->
            T.t_of_js
              (Ojs.call (t_to_js x10041) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x10035 : Ojs.t) ->
                         fun (x10036 : Ojs.t) ->
                           fun (x10037 : Ojs.t) ->
                             fun (x10038 : Ojs.t) ->
                               T.t_to_js
                                 (x10034 ~previousValue:(T.t_of_js x10035)
                                    ~currentValue:(T.t_of_js x10036)
                                    ~currentIndex:(Ojs.float_of_js x10037)
                                    ~array:(Ojs.list_of_js T.t_of_js x10038))));(
                   T.t_to_js x10040)|])
    let (reduce'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x10049 : t) ->
        fun
          ~callbackfn:(x10042 :
                        previousValue:'U ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> 'U)
          ->
          fun ~initialValue:(x10048 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x10049) "reduce"
                 [|(Ojs.fun_to_js 4
                      (fun (x10043 : Ojs.t) ->
                         fun (x10044 : Ojs.t) ->
                           fun (x10045 : Ojs.t) ->
                             fun (x10046 : Ojs.t) ->
                               Obj.magic
                                 (x10042 ~previousValue:(Obj.magic x10043)
                                    ~currentValue:(T.t_of_js x10044)
                                    ~currentIndex:(Ojs.float_of_js x10045)
                                    ~array:(Ojs.list_of_js T.t_of_js x10046))));(
                   Obj.magic x10048)|])
    let (reduceRight :
      t ->
        callbackfn:(previousValue:T.t ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> T.t)
          -> T.t)
      =
      fun (x10056 : t) ->
        fun
          ~callbackfn:(x10050 :
                        previousValue:T.t ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> T.t)
          ->
          T.t_of_js
            (Ojs.call (t_to_js x10056) "reduceRight"
               [|(Ojs.fun_to_js 4
                    (fun (x10051 : Ojs.t) ->
                       fun (x10052 : Ojs.t) ->
                         fun (x10053 : Ojs.t) ->
                           fun (x10054 : Ojs.t) ->
                             T.t_to_js
                               (x10050 ~previousValue:(T.t_of_js x10051)
                                  ~currentValue:(T.t_of_js x10052)
                                  ~currentIndex:(Ojs.float_of_js x10053)
                                  ~array:(Ojs.list_of_js T.t_of_js x10054))))|])
    let (reduceRight' :
      t ->
        callbackfn:(previousValue:T.t ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> T.t)
          -> initialValue:T.t -> T.t)
      =
      fun (x10064 : t) ->
        fun
          ~callbackfn:(x10057 :
                        previousValue:T.t ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> T.t)
          ->
          fun ~initialValue:(x10063 : T.t) ->
            T.t_of_js
              (Ojs.call (t_to_js x10064) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x10058 : Ojs.t) ->
                         fun (x10059 : Ojs.t) ->
                           fun (x10060 : Ojs.t) ->
                             fun (x10061 : Ojs.t) ->
                               T.t_to_js
                                 (x10057 ~previousValue:(T.t_of_js x10058)
                                    ~currentValue:(T.t_of_js x10059)
                                    ~currentIndex:(Ojs.float_of_js x10060)
                                    ~array:(Ojs.list_of_js T.t_of_js x10061))));(
                   T.t_to_js x10063)|])
    let (reduceRight'' :
      t ->
        callbackfn:(previousValue:'U ->
                      currentValue:T.t ->
                        currentIndex:float -> array:T.t list -> 'U)
          -> initialValue:'U -> 'U)
      =
      fun (x10072 : t) ->
        fun
          ~callbackfn:(x10065 :
                        previousValue:'U ->
                          currentValue:T.t ->
                            currentIndex:float -> array:T.t list -> 'U)
          ->
          fun ~initialValue:(x10071 : 'U) ->
            Obj.magic
              (Ojs.call (t_to_js x10072) "reduceRight"
                 [|(Ojs.fun_to_js 4
                      (fun (x10066 : Ojs.t) ->
                         fun (x10067 : Ojs.t) ->
                           fun (x10068 : Ojs.t) ->
                             fun (x10069 : Ojs.t) ->
                               Obj.magic
                                 (x10065 ~previousValue:(Obj.magic x10066)
                                    ~currentValue:(T.t_of_js x10067)
                                    ~currentIndex:(Ojs.float_of_js x10068)
                                    ~array:(Ojs.list_of_js T.t_of_js x10069))));(
                   Obj.magic x10071)|])
    let (get : t -> float -> T.t) =
      fun (x10073 : t) ->
        fun (x10074 : float) ->
          T.t_of_js (Ojs.get_prop (t_to_js x10073) (Ojs.float_to_js x10074))
    let (set : t -> float -> T.t -> unit) =
      fun (x10075 : t) ->
        fun (x10076 : float) ->
          fun (x10077 : T.t) ->
            Ojs.set_prop (t_to_js x10075) (Ojs.float_to_js x10076)
              (T.t_to_js x10077)
    let (from :
      [ `U1 of T.t Iterable.t  | `U2 of T.t ArrayLike.t ] -> T.t list) =
      fun (x10078 : [ `U1 of T.t Iterable.t  | `U2 of T.t ArrayLike.t ]) ->
        Ojs.list_of_js T.t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "from"
             [|((match x10078 with
                 | `U1 x10079 -> Iterable.t_to_js T.t_to_js x10079
                 | `U2 x10081 -> ArrayLike.t_to_js T.t_to_js x10081))|])
    let (from' :
      iterable:[ `U1 of T.t Iterable.t  | `U2 of T.t ArrayLike.t ] ->
        mapfn:(v:T.t -> k:float -> 'U) -> ?thisArg:any -> unit -> 'U list)
      =
      fun
        ~iterable:(x10084 :
                    [ `U1 of T.t Iterable.t  | `U2 of T.t ArrayLike.t ])
        ->
        fun ~mapfn:(x10085 : v:T.t -> k:float -> 'U) ->
          fun ?thisArg:(x10086 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x10095 = Ojs.get_prop_ascii Ojs.global "Array" in
                 Ojs.call (Ojs.get_prop_ascii x10095 "from") "apply"
                   [|x10095;((let x10087 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10087 "push"
                                   [|((match x10084 with
                                       | `U1 x10091 ->
                                           Iterable.t_to_js T.t_to_js x10091
                                       | `U2 x10093 ->
                                           ArrayLike.t_to_js T.t_to_js x10093))|]);
                              ignore
                                (Ojs.call x10087 "push"
                                   [|(Ojs.fun_to_js 2
                                        (fun (x10089 : Ojs.t) ->
                                           fun (x10090 : Ojs.t) ->
                                             Obj.magic
                                               (x10085 ~v:(T.t_of_js x10089)
                                                  ~k:(Ojs.float_of_js x10090))))|]);
                              (match x10086 with
                               | Some x10088 ->
                                   ignore
                                     (Ojs.call x10087 "push"
                                        [|(any_to_js x10088)|])
                               | None -> ());
                              x10087))|])
    let (from'' : T.t ArrayLike.t -> T.t list) =
      fun (x10097 : T.t ArrayLike.t) ->
        Ojs.list_of_js T.t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "from"
             [|(ArrayLike.t_to_js T.t_to_js x10097)|])
    let (from''' :
      arrayLike:T.t ArrayLike.t ->
        mapfn:(v:T.t -> k:float -> 'U) -> ?thisArg:any -> unit -> 'U list)
      =
      fun ~arrayLike:(x10100 : T.t ArrayLike.t) ->
        fun ~mapfn:(x10101 : v:T.t -> k:float -> 'U) ->
          fun ?thisArg:(x10102 : any option) ->
            fun () ->
              Ojs.list_of_js Obj.magic
                (let x10108 = Ojs.get_prop_ascii Ojs.global "Array" in
                 Ojs.call (Ojs.get_prop_ascii x10108 "from") "apply"
                   [|x10108;((let x10103 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10103 "push"
                                   [|(ArrayLike.t_to_js T.t_to_js x10100)|]);
                              ignore
                                (Ojs.call x10103 "push"
                                   [|(Ojs.fun_to_js 2
                                        (fun (x10105 : Ojs.t) ->
                                           fun (x10106 : Ojs.t) ->
                                             Obj.magic
                                               (x10101 ~v:(T.t_of_js x10105)
                                                  ~k:(Ojs.float_of_js x10106))))|]);
                              (match x10102 with
                               | Some x10104 ->
                                   ignore
                                     (Ojs.call x10103 "push"
                                        [|(any_to_js x10104)|])
                               | None -> ());
                              x10103))|])
    let (of_ : T.t list -> T.t list) =
      fun (x10110 : T.t list) ->
        Ojs.list_of_js T.t_of_js
          (let x10113 = Ojs.get_prop_ascii Ojs.global "Array" in
           Ojs.call (Ojs.get_prop_ascii x10113 "of") "apply"
             [|x10113;((let x10111 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        List.iter
                          (fun (x10112 : T.t) ->
                             ignore
                               (Ojs.call x10111 "push" [|(T.t_to_js x10112)|]))
                          x10110;
                        x10111))|])
    let (create : ?arrayLength:float -> unit -> any list) =
      fun ?arrayLength:(x10115 : float option) ->
        fun () ->
          Ojs.list_of_js any_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Array")
               (let x10116 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x10115 with
                 | Some x10117 ->
                     ignore
                       (Ojs.call x10116 "push" [|(Ojs.float_to_js x10117)|])
                 | None -> ());
                x10116))
    let (create' : float -> T.t list) =
      fun (x10119 : float) ->
        Ojs.list_of_js T.t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
             [|(Ojs.float_to_js x10119)|])
    let (create'' : T.t list -> T.t list) =
      fun (x10121 : T.t list) ->
        Ojs.list_of_js T.t_of_js
          (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Array")
             (let x10122 =
                Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
              List.iter
                (fun (x10123 : T.t) ->
                   ignore (Ojs.call x10122 "push" [|(T.t_to_js x10123)|]))
                x10121;
              x10122))
    let (invoke : ?arrayLength:float -> unit -> any list) =
      fun ?arrayLength:(x10125 : float option) ->
        fun () ->
          Ojs.list_of_js any_of_js
            (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "apply"
               [|Ojs.null;((let x10126 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10125 with
                             | Some x10127 ->
                                 ignore
                                   (Ojs.call x10126 "push"
                                      [|(Ojs.float_to_js x10127)|])
                             | None -> ());
                            x10126))|])
    let (invoke' : float -> T.t list) =
      fun (x10129 : float) ->
        Ojs.list_of_js T.t_of_js
          (Ojs.apply (Ojs.get_prop_ascii Ojs.global "Array")
             [|(Ojs.float_to_js x10129)|])
    let (invoke'' : T.t list -> T.t list) =
      fun (x10131 : T.t list) ->
        Ojs.list_of_js T.t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "apply"
             [|Ojs.null;((let x10132 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x10133 : T.t) ->
                               ignore
                                 (Ojs.call x10132 "push"
                                    [|(T.t_to_js x10133)|])) x10131;
                          x10132))|])
    let (isArray : any -> bool) =
      fun (x10135 : any) ->
        Ojs.bool_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Array") "isArray"
             [|(any_to_js x10135)|])
    let (prototype : unit -> any list) =
      fun () ->
        Ojs.list_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Array")
             "prototype")
  end
module TypedPropertyDescriptor_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T TypedPropertyDescriptor.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent = fun
      (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x10139 : Ojs.t) ->
          TypedPropertyDescriptor.t_of_js __T_of_js x10139
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t = fun (type
      __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x10137 : __T TypedPropertyDescriptor.t) ->
          TypedPropertyDescriptor.t_to_js __T_to_js x10137
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10143 : Ojs.t) -> parent_of_js T.t_of_js x10143
    and t_to_js : t -> Ojs.t =
      fun (x10141 : T.t parent) -> parent_to_js T.t_to_js x10141
    let (get_enumerable : t -> bool) =
      fun (x10145 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x10145) "enumerable")
    let (set_enumerable : t -> bool -> unit) =
      fun (x10146 : t) ->
        fun (x10147 : bool) ->
          Ojs.set_prop_ascii (t_to_js x10146) "enumerable"
            (Ojs.bool_to_js x10147)
    let (get_configurable : t -> bool) =
      fun (x10148 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x10148) "configurable")
    let (set_configurable : t -> bool -> unit) =
      fun (x10149 : t) ->
        fun (x10150 : bool) ->
          Ojs.set_prop_ascii (t_to_js x10149) "configurable"
            (Ojs.bool_to_js x10150)
    let (get_writable : t -> bool) =
      fun (x10151 : t) ->
        Ojs.bool_of_js (Ojs.get_prop_ascii (t_to_js x10151) "writable")
    let (set_writable : t -> bool -> unit) =
      fun (x10152 : t) ->
        fun (x10153 : bool) ->
          Ojs.set_prop_ascii (t_to_js x10152) "writable"
            (Ojs.bool_to_js x10153)
    let (get_value : t -> T.t) =
      fun (x10154 : t) ->
        T.t_of_js (Ojs.get_prop_ascii (t_to_js x10154) "value")
    let (set_value : t -> T.t -> unit) =
      fun (x10155 : t) ->
        fun (x10156 : T.t) ->
          Ojs.set_prop_ascii (t_to_js x10155) "value" (T.t_to_js x10156)
    let (get_ : t -> T.t) =
      fun (x10157 : t) -> T.t_of_js (Ojs.call (t_to_js x10157) "get" [||])
    let (set_ : t -> value:T.t -> unit) =
      fun (x10159 : t) ->
        fun ~value:(x10158 : T.t) ->
          ignore (Ojs.call (t_to_js x10159) "set" [|(T.t_to_js x10158)|])
  end
module PromiseLike_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T PromiseLike.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent = fun
      (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x10162 : Ojs.t) -> PromiseLike.t_of_js __T_of_js x10162
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t = fun (type
      __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x10160 : __T PromiseLike.t) ->
          PromiseLike.t_to_js __T_to_js x10160
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10166 : Ojs.t) -> parent_of_js T.t_of_js x10166
    and t_to_js : t -> Ojs.t =
      fun (x10164 : T.t parent) -> parent_to_js T.t_to_js x10164
    let (then_ :
      t ->
        ?onfulfilled:[ `Null  | `Undefined of undefined 
                     | `U1 of
                         T.t ->
                           [ `U1 of 'TResult1  | `U2 of 'TResult1 parent ]
                         ]
          ->
          ?onrejected:[ `Null  | `Undefined of undefined 
                      | `U1 of
                          any ->
                            [ `U1 of 'TResult2  | `U2 of 'TResult2 parent ]
                          ]
            -> unit -> ('TResult1, 'TResult2) union2 parent)
      =
      fun (x10185 : t) ->
        fun
          ?onfulfilled:(x10168 :
                         [ `Null  | `Undefined of undefined 
                         | `U1 of
                             T.t ->
                               [ `U1 of 'TResult1 
                               | `U2 of 'TResult1 parent ]
                             ]
                           option)
          ->
          fun
            ?onrejected:(x10169 :
                          [ `Null  | `Undefined of undefined 
                          | `U1 of
                              any ->
                                [ `U1 of 'TResult2 
                                | `U2 of 'TResult2 parent ]
                              ]
                            option)
            ->
            fun () ->
              parent_of_js
                (fun (x10187 : Ojs.t) ->
                   union2_of_js Obj.magic Obj.magic x10187)
                (let x10186 = t_to_js x10185 in
                 Ojs.call (Ojs.get_prop_ascii x10186 "then") "apply"
                   [|x10186;((let x10170 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x10168 with
                               | Some x10178 ->
                                   ignore
                                     (Ojs.call x10170 "push"
                                        [|((match x10178 with
                                            | `Null -> Ojs.null
                                            | `Undefined x10179 ->
                                                undefined_to_js x10179
                                            | `U1 x10180 ->
                                                Ojs.fun_to_js 1
                                                  (fun (x10181 : Ojs.t) ->
                                                     match x10180
                                                             (T.t_of_js
                                                                x10181)
                                                     with
                                                     | `U1 x10182 ->
                                                         Obj.magic x10182
                                                     | `U2 x10183 ->
                                                         parent_to_js
                                                           Obj.magic x10183)))|])
                               | None -> ());
                              (match x10169 with
                               | Some x10171 ->
                                   ignore
                                     (Ojs.call x10170 "push"
                                        [|((match x10171 with
                                            | `Null -> Ojs.null
                                            | `Undefined x10172 ->
                                                undefined_to_js x10172
                                            | `U1 x10173 ->
                                                Ojs.fun_to_js 1
                                                  (fun (x10174 : Ojs.t) ->
                                                     match x10173
                                                             (any_of_js
                                                                x10174)
                                                     with
                                                     | `U1 x10175 ->
                                                         Obj.magic x10175
                                                     | `U2 x10176 ->
                                                         parent_to_js
                                                           Obj.magic x10176)))|])
                               | None -> ());
                              x10170))|])
  end
module ArrayLike_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T ArrayLike.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent = fun
      (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x10192 : Ojs.t) -> ArrayLike.t_of_js __T_of_js x10192
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t = fun (type
      __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x10190 : __T ArrayLike.t) -> ArrayLike.t_to_js __T_to_js x10190
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10196 : Ojs.t) -> parent_of_js T.t_of_js x10196
    and t_to_js : t -> Ojs.t =
      fun (x10194 : T.t parent) -> parent_to_js T.t_to_js x10194
    let (get_length : t -> float) =
      fun (x10198 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x10198) "length")
    let (get : t -> float -> T.t) =
      fun (x10199 : t) ->
        fun (x10200 : float) ->
          T.t_of_js (Ojs.get_prop (t_to_js x10199) (Ojs.float_to_js x10200))
  end
module Map_Make(K:Ojs.T)(V:Ojs.T) =
  struct
    type ('K, 'V) parent = ('K, 'V) Map.t
    let rec parent_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) parent =
      fun (type __K) -> fun (type __V) ->
      fun (__K_of_js : Ojs.t -> __K) ->
        fun (__V_of_js : Ojs.t -> __V) ->
          fun (x10204 : Ojs.t) -> Map.t_of_js __K_of_js __V_of_js x10204
    and parent_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) parent -> Ojs.t =
      fun (type __K) -> fun (type __V) ->
      fun (__K_to_js : __K -> Ojs.t) ->
        fun (__V_to_js : __V -> Ojs.t) ->
          fun (x10201 : (__K, __V) Map.t) ->
            Map.t_to_js __K_to_js __V_to_js x10201
    type t = (K.t, V.t) parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10210 : Ojs.t) -> parent_of_js K.t_of_js V.t_of_js x10210
    and t_to_js : t -> Ojs.t =
      fun (x10207 : (K.t, V.t) parent) ->
        parent_to_js K.t_to_js V.t_to_js x10207
    let (entries : t -> (K.t * V.t) IterableIterator.t) =
      fun (x10213 : t) ->
        IterableIterator.t_of_js
          (fun (x10214 : Ojs.t) ->
             let x10215 = x10214 in
             ((K.t_of_js (Ojs.array_get x10215 0)),
               (V.t_of_js (Ojs.array_get x10215 1))))
          (Ojs.call (t_to_js x10213) "entries" [||])
    let (keys : t -> K.t IterableIterator.t) =
      fun (x10216 : t) ->
        IterableIterator.t_of_js K.t_of_js
          (Ojs.call (t_to_js x10216) "keys" [||])
    let (values : t -> V.t IterableIterator.t) =
      fun (x10218 : t) ->
        IterableIterator.t_of_js V.t_of_js
          (Ojs.call (t_to_js x10218) "values" [||])
    let (clear : t -> unit) =
      fun (x10220 : t) -> ignore (Ojs.call (t_to_js x10220) "clear" [||])
    let (delete : t -> key:K.t -> bool) =
      fun (x10222 : t) ->
        fun ~key:(x10221 : K.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x10222) "delete" [|(K.t_to_js x10221)|])
    let (forEach :
      t ->
        callbackfn:(value:V.t -> key:K.t -> map:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x10230 : t) ->
        fun ~callbackfn:(x10223 : value:V.t -> key:K.t -> map:t -> unit) ->
          fun ?thisArg:(x10224 : any option) ->
            fun () ->
              ignore
                (let x10231 = t_to_js x10230 in
                 Ojs.call (Ojs.get_prop_ascii x10231 "forEach") "apply"
                   [|x10231;((let x10225 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10225 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10227 : Ojs.t) ->
                                           fun (x10228 : Ojs.t) ->
                                             fun (x10229 : Ojs.t) ->
                                               x10223
                                                 ~value:(V.t_of_js x10227)
                                                 ~key:(K.t_of_js x10228)
                                                 ~map:(t_of_js x10229)))|]);
                              (match x10224 with
                               | Some x10226 ->
                                   ignore
                                     (Ojs.call x10225 "push"
                                        [|(any_to_js x10226)|])
                               | None -> ());
                              x10225))|])
    let (get_ : t -> key:K.t -> V.t option) =
      fun (x10233 : t) ->
        fun ~key:(x10232 : K.t) ->
          Ojs.option_of_js V.t_of_js
            (Ojs.call (t_to_js x10233) "get" [|(K.t_to_js x10232)|])
    let (has : t -> key:K.t -> bool) =
      fun (x10236 : t) ->
        fun ~key:(x10235 : K.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x10236) "has" [|(K.t_to_js x10235)|])
    let (set_ : t -> key:K.t -> value:V.t -> t) =
      fun (x10239 : t) ->
        fun ~key:(x10237 : K.t) ->
          fun ~value:(x10238 : V.t) ->
            t_of_js
              (Ojs.call (t_to_js x10239) "set"
                 [|(K.t_to_js x10237);(V.t_to_js x10238)|])
    let (get_size : t -> float) =
      fun (x10240 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x10240) "size")
    let (create : (K.t * V.t) Iterable.t -> t) =
      fun (x10241 : (K.t * V.t) Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Map")
             [|(Iterable.t_to_js
                  (fun (x10242 : (K.t * V.t)) ->
                     let (x10243, x10244) = x10242 in
                     let x10245 = Ojs.array_make 2 in
                     Ojs.array_set x10245 0 (K.t_to_js x10243);
                     Ojs.array_set x10245 1 (V.t_to_js x10244);
                     x10245) x10241)|])
    let (create' : unit -> (any, any) parent) =
      fun () ->
        parent_of_js any_of_js any_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Map") [||])
    let (create'' : ?entries:(K.t * V.t) list option -> unit -> t) =
      fun ?entries:(x10248 : (K.t * V.t) list option option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Map")
               (let x10249 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x10248 with
                 | Some x10250 ->
                     ignore
                       (Ojs.call x10249 "push"
                          [|(Ojs.option_to_js
                               (fun (x10251 : (K.t * V.t) list) ->
                                  Ojs.list_to_js
                                    (fun (x10252 : (K.t * V.t)) ->
                                       let (x10253, x10254) = x10252 in
                                       let x10255 = Ojs.array_make 2 in
                                       Ojs.array_set x10255 0
                                         (K.t_to_js x10253);
                                       Ojs.array_set x10255 1
                                         (V.t_to_js x10254);
                                       x10255) x10251) x10250)|])
                 | None -> ());
                x10249))
    let (prototype : unit -> (any, any) parent) =
      fun () ->
        parent_of_js any_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Map")
             "prototype")
  end
module ReadonlyMap_Make(K:Ojs.T)(V:Ojs.T) =
  struct
    type ('K, 'V) parent = ('K, 'V) ReadonlyMap.t
    let rec parent_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) parent =
      fun (type __K) -> fun (type __V) ->
      fun (__K_of_js : Ojs.t -> __K) ->
        fun (__V_of_js : Ojs.t -> __V) ->
          fun (x10261 : Ojs.t) ->
            ReadonlyMap.t_of_js __K_of_js __V_of_js x10261
    and parent_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) parent -> Ojs.t =
      fun (type __K) -> fun (type __V) ->
      fun (__K_to_js : __K -> Ojs.t) ->
        fun (__V_to_js : __V -> Ojs.t) ->
          fun (x10258 : (__K, __V) ReadonlyMap.t) ->
            ReadonlyMap.t_to_js __K_to_js __V_to_js x10258
    type t = (K.t, V.t) parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10267 : Ojs.t) -> parent_of_js K.t_of_js V.t_of_js x10267
    and t_to_js : t -> Ojs.t =
      fun (x10264 : (K.t, V.t) parent) ->
        parent_to_js K.t_to_js V.t_to_js x10264
    let (entries : t -> (K.t * V.t) IterableIterator.t) =
      fun (x10270 : t) ->
        IterableIterator.t_of_js
          (fun (x10271 : Ojs.t) ->
             let x10272 = x10271 in
             ((K.t_of_js (Ojs.array_get x10272 0)),
               (V.t_of_js (Ojs.array_get x10272 1))))
          (Ojs.call (t_to_js x10270) "entries" [||])
    let (keys : t -> K.t IterableIterator.t) =
      fun (x10273 : t) ->
        IterableIterator.t_of_js K.t_of_js
          (Ojs.call (t_to_js x10273) "keys" [||])
    let (values : t -> V.t IterableIterator.t) =
      fun (x10275 : t) ->
        IterableIterator.t_of_js V.t_of_js
          (Ojs.call (t_to_js x10275) "values" [||])
    let (forEach :
      t ->
        callbackfn:(value:V.t -> key:K.t -> map:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x10284 : t) ->
        fun ~callbackfn:(x10277 : value:V.t -> key:K.t -> map:t -> unit) ->
          fun ?thisArg:(x10278 : any option) ->
            fun () ->
              ignore
                (let x10285 = t_to_js x10284 in
                 Ojs.call (Ojs.get_prop_ascii x10285 "forEach") "apply"
                   [|x10285;((let x10279 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10279 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10281 : Ojs.t) ->
                                           fun (x10282 : Ojs.t) ->
                                             fun (x10283 : Ojs.t) ->
                                               x10277
                                                 ~value:(V.t_of_js x10281)
                                                 ~key:(K.t_of_js x10282)
                                                 ~map:(t_of_js x10283)))|]);
                              (match x10278 with
                               | Some x10280 ->
                                   ignore
                                     (Ojs.call x10279 "push"
                                        [|(any_to_js x10280)|])
                               | None -> ());
                              x10279))|])
    let (get_ : t -> key:K.t -> V.t option) =
      fun (x10287 : t) ->
        fun ~key:(x10286 : K.t) ->
          Ojs.option_of_js V.t_of_js
            (Ojs.call (t_to_js x10287) "get" [|(K.t_to_js x10286)|])
    let (has : t -> key:K.t -> bool) =
      fun (x10290 : t) ->
        fun ~key:(x10289 : K.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x10290) "has" [|(K.t_to_js x10289)|])
    let (get_size : t -> float) =
      fun (x10291 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x10291) "size")
  end
module WeakMap_Make(K:Ojs.T)(V:Ojs.T) =
  struct
    type ('K, 'V) parent = ('K, 'V) WeakMap.t
    let rec parent_of_js :
      'K 'V . (Ojs.t -> 'K) -> (Ojs.t -> 'V) -> Ojs.t -> ('K, 'V) parent =
      fun (type __K) -> fun (type __V) ->
      fun (__K_of_js : Ojs.t -> __K) ->
        fun (__V_of_js : Ojs.t -> __V) ->
          fun (x10295 : Ojs.t) -> WeakMap.t_of_js __K_of_js __V_of_js x10295
    and parent_to_js :
      'K 'V . ('K -> Ojs.t) -> ('V -> Ojs.t) -> ('K, 'V) parent -> Ojs.t =
      fun (type __K) -> fun (type __V) ->
      fun (__K_to_js : __K -> Ojs.t) ->
        fun (__V_to_js : __V -> Ojs.t) ->
          fun (x10292 : (__K, __V) WeakMap.t) ->
            WeakMap.t_to_js __K_to_js __V_to_js x10292
    type t = (K.t, V.t) parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10301 : Ojs.t) -> parent_of_js K.t_of_js V.t_of_js x10301
    and t_to_js : t -> Ojs.t =
      fun (x10298 : (K.t, V.t) parent) ->
        parent_to_js K.t_to_js V.t_to_js x10298
    let (delete : t -> key:K.t -> bool) =
      fun (x10305 : t) ->
        fun ~key:(x10304 : K.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x10305) "delete" [|(K.t_to_js x10304)|])
    let (get_ : t -> key:K.t -> V.t option) =
      fun (x10307 : t) ->
        fun ~key:(x10306 : K.t) ->
          Ojs.option_of_js V.t_of_js
            (Ojs.call (t_to_js x10307) "get" [|(K.t_to_js x10306)|])
    let (has : t -> key:K.t -> bool) =
      fun (x10310 : t) ->
        fun ~key:(x10309 : K.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x10310) "has" [|(K.t_to_js x10309)|])
    let (set_ : t -> key:K.t -> value:V.t -> t) =
      fun (x10313 : t) ->
        fun ~key:(x10311 : K.t) ->
          fun ~value:(x10312 : V.t) ->
            t_of_js
              (Ojs.call (t_to_js x10313) "set"
                 [|(K.t_to_js x10311);(V.t_to_js x10312)|])
    let (create : (K.t * V.t) Iterable.t -> t) =
      fun (x10314 : (K.t * V.t) Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WeakMap")
             [|(Iterable.t_to_js
                  (fun (x10315 : (K.t * V.t)) ->
                     let (x10316, x10317) = x10315 in
                     let x10318 = Ojs.array_make 2 in
                     Ojs.array_set x10318 0 (K.t_to_js x10316);
                     Ojs.array_set x10318 1 (V.t_to_js x10317);
                     x10318) x10314)|])
    let (create' : ?entries:(K.t * V.t) list option -> unit -> t) =
      fun ?entries:(x10319 : (K.t * V.t) list option option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "WeakMap")
               (let x10320 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x10319 with
                 | Some x10321 ->
                     ignore
                       (Ojs.call x10320 "push"
                          [|(Ojs.option_to_js
                               (fun (x10322 : (K.t * V.t) list) ->
                                  Ojs.list_to_js
                                    (fun (x10323 : (K.t * V.t)) ->
                                       let (x10324, x10325) = x10323 in
                                       let x10326 = Ojs.array_make 2 in
                                       Ojs.array_set x10326 0
                                         (K.t_to_js x10324);
                                       Ojs.array_set x10326 1
                                         (V.t_to_js x10325);
                                       x10326) x10322) x10321)|])
                 | None -> ());
                x10320))
    let (prototype : unit -> (untyped_object, any) parent) =
      fun () ->
        parent_of_js untyped_object_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakMap")
             "prototype")
  end
module Set_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T Set.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent = fun
      (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x10331 : Ojs.t) -> Set.t_of_js __T_of_js x10331
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t = fun (type
      __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x10329 : __T Set.t) -> Set.t_to_js __T_to_js x10329
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10335 : Ojs.t) -> parent_of_js T.t_of_js x10335
    and t_to_js : t -> Ojs.t =
      fun (x10333 : T.t parent) -> parent_to_js T.t_to_js x10333
    let (entries : t -> (T.t * T.t) IterableIterator.t) =
      fun (x10337 : t) ->
        IterableIterator.t_of_js
          (fun (x10338 : Ojs.t) ->
             let x10339 = x10338 in
             ((T.t_of_js (Ojs.array_get x10339 0)),
               (T.t_of_js (Ojs.array_get x10339 1))))
          (Ojs.call (t_to_js x10337) "entries" [||])
    let (keys : t -> T.t IterableIterator.t) =
      fun (x10340 : t) ->
        IterableIterator.t_of_js T.t_of_js
          (Ojs.call (t_to_js x10340) "keys" [||])
    let (values : t -> T.t IterableIterator.t) =
      fun (x10342 : t) ->
        IterableIterator.t_of_js T.t_of_js
          (Ojs.call (t_to_js x10342) "values" [||])
    let (add : t -> value:T.t -> t) =
      fun (x10345 : t) ->
        fun ~value:(x10344 : T.t) ->
          t_of_js (Ojs.call (t_to_js x10345) "add" [|(T.t_to_js x10344)|])
    let (clear : t -> unit) =
      fun (x10346 : t) -> ignore (Ojs.call (t_to_js x10346) "clear" [||])
    let (delete : t -> value:T.t -> bool) =
      fun (x10348 : t) ->
        fun ~value:(x10347 : T.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x10348) "delete" [|(T.t_to_js x10347)|])
    let (forEach :
      t ->
        callbackfn:(value:T.t -> value2:T.t -> set_:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x10356 : t) ->
        fun ~callbackfn:(x10349 : value:T.t -> value2:T.t -> set_:t -> unit)
          ->
          fun ?thisArg:(x10350 : any option) ->
            fun () ->
              ignore
                (let x10357 = t_to_js x10356 in
                 Ojs.call (Ojs.get_prop_ascii x10357 "forEach") "apply"
                   [|x10357;((let x10351 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10351 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10353 : Ojs.t) ->
                                           fun (x10354 : Ojs.t) ->
                                             fun (x10355 : Ojs.t) ->
                                               x10349
                                                 ~value:(T.t_of_js x10353)
                                                 ~value2:(T.t_of_js x10354)
                                                 ~set_:(t_of_js x10355)))|]);
                              (match x10350 with
                               | Some x10352 ->
                                   ignore
                                     (Ojs.call x10351 "push"
                                        [|(any_to_js x10352)|])
                               | None -> ());
                              x10351))|])
    let (has : t -> value:T.t -> bool) =
      fun (x10359 : t) ->
        fun ~value:(x10358 : T.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x10359) "has" [|(T.t_to_js x10358)|])
    let (get_size : t -> float) =
      fun (x10360 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x10360) "size")
    let (create : ?iterable:T.t Iterable.t option -> unit -> t) =
      fun ?iterable:(x10361 : T.t Iterable.t option option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Set")
               (let x10362 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x10361 with
                 | Some x10363 ->
                     ignore
                       (Ojs.call x10362 "push"
                          [|(Ojs.option_to_js
                               (fun (x10364 : T.t Iterable.t) ->
                                  Iterable.t_to_js T.t_to_js x10364) x10363)|])
                 | None -> ());
                x10362))
    let (create' : ?values:T.t list option -> unit -> t) =
      fun ?values:(x10366 : T.t list option option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "Set")
               (let x10367 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x10366 with
                 | Some x10368 ->
                     ignore
                       (Ojs.call x10367 "push"
                          [|(Ojs.option_to_js
                               (fun (x10369 : T.t list) ->
                                  Ojs.list_to_js T.t_to_js x10369) x10368)|])
                 | None -> ());
                x10367))
    let (prototype : unit -> any parent) =
      fun () ->
        parent_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Set")
             "prototype")
  end
module ReadonlySet_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T ReadonlySet.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent = fun
      (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x10374 : Ojs.t) -> ReadonlySet.t_of_js __T_of_js x10374
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t = fun (type
      __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x10372 : __T ReadonlySet.t) ->
          ReadonlySet.t_to_js __T_to_js x10372
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10378 : Ojs.t) -> parent_of_js T.t_of_js x10378
    and t_to_js : t -> Ojs.t =
      fun (x10376 : T.t parent) -> parent_to_js T.t_to_js x10376
    let (entries : t -> (T.t * T.t) IterableIterator.t) =
      fun (x10380 : t) ->
        IterableIterator.t_of_js
          (fun (x10381 : Ojs.t) ->
             let x10382 = x10381 in
             ((T.t_of_js (Ojs.array_get x10382 0)),
               (T.t_of_js (Ojs.array_get x10382 1))))
          (Ojs.call (t_to_js x10380) "entries" [||])
    let (keys : t -> T.t IterableIterator.t) =
      fun (x10383 : t) ->
        IterableIterator.t_of_js T.t_of_js
          (Ojs.call (t_to_js x10383) "keys" [||])
    let (values : t -> T.t IterableIterator.t) =
      fun (x10385 : t) ->
        IterableIterator.t_of_js T.t_of_js
          (Ojs.call (t_to_js x10385) "values" [||])
    let (forEach :
      t ->
        callbackfn:(value:T.t -> value2:T.t -> set_:t -> unit) ->
          ?thisArg:any -> unit -> unit)
      =
      fun (x10394 : t) ->
        fun ~callbackfn:(x10387 : value:T.t -> value2:T.t -> set_:t -> unit)
          ->
          fun ?thisArg:(x10388 : any option) ->
            fun () ->
              ignore
                (let x10395 = t_to_js x10394 in
                 Ojs.call (Ojs.get_prop_ascii x10395 "forEach") "apply"
                   [|x10395;((let x10389 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              ignore
                                (Ojs.call x10389 "push"
                                   [|(Ojs.fun_to_js 3
                                        (fun (x10391 : Ojs.t) ->
                                           fun (x10392 : Ojs.t) ->
                                             fun (x10393 : Ojs.t) ->
                                               x10387
                                                 ~value:(T.t_of_js x10391)
                                                 ~value2:(T.t_of_js x10392)
                                                 ~set_:(t_of_js x10393)))|]);
                              (match x10388 with
                               | Some x10390 ->
                                   ignore
                                     (Ojs.call x10389 "push"
                                        [|(any_to_js x10390)|])
                               | None -> ());
                              x10389))|])
    let (has : t -> value:T.t -> bool) =
      fun (x10397 : t) ->
        fun ~value:(x10396 : T.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x10397) "has" [|(T.t_to_js x10396)|])
    let (get_size : t -> float) =
      fun (x10398 : t) ->
        Ojs.float_of_js (Ojs.get_prop_ascii (t_to_js x10398) "size")
  end
module WeakSet_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T WeakSet.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent = fun
      (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x10401 : Ojs.t) -> WeakSet.t_of_js __T_of_js x10401
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t = fun (type
      __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x10399 : __T WeakSet.t) -> WeakSet.t_to_js __T_to_js x10399
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10405 : Ojs.t) -> parent_of_js T.t_of_js x10405
    and t_to_js : t -> Ojs.t =
      fun (x10403 : T.t parent) -> parent_to_js T.t_to_js x10403
    let (add : t -> value:T.t -> t) =
      fun (x10408 : t) ->
        fun ~value:(x10407 : T.t) ->
          t_of_js (Ojs.call (t_to_js x10408) "add" [|(T.t_to_js x10407)|])
    let (delete : t -> value:T.t -> bool) =
      fun (x10410 : t) ->
        fun ~value:(x10409 : T.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x10410) "delete" [|(T.t_to_js x10409)|])
    let (has : t -> value:T.t -> bool) =
      fun (x10412 : t) ->
        fun ~value:(x10411 : T.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x10412) "has" [|(T.t_to_js x10411)|])
    let (create : T.t Iterable.t -> t) =
      fun (x10413 : T.t Iterable.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WeakSet")
             [|(Iterable.t_to_js T.t_to_js x10413)|])
    let (create' : ?values:T.t list option -> unit -> t) =
      fun ?values:(x10415 : T.t list option option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "WeakSet")
               (let x10416 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x10415 with
                 | Some x10417 ->
                     ignore
                       (Ojs.call x10416 "push"
                          [|(Ojs.option_to_js
                               (fun (x10418 : T.t list) ->
                                  Ojs.list_to_js T.t_to_js x10418) x10417)|])
                 | None -> ());
                x10416))
    let (prototype : unit -> untyped_object parent) =
      fun () ->
        parent_of_js untyped_object_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakSet")
             "prototype")
  end
module Generator_Make(T:Ojs.T)(TReturn:Ojs.T)(TNext:Ojs.T) =
  struct
    type ('T, 'TReturn, 'TNext) parent = ('T, 'TReturn, 'TNext) Generator.t
    let rec parent_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) parent
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (__TNext_of_js : Ojs.t -> __TNext) ->
            fun (x10425 : Ojs.t) ->
              Generator.t_of_js __T_of_js __TReturn_of_js __TNext_of_js
                x10425
    and parent_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) parent -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (__TNext_to_js : __TNext -> Ojs.t) ->
            fun (x10421 : (__T, __TReturn, __TNext) Generator.t) ->
              Generator.t_to_js __T_to_js __TReturn_to_js __TNext_to_js
                x10421
    type t = (T.t, TReturn.t, TNext.t) parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10433 : Ojs.t) ->
        parent_of_js T.t_of_js TReturn.t_of_js TNext.t_of_js x10433
    and t_to_js : t -> Ojs.t =
      fun (x10429 : (T.t, TReturn.t, TNext.t) parent) ->
        parent_to_js T.t_to_js TReturn.t_to_js TNext.t_to_js x10429
    let (next : t -> args:any list -> (T.t, TReturn.t) IteratorResult.t) =
      fun (x10440 : t) ->
        fun ~args:(x10437 : any list) ->
          IteratorResult.t_of_js T.t_of_js TReturn.t_of_js
            (let x10441 = t_to_js x10440 in
             Ojs.call (Ojs.get_prop_ascii x10441 "next") "apply"
               [|x10441;((let x10438 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x10439 : any) ->
                               ignore
                                 (Ojs.call x10438 "push"
                                    [|(any_to_js x10439)|])) x10437;
                          x10438))|])
    let (return : t -> value:TReturn.t -> (T.t, TReturn.t) IteratorResult.t)
      =
      fun (x10445 : t) ->
        fun ~value:(x10444 : TReturn.t) ->
          IteratorResult.t_of_js T.t_of_js TReturn.t_of_js
            (Ojs.call (t_to_js x10445) "return" [|(TReturn.t_to_js x10444)|])
    let (throw : t -> e:any -> (T.t, TReturn.t) IteratorResult.t) =
      fun (x10449 : t) ->
        fun ~e:(x10448 : any) ->
          IteratorResult.t_of_js T.t_of_js TReturn.t_of_js
            (Ojs.call (t_to_js x10449) "throw" [|(any_to_js x10448)|])
  end
module IteratorYieldResult_Make(TYield:Ojs.T) =
  struct
    type 'TYield parent = 'TYield IteratorYieldResult.t
    let rec parent_of_js :
      'TYield . (Ojs.t -> 'TYield) -> Ojs.t -> 'TYield parent = fun (type
      __TYield) ->
      fun (__TYield_of_js : Ojs.t -> __TYield) ->
        fun (x10454 : Ojs.t) ->
          IteratorYieldResult.t_of_js __TYield_of_js x10454
    and parent_to_js :
      'TYield . ('TYield -> Ojs.t) -> 'TYield parent -> Ojs.t = fun (type
      __TYield) ->
      fun (__TYield_to_js : __TYield -> Ojs.t) ->
        fun (x10452 : __TYield IteratorYieldResult.t) ->
          IteratorYieldResult.t_to_js __TYield_to_js x10452
    type t = TYield.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10458 : Ojs.t) -> parent_of_js TYield.t_of_js x10458
    and t_to_js : t -> Ojs.t =
      fun (x10456 : TYield.t parent) -> parent_to_js TYield.t_to_js x10456
    let (get_done : t -> [ `L_b_false ]) =
      fun (x10460 : t) ->
        let x10461 = Ojs.get_prop_ascii (t_to_js x10460) "done" in
        match Ojs.bool_of_js x10461 with
        | false -> `L_b_false
        | _ -> assert false
    let (set_done : t -> [ `L_b_false ] -> unit) =
      fun (x10462 : t) ->
        fun (x10463 : [ `L_b_false ]) ->
          Ojs.set_prop_ascii (t_to_js x10462) "done"
            (match x10463 with | `L_b_false -> Ojs.bool_to_js false)
    let (get_value : t -> TYield.t) =
      fun (x10464 : t) ->
        TYield.t_of_js (Ojs.get_prop_ascii (t_to_js x10464) "value")
    let (set_value : t -> TYield.t -> unit) =
      fun (x10465 : t) ->
        fun (x10466 : TYield.t) ->
          Ojs.set_prop_ascii (t_to_js x10465) "value" (TYield.t_to_js x10466)
  end
module IteratorReturnResult_Make(TReturn:Ojs.T) =
  struct
    type 'TReturn parent = 'TReturn IteratorReturnResult.t
    let rec parent_of_js :
      'TReturn . (Ojs.t -> 'TReturn) -> Ojs.t -> 'TReturn parent = fun (type
      __TReturn) ->
      fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
        fun (x10469 : Ojs.t) ->
          IteratorReturnResult.t_of_js __TReturn_of_js x10469
    and parent_to_js :
      'TReturn . ('TReturn -> Ojs.t) -> 'TReturn parent -> Ojs.t = fun (type
      __TReturn) ->
      fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
        fun (x10467 : __TReturn IteratorReturnResult.t) ->
          IteratorReturnResult.t_to_js __TReturn_to_js x10467
    type t = TReturn.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10473 : Ojs.t) -> parent_of_js TReturn.t_of_js x10473
    and t_to_js : t -> Ojs.t =
      fun (x10471 : TReturn.t parent) -> parent_to_js TReturn.t_to_js x10471
    let (get_done : t -> [ `L_b_true ]) =
      fun (x10475 : t) ->
        let x10476 = Ojs.get_prop_ascii (t_to_js x10475) "done" in
        match Ojs.bool_of_js x10476 with
        | true -> `L_b_true
        | _ -> assert false
    let (set_done : t -> [ `L_b_true ] -> unit) =
      fun (x10477 : t) ->
        fun (x10478 : [ `L_b_true ]) ->
          Ojs.set_prop_ascii (t_to_js x10477) "done"
            (match x10478 with | `L_b_true -> Ojs.bool_to_js true)
    let (get_value : t -> TReturn.t) =
      fun (x10479 : t) ->
        TReturn.t_of_js (Ojs.get_prop_ascii (t_to_js x10479) "value")
    let (set_value : t -> TReturn.t -> unit) =
      fun (x10480 : t) ->
        fun (x10481 : TReturn.t) ->
          Ojs.set_prop_ascii (t_to_js x10480) "value"
            (TReturn.t_to_js x10481)
  end
module Iterator_Make(T:Ojs.T)(TReturn:Ojs.T)(TNext:Ojs.T) =
  struct
    type ('T, 'TReturn, 'TNext) parent = ('T, 'TReturn, 'TNext) Iterator.t
    let rec parent_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) parent
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (__TNext_of_js : Ojs.t -> __TNext) ->
            fun (x10486 : Ojs.t) ->
              Iterator.t_of_js __T_of_js __TReturn_of_js __TNext_of_js x10486
    and parent_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) parent -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (__TNext_to_js : __TNext -> Ojs.t) ->
            fun (x10482 : (__T, __TReturn, __TNext) Iterator.t) ->
              Iterator.t_to_js __T_to_js __TReturn_to_js __TNext_to_js x10482
    type t = (T.t, TReturn.t, TNext.t) parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10494 : Ojs.t) ->
        parent_of_js T.t_of_js TReturn.t_of_js TNext.t_of_js x10494
    and t_to_js : t -> Ojs.t =
      fun (x10490 : (T.t, TReturn.t, TNext.t) parent) ->
        parent_to_js T.t_to_js TReturn.t_to_js TNext.t_to_js x10490
    let (next : t -> args:any list -> (T.t, TReturn.t) IteratorResult.t) =
      fun (x10501 : t) ->
        fun ~args:(x10498 : any list) ->
          IteratorResult.t_of_js T.t_of_js TReturn.t_of_js
            (let x10502 = t_to_js x10501 in
             Ojs.call (Ojs.get_prop_ascii x10502 "next") "apply"
               [|x10502;((let x10499 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x10500 : any) ->
                               ignore
                                 (Ojs.call x10499 "push"
                                    [|(any_to_js x10500)|])) x10498;
                          x10499))|])
    let (return :
      t -> ?value:TReturn.t -> unit -> (T.t, TReturn.t) IteratorResult.t) =
      fun (x10508 : t) ->
        fun ?value:(x10505 : TReturn.t option) ->
          fun () ->
            IteratorResult.t_of_js T.t_of_js TReturn.t_of_js
              (let x10509 = t_to_js x10508 in
               Ojs.call (Ojs.get_prop_ascii x10509 "return") "apply"
                 [|x10509;((let x10506 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10505 with
                             | Some x10507 ->
                                 ignore
                                   (Ojs.call x10506 "push"
                                      [|(TReturn.t_to_js x10507)|])
                             | None -> ());
                            x10506))|])
    let (throw : t -> ?e:any -> unit -> (T.t, TReturn.t) IteratorResult.t) =
      fun (x10515 : t) ->
        fun ?e:(x10512 : any option) ->
          fun () ->
            IteratorResult.t_of_js T.t_of_js TReturn.t_of_js
              (let x10516 = t_to_js x10515 in
               Ojs.call (Ojs.get_prop_ascii x10516 "throw") "apply"
                 [|x10516;((let x10513 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10512 with
                             | Some x10514 ->
                                 ignore
                                   (Ojs.call x10513 "push"
                                      [|(any_to_js x10514)|])
                             | None -> ());
                            x10513))|])
  end
module Promise_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T Promise.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent = fun
      (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x10521 : Ojs.t) -> Promise.t_of_js __T_of_js x10521
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t = fun (type
      __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x10519 : __T Promise.t) -> Promise.t_to_js __T_to_js x10519
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10525 : Ojs.t) -> parent_of_js T.t_of_js x10525
    and t_to_js : t -> Ojs.t =
      fun (x10523 : T.t parent) -> parent_to_js T.t_to_js x10523
    let (finally :
      t ->
        ?onfinally:[ `Null  | `Undefined of undefined 
                   | `U1 of unit -> unit ]
          -> unit -> t)
      =
      fun (x10532 : t) ->
        fun
          ?onfinally:(x10527 :
                       [ `Null  | `Undefined of undefined 
                       | `U1 of unit -> unit ] option)
          ->
          fun () ->
            t_of_js
              (let x10533 = t_to_js x10532 in
               Ojs.call (Ojs.get_prop_ascii x10533 "finally") "apply"
                 [|x10533;((let x10528 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10527 with
                             | Some x10529 ->
                                 ignore
                                   (Ojs.call x10528 "push"
                                      [|((match x10529 with
                                          | `Null -> Ojs.null
                                          | `Undefined x10530 ->
                                              undefined_to_js x10530
                                          | `U1 x10531 ->
                                              Ojs.fun_to_js 1
                                                (fun _ -> x10531 ())))|])
                             | None -> ());
                            x10528))|])
    let (then_ :
      t ->
        ?onfulfilled:[ `Null  | `Undefined of undefined 
                     | `U1 of
                         T.t ->
                           [ `U1 of 'TResult1 
                           | `U2 of 'TResult1 PromiseLike.t ]
                         ]
          ->
          ?onrejected:[ `Null  | `Undefined of undefined 
                      | `U1 of
                          any ->
                            [ `U1 of 'TResult2 
                            | `U2 of 'TResult2 PromiseLike.t ]
                          ]
            -> unit -> ('TResult1, 'TResult2) union2 parent)
      =
      fun (x10551 : t) ->
        fun
          ?onfulfilled:(x10534 :
                         [ `Null  | `Undefined of undefined 
                         | `U1 of
                             T.t ->
                               [ `U1 of 'TResult1 
                               | `U2 of 'TResult1 PromiseLike.t ]
                             ]
                           option)
          ->
          fun
            ?onrejected:(x10535 :
                          [ `Null  | `Undefined of undefined 
                          | `U1 of
                              any ->
                                [ `U1 of 'TResult2 
                                | `U2 of 'TResult2 PromiseLike.t ]
                              ]
                            option)
            ->
            fun () ->
              parent_of_js
                (fun (x10553 : Ojs.t) ->
                   union2_of_js Obj.magic Obj.magic x10553)
                (let x10552 = t_to_js x10551 in
                 Ojs.call (Ojs.get_prop_ascii x10552 "then") "apply"
                   [|x10552;((let x10536 =
                                Ojs.new_obj
                                  (Ojs.get_prop_ascii Ojs.global "Array")
                                  [||] in
                              (match x10534 with
                               | Some x10544 ->
                                   ignore
                                     (Ojs.call x10536 "push"
                                        [|((match x10544 with
                                            | `Null -> Ojs.null
                                            | `Undefined x10545 ->
                                                undefined_to_js x10545
                                            | `U1 x10546 ->
                                                Ojs.fun_to_js 1
                                                  (fun (x10547 : Ojs.t) ->
                                                     match x10546
                                                             (T.t_of_js
                                                                x10547)
                                                     with
                                                     | `U1 x10548 ->
                                                         Obj.magic x10548
                                                     | `U2 x10549 ->
                                                         PromiseLike.t_to_js
                                                           Obj.magic x10549)))|])
                               | None -> ());
                              (match x10535 with
                               | Some x10537 ->
                                   ignore
                                     (Ojs.call x10536 "push"
                                        [|((match x10537 with
                                            | `Null -> Ojs.null
                                            | `Undefined x10538 ->
                                                undefined_to_js x10538
                                            | `U1 x10539 ->
                                                Ojs.fun_to_js 1
                                                  (fun (x10540 : Ojs.t) ->
                                                     match x10539
                                                             (any_of_js
                                                                x10540)
                                                     with
                                                     | `U1 x10541 ->
                                                         Obj.magic x10541
                                                     | `U2 x10542 ->
                                                         PromiseLike.t_to_js
                                                           Obj.magic x10542)))|])
                               | None -> ());
                              x10536))|])
    let (catch :
      t ->
        ?onrejected:[ `Null  | `Undefined of undefined 
                    | `U1 of
                        any ->
                          [ `U1 of 'TResult 
                          | `U2 of 'TResult PromiseLike.t ]
                        ]
          -> unit -> ('TResult, (T.t, 'TResult) union2) union2 parent)
      =
      fun (x10565 : t) ->
        fun
          ?onrejected:(x10556 :
                        [ `Null  | `Undefined of undefined 
                        | `U1 of
                            any ->
                              [ `U1 of 'TResult 
                              | `U2 of 'TResult PromiseLike.t ]
                            ]
                          option)
          ->
          fun () ->
            parent_of_js
              (fun (x10567 : Ojs.t) ->
                 union2_of_js Obj.magic
                   (fun (x10569 : Ojs.t) ->
                      union2_of_js T.t_of_js Obj.magic x10569) x10567)
              (let x10566 = t_to_js x10565 in
               Ojs.call (Ojs.get_prop_ascii x10566 "catch") "apply"
                 [|x10566;((let x10557 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10556 with
                             | Some x10558 ->
                                 ignore
                                   (Ojs.call x10557 "push"
                                      [|((match x10558 with
                                          | `Null -> Ojs.null
                                          | `Undefined x10559 ->
                                              undefined_to_js x10559
                                          | `U1 x10560 ->
                                              Ojs.fun_to_js 1
                                                (fun (x10561 : Ojs.t) ->
                                                   match x10560
                                                           (any_of_js x10561)
                                                   with
                                                   | `U1 x10562 ->
                                                       Obj.magic x10562
                                                   | `U2 x10563 ->
                                                       PromiseLike.t_to_js
                                                         Obj.magic x10563)))|])
                             | None -> ());
                            x10557))|])
    let (any :
      [ `U1 of [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] list 
      | `U2 of [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t ] -> 
        t)
      =
      fun
        (x10572 :
          [ `U1 of [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] list 
          | `U2 of [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t ])
        ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "any"
             [|((match x10572 with
                 | `U1 x10573 ->
                     Ojs.list_to_js
                       (fun
                          (x10574 :
                            [ `U1 of T.t  | `U2 of T.t PromiseLike.t ])
                          ->
                          match x10574 with
                          | `U1 x10575 -> T.t_to_js x10575
                          | `U2 x10576 ->
                              PromiseLike.t_to_js T.t_to_js x10576) x10573
                 | `U2 x10578 ->
                     Iterable.t_to_js
                       (fun
                          (x10579 :
                            [ `U1 of T.t  | `U2 of T.t PromiseLike.t ])
                          ->
                          match x10579 with
                          | `U1 x10580 -> T.t_to_js x10580
                          | `U2 x10581 ->
                              PromiseLike.t_to_js T.t_to_js x10581) x10578))|])
    let (any' : T.t -> any Awaited.t parent) =
      fun (x10583 : T.t) ->
        parent_of_js
          (fun (x10584 : Ojs.t) -> Awaited.t_of_js any_of_js x10584)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "any"
             [|(T.t_to_js x10583)|])
    let (any'' :
      [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t ->
        T.t Awaited.t Awaited.t parent)
      =
      fun (x10586 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t) ->
        parent_of_js
          (fun (x10591 : Ojs.t) ->
             Awaited.t_of_js
               (fun (x10592 : Ojs.t) -> Awaited.t_of_js T.t_of_js x10592)
               x10591)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "any"
             [|(Iterable.t_to_js
                  (fun (x10587 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ])
                     ->
                     match x10587 with
                     | `U1 x10588 -> T.t_to_js x10588
                     | `U2 x10589 -> PromiseLike.t_to_js T.t_to_js x10589)
                  x10586)|])
    let (allSettled : T.t -> any parent) =
      fun (x10594 : T.t) ->
        parent_of_js any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "allSettled"
             [|(T.t_to_js x10594)|])
    let (allSettled' :
      [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t ->
        T.t Awaited.t PromiseSettledResult.t list Awaited.t
          PromiseSettledResult.t list parent)
      =
      fun (x10596 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t) ->
        parent_of_js
          (fun (x10601 : Ojs.t) ->
             Ojs.list_of_js
               (fun (x10602 : Ojs.t) ->
                  PromiseSettledResult.t_of_js
                    (fun (x10603 : Ojs.t) ->
                       Awaited.t_of_js
                         (fun (x10604 : Ojs.t) ->
                            Ojs.list_of_js
                              (fun (x10605 : Ojs.t) ->
                                 PromiseSettledResult.t_of_js
                                   (fun (x10606 : Ojs.t) ->
                                      Awaited.t_of_js T.t_of_js x10606)
                                   x10605) x10604) x10603) x10602) x10601)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "allSettled"
             [|(Iterable.t_to_js
                  (fun (x10597 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ])
                     ->
                     match x10597 with
                     | `U1 x10598 -> T.t_to_js x10598
                     | `U2 x10599 -> PromiseLike.t_to_js T.t_to_js x10599)
                  x10596)|])
    let (prototype : unit -> any parent) =
      fun () ->
        parent_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "Promise")
             "prototype")
    let (create :
      (resolve:([ `U1 of T.t  | `U2 of T.t PromiseLike.t ] -> unit) ->
         reject:(?reason:any -> unit -> unit) -> unit)
        -> t)
      =
      fun
        (x10609 :
          resolve:([ `U1 of T.t  | `U2 of T.t PromiseLike.t ] -> unit) ->
            reject:(?reason:any -> unit -> unit) -> unit)
        ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Promise")
             [|(Ojs.fun_to_js 2
                  (fun (x10610 : Ojs.t) ->
                     fun (x10615 : Ojs.t) ->
                       x10609
                         ~resolve:(fun
                                     (x10611 :
                                       [ `U1 of T.t 
                                       | `U2 of T.t PromiseLike.t ])
                                     ->
                                     ignore
                                       (Ojs.apply x10610
                                          [|((match x10611 with
                                              | `U1 x10612 ->
                                                  T.t_to_js x10612
                                              | `U2 x10613 ->
                                                  PromiseLike.t_to_js
                                                    T.t_to_js x10613))|]))
                         ~reject:(fun ?reason:(x10616 : any option) ->
                                    fun () ->
                                      ignore
                                        (Ojs.call x10615 "apply"
                                           [|Ojs.null;((let x10617 =
                                                          Ojs.new_obj
                                                            (Ojs.get_prop_ascii
                                                               Ojs.global
                                                               "Array") 
                                                            [||] in
                                                        (match x10616 with
                                                         | Some x10618 ->
                                                             ignore
                                                               (Ojs.call
                                                                  x10617
                                                                  "push"
                                                                  [|(
                                                                    any_to_js
                                                                    x10618)|])
                                                         | None -> ());
                                                        x10617))|]))))|])
    let (all : T.t -> any parent) =
      fun (x10619 : T.t) ->
        parent_of_js any_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "all"
             [|(T.t_to_js x10619)|])
    let (race : T.t -> any Awaited.t parent) =
      fun (x10621 : T.t) ->
        parent_of_js
          (fun (x10622 : Ojs.t) -> Awaited.t_of_js any_of_js x10622)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "race"
             [|(T.t_to_js x10621)|])
    let (reject : ?reason:any -> unit -> t) =
      fun ?reason:(x10624 : any option) ->
        fun () ->
          t_of_js
            (let x10627 = Ojs.get_prop_ascii Ojs.global "Promise" in
             Ojs.call (Ojs.get_prop_ascii x10627 "reject") "apply"
               [|x10627;((let x10625 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          (match x10624 with
                           | Some x10626 ->
                               ignore
                                 (Ojs.call x10625 "push"
                                    [|(any_to_js x10626)|])
                           | None -> ());
                          x10625))|])
    let (resolve : unit -> unit parent) =
      fun () ->
        parent_of_js Ojs.unit_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "resolve" [||])
    let (resolve' : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] -> t) =
      fun (x10629 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ]) ->
        t_of_js
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "resolve"
             [|((match x10629 with
                 | `U1 x10630 -> T.t_to_js x10630
                 | `U2 x10631 -> PromiseLike.t_to_js T.t_to_js x10631))|])
    let (all' :
      [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t ->
        T.t Awaited.t list Awaited.t list parent)
      =
      fun (x10633 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t) ->
        parent_of_js
          (fun (x10638 : Ojs.t) ->
             Ojs.list_of_js
               (fun (x10639 : Ojs.t) ->
                  Awaited.t_of_js
                    (fun (x10640 : Ojs.t) ->
                       Ojs.list_of_js
                         (fun (x10641 : Ojs.t) ->
                            Awaited.t_of_js T.t_of_js x10641) x10640) x10639)
               x10638)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "all"
             [|(Iterable.t_to_js
                  (fun (x10634 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ])
                     ->
                     match x10634 with
                     | `U1 x10635 -> T.t_to_js x10635
                     | `U2 x10636 -> PromiseLike.t_to_js T.t_to_js x10636)
                  x10633)|])
    let (race' :
      [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t ->
        T.t Awaited.t Awaited.t parent)
      =
      fun (x10643 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ] Iterable.t) ->
        parent_of_js
          (fun (x10648 : Ojs.t) ->
             Awaited.t_of_js
               (fun (x10649 : Ojs.t) -> Awaited.t_of_js T.t_of_js x10649)
               x10648)
          (Ojs.call (Ojs.get_prop_ascii Ojs.global "Promise") "race"
             [|(Iterable.t_to_js
                  (fun (x10644 : [ `U1 of T.t  | `U2 of T.t PromiseLike.t ])
                     ->
                     match x10644 with
                     | `U1 x10645 -> T.t_to_js x10645
                     | `U2 x10646 -> PromiseLike.t_to_js T.t_to_js x10646)
                  x10643)|])
  end
module ProxyHandler_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T ProxyHandler.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent = fun
      (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x10653 : Ojs.t) -> ProxyHandler.t_of_js __T_of_js x10653
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t = fun (type
      __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x10651 : __T ProxyHandler.t) ->
          ProxyHandler.t_to_js __T_to_js x10651
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10657 : Ojs.t) -> parent_of_js T.t_of_js x10657
    and t_to_js : t -> Ojs.t =
      fun (x10655 : T.t parent) -> parent_to_js T.t_to_js x10655
    let (apply_ : t -> target:T.t -> thisArg:any -> argArray:any list -> any)
      =
      fun (x10663 : t) ->
        fun ~target:(x10659 : T.t) ->
          fun ~thisArg:(x10660 : any) ->
            fun ~argArray:(x10661 : any list) ->
              any_of_js
                (Ojs.call (t_to_js x10663) "apply"
                   [|(T.t_to_js x10659);(any_to_js x10660);(Ojs.list_to_js
                                                              any_to_js
                                                              x10661)|])
    let (construct :
      t ->
        target:T.t ->
          argArray:any list -> newTarget:Function.t -> untyped_object)
      =
      fun (x10668 : t) ->
        fun ~target:(x10664 : T.t) ->
          fun ~argArray:(x10665 : any list) ->
            fun ~newTarget:(x10667 : Function.t) ->
              untyped_object_of_js
                (Ojs.call (t_to_js x10668) "construct"
                   [|(T.t_to_js x10664);(Ojs.list_to_js any_to_js x10665);(
                     Function.t_to_js x10667)|])
    let (defineProperty :
      t ->
        target:T.t ->
          p:[ `U1 of string  | `U2 of symbol ] ->
            attributes:PropertyDescriptor.t -> bool)
      =
      fun (x10674 : t) ->
        fun ~target:(x10669 : T.t) ->
          fun ~p:(x10670 : [ `U1 of string  | `U2 of symbol ]) ->
            fun ~attributes:(x10673 : PropertyDescriptor.t) ->
              Ojs.bool_of_js
                (Ojs.call (t_to_js x10674) "defineProperty"
                   [|(T.t_to_js x10669);((match x10670 with
                                          | `U1 x10671 ->
                                              Ojs.string_to_js x10671
                                          | `U2 x10672 -> symbol_to_js x10672));(
                     PropertyDescriptor.t_to_js x10673)|])
    let (deleteProperty :
      t -> target:T.t -> p:[ `U1 of string  | `U2 of symbol ] -> bool) =
      fun (x10679 : t) ->
        fun ~target:(x10675 : T.t) ->
          fun ~p:(x10676 : [ `U1 of string  | `U2 of symbol ]) ->
            Ojs.bool_of_js
              (Ojs.call (t_to_js x10679) "deleteProperty"
                 [|(T.t_to_js x10675);((match x10676 with
                                        | `U1 x10677 ->
                                            Ojs.string_to_js x10677
                                        | `U2 x10678 -> symbol_to_js x10678))|])
    let (get_ :
      t ->
        target:T.t ->
          p:[ `U1 of string  | `U2 of symbol ] -> receiver:any -> any)
      =
      fun (x10685 : t) ->
        fun ~target:(x10680 : T.t) ->
          fun ~p:(x10681 : [ `U1 of string  | `U2 of symbol ]) ->
            fun ~receiver:(x10684 : any) ->
              any_of_js
                (Ojs.call (t_to_js x10685) "get"
                   [|(T.t_to_js x10680);((match x10681 with
                                          | `U1 x10682 ->
                                              Ojs.string_to_js x10682
                                          | `U2 x10683 -> symbol_to_js x10683));(
                     any_to_js x10684)|])
    let (getOwnPropertyDescriptor :
      t ->
        target:T.t ->
          p:[ `U1 of string  | `U2 of symbol ] -> PropertyDescriptor.t option)
      =
      fun (x10690 : t) ->
        fun ~target:(x10686 : T.t) ->
          fun ~p:(x10687 : [ `U1 of string  | `U2 of symbol ]) ->
            Ojs.option_of_js PropertyDescriptor.t_of_js
              (Ojs.call (t_to_js x10690) "getOwnPropertyDescriptor"
                 [|(T.t_to_js x10686);((match x10687 with
                                        | `U1 x10688 ->
                                            Ojs.string_to_js x10688
                                        | `U2 x10689 -> symbol_to_js x10689))|])
    let (getPrototypeOf : t -> target:T.t -> untyped_object option) =
      fun (x10693 : t) ->
        fun ~target:(x10692 : T.t) ->
          Ojs.option_of_js untyped_object_of_js
            (Ojs.call (t_to_js x10693) "getPrototypeOf"
               [|(T.t_to_js x10692)|])
    let (has :
      t -> target:T.t -> p:[ `U1 of string  | `U2 of symbol ] -> bool) =
      fun (x10699 : t) ->
        fun ~target:(x10695 : T.t) ->
          fun ~p:(x10696 : [ `U1 of string  | `U2 of symbol ]) ->
            Ojs.bool_of_js
              (Ojs.call (t_to_js x10699) "has"
                 [|(T.t_to_js x10695);((match x10696 with
                                        | `U1 x10697 ->
                                            Ojs.string_to_js x10697
                                        | `U2 x10698 -> symbol_to_js x10698))|])
    let (isExtensible : t -> target:T.t -> bool) =
      fun (x10701 : t) ->
        fun ~target:(x10700 : T.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x10701) "isExtensible" [|(T.t_to_js x10700)|])
    let (ownKeys :
      t ->
        target:T.t ->
          [ `String of string  | `Symbol of symbol ] Primitive.t ArrayLike.t)
      =
      fun (x10703 : t) ->
        fun ~target:(x10702 : T.t) ->
          ArrayLike.t_of_js
            (fun (x10704 : Ojs.t) ->
               Primitive.t_of_js
                 (fun (x10705 : Ojs.t) ->
                    let x10706 = x10705 in
                    match Ojs.string_of_js
                            (Ojs.get_prop_ascii x10706 "dummy")
                    with
                    | "String" -> `String (Ojs.string_of_js x10706)
                    | "Symbol" -> `Symbol (symbol_of_js x10706)
                    | _ -> assert false) x10704)
            (Ojs.call (t_to_js x10703) "ownKeys" [|(T.t_to_js x10702)|])
    let (preventExtensions : t -> target:T.t -> bool) =
      fun (x10708 : t) ->
        fun ~target:(x10707 : T.t) ->
          Ojs.bool_of_js
            (Ojs.call (t_to_js x10708) "preventExtensions"
               [|(T.t_to_js x10707)|])
    let (set_ :
      t ->
        target:T.t ->
          p:[ `U1 of string  | `U2 of symbol ] ->
            value:any -> receiver:any -> bool)
      =
      fun (x10715 : t) ->
        fun ~target:(x10709 : T.t) ->
          fun ~p:(x10710 : [ `U1 of string  | `U2 of symbol ]) ->
            fun ~value:(x10713 : any) ->
              fun ~receiver:(x10714 : any) ->
                Ojs.bool_of_js
                  (Ojs.call (t_to_js x10715) "set"
                     [|(T.t_to_js x10709);((match x10710 with
                                            | `U1 x10711 ->
                                                Ojs.string_to_js x10711
                                            | `U2 x10712 ->
                                                symbol_to_js x10712));(
                       any_to_js x10713);(any_to_js x10714)|])
    let (setPrototypeOf : t -> target:T.t -> v:untyped_object option -> bool)
      =
      fun (x10719 : t) ->
        fun ~target:(x10716 : T.t) ->
          fun ~v:(x10717 : untyped_object option) ->
            Ojs.bool_of_js
              (Ojs.call (t_to_js x10719) "setPrototypeOf"
                 [|(T.t_to_js x10716);(Ojs.option_to_js untyped_object_to_js
                                         x10717)|])
  end
module AsyncGenerator_Make(T:Ojs.T)(TReturn:Ojs.T)(TNext:Ojs.T) =
  struct
    type ('T, 'TReturn, 'TNext) parent =
      ('T, 'TReturn, 'TNext) AsyncGenerator.t
    let rec parent_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) parent
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (__TNext_of_js : Ojs.t -> __TNext) ->
            fun (x10724 : Ojs.t) ->
              AsyncGenerator.t_of_js __T_of_js __TReturn_of_js __TNext_of_js
                x10724
    and parent_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) parent -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (__TNext_to_js : __TNext -> Ojs.t) ->
            fun (x10720 : (__T, __TReturn, __TNext) AsyncGenerator.t) ->
              AsyncGenerator.t_to_js __T_to_js __TReturn_to_js __TNext_to_js
                x10720
    type t = (T.t, TReturn.t, TNext.t) parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10732 : Ojs.t) ->
        parent_of_js T.t_of_js TReturn.t_of_js TNext.t_of_js x10732
    and t_to_js : t -> Ojs.t =
      fun (x10728 : (T.t, TReturn.t, TNext.t) parent) ->
        parent_to_js T.t_to_js TReturn.t_to_js TNext.t_to_js x10728
    let (next :
      t -> args:any list -> (T.t, TReturn.t) IteratorResult.t Promise.t) =
      fun (x10739 : t) ->
        fun ~args:(x10736 : any list) ->
          Promise.t_of_js
            (fun (x10741 : Ojs.t) ->
               IteratorResult.t_of_js T.t_of_js TReturn.t_of_js x10741)
            (let x10740 = t_to_js x10739 in
             Ojs.call (Ojs.get_prop_ascii x10740 "next") "apply"
               [|x10740;((let x10737 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x10738 : any) ->
                               ignore
                                 (Ojs.call x10737 "push"
                                    [|(any_to_js x10738)|])) x10736;
                          x10737))|])
    let (return :
      t ->
        value:[ `U1 of TReturn.t  | `U2 of TReturn.t PromiseLike.t ] ->
          (T.t, TReturn.t) IteratorResult.t Promise.t)
      =
      fun (x10748 : t) ->
        fun
          ~value:(x10744 :
                   [ `U1 of TReturn.t  | `U2 of TReturn.t PromiseLike.t ])
          ->
          Promise.t_of_js
            (fun (x10749 : Ojs.t) ->
               IteratorResult.t_of_js T.t_of_js TReturn.t_of_js x10749)
            (Ojs.call (t_to_js x10748) "return"
               [|((match x10744 with
                   | `U1 x10745 -> TReturn.t_to_js x10745
                   | `U2 x10746 -> PromiseLike.t_to_js TReturn.t_to_js x10746))|])
    let (throw : t -> e:any -> (T.t, TReturn.t) IteratorResult.t Promise.t) =
      fun (x10753 : t) ->
        fun ~e:(x10752 : any) ->
          Promise.t_of_js
            (fun (x10754 : Ojs.t) ->
               IteratorResult.t_of_js T.t_of_js TReturn.t_of_js x10754)
            (Ojs.call (t_to_js x10753) "throw" [|(any_to_js x10752)|])
  end
module AsyncIterator_Make(T:Ojs.T)(TReturn:Ojs.T)(TNext:Ojs.T) =
  struct
    type ('T, 'TReturn, 'TNext) parent =
      ('T, 'TReturn, 'TNext) AsyncIterator.t
    let rec parent_of_js :
      'T 'TReturn 'TNext .
        (Ojs.t -> 'T) ->
          (Ojs.t -> 'TReturn) ->
            (Ojs.t -> 'TNext) -> Ojs.t -> ('T, 'TReturn, 'TNext) parent
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (__TReturn_of_js : Ojs.t -> __TReturn) ->
          fun (__TNext_of_js : Ojs.t -> __TNext) ->
            fun (x10761 : Ojs.t) ->
              AsyncIterator.t_of_js __T_of_js __TReturn_of_js __TNext_of_js
                x10761
    and parent_to_js :
      'T 'TReturn 'TNext .
        ('T -> Ojs.t) ->
          ('TReturn -> Ojs.t) ->
            ('TNext -> Ojs.t) -> ('T, 'TReturn, 'TNext) parent -> Ojs.t
      = fun (type __T) -> fun (type __TReturn) -> fun (type __TNext) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (__TReturn_to_js : __TReturn -> Ojs.t) ->
          fun (__TNext_to_js : __TNext -> Ojs.t) ->
            fun (x10757 : (__T, __TReturn, __TNext) AsyncIterator.t) ->
              AsyncIterator.t_to_js __T_to_js __TReturn_to_js __TNext_to_js
                x10757
    type t = (T.t, TReturn.t, TNext.t) parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10769 : Ojs.t) ->
        parent_of_js T.t_of_js TReturn.t_of_js TNext.t_of_js x10769
    and t_to_js : t -> Ojs.t =
      fun (x10765 : (T.t, TReturn.t, TNext.t) parent) ->
        parent_to_js T.t_to_js TReturn.t_to_js TNext.t_to_js x10765
    let (next :
      t -> args:any list -> (T.t, TReturn.t) IteratorResult.t Promise.t) =
      fun (x10776 : t) ->
        fun ~args:(x10773 : any list) ->
          Promise.t_of_js
            (fun (x10778 : Ojs.t) ->
               IteratorResult.t_of_js T.t_of_js TReturn.t_of_js x10778)
            (let x10777 = t_to_js x10776 in
             Ojs.call (Ojs.get_prop_ascii x10777 "next") "apply"
               [|x10777;((let x10774 =
                            Ojs.new_obj
                              (Ojs.get_prop_ascii Ojs.global "Array") 
                              [||] in
                          List.iter
                            (fun (x10775 : any) ->
                               ignore
                                 (Ojs.call x10774 "push"
                                    [|(any_to_js x10775)|])) x10773;
                          x10774))|])
    let (return :
      t ->
        ?value:[ `U1 of TReturn.t  | `U2 of TReturn.t PromiseLike.t ] ->
          unit -> (T.t, TReturn.t) IteratorResult.t Promise.t)
      =
      fun (x10787 : t) ->
        fun
          ?value:(x10781 :
                   [ `U1 of TReturn.t  | `U2 of TReturn.t PromiseLike.t ]
                     option)
          ->
          fun () ->
            Promise.t_of_js
              (fun (x10789 : Ojs.t) ->
                 IteratorResult.t_of_js T.t_of_js TReturn.t_of_js x10789)
              (let x10788 = t_to_js x10787 in
               Ojs.call (Ojs.get_prop_ascii x10788 "return") "apply"
                 [|x10788;((let x10782 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10781 with
                             | Some x10783 ->
                                 ignore
                                   (Ojs.call x10782 "push"
                                      [|((match x10783 with
                                          | `U1 x10784 ->
                                              TReturn.t_to_js x10784
                                          | `U2 x10785 ->
                                              PromiseLike.t_to_js
                                                TReturn.t_to_js x10785))|])
                             | None -> ());
                            x10782))|])
    let (throw :
      t -> ?e:any -> unit -> (T.t, TReturn.t) IteratorResult.t Promise.t) =
      fun (x10795 : t) ->
        fun ?e:(x10792 : any option) ->
          fun () ->
            Promise.t_of_js
              (fun (x10797 : Ojs.t) ->
                 IteratorResult.t_of_js T.t_of_js TReturn.t_of_js x10797)
              (let x10796 = t_to_js x10795 in
               Ojs.call (Ojs.get_prop_ascii x10796 "throw") "apply"
                 [|x10796;((let x10793 =
                              Ojs.new_obj
                                (Ojs.get_prop_ascii Ojs.global "Array") 
                                [||] in
                            (match x10792 with
                             | Some x10794 ->
                                 ignore
                                   (Ojs.call x10793 "push"
                                      [|(any_to_js x10794)|])
                             | None -> ());
                            x10793))|])
  end
module PromiseFulfilledResult_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T PromiseFulfilledResult.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent = fun
      (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x10802 : Ojs.t) ->
          PromiseFulfilledResult.t_of_js __T_of_js x10802
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t = fun (type
      __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x10800 : __T PromiseFulfilledResult.t) ->
          PromiseFulfilledResult.t_to_js __T_to_js x10800
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10806 : Ojs.t) -> parent_of_js T.t_of_js x10806
    and t_to_js : t -> Ojs.t =
      fun (x10804 : T.t parent) -> parent_to_js T.t_to_js x10804
    let (get_status : t -> [ `L_s42_fulfilled ]) =
      fun (x10808 : t) ->
        let x10809 = Ojs.get_prop_ascii (t_to_js x10808) "status" in
        match Ojs.string_of_js x10809 with
        | "fulfilled" -> `L_s42_fulfilled
        | _ -> assert false
    let (set_status : t -> [ `L_s42_fulfilled ] -> unit) =
      fun (x10810 : t) ->
        fun (x10811 : [ `L_s42_fulfilled ]) ->
          Ojs.set_prop_ascii (t_to_js x10810) "status"
            (match x10811 with
             | `L_s42_fulfilled -> Ojs.string_to_js "fulfilled")
    let (get_value : t -> T.t) =
      fun (x10812 : t) ->
        T.t_of_js (Ojs.get_prop_ascii (t_to_js x10812) "value")
    let (set_value : t -> T.t -> unit) =
      fun (x10813 : t) ->
        fun (x10814 : T.t) ->
          Ojs.set_prop_ascii (t_to_js x10813) "value" (T.t_to_js x10814)
  end
module WeakRef_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T WeakRef.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent = fun
      (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x10817 : Ojs.t) -> WeakRef.t_of_js __T_of_js x10817
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t = fun (type
      __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x10815 : __T WeakRef.t) -> WeakRef.t_to_js __T_to_js x10815
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10821 : Ojs.t) -> parent_of_js T.t_of_js x10821
    and t_to_js : t -> Ojs.t =
      fun (x10819 : T.t parent) -> parent_to_js T.t_to_js x10819
    let (deref : t -> T.t option) =
      fun (x10823 : t) ->
        Ojs.option_of_js T.t_of_js (Ojs.call (t_to_js x10823) "deref" [||])
    let (deref' : t -> T.t option) =
      fun (x10825 : t) ->
        Ojs.option_of_js T.t_of_js (Ojs.call (t_to_js x10825) "deref" [||])
    let (prototype : unit -> any parent) =
      fun () ->
        parent_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakRef")
             "prototype")
    let (create : ?target:T.t -> unit -> t) =
      fun ?target:(x10828 : T.t option) ->
        fun () ->
          t_of_js
            (Ojs.new_obj_arr (Ojs.get_prop_ascii Ojs.global "WeakRef")
               (let x10829 =
                  Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array") [||] in
                (match x10828 with
                 | Some x10830 ->
                     ignore (Ojs.call x10829 "push" [|(T.t_to_js x10830)|])
                 | None -> ());
                x10829))
    let (prototype' : unit -> any parent) =
      fun () ->
        parent_of_js any_of_js
          (Ojs.get_prop_ascii (Ojs.get_prop_ascii Ojs.global "WeakRef")
             "prototype")
    let (create' : T.t -> t) =
      fun (x10832 : T.t) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "WeakRef")
             [|(T.t_to_js x10832)|])
  end
module FinalizationRegistry_Make(T:Ojs.T) =
  struct
    type 'T parent = 'T FinalizationRegistry.t
    let rec parent_of_js : 'T . (Ojs.t -> 'T) -> Ojs.t -> 'T parent = fun
      (type __T) ->
      fun (__T_of_js : Ojs.t -> __T) ->
        fun (x10835 : Ojs.t) -> FinalizationRegistry.t_of_js __T_of_js x10835
    and parent_to_js : 'T . ('T -> Ojs.t) -> 'T parent -> Ojs.t = fun (type
      __T) ->
      fun (__T_to_js : __T -> Ojs.t) ->
        fun (x10833 : __T FinalizationRegistry.t) ->
          FinalizationRegistry.t_to_js __T_to_js x10833
    type t = T.t parent
    let rec t_of_js : Ojs.t -> t =
      fun (x10839 : Ojs.t) -> parent_of_js T.t_of_js x10839
    and t_to_js : t -> Ojs.t =
      fun (x10837 : T.t parent) -> parent_to_js T.t_to_js x10837
    let (register :
      t ->
        target:untyped_object ->
          heldValue:any -> ?unregisterToken:untyped_object -> unit -> unit)
      =
      fun (x10846 : t) ->
        fun ~target:(x10841 : untyped_object) ->
          fun ~heldValue:(x10842 : any) ->
            fun ?unregisterToken:(x10843 : untyped_object option) ->
              fun () ->
                ignore
                  (let x10847 = t_to_js x10846 in
                   Ojs.call (Ojs.get_prop_ascii x10847 "register") "apply"
                     [|x10847;((let x10844 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                ignore
                                  (Ojs.call x10844 "push"
                                     [|(untyped_object_to_js x10841)|]);
                                ignore
                                  (Ojs.call x10844 "push"
                                     [|(any_to_js x10842)|]);
                                (match x10843 with
                                 | Some x10845 ->
                                     ignore
                                       (Ojs.call x10844 "push"
                                          [|(untyped_object_to_js x10845)|])
                                 | None -> ());
                                x10844))|])
    let (unregister : t -> unregisterToken:untyped_object -> unit) =
      fun (x10849 : t) ->
        fun ~unregisterToken:(x10848 : untyped_object) ->
          ignore
            (Ojs.call (t_to_js x10849) "unregister"
               [|(untyped_object_to_js x10848)|])
    let (register' :
      t ->
        target:untyped_object ->
          heldValue:T.t -> ?unregisterToken:untyped_object -> unit -> unit)
      =
      fun (x10855 : t) ->
        fun ~target:(x10850 : untyped_object) ->
          fun ~heldValue:(x10851 : T.t) ->
            fun ?unregisterToken:(x10852 : untyped_object option) ->
              fun () ->
                ignore
                  (let x10856 = t_to_js x10855 in
                   Ojs.call (Ojs.get_prop_ascii x10856 "register") "apply"
                     [|x10856;((let x10853 =
                                  Ojs.new_obj
                                    (Ojs.get_prop_ascii Ojs.global "Array")
                                    [||] in
                                ignore
                                  (Ojs.call x10853 "push"
                                     [|(untyped_object_to_js x10850)|]);
                                ignore
                                  (Ojs.call x10853 "push"
                                     [|(T.t_to_js x10851)|]);
                                (match x10852 with
                                 | Some x10854 ->
                                     ignore
                                       (Ojs.call x10853 "push"
                                          [|(untyped_object_to_js x10854)|])
                                 | None -> ());
                                x10853))|])
    let (unregister' : t -> unregisterToken:untyped_object -> unit) =
      fun (x10858 : t) ->
        fun ~unregisterToken:(x10857 : untyped_object) ->
          ignore
            (Ojs.call (t_to_js x10858) "unregister"
               [|(untyped_object_to_js x10857)|])
    let (prototype : unit -> t) =
      fun () ->
        t_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             "prototype")
    let (create : (any -> unit) -> t) =
      fun (x10859 : any -> unit) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             [|(Ojs.fun_to_js 1
                  (fun (x10860 : Ojs.t) -> x10859 (any_of_js x10860)))|])
    let (prototype' : unit -> any parent) =
      fun () ->
        parent_of_js any_of_js
          (Ojs.get_prop_ascii
             (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             "prototype")
    let (create' : (T.t -> unit) -> t) =
      fun (x10862 : T.t -> unit) ->
        t_of_js
          (Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "FinalizationRegistry")
             [|(Ojs.fun_to_js 1
                  (fun (x10863 : Ojs.t) -> x10862 (T.t_of_js x10863)))|])
  end
let (nan : unit -> float) =
  fun () -> Ojs.float_of_js (Ojs.get_prop_ascii Ojs.global "NaN")
let (infinity : unit -> float) =
  fun () -> Ojs.float_of_js (Ojs.get_prop_ascii Ojs.global "Infinity")
let (eval : string -> any) =
  fun (x10864 : string) ->
    any_of_js (Ojs.call Ojs.global "eval" [|(Ojs.string_to_js x10864)|])
let (parseInt : string:string -> ?radix:float -> unit -> float) =
  fun ~string:(x10865 : string) ->
    fun ?radix:(x10866 : float option) ->
      fun () ->
        Ojs.float_of_js
          (let x10869 = Ojs.global in
           Ojs.call (Ojs.get_prop_ascii x10869 "parseInt") "apply"
             [|x10869;((let x10867 =
                          Ojs.new_obj (Ojs.get_prop_ascii Ojs.global "Array")
                            [||] in
                        ignore
                          (Ojs.call x10867 "push"
                             [|(Ojs.string_to_js x10865)|]);
                        (match x10866 with
                         | Some x10868 ->
                             ignore
                               (Ojs.call x10867 "push"
                                  [|(Ojs.float_to_js x10868)|])
                         | None -> ());
                        x10867))|])
let (parseFloat : string -> float) =
  fun (x10870 : string) ->
    Ojs.float_of_js
      (Ojs.call Ojs.global "parseFloat" [|(Ojs.string_to_js x10870)|])
let (isNaN : float -> bool) =
  fun (x10871 : float) ->
    Ojs.bool_of_js (Ojs.call Ojs.global "isNaN" [|(Ojs.float_to_js x10871)|])
let (isFinite : float -> bool) =
  fun (x10872 : float) ->
    Ojs.bool_of_js
      (Ojs.call Ojs.global "isFinite" [|(Ojs.float_to_js x10872)|])
let (decodeURI : string -> string) =
  fun (x10873 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "decodeURI" [|(Ojs.string_to_js x10873)|])
let (decodeURIComponent : string -> string) =
  fun (x10874 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "decodeURIComponent" [|(Ojs.string_to_js x10874)|])
let (encodeURI : string -> string) =
  fun (x10875 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "encodeURI" [|(Ojs.string_to_js x10875)|])
let (encodeURIComponent :
  [ `Number of float  | `String of string  | `Boolean of bool ] Primitive.t
    -> string)
  =
  fun
    (x10876 :
      [ `Number of float  | `String of string  | `Boolean of bool ]
        Primitive.t)
    ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "encodeURIComponent"
         [|(Primitive.t_to_js
              (fun
                 (x10877 :
                   [ `Number of float  | `String of string 
                   | `Boolean of bool ])
                 ->
                 match x10877 with
                 | `Number x10878 -> Ojs.float_to_js x10878
                 | `String x10879 -> Ojs.string_to_js x10879
                 | `Boolean x10880 -> Ojs.bool_to_js x10880) x10876)|])
let (escape : string -> string) =
  fun (x10881 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "escape" [|(Ojs.string_to_js x10881)|])
let (unescape : string -> string) =
  fun (x10882 : string) ->
    Ojs.string_of_js
      (Ojs.call Ojs.global "unescape" [|(Ojs.string_to_js x10882)|])
let (proxy : unit -> ProxyConstructor.t) =
  fun () -> ProxyConstructor.t_of_js (Ojs.get_prop_ascii Ojs.global "Proxy")
